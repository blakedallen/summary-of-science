<PAPER>
  <S sid="0">Detecting Text Similarity Over Short Passages: Exploring Linguistic Feature Combinations Via Machine Learning</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We present a new composite similarity metric that combines information from multiple linguistic indicators to measure semantic distance between pairs of small textual units.</S>
    <S sid="2" ssid="2">Several potential features are investigated and an optimal combination is selected via machine learning.</S>
    <S sid="3" ssid="3">We discuss a more restrictive definition of similarity than traditional, document-level and information retrieval-oriented, notions of similarity, and motivate it by showing its relevance to the multi-document text summarization problem.</S>
    <S sid="4" ssid="4">Results from our system are evaluated against standard information retrieval techniques, establishing that the new method is more effective in identifying closely related textual units.</S>
    <S sid="5" ssid="5">1 Research Goals In this paper, we focus on the problem of detecttwo small textual units (paragraphor sentence-sized) contain common information, as a necessary step towards extracting such common information and constructing thematic groups of text units across multiple documents. pieces of text has many applications (e.g., summarization, information retrieval, text clustering).</S>
    <S sid="6" ssid="6">Most research in this area has centered on detecting similarity between documents [Willet 1988], similarity between a query and a document [Salton 1989] or between a query and a segment of a document [Callan 1994].</S>
    <S sid="7" ssid="7">While effective techniques have been developed for document clustering and classification which depend on inter-document similarity measures, these techniques mostly on shared words, or occasionally collocations of words [Smeaton 1992].</S>
    <S sid="8" ssid="8">When larger units of text are compared, overlap may be sufficient to detect similarity; but when the units of text are small, simple surface matching of words and phrases is less likely to succeed since the number of potential matches is smaller.</S>
    <S sid="9" ssid="9">Our task differs from typical text matching applications not only in the smaller size of the text units compared, but also in its overall goal.</S>
    <S sid="10" ssid="10">Our notion of similarity is more restrictive than topical similarity&#8212;we provide a detailed definition in the next section.</S>
    <S sid="11" ssid="11">We aim to recover small textual units from a of documents so that each text unit within a set describes the same action. syswhich is fully implemented, is motivated by the need for determining similarity between small pieces of text across documents that potentially span different topics during multi-document summarization.</S>
    <S sid="12" ssid="12">It serves as the first component of a domain-independent multisummarization system which generates a through reformulation [Barzilay al. by combining information from these similar text passages.</S>
    <S sid="13" ssid="13">We address concerns of sparse data and the narrower than topical definition of similarity by exploring several linguistic features, in addition to shared words or collocations, as indicators of similarity.</S>
    <S sid="14" ssid="14">Our include linked noun phrases, WordNet synonyms, and similar verbs.</S>
    <S sid="15" ssid="15">We also define comover pairs of features. provide an effective method for aggregating the feature values into a similarity measure using machine learning, and present results 203 on a manually annotated corpus of 10,345 pairs of compared paragraphs.</S>
    <S sid="16" ssid="16">Our new features, and especially the composite ones, are shown to outperform traditional techniques such as TF*IDF [Buckley 1985; Salton 1989] for determining similarity over small text units.</S>
    <S sid="17" ssid="17">2 Definition of Similarity Similarity is a complex concept which has been widely discussed in the linguistic, philosophical, and information theory communities.</S>
    <S sid="18" ssid="18">For example, Frawley [1992] discusses all semantic typing in terms of two mechanisms: the detection of similarity and difference.</S>
    <S sid="19" ssid="19">Jackendoff [1983] argues that standard semantic relations such as synonymy, paraphrase, redundancy, and entailment all result from judgments of likeness whereas antonymy, contradiction, and inconsistency derive from judgments of difference.</S>
    <S sid="20" ssid="20">Losee [1998] reviews notions of similarity and their impact on information retrieval techniques.</S>
    <S sid="21" ssid="21">For our task, we define two text units as similar if they share the same focus on a common concept, actor, object, or action.</S>
    <S sid="22" ssid="22">In addition, the common actor or object must perform or be subjected to the same action, or be the subject of the same description.</S>
    <S sid="23" ssid="23">For example, Figure 1 shows three input text fragments (paragraphs) taken from the TDT pilot corpus (see Section 5.1), all from the same topic on the forced landing of a U.S. helicopter in North Korea.</S>
    <S sid="24" ssid="24">We consider units (a) and (b) in Figure 1 to be similar, because they both focus on the same event (loss of contact) with the same primary participant (the helicopter).</S>
    <S sid="25" ssid="25">On the other hand, unit (c) in Figure 1 is not similar to either (a) or (b).</S>
    <S sid="26" ssid="26">Although all three refer to a helicopter, the primary focus in (c) is on the emergency landing rather than the loss of contact.</S>
    <S sid="27" ssid="27">We discuss an experimental validation of our similarity definition in Section 5.2, after we introduce the corpus we use in our experiments.</S>
    <S sid="28" ssid="28">3 Related Work Although there is related empirical research on determining text similarity, primarily in the information retrieval community, there are two major differences between the goals of this earlier work and the problem we address in this (a) An OH-58 helicopter, carrying a crew of two, was on a routine training orientation when contact was lost at about 11:30 a.m. Saturday (9:30 p.m. EST Friday).</S>
    <S sid="29" ssid="29">(b) &amp;quot;There were two people on board,&amp;quot; said Bacon.</S>
    <S sid="30" ssid="30">&amp;quot;We lost radar contact with the helicopter about 9:15 EST (0215 GMT).&amp;quot; (c) An OH-58 U.S. military scout helicopter made an emergency landing in North Korea at about 9.15 p.m. EST Friday (0215 GMT Saturday), the Defense Department said.</S>
    <S sid="31" ssid="31">Figure 1: Input text units (from the TDT pilot corpus, topic 11). paper.</S>
    <S sid="32" ssid="32">First, the notion of similarity as defined in the previous section is more restrictive than the traditional definition of similarity [Anderberg 1973; Willet 1988].</S>
    <S sid="33" ssid="33">Standard notions of similarity generally involve the creation of a vector or profile of characteristics of a text fragment, and then computing on the basis of frequencies the distance between vectors to determine conceptual distance [Salton and Buckley 1988; Salton 19891.</S>
    <S sid="34" ssid="34">Features typically include stemmed words although sometimes multi-word units and collocations have been used [Smeaton 1992], as well as typological characteristics, such as thesaural features.</S>
    <S sid="35" ssid="35">The distance between vectors for one text (usually a query) and another (usually a document) then determines closeness or similarity [van Rijsbergen 1979].</S>
    <S sid="36" ssid="36">In some cases, the texts are represented as vectors of sparse n-grams of word occurrences and learning is applied over those vectors [Schapire and Singer 1999].</S>
    <S sid="37" ssid="37">But since our definition of similarity is oriented to the small-segment goal, we make more fine-grained distinctions.</S>
    <S sid="38" ssid="38">Thus, a set of passages that would probably go into the same class by standard IR criteria would be further separated by our methods.</S>
    <S sid="39" ssid="39">Second, we have developed a method that functions over pairs of small units of text, so the size of the input text to be compared is different.</S>
    <S sid="40" ssid="40">This differs from document-to-document 204 or query-to-document comparison.</S>
    <S sid="41" ssid="41">A closely related problem is that of matching a query to the relevant segment from a longer document [Callan 1994; Kaszkiel and Zobel 1998], which primarily involves determining which segment of a longer document is relevant to a query, whereas our focus is on which segments are similar to each other.</S>
    <S sid="42" ssid="42">In both cases, we have less data to compare, and thus have to explore additional or more informative indicators of similarity.</S>
    <S sid="43" ssid="43">4 Methodology compute a feature vector over a pair of texunits, where features are either of one characteristic, or consisting of pairs of primitive features.</S>
    <S sid="44" ssid="44">4.1 Primitive Features draw on a number of linguistic approaches to text analysis, and are based on both single words and simplex noun phrases (head preceded by optional premodifiers with no embedded recursion).</S>
    <S sid="45" ssid="45">Each of these syntactic, and semantic several variations.</S>
    <S sid="46" ssid="46">We thus consider following potential matches between text units: Word co-occurrence, sharing a single word between text units.</S>
    <S sid="47" ssid="47">Variations of this feature restrict matching to cases where the parts of speech of the words also match, or relax it to cases where just the stems of the two words are identical.</S>
    <S sid="48" ssid="48">Matching noun phrases. the LINKIT tool [Wacholder 1998] to identify simplex noun phrases and match those that share the same head.</S>
    <S sid="49" ssid="49">WordNet synonyms. provides sense information, placing in sets of synonyms match words that appear in the same synset.</S>
    <S sid="50" ssid="50">Variations on this feature restrict the words considered to a specific part-of-speech class.</S>
    <S sid="51" ssid="51">&#8226; Common semantic classes for verbs.</S>
    <S sid="52" ssid="52">Levin's [1993] semantic classes for verbs have been found to be useful for determining document type and text similarity [Klavans and Kan 1998].</S>
    <S sid="53" ssid="53">We match two verbs that share the same semantic class.</S>
    <S sid="54" ssid="54">Shared proper nouns. nouns are using the set [Abal.</S>
    <S sid="55" ssid="55">Variations on proper noun matching include restricting the proper noun type to a person, place, or an organization subcategories are also extracted entity finder).</S>
    <S sid="56" ssid="56">In order to normalize for text length and frequency effects, we experimented with two types of optional normalization of feature values.</S>
    <S sid="57" ssid="57">The first is for text length (measured in words), where each feature value is normalized by the of the textual units in the pair. for of textual units feature values are divided by: length(A) x length(B) (1) This operation removes potential bias in favor longer text The second type of normalization we examined was based on the relative frequency of occurrence of each primitive.</S>
    <S sid="58" ssid="58">This is motivated the fact that infrequently primiare likely to have higher impact on similarity than primitives which match more frequently.</S>
    <S sid="59" ssid="59">We perform this normalization in manner similar to the IDF part of Every primitive element is associated with a value which is the number of textual units in which the primitive appeared in the corpus.</S>
    <S sid="60" ssid="60">For a primitive element which compares single words, this is the number of textual units which contain that word in the corpus; for a noun phrase, this is the number of textual units that contain noun phrases that share the same head; and similarly for other primitive types.</S>
    <S sid="61" ssid="61">We multiply each feature's value by: number of textual units (2) Number of textual units containing this primitive Since each normalization is optional, there are four variations for each primitive feature.</S>
    <S sid="62" ssid="62">4.2 Composite Features addition to the above that compare single items from each text unit, we which combine pairs of primitive features.</S>
    <S sid="63" ssid="63">Composite features are defined by placing different types of restrictions on the participating primitive features: 205 Figure 2: A composite feature over word primitives with a restriction on order would count the pair &amp;quot;two&amp;quot; and &amp;quot;contact&amp;quot; as a match because they occur with the same relative order in both textual units.</S>
    <S sid="64" ssid="64">An 011-58 helicopter, carrying a crew of orientation when c ntac as lost (9:30 p.m. EST Friday).</S>
    <S sid="65" ssid="65">(a) was on a routine training out 11:30 a.m. Saturday (b) &amp;quot;There were[twolpeople on board,&amp;quot; said Bacon.</S>
    <S sid="66" ssid="66">&amp;quot;We lost radar with the helicopter about 9:15 EST (0215 GMT).&amp;quot; Figure 3: A composite feature over word primitives with a restriction on distance would match on the pair &amp;quot;lost&amp;quot; and &amp;quot;contact&amp;quot; because they occur within two words of each other in both textual units.</S>
    <S sid="67" ssid="67">:0}145theligoPterjearryinga crew of two, was on a routine training (a) rientation when contact was ft t about 11:30 a.m. Saturday ('10 p.m. EST Friday).</S>
    <S sid="68" ssid="68">(b) &amp;quot;T ere were two people on board,&amp;quot; said Bacon.</S>
    <S sid="69" ssid="69">&amp;quot;Wetradar contact with th.elielico ter bout 9:15 EST (0215 GMT).&amp;quot; Figure 4: A composite feature with restrictions on the primitives' type.</S>
    <S sid="70" ssid="70">One primitive must be a matching simplex noun phrase (in this case, a helicopter), while the other primitive must be a matching verb (in this case, &amp;quot;lost&amp;quot;.)</S>
    <S sid="71" ssid="71">The example shows a pair of textual units where this composite feature detects a valid match.</S>
    <S sid="72" ssid="72">An 011-58 helicopter, carrying a crew of two, was on a routine training (a) orientation when vas Li t about 11:30 am.</S>
    <S sid="73" ssid="73">Saturday (9:30 p.m. EST Friday).</S>
    <S sid="74" ssid="74">(b) &amp;quot;There were two people on board,&amp;quot; said Bacon.</S>
    <S sid="75" ssid="75">&amp;quot;W with the helicopter about 9:15 EST (0215 GMT).&amp;quot; Ordering. pairs of primitive elements are required to have the same relative order in both textual units (see Figure 2).</S>
    <S sid="76" ssid="76">Distance. pairs of primitive elements are required to occur within a certain distance in both textual units (see Figure 3).</S>
    <S sid="77" ssid="77">The maximum distance between the primitive elements can vary as an additional parameter.</S>
    <S sid="78" ssid="78">A distance of one matches rigid collocations whereas a distance of five captures related primitives within a region of the text unit [Smeaton 1992; Smadja 1993].</S>
    <S sid="79" ssid="79">Primitive. element of the pair of primitive elements can be restricted to a specific primitive, allowing more expressiveness in the composite features.</S>
    <S sid="80" ssid="80">For example, we can restrict one of the primitive features to be a simplex noun phrase and the other to be a verb; then, two noun phrases, one from each text unit, must match according to the rule for matching simplex noun phrases (i.e., sharing the same head), and two verbs must match according to the rule for verbs (i.e., sharthe same semantic class); see Figure This particular combination loosely approximates grammatical relations, e.g., matching subject-verb pairs.</S>
    <S sid="81" ssid="81">'Verbs can also be matched by the first (and more reof Section 4.1, namely requiring that their stemmed forms be identical.</S>
    <S sid="82" ssid="82">206 Since these restrictions can be combined, many different composite features can be defined, although our empirical results indicate that the most successful tend to include a distance constraint.</S>
    <S sid="83" ssid="83">As we put more restrictions on a composite feature, the fewer times it occurs in the corpus; however, some of the more restrictive features are most effective in determining similarity.</S>
    <S sid="84" ssid="84">Hence, there is a balance between the discriminatory power of these features and applicability to number of cases. features are normalized features are (i.e., for text unit length and for frequency of occurrence).</S>
    <S sid="85" ssid="85">This type of normalization also uses equation (2) but averages the normalization values of each primitive in the composite feature.</S>
    <S sid="86" ssid="86">4.3 Learning a Classifier For each pair of text units, we compute a vector of primitive and composite feature values.</S>
    <S sid="87" ssid="87">To determine whether the units match overall, we employ a machine learning algorithm, RIP- PER [Cohen 1996], a widely used and effective rule induction system.</S>
    <S sid="88" ssid="88">RIPPER is trained over a corpus of manually marked pairs of units; we discuss the specifics of our corpus and of the annotation process in the next session.</S>
    <S sid="89" ssid="89">We experwith varying RIPPER's ratio, measures the cost of a false positive relative to that of a false negative (where we view &amp;quot;similar&amp;quot; as the positive class), and thus controls the relative weight of precision versus recall.</S>
    <S sid="90" ssid="90">This is an important step in dealing with the sparse data problem; most text units are not similar, given our restrictive definition, and thus positive instances are rare.</S>
    <S sid="91" ssid="91">5 Results 5.1 The Evaluation Corpus For evaluation, we use a set of articles already classified into topical subsets which we obtained from the Reuters part of the 1997 pilot Topic Detection and Tracking (TDT) corpus.</S>
    <S sid="92" ssid="92">The TDT corpus, developed by NIST and DARPA, is a collection of 16,000 news articles from Reuters and CNN where many of the articles and transcripts have been manually grouped into 25 categories each of which corresponds a single event (see //morph. ldc edu/Catalog/LDC98T25 .html). the Reuters part of the corpus, we selected five of the larger categories and extracted all articles assigned to them from several randomly chosen days, for a total of 30 articles.</S>
    <S sid="93" ssid="93">Since paragraphs in news stories tend to be short&#8212;typically one or two sentences&#8212;in this study we use paragraphs as our small text units, although sentences would also be a possibility.</S>
    <S sid="94" ssid="94">In total, we have 264 text units and 10,345 comparisons between units.</S>
    <S sid="95" ssid="95">As comparisons are made between all pairs of paragraphs from the same topic, the total number of comparisons is equal to 2 the number of paragraphs in all selected articles from topical category i.</S>
    <S sid="96" ssid="96">Training of our machine learning component was done by three-fold cross-validation, ransplitting the pairs paragraphs into three (almost) equally-sized subsets.</S>
    <S sid="97" ssid="97">In each of the three runs, two of these subsets were used for training and one for testing.</S>
    <S sid="98" ssid="98">To create a reference standard, the entire collection of 10,345 paragraph pairs was marked for by two reviewers who were given definition and detailed instructions.</S>
    <S sid="99" ssid="99">Each reindependently marked each paragraphs as similar or not similar.</S>
    <S sid="100" ssid="100">Subsequently, the two reviewers jointly examined cases where was disagreement, discussed reasons, reconciled the differences.</S>
    <S sid="101" ssid="101">5.2 Experimental Validation of the In order to independently validate our definiof similarity, we performed additional experiments.</S>
    <S sid="102" ssid="102">In the first, we asked three addijudges to determine a ransample 40 paragraph pairs.</S>
    <S sid="103" ssid="103">High agreement between judges would indicate that our definition of similarity reflects an objective reality and can be mapped unambiguously to an operational procedure for marking text units as similar or not.</S>
    <S sid="104" ssid="104">At the same time, it would also validate the judgments between text units that we use for our experiments (see Section 5.1). this task, judges were given opportuprovide reasons for claiming similarity or dissimilarity, and comments on the task were for future analysis. three additional 207 judges agreed with the manually marked and standardized corpus on 97.6% of the comparisons.</S>
    <S sid="105" ssid="105">Unfortunately, approximately 97% (depending on the specific experiment) of the comparisons in both our model and the subsequent validation experiment receive the value &amp;quot;not similar&amp;quot;.</S>
    <S sid="106" ssid="106">This large percentage is due to our finegrained notion of similarity, and is parallel to happens in randomly sampled collections, since in that case most documents will not be relevant to any given query.</S>
    <S sid="107" ssid="107">Nevertheless, we can account for the high probability of inter-reviewer agreement expected by chance, 0.97.0.97+ (1 &#8212;0.97)- (1-0.97) --- 0.9418, by referring to the kappa statistic [Cohen 1960; Carletta 1996].</S>
    <S sid="108" ssid="108">The kappa statistic is defined as PA PO K &#8212; the probability that two reviewers agree in practice, and Po is the probability that they would agree solely by chance.</S>
    <S sid="109" ssid="109">In our case, 0.9418, and = indicating that the observed agreement by the is indeed If Po is estimated from the particular sample used in this experiment rather than from our entire corpus, it would be only 0.9, producing a value of 0.76 In addition to this validation experiment that used randomly sampled pairs of paragraphs (and reflected the disproportionate rate of occurrence of dissimilar pairs), we performed a balanced experiment by randomly selecting 50 of the dissimilar pairs and 50 of the similar pairs, in a manner that guaranteed generation an independent Pairs in this subset were rated for similarity by two additional independent reviewers, who agreed on their decisions 91% of the time, versus 50% expected chance; in this case, = Thus, we feel confident in the reliability of our annotation is always between 0 and 1, with 0 indicating no better agreement than expected by chance and 1 indicating perfect agreement. guarantee independence, pairs of paragraphs were randomly selected for inclusion in the sample a pair (A, immediately rejected if there were paragraphs Xi, , X.n. for n &gt; 0 such that all (X1, X2), .</S>
    <S sid="110" ssid="110">.</S>
    <S sid="111" ssid="111">.</S>
    <S sid="112" ssid="112">, , 13) already been included in the sample. process, and can use the annotated corpus to assess the performance of our similarity measure and compare it to measures proposed earlier in the information retrieval literature.</S>
    <S sid="113" ssid="113">5.3 Performance Comparisons We compare the performance of our system to three other methods.</S>
    <S sid="114" ssid="114">First, we use standard TF*IDF, a method that with various alterations, remains at the core of many information retrieval and text matching systems [Salton and Buckley 1988; Salton 1989].</S>
    <S sid="115" ssid="115">We compute the total frequency (TF) of words in each text unit.</S>
    <S sid="116" ssid="116">We also compute the number of units each word appears in in our training set (DF, or document frequency).</S>
    <S sid="117" ssid="117">Then each text unit is represented as a vector of TF*IDF scores calculated as Similarity between text units is measured by the cosine of the angle between the corresponding two vectors (i.e., the normalized inner product of the two vectors).</S>
    <S sid="118" ssid="118">A further cutoff point is selected to convert similarities to hard decisions of &amp;quot;similar&amp;quot; or &amp;quot;not similar&amp;quot;; different cutoffs result in different tradeoffs between recall and precision.</S>
    <S sid="119" ssid="119">Second, we compare our method against a standard, widely available information retrieval system developed at Cornell University, [Buckley SMART utilizes a modified TF*IDF measure (ATC) plus stemming and a fairly sizable stopword list.</S>
    <S sid="120" ssid="120">Third, we use as a baseline method the default selection of the most frequent category, i.e., &amp;quot;not similar&amp;quot;.</S>
    <S sid="121" ssid="121">While this last method cannot be effectively used to identify similar paragraphs, it offers a baseline for the overall accuracy of any more sophisticated technique for this task.</S>
    <S sid="122" ssid="122">5.4 Experimental Results Our system was able to recover 36.6% of the similar paragraphs with 60.5% precision, as shown in Table 1.</S>
    <S sid="123" ssid="123">In comparison, the unmodiobtained only 32.6% precision when recall is 39.1%, i.e., close to our system's recall; and only 20.8% recall at precision of 62.2%, comparable to our classifier's used version 11.0 of SMART, released in July 1992.</S>
    <S sid="124" ssid="124">&#8226; log number of units 208 Recall Precision Accuracy Machine learning over linguistic indicators 36.6% 60.5% 98.8% TF*IDF 30.0% 47.4% 97.2% SMART 29.1% 48.3% 97.1% Default choice (baseline) 0% undefined 97.5% Table 1: Experimental results for different similarity metrics.</S>
    <S sid="125" ssid="125">For comparison purposes, we list the average recall, precision, and accuracy obtained by TF*IDF and SMART at the two points in the precision-recall curve identified for each method in the text (i.e., the point where the method's precision is most similar to ours, and the point where its recall is most similar to ours). precision.</S>
    <S sid="126" ssid="126">SMART (in its default configuration) offered only a small improvement over the base TF*IDF implementation, and significantly underperformed our method, obtaining 34.1% precision at recall of 36.7%, and 21.5% recall at 62.4% precision.</S>
    <S sid="127" ssid="127">The default method of always marking a pair as dissimilar obtains of course 0% recall and undefined precision.</S>
    <S sid="128" ssid="128">Figure 5 illustrates the difference between our system and straight TF*IDF at different points of the precision-recall spectrum.</S>
    <S sid="129" ssid="129">When overall accuracy (total percentage of correct answers over both categories of similar and non-similar pairs) is considered, the numbers are much closer together: 98.8% for our approach; 96.6% and 97.8% for TF*IDF on the two P-R points mentioned for that method 96.5% and for SMART, again at the two P-R points mentioned for SMART and 97.5% for the default Nevertheless, since the challenge of identifying sparsely occurring similar small text units is our goal, the accuracy measure and the baseline technique of classifying everything as not similar are included only for reference but do tests of significance cannot be performed for cmnparing these values, since paragraphs appear in multiple comparisons and consequently the comparisons are not independent.</S>
    <S sid="130" ssid="130">Figure 5: Precision-recall graph comparing our using line with squares) versus TF*IDF (dotted line with triangles). not reflect our task.</S>
    <S sid="131" ssid="131">6 Analysis and Discussion of Feature Performance We computed statistics on how much each feature helps in identifying similarity, summarized in Table 2.</S>
    <S sid="132" ssid="132">Primitive features are named acto the type of the feature (e.g., the feature that counts the number of matching verbs according to exact matches).</S>
    <S sid="133" ssid="133">Composite feature names indicate the restrictions applied to primitives.</S>
    <S sid="134" ssid="134">For example, the composite fea- &lt; a pair of matching primitives to occur within a relative distance of four words.</S>
    <S sid="135" ssid="135">If the composite feature also restricts the types of the primitives in the pair, the name of the restricting primitive feature is added to the composite feature name.</S>
    <S sid="136" ssid="136">For exthe feature named Distance &lt; 5 requires one member of the pair to be a verb and the relative distance between the primitives to be at most five.</S>
    <S sid="137" ssid="137">The second column in Table 2 shows whether the feature value has been normalized accordto its overall while the third column indicates the actual threshold used in decisions assuming that only this feature is used for clas- The fourth column shows the applicathat feature, that is, the percentage of results reported in Table 2 include our first norstep that accounts for the difference in length of text units.</S>
    <S sid="138" ssid="138">209 Feature Name Normalized?</S>
    <S sid="139" ssid="139">Threshold Applicability Recall Precision Any word Yes 0.360 2.2% 31.4% 41.8% 0.505 16.7% 75.4% Noun Yes 0.150 8.1% 43.2% 15.9% 0.275 1.5% 20.9% 37.0% Proper noun Yes 0.200 0.2% 2.0% 30.8% Verb No 0.775 ' 10.6% 19.7% 1.6% Simplex NP Yes 0.150 5.7% 35.5% 18.6% 0.275 2.7% 10.1% 44.6% 0.350 0.7% 3.7% 69.2% Semantic class of verbs No 0.875 0.1% 2.0% 3.4% WordNet Yes 0.250 5,4% 4.1% 2.3% Distance &lt; 2 Yes 0.075 4.7% 24.9% 15.7% Distance &lt; 3 Yes 0.250 0.5% 10.2% 55.6% Distance &lt; 4 Yes 0.275 1.9% 14.6% 50.0% Distance &lt; 5 Yes 0.200 1.9% 22.4% 53.4% Order Distance &lt; 5 Yes 0.200 1.5% 20.4% 40.7% Noun Distance &lt; 5 Yes 0.175 1.9% 21.2% 31.9% Verb Distance &lt; 5 Yes 0.200 0.3% 7.3% 66.7% No 0.850 0.6% 11.0% 56.3% Table 2: Statistics for a selected subset of features.</S>
    <S sid="140" ssid="140">Performance measures are occasionally given multiple times for the same feature and normalization option, highlighting the effect of different decision thresholds. paragraph pairs for which this feature would apply (i.e., have a value over the specified threshold).</S>
    <S sid="141" ssid="141">Finally, the fifth and sixth columns show the recall and precision on identifying similar paragraphs for each independent feature.</S>
    <S sid="142" ssid="142">Note that some features have low applicability over the entire corpus, but target the hard-to-find similar pairs, resulting in significant gains in recall and precision.</S>
    <S sid="143" ssid="143">Table 2 presents a selected subset of primitive and composite features in order to demonstrate our results.</S>
    <S sid="144" ssid="144">For example, it was not surprising to observe that the most effective primitive feain determining similarity are word, NP, other primitives as not as effective independently.</S>
    <S sid="145" ssid="145">This is to be expected since nouns name objects, entities, and concepts, and frequently exhibit more sense constancy.</S>
    <S sid="146" ssid="146">In contrast, verbs are functions and tend to shift senses in a more fluid fashion depending on context.</S>
    <S sid="147" ssid="147">Furthermore, our technique does not label phrasal verbs (e.g. look up, look out, look over, look for, etc.</S>
    <S sid="148" ssid="148">), which are a major source of verbal ambiguity in English.</S>
    <S sid="149" ssid="149">Whereas primitive features viewed independently might not have a directly visible effect on identifying similarity, when used in composite features they lead to some novel results.</S>
    <S sid="150" ssid="150">The pronounced case of this is for the composite feature Distance &lt; can help identify similarity effectively, as seen in Table 2.</S>
    <S sid="151" ssid="151">This composite feature approximates verb-argument and verb-collocation relations, which are strong indicators of similarity.</S>
    <S sid="152" ssid="152">At the same time, the more restrictive a feature is, the fewer occurrences of that feature appear in the training set.</S>
    <S sid="153" ssid="153">This suggests that we could consider adding additional features suggested by current results in order to further refine and improve our similarity identification algorithm.</S>
    <S sid="154" ssid="154">7 Conclusion and Future Work We have presented a new method to detect similarity between small textual units, which combines primitive and composite features using machine learning.</S>
    <S sid="155" ssid="155">We validated our similarity definition using human judges, applied 210 our method to a substantial number of paragraph pairs from news articles, and compared results to baseline and standard information retrieval techniques.</S>
    <S sid="156" ssid="156">Our results indicate that our method outperforms the standard techniques for detecting similarity, and the system has been successfully integrated into a larger multipledocument summarization system [McKeown et We are currently working on incorporating a clustering algorithm in order to give as output a set of textual units which are mutually similar rather than just pairwise similar.</S>
    <S sid="157" ssid="157">Future work includes testing on textual units of different size, comparing with additional techniques proposed for document similarity in the information retrieval and computational linguistics literature, and extending the feature set to incorporate other types of linguistic information in the statistical learning method.</S>
    <S sid="158" ssid="158">Acknowledgments We are grateful to Regina Barzilay, Hongyan Jing, Kathy McKeown, Shimei Pan, and Yoram Singer for numerous discussions of earlier versions of this paper and for their help with setting up and running RIPPER and SMART.</S>
    <S sid="159" ssid="159">This research has been supported in part by an NSF STIMULATE grant, IRI-96-1879.</S>
    <S sid="160" ssid="160">Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of the National Science Foundation.</S>
  </ABSTRACT>
  <SECTION title="1 Research Goals" number="1">
    <S sid="161" ssid="1">In this paper, we focus on the problem of detecting whether two small textual units (paragraphor sentence-sized) contain common information, as a necessary step towards extracting such common information and constructing thematic groups of text units across multiple documents.</S>
    <S sid="162" ssid="2">Identifying similar pieces of text has many applications (e.g., summarization, information retrieval, text clustering).</S>
    <S sid="163" ssid="3">Most research in this area has centered on detecting similarity between documents [Willet 1988], similarity between a query and a document [Salton 1989] or between a query and a segment of a document [Callan 1994].</S>
    <S sid="164" ssid="4">While effective techniques have been developed for document clustering and classification which depend on inter-document similarity measures, these techniques mostly rely on shared words, or occasionally collocations of words [Smeaton 1992].</S>
    <S sid="165" ssid="5">When larger units of text are compared, overlap may be sufficient to detect similarity; but when the units of text are small, simple surface matching of words and phrases is less likely to succeed since the number of potential matches is smaller.</S>
    <S sid="166" ssid="6">Our task differs from typical text matching applications not only in the smaller size of the text units compared, but also in its overall goal.</S>
    <S sid="167" ssid="7">Our notion of similarity is more restrictive than topical similarity&#8212;we provide a detailed definition in the next section.</S>
    <S sid="168" ssid="8">We aim to recover sets of small textual units from a collection of documents so that each text unit within a given set describes the same action.</S>
    <S sid="169" ssid="9">Our system, which is fully implemented, is further motivated by the need for determining similarity between small pieces of text across documents that potentially span different topics during multi-document summarization.</S>
    <S sid="170" ssid="10">It serves as the first component of a domain-independent multidocument summarization system [McKeown et al. 1999] which generates a summary through text reformulation [Barzilay et al.</S>
    <S sid="171" ssid="11">1999] by combining information from these similar text passages.</S>
    <S sid="172" ssid="12">We address concerns of sparse data and the narrower than topical definition of similarity by exploring several linguistic features, in addition to shared words or collocations, as indicators of text similarity.</S>
    <S sid="173" ssid="13">Our primitive features include linked noun phrases, WordNet synonyms, and semantically similar verbs.</S>
    <S sid="174" ssid="14">We also define composite features over pairs of primitive features.</S>
    <S sid="175" ssid="15">We then provide an effective method for aggregating the feature values into a similarity measure using machine learning, and present results on a manually annotated corpus of 10,345 pairs of compared paragraphs.</S>
    <S sid="176" ssid="16">Our new features, and especially the composite ones, are shown to outperform traditional techniques such as TF*IDF [Buckley 1985; Salton 1989] for determining similarity over small text units.</S>
  </SECTION>
  <SECTION title="2 Definition of Similarity" number="2">
    <S sid="177" ssid="1">Similarity is a complex concept which has been widely discussed in the linguistic, philosophical, and information theory communities.</S>
    <S sid="178" ssid="2">For example, Frawley [1992] discusses all semantic typing in terms of two mechanisms: the detection of similarity and difference.</S>
    <S sid="179" ssid="3">Jackendoff [1983] argues that standard semantic relations such as synonymy, paraphrase, redundancy, and entailment all result from judgments of likeness whereas antonymy, contradiction, and inconsistency derive from judgments of difference.</S>
    <S sid="180" ssid="4">Losee [1998] reviews notions of similarity and their impact on information retrieval techniques.</S>
    <S sid="181" ssid="5">For our task, we define two text units as similar if they share the same focus on a common concept, actor, object, or action.</S>
    <S sid="182" ssid="6">In addition, the common actor or object must perform or be subjected to the same action, or be the subject of the same description.</S>
    <S sid="183" ssid="7">For example, Figure 1 shows three input text fragments (paragraphs) taken from the TDT pilot corpus (see Section 5.1), all from the same topic on the forced landing of a U.S. helicopter in North Korea.</S>
    <S sid="184" ssid="8">We consider units (a) and (b) in Figure 1 to be similar, because they both focus on the same event (loss of contact) with the same primary participant (the helicopter).</S>
    <S sid="185" ssid="9">On the other hand, unit (c) in Figure 1 is not similar to either (a) or (b).</S>
    <S sid="186" ssid="10">Although all three refer to a helicopter, the primary focus in (c) is on the emergency landing rather than the loss of contact.</S>
    <S sid="187" ssid="11">We discuss an experimental validation of our similarity definition in Section 5.2, after we introduce the corpus we use in our experiments.</S>
  </SECTION>
  <SECTION title="3 Related Work" number="3">
    <S sid="188" ssid="1">Although there is related empirical research on determining text similarity, primarily in the information retrieval community, there are two major differences between the goals of this earlier work and the problem we address in this (a) An OH-58 helicopter, carrying a crew of two, was on a routine training orientation when contact was lost at about 11:30 a.m. Saturday (9:30 p.m. EST Friday). paper.</S>
    <S sid="189" ssid="2">First, the notion of similarity as defined in the previous section is more restrictive than the traditional definition of similarity [Anderberg 1973; Willet 1988].</S>
    <S sid="190" ssid="3">Standard notions of similarity generally involve the creation of a vector or profile of characteristics of a text fragment, and then computing on the basis of frequencies the distance between vectors to determine conceptual distance [Salton and Buckley 1988; Salton 19891.</S>
    <S sid="191" ssid="4">Features typically include stemmed words although sometimes multi-word units and collocations have been used [Smeaton 1992], as well as typological characteristics, such as thesaural features.</S>
    <S sid="192" ssid="5">The distance between vectors for one text (usually a query) and another (usually a document) then determines closeness or similarity [van Rijsbergen 1979].</S>
    <S sid="193" ssid="6">In some cases, the texts are represented as vectors of sparse n-grams of word occurrences and learning is applied over those vectors [Schapire and Singer 1999].</S>
    <S sid="194" ssid="7">But since our definition of similarity is oriented to the small-segment goal, we make more fine-grained distinctions.</S>
    <S sid="195" ssid="8">Thus, a set of passages that would probably go into the same class by standard IR criteria would be further separated by our methods.</S>
    <S sid="196" ssid="9">Second, we have developed a method that functions over pairs of small units of text, so the size of the input text to be compared is different.</S>
    <S sid="197" ssid="10">This differs from document-to-document or query-to-document comparison.</S>
    <S sid="198" ssid="11">A closely related problem is that of matching a query to the relevant segment from a longer document [Callan 1994; Kaszkiel and Zobel 1998], which primarily involves determining which segment of a longer document is relevant to a query, whereas our focus is on which segments are similar to each other.</S>
    <S sid="199" ssid="12">In both cases, we have less data to compare, and thus have to explore additional or more informative indicators of similarity.</S>
  </SECTION>
  <SECTION title="4 Methodology" number="4">
    <S sid="200" ssid="1">We compute a feature vector over a pair of textual units, where features are either primitive, consisting of one characteristic, or composite, consisting of pairs of primitive features.</S>
    <S sid="201" ssid="2">Our features draw on a number of linguistic approaches to text analysis, and are based on both single words and simplex noun phrases (head nouns preceded by optional premodifiers but with no embedded recursion).</S>
    <S sid="202" ssid="3">Each of these morphological, syntactic, and semantic features has several variations.</S>
    <S sid="203" ssid="4">We thus consider the following potential matches between text units: identified using the ALEMBIC tool set [Aberdeen et al. 1995].</S>
    <S sid="204" ssid="5">Variations on proper noun matching include restricting the proper noun type to a person, place, or an organization (these subcategories are also extracted with ALEMBIC's named entity finder).</S>
    <S sid="205" ssid="6">In order to normalize for text length and frequency effects, we experimented with two types of optional normalization of feature values.</S>
    <S sid="206" ssid="7">The first is for text length (measured in words), where each feature value is normalized by the size of the textual units in the pair.</S>
    <S sid="207" ssid="8">Thus, for a pair of textual units A and B, the feature values are divided by: This operation removes potential bias in favor of longer text units.</S>
    <S sid="208" ssid="9">The second type of normalization we examined was based on the relative frequency of occurrence of each primitive.</S>
    <S sid="209" ssid="10">This is motivated by the fact that infrequently matching primitive elements are likely to have a higher impact on similarity than primitives which match more frequently.</S>
    <S sid="210" ssid="11">We perform this normalization in a manner similar to the IDF part of TF*IDF [Salton 1989].</S>
    <S sid="211" ssid="12">Every primitive element is associated with a value which is the number of textual units in which the primitive appeared in the corpus.</S>
    <S sid="212" ssid="13">For a primitive element which compares single words, this is the number of textual units which contain that word in the corpus; for a noun phrase, this is the number of textual units that contain noun phrases that share the same head; and similarly for other primitive types.</S>
    <S sid="213" ssid="14">We multiply each feature's value by: log Total number of textual units (2) Number of textual units containing this primitive Since each normalization is optional, there are four variations for each primitive feature.</S>
    <S sid="214" ssid="15">In addition to the above primitive features that compare single items from each text unit, we use composite features which combine pairs of primitive features.</S>
    <S sid="215" ssid="16">Composite features are defined by placing different types of restrictions on the participating primitive features: An 011-58 helicopter, carrying a crew of orientation when c ntac as lost (9:30 p.m. EST Friday). itive elements can be restricted to a specific primitive, allowing more expressiveness in the composite features.</S>
    <S sid="216" ssid="17">For example, we can restrict one of the primitive features to be a simplex noun phrase and the other to be a verb; then, two noun phrases, one from each text unit, must match according to the rule for matching simplex noun phrases (i.e., sharing the same head), and two verbs must match according to the rule for verbs (i.e., sharing the same semantic class); see Figure 4.1 This particular combination loosely approximates grammatical relations, e.g., matching subject-verb pairs.</S>
    <S sid="217" ssid="18">Since these restrictions can be combined, many different composite features can be defined, although our empirical results indicate that the most successful tend to include a distance constraint.</S>
    <S sid="218" ssid="19">As we put more restrictions on a composite feature, the fewer times it occurs in the corpus; however, some of the more restrictive features are most effective in determining similarity.</S>
    <S sid="219" ssid="20">Hence, there is a balance between the discriminatory power of these features and their applicability to a large number of cases.</S>
    <S sid="220" ssid="21">Composite features are normalized as primitive features are (i.e., for text unit length and for frequency of occurrence).</S>
    <S sid="221" ssid="22">This type of normalization also uses equation (2) but averages the normalization values of each primitive in the composite feature.</S>
    <S sid="222" ssid="23">For each pair of text units, we compute a vector of primitive and composite feature values.</S>
    <S sid="223" ssid="24">To determine whether the units match overall, we employ a machine learning algorithm, RIPPER [Cohen 1996], a widely used and effective rule induction system.</S>
    <S sid="224" ssid="25">RIPPER is trained over a corpus of manually marked pairs of units; we discuss the specifics of our corpus and of the annotation process in the next session.</S>
    <S sid="225" ssid="26">We experiment with varying RIPPER's loss ratio, which measures the cost of a false positive relative to that of a false negative (where we view &amp;quot;similar&amp;quot; as the positive class), and thus controls the relative weight of precision versus recall.</S>
    <S sid="226" ssid="27">This is an important step in dealing with the sparse data problem; most text units are not similar, given our restrictive definition, and thus positive instances are rare.</S>
  </SECTION>
  <SECTION title="5 Results" number="5">
    <S sid="227" ssid="1">For evaluation, we use a set of articles already classified into topical subsets which we obtained from the Reuters part of the 1997 pilot Topic Detection and Tracking (TDT) corpus.</S>
    <S sid="228" ssid="2">The TDT corpus, developed by NIST and DARPA, is a collection of 16,000 news articles from Reuters and CNN where many of the articles and transcripts have been manually grouped into 25 categories each of which corresponds to a single event (see http: //morph. ldc upenn. edu/Catalog/LDC98T25 .html).</S>
    <S sid="229" ssid="3">Using the Reuters part of the corpus, we selected five of the larger categories and extracted all articles assigned to them from several randomly chosen days, for a total of 30 articles.</S>
    <S sid="230" ssid="4">Since paragraphs in news stories tend to be short&#8212;typically one or two sentences&#8212;in this study we use paragraphs as our small text units, although sentences would also be a possibility.</S>
    <S sid="231" ssid="5">In total, we have 264 text units and 10,345 comparisons between units.</S>
    <S sid="232" ssid="6">As comparisons are made between all pairs of paragraphs from the same topic, the total number of comparisons is equal to 2 where Ni is the number of paragraphs in all selected articles from topical category i.</S>
    <S sid="233" ssid="7">Training of our machine learning component was done by three-fold cross-validation, randomly splitting the 10,345 pairs of paragraphs into three (almost) equally-sized subsets.</S>
    <S sid="234" ssid="8">In each of the three runs, two of these subsets were used for training and one for testing.</S>
    <S sid="235" ssid="9">To create a reference standard, the entire collection of 10,345 paragraph pairs was marked for similarity by two reviewers who were given our definition and detailed instructions.</S>
    <S sid="236" ssid="10">Each reviewer independently marked each pair of paragraphs as similar or not similar.</S>
    <S sid="237" ssid="11">Subsequently, the two reviewers jointly examined cases where there was disagreement, discussed reasons, and reconciled the differences.</S>
    <S sid="238" ssid="12">In order to independently validate our definition of similarity, we performed two additional experiments.</S>
    <S sid="239" ssid="13">In the first, we asked three additional judges to determine similarity for a random sample of 40 paragraph pairs.</S>
    <S sid="240" ssid="14">High agreement between judges would indicate that our definition of similarity reflects an objective reality and can be mapped unambiguously to an operational procedure for marking text units as similar or not.</S>
    <S sid="241" ssid="15">At the same time, it would also validate the judgments between text units that we use for our experiments (see Section 5.1).</S>
    <S sid="242" ssid="16">In this task, judges were given the opportunity to provide reasons for claiming similarity or dissimilarity, and comments on the task were logged for future analysis.</S>
    <S sid="243" ssid="17">The three additional judges agreed with the manually marked and standardized corpus on 97.6% of the comparisons.</S>
    <S sid="244" ssid="18">Unfortunately, approximately 97% (depending on the specific experiment) of the comparisons in both our model and the subsequent validation experiment receive the value &amp;quot;not similar&amp;quot;.</S>
    <S sid="245" ssid="19">This large percentage is due to our finegrained notion of similarity, and is parallel to what happens in randomly sampled IR collections, since in that case most documents will not be relevant to any given query.</S>
    <S sid="246" ssid="20">Nevertheless, we can account for the high probability of inter-reviewer agreement expected by chance, 0.97.0.97+ (1 &#8212;0.97)- (1-0.97) --- 0.9418, by referring to the kappa statistic [Cohen 1960; Carletta 1996].</S>
    <S sid="247" ssid="21">The kappa statistic is defined as where PA is the probability that two reviewers agree in practice, and Po is the probability that they would agree solely by chance.</S>
    <S sid="248" ssid="22">In our case, PA = 0.976, Po = 0.9418, and K = 0.5876, indicating that the observed agreement by the reviewers is indeed significant.2 If Po is estimated from the particular sample used in this experiment rather than from our entire corpus, it would be only 0.9, producing a value of 0.76 for K. In addition to this validation experiment that used randomly sampled pairs of paragraphs (and reflected the disproportionate rate of occurrence of dissimilar pairs), we performed a balanced experiment by randomly selecting 50 of the dissimilar pairs and 50 of the similar pairs, in a manner that guaranteed generation of an independent sample.3 Pairs in this subset were rated for similarity by two additional independent reviewers, who agreed on their decisions 91% of the time, versus 50% expected by chance; in this case, K = 0.82.</S>
    <S sid="249" ssid="23">Thus, we feel confident in the reliability of our annotation process, and can use the annotated corpus to assess the performance of our similarity measure and compare it to measures proposed earlier in the information retrieval literature.</S>
    <S sid="250" ssid="24">We compare the performance of our system to three other methods.</S>
    <S sid="251" ssid="25">First, we use standard TF*IDF, a method that with various alterations, remains at the core of many information retrieval and text matching systems [Salton and Buckley 1988; Salton 1989].</S>
    <S sid="252" ssid="26">We compute the total frequency (TF) of words in each text unit.</S>
    <S sid="253" ssid="27">We also compute the number of units each word appears in in our training set (DF, or document frequency).</S>
    <S sid="254" ssid="28">Then each text unit is represented as a vector of TF*IDF scores calculated as Similarity between text units is measured by the cosine of the angle between the corresponding two vectors (i.e., the normalized inner product of the two vectors).</S>
    <S sid="255" ssid="29">A further cutoff point is selected to convert similarities to hard decisions of &amp;quot;similar&amp;quot; or &amp;quot;not similar&amp;quot;; different cutoffs result in different tradeoffs between recall and precision.</S>
    <S sid="256" ssid="30">Second, we compare our method against a standard, widely available information retrieval system developed at Cornell University, SMART [Buckley 1985].4 SMART utilizes a modified TF*IDF measure (ATC) plus stemming and a fairly sizable stopword list.</S>
    <S sid="257" ssid="31">Third, we use as a baseline method the default selection of the most frequent category, i.e., &amp;quot;not similar&amp;quot;.</S>
    <S sid="258" ssid="32">While this last method cannot be effectively used to identify similar paragraphs, it offers a baseline for the overall accuracy of any more sophisticated technique for this task.</S>
    <S sid="259" ssid="33">Our system was able to recover 36.6% of the similar paragraphs with 60.5% precision, as shown in Table 1.</S>
    <S sid="260" ssid="34">In comparison, the unmodified TF*IDF approach obtained only 32.6% precision when recall is 39.1%, i.e., close to our system's recall; and only 20.8% recall at precision of 62.2%, comparable to our classifier's ilarity metrics.</S>
    <S sid="261" ssid="35">For comparison purposes, we list the average recall, precision, and accuracy obtained by TF*IDF and SMART at the two points in the precision-recall curve identified for each method in the text (i.e., the point where the method's precision is most similar to ours, and the point where its recall is most similar to ours). precision.</S>
    <S sid="262" ssid="36">SMART (in its default configuration) offered only a small improvement over the base TF*IDF implementation, and significantly underperformed our method, obtaining 34.1% precision at recall of 36.7%, and 21.5% recall at 62.4% precision.</S>
    <S sid="263" ssid="37">The default method of always marking a pair as dissimilar obtains of course 0% recall and undefined precision.</S>
    <S sid="264" ssid="38">Figure 5 illustrates the difference between our system and straight TF*IDF at different points of the precision-recall spectrum.</S>
    <S sid="265" ssid="39">When overall accuracy (total percentage of correct answers over both categories of similar and non-similar pairs) is considered, the numbers are much closer together: 98.8% for our approach; 96.6% and 97.8% for TF*IDF on the two P-R points mentioned for that method above; 96.5% and 97.6% for SMART, again at the two P-R points mentioned for SMART earlier; and 97.5% for the default baseline.5 Nevertheless, since the challenge of identifying sparsely occurring similar small text units is our goal, the accuracy measure and the baseline technique of classifying everything as not similar are included only for reference but do not reflect our task.</S>
  </SECTION>
  <SECTION title="6 Analysis and Discussion of Feature Performance" number="6">
    <S sid="266" ssid="1">We computed statistics on how much each feature helps in identifying similarity, summarized in Table 2.</S>
    <S sid="267" ssid="2">Primitive features are named according to the type of the feature (e.g., Verb for the feature that counts the number of matching verbs according to exact matches).</S>
    <S sid="268" ssid="3">Composite feature names indicate the restrictions applied to primitives.</S>
    <S sid="269" ssid="4">For example, the composite feature Distance &lt; restricts a pair of matching primitives to occur within a relative distance of four words.</S>
    <S sid="270" ssid="5">If the composite feature also restricts the types of the primitives in the pair, the name of the restricting primitive feature is added to the composite feature name.</S>
    <S sid="271" ssid="6">For example the feature named Verb Distance &lt; 5 requires one member of the pair to be a verb and the relative distance between the primitives to be at most five.</S>
    <S sid="272" ssid="7">The second column in Table 2 shows whether the feature value has been normalized according to its overall rarity6, while the third column indicates the actual threshold used in decisions assuming that only this feature is used for classification.</S>
    <S sid="273" ssid="8">The fourth column shows the applicability of that feature, that is, the percentage of multiple times for the same feature and normalization option, highlighting the effect of different decision thresholds. paragraph pairs for which this feature would apply (i.e., have a value over the specified threshold).</S>
    <S sid="274" ssid="9">Finally, the fifth and sixth columns show the recall and precision on identifying similar paragraphs for each independent feature.</S>
    <S sid="275" ssid="10">Note that some features have low applicability over the entire corpus, but target the hard-to-find similar pairs, resulting in significant gains in recall and precision.</S>
    <S sid="276" ssid="11">Table 2 presents a selected subset of primitive and composite features in order to demonstrate our results.</S>
    <S sid="277" ssid="12">For example, it was not surprising to observe that the most effective primitive features in determining similarity are Any word, Simplex NP, and Noun while other primitives such as Verb were not as effective independently.</S>
    <S sid="278" ssid="13">This is to be expected since nouns name objects, entities, and concepts, and frequently exhibit more sense constancy.</S>
    <S sid="279" ssid="14">In contrast, verbs are functions and tend to shift senses in a more fluid fashion depending on context.</S>
    <S sid="280" ssid="15">Furthermore, our technique does not label phrasal verbs (e.g. look up, look out, look over, look for, etc.</S>
    <S sid="281" ssid="16">), which are a major source of verbal ambiguity in English.</S>
    <S sid="282" ssid="17">Whereas primitive features viewed independently might not have a directly visible effect on identifying similarity, when used in composite features they lead to some novel results.</S>
    <S sid="283" ssid="18">The most pronounced case of this is for Verb, which, in the composite feature Verb Distance &lt; 5, can help identify similarity effectively, as seen in Table 2.</S>
    <S sid="284" ssid="19">This composite feature approximates verb-argument and verb-collocation relations, which are strong indicators of similarity.</S>
    <S sid="285" ssid="20">At the same time, the more restrictive a feature is, the fewer occurrences of that feature appear in the training set.</S>
    <S sid="286" ssid="21">This suggests that we could consider adding additional features suggested by current results in order to further refine and improve our similarity identification algorithm.</S>
  </SECTION>
  <SECTION title="7 Conclusion and Future Work" number="7">
    <S sid="287" ssid="1">We have presented a new method to detect similarity between small textual units, which combines primitive and composite features using machine learning.</S>
    <S sid="288" ssid="2">We validated our similarity definition using human judges, applied our method to a substantial number of paragraph pairs from news articles, and compared results to baseline and standard information retrieval techniques.</S>
    <S sid="289" ssid="3">Our results indicate that our method outperforms the standard techniques for detecting similarity, and the system has been successfully integrated into a larger multipledocument summarization system [McKeown et al. 1999].</S>
    <S sid="290" ssid="4">We are currently working on incorporating a clustering algorithm in order to give as output a set of textual units which are mutually similar rather than just pairwise similar.</S>
    <S sid="291" ssid="5">Future work includes testing on textual units of different size, comparing with additional techniques proposed for document similarity in the information retrieval and computational linguistics literature, and extending the feature set to incorporate other types of linguistic information in the statistical learning method.</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="8">
    <S sid="292" ssid="1">We are grateful to Regina Barzilay, Hongyan Jing, Kathy McKeown, Shimei Pan, and Yoram Singer for numerous discussions of earlier versions of this paper and for their help with setting up and running RIPPER and SMART.</S>
    <S sid="293" ssid="2">This research has been supported in part by an NSF STIMULATE grant, IRI-96-1879.</S>
    <S sid="294" ssid="3">Any opinions, findings, and conclusions or recommendations expressed in this paper are those of the authors and do not necessarily reflect the views of the National Science Foundation.</S>
  </SECTION>
</PAPER>
