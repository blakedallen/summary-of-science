[
  {
    "citance_No": 1, 
    "citing_paper_id": "D07-1104", 
    "citing_paper_authority": 37, 
    "citing_paper_authors": "Adam, Lopez", 
    "raw_text": "Due to space constraints, details and proof of correctness are available in Lopez (2007a)", 
    "clean_text": "Due to space constraints, details and proof of correctness are available in Lopez (2007a).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "D07-1104", 
    "citing_paper_authority": 37, 
    "citing_paper_authors": "Adam, Lopez", 
    "raw_text": "However, in machine translation most features can still be traced back to the IBM Models of 15 years ago (Lopez, 2007b)", 
    "clean_text": "However, in machine translation most features can still be traced back to the IBM Models of 15 years ago (Lopez, 2007b).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "P14-1083", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Stefan, Riezler | Patrick, Simianer | Carolin, Haas", 
    "raw_text": "ing its implementation of the suffix array extraction method described in Lopez (2007)", 
    "clean_text": "We built grammars using its implementation of the suffix array extraction method described in Lopez (2007).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "W08-0402", 
    "citing_paper_authority": 21, 
    "citing_paper_authors": "Zhifei, Li | Sanjeev P., Khudanpur", 
    "raw_text": "We use the GIZA toolkit (Och and Ney, 2000), a suffix-array architecture (Lopez, 2007) ,theSRILM toolkit (Stolcke, 2002), and minimum error rate training (Och et al, 2003) to obtain word alignments, a translation model, language models, and the optimal weights for combining these mod els, respectively", 
    "clean_text": "We use the GIZA toolkit (Och and Ney, 2000), a suffix-array architecture (Lopez, 2007), the SRILM toolkit (Stolcke, 2002), and minimum error rate training (Och et al, 2003) to obtain word alignments, a translation model, language models, and the optimal weights for combining these mod els, respectively.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "E09-1044", 
    "citing_paper_authority": 15, 
    "citing_paper_authors": "Gonzalo, Iglesias | Adri&agrave; de, Gispert | Eduardo R., Banga | William, Byrne", 
    "raw_text": "Lopez (2007) extracts rules on-the-fly from the training bi text during decoding, searching efficiently for rule patterns using suffix arrays", 
    "clean_text": "Lopez (2007) extracts rules on-the-fly from the training bi text during decoding, searching efficiently for rule patterns using suffix arrays.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "P10-1147", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "John, DeNero | Dan, Klein", 
    "raw_text": "Joshua (Li et al, 2009) is an implementation of Hiero (Chiang, 2007) using a suffix-array-based grammar extraction approach (Lopez, 2007)", 
    "clean_text": "Joshua (Li et al, 2009) is an implementation of Hiero (Chiang, 2007) using a suffix-array-based grammar extraction approach (Lopez, 2007).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "W09-0424", 
    "citing_paper_authority": 47, 
    "citing_paper_authors": "Zhifei, Li | Chris, Callison-Burch | Chris, Dyer | Sanjeev P., Khudanpur | Lane, Schwartz | Wren N. G., Thornton | Jonathan, Weese | Omar F., Zaidan", 
    "raw_text": "The toolkit also implements suffix-array grammar extraction (Lopez, 2007) and minimum error rate training (Och, 2003)", 
    "clean_text": "The toolkit also implements suffix-array grammar extraction (Lopez, 2007) and minimum error rate training (Och, 2003).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "W09-0424", 
    "citing_paper_authority": 47, 
    "citing_paper_authors": "Zhifei, Li | Chris, Callison-Burch | Chris, Dyer | Sanjeev P., Khudanpur | Lane, Schwartz | Wren N. G., Thornton | Jonathan, Weese | Omar F., Zaidan", 
    "raw_text": "The translation scores for four different systems are reported in Table 1.5 Baseline: In this system, we use the GIZA++toolkit (Och and Ney, 2003), a suffix-array architecture (Lopez, 2007), the SRILM toolkit (Stolcke, 2002), and minimum error rate training (Och, 2003) to obtain word-alignments, a translation model, language models, and the optimal weights for combining these models, respectively. Minimum Bayes Risk Rescoring: In this system, we re-ranked the n-best output of our base line system using Minimum Bayes Risk (Kumarand Byrne, 2004)", 
    "clean_text": "In this system, we use the GIZA++toolkit (Och and Ney, 2003), a suffix-array architecture (Lopez, 2007), the SRILM toolkit (Stolcke, 2002), and minimum error rate training (Och, 2003) to obtain word-alignments, a translation model, language models, and the optimal weights for combining these models, respectively.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "P09-1067", 
    "citing_paper_authority": 15, 
    "citing_paper_authors": "Zhifei, Li | Jason M., Eisner | Sanjeev P., Khudanpur", 
    "raw_text": "We use GIZA++ (Och and Ney,2000), a suffix-array (Lopez, 2007), SRILM (Stolcke, 2002), and risk-based deterministic annealing (Smith and Eisner, 2006) 17 to obtain word alignments, translation models, language models, and the optimal weights for combining these models, respectively", 
    "clean_text": "We use GIZA++ (Och and Ney,2000), a suffix-array (Lopez, 2007), SRILM (Stolcke, 2002), and risk-based deterministic annealing (Smith and Eisner, 2006) to obtain word alignments, translation models, language models, and the optimal weights for combining these models, respectively.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "W10-1707", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Vladimir, Eidelman | Chris, Dyer | Philip, Resnik", 
    "raw_text": "The hierarchical phrase-base translation grammar was extracted using a suffix array rule extractor (Lopez, 2007)", 
    "clean_text": "The hierarchical phrase-base translation grammar was extracted using a suffix array rule extractor (Lopez, 2007).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "W10-1707", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Vladimir, Eidelman | Chris, Dyer | Philip, Resnik", 
    "raw_text": "Besides storing the whole grammar locally in memory, other approaches have been developed, such as suffix arrays, which lookup and extract rules on the fly from the phrase table (Lopez, 2007)", 
    "clean_text": "Besides storing the whole grammar locally in memory, other approaches have been developed, such as suffix arrays, which lookup and extract rules on the fly from the phrase table (Lopez, 2007).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "P09-1104", 
    "citing_paper_authority": 41, 
    "citing_paper_authors": "Aria, Haghighi | John, Blitzer | John, DeNero | Dan, Klein", 
    "raw_text": "The pipeline extracts a Hiero-style synchronous context-free grammar (Chiang, 2007), employs suffix-array based rule extraction (Lopez, 2007), and tunes model parameters with minimum error rate training (Och,2003)", 
    "clean_text": "The pipeline extracts a Hiero-style synchronous context-free grammar (Chiang, 2007), employs suffix-array based rule extraction (Lopez, 2007), and tunes model parameters with minimum error rate training (Och,2003).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "N09-1026", 
    "citing_paper_authority": 7, 
    "citing_paper_authors": "John, DeNero | Mohit, Bansal | Adam, Pauls | Dan, Klein", 
    "raw_text": "This data structure has been used similarly to index whole training sentences for efficient retrieval (Lopez, 2007)", 
    "clean_text": "This data structure has been used similarly to index whole training sentences for efficient retrieval (Lopez, 2007).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "D11-1047", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Fabien, Cromier&egrave;s | Sadao, Kurohashi", 
    "raw_text": "(Lopez, 2007) proposed an extension of this method for retrieving discontinuous substrings, making it suitable for systems such as (Chiang, 2007)", 
    "clean_text": "(Lopez, 2007) proposed an extension of this method for retrieving discontinuous substrings, making it suitable for systems such as (Chiang, 2007).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "D11-1047", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Fabien, Cromier&egrave;s | Sadao, Kurohashi", 
    "raw_text": "In this respect, our approach will have many similarities with (Callison-Burch et al, 2005) and (Lopez, 2007), and can be seen as an extension of these works", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "D11-1047", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Fabien, Cromier&egrave;s | Sadao, Kurohashi", 
    "raw_text": "The basis of the method in (Lopez, 2007) is to look for the occurrences of continuous substrings using a Suffix Array, and then intersect them to find the occurrences of discontinuous substrings", 
    "clean_text": "The basis of the method in (Lopez, 2007) is to look for the occurrences of continuous substrings using a Suffix Array, and then intersect them to find the occurrences of discontinuous substrings.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "D11-1047", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Fabien, Cromier&egrave;s | Sadao, Kurohashi", 
    "raw_text": "There is also an exponential number of discontinuous substrings, but (Lopez, 2007) only consider substrings of bounded size, limiting this problem", 
    "clean_text": "There is also an exponential number of discontinuous substrings, but (Lopez, 2007) only consider substrings of bounded size, limiting this problem.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "D11-1047", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Fabien, Cromier&egrave;s | Sadao, Kurohashi", 
    "raw_text": "Thishypergraph will not only fit the same role as the Pre fix Tree of (Lopez, 2007), but also will allow us to easily implement different search strategies for flexible search (section 6)", 
    "clean_text": "This hypergraph will not only fit the same role as the Prefix Tree of (Lopez, 2007), but also will allow us to easily implement different search strategies for flexible search (section 6).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "D11-1047", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Fabien, Cromier&egrave;s | Sadao, Kurohashi", 
    "raw_text": "This allows in turn to compute by intersection the occurrences of discontinuous treelets, much like what is done in (Lopez, 2007) for discontinuous strings", 
    "clean_text": "This allows in turn to compute by intersection the occurrences of discontinuous treelets, much like what is done in (Lopez, 2007) for discontinuous strings.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "D11-1047", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Fabien, Cromier&egrave;s | Sadao, Kurohashi", 
    "raw_text": "occ (T2) In practice, the intersection operation will be implemented using merge and binary merge algorithms (Baeza-Yates and Salinger, 2005), following (Lopez, 2007)", 
    "clean_text": "In practice, the intersection operation will be implemented using merge and binary merge algorithms (Baeza-Yates and Salinger, 2005), following (Lopez, 2007).", 
    "keep_for_gold": 0
  }
]
