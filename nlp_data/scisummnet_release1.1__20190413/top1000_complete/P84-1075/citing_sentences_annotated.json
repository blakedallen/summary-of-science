[
  {
    "citance_No": 1, 
    "citing_paper_id": "P87-1027", 
    "citing_paper_authority": 18, 
    "citing_paper_authors": "Branimir K., Boguraev | Ted, Briscoe | John, Carroll | David M., Carter | Claire, Grover", 
    "raw_text": "Indeed, we have demonstrated the feasibility (Alshawi et al, 1985) of driving a parsing system directly from the information av~lable in LDOCE by constructing dictionary entries for the PATR-H system (Shieber, 1984)", 
    "clean_text": "Indeed, we have demonstrated the feasibility (Alshawi et al, 1985) of driving a parsing system directly from the information available in LDOCE by constructing dictionary entries for the PATR-H system (Shieber, 1984).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "W11-2126", 
    "citing_paper_authority": 7, 
    "citing_paper_authors": "Philip, Williams | Philipp, Koehn", 
    "raw_text": "We borrow the terminology and notation of PATR-II (Shieber, 1984), a minimal constraint-based formalism that extends context-free grammar", 
    "clean_text": "We borrow the terminology and notation of PATR-II (Shieber, 1984), a minimal constraint-based formalism that extends context-free grammar.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "E89-1029", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Allan, Ramsay", 
    "raw_text": "Nearly all existing unification grammars of this kind use either term unification (the kind of unification used in resolution theorem provers, and hence provided as a primitive in PROLOG) or some version of the graph unification proposed by Kay{ 1985) and Shieber (1984)", 
    "clean_text": "Nearly all existing unification grammars of this kind use either term unification (the kind of unification used in resolution theorem provers, and hence provided as a primitive in PROLOG) or some version of the graph unification proposed by Kay (1985) and Shieber (1984).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "E89-1029", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Allan, Ramsay", 
    "raw_text": "It is not, unfortunately, possible to keep it close to both FUG and PATR (Shieber 1984), but it should be possible for readers familiar with PATR to see roughly what the relation between the two is. A node descriptor consists of either an atomic symbol ,e.g .agr, cat, bar, or of two atomic symbols separated by a slash ,e.g .cat/C ,head/OBJECT", 
    "clean_text": "It is not, unfortunately, possible to keep it close to both FUG and PATR (Shieber 1984), but it should be possible for readers familiar with PATR to see roughly what the relation between the two is.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "C88-1012", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Branimir K., Boguraev | John, Carroll | Ted, Briscoe | Claire, Grover", 
    "raw_text": "Particularly well known examples are reported in Kaplan (1983) (see also Kiparsky, 1985), Shieber (1984), Evans (1985), Phillips and Thompson (1985), Jensen et al (1986) and Karttunen (1986)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "P98-2154", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Mikio, Nakano | Akira, Shimazu", 
    "raw_text": "Since formalisms (i) are used in the family of the PATR parsing systems (Shieber, 1984), hereafter they will be called PATR-Iike formalisms", 
    "clean_text": "Since formalisms (i) are used in the family of the PATR parsing systems (Shieber, 1984), hereafter they will be called PATR-like formalisms.", 
    "keep_for_gold": 0
  }
]
