<PAPER>
  <S sid="0">Seeing Stars: Exploiting Class Relationships For Sentiment Categorization With Respect To Rating Scales</S>
  <ABSTRACT>
    <S sid="1" ssid="1">address the wherein rather than simply decide whether a review is &#8220;thumbs up&#8221; or &#8220;thumbs down&#8221;, as in previous sentiment analysis work, one must determine an author&#8217;s evaluation with respect to a multi-point scale (e.g., one to five &#8220;stars&#8221;).</S>
    <S sid="2" ssid="2">This task represents an interesting twist on standard multi-class text categorization because there are several different degrees of similarity between class labels; for example, &#8220;three stars&#8221; is intuitively closer to &#8220;four stars&#8221; than to &#8220;one star&#8221;.</S>
    <S sid="3" ssid="3">We first evaluate human performance at task.</S>
    <S sid="4" ssid="4">Then, we apply a based on a labeling formulation of the problem, that alters a given-ary classifier&#8217;s output in an explicit attempt to ensure that similar items receive similar labels.</S>
    <S sid="5" ssid="5">We show that the meta-algorithm can provide significant improvements over both multi-class and regression versions of SVMs when we employ a novel similarity measure appropriate to the problem.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">There has recently been a dramatic surge of interest in sentiment analysis, as more and more people become aware of the scientific challenges posed and the scope of new applications enabled by the processing of subjective language.</S>
    <S sid="7" ssid="2">(The papers collected by Qu, Shanahan, and Wiebe (2004) form a representative sample of research in the area.)</S>
    <S sid="8" ssid="3">Most prior work on the specific problem of categorizing expressly opinionated text has focused on the binary distinction of positive vs. negative (Turney, 2002; Pang, Lee, and Vaithyanathan, 2002; Dave, Lawrence, and Pennock, 2003; Yu and Hatzivassiloglou, 2003).</S>
    <S sid="9" ssid="4">But it is often helpful to have more information than this binary distinction provides, especially if one is ranking items by recommendation or comparing several reviewers&#8217; opinions: example applications include collaborative filtering and deciding which conference submissions to accept.</S>
    <S sid="10" ssid="5">Therefore, in this paper we consider generalizing to finer-grained scales: rather than just determine whether a review is &#8220;thumbs up&#8221; or not, we attempt to infer the author&#8217;s implied numerical rating, such as &#8220;three stars&#8221; or &#8220;four stars&#8221;.</S>
    <S sid="11" ssid="6">Note that this differs from identifying opinion strength (Wilson, Wiebe, and Hwa, 2004): rants and raves have the same strength but represent opposite evaluations, and referee forms often allow one to indicate that one is very confident (high strength) that a conference submission is mediocre (middling rating).</S>
    <S sid="12" ssid="7">Also, our task differs from ranking not only because one can be given a single item to classify (as opposed to a set of items to be ordered relative to one another), but because there are settings in which classification is harder than ranking, and vice versa.</S>
    <S sid="13" ssid="8">One can apply standard-ary classifiers or regression to this rating-inference problem; independent work by Koppel and Schler (2005) considers such methods.</S>
    <S sid="14" ssid="9">But an alternative approach that explicitly incorporates information about item similarities together with label similarity information (for instance, &#8220;one star&#8221; is closer to &#8220;two stars&#8221; than to &#8220;four stars&#8221;) is to think of the task as one of metric labeling (Kleinberg and Tardos, 2002), where label relations are encoded via a distance metric.</S>
    <S sid="15" ssid="10">This observation yields a meta-algorithm, applicable to both semi-supervised (via graph-theoretic techniques) and supervised settings, that alters a given -ary classifier&#8217;s output so that similar items tend to be assigned similar labels.</S>
    <S sid="16" ssid="11">In what follows, we first demonstrate that humans can discern relatively small differences in (hidden) evaluation scores, indicating that rating inference is indeed a meaningful task.</S>
    <S sid="17" ssid="12">We then present three types of algorithms &#8212; one-vs-all, regression, and metric labeling &#8212; that can be distinguished by how explicitly they attempt to leverage similarity between items and between labels.</S>
    <S sid="18" ssid="13">Next, we consider what item similarity measure to apply, proposing one based on the positive-sentence percentage.</S>
    <S sid="19" ssid="14">Incorporating this new measure within the metriclabeling framework is shown to often provide significant improvements over the other algorithms.</S>
    <S sid="20" ssid="15">We hope that some of the insights derived here might apply to other scales for text classifcation that have been considered, such as clause-level opinion strength (Wilson, Wiebe, and Hwa, 2004); affect types like disgust (Subasic and Huettner, 2001; Liu, Lieberman, and Selker, 2003); reading level (Collins-Thompson and Callan, 2004); and urgency or criticality (Horvitz, Jacobs, and Hovel, 1999).</S>
  </SECTION>
  <SECTION title="2 Problem validation and formulation" number="2">
    <S sid="21" ssid="1">We first ran a small pilot study on human subjects in order to establish a rough idea of what a reasonable classification granularity is: if even people cannot accurately infer labels with respect to a five-star scheme with half stars, say, then we cannot expect a learning algorithm to do so.</S>
    <S sid="22" ssid="2">Indeed, some potential obstacles to accurate rating inference include lack of calibration (e.g., what an understated author intends as high praise may seem lukewarm), author inconsistency at assigning fine-grained ratings, and For data, we first collected Internet movie reviews in English from four authors, removing explicit rating indicators from each document&#8217;s text automatically.</S>
    <S sid="23" ssid="3">Now, while the obvious experiment would be to ask subjects to guess the rating that a review represents, doing so would force us to specify a fixed rating-scale granularity in advance.</S>
    <S sid="24" ssid="4">Instead, we examined people&#8217;s ability to discern relative differences, because by varying the rating differences represented by the test instances, we can evaluate multiple granularities in a single experiment.</S>
    <S sid="25" ssid="5">Specifically, at intervals over a number of weeks, we authors (a non-native and a native speaker of English) examined pairs of reviews, attemping to determine whether the first review in each pair was (1) more positive than, (2) less positive than, or (3) as positive as the second.</S>
    <S sid="26" ssid="6">The texts in any particular review pair were taken from the same author to factor out the effects of cross-author divergence.</S>
    <S sid="27" ssid="7">As Table 1 shows, both subjects performed perfectly when the rating separation was at least 3 &#8220;notches&#8221; in the original scale (we define a notch as a half star in a four- or five-star scheme and 10 points in a 100-point scheme).</S>
    <S sid="28" ssid="8">Interestingly, although human performance drops as rating difference decreases, even at a one-notch separation, both subjects handily outperformed the random-choice baseline of 33%.</S>
    <S sid="29" ssid="9">However, there was large variation in accuracy between subjects.2 Because of this variation, we defined two different classification regimes.</S>
    <S sid="30" ssid="10">From the evidence above, a three-class task (categories 0, 1, and 2 &#8212; essentially &#8220;negative&#8221;, &#8220;middling&#8221;, and &#8220;positive&#8221;, respectively) seems like one that most people would do quite well at (but we should not assume 100% human accuracy: according to our one-notch results, people may misclassify borderline cases like 2.5 stars).</S>
    <S sid="31" ssid="11">Our study also suggests that people could do at least fairly well at distinguishing full stars in a zero- to four-star scheme.</S>
    <S sid="32" ssid="12">However, when we began to construct five-category datasets for each of our four authors (see below), we found that in each case, either the most negative or the most positive class (but not both) contained only about 5% of the documents.</S>
    <S sid="33" ssid="13">To make the classes more balanced, we folded these minority classes into the adjacent class, thus arriving at a four-class problem (categories 0-3, increasing in positivity).</S>
    <S sid="34" ssid="14">Note that the four-class problem seems to offer more possibilities for leveraging class relationship information than the three-class setting, since it involves more class pairs.</S>
    <S sid="35" ssid="15">Also, even the two-category version of the rating-inference problem for movie reviews has proven quite challenging for many automated classification techniques (Pang, Lee, and Vaithyanathan, 2002; Turney, 2002).</S>
    <S sid="36" ssid="16">We applied the above two labeling schemes to a scale dataset3 containing four corpora of movie reviews.</S>
    <S sid="37" ssid="17">All reviews were automatically preprocessed to remove both explicit rating indicators and objective sentences; the motivation for the latter step is that it has previously aided positive vs. negative classification (Pang and Lee, 2004).</S>
    <S sid="38" ssid="18">All of the 1770, 902, 1307, or 1027 documents in a given corpus were written by the same author.</S>
    <S sid="39" ssid="19">This decision facilitates interpretation of the results, since it factors out the effects of different choices of methods for calibrating authors&#8217; scales.4 We point out that but since our goal is to recover a reviewer&#8217;s &#8220;true&#8221; recommendation, reader-author agreement is more relevant.</S>
    <S sid="40" ssid="20">While another factor might be degree of English fluency, in an informal experiment (six subjects viewing the same three pairs), native English speakers made the only two errors. it is possible to gather author-specific information in some practical applications: for instance, systems that use selected authors (e.g., the Rotten Tomatoes movie-review website &#8212; where, we note, not all authors provide explicit ratings) could require that someone submit rating-labeled samples of newlyadmitted authors&#8217; work.</S>
    <S sid="41" ssid="21">Moreover, our results at least partially generalize to mixed-author situations (see Section 5.2).</S>
  </SECTION>
  <SECTION title="3 Algorithms" number="3">
    <S sid="42" ssid="1">Recall that the problem we are considering is multicategory classification in which the labels can be naturally mapped to a metric space (e.g., points on a line); for simplicity, we assume the distance metric throughout.</S>
    <S sid="43" ssid="2">In this section, we present three approaches to this problem in order of increasingly explicit use of pairwise similarity information between items and between labels.</S>
    <S sid="44" ssid="3">In order to make comparisons between these methods meaningful, we base all three of them on Support Vector Machines (SVMs) as implemented in Joachims&#8217; The standard SVM formulation applies only to binary classification.</S>
    <S sid="45" ssid="4">One-vs-all (OVA) (Rifkin and Klautau, 2004) is a common extension to the-ary case.</S>
    <S sid="46" ssid="5">Training consists of building, for each label, an SVM binary classifier distinguishing labelfrom &#8220;not-&#8221;.</S>
    <S sid="47" ssid="6">We consider the final output to be a label preference function , defined as the signed distance of (test) item to the side of the vs. not-decision plane.</S>
    <S sid="48" ssid="7">Clearly, OVA makes no explicit use of pairwise label or item relationships.</S>
    <S sid="49" ssid="8">However, it can perform well if each class exhibits sufficiently distinct language; see Section 4 for more discussion.</S>
    <S sid="50" ssid="9">Alternatively, we can take a regression perspective by assuming that the labels come from a discretization of a continuous function mapping from the or negative.</S>
    <S sid="51" ssid="10">Even though Eric Lurio uses a 5 star system, his grading is very relaxed.</S>
    <S sid="52" ssid="11">So, 2 stars can be positive.&#8221; Thus, calibration may sometimes require strong familiarity with the authors involved, as anyone who has ever needed to reconcile conflicting referee reports probably knows.</S>
  </SECTION>
  <SECTION title="5" number="4">
    <S sid="53" ssid="1">feature space to a metric space.If we choose from a family of sufficiently &#8220;gradual&#8221; functions, then similar items necessarily receive similar labels.</S>
    <S sid="54" ssid="2">In particular, we consider linear,-insensitive SVM regression (Vapnik, 1995; Smola and Sch&#168;olkopf, 1998); the idea is to find the hyperplane that best fits the training data, but where training points whose labels are within distanceof the hyperplane incur no loss.</S>
    <S sid="55" ssid="3">Then, for (test) instance, the label preference function is the negative of the distance betweenand the value predicted for by the fitted hyperplane function.</S>
    <S sid="56" ssid="4">Wilson, Wiebe, and Hwa (2004) used SVM regression to classify clause-level strength of opinion, reporting that it provided lower accuracy than other methods.</S>
    <S sid="57" ssid="5">However, independently of our work, Koppel and Schler (2005) found that applying linear regression to classify documents (in a different corpus than ours) with respect to a three-point rating scale provided greater accuracy than OVA SVMs and other algorithms.</S>
    <S sid="58" ssid="6">Regression implicitly encodes the &#8220;similar items, similar labels&#8221; heuristic, in that one can restrict consideration to &#8220;gradual&#8221; functions.</S>
    <S sid="59" ssid="7">But we can also think of our task as a metric labeling problem (Kleinberg and Tardos, 2002), a special case of the maximum a posteriori estimation problem for Markov random fields, to explicitly encode our desideratum.</S>
    <S sid="60" ssid="8">Suppose we have an initial label preference function , perhaps computed via one of the two methods described above.</S>
    <S sid="61" ssid="9">Also, let be a distance metric on labels, and let denote the nearest neighbors of item according to some item-similarity function .</S>
    <S sid="62" ssid="10">Then, it is quite natural to pose our problem as finding a mapping of instances to labels (respecting the original labels of the training instances) that minimizes learning6 (Atkeson, Moore, and Schaal, 1997).)</S>
    <S sid="63" ssid="11">In a sense, we are using explicit item and label similarity information to increasingly penalize the initial classifier as it assigns more divergent labels to similar items.</S>
    <S sid="64" ssid="12">In this paper, we only report supervised-learning experiments in which the nearest neighbors for any given test item were drawn from the training set alone.</S>
    <S sid="65" ssid="13">In such a setting, the labeling decisions for different test items are independent, so that solving the requisite optimization problem is simple.</S>
    <S sid="66" ssid="14">Aside: transduction The above formulation also allows for transductive semi-supervised learning as well, in that we could allow nearest neighbors to come from both the training and test sets.</S>
    <S sid="67" ssid="15">We intend to address this case in future work, since there are important settings in which one has a small number of labeled reviews and a large number of unlabeled reviews, in which case considering similarities between unlabeled texts could prove quite helpful.</S>
    <S sid="68" ssid="16">In full generality, the corresponding multi-label optimization problem is intractable, but for many families of functions (e.g., convex) there exist practical exact or approximation algorithms based on techniques for finding minimum s-t cuts in graphs (Ishikawa and Geiger, 1998; Boykov, Veksler, and Zabih, 1999; Ishikawa, 2003).</S>
    <S sid="69" ssid="17">Interestingly, previous sentiment analysis research found that a minimum-cut formulation for the binary subjective/objective distinction yielded good results (Pang and Lee, 2004).</S>
    <S sid="70" ssid="18">Of course, there are many other related semi-supervised learning algorithms that we would like to try as well; see Zhu (2005) for a survey.</S>
  </SECTION>
  <SECTION title="4 Class struggle: finding a label-correlated item-similarity function" number="5">
    <S sid="71" ssid="1">We need to specify an item similarity function to use the metric-labeling formulation described in Section 3.3.</S>
    <S sid="72" ssid="2">We could, as is commonly done, employ a term-overlap-based measure such as the cosine between term-frequency-based document vectors (henceforth &#8220;TO(cos)&#8221;).</S>
    <S sid="73" ssid="3">However, Table 2 respond to different versions of nearest-neighbor learning, e.g., majority-vote, weighted average of labels, or weighted median of labels. test where is monotonically increasing (we chose unless otherwise specified) and is a trade-off and/or scaling parameter.</S>
    <S sid="74" ssid="4">(The inner summation is familiar from work in locally-weighted shows that in aggregate, the vocabularies of distant classes overlap to a degree surprisingly similar to that of the vocabularies of nearby classes.</S>
    <S sid="75" ssid="5">Thus, item similarity as measured by TO(cos) may not correlate well with similarity of the item&#8217;s true labels.</S>
    <S sid="76" ssid="6">We can potentially develop a more useful similarity metric by asking ourselves what, intuitively, accounts for the label relationships that we seek to exploit.</S>
    <S sid="77" ssid="7">A simple hypothesis is that ratings can be determined by the positive-sentence percentage (PSP) of a text, i.e., the number of positive sentences divided by the number of subjective sentences.</S>
    <S sid="78" ssid="8">(Termbased versions of this premise have motivated much sentiment-analysis work for over a decade (Das and Chen, 2001; Tong, 2001; Turney, 2002).)</S>
    <S sid="79" ssid="9">But counterexamples are easy to construct: reviews can contain off-topic opinions, or recount many positive aspects before describing a fatal flaw.</S>
    <S sid="80" ssid="10">We therefore tested the hypothesis as follows.</S>
    <S sid="81" ssid="11">To avoid the need to hand-label sentences as positive or negative, we first created a sentence polarity dataset7 consisting of 10,662 movie-review &#8220;snippets&#8221; (a striking extract usually one sentence long) downloaded from www.rottentomatoes.com; each snippet was labeled with its source review&#8217;s label (positive or negative) as provided by Rotten Tomatoes.</S>
    <S sid="82" ssid="12">Then, we trained a Naive Bayes classifier on this data set and applied it to our scale dataset to identify the positive sentences (recall that objective sentences were already removed).</S>
    <S sid="83" ssid="13">Figure 1 shows that all four authors tend to exhibit a higher PSP when they write a more positive review, and we expect that most typical reviewers would follow suit.</S>
    <S sid="84" ssid="14">Hence, PSP appears to be a promising basis for computing document similarity for our rating-inference task.</S>
    <S sid="85" ssid="15">In particular, we defined to be the two-dimensional vector , and then set the itemsimilarity function required by the metric-labeling optimization function (Section 3.3) to But before proceeding, we note that it is possible that similarity information might yield no extra benefit at all.</S>
    <S sid="86" ssid="16">For instance, we don&#8217;t need it if we can reliably identify each class just from some set of distinguishing terms.</S>
    <S sid="87" ssid="17">If we define such terms as frequent ones ( ) that appear in a single class 50% or more of the time, then we do find many instances; some examples for one author are: &#8220;meaningless&#8221;, &#8220;disgusting&#8221; (class 0); &#8220;pleasant&#8221;, &#8220;uneven&#8221; (class 1); and &#8220;oscar&#8221;, &#8220;gem&#8221; (class 2) for the three-class case, and, in the four-class case, &#8220;flat&#8221;, &#8220;tedious&#8221; (class 1) versus &#8220;straightforward&#8221;, &#8220;likeable&#8221; (class 2).</S>
    <S sid="88" ssid="18">Some unexpected distinguishing terms for this author are &#8220;lion&#8221; for class 2 (threeclass case), and for class 2 in the four-class case, &#8220;jennifer&#8221;, for a wide variety of Jennifers.</S>
  </SECTION>
  <SECTION title="5 Evaluation" number="6">
    <S sid="89" ssid="1">This section compares the accuracies of the approaches outlined in Section 3 on the four corpora comprising our scale dataset.</S>
    <S sid="90" ssid="2">(Results usingerror were qualitatively similar.)</S>
    <S sid="91" ssid="3">Throughout, when we refer to something as &#8220;significant&#8221;, we mean statistically so with respect to the paired-test, .</S>
    <S sid="92" ssid="4">The results that follow are based on &#8217;s default parameter settings for SVM regression and OVA.</S>
    <S sid="93" ssid="5">Preliminary analysis of the effect of varying the regression parameterin the four-class case revealed that the default value was often optimal.</S>
    <S sid="94" ssid="6">The notation &#8220;AB&#8221; denotes metric labeling where method A provides the initial label preference function and B serves as similarity measure.</S>
    <S sid="95" ssid="7">To train, we first select the meta-parameters and by running 9-fold cross-validation within the training set.</S>
    <S sid="96" ssid="8">Fixing and to those values yielding the best performance, we then re-train A (but with SVM parameters fixed, as described above) on the whole training set.</S>
    <S sid="97" ssid="9">At test time, the nearest neighbors of each item are also taken from the full training set.</S>
    <S sid="98" ssid="10">Figure 2 summarizes our average 10-fold crossvalidation accuracy results.</S>
    <S sid="99" ssid="11">We first observe from the plots that all the algorithms described in Section 3 always definitively outperform the simple baseline of predicting the majority class, although the improvements are smaller in the four-class case.</S>
    <S sid="100" ssid="12">Incidentally, the data was distributed in such a way that the absolute performance of the baseline itself does not change much between the three- and four-class case (which implies that the three-class datasets were relatively more balanced); and Author c&#8217;s datasets seem noticeably easier than the others.</S>
    <S sid="101" ssid="13">We now examine the effect of implicitly using label and item similarity.</S>
    <S sid="102" ssid="14">In the four-class case, regression performed better than OVA (significantly so for two authors, as shown in the righthand table); but for the three-category task, OVA significantly outperforms regression for all four authors.</S>
    <S sid="103" ssid="15">One might initially interprete this &#8220;flip&#8221; as showing that in the four-class scenario, item and label similarities provide a richer source of information relative to class-specific characteristics, especially since for the non-majority classes there is less data available; whereas in the three-class setting the categories are better modeled as quite distinct entities.</S>
    <S sid="104" ssid="16">However, the three-class results for metric labeling on top of OVA and regression (shown in Figure 2 by black versions of the corresponding icons) show that employing explicit similarities always improves results, often to a significant degree, and yields the best overall accuracies.</S>
    <S sid="105" ssid="17">Thus, we can in fact effectively exploit similarities in the three-class case.</S>
    <S sid="106" ssid="18">Additionally, in both the three- and four- class scenarios, metric labeling often brings the performance of the weaker base method up to that of the stronger one (as indicated by the &#8220;disappearance&#8221; of upward triangles in corresponding table rows), and never hurts performance significantly.</S>
    <S sid="107" ssid="19">In the four-class case, metric labeling and regression seem roughly equivalent.</S>
    <S sid="108" ssid="20">One possible interpretation is that the relevant structure of the problem is already captured by linear regression (and perhaps a different kernel for regression would have improved its three-class performance).</S>
    <S sid="109" ssid="21">However, according to additional experiments we ran in the four-class situation, the test-set-optimal parameter settings for metric labeling would have produced significant improvements, indicating there may be greater potential for our framework.</S>
    <S sid="110" ssid="22">At any rate, we view the fact that metric labeling performed quite well for both rating scales as a definitely positive result.</S>
    <S sid="111" ssid="23">Q: Metric labeling looks like it&#8217;s just combining SVMs with nearest neighbors, and classifier combination often improves performance.</S>
    <S sid="112" ssid="24">Couldn&#8217;t we get the same kind of results by combining SVMs with any other reasonable method?</S>
    <S sid="113" ssid="25">A: No.</S>
    <S sid="114" ssid="26">For example, if we take the strongest base SVM method for initial label preferences, but replace PSP with the term-overlap-based cosine (TO(cos)), performance often drops significantly.</S>
    <S sid="115" ssid="27">This result, which is in accordance with Section 4&#8217;s data, suggests that choosing an item similarity function that correlates well with label similarity is important.</S>
    <S sid="116" ssid="28">(ovaPSP ovaTO(cos) [3c]; regPSPregTO(cos) [4c]) Q: Could you explain that notation, please?</S>
    <S sid="117" ssid="29">A: Triangles point toward the significantly better algorithm for some dataset.</S>
    <S sid="118" ssid="30">For instance, &#8220;M N [3c]&#8221; means, &#8220;In the 3-class task, method M is significantly better than N for two author datasets and significantly worse for one dataset (so the algorithms were statistically indistinguishable on the remaining dataset)&#8221;.</S>
    <S sid="119" ssid="31">When the algorithms being compared are statistically indistinguishable on Average ten-fold cross-validation accuracies.</S>
    <S sid="120" ssid="32">Open icons: SVMs in either one-versus-all (square) or regression (circle) mode; dark versions: metric labeling using the corresponding SVM together with the positive-sentence percentage (PSP).</S>
    <S sid="121" ssid="33">The-axes of the two plots are aligned.</S>
    <S sid="122" ssid="34">Significant differences, three-class data Significant differences, four-class data all four datasets (the &#8220;no triangles&#8221; case), we indicate this with an equals sign (&#8220;=&#8221;).</S>
    <S sid="123" ssid="35">Q: Thanks.</S>
    <S sid="124" ssid="36">Doesn&#8217;t Figure 1 show that the positive-sentence percentage would be a good classifier even in isolation, so metric labeling isn&#8217;t necessary?</S>
    <S sid="125" ssid="37">A: No.</S>
    <S sid="126" ssid="38">Predicting class labels directly from the PSP value via trained thresholds isn&#8217;t as effective (ovaPSP threshold PSP [3c]; regPSP threshold PSP [4c]).</S>
    <S sid="127" ssid="39">Alternatively, we could use only the PSP component of metric labeling by setting the label preference function to the constant function 0, but even with test-set-optimal parameter settings, doing so underperforms the trained metric labeling algorithm with access to an iniregPSP 0 [4c]).</S>
    <S sid="128" ssid="40">Q: What about using PSP as one of the features for input to a standard classifier?</S>
    <S sid="129" ssid="41">A: Our focus is on investigating the utility of similarity information.</S>
    <S sid="130" ssid="42">In our particular rating-inference setting, it so happens that the basis for our pairwise similarity measure can be incorporated as an item-specific feature, but we view this as a tangential issue.</S>
    <S sid="131" ssid="43">That being said, preliminary experiments show that metric labeling can be better, barely (for test-set-optimal parameter settings for both algorithms: significantly better results for one author, four-class case; statistically indistinguishable otherwise), although one needs to determine an appropriate weight for the PSP feature to get good performance.</S>
    <S sid="132" ssid="44">Q: You defined the &#8220;metric transformation&#8221; function as the identity function , imposing greater loss as the distance between labels assigned to two similar items increases.</S>
    <S sid="133" ssid="45">Can you do just as well if you penalize all non-equal label assignments by the same amount, or does the distance between labels really matter?</S>
    <S sid="134" ssid="46">A: You&#8217;re asking for a comparison to the Potts model, which sets to the function if , otherwise.</S>
    <S sid="135" ssid="47">In the one setting in which there is a significant difference between the two, the Potts model does worse (ovaPSPovaPSP [3c]).</S>
    <S sid="136" ssid="48">Also, employing the Potts model generally leads to fewer significant improvements over a chosen base method (compare Figure 2&#8217;s tables with: regPSPreg [3c]; ovaPSP ova [3c]; ovaPSP ova [4c]; but note that regPSPreg [4c]).</S>
    <S sid="137" ssid="49">We note that optimizing the Potts model in the multi-label case is NPhard, whereas the optimal metric labeling with the identity metric-transformation function can be efficiently obtained (see Section 3.3).</S>
    <S sid="138" ssid="50">Q: Your datasets had many labeled reviews and only one author each.</S>
    <S sid="139" ssid="51">Is your work relevant to settings with many authors but very little data for each?</S>
    <S sid="140" ssid="52">A: As discussed in Section 2, it can be quite difficult to properly calibrate different authors&#8217; scales, since the same number of &#8220;stars&#8221; even within what is ostensibly the same rating system can mean different things for different authors.</S>
    <S sid="141" ssid="53">But since you ask: we temporarily turned a blind eye to this serious issue, creating a collection of 5394 reviews by 496 authors with at most 80 reviews per author, where we pretended that our rating conversions mapped correctly into a universal rating scheme.</S>
    <S sid="142" ssid="54">Preliminary results on this dataset were actually comparable to the results reported above, although since we are not confident in the class labels themselves, more work is needed to derive a clear analysis of this setting.</S>
    <S sid="143" ssid="55">(Abusing notation, since we&#8217;re already playing fast and loose: [3c]: baseline 52.4%, reg 61.4%, regPSP 61.5%, ova (65.4%)ovaPSP (66.3%); [4c]: baseline 38.8%, reg (51.9%) regPSP (52.7%), ova (53.8%)ovaPSP (54.6%)) In future work, it would be interesting to determine author-independent characteristics that can be used on (or suitably adapted to) data for specific authors.</S>
    <S sid="144" ssid="56">Q: How about trying &#8212; A: &#8212;Yes, there are many alternatives.</S>
    <S sid="145" ssid="57">A few that we tested are described in the Appendix, and we propose some others in the next section.</S>
    <S sid="146" ssid="58">We should mention that we have not yet experimented with all-vs.-all (AVA), another standard binary-tomulti-category classifier conversion method, because we wished to focus on the effect of omitting pairwise information.</S>
    <S sid="147" ssid="59">In independent work on 3-category rating inference for a different corpus, Koppel and Schler (2005) found that regression outperformed AVA, and Rifkin and Klautau (2004) argue that in principle OVA should do just as well as AVA.</S>
    <S sid="148" ssid="60">But we plan to try it out.</S>
  </SECTION>
  <SECTION title="6 Related work and future directions" number="7">
    <S sid="149" ssid="1">In this paper, we addressed the rating-inference problem, showing the utility of employing label similarity and (appropriate choice of) item similarity &#8212; either implicitly, through regression, or explicitly and often more effectively, through metric labeling.</S>
    <S sid="150" ssid="2">In the future, we would like to apply our methods to other scale-based classification problems, and explore alternative methods.</S>
    <S sid="151" ssid="3">Clearly, varying the kernel in SVM regression might yield better results.</S>
    <S sid="152" ssid="4">Another choice is ordinal regression (McCullagh, 1980; Herbrich, Graepel, and Obermayer, 2000), which only considers the ordering on labels, rather than any explicit distances between them; this approach could work well if a good metric on labels is lacking.</S>
    <S sid="153" ssid="5">Also, one could use mixture models (e.g., combine &#8220;positive&#8221; and &#8220;negative&#8221; language models) to capture class relationships (McCallum, 1999; Schapire and Singer, 2000; Takamura, Matsumoto, and Yamada, 2004).</S>
    <S sid="154" ssid="6">We are also interested in framing multi-class but non-scale-based categorization problems as metric labeling tasks.</S>
    <S sid="155" ssid="7">For example, positive vs. negative vs. neutral sentiment distinctions are sometimes considered in which neutral means either objective (Engstr&#168;om, 2004) or a conflation of objective with a rating of mediocre (Das and Chen, 2001).</S>
    <S sid="156" ssid="8">(Koppel and Schler (2005) in independent work also discuss various types of neutrality.)</S>
    <S sid="157" ssid="9">In either case, we could apply a metric in which positive and negative are closer to objective (or objective+mediocre) than to each other.</S>
    <S sid="158" ssid="10">As another example, hierarchical label relationships can be easily encoded in a label metric.</S>
    <S sid="159" ssid="11">Finally, as mentioned in Section 3.3, we would like to address the transductive setting, in which one has a small amount of labeled data and uses relationships between unlabeled items, since it is particularly well-suited to the metric-labeling approach and may be quite important in practice.</S>
    <S sid="160" ssid="12">Acknowledgments We thank Paul Bennett, Dave Blei, Claire Cardie, Shimon Edelman, Thorsten Joachims, Jon Kleinberg, Oren Kurland, John Lafferty, Guy Lebanon, Pradeep Ravikumar, Jerry Zhu, and the anonymous reviewers for many very useful comments and discussion.</S>
    <S sid="161" ssid="13">We learned of Moshe Koppel and Jonathan Schler&#8217;s work while preparing the cameraready version of this paper; we thank them for so quickly answering our request for a pre-print.</S>
    <S sid="162" ssid="14">Our descriptions of their work are based on that pre-print; we apologize in advance for any inaccuracies in our descriptions that result from changes between their pre-print and their final version.</S>
    <S sid="163" ssid="15">We also thank CMU for its hospitality during the year.</S>
    <S sid="164" ssid="16">This paper is based upon work supported in part by the National Science Foundation (NSF) under grant no.</S>
    <S sid="165" ssid="17">IIS-0329064 and CCR-0122581; SRI International under subcontract no.</S>
    <S sid="166" ssid="18">03-000211 on their project funded by the Department of the Interior&#8217;s National Business Center; and by an Alfred P. Sloan Research Fellowship.</S>
    <S sid="167" ssid="19">Any opinions, findings, and conclusions or recommendations expressed are those of the authors and do not necessarily reflect the views or official policies, either expressed or implied, of any sponsoring institutions, the U.S. government, or any other entity.</S>
  </SECTION>
  <SECTION title="References" number="8">
    <S sid="168" ssid="1">In our setting, we can also incorporate class relations by directly altering the output of a binary classifier, as follows.</S>
    <S sid="169" ssid="2">We first train a standard SVM, treating ratings greater than 0.5 as positive labels and others as negative labels.</S>
    <S sid="170" ssid="3">If we then consider the resulting classifier to output a positivity-preference function , we can then learn a series of thresholds to convert this value into the desired label set, under the assumption that the bigger is, the more positive the review.9 This algorithm always outperforms the majority-class baseline, but not to the degree that the best of SVM OVA and SVM regression does.</S>
    <S sid="171" ssid="4">Koppel and Schler (2005) independently found in a three-class study that thresholding a positive/negative classifier trained only on clearly positive or clearly negative examples did not yield large improvements.</S>
  </SECTION>
</PAPER>
