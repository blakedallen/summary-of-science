<PAPER>
  <S sid="0">Simple Coreference Resolution with Rich Syntactic and Semantic Features</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Coreference systems are driven by syntactic, semantic, and discourse constraints.</S>
    <S sid="2" ssid="2">We present a simple approach which completely modularizes these three aspects.</S>
    <S sid="3" ssid="3">In contrast to much current work, which focuses on learning and on the discourse component, our system is deterministic and is driven entirely by syntactic and semantic compatibility as learned from a large, unlabeled corpus.</S>
    <S sid="4" ssid="4">Despite its simplicity and discourse naivete, our system substantially outperforms all unsupervised systems and most supervised ones.</S>
    <S sid="5" ssid="5">Primary contributions include (1) the presentation of a simpleto-reproduce, high-performing baseline and (2) the demonstration that most remaining errors can be attributed to syntactic and semantic factors external to the coreference phenomenon (and perhaps best addressed by non-coreference systems).</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">The resolution of entity reference is influenced by a variety of constraints.</S>
    <S sid="7" ssid="2">Syntactic constraints like the binding theory, the i-within-i filter, and appositive constructions restrict reference by configuration.</S>
    <S sid="8" ssid="3">Semantic constraints like selectional compatibility (e.g. a spokesperson can announce things) and subsumption (e.g.</S>
    <S sid="9" ssid="4">Microsoft is a company) rule out many possible referents.</S>
    <S sid="10" ssid="5">Finally, discourse phenomena such as salience and centering theory are assumed to heavily influence reference preferences.</S>
    <S sid="11" ssid="6">As these varied factors have given rise to a multitude of weak features, recent work has focused on how best to learn to combine them using models over reference structures (Culotta et al., 2007; Denis and Baldridge, 2007; Klenner and Ailloud, 2007).</S>
    <S sid="12" ssid="7">In this work, we break from the standard view.</S>
    <S sid="13" ssid="8">Instead, we consider a vastly more modular system in which coreference is predicted from a deterministic function of a few rich features.</S>
    <S sid="14" ssid="9">In particular, we assume a three-step process.</S>
    <S sid="15" ssid="10">First, a selfcontained syntactic module carefully represents syntactic structures using an augmented parser and extracts syntactic paths from mentions to potential antecedents.</S>
    <S sid="16" ssid="11">Some of these paths can be ruled in or out by deterministic but conservative syntactic constraints.</S>
    <S sid="17" ssid="12">Importantly, the bulk of the work in the syntactic module is in making sure the parses are correctly constructed and used, and this module&#8217;s most important training data is a treebank.</S>
    <S sid="18" ssid="13">Second, a self-contained semantic module evaluates the semantic compatibility of headwords and individual names.</S>
    <S sid="19" ssid="14">These decisions are made from compatibility lists extracted from unlabeled data sources such as newswire and web data.</S>
    <S sid="20" ssid="15">Finally, of the antecedents which remain after rich syntactic and semantic filtering, reference is chosen to minimize tree distance.</S>
    <S sid="21" ssid="16">This procedure is trivial where most systems are rich, and so does not need any supervised coreference data.</S>
    <S sid="22" ssid="17">However, it is rich in important ways which we argue are marginalized in recent coreference work.</S>
    <S sid="23" ssid="18">Interestingly, error analysis from our final system shows that its failures are far more often due to syntactic failures (e.g. parsing mistakes) and semantic failures (e.g. missing knowledge) than failure to model discourse phenomena or appropriately weigh conflicting evidence.</S>
    <S sid="24" ssid="19">One contribution of this paper is the exploration of strong modularity, including the result that our system beats all unsupervised systems and approaches the state of the art in supervised ones.</S>
    <S sid="25" ssid="20">Another contribution is the error analysis result that, even with substantial syntactic and semantic richness, the path to greatest improvement appears to be to further improve the syntactic and semantic modules.</S>
    <S sid="26" ssid="21">Finally, we offer our approach as a very strong, yet easy to implement, baseline.</S>
    <S sid="27" ssid="22">We make no claim that learning to reconcile disparate features in a joint model offers no benefit, only that it must not be pursued to the exclusion of rich, nonreference analysis.</S>
  </SECTION>
  <SECTION title="2 Coreference Resolution" number="2">
    <S sid="28" ssid="1">In coreference resolution, we are given a document which consists of a set of mentions; each mention is a phrase in the document (typically an NP) and we are asked to cluster mentions according to the underlying referent entity.</S>
    <S sid="29" ssid="2">There are three basic mention types: proper (Barack Obama), nominal (president), and pronominal (he).1 For comparison to previous work, we evaluate in the setting where mention boundaries are given at test time; however our system can easily annotate reference on all noun phrase nodes in a parse tree (see Section 3.1.1).</S>
    <S sid="30" ssid="3">In this work we use the following data sets: Development: (see Section 3) We will present evaluations on multiple coreference resolution metrics, as no single one is clearly superior:</S>
  </SECTION>
  <SECTION title="3 System Description" number="3">
    <S sid="31" ssid="1">In this section we develop our system and report developmental results on ACE2004-ROTHDEV (see Section 2.1); we report pairwise F1 figures here, but report on many more evaluation metrics in Section 4.</S>
    <S sid="32" ssid="2">At a high level, our system resembles a pairwise coreference model (Soon et al., 1999; Ng and Cardie, 2002; Bengston and Roth, 2008); for each mention mi, we select either a single-best antecedent amongst the previous mentions m1, ... , mi&#8722;1, or the NULL mention to indicate the underlying entity has not yet been evoked.</S>
    <S sid="33" ssid="3">Mentions are linearly ordered according to the position of the mention head with ties being broken by the larger node coming first.</S>
    <S sid="34" ssid="4">While much research (Ng and Cardie, 2002; Culotta et al., 2007; Haghighi and Klein, 2007; Poon and Domingos, 2008; Finkel and Manning, 2008) has explored how to reconcile pairwise decisions to form coherent clusters, we simply take the transitive closure of our pairwise decision (as in Ng and Cardie (2002) and Bengston and Roth (2008)) which can and does cause system errors.</S>
    <S sid="35" ssid="5">In contrast to most recent research, our pairwise decisions are not made with a learned model which outputs a probability or confidence, but instead for each mention mi, we select an antecedent amongst m1, ... , mi_1 or the NULL mention as follows: Initially, there is no syntactic constraint (improved in Section 3.1.3), the antecedent compatibility filter allows proper and nominal mentions to corefer only with mentions that have the same head (improved in Section 3.2), and pronouns have no compatibility constraints (improved in Section 3.1.2).</S>
    <S sid="36" ssid="6">Mention heads are determined by parsing the given mention span with the Stanford parser (Klein and Manning, 2003) and using the Collins head rules (Collins, 1999); Poon and Domingos (2008) showed that using syntactic heads strongly outperformed a simple rightmost headword rule.</S>
    <S sid="37" ssid="7">The mention type is determined by the head POS tag: proper if the head tag is NNP or NNPS, pronoun if the head tag is PRP, PRP$, WP, or WP$, and nominal otherwise.</S>
    <S sid="38" ssid="8">For the selection phase, we order mentions m1, ... , mi_1 according to the position of the head word and select the closest mention that remains after constraint and filtering are applied.</S>
    <S sid="39" ssid="9">This choice reflects the intuition of Grosz et al. (1995) that speakers only use pronominal mentions when there are not intervening compatible mentions.</S>
    <S sid="40" ssid="10">This system yields a rather low 48.9 pairwise F1 (see BASE-FLAT in Table 2).</S>
    <S sid="41" ssid="11">There are many, primarily recall, errors made choosing antecedents for all mention types which we will address by adding syntactic and semantic constraints.</S>
    <S sid="42" ssid="12">In this section, we enrich the syntactic representation and information in our system to improve results.</S>
    <S sid="43" ssid="13">We first focus on fixing the pronoun antecedent choices.</S>
    <S sid="44" ssid="14">A common error arose from the use of mention head distance as a poor proxy for discourse salience.</S>
    <S sid="45" ssid="15">For instance consider the example in Figure 1, the mention America is closest to its in flat mention distance, but syntactically Nintendo ofAmerica holds a more prominent syntactic position relative to the pronoun which, as Hobbs (1977) argues, is key to discourse salience.</S>
    <S sid="46" ssid="16">Mapping Mentions to Parse Nodes: In order to use the syntactic position of mentions to determine anaphoricity, we must associate each mention in the document with a parse tree node.</S>
    <S sid="47" ssid="17">We parse all document sentences with the Stanford parser, and then for each evaluation mention, we find the largest-span NP which has the previously determined mention head as its head.5 Often, this results in a different, typically larger, mention span than annotated in the data.</S>
    <S sid="48" ssid="18">Now that each mention is situated in a parse tree, we utilize the length of the shortest tree path between mentions as our notion of distance.</S>
    <S sid="49" ssid="19">In by agreement constraints (see Section 3.1.2).</S>
    <S sid="50" ssid="20">The pronoun them is closest to the site mention, but has an incompatible number feature with it.</S>
    <S sid="51" ssid="21">The closest (in tree distance, see Section 3.1.1) compatible mention is The Israelis, which is correct particular, this fixes examples such as those in Figure 1 where the true antecedent has many embedded mentions between itself and the pronoun.</S>
    <S sid="52" ssid="22">This change by itself yields 51.7 pairwise F1 (see BASE-TREE in Table 2), which is small overall, but reduces pairwise pronoun antecedent selection error from 51.3% to 42.5%.</S>
    <S sid="53" ssid="23">We now refine our compatibility filtering to incorporate simple agreement constraints between coreferent mentions.</S>
    <S sid="54" ssid="24">Since we currently allow proper and nominal mentions to corefer only with matching head mentions, agreement is only a concern for pronouns.</S>
    <S sid="55" ssid="25">Traditional linguistic theory stipulates that coreferent mentions must agree in number, person, gender, and entity type (e.g. animacy).</S>
    <S sid="56" ssid="26">Here, we implement person, number and entity type agreement.6 A number feature is assigned to each mention deterministically based on the head and its POS tag.</S>
    <S sid="57" ssid="27">For entity type, we use NER labels.</S>
    <S sid="58" ssid="28">Ideally, we would like to have information about the entity type of each referential NP, however this information is not easily obtainable.</S>
    <S sid="59" ssid="29">Instead, we opt to utilize the Stanford NER tagger (Finkel et al., 2005) over the sentences in a document and annotate each NP with the NER label assigned to that mention head.</S>
    <S sid="60" ssid="30">For each mention, when its NP is assigned an NER label we allow it to only be compatible with that NER label.7 For pronouns, we deterministically assign a set of compatible NER values (e.g. personal pronouns can only be a PERpositive and i-within-i constraint.</S>
    <S sid="61" ssid="31">The i-withini constraint disallows coreference between parent and child NPs unless the child is an appositive.</S>
    <S sid="62" ssid="32">Hashed numbers indicate ground truth but are not in the actual trees.</S>
    <S sid="63" ssid="33">SON, but its can be an ORGANIZATION or LOCATION).</S>
    <S sid="64" ssid="34">Since the NER tagger typically does not label non-proper NP heads, we have no NER compatibility information for nominals.</S>
    <S sid="65" ssid="35">We incorporate agreement constraints by filtering the set of possible antecedents to those which have compatible number and NER types with the target mention.</S>
    <S sid="66" ssid="36">This yields 53.4 pairwise F1, and reduces pronoun antecedent errors to 42.5% from 34.4%.</S>
    <S sid="67" ssid="37">An example of the type of error fixed by these agreement constraints is given by Figure 2.</S>
    <S sid="68" ssid="38">Our system has so far focused only on improving pronoun anaphora resolution.</S>
    <S sid="69" ssid="39">However, a plurality of the errors made by our system are amongst nonpronominal mentions.8 We take the approach that in order to align a non-pronominal mention to an antecedent without an identical head, we require evidence that the mentions are compatible.</S>
    <S sid="70" ssid="40">Judging compatibility of mentions generally requires semantic knowledge, to which we return later.</S>
    <S sid="71" ssid="41">However, some syntactic configurations guarantee coreference.</S>
    <S sid="72" ssid="42">The one exploited most in coreference work (Soon et al., 1999; Ng and Cardie, 2002; Luo et al., 2004; Culotta et al., 2007; Poon and Domingos, 2008; Bengston and Roth, 2008) is the appositive construction.</S>
    <S sid="73" ssid="43">Here, we represent apposition as a syntactic feature of an NP indicating that it is coreferent with its parent NP (e.g. it is an exception to the i-within-i constraint that parent and child NPs cannot be coreferent).</S>
    <S sid="74" ssid="44">We deterministically mark a node as NP-APPOS (see Figure 3) when it is the third child in of a parent NP whose expansion begins with (NP , NP), and there is not a conjunction in the expansion (to avoid marking elements in a list as appositive).</S>
    <S sid="75" ssid="45">Role Appositives: During development, we discovered many errors which involved a variant of appositives which we call &#8216;role appositives&#8217; (see painter in Figure 3), where an NP modifying the head NP describes the role of that entity (typically a person entity).</S>
    <S sid="76" ssid="46">There are several challenges to correctly labeling these role NPs as being appositives.</S>
    <S sid="77" ssid="47">First, the NPs produced by Treebank parsers are flat and do not have the required internal structure (see Figure 3(a)).</S>
    <S sid="78" ssid="48">While fully solving this problem is difficult, we can heuristically fix many instances of the problem by placing an NP around maximum length sequences of NNP tags or NN (and JJ) tags within an NP; note that this will fail for many constructions such as U.S. President Barack Obama, which is analyzed as a flat sequence of proper nouns.</S>
    <S sid="79" ssid="49">Once this internal NP structure has been added, whether the NP immediately to the left of the head NP is an appositive depends on the entity type.</S>
    <S sid="80" ssid="50">For instance, Rabbi Ashi is an apposition but Iranian army is not.</S>
    <S sid="81" ssid="51">Again, a full solution would require its own model, here we mark as appositions any NPs immediately to the left of a head child NP where the head child NP is identified as a person by the NER tagger.9 We incorporate NP appositive annotation as a constraint during filtering.</S>
    <S sid="82" ssid="52">Any mention which corresponds to an appositive node has its set of possible antecedents limited to its parent.</S>
    <S sid="83" ssid="53">Along with the appositive constraint, we implement the i-within-i constraint that any non-appositive NP cannot be be coreferent with its parent; this constraint is then propagated to any node its parent is forced to agree with.</S>
    <S sid="84" ssid="54">The order in which these constraints are applied is important, as illustrated by the example in Figure 4: First the list of possible antecedents for the appositive NP is constrained to only its parent.</S>
    <S sid="85" ssid="55">Now that all appositives have been constrained, we apply the i-withini constraint, which prevents its from having the NP headed by brand in the set of possible antecedents, and by propagation, also removes the NP headed by Gitano.</S>
    <S sid="86" ssid="56">This leaves the NP Wal-Mart as the closest compatible mention.</S>
    <S sid="87" ssid="57">Adding these syntactic constraints to our system yields 55.4 F1, a fairly substantial improvement, but many recall errors remain between mentions with differing heads.</S>
    <S sid="88" ssid="58">Resolving such cases will require external semantic information, which we will automatically acquire (see Section 3.2).</S>
    <S sid="89" ssid="59">Predicate Nominatives: Another syntactic constraint exploited in Poon and Domingos (2008) is the predicate nominative construction, where the object of a copular verb (forms of the verb be) is constrained to corefer with its subject (e.g.</S>
    <S sid="90" ssid="60">Microsoft is a company in Redmond).</S>
    <S sid="91" ssid="61">While much less frequent than appositive configurations (there are only 17 predicate nominatives in our devel9Arguably, we could also consider right modifying NPs (e.g., [Microsoft [Company]1]1) to be role appositive, but we do not do so here. opment set), predicate nominatives are another highly reliable coreference pattern which we will leverage in Section 3.2 to mine semantic knowledge.</S>
    <S sid="92" ssid="62">As with appositives, we annotate object predicate-nominative NPs and constrain coreference as before.</S>
    <S sid="93" ssid="63">This yields a minor improvement to 55.5 F1.</S>
    <S sid="94" ssid="64">While appositives and related syntactic constructions can resolve some cases of non-pronominal reference, most cases require semantic knowledge about the various entities as well as the verbs used in conjunction with those entities to disambiguate references (Kehler et al., 2008).</S>
    <S sid="95" ssid="65">However, given a semantically compatible mention head pair, say AOL and company, one might expect to observe a reliable appositive or predicative-nominative construction involving these mentions somewhere in a large corpus.</S>
    <S sid="96" ssid="66">In fact, the Wikipedia page for AOL10 has a predicate-nominative construction which supports the compatibility of this head pair: AOL LLC (formerly America Online) is an American global Internet services and media company operated by Time Warner.</S>
    <S sid="97" ssid="67">In order to harvest compatible head pairs, we utilize our BLIPP and WIKI data sets (see Section 2), and for each noun (proper or common) and pronoun, we assign a maximal NP mention node for each nominal head as in Section 3.1.1; we then annotate appositive and predicate-nominative NPs as in Section 3.1.3.</S>
    <S sid="98" ssid="68">For any NP which is annotated as an appositive or predicate-nominative, we extract the head pair of that node and its constrained antecedent.</S>
    <S sid="99" ssid="69">The resulting set of compatible head words, while large, covers a little more than half of the examples given in Table 1.</S>
    <S sid="100" ssid="70">The problem is that these highly-reliable syntactic configurations are too sparse and cannot capture all the entity information present.</S>
    <S sid="101" ssid="71">For instance, the first sentence of Wikipedia abstract for Al Gore is: Albert Arnold &#8220;Al&#8221; Gore, Jr. is an American environmental activist who served as the 45th Vice President of the United States from 1993 to 2001 under President Bill Clinton.</S>
    <S sid="102" ssid="72">The required lexical pattern X who served as Y is a general appositive-like pattern that almost surely indicates coreference.</S>
    <S sid="103" ssid="73">Rather than opt to manually create a set of these coreference patterns as in Hearst (1992), we instead opt to automatically extract these patterns from large corpora as in Snow et al. (2004) and Phillips and Riloff (2007).</S>
    <S sid="104" ssid="74">We take a simple bootstrapping technique: given a set of mention pairs extracted from appositives and predicate-nominative configurations, we extract counts over tree fragments between nodes which have occurred in this set of head pairs (see Figure 5); the tree fragments are formed by annotating the internal nodes in the tree path with the head word and POS along with the subcategorization.</S>
    <S sid="105" ssid="75">We limit the paths extracted in this way in several ways: paths are only allowed to go between adjacent sentences and have a length of at most 10.</S>
    <S sid="106" ssid="76">We then filter the set of paths to those which occur more than a hundred times and with at least 10 distinct seed head word pairs.</S>
    <S sid="107" ssid="77">The vast majority of the extracted fragments are variants of traditional appositives and predicatenominatives with some of the structure of the NPs specified.</S>
    <S sid="108" ssid="78">However there are some tree fragments which correspond to the novel coreference patterns (see Figure 5) of parenthetical alias as well as conjunctions of roles in NPs.</S>
    <S sid="109" ssid="79">We apply our extracted tree fragments to our BLIPP and WIKI data sets and extract a set of compatible word pairs which match these fragments; these words pairs will be used to relax the semantic compatibility filter (see the start of the section); mentions are compatible with prior mentions with the same head or with a semantically compatible head word.</S>
    <S sid="110" ssid="80">This yields 58.5 pairwise F1 (see SEMCOMPAT in Table 2) as well as similar improvements across other metrics.</S>
    <S sid="111" ssid="81">By and large the word pairs extracted in this way are correct (in particular we now have coverage for over two-thirds of the head pair recall errors from Table 1.)</S>
    <S sid="112" ssid="82">There are however wordpairs which introduce errors.</S>
    <S sid="113" ssid="83">In particular citystate constructions (e.g.</S>
    <S sid="114" ssid="84">Los Angeles, California) appears to be an appositive and incorrectly allows our system to have angeles as an antecedent for california.</S>
    <S sid="115" ssid="85">Another common error is that the % symbol is made compatible with a wide variety of common nouns in the financial domain.</S>
  </SECTION>
  <SECTION title="4 Experimental Results" number="4">
    <S sid="116" ssid="1">We present formal experimental results here (see Table 2).</S>
    <S sid="117" ssid="2">We first evaluate our model on the ACE2004-CULOTTA-TEST dataset used in the state-of-the-art systems from Culotta et al. (2007) and Bengston and Roth (2008).</S>
    <S sid="118" ssid="3">Both of these systems were supervised systems discriminatively trained to maximize b3 and used features from many different structured resources including WordNet, as well as domain-specific features (Culotta et al., 2007).</S>
    <S sid="119" ssid="4">Our best b3 result of 79.0 is broadly in the range of these results.</S>
    <S sid="120" ssid="5">We should note that in our work we use neither the gold mention types (we do not model pre-nominals separately) nor do we use the gold NER tags which Bengston and Roth (2008) does.</S>
    <S sid="121" ssid="6">Across metrics, the syntactic constraints and semantic compatibility components contribute most to the overall final result.</S>
    <S sid="122" ssid="7">On the MUC6-TEST dataset, our system outpersion made by the system.</S>
    <S sid="123" ssid="8">Each row is a mention type and the column the predicted mention type antecedent.</S>
    <S sid="124" ssid="9">The majority of errors are made in the NOMINAL category. forms both Poon and Domingos (2008) (an unsupervised Markov Logic Network system which uses explicit constraints) and Finkel and Manning (2008) (a supervised system which uses ILP inference to reconcile the predictions of a pairwise classifier) on all comparable measures.11 Similarly, on the ACE2004-NWIRE dataset, we also outperform the state-of-the-art unsupervised system of Poon and Domingos (2008).</S>
    <S sid="125" ssid="10">Overall, we conclude that our system outperforms state-of-the-art unsupervised systems12 and is in the range of the state-of-the art systems of Culotta et al. (2007) and Bengston and Roth (2008).</S>
  </SECTION>
  <SECTION title="5 Error Analysis" number="5">
    <S sid="126" ssid="1">There are several general trends to the errors made by our system.</S>
    <S sid="127" ssid="2">Table 3 shows the number of pairwise errors made on MUC6-TEST dataset by mention type; note these errors are not equally weighted in the final evaluations because of the transitive closure taken at the end.</S>
    <S sid="128" ssid="3">The most errors are made on nominal mentions with pronouns coming in a distant second.</S>
    <S sid="129" ssid="4">In particular, we most frequently say a nominal is NULL when it has an antecedent; this is typically due to not having the necessary semantic knowledge to link a nominal to a prior expression.</S>
    <S sid="130" ssid="5">In order to get a more thorough view of the cause of pairwise errors, we examined 20 random errors made in aligning each mention type to an antecedent.</S>
    <S sid="131" ssid="6">We categorized the errors as follows: we incorrectly aligned a pronoun to a mention with which it is not semantically compatible (e.g. he aligned to board). mentions with the same head are always compatible.</S>
    <S sid="132" ssid="7">Includes modifier and specificity errors such as allowing Lebanon and Southern Lebanon to corefer.</S>
    <S sid="133" ssid="8">This also includes errors of definiteness in nominals (e.g. the people in the room and Chinese people).</S>
    <S sid="134" ssid="9">Typically, these errors involve a combination of missing syntactic and semantic information.</S>
    <S sid="135" ssid="10">The result of this error analysis is given in Table 4; note that a single error may be attributed to more than one cause.</S>
    <S sid="136" ssid="11">Despite our efforts in Section 3 to add syntactic and semantic information to our system, the largest source of error is still a combination of missing semantic information or annotated syntactic structure rather than the lack of discourse or salience modeling.</S>
    <S sid="137" ssid="12">Our error analysis suggests that in order to improve the state-of-the-art in coreference resolution, future research should consider richer syntactic and semantic information than typically used in current systems.</S>
  </SECTION>
  <SECTION title="6 Conclusion" number="6">
    <S sid="138" ssid="1">Our approach is not intended as an argument against the more complex, discourse-focused approaches that typify recent work.</S>
    <S sid="139" ssid="2">Instead, we note that rich syntactic and semantic processing vastly reduces the need to rely on discourse effects or evidence reconciliation for reference resolution.</S>
    <S sid="140" ssid="3">Indeed, we suspect that further improving the syntactic and semantic modules in our system may produce greater error reductions than any other route forward.</S>
    <S sid="141" ssid="4">Of course, a system which is rich in all axes will find some advantage over any simplified approach.</S>
    <S sid="142" ssid="5">Nonetheless, our coreference system, despite being relatively simple and having no tunable parameters or complexity beyond the non-reference complexity of its component modules, manages to outperform state-of-the-art unsupervised coreference resolution and be broadly comparable to state-of-the-art supervised systems.</S>
  </SECTION>
</PAPER>
