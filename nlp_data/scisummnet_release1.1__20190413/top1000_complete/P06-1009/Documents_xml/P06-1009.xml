<PAPER>
  <S sid="0">Discriminative Word Alignment With Conditional Random Fields</S>
  <ABSTRACT>
    <S sid="1" ssid="1">In this paper we present a novel approach for inducing word alignments from sentence aligned data.</S>
    <S sid="2" ssid="2">We use a Conditional Random Field (CRF), a discriminative model, which is estimated on a small supervised training set.</S>
    <S sid="3" ssid="3">The CRF is conditioned on both the source and target texts, and thus allows for the use of arbitrary and overlapping features over these data.</S>
    <S sid="4" ssid="4">Moreover, the CRF has efficient training and decoding processes which both find globally optimal solutions.</S>
    <S sid="5" ssid="5">We apply this alignment model to both French-English and Romanian-English language pairs.</S>
    <S sid="6" ssid="6">We show how a large number of highly predictive features can be easily incorporated into the CRF, and demonstrate that even with only a few hundred word-aligned training sentences, our model improves over the current state-ofthe-art with alignment error rates of 5.29 and 25.8 for the two tasks respectively.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="7" ssid="1">Modern phrase based statistical machine translation (SMT) systems usually break the translation task into two phases.</S>
    <S sid="8" ssid="2">The first phase induces word alignments over a sentence-aligned bilingual corpus, and the second phase uses statistics over these predicted word alignments to decode (translate) novel sentences.</S>
    <S sid="9" ssid="3">This paper deals with the first of these tasks: word alignment.</S>
    <S sid="10" ssid="4">Most current SMT systems (Och and Ney, 2004; Koehn et al., 2003) use a generative model for word alignment such as the freely available GIZA++ (Och and Ney, 2003), an implementation of the IBM alignment models (Brown et al., 1993).</S>
    <S sid="11" ssid="5">These models treat word alignment as a hidden process, and maximise the probability of the observed (e, f) sentence pairs1 using the expectation maximisation (EM) algorithm.</S>
    <S sid="12" ssid="6">After the maximisation process is complete, the word alignments are set to maximum posterior predictions of the model.</S>
    <S sid="13" ssid="7">While GIZA++ gives good results when trained on large sentence aligned corpora, its generative models have a number of limitations.</S>
    <S sid="14" ssid="8">Firstly, they impose strong independence assumptions between features, making it very difficult to incorporate non-independent features over the sentence pairs.</S>
    <S sid="15" ssid="9">For instance, as well as detecting that a source word is aligned to a given target word, we would also like to encode syntactic and lexical features of the word pair, such as their partsof-speech, affixes, lemmas, etc.</S>
    <S sid="16" ssid="10">Features such as these would allow for more effective use of sparse data and result in a model which is more robust in the presence of unseen words.</S>
    <S sid="17" ssid="11">Adding these non-independent features to a generative model requires that the features&#8217; inter-dependence be modelled explicitly, which often complicates the model (eg.</S>
    <S sid="18" ssid="12">Toutanova et al. (2002)).</S>
    <S sid="19" ssid="13">Secondly, the later IBM models, such as Model 4, have to resort to heuristic search techniques to approximate forward-backward and Viterbi inference, which sacrifice optimality for tractability.</S>
    <S sid="20" ssid="14">This paper presents an alternative discriminative method for word alignment.</S>
    <S sid="21" ssid="15">We use a conditional random field (CRF) sequence model, which allows for globally optimal training and decoding (Lafferty et al., 2001).</S>
    <S sid="22" ssid="16">The inference algorithms are tractable and efficient, thereby avoiding the need for heuristics.</S>
    <S sid="23" ssid="17">The CRF is conditioned on both the source and target sentences, and therefore supports large sets of diverse and overlapping features.</S>
    <S sid="24" ssid="18">Furthermore, the model allows regularisation using a prior over the parameters, a very effective and simple method for limiting over-fitting.</S>
    <S sid="25" ssid="19">We use a similar graphical structure to the directed hidden Markov model (HMM) from GIZA++ (Och and Ney, 2003).</S>
    <S sid="26" ssid="20">This models one-to-many alignments, where each target word is aligned with zero or more source words.</S>
    <S sid="27" ssid="21">Many-to-many alignments are recoverable using the standard techniques for superimposing predicted alignments in both translation directions.</S>
    <S sid="28" ssid="22">The paper is structured as follows.</S>
    <S sid="29" ssid="23">Section 2 presents CRFs for word alignment, describing their form and their inference techniques.</S>
    <S sid="30" ssid="24">The features of our model are presented in Section 3, and experimental results for word aligning both French-English and Romanian-English sentences are given in Section 4.</S>
    <S sid="31" ssid="25">Section 5 presents related work, and we describe future work in Section 6.</S>
    <S sid="32" ssid="26">Finally, we conclude in Section 7.</S>
  </SECTION>
  <SECTION title="2 Conditional random fields" number="2">
    <S sid="33" ssid="1">CRFs are undirected graphical models which define a conditional distribution over a label sequence given an observation sequence.</S>
    <S sid="34" ssid="2">We use a CRF to model many-to-one word alignments, where each source word is aligned with zero or one target words, and therefore each target word can be aligned with many source words.</S>
    <S sid="35" ssid="3">Each source word is labelled with the index of its aligned target, or the special value null, denoting no alignment.</S>
    <S sid="36" ssid="4">An example word alignment is shown in Figure 1, where the hollow squares and circles indicate the correct alignments.</S>
    <S sid="37" ssid="5">In this example the French words une and autre would both be assigned the index 24 &#8211; for the English word another &#8211; when French is the source language.</S>
    <S sid="38" ssid="6">When the source language is English, another could be assigned either index 25 or 26; in these ambiguous situations we take the first index.</S>
    <S sid="39" ssid="7">The joint probability density of the alignment, a (a vector of target indices), conditioned on the source and target sentences, e and f, is given by: where we make a first order Markov assumption over the alignment sequence.</S>
    <S sid="40" ssid="8">Here t ranges over the indices of the source sentence (f), k ranges over the model&#8217;s features, and A = {Ak} are the model parameters (weights for their corresponding features).</S>
    <S sid="41" ssid="9">The feature functions hk are predefined real-valued functions over the source and target sentences coupled with the alignment labels over adjacent times (source sentence locations), t. These feature functions are unconstrained, and may represent overlapping and non-independent features of the data.</S>
    <S sid="42" ssid="10">The distribution is globally normalised by the partition function, Z&#923;(e, f), which sums out the numerator in (1) for every possible alignment: We use a linear chain CRF, which is encoded in the feature functions of (1).</S>
    <S sid="43" ssid="11">The parameters of the CRF are usually estimated from a fully observed training sample (word aligned), by maximising the likelihood of these data.</S>
    <S sid="44" ssid="12">I.e.</S>
    <S sid="45" ssid="13">AML = arg max&#923; p&#923;(D), where D = {(a, e, f)} are the training data.</S>
    <S sid="46" ssid="14">Because maximum likelihood estimators for log-linear models have a tendency to overfit the training sample (Chen and Rosenfeld, 1999), we define a prior distribution over the model parameters and derive a maximum a posteriori (MAP) estimate, AMAP = arg max&#923; p&#923;(D)p(A).</S>
    <S sid="47" ssid="15">We use a zeromean Gaussian prior, with the probability density function p0 (Ak) a exp (&#8722; Q2,&#65533; ) .</S>
    <S sid="48" ssid="16">This yields a ils sont par certaines limites qui ont &#233;t&#233; fix&#233;es garantir que la libert&#233; de une ne pas sur de une . restreints pour personne empi&#232;te celle autre f 1, if eat = &#8216;of&#8217; n ft = &#8216;de&#8217; l 0, otherwise In order to train the model, we maximize (2).</S>
    <S sid="49" ssid="17">While the log-likelihood cannot be maximised for the parameters, A, in closed form, it is a convex function, and thus we resort to numerical optimisation to find the globally optimal parameters.</S>
    <S sid="50" ssid="18">We use L-BFGS, an iterative quasi-Newton optimisation method, which performs well for training log-linear models (Malouf, 2002; Sha and Pereira, 2003).</S>
    <S sid="51" ssid="19">Each L-BFGS iteration requires the objective value and its gradient with respect to the model parameters.</S>
    <S sid="52" ssid="20">These are calculated using forward-backward inference, which yields the partition function, ZA(e, f), required for the log-likelihood, and the pair-wise marginals, pA(at&#8722;1, at|e, f), required for its derivatives.</S>
    <S sid="53" ssid="21">The Viterbi algorithm is used to find the maximum posterior probability alignment for test sentences, a&#8727; = arg maxa pA(a|e,f).</S>
    <S sid="54" ssid="22">Both the forward-backward and Viterbi algorithm are dynamic programs which make use of the Markov assumption to calculate efficiently the exact marginal distributions.</S>
  </SECTION>
  <SECTION title="3 The alignment model" number="3">
    <S sid="55" ssid="1">Before we can apply our CRF alignment model, we must first specify the feature set &#8211; the functions hk in (1).</S>
    <S sid="56" ssid="2">Typically CRFs use binary indicator functions as features; these functions are only active when the observations meet some criteria and the label at (or label pair, (at&#8722;1, at)) matches a pre-specified label (pair).</S>
    <S sid="57" ssid="3">However, in our model the labellings are word indices in the target sentence and cannot be compared readily to labellings at other sites in the same sentence, or in other sentences with a different length.</S>
    <S sid="58" ssid="4">Such naive features would only be active for one labelling, therefore this model would suffer from serious sparse data problems.</S>
    <S sid="59" ssid="5">We instead define features which are functions of the source-target word match implied by a labelling, rather than the labelling itself.</S>
    <S sid="60" ssid="6">For example, from the sentence in Figure 1 for the labelling of f24 = de with a24 = 16 (for e16 = of) we might detect the following feature: h(t, at&#8722;1, at, f, e) = Note that it is the target word indexed by at, rather than the index itself, which determines whether the feature is active, and thus the sparsity of the index label set is not an issue.</S>
    <S sid="61" ssid="7">One of the main advantages of using a conditional model is the ability to explore a diverse range of features engineered for a specific task.</S>
    <S sid="62" ssid="8">In our CRF model we employ two main types of features: those defined on a candidate aligned pair of words; and Markov features defined on the alignment sequence predicted by the model.</S>
    <S sid="63" ssid="9">Dice and Model 1 As we have access to only a small amount of word aligned data we wish to be able to incorporate information about word association from any sentence aligned data available.</S>
    <S sid="64" ssid="10">A common measure of word association is the Dice coefficient (Dice, 1945): where CE and CF are counts of the occurrences of the words e and f in the corpus, while CEF is their co-occurrence count.</S>
    <S sid="65" ssid="11">We treat these Dice values as translation scores: a high (low) value incidates that the word pair is a good (poor) candidate translation.</S>
    <S sid="66" ssid="12">However, the Dice score often over-estimates the association between common words.</S>
    <S sid="67" ssid="13">For instance, the words the and of both score highly when combined with either le or de, simply because these common words frequently co-occur.</S>
    <S sid="68" ssid="14">The GIZA++ models can be used to provide better translation scores, as they enforce competition for alignment beween the words.</S>
    <S sid="69" ssid="15">For this reason, we used the translation probability distribution from Model 1 in addition to the DICE scores.</S>
    <S sid="70" ssid="16">Model 1 is a simple position independent model which can be trained quickly and is often used to bootstrap parameters for more complex models.</S>
    <S sid="71" ssid="17">It models the conditional probability distribution: where p(f|e) are the word translation probabilities.</S>
    <S sid="72" ssid="18">We use both the Dice value and the Model 1 translation probability as real-valued features for each candidate pair, as well as a normalised score over all possible candidate alignments for each target word.</S>
    <S sid="73" ssid="19">We derive a feature from both the Dice and Model 1 translation scores to allow competition between sources words for a particular target alignment.</S>
    <S sid="74" ssid="20">This feature indicates whether a given alignment has the highest translation score of all the candidate alignments for a given target word.</S>
    <S sid="75" ssid="21">For the example in Figure 1, the words la, de and une all receive a high translation score when paired with the.</S>
    <S sid="76" ssid="22">To discourage all of these French words from aligning with the, the best of these (la) is flagged as the best candidate.</S>
    <S sid="77" ssid="23">This allows for competition between source words which would otherwise not occur.</S>
    <S sid="78" ssid="24">Orthographic features Features based on string overlap allow our model to recognise cognates and orthographically similar translation pairs, which are particularly common between European languages.</S>
    <S sid="79" ssid="25">Here we employ a number of string matching features inspired by similar features in Taskar et al. (2005).</S>
    <S sid="80" ssid="26">We use an indicator feature for every possible source-target word pair in the training data.</S>
    <S sid="81" ssid="27">In addition, we include indicator features for an exact string match, both with and without vowels, and the edit-distance between the source and target words as a realvalued feature.</S>
    <S sid="82" ssid="28">We also used indicator features to test for matching prefixes and suffixes of length three.</S>
    <S sid="83" ssid="29">As stated earlier, the Dice translation score often erroneously rewards alignments with common words.</S>
    <S sid="84" ssid="30">In order to address this problem, we include the absolute difference in word length as a real-valued feature and an indicator feature testing whether both words are shorter than 4 characters.</S>
    <S sid="85" ssid="31">Together these features allow the model to disprefer alignments between words with very different lengths &#8211; i.e. aligning rare (long) words with frequent (short) determiners, verbs etc.</S>
    <S sid="86" ssid="32">POS tags Part-of-speech tags are an effective method for addressing the sparsity of the lexical features.</S>
    <S sid="87" ssid="33">Observe in Figure 2 that the nounadjective pair Canadian experts aligns with the adjective-noun pair sp&#180;ecialistes canadiens: the alignment exactly matches the parts-of-speech.</S>
    <S sid="88" ssid="34">Access to the words&#8217; POS tags will allow simple modelling of such effects.</S>
    <S sid="89" ssid="35">POS can also be useful for less closely related language pairs, such as English and Japanese where English determiners are never aligned; nor are Japanese case markers.</S>
    <S sid="90" ssid="36">For our French-English language pair we POS tagged the source and target sentences with TreeTagger.2 We created indicator features over the POS tags of each candidate source and target word pair, as well as over the source word and target POS (and vice-versa).</S>
    <S sid="91" ssid="37">As we didn&#8217;t have access to a Romanian POS tagger, these features were not used for the Romanian-English language pair.</S>
    <S sid="92" ssid="38">Bilingual dictionary Dictionaries are another source of information for word alignment.</S>
    <S sid="93" ssid="39">We use a single indicator feature which detects when the source and target words appear in an entry of the dictionary.</S>
    <S sid="94" ssid="40">For the English-French dictionary we used FreeDict,3 which contains 8,799 English words.</S>
    <S sid="95" ssid="41">For Romanian-English we used a dictionary compiled by Rada Mihalcea,4 which contains approximately 38,000 entries.</S>
    <S sid="96" ssid="42">Markov features Features defined over adjacent aligment labels allow our model to reflect the tendency for monotonic alignments between European languages.</S>
    <S sid="97" ssid="43">We define a real-valued alignment index jump width feature: jump width(t &#8722; 1, t) = abs(at &#8722; at&#8722;1 &#8722; 1) this feature has a value of 0 if the alignment labels follow the downward sloping diagonal, and is positive otherwise.</S>
    <S sid="98" ssid="44">This differs from the GIZA++ hidden Markov model which has individual parameters for each different jump width (Och and Ney, 2003; Vogel et al., 1996): we found a single feature (and thus parameter) to be more effective.</S>
    <S sid="99" ssid="45">We also defined three indicator features over null transitions to allow the modelling of the probability of transition between, to and from null labels.</S>
    <S sid="100" ssid="46">Relative sentence postion A feature for the absolute difference in relative sentence position |&#65533;|)) allows the model to learn a preference for aligning words close to the alignment matrix diagonal.</S>
    <S sid="101" ssid="47">We also included two conjunction features for the relative sentence position multiplied by the Dice and Model 1 translation scores.</S>
    <S sid="102" ssid="48">Null We use a number of variants on the above features for alignments between a source word and the null target.</S>
    <S sid="103" ssid="49">The maximum translation score between the source and one of the target words engineering and for fitting a Gaussian prior.</S>
    <S sid="104" ssid="50">The word aligned data are annotated with both sure (S) and possible (P) alignments (S C P; Och and Ney (2003)), where the possible alignments indicate ambiguous or idiomatic alignments.</S>
    <S sid="105" ssid="51">We measure the performance of our model using alignment error rate (AER), which is defined as: where A is the set of predicted alignments.</S>
    <S sid="106" ssid="52">The second data set is the Romanian-English parallel corpus from the 2005 ACL shared task (Martin et al., 2005).</S>
    <S sid="107" ssid="53">This consists of approximately 50,000 aligned sentences and 448 wordaligned sentences, which are split into a 248 sentence trial set and a 200 sentence test set.</S>
    <S sid="108" ssid="54">We is used as a feature to represent whether there is a strong alignment candidate.</S>
    <S sid="109" ssid="55">The sum of these scores is also used as a feature.</S>
    <S sid="110" ssid="56">Each source word and POS tag pair are used as indicator features which allow the model to learn particular words of tags which tend to commonly (or rarely) align.</S>
    <S sid="111" ssid="57">In order to produce many-to-many alignments we combine the outputs of two models, one for each translation direction.</S>
    <S sid="112" ssid="58">We use the refined method from Och and Ney (2003) which starts from the intersection of the two models&#8217; predictions and &#8216;grows&#8217; the predicted alignments to neighbouring alignments which only appear in the output of one of the models.</S>
  </SECTION>
  <SECTION title="4 Experiments" number="4">
    <S sid="113" ssid="1">We have applied our model to two publicly available word aligned corpora.</S>
    <S sid="114" ssid="2">The first is the English-French Hansards corpus, which consists of 1.1 million aligned sentences and 484 wordaligned sentences.</S>
    <S sid="115" ssid="3">This data set was used for the 2003 NAACL shared task (Mihalcea and Pedersen, 2003), where the word-aligned sentences were split into a 37 sentence trial set and a 447 sentence testing set.</S>
    <S sid="116" ssid="4">Unlike the unsupervised entrants in the 2003 task, we require word-aligned training data, and therefore must cannibalise the test set for this purpose.</S>
    <S sid="117" ssid="5">We follow Taskar et al. (2005) by using the first 100 test sentences for training and the remaining 347 for testing.</S>
    <S sid="118" ssid="6">This means that our results should not be directly compared to those entrants, other than in an approximate manner.</S>
    <S sid="119" ssid="7">We used the original 37 sentence trial set for feature used these as our training and test sets, respectively.</S>
    <S sid="120" ssid="8">For parameter tuning, we used the 17 sentence trial set from the Romanian-English corpus in the 2003 NAACL task (Mihalcea and Pedersen, 2003).</S>
    <S sid="121" ssid="9">For this task we have used the same test data as the competition entrants, and therefore can directly compare our results.</S>
    <S sid="122" ssid="10">The word alignments in this corpus were only annotated with sure (S) alignments, and therefore the AER is equivalent to the Fi score.</S>
    <S sid="123" ssid="11">In the shared task it was found that models which were trained on only the first four letters of each word obtained superior results to those using the full words (Martin et al., 2005).</S>
    <S sid="124" ssid="12">We observed the same result with our model on the trial set and thus have only used the first four letters when training the Dice and Model 1 translation probabilities.</S>
    <S sid="125" ssid="13">Tables 1 and 2 show the results when all feature types are employed on both language pairs.</S>
    <S sid="126" ssid="14">We report the results for both translation directions and when combined using the refined and intersection methods.</S>
    <S sid="127" ssid="15">The Model 4 results are from GIZA++ with the default parameters and the training data lowercased.</S>
    <S sid="128" ssid="16">For Romanian, Model 4 was trained using the first four letters of each word.</S>
    <S sid="129" ssid="17">The Romanian results are close to the best reported result of 26.10 from the ACL shared task (Martin et al., 2005).</S>
    <S sid="130" ssid="18">This result was from a system based on Model 4 plus additional parameters such as a dictionary.</S>
    <S sid="131" ssid="19">The standard Model 4 implementation in the shared task achieved a result of 31.65, while when only the first 4 letters of each word were used it achieved 28.80.5 Table 3 shows the effect of removing each of the feature types in turn from the full model.</S>
    <S sid="132" ssid="20">The most useful features are the Dice and Model 1 values which allow the model to incorporate translation probabilities from the large sentence aligned corpora.</S>
    <S sid="133" ssid="21">This is to be expected as the amount of word aligned data are extremely small, and therefore the model can only estimate translation probabilities for only a fraction of the lexicon.</S>
    <S sid="134" ssid="22">We would expect the dependence on sentence aligned data to decrease as more word aligned data becomes available.</S>
    <S sid="135" ssid="23">The effect of removing the Markov features can be seen from comparing Figures 2 (a) and (b).</S>
    <S sid="136" ssid="24">The model has learnt to prefer alignments that follow the diagonal, thus alignments such as 3 H three and prestation H provision are found, and missalignments such as de H of, which lie well off the diagonal, are avoided.</S>
    <S sid="137" ssid="25">The differing utility of the alignment word pair feature between the two tasks is probably a result of the different proportions of word- to sentencealigned data.</S>
    <S sid="138" ssid="26">For the French data, where a very large lexicon can be estimated from the million sentence alignments, the sparse word pairs learnt on the word aligned sentences appear to lead to overfitting.</S>
    <S sid="139" ssid="27">In contrast, for Romanian, where more word alignments are used to learn the translation pair features and much less sentence aligned data are available, these features have a significant impact on the model.</S>
    <S sid="140" ssid="28">Suprisingly the orthographic features actually worsen the performance in the tasks (incidentally, these features help the trial set).</S>
    <S sid="141" ssid="29">Our explanation is that the other features (eg.</S>
    <S sid="142" ssid="30">Model 1) already adequately model these correspondences, and therefore the orthographic features do not add much additional modelling power.</S>
    <S sid="143" ssid="31">We expect that with further careful feature engineering, and a larger trial set, these orthographic features could be much improved.</S>
    <S sid="144" ssid="32">The Romanian-English language pair appears to offer a more difficult modelling problem than the French-English pair.</S>
    <S sid="145" ssid="33">With both the translation score features (Dice and Model 1) removed &#8211; the sentence aligned data are not used &#8211; the AER of the Romanian is more than twice that of the French, despite employing more word aligned data.</S>
    <S sid="146" ssid="34">This could be caused by the lack of possible (P) alignment markup in the Romanian data, which provide a boost in AER on the French data set, rewarding what would otherwise be considered errors.</S>
    <S sid="147" ssid="35">Interestingly, without any features derived from the sentence aligned corpus, our model achieves performance equivalent to Model 3 trained on the full corpus (Och and Ney, 2003).</S>
    <S sid="148" ssid="36">This is a particularly strong result, indicating that this method is ideal for data-impoverished alignment tasks.</S>
    <S sid="149" ssid="37">Up to this point our Hansards model has been trained using only the sure (S) alignments.</S>
    <S sid="150" ssid="38">As the data set contains many possible (P) alignments, we would like to use these to improve our model.</S>
    <S sid="151" ssid="39">Most of the possible alignments flag blocks of ambiguous or idiomatic (or just difficult) phrase level alignments.</S>
    <S sid="152" ssid="40">These many-to-many alignments cannot be modelled with our many-to-one setup.</S>
    <S sid="153" ssid="41">However, a number of possibles flag oneto-one or many-to-one aligments: for this experiment we used these possibles in training to investigate their effect on recall.</S>
    <S sid="154" ssid="42">Using these additional alignments our refined precision decreased from 95.7 to 93.5, while recall increased from 89.2 to 92.4.</S>
    <S sid="155" ssid="43">This resulted in an overall decrease in AER to 6.99.</S>
    <S sid="156" ssid="44">We found no benefit from using many-tomany possible alignments as they added a significant amount of noise to the data.</S>
    <S sid="157" ssid="45">Previous work (Taskar et al., 2005) has demonstrated that by including the output of Model 4 as a feature, it is possible to achieve a significant decrease in AER.</S>
    <S sid="158" ssid="46">We trained Model 4 in both directions on the two language pairs.</S>
    <S sid="159" ssid="47">We added two indicator features (one for each direction) to our CRF which were active if a given word pair were aligned in the Model 4 output.</S>
    <S sid="160" ssid="48">Table 4 displays the results on both language pairs when these additional features are used with the refined model.</S>
    <S sid="161" ssid="49">This produces a large increase in performance, and when including the possibles, produces AERs of 5.29 and 25.8, both well below that of Model 4 alone (shown in Tables 1 and 2).</S>
    <S sid="162" ssid="50">Using 10-fold cross-validation we are able to generate results on the whole of the Hansards test data which are comparable to previously published results.</S>
    <S sid="163" ssid="51">As the sentences in the test set were randomly chosen from the training corpus we can expect cross-validation to give an unbiased estimate of generalisation performance.</S>
    <S sid="164" ssid="52">These results are displayed in Table 5, using the possible (P) alignments for training.</S>
    <S sid="165" ssid="53">As the training set for each fold is roughly four times as big previous training set, we see a small improvement in AER.</S>
    <S sid="166" ssid="54">The final results of 6.47 and 5.19 with and without Model 4 features both exceed the performance of Model 4 alone.</S>
    <S sid="167" ssid="55">However the unsupervised Model 4 did not have access to the wordalignments in our training set.</S>
    <S sid="168" ssid="56">Callison-Burch et al. (2004) demonstrated that the GIZA++ models could be trained in a semi-supervised manner, leading to a slight decrease in error.</S>
    <S sid="169" ssid="57">To our knowledge, our AER of 5.19 is the best reported result, generative or discriminative, on this data set.</S>
  </SECTION>
  <SECTION title="5 Related work" number="5">
    <S sid="170" ssid="1">Recently, a number of discriminative word alignment models have been proposed, however these early models are typically very complicated with many proposing intractable problems which require heuristics for approximate inference (Liu et al., 2005; Moore, 2005).</S>
    <S sid="171" ssid="2">An exception is Taskar et al. (2005) who presented a word matching model for discriminative alignment which they they were able to solve optimally.</S>
    <S sid="172" ssid="3">However, their model is limited to only providing one-to-one alignments.</S>
    <S sid="173" ssid="4">Also, no features were defined on label sequences, which reduced the model&#8217;s ability to capture the strong monotonic relationships present between European language pairs.</S>
    <S sid="174" ssid="5">On the French-English Hansards task, using the same training/testing setup as our work, they achieve an AER of 5.4 with Model 4 features, and 10.7 without (compared to 5.29 and 6.99 for our CRF).</S>
    <S sid="175" ssid="6">One of the strengths of the CRF MAP estimation is the powerful smoothing offered by the prior, which allows us to avoid heuristics such as early stopping and hand weighted loss-functions that were needed for the maximum-margin model.</S>
    <S sid="176" ssid="7">Liu et al. (2005) used a conditional log-linear model with similar features to those we have employed.</S>
    <S sid="177" ssid="8">They formulated a global model, without making a Markovian assumption, leading to the need for a sub-optimal heuristic search strategies.</S>
    <S sid="178" ssid="9">Ittycheriah and Roukos (2005) trained a discriminative model on a corpus of ten thousand word aligned Arabic-English sentence pairs that outperformed a GIZA++ baseline.</S>
    <S sid="179" ssid="10">As with other approaches, they proposed a model which didn&#8217;t allow a tractably optimal solution and thus had to resort to a heuristic beam search.</S>
    <S sid="180" ssid="11">They employed a log-linear model to learn the observation probabilities, while using a fixed transition distribution.</S>
    <S sid="181" ssid="12">Our CRF model allows both the observation and transition components of the model to be jointly optimised from the corpus.</S>
  </SECTION>
  <SECTION title="6 Further work" number="6">
    <S sid="182" ssid="1">The results presented in this paper were evaluated in terms of AER.</S>
    <S sid="183" ssid="2">While a low AER can be expected to improve end-to-end translation quality, this is may not necessarily be the case.</S>
    <S sid="184" ssid="3">Therefore, we plan to assess how the recall and precision characteristics of our model affect translation quality.</S>
    <S sid="185" ssid="4">The tradeoff between recall and precision may affect the quality and number of phrases extracted for a phrase translation table.</S>
  </SECTION>
  <SECTION title="7 Conclusion" number="7">
    <S sid="186" ssid="1">We have presented a novel approach for inducing word alignments from sentence aligned data.</S>
    <S sid="187" ssid="2">We showed how conditional random fields could be used for word alignment.</S>
    <S sid="188" ssid="3">These models allow for the use of arbitrary and overlapping features over the source and target sentences, making the most of small supervised training sets.</S>
    <S sid="189" ssid="4">Moreover, we showed how the CRF&#8217;s inference and estimation methods allowed for efficient processing without sacrificing optimality, improving on previous heuristic based approaches.</S>
    <S sid="190" ssid="5">On both French-English and Romanian-English we showed that many highly predictive features can be easily incorporated into the CRF, and demonstrated that with only a few hundred wordaligned training sentences, our model outperforms the generative Model 4 baseline.</S>
    <S sid="191" ssid="6">When no features are extracted from the sentence aligned corpus our model still achieves a low error rate.</S>
    <S sid="192" ssid="7">Furthermore, when we employ features derived from Model 4 alignments our CRF model achieves the highest reported results on both data sets.</S>
  </SECTION>
  <SECTION title="Acknowledgements" number="8">
    <S sid="193" ssid="1">Special thanks to Miles Osborne, Steven Bird, Timothy Baldwin and the anonymous reviewers for their feedback and insightful comments.</S>
  </SECTION>
</PAPER>
