<PAPER>
  <S sid="0">The NomBank Project: An Interim Report</S>
  <ABSTRACT>
    <S sid="1" ssid="1">This paper describes NomBank, a project that will provide argument structure for instances of common nouns in the Penn Treebank II corpus.</S>
    <S sid="2" ssid="2">NomBank is part of a larger effort to add additional layers of annotation to the Penn Treebank II corpus.</S>
    <S sid="3" ssid="3">The University of Pennsylvania&#8217;s PropBank, NomBank and other annotation projects taken together should lead to the creation of better tools for the automatic analysis of text.</S>
    <S sid="4" ssid="4">This paper describes the NomBank project in detail including its specifications and the process involved in creating the resource.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">This paper introduces the NomBank project.</S>
    <S sid="6" ssid="2">When complete, NomBank will provide argument structure for instances of about 5000 common nouns in the Penn Treebank II corpus.</S>
    <S sid="7" ssid="3">NomBank is part of a larger effort to add layers of annotation to the Penn Treebank II corpus.</S>
    <S sid="8" ssid="4">PropBank (Kingsbury et al., 2002; Kingsbury and Palmer, 2002; University of Pennsylvania, 2002), NomBank and other annotation projects taken together should lead to the creation of better tools for the automatic analysis of text.</S>
    <S sid="9" ssid="5">These annotation projects may be viewed as part of what we think of as an a la carte strategy for corpus-based natural language processing.</S>
    <S sid="10" ssid="6">The fragile and inaccurate multistage parsers of a few decades were replaced by treebank-based parsers, which had better performance, but typically provided more shallow analyses.1 As the same set of data is annotated with more and more levels of annotation, a new type of multistage processing becomes possible that could reintroduce this information, 1A treebank-based parser output is defined by the treebank on which it is based.</S>
    <S sid="11" ssid="7">As these treebanks tend to be of a fairly shallow syntactic nature, the resulting parsers tend to be so also. but in a more robust fashion.</S>
    <S sid="12" ssid="8">Each stage of processing is defined by a body of annotated data which provides a symbolic framework for that level of representation.</S>
    <S sid="13" ssid="9">Researchers are free to create and use programs that map between any two levels of representation, or which map from bare sentences to any level of representation.2 Furthermore, users are free to shop around among the available programs to map from one stage to another.</S>
    <S sid="14" ssid="10">The hope is that the standardization imposed by the annotated data will insure that many researchers will be working within the same set of frameworks, so that one researcher&#8217;s success will have a greater chance of benefiting the whole community.</S>
    <S sid="15" ssid="11">Whether or not one adapts an a la carte approach, NomBank and PropBank projects provide users with data to recognize regularizations of lexically and syntactically related sentence structures.</S>
    <S sid="16" ssid="12">For example, suppose one has an Information Extraction System tuned to a hiring/firing scenario (MUC, 1995).</S>
    <S sid="17" ssid="13">One could use NomBank and PropBank to generalize patterns so that one pattern would do the work of several.</S>
    <S sid="18" ssid="14">Given a pattern stating that the object (ARG1) of appoint is John and the subject (ARG0) is IBM, a PropBank/NomBank enlightened system could detect that IBM hired John from the following strings: IBM appointed John, John was appointed by IBM, IBM&#8217;s appointment of John, the appointment of John by IBM and John is the current IBM appointee.</S>
    <S sid="19" ssid="15">Systems that do not regularize across predicates would require separate patterns for each of these environments.</S>
    <S sid="20" ssid="16">The NomBank project went through several stages before annotation could begin.</S>
    <S sid="21" ssid="17">We had to create specifications and various lexical resources to delineate the task.</S>
    <S sid="22" ssid="18">Once the task was set, we identified classes of words.</S>
    <S sid="23" ssid="19">We used these classes to approximate lexical entries, make time estimates and create automatic procedures to aid in 2Here, we use the term &#8220;level of representation&#8221; quite loosely to include individual components of what might conventionally be considered a single level.</S>
    <S sid="24" ssid="20">REL = growth, ARG1 = in dividends, ARG2-EXT = 12%, ARGM-TMP = next year 8. a possible U.S. troop reduction in South Korea[NOM W/ARGMs] REL = reduction, ARG1 = U.S. troop, ARGM-LOC = in South Korea, ARGM-ADV = possible annotation.</S>
    <S sid="25" ssid="21">For the first nine months of the project, the NomBank staff consisted of one supervisor and one annotator.</S>
    <S sid="26" ssid="22">Once the specifications were nailed down, we hired additional annotators to complete the project.</S>
    <S sid="27" ssid="23">This paper provides an overview of the project including an abbreviated version of the specifications (the full version is obtainable upon request) and a chronicle of our progress.</S>
  </SECTION>
  <SECTION title="2 The Specifications" number="2">
    <S sid="28" ssid="1">Figure 1 lists some sample NomBank propositions along with the class of the noun predicate (NOM stands for nominalization, DEFREL is a type of relational noun).</S>
    <S sid="29" ssid="2">For each &#8220;markable&#8221; instance of a common noun in the Penn Treebank, annotators create a &#8220;proposition&#8221;, a subset of the features REL, SUPPORT, ARG0, ARG1, ARG2, ARG3, ARG4, ARGM paired with pointers to phrases in Penn Treebank II trees.</S>
    <S sid="30" ssid="3">A noun instance is markable if it is accompanied by one of its arguments (ARG0, ARG1, ARG2, ARG3, ARG4) or if it is a nominalization (or similar word) and it is accompanied by one of the allowable types of adjuncts (ARGM-TMP, ARGMLOC, ARGM-ADV, ARGM-EXT, etc.)</S>
    <S sid="31" ssid="4">&#8211; the same set of adjuncts used in PropBank.3 The basic idea is that each triple REL, SENSE, ARGNUM uniquely defines an argument, given a particular sense of a particular REL (or predicate), where ARGNUM is one of the numbered arguments (ARG0, ARG1, ARG2, ARG3, ARG4) and SENSE is one of the senses of that REL.</S>
    <S sid="32" ssid="5">The arguments are essentially the same as the initial relations of Relational Grammar (Perlmutter and Postal, 1984; Rosen, 1984).</S>
    <S sid="33" ssid="6">For example, agents tend to be classified as ARG0 (RG&#8217;s initial subject), patients and themes tend to be classified as ARG1 (RG&#8217;s initial object) and indirect objects of all kinds tend to be classified as ARG2.</S>
    <S sid="34" ssid="7">The lexical entry or frame for each noun provides one inventory of argument labels for each sense of that word.4 Each proposition (cf. figure 1) consists of an instance of an argument-taking noun (REL) plus arguments (ARG0, ARG1, ARG2, ), SUPPORT items and/or adjuncts (ARGM).</S>
    <S sid="35" ssid="8">SUPPORT items are words that link arguments that occur outside an NP to the nominal predicate that heads that NP, e.g., &#8220;made&#8221; SUPPORTS &#8220;We&#8221; as the ARG0 of decision in We made a decision.</S>
    <S sid="36" ssid="9">ARGMs are adjuncts of the noun.</S>
    <S sid="37" ssid="10">However, we only mark the sort of adjuncts that also occur in sentences: locations (ARGM-LOC), temporal (ARGM-TMP), sentence adverbial (ARGM-ADV) and various others.</S>
  </SECTION>
  <SECTION title="3 Lexical Entries and Noun Classes" number="3">
    <S sid="38" ssid="1">Before we could begin annotation, we needed to classify all the common nouns in the corpus.</S>
    <S sid="39" ssid="2">We needed to know which nouns were markable and make initial approximations of the inventories of senses and arguments for each noun.</S>
    <S sid="40" ssid="3">Toward this end, we pooled a number of resources: COMLEX Syntax (Macleod et al., 1998a), NOMLEX (Macleod et al., 1998b) and the verb classes from (Levin, 1993).</S>
    <S sid="41" ssid="4">We also used string matching techniques and hand classification in combination with programs that automatically merge crucial features of these resources.</S>
    <S sid="42" ssid="5">The result was NOMLEX-PLUS, a NOMLEX-style dictionary, which includes the original 1000 entries in NOMLEX plus 6000 additional entries (Meyers et al., 2004).</S>
    <S sid="43" ssid="6">The resulting noun classes include verbal nominalizations (e.g., destruction, knowledge, believer, recipient), adjectival nominalizations (ability, bitterness), and 16 other classes such as relational (father, president) and partitive nouns (set, variety).</S>
    <S sid="44" ssid="7">NOMLEX-PLUS helped us break down the nouns into classes, which in turn helped us gain an understanding of the difficulty of the task and the manpower needed to complete the task.</S>
    <S sid="45" ssid="8">We used a combination of NOMLEX-PLUS and PropBank&#8217;s lexical entries (or frames) to produce automatic approximations of noun frames for NomBank.</S>
    <S sid="46" ssid="9">These entries specify the inventory of argument roles for the annotators.</S>
    <S sid="47" ssid="10">For nominalizations of verbs that were covered in PropBank, we used straightforward procedures to convert existing PropBank lexical entries to nominal ones.</S>
    <S sid="48" ssid="11">However, other entries needed to be created by automatic means, by hand or by a combination of the two.</S>
    <S sid="49" ssid="12">Figure 2 compares the PropBank lexical entry for the verb claim with the NomBank entry for the noun claim.</S>
    <S sid="50" ssid="13">The noun claim and the verb claim share both the ASSERT sense and the SEIZE sense, permitting the same set of argument roles for those senses.</S>
    <S sid="51" ssid="14">However, only the ASSERT sense is actually attested in the sample PropBank corpus that was available when we began working on NomBank.</S>
    <S sid="52" ssid="15">Thus we added the SEIZE sense to both the noun and verb entries.</S>
    <S sid="53" ssid="16">The noun claim also has a LAWSUIT sense which bears an entry similar to the verb sue.</S>
    <S sid="54" ssid="17">Thus our initial entry for the noun claim was a copy of the verb entry at that time.</S>
    <S sid="55" ssid="18">An annotator edited the frames to reflect noun usage &#8211; she added the second and third senses to the noun frame and updated the verb frame to include the second sense.</S>
    <S sid="56" ssid="19">In NOMLEX-PLUS, we marked anniversary and advantage as &#8220;cousins&#8221; of nominalizations indicating that their lexical entries should be modeled respectively on the verbs commemorate and exploit, although both entries needed to be modified in some respect.</S>
    <S sid="57" ssid="20">We use the term &#8220;cousins&#8221; of nominalizations to refer to those nouns which take argument structure similar to some verb (or adjective), but which are not morphologically related to that word.</S>
    <S sid="58" ssid="21">Examples are provided in Figure 3 and 4.</S>
    <S sid="59" ssid="22">For adjective nominalizations, we began with simple procedures which created frames based on NOMLEX-PLUS entries (which include whether the subject is +/-sentient).</S>
    <S sid="60" ssid="23">The entry for &#8220;accuracy&#8221; (the nominalization of the adjective accurate) plus a simple example is provided in figure 5 &#8211; the ATTRIBUTE-LIKE frame is one of the most common frames for adjective nominalizations.</S>
    <S sid="61" ssid="24">To cover the remaining nouns in the corpus, we created classes of lexical items and manually constructed one frame for each class.</S>
    <S sid="62" ssid="25">Each member of a class was was given the corresponding frame.</S>
    <S sid="63" ssid="26">Figure 6 provides a sample of these classes, along with descriptions of their frames.</S>
    <S sid="64" ssid="27">As with the nominalization cousins, annotators sometimes had to adjust these frames for particular words.</S>
  </SECTION>
  <SECTION title="4 A Merged Representation" number="4">
    <S sid="65" ssid="1">Beginning with the PropBank and NomBank propositions in Figure 7, it is straight-forward to derive the Roles: ARG0 = agent, ARG1 = thing remembered, ARG2 = times celebrated Noun Example: Investors celebrated the second anniversary of Black Monday.</S>
  </SECTION>
  <SECTION title="1." number="5">
    <S sid="66" ssid="1">Roles: ARG0 = exploiter, ARG1 = entity exploited Noun Example: Investors took advantage of Tuesday &#8217;s stock rally.</S>
    <S sid="67" ssid="2">REL = advantage, SUPPORT = took, ARG0 = Investors, ARG1 = of Tuesday&#8217;s stock rally 1.</S>
    <S sid="68" ssid="3">ATTRIBUTE-LIKE Roles: ARG1 =theme Noun Example: the accuracy of seasonal adjustments built into the employment data REL = accuracy, ARG1 = of seasonal adjustments built into PropBank: REL = gave, ARG0 = they, ARG1 = a standing ovation, ARG2 = the chefs NomBank: REL = ovation, ARG0 = they, ARG1 = the chefs, SUPPORT = gave combined PropBank/NomBank graphical representation in Figure 8 in which each role corresponds to an arc label.</S>
    <S sid="69" ssid="4">For this example, think of the argument structure of the noun ovation as analogous to the verb applaud.</S>
    <S sid="70" ssid="5">According to our analysis, they are both the givers and the applauders and the chefs are both the recipients of something given and the ones who are applauded.</S>
    <S sid="71" ssid="6">Gave and ovation have two distinct directional relations: a standing ovation is something that is given and gave serves as a link between ovation and its two arguments.</S>
    <S sid="72" ssid="7">This diagram demonstrates how NomBank is being designed for easy integration with PropBank.</S>
    <S sid="73" ssid="8">We believe that this is the sort of predicate argument representation that will be needed to easily merge this work with other annotation efforts.</S>
  </SECTION>
  <SECTION title="5 Analysis of the Task" number="6">
    <S sid="74" ssid="1">As of this writing we have created the various lexicons associated with NomBank.</S>
    <S sid="75" ssid="2">This has allowed us to break down the task as follows: There are approximately 240,000 instances of common nouns in the PTB (approximately one out of every 5 words).</S>
    <S sid="76" ssid="3">At least 36,000 of these are nouns that cannot take arguments and therefore need not be looked at by an There are approximately 99,000 instances of verbal nominalizations or related items (e.g., cousins) There are approximately 34,000 partitives (including 6,000 instances of the percent sign), 18,000 subject nominalizations, 14,000 environmental nouns, 14,000 relational nouns and fewer instances of the various other classes.</S>
    <S sid="77" ssid="4">Approximately 1/6 of the cases are instances of nouns which occur in multiple classes.5 The difficulty of the annotation runs the gamut from nominalization instances which include the most arguments, the most adjuncts and the most instances of support to the partitives, which have the simplest and most predictable structure.</S>
  </SECTION>
  <SECTION title="6 Error Analysis and Error Detection" number="7">
    <S sid="78" ssid="1">We have conducted some preliminary consistency tests for about 500 instances of verbal nominalizations during the training phases of NomBank.</S>
    <S sid="79" ssid="2">These tests yielded inter-annotator agreement rates of about 85% for argument roles and lower for adjunct roles.</S>
    <S sid="80" ssid="3">We are currently engaging in an effort to improve these results.6 We have identified certain main areas of disagreement including: disagreements concerning SUPPORT verbs and the shared arguments that go with them; disagreements about role assignment to prenominals; and differences between annotators caused by errors (typos, slips of the mouse, ill-formed output, etc.)</S>
    <S sid="81" ssid="4">In addition to improving our specifications and annotator help texts, we are beginning to employ some automatic means for error detection.</S>
    <S sid="82" ssid="5">For inconsistencies with SUPPORT, our main line of attack has been to outline problems and solutions in our specifications.</S>
    <S sid="83" ssid="6">We do not have any automatic system in effect yet, although we may in the near future.</S>
    <S sid="84" ssid="7">SUPPORT verbs (Gross, 1981; Gross, 1982; Mel&#8217;&#710;cuk, 1988; Mel&#8217;&#710;cuk, 1996; Fontenelle, 1997) are verbs which 5When a noun fits into multiple categories, those categories may predict multiple senses, but not necessarily.</S>
    <S sid="85" ssid="8">For example, drive has a nominalization sense (He went for a drive) and an attribute sense (She has a lot of drive).</S>
    <S sid="86" ssid="9">Thus the lexical entry for drive includes both senses.</S>
    <S sid="87" ssid="10">In constrast, teacher in the math teacher has the same analysis regardless of whether one thinks of it as the nominalization of teach or as a relational (ACTREL) noun.</S>
    <S sid="88" ssid="11">6Consistency is the average precision and recall against a gold standard.</S>
    <S sid="89" ssid="12">The preliminary tests were conducted during training, and only on verbal nominalizations. connect nouns to one (or more) of their arguments via argument sharing.</S>
    <S sid="90" ssid="13">For example, in John took a walk, the verb took &#8220;shares&#8221; its subject with the noun walk.</S>
    <S sid="91" ssid="14">SUPPORT verbs can be problematic for a number of reasons.</S>
    <S sid="92" ssid="15">First of all the concept of argument sharing is not black and white.</S>
    <S sid="93" ssid="16">To illustrate these shades of gray, compare the relation of Mary to attack in: Mary&#8217;s attack against the alligator, Mary launched an attack against the alligator, Mary participated in an attack against the alligator, Mary planned an attack against the alligator and Mary considered an attack against the alligator.</S>
    <S sid="94" ssid="17">In each subsequent example, Mary&#8217;s &#8220;level of agency&#8221; decreases with respect to the noun attack.</S>
    <S sid="95" ssid="18">However, in each case Mary may still be viewed as some sort of potential attacker.</S>
    <S sid="96" ssid="19">It turned out that the most consistent position for us to take was to assume all degrees of argument-hood (in this case subject-hood) were valid.</S>
    <S sid="97" ssid="20">So, we would mark Mary as the ARG0 of attack in all these instances.</S>
    <S sid="98" ssid="21">This is consistent with the way control and raising structures are marked for verbs, e.g., John is the subject of leave and do in John did not seem to leave and John helped do the project under most accounts of verbal argument structure that take argument sharing (control, raising, etc.) into account.</S>
    <S sid="99" ssid="22">Of course a liberal view of SUPPORT has the danger of overgeneration.</S>
    <S sid="100" ssid="23">Consider for example, Market conditions led to the cancellation of the planned exchange.</S>
    <S sid="101" ssid="24">The unwary annotator might assume that market conditions is the ARG0 (or subject) of cancellation.</S>
    <S sid="102" ssid="25">In fact, the combination lead to and cancellation do not have any of the typical features of SUPPORT described in figure 9.</S>
    <S sid="103" ssid="26">However, the final piece of evidence is that market conditions violate the selection restrictions of cancellation.</S>
    <S sid="104" ssid="27">Thus the following paraphrase is ill-formed *Market conditions canceled the planned exchange.</S>
    <S sid="105" ssid="28">This suggests that market conditions is the subject of lead and not the subject of cancellation.</S>
    <S sid="106" ssid="29">Therefore, this is not an instance of support in spite of the apparent similarity.</S>
    <S sid="107" ssid="30">We require that the SUPPORT relation be lexical.</S>
    <S sid="108" ssid="31">In other words, there must be something special about a SUPPORT verb or the combination of the SUPPORT verb and the noun to license the argument sharing relation.</S>
    <S sid="109" ssid="32">In addition to SUPPORT, we have cataloged several argument sharing phenomena which are markable.</S>
    <S sid="110" ssid="33">For example, consider the sentence, President Bush arrived for a celebration.</S>
    <S sid="111" ssid="34">Clearly, President Bush is the ARG0 of celebration (one of the people celebrating).</S>
    <S sid="112" ssid="35">However, arrive is not a SUPPORT verb.</S>
    <S sid="113" ssid="36">The phrase for a celebration is a subject-oriented adverbial, similar to adverbs like willingly, which takes the subject of the sentence as an argument.</S>
    <S sid="114" ssid="37">Thus President Bush could also be the subject of celebration in President Bush waddled into town for the celebration and many similar sentences that contain this PP.</S>
    <S sid="115" ssid="38">Finally, there are cases where argument sharing may Support verb/noun pairs can be idiosyncratically connected to the point that some researchers would call them idioms or phrasal verbs, e.g., take a walk, keep tabs on.</S>
    <S sid="116" ssid="39">The verb can be essentially &#8220;empty&#8221;, e.g., make an attack, have a visit.</S>
    <S sid="117" ssid="40">The &#8220;verb/noun&#8221; combination may take a different set of arguments than either does alone, e.g., take advantage of.</S>
    <S sid="118" ssid="41">Some support verbs share the subject of almost any nominalization in a particular argument slot.</S>
    <S sid="119" ssid="42">For example attempt shares its subject with most following nominalizations, e.g., He attempted an attack.</S>
    <S sid="120" ssid="43">These are the a lot like raising/control predicates.</S>
    <S sid="121" ssid="44">In some cases, the support verb and noun are from similar semantic classes, making argument sharing very likely, e.g., fight a battle. be implied by discourse processes, but which we do not mark (as we are only handling sentence-level phenomena).</S>
    <S sid="122" ssid="45">For example, the words proponent and rival strongly imply that certain arguments appear in the discourse, but not necessarily in the same sentence.</S>
    <S sid="123" ssid="46">For example in They didn&#8217;t want the company to fall into the hands of a rival, there is an implication that the company is an ARG1 of rival, i.e., a rival should be interpreted as a rival of the company.7 The connection between a rival and the company is called a &#8220;bridging&#8221; relation (a process akin to coreference, cf.</S>
    <S sid="124" ssid="47">(Poesio and Vieira, 1998)) In other words, fall into the hands of does not link &#8220;rival&#8221; with the company by means of SUPPORT.</S>
    <S sid="125" ssid="48">The fact that a discourse relation is responsible for this connection becomes evident when you see that the link between rival and company can cross sentence boundaries, e.g., The company was losing money.</S>
    <S sid="126" ssid="49">This was because a rival had come up with a really clever marketing strategy.</S>
    <S sid="127" ssid="50">ARGM is the annotation tag used for nonarguments, also known as adjuncts.</S>
    <S sid="128" ssid="51">For nouns, it was decided to only tag such types of adjuncts as are also found with verbs, e.g., temporal, locative, manner, etc.</S>
    <S sid="129" ssid="52">The rationale for this included: (1) only the argument-taking common nouns are being annotated and other sorts of adjuncts occur with common nouns in general; (2) narrowing the list of potential labels helped keep the labeling consistent; and (3) this was the minimum set of adjuncts that would keep the noun annotation consistent with the verb annotation.</S>
    <S sid="130" ssid="53">Unfortunately, it was not always clear whether a prenominal modifier (particularly an adjective) fell into one of our classes or not.</S>
    <S sid="131" ssid="54">If an annotator felt that a modifier was somehow &#8220;important&#8221;, there was a temptation to push it into one of the modifier classes even if it was not a perfect fit.</S>
    <S sid="132" ssid="55">Furthermore, some annotators had a broader view than others as to the sorts of semantic relationships that fell within particular classes of adjuncts, particularly locative (LOC), manner (MNR) and extent (EXT).</S>
    <S sid="133" ssid="56">Unlike the SUPPORT verbs, which are often idiosyncratic to particular nominal predicates, adjunct prenominal modifiers usually behave the same way regardless of the noun with which they occur.</S>
    <S sid="134" ssid="57">In order to identify these lexical properties of prenominals, we created a list of all time nouns from COMLEX Syntax (ntime1 and ntime2) and we created a specialized dictionary of adjectives with adverbial properties which we call ADJADV.</S>
    <S sid="135" ssid="58">The list of adjective/adverb pairs in ADJADV came from two sources: (1) a list of adjectives that are morphologically linked to -ly adverbs created using some string matching techniques; and (2) adjective/adverb pairs from CATVAR (Habash and Dorr, 2003).</S>
    <S sid="136" ssid="59">We pruned this list to only include adjectives found in the Penn Treebank and then edited out inappropriate word pairs.</S>
    <S sid="137" ssid="60">We completed the dictionary by transferring portions of the COMLEX Syntax adverb entries to the corresponding adjectives.</S>
    <S sid="138" ssid="61">We now use ADJADV and our list of temporal nouns to evaluate NOMBANK annotation of modifiers.</S>
    <S sid="139" ssid="62">Each annotated left modifier is compared against our dictionaries.</S>
    <S sid="140" ssid="63">If a modifier is a temporal noun, it can bear the ARGM-TMP role (temporal adjunct role), e.g., the temporal noun morning can fill the ARGM-TMP slot in the morning broadcast.</S>
    <S sid="141" ssid="64">Most other common nouns are compatible with argument role slots (ARG0, ARG1, etc.</S>
    <S sid="142" ssid="65">), e.g., the noun news can fill the ARG1 slot in the news broadcast.</S>
    <S sid="143" ssid="66">Finally, roles associated with adjectives depend on their ADJADV entry, e.g., possible can be an ARGM-ADV in possible broadcasts due to the epistemic feature encoded in the lexical entry for possible (derived from the corresponding adjverb possibly).</S>
    <S sid="144" ssid="67">Discrepancies between these procedures and the annotator are resolved on a case by case basis.</S>
    <S sid="145" ssid="68">If the dictionary is wrong, the dictionary should be changed, e.g., root, as in root cause was added to the dictionary as a potential MNR adjective with a meaning like the adverb basically.</S>
    <S sid="146" ssid="69">However, if the annotator is wrong, the annotation should be changed, e.g., if an annotator marked &#8220;slow&#8221; as a ARGM-TMP, the program would let them know that it should be a ARGMMNR.</S>
    <S sid="147" ssid="70">This process both helps with annotation accuracy and enriches our lexical database.</S>
    <S sid="148" ssid="71">We used other procedures to detect errors including: Nom-type Argument nominalizations are nominalizations that play the role of one of the arguments in the ROLESET.</S>
    <S sid="149" ssid="72">Thus the word acquirer should be assigned the ARG0 role in the following example because acquirer is a subject nominalization: REL = acquirer, ARG0 = acquirer, ARG1 = of Manville, ARGM-ADV = possible A procedure can compare the NOMLEX-PLUS entry for each noun to each annotated instance of that noun to check for incompatibilities.</S>
    <S sid="150" ssid="73">Illformedness Impossible instances are ruled out.</S>
    <S sid="151" ssid="74">Checks are made to make sure obligatory labels (REL) are present and illegal labels are not.</S>
    <S sid="152" ssid="75">Similarly, procedures make sure that infinitive arguments are marked with the -PRD function tag (a PropBank convention).</S>
    <S sid="153" ssid="76">Probable Illformedness Certain configurations of role labels are possible, but very unlikely.</S>
    <S sid="154" ssid="77">For example, the same argument role should not appear more than once (the stratal uniqueness condition in Relational Grammar or the theta criterion in Principles and parameters, etc.).</S>
    <S sid="155" ssid="78">Furthermore, it is unlikely for the first word of a sentence to be an argument unless the main predicate is nearby (within three words) or unless there is a nearby support verb.</S>
    <S sid="156" ssid="79">Finally, it is unlikely that there is an empty category that is an argument of a predicate noun unless the empty category is linked to some real NP.B WRONG-POS We use procedures that are part of our systems for generating GLARF, a predicate argument framework discussed in (Meyers et al., 2001a; Meyers et al., 2001b), to detect incorrect parts of speech in the Penn Treebank.</S>
    <S sid="157" ssid="80">If an instance is predicted to be a part of speech other than a common noun, but it is still tagged, that instance is flagged.</S>
    <S sid="158" ssid="81">For example, if a word tagged as a singular common noun is the first word in a VP, it is probably tagged with the wrong part of speech.</S>
    <S sid="159" ssid="82">The processes described in the previous subsections are used to create a list of annotation instances to check along with short standardized descriptions of what was wrong, e.g., wrong-pos, non-functional (if there were two identical argument roles), etc.</S>
    <S sid="160" ssid="83">Annotators do a second pass EEmpty categories mark &#8220;invisible&#8221; constituents in the Treebank, e.g., the subject of want in John wanted e to leave. on just these instances (currently about 5 to 10% of the total).</S>
    <S sid="161" ssid="84">We will conduct a formal evaluation of this procedure over the next month.</S>
  </SECTION>
  <SECTION title="7 Future Research: Automatic Annotation" number="8">
    <S sid="162" ssid="1">We are just starting a new phase in this project: the creation of an automatic annotator.</S>
    <S sid="163" ssid="2">Using techniques similar to those described in (Meyers et al., 1998) in combination with our work on GLARF (Meyers et al., 2001a; Meyers et al., 2001b), we expect to build a hand-coded PROPBANKER a program designed to produce a PropBank/NomBank style analysis from Penn Treebank style input.</S>
    <S sid="164" ssid="3">Although the PropBanker should work with input in the form of either treebank annotation or treebankbased parser output, this project only requires application to the Penn Treebank itself.</S>
    <S sid="165" ssid="4">While previous programs with similar goals (Gildea and Jurafsky, 2002) were statistics-based, this tool will be based completely on hand-coded rules and lexical resources.</S>
    <S sid="166" ssid="5">Depending on its accuracy, automatically produced annotation should be useful as either a preprocessor or as an error detector.</S>
    <S sid="167" ssid="6">We expect high precision for very simple frames, e.g., nouns like lot as in figure 10.</S>
    <S sid="168" ssid="7">Annotators will have the opportunity to judge whether particular automatic annotation is &#8220;good enough&#8221; to serve as a preprocessor.</S>
    <S sid="169" ssid="8">We hypothesize that a comparison of automatic annotation that fails this level of accuracy against the hand annotation will still be useful for detecting errors.</S>
    <S sid="170" ssid="9">Comparisons between the hand annotated data and the automatically annotated data will yield a set of instances that warrant further checking along the same lines as our previously described error checking mechanisms.</S>
  </SECTION>
  <SECTION title="8 Summary" number="9">
    <S sid="171" ssid="1">This paper outlines our current efforts to produce NomBank, annotation of the argument structure for most common nouns in the Penn Treebank II corpus.</S>
    <S sid="172" ssid="2">This is part of a larger effort to produce more detailed annotation of the Penn Treebank.</S>
    <S sid="173" ssid="3">Annotation for NomBank is progressing quickly.</S>
    <S sid="174" ssid="4">We began with a single annotator while we worked on setting the task and have ramped up to four annotators.</S>
    <S sid="175" ssid="5">We continue to work on various quality control procedures which we outline above.</S>
    <S sid="176" ssid="6">In the near future, we intend to create an automatic annotation program to be used both as a preprocessor for manual annotation and as a supplement to error detection.</S>
    <S sid="177" ssid="7">The argument structure of NPs has been less studied both in theoretical and computational linguistics, than the argument structure of verbs.</S>
    <S sid="178" ssid="8">As with our work on NOMLEX, we are hoping that NomBank will substantially contribute to improving the NLP community&#8217;s ability to understand and process noun argument structure.</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="10">
    <S sid="179" ssid="1">tion or the policy of the U.S. Government.</S>
    <S sid="180" ssid="2">We would also like to acknowledge the people at the University of Pennsylvania who helped make NomBank possible, including, Martha Palmer, Scott Cotton, Paul Kingsbury and Olga Babko-Malaya.</S>
    <S sid="181" ssid="3">In particular, the use of PropBank&#8217;s annotation tool and frame files proved invaluable to our effort.</S>
  </SECTION>
</PAPER>
