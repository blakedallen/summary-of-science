<PAPER>
  <S sid="0">Nonconcatenative Finite-State Morphology</S>
  <ABSTRACT>
    <S sid="1" ssid="1">the last few years, so called in general, and morphology in particular, have become widely accepted as paradigms for the computational treatment of morphology.</S>
    <S sid="2" ssid="2">Finite-state morphology appeals to the notion of a finite-state transducer, which is simply a classical finite-state automaton whose transitions are labeled with pairs, rather than with single symbols.</S>
    <S sid="3" ssid="3">The automaton operates on a pair of tapes and advances over a given transition if the current symbols on the tapes match the pair on the transition.</S>
    <S sid="4" ssid="4">One member of the pair of symbols on a transition can be the designated null symbol, which we will write c. When this appears, the corresponding tape is not examined, and it does not advance as the machine moves to the next state.</S>
    <S sid="5" ssid="5">Finite-state morphology originally arose out of a desire to provide ways of analyzing surface forms using grammars expressed in terms of systems of ordered rewriting rules.</S>
    <S sid="6" ssid="6">Kaplan and Kay (in preparation) observed, that finite-state transducers could be used to mimic a large class of rewriting rules, possibly including all those for phonology.</S>
    <S sid="7" ssid="7">The importance of came from two considerations.</S>
    <S sid="8" ssid="8">First, transducers are indifferent as to the direction in which they are applied.</S>
    <S sid="9" ssid="9">In other words, they can be used with equal facility to translate between tapes, in either direction, to accept or reject pairs of tapes, or to generate pairs of tapes.</S>
    <S sid="10" ssid="10">Second, a pair of transducers with one tape in common is equivalent to a single transducer operating on the remaining pair of tapes.</S>
    <S sid="11" ssid="11">A simple algorithm exists for constructing the transition diagram for composite machine given those of the original pair.</S>
    <S sid="12" ssid="12">By repeated application of this algorithm, it is therefore possible to reduce a cascade of transducers, each linked to the next by a common tape, to a single transducer which accepts exactly the same pair of tapes as was accepted by the original cascade as a whole.</S>
    <S sid="13" ssid="13">From these two facts together, it follows that an arbitrary ordered set of rewriting rules can be modeled by a finite-state transducer which can be automatically constructed from them and which serves as well for analyzing surface forms as for generating them from underlying lexical strings.</S>
    <S sid="14" ssid="14">A transducer obtained from an ordered set of in the way just outlined is a level the sense that mediates directly between lexical and surface forms without ever the intermediate forms would arise in the course of applying the original rules by one.</S>
    <S sid="15" ssid="15">The term morphology, is used a more restricted way, to apply to a system in which no intermediate forms are posited, even in the original grammatical formalism.</S>
    <S sid="16" ssid="16">The writer of a grammar using a two-level formalism never needs to think in terms of any representations other than the lexical and the surface ones.</S>
    <S sid="17" ssid="17">What he does is to specify, using one formalism or another, a set of transducers, each of which mediates directly between these forms and each of which restricts the allowable pairs of strings in some way.</S>
    <S sid="18" ssid="18">The pairs that the system as a whole accepts are those are those that are rejected by none of the component transducers, modulo certain assumptions about way in they interact, whose details need not concern us.</S>
    <S sid="19" ssid="19">Once again, there is a formal procedure that can be used to combine set transducers that make up such a system 2 into a single automaton with the same overall so that the final result indistinguishable form that obtained from a set of ordered rules.</S>
    <S sid="20" ssid="20">However it is an advantage of parallel machines that they can be used with very little loss of efficiency without combining them in this way.</S>
    <S sid="21" ssid="21">While it is not the purpose of this paper to explore the formal properties of finite-state transducers, a brief excursion may be in order at this point to forestall a possible objection to the claim that a parallel configuration of transducers can be combined into a single one.</S>
    <S sid="22" ssid="22">On the face of it, this cannot generally be so because there is generally no finite-state transducer that will accept the intersection of the sets of tape pairs accepted by an arbitrary set of transducers.</S>
    <S sid="23" ssid="23">It is, for example, easy to design a transducer that will map a string of x's onto the same number of y's followed by an arbitrary number of z's.</S>
    <S sid="24" ssid="24">It is equally easy to design one that maps a string of x's onto the same number of z's preceded by an arbitrary number of x's.</S>
    <S sid="25" ssid="25">The intersection of these sets contains those pairs with some number of x's on one tape, and that same number of y's followed by the same number of z's on the other tape.</S>
    <S sid="26" ssid="26">The set of second tapes therefore contains a context-free language which it is clearly not within the power of any finite-state device to generate.</S>
    <S sid="27" ssid="27">Koskenniemi overcame this objection in his original work by adopting the view that all the transducers in the parallel configuration should share the same pair or read-write heads.</S>
    <S sid="28" ssid="28">The effect of this is to insist that they not only accept the same pairs of tapes, but that they agree on the particular sequence of symbol pairs that must be rehearsed in the course of accepting each of them.</S>
    <S sid="29" ssid="29">Kaplan has been able to put a more formal construction on this in the following way Let the empty symbols appearing in the pairs labeling any transition in the transducers be replaced by some ordinary symbol not otherwise part of the alphabet.</S>
    <S sid="30" ssid="30">The new set of transducers derived in way clearly do not accept the same tapes as the original ones did, but there is an algorithm for constructing a single finite-state transducer that will accept the intersection of the pairs they all accept.</S>
    <S sid="31" ssid="31">Suppose, now, that this configuration of parallel transducers is put in series with two other standard transducers, one which carries the real empty symbol onto its surrogate, and everything else onto itself, and another transducer that carries the surrogate onto the real empty symbol, then the resulting configuration accepts just the desired set of languages, all of which are also acceptable by single transducers that can be algorithmically derived form the originals.</S>
    <S sid="32" ssid="32">It may well appear that the systems we have been considering properly belong to finite-state phonology or graphology, and not to morphology, properly construed.</S>
    <S sid="33" ssid="33">Computational linguists have indeed often been guilty of some carelessness in their use of this terminology.</S>
    <S sid="34" ssid="34">But it is not hard to see how it could have arisen.</S>
    <S sid="35" ssid="35">The first step in any process that treats natural text is to recognize the words it contains, and this generally involves analyzing each of them in terms of a constituent set of formatives of some kind.</S>
    <S sid="36" ssid="36">Most important among the difficulties that this entails are those having to do with the different shapes that formatives assume in different environments.</S>
    <S sid="37" ssid="37">In other words, the principal difficulties of morphological analysis are in fact phonological or graphological.</S>
    <S sid="38" ssid="38">The inventor of two-level morphology, Kimmo Koskenniemi, is fact provided a finite-state account not just of morphophonemics (or morphographemics), but also of morphotactics.</S>
    <S sid="39" ssid="39">He took it that the allowable set of words simply constituted a regular set of morheme sequences.</S>
    <S sid="40" ssid="40">This is probably the more controversial part of his proposal, but it is also the less technically elaborate, and therefore the one that has attracted less attention.</S>
    <S sid="41" ssid="41">As a result, the term &amp;quot;two-level morphology&amp;quot; has come to be commonly accepted as applying to any system of word recognition that involves two-level, finite-state, phonology or graphology.</S>
    <S sid="42" ssid="42">The approach to nonconcatenative morphology to be outlined in this paper will provide a more unified treatment of morphophonemics and morphotactics than has been usual 3 I shall attempt to show how a two-level account might be given of nonconcatenative morphological phenomena, particularly those exhibited in the Semitic languages.</S>
    <S sid="43" ssid="43">The approach I intend to take is inspired, not only by finite-state morphology, broadly construed, but equally by autosegmental phonology as proposed by Goldsmith (1979) and the autosegmental morphology of McCarthy (1979) All the data that I have used in this work is taken from McCarthy (1979) and my debt to him will be clear throughout. forms that can be constructed on the basis of each of the stems shown.</S>
    <S sid="44" ssid="44">However, there is every reason to suppose that, though longer and greatly more complex in detail, that enterprise would not require essentially different mechanisms from the ones I shall describe.</S>
    <S sid="45" ssid="45">The overall principles on which the material Table is are clear from a fairly cursory inspection Each form contains the letters &amp;quot;ktb&amp;quot; somewhere in it.</S>
    <S sid="46" ssid="46">This is the root of the verb meaning &amp;quot;write&amp;quot;.</S>
    <S sid="47" ssid="47">By replacing these three letters with other appropriately chosen Perfective Imperfective Participle Active Passive Active I katab kutib aktub II kattab kuttib ukattib III kaatab kuutib ukaatib IV ?aktab ?uktib u?aktib V takattab tukuttib atakattab VI takaatab tukuutib atakaatab VII nkatab nkutib ankatib VIII ktatab ktutib aktatib IX ktabab aktabib X staktab stuktib astaktib XI ktaabab aktaabib XII ktawtab aktawtib XIII ktawwab aktawwib XIV ktanbab aktanbib XV ktanbay aktanbiy Passive maktuub mukattab mukaatab mu?aktab mutakattab mutakaatab munkatab muktatab muktabib mustaktab muktaabib muktawtib muktawwib muktanbib muktanbiy Table I I take it as my task to describe how the members of a paradigm like the one in Table I might be generated and recognized effectively and efficiently, and in such a way as to capture profit from the linguistic generalizations inherent in it.</S>
    <S sid="48" ssid="48">Now this is a slightly artificial problem because the forms in Table I are not in words, but only verb stems.</S>
    <S sid="49" ssid="49">To get the verb forms that would be found in Arabic text, we should have to expand the table very considerably to show the inflected sequences of three consonants, we would obtain corresponding paradigms for other roots.</S>
    <S sid="50" ssid="50">With some notable exceptions, the columns of the table contain stems with the same sequence of vowels. of these is known as a as the headings of the columns show, these can serve to distinguish perfect from imperfective, active from passive, and the like.</S>
    <S sid="51" ssid="51">Each row of the table is characterized by a particular pattern according to which the vowels and consonants alternate.</S>
    <S sid="52" ssid="52">In other words, it is characteristic of a given row 4 that the vowel in a particular position is long or short, or that a consonant is simple or geminate, or that material in one syllable is repeated in the following one.</S>
    <S sid="53" ssid="53">McCarthy refers to each of these as a template, term which I shall take over.</S>
    <S sid="54" ssid="54">Each of them adds a particular semantic component to the basic verb, making it reflexive, causative, or whatever.</S>
    <S sid="55" ssid="55">Our problem, will therefore involve designing an abstract device capable of combining components of these three kinds into a single sequence.</S>
    <S sid="56" ssid="56">Our solution will take the form of a set of one or more finite-state transducers that will work in parallel like those of Koskenniemmi(1983), but on four tapes rather than just two.</S>
    <S sid="57" ssid="57">There will not be space, in this paper, to give a detailed account, even of all the material in Table I, not to mention problems that would arise if we were to consider the full range of Arabic roots.</S>
    <S sid="58" ssid="58">What I do hope to do, however, is to establish a theoretical framework within which solutions to all of these problems could be developed.</S>
    <S sid="59" ssid="59">We must presumably expect the transducers we construct to account for the Arabic data to have transition functions from states and quadruples of symbols to states.</S>
    <S sid="60" ssid="60">In other words, we will be able to describe them with transition diagrams whose edges are labeled with a vector of four symbols.</S>
    <S sid="61" ssid="61">When the automaton moves from one state to another, each of the four tapes will advance over the symbol corresponding to it on the transition that sanctions the move. shall allow myself extensions to this basic scheme which will enhance the perspicuity and economy of the formalism without changing its essential character.</S>
    <S sid="62" ssid="62">In particular, these extensions will leave us clearly within the domain of finite-state devices.</S>
    <S sid="63" ssid="63">The extensions have to do with separating the process of reading or writing a symbol on a tape, from advancing the tape to the next position.</S>
    <S sid="64" ssid="64">The quadruples that label the transitions in the transducers we shall be constructing will be elements each consisting of two parts, a symbol, and an instruction concerning the movement of the tape I shall use the following notation for this.</S>
    <S sid="65" ssid="65">A unadorned symbol will be read in the traditional way, namely, as requiring the tape on which that symbol appears to move to the next position as soon as it has been read or written.</S>
    <S sid="66" ssid="66">If the symbol is shown in brackets, on the other hand, the tape will not advance, and the quadruple specifying the next following transition will therefore clearly have to be one that specifies the same symbol for that tape, since the symbol will still be under the read-write head when that transition is taken.</S>
    <S sid="67" ssid="67">With this convention, it is natural to dispense with the e symbol in favor of the notation &amp;quot;[1&amp;quot;, that is, an unspecified symbol over which the corresponding tape does not advance.</S>
    <S sid="68" ssid="68">A symbol can also be written in braces, in which case the corresponding tape will move if the symbol under the read-write head is the last one on the tape.</S>
    <S sid="69" ssid="69">This is intended to capture the of autosegmental morphology, that is, the principal according to which the last item in a string may be reused when required to fill several positions. particular set of quadruples, or made up of symbols, with or without brackets or will constitute the the automata, and the &amp;quot;useful&amp;quot; alphabet must be the same for all the automata because none of them can move from one state to another unless the make an exactly parallel Not surprisingly, a considerable amount of information about the language is contained just in the constitution of the alphabet.</S>
    <S sid="70" ssid="70">Indeed, a single machine with one state which all transitions both leave and enter will generate a nontrivial subset of the material in Table I.</S>
    <S sid="71" ssid="71">An example of the steps involved in generating a form that depends only minimally on information in a transducer is given in table The eight step are labeled (a) - (h).</S>
    <S sid="72" ssid="72">For each one, a box is shown enclosing the symbols currently under the read-write heads.</S>
    <S sid="73" ssid="73">The tapes move under the heads from the right and then continue to the left No symbols are shown to the right on the bottom tape, because we are assuming that the operation chronicled in these diagrams is one in which a surface form is being 5 (a) V t b [1 (e) k t {b} CCVVCVC V VCCV V C C a a {al a [1 a ak t a (b) t b t [] V a a VVCVC [] VCCVC V V a ak tab (c) (g) V C VC VC VCCVC a a [] a &#8226;&#9632;&#9632;&#8226; [] ak t a b (d) k t [] (h) k t b V C C V a C VC V VCCVCVC a a i a k t a a ak t ab i b Table II generated.</S>
    <S sid="74" ssid="74">The bottom tape&#8212;the one containing the surface form&#8212;is therefore being written and it is for this reason that nothing appears to the right.</S>
    <S sid="75" ssid="75">The other three tapes, in the order shown, contain the root, the prosodic template, and the vocalism.</S>
    <S sid="76" ssid="76">To the right of the tapes, the frame is shown which sanctions the move that will be made to advance from that position to the next.</S>
    <S sid="77" ssid="77">No such frame is given for the last configuration for the obvious reason that this represents the end of the process. move from (a) to (b) sanctioned by a frame in which the root consonant is ignored.</S>
    <S sid="78" ssid="78">There must be a &amp;quot;V&amp;quot; on the template tape and an &amp;quot;a&amp;quot; in the current position of the vocalism.</S>
    <S sid="79" ssid="79">However, the vocalism tape will not move when the automata move to their next states.</S>
    <S sid="80" ssid="80">Finally, there will be an &amp;quot;a&amp;quot; on the tape containing the surface form.</S>
    <S sid="81" ssid="81">In summary, given that the prosodie template calls for a vowel, the next vowel in the vocalism has been copied to the surface.</S>
    <S sid="82" ssid="82">Nondeterministically, the device predicts that this same contribution from the vocalism will also be required to fill a later position.</S>
    <S sid="83" ssid="83">The move from (b) to (c) is sanctioned by a in which the is ignored.</S>
    <S sid="84" ssid="84">The template requires a consonant and the frame accordingly specifies the same consonant on both the root and the surface tapes, advancing both of them.</S>
    <S sid="85" ssid="85">A parallel move, differing only in the identity of the consonant, is made from (c) to (d).</S>
    <S sid="86" ssid="86">The move from (d) to (e) is similar to that from (a) to (b) except that, this time, the vocalism tape does advance.</S>
    <S sid="87" ssid="87">The nondeterministic prediction that is being made in this case is that there will be no further slots for the &amp;quot;a&amp;quot; to fill.</S>
    <S sid="88" ssid="88">Just what it is that makes this the &amp;quot;right&amp;quot; move is a matter to which we shall return.</S>
    <S sid="89" ssid="89">The move from (e) to (f) 6 differs from the previous two moves over root consonants in that the &amp;quot;b&amp;quot; is being &amp;quot;spread&amp;quot;.</S>
    <S sid="90" ssid="90">In other words, the root tape does not move, and this possibility is allowed on the specific grounds that it is the last symbol on the tape.</S>
    <S sid="91" ssid="91">Once again, the automata are making a nondeterministic decision, this time that there will be another consonant called for later by the prosodic template and which it will be possible to fill only if this last entry on the root tape does not move away.</S>
    <S sid="92" ssid="92">The moves from (f) to (g) and from (g) to (h) are like those from (d) to (e) and (b) to (c) respectively.</S>
    <S sid="93" ssid="93">Just what is the force of the remark, made from time to time in this commentary, that a move is made These are all situations in which some other move was, in fact, open to the transducers but where the one displayed was carefully chosen to be the one that would lead to the correct result.</S>
    <S sid="94" ssid="94">Suppose that, instead of leaving the root tape stationary in the move from (e) to (f), it had been allowed to advance using a frame parallel to the one used in the moves from (b) to (c) and (c) to (d), a frame which it is only reasonable to assume must exist for all consonants, including &amp;quot;b&amp;quot;.</S>
    <S sid="95" ssid="95">The move from (f) to (g) could still have been made in the same way, but this would have led to a configuration in which a consonant was required by the prosodic template, but none was available from the root.</S>
    <S sid="96" ssid="96">A derivation cannot be allowed to count as complete until all tapes are exhausted, so the automata have reached impasse.</S>
    <S sid="97" ssid="97">We must assume that, when this happens, the automata are able to return to a preceding situation in which an essentially arbitrarily choice was made, and try a different alternative.</S>
    <S sid="98" ssid="98">Indeed, we must assume that a general backtracking strategy is in effect, which ensures that all allowable sequences of choices are explored.</S>
    <S sid="99" ssid="99">Now consider the nondeterministic choice that was made in the move from (a) to (b), as contrasted with the one made under essentially circumstances from (d) to the vocalism tape had advanced in the first of these situations, but not in the second, we should presumably have been able to generate the putative form &amp;quot;aktibib&amp;quot;, which does not exist.</S>
    <S sid="100" ssid="100">This can be excluded only if we assume that there is a transducer that disallows this sequence of events, or if the frames available for &amp;quot;i&amp;quot; are not the same as those for &amp;quot;a&amp;quot;.</S>
    <S sid="101" ssid="101">We are, in fact, making the latter assumption, on the grounds that the vowel &amp;quot;i&amp;quot; occurs only in the final position of Arabic verb stems. now, the forms in rows V of table I.</S>
    <S sid="102" ssid="102">In each of these, the middle consonant of the root is geminate in the surface.</S>
    <S sid="103" ssid="103">This is not a result of spreading as we have described it, spreading occurs with the last consonant of a root.</S>
    <S sid="104" ssid="104">If the prosodic template for row II is &amp;quot;CVCCVC&amp;quot;, how is that we do not get forms like &amp;quot;katbab&amp;quot; and &amp;quot;kutbib&amp;quot; beside the ones shown?</S>
    <S sid="105" ssid="105">This is a problem that is overcome in McCarthy's autosegmental account only at considerable cost.</S>
    <S sid="106" ssid="106">Indeed, is is a deficiency of that formalism that the only mechanisms available in it to account for gemination are as complex as they are, given how common the phenomenon is.</S>
    <S sid="107" ssid="107">Within the framework proposed here, gemination is provided for in a very natural way.</S>
    <S sid="108" ssid="108">Consider the following pair of frame schemata, in and arbitrary consonant: [c] [1 [1 First of these the one that was used for the consonants in the above example except in the situation for the first occurrence of &amp;quot;b&amp;quot;, where is was being spread into the final two consonantal positions of the form.</S>
    <S sid="109" ssid="109">The second frame differs from this is two respects.</S>
    <S sid="110" ssid="110">First, the prosodic template contains the hitherto unused symbol &amp;quot;G&amp;quot;. for &amp;quot;geminate&amp;quot;, and second, the root tape is not advanced.</S>
    <S sid="111" ssid="111">Suppose, now, that the the prosodic template for forms like &amp;quot;kattab&amp;quot; is not &amp;quot;CVCCVC&amp;quot;, but &amp;quot;CVGCVC&amp;quot;.</S>
    <S sid="112" ssid="112">It will be possible to discharge the &amp;quot;G&amp;quot; only if the root template does not advance, so that the following &amp;quot;C&amp;quot; in the template can only cause the same consonant to be into the word time.</S>
    <S sid="113" ssid="113">The sequence &amp;quot;GC&amp;quot; in a prosodic template is therefore an idiom for consonant gemination.</S>
    <S sid="114" ssid="114">7 Needless to say, McCarthy's work, on which this paper is based, is not interesting simply for the fact that he is able to achieve an adequate description of the data in table I, but also for the claims he makes about the way that account extends to a wider class of phenomena, thus achieving a measure of explanatory power.</S>
    <S sid="115" ssid="115">In particular, he claims that it extends to roots with two and four consonants.</S>
    <S sid="116" ssid="116">Consider, in particular, the following sets of forms: ktanbab dhanraj kattab dahraj takattab tadahraj Those in the second column are based on the root /dhrj/.</S>
    <S sid="117" ssid="117">In the first column are the corresponding forms of /ktb/.</S>
    <S sid="118" ssid="118">The similarity in the sets of corresponding forms is unmistakable.</S>
    <S sid="119" ssid="119">They exhibit the same patterns of consonants and vowels, differing only in that, whereas some consonant appears twice in the forms in column one, the consonantal slots are all occupied by different segments in the forms on the right.</S>
    <S sid="120" ssid="120">For these purposes, the &amp;quot;n&amp;quot; of the first pair of forms should be ignored since it is contributed by the prosodic template, and not by the root. consonantal slot in the prosodic template only in the case of the shorter form.</S>
    <S sid="121" ssid="121">The structure of the second and third forms is equally straighforward, but it is less easy to see how our machinery could account for them.</S>
    <S sid="122" ssid="122">Once again, the template calls for four root consonants and, where only three are provided, one must do double duty.</S>
    <S sid="123" ssid="123">But in this case, the effect is achieved through gemination rather than spreading so that the gemination mechanism just outlined is presumably in play.</S>
    <S sid="124" ssid="124">That mechanism makes no provision for gemination to be invoked only when needed to fill slots in the prosodic template that would otherwise remain empty.</S>
    <S sid="125" ssid="125">If the mechanism were as just described, and the triliteral forms were &amp;quot;CVGCVC&amp;quot; and &amp;quot;tVCVGCVC&amp;quot; respectively, then the quadriliteral forms would have to be generated on a different base.</S>
    <S sid="126" ssid="126">It is in cases like this, of which there in fact many, that the finite-state transducers play a substantive role.</S>
    <S sid="127" ssid="127">What is required in this case is a transducer that allows the root tape to remain stationary while the template tape moves over a &amp;quot;G&amp;quot;, provided no spreading will be allowed to occur later to fill consonantal slots that would Fig.</S>
    <S sid="128" ssid="128">1 a triliteral and a quadriliteral root, otherwise he unclaimed. extra consonants spread not geminate G-geminate 0-simple no spread no spread no spread the first pair are exactly as one would expect&#8212;the final root consonant is spread to fill the final required, then the first priority must he to let them occupy the slots marked with a &amp;quot;0&amp;quot; in the 8 template.</S>
    <S sid="129" ssid="129">Fig.</S>
    <S sid="130" ssid="130">1 shows a schema for the transition diagram of a transducer that has this effect.</S>
    <S sid="131" ssid="131">I call it a &amp;quot;schema&amp;quot; only because each of the edges shown does duty for a number of actual transitions.</S>
    <S sid="132" ssid="132">The machine begins in the &amp;quot;start&amp;quot; state and continues to return there so long as no frame is encountered involving a &amp;quot;G&amp;quot; on the template tape.</S>
    <S sid="133" ssid="133">A &amp;quot;G&amp;quot; transition causes a nondeterministic choice.</S>
    <S sid="134" ssid="134">If the root tape moves at the same time as the &amp;quot;G&amp;quot; is scanned, the transducer goes into its &amp;quot;no-spread&amp;quot; state, to which it continues to return so long as every move over a &amp;quot;C&amp;quot; on the prosodic tape is accompanied by a move over a consonant on the root tape.</S>
    <S sid="135" ssid="135">In other words, it must be possible to complete the process without spreading consonants.</S>
    <S sid="136" ssid="136">The other alternative is that the transducer should enter the &amp;quot;geminate&amp;quot; state over a transition over a in the template with the root tape remaining stationary.</S>
    <S sid="137" ssid="137">The transitions at the &amp;quot;geminate&amp;quot; state allow both spreading and nonspreading transitions.</S>
    <S sid="138" ssid="138">In summary, spreading can occur only if the transducer never leaves the &amp;quot;start&amp;quot; state and there is no &amp;quot;G&amp;quot; in the template, or there is a &amp;quot;G&amp;quot; on the template which does not trigger gemination.</S>
    <S sid="139" ssid="139">A &amp;quot;G&amp;quot; can fail to trigger gemination only when the root contains enough consonants to fill all the requirements that the template makes for them.</S>
    <S sid="140" ssid="140">One quadriliteral case remains to be accounted for, namely the following: ktaabab dharjaj According to the strategy just elaborated, we should have expected the quadriliteral form to been &amp;quot;dhaaraj&amp;quot;.</S>
    <S sid="141" ssid="141">But, this form contains a slot that is used for vowel lengthening with triliteral roots, and as consonantal position for quadriliterals.</S>
    <S sid="142" ssid="142">We must therefore presumably take it that the prosodic template for this form is something like &amp;quot;CCVXCVC&amp;quot; where &amp;quot;X&amp;quot; is a segment, but not specified as either vocalic or consonantal.</S>
    <S sid="143" ssid="143">This much is in line with the proposal that McCarthy himself makes The question is, when should be filled by a vowel, and when by a consonant?</S>
    <S sid="144" ssid="144">The data in Table I is, of course, insufficient to answer question. but a plausible answer that strongly suggests itself is that the &amp;quot;X&amp;quot; slot prefers a consonantal filler that would result in gemination.</S>
    <S sid="145" ssid="145">If this is true, then it is another case where the notion of gemination, though not actually exemplified in the form, plays a central role.</S>
    <S sid="146" ssid="146">Supposing that the analysis is correct, the next question is, how is it to be implemented.</S>
    <S sid="147" ssid="147">The most appealing answer would be to make &amp;quot;X&amp;quot; the exact obverse of &amp;quot;G&amp;quot;, when filled with a consonant.</S>
    <S sid="148" ssid="148">In other words, when a root consonant fills such a slot, the root tape must advance so that the same consonant will no longer be to fill the next position.</S>
    <S sid="149" ssid="149">The that the next root consonant would simply be a repetition of the current one would be excluded if we were to take over from autosegmental phonology and morphology, some version of th Contour Principle (OCP) 1979) which disallows repeated segments except in the prosodic template and in the surface string.</S>
    <S sid="150" ssid="150">McCarthy points out the roots like /smnn/, which appear to violate the OCP can invariably be reanalyzed as biliteral roots like /sm/ and, if this is done, our analysis, like his, goes through.</S>
    <S sid="151" ssid="151">The OCP does seem likely to cause some trouble when we come to treat one of the principal remaining problems, namely that of the forms in row I of table I.</S>
    <S sid="152" ssid="152">It turns out that the vowel that appears in the second syllable of these forms is not provided by the vocalism, but by the root.</S>
    <S sid="153" ssid="153">The vowel that appears in the perfect is generally different from the one that appears in the imperfect, and four different pairs are possible. pair that is used with given root is an idiosyncratic property of that root.</S>
    <S sid="154" ssid="154">One possibility is, therefore, that we treat the traditional triliteral roots as consisting not simply of three consonants, but as three consonants with a vowel intervening between the second and third, for a total of four segments.</S>
    <S sid="155" ssid="155">This flies in the face of traditional wisdom.</S>
    <S sid="156" ssid="156">It also counter to one of the intuitions autosegmental phonology which would have it that particular phonological features can be represented on at most one lexical tier, or tape.</S>
    <S sid="157" ssid="157">The intuition is that these tiers or tapes each contain a record or a particular kind of 9 gesture; the hearer's point of view, it is as though they contained a record of the signal received from a receptor that was attuned only to certain features.</S>
    <S sid="158" ssid="158">If we wish to maintain this model, there are presumably two alternatives open to us.</S>
    <S sid="159" ssid="159">Both involve assuming that roots are represented on at least two tapes in parallel, with the consonants separate from the vowel.</S>
    <S sid="160" ssid="160">According to one alternative, the root vowel would be written on the same tape as the vocalism; according to the other, it would be on a tape of its own.</S>
    <S sid="161" ssid="161">Unfortunately, neither alternative makes for a particularly happy solution.</S>
    <S sid="162" ssid="162">No problem arises from the proposal that a given morpheme should, in general, be represented on more than one lexical tape.</S>
    <S sid="163" ssid="163">However, the idea that the vocalic material associated with a root should appear on a special tape, reserved for it alone, breaks the clean lines of the system as so far presented in two ways.</S>
    <S sid="164" ssid="164">First, it spearates material onto two tapes, specifically the new one and the vocalism, on purely lexical grounds, having nothing to do with their phonetic or phonological constitution, and this runs counter to the idea of tapes as records of activity on phonetically specialized receptors.</S>
    <S sid="165" ssid="165">It is also at least slightly troublesome in that that newly introduced tape fills no function except in the generation of the first row of the table.</S>
    <S sid="166" ssid="166">Neither of these arguments is conclusive, and they could diminish considerably in force as a wider range of data was considered.</S>
    <S sid="167" ssid="167">Representing the vocalic contribution of the root on the same tape as the vacalism would avoid both of these objections, but would require that vocalic contribution to be recorded either before or after the vocalism itself.</S>
    <S sid="168" ssid="168">Since the root vowel affects the latter part of the root, it seems reasonable that it should be positioned to the right.</S>
    <S sid="169" ssid="169">Notice, however, that this is the only instance in which we have had to make any assumptions about the relative ordering of the morphemes that contribute to a stem.</S>
    <S sid="170" ssid="170">Once again, it may be possible to assemble further evidence reflecting on some such ordering, but I do not see it in these data.</S>
    <S sid="171" ssid="171">It is only right that I should point out the difficulty of accounting satisfactorily for the vocalic contribution of verbal roots.</S>
    <S sid="172" ssid="172">It is only right that I should also point out that the autosegmental solution fares no better on this score, resorting, as it must, to rules that access essentially non-phonological properties of the morphemes involved.</S>
    <S sid="173" ssid="173">By insisting that what I called the a morpheme should by, by definition, be its only contribution to phonological processes, I have cut myself off from such ex machina.</S>
    <S sid="174" ssid="174">Linguists in general, and computational linguists in particular, do well to employ finite-state devices wherever possible.</S>
    <S sid="175" ssid="175">They are theoretically appealing because they are computational weak and best understood from a mathematical point of view.</S>
    <S sid="176" ssid="176">They are computationally appealing because they make for simple, elegant, and highly efficient implementaions.</S>
    <S sid="177" ssid="177">In this paper, I hope I have shown how they can be applied to a problem in nonconcatenative morphology which seems initially to require heavier machinary.</S>
  </ABSTRACT>
  <SECTION title="" number="1">
    <S sid="178" ssid="1">In the last few years, so called finite-state morphology, in general, and two-level morphology in particular, have become widely accepted as paradigms for the computational treatment of morphology.</S>
    <S sid="179" ssid="2">Finite-state morphology appeals to the notion of a finite-state transducer, which is simply a classical finite-state automaton whose transitions are labeled with pairs, rather than with single symbols.</S>
    <S sid="180" ssid="3">The automaton operates on a pair of tapes and advances over a given transition if the current symbols on the tapes match the pair on the transition.</S>
    <S sid="181" ssid="4">One member of the pair of symbols on a transition can be the designated null symbol, which we will write c. When this appears, the corresponding tape is not examined, and it does not advance as the machine moves to the next state.</S>
    <S sid="182" ssid="5">Finite-state morphology originally arose out of a desire to provide ways of analyzing surface forms using grammars expressed in terms of systems of ordered rewriting rules.</S>
    <S sid="183" ssid="6">Kaplan and Kay (in preparation) observed, that finite-state transducers could be used to mimic a large class of rewriting rules, possibly including all those required for phonology.</S>
    <S sid="184" ssid="7">The importance of this came from two considerations.</S>
    <S sid="185" ssid="8">First, transducers are indifferent as to the direction in which they are applied.</S>
    <S sid="186" ssid="9">In other words, they can be used with equal facility to translate between tapes, in either direction, to accept or reject pairs of tapes, or to generate pairs of tapes.</S>
    <S sid="187" ssid="10">Second, a pair of transducers with one tape in common is equivalent to a single transducer operating on the remaining pair of tapes.</S>
    <S sid="188" ssid="11">A simple algorithm exists for constructing the transition diagram for this composite machine given those of the original pair.</S>
    <S sid="189" ssid="12">By repeated application of this algorithm, it is therefore possible to reduce a cascade of transducers, each linked to the next by a common tape, to a single transducer which accepts exactly the same pair of tapes as was accepted by the original cascade as a whole.</S>
    <S sid="190" ssid="13">From these two facts together, it follows that an arbitrary ordered set of rewriting rules can be modeled by a finite-state transducer which can be automatically constructed from them and which serves as well for analyzing surface forms as for generating them from underlying lexical strings.</S>
    <S sid="191" ssid="14">A transducer obtained from an ordered set of rules in the way just outlined is a two level device in the sense that it mediates directly between lexical and surface forms without ever constructing the intermediate forms that would arise in the course of applying the original rules one by one.</S>
    <S sid="192" ssid="15">The term two-level morphology, however, is used in a more restricted way, to apply to a system in which no intermediate forms are posited, even in the original grammatical formalism.</S>
    <S sid="193" ssid="16">The writer of a grammar using a two-level formalism never needs to think in terms of any representations other than the lexical and the surface ones.</S>
    <S sid="194" ssid="17">What he does is to specify, using one formalism or another, a set of transducers, each of which mediates directly between these forms and each of which restricts the allowable pairs of strings in some way.</S>
    <S sid="195" ssid="18">The pairs that the system as a whole accepts are those are those that are rejected by none of the component transducers, modulo certain assumptions about the precise way in which they interact, whose details need not concern us.</S>
    <S sid="196" ssid="19">Once again, there is a formal procedure that can be used to combine the set of transducers that make up such a system into a single automaton with the same overall behavior, so that the final result is indistinguishable form that obtained from a set of ordered rules.</S>
    <S sid="197" ssid="20">However it is an advantage of parallel machines that they can be used with very little loss of efficiency without combining them in this way.</S>
    <S sid="198" ssid="21">While it is not the purpose of this paper to explore the formal properties of finite-state transducers, a brief excursion may be in order at this point to forestall a possible objection to the claim that a parallel configuration of transducers can be combined into a single one.</S>
    <S sid="199" ssid="22">On the face of it, this cannot generally be so because there is generally no finite-state transducer that will accept the intersection of the sets of tape pairs accepted by an arbitrary set of transducers.</S>
    <S sid="200" ssid="23">It is, for example, easy to design a transducer that will map a string of x's onto the same number of y's followed by an arbitrary number of z's.</S>
    <S sid="201" ssid="24">It is equally easy to design one that maps a string of x's onto the same number of z's preceded by an arbitrary number of x's.</S>
    <S sid="202" ssid="25">The intersection of these two sets contains just those pairs with some number of x's on one tape, and that same number of y's followed by the same number of z's on the other tape.</S>
    <S sid="203" ssid="26">The set of second tapes therefore contains a context-free language which it is clearly not within the power of any finite-state device to generate.</S>
    <S sid="204" ssid="27">Koskenniemi overcame this objection in his original work by adopting the view that all the transducers in the parallel configuration should share the same pair or read-write heads.</S>
    <S sid="205" ssid="28">The effect of this is to insist that they not only accept the same pairs of tapes, but that they agree on the particular sequence of symbol pairs that must be rehearsed in the course of accepting each of them.</S>
    <S sid="206" ssid="29">Kaplan has been able to put a more formal construction on this in the following way Let the empty symbols appearing in the pairs labeling any transition in the transducers be replaced by some ordinary symbol not otherwise part of the alphabet.</S>
    <S sid="207" ssid="30">The new set of transducers derived in this way clearly do not accept the same pairs of tapes as the original ones did, but there is an algorithm for constructing a single finite-state transducer that will accept the intersection of the pairs they all accept.</S>
    <S sid="208" ssid="31">Suppose, now, that this configuration of parallel transducers is put in series with two other standard transducers, one which carries the real empty symbol onto its surrogate, and everything else onto itself, and another transducer that carries the surrogate onto the real empty symbol, then the resulting configuration accepts just the desired set of languages, all of which are also acceptable by single transducers that can be algorithmically derived form the originals.</S>
    <S sid="209" ssid="32">It may well appear that the systems we have been considering properly belong to finite-state phonology or graphology, and not to morphology, properly construed.</S>
    <S sid="210" ssid="33">Computational linguists have indeed often been guilty of some carelessness in their use of this terminology.</S>
    <S sid="211" ssid="34">But it is not hard to see how it could have arisen.</S>
    <S sid="212" ssid="35">The first step in any process that treats natural text is to recognize the words it contains, and this generally involves analyzing each of them in terms of a constituent set of formatives of some kind.</S>
    <S sid="213" ssid="36">Most important among the difficulties that this entails are those having to do with the different shapes that formatives assume in different environments.</S>
    <S sid="214" ssid="37">In other words, the principal difficulties of morphological analysis are in fact phonological or graphological.</S>
    <S sid="215" ssid="38">The inventor of two-level morphology, Kimmo Koskenniemi, is fact provided a finite-state account not just of morphophonemics (or morphographemics), but also of morphotactics.</S>
    <S sid="216" ssid="39">He took it that the allowable set of words simply constituted a regular set of morheme sequences.</S>
    <S sid="217" ssid="40">This is probably the more controversial part of his proposal, but it is also the less technically elaborate, and therefore the one that has attracted less attention.</S>
    <S sid="218" ssid="41">As a result, the term &amp;quot;two-level morphology&amp;quot; has come to be commonly accepted as applying to any system of word recognition that involves two-level, finite-state, phonology or graphology.</S>
    <S sid="219" ssid="42">The approach to nonconcatenative morphology to be outlined in this paper will provide a more unified treatment of morphophonemics and morphotactics than has been usual I shall attempt to show how a two-level account might be given of nonconcatenative morphological phenomena, particularly those exhibited in the Semitic languages.</S>
    <S sid="220" ssid="43">The approach I intend to take is inspired, not only by finite-state morphology, broadly construed, but equally by autosegmental phonology as proposed by Goldsmith (1979) and the autosegmental morphology of McCarthy (1979) All the data that I have used in this work is taken from McCarthy (1979) and my debt to him will be clear throughout. forms that can be constructed on the basis of each of the stems shown.</S>
    <S sid="221" ssid="44">However, there is every reason to suppose that, though longer and greatly more complex in detail, that enterprise would not require essentially different mechanisms from the ones I shall describe.</S>
    <S sid="222" ssid="45">The overall principles on which the material in Table I is organized are clear from a fairly cursory inspection Each form contains the letters &amp;quot;ktb&amp;quot; somewhere in it.</S>
    <S sid="223" ssid="46">This is the root of the verb meaning &amp;quot;write&amp;quot;.</S>
    <S sid="224" ssid="47">By replacing these three letters with other appropriately chosen I take it as my task to describe how the members of a paradigm like the one in Table I might be generated and recognized effectively and efficiently, and in such a way as to capture and profit from the principal linguistic generalizations inherent in it.</S>
    <S sid="225" ssid="48">Now this is a slightly artificial problem because the forms given in Table I are not in fact words, but only verb stems.</S>
    <S sid="226" ssid="49">To get the verb forms that would be found in Arabic text, we should have to expand the table very considerably to show the inflected sequences of three consonants, we would obtain corresponding paradigms for other roots.</S>
    <S sid="227" ssid="50">With some notable exceptions, the columns of the table contain stems with the same sequence of vowels.</S>
    <S sid="228" ssid="51">Each of these is known as a vocalism and, as the headings of the columns show, these can serve to distinguish perfect from imperfective, active from passive, and the like.</S>
    <S sid="229" ssid="52">Each row of the table is characterized by a particular pattern according to which the vowels and consonants alternate.</S>
    <S sid="230" ssid="53">In other words, it is characteristic of a given row that the vowel in a particular position is long or short, or that a consonant is simple or geminate, or that material in one syllable is repeated in the following one.</S>
    <S sid="231" ssid="54">McCarthy refers to each of these patterns as a prosodic template, a term which I shall take over.</S>
    <S sid="232" ssid="55">Each of them adds a particular semantic component to the basic verb, making it reflexive, causative, or whatever.</S>
    <S sid="233" ssid="56">Our problem, will therefore involve designing an abstract device capable of combining components of these three kinds into a single sequence.</S>
    <S sid="234" ssid="57">Our solution will take the form of a set of one or more finite-state transducers that will work in parallel like those of Koskenniemmi(1983), but on four tapes rather than just two.</S>
    <S sid="235" ssid="58">There will not be space, in this paper, to give a detailed account, even of all the material in Table I, not to mention problems that would arise if we were to consider the full range of Arabic roots.</S>
    <S sid="236" ssid="59">What I do hope to do, however, is to establish a theoretical framework within which solutions to all of these problems could be developed.</S>
    <S sid="237" ssid="60">We must presumably expect the transducers we construct to account for the Arabic data to have transition functions from states and quadruples of symbols to states.</S>
    <S sid="238" ssid="61">In other words, we will be able to describe them with transition diagrams whose edges are labeled with a vector of four symbols.</S>
    <S sid="239" ssid="62">When the automaton moves from one state to another, each of the four tapes will advance over the symbol corresponding to it on the transition that sanctions the move.</S>
    <S sid="240" ssid="63">I shall allow myself some extensions to this basic scheme which will enhance the perspicuity and economy of the formalism without changing its essential character.</S>
    <S sid="241" ssid="64">In particular, these extensions will leave us clearly within the domain of finite-state devices.</S>
    <S sid="242" ssid="65">The extensions have to do with separating the process of reading or writing a symbol on a tape, from advancing the tape to the next position.</S>
    <S sid="243" ssid="66">The quadruples that label the transitions in the transducers we shall be constructing will be elements each consisting of two parts, a symbol, and an instruction concerning the movement of the tape I shall use the following notation for this.</S>
    <S sid="244" ssid="67">A unadorned symbol will be read in the traditional way, namely, as requiring the tape on which that symbol appears to move to the next position as soon as it has been read or written.</S>
    <S sid="245" ssid="68">If the symbol is shown in brackets, on the other hand, the tape will not advance, and the quadruple specifying the next following transition will therefore clearly have to be one that specifies the same symbol for that tape, since the symbol will still be under the read-write head when that transition is taken.</S>
    <S sid="246" ssid="69">With this convention, it is natural to dispense with the e symbol in favor of the notation &amp;quot;[1&amp;quot;, that is, an unspecified symbol over which the corresponding tape does not advance.</S>
    <S sid="247" ssid="70">A symbol can also be written in braces, in which case the corresponding tape will move if the symbol under the read-write head is the last one on the tape.</S>
    <S sid="248" ssid="71">This is intended to capture the notion of spreading, from autosegmental morphology, that is, the principal according to which the last item in a string may be reused when required to fill several positions.</S>
    <S sid="249" ssid="72">A particular set of quadruples, or frames, made up of symbols, with or without brackets or braces, will constitute the alphabet of the automata, and the &amp;quot;useful&amp;quot; alphabet must be the same for all the automata because none of them can move from one state to another unless the others make an exactly parallel transition.</S>
    <S sid="250" ssid="73">Not surprisingly, a considerable amount of information about the language is contained just in the constitution of the alphabet.</S>
    <S sid="251" ssid="74">Indeed, a single machine with one state which all transitions both leave and enter will generate a nontrivial subset of the material in Table I.</S>
    <S sid="252" ssid="75">An example of the steps involved in generating a form that depends only minimally on information embodied in a transducer is given in table II.</S>
    <S sid="253" ssid="76">The eight step are labeled (a) - (h).</S>
    <S sid="254" ssid="77">For each one, a box is shown enclosing the symbols currently under the read-write heads.</S>
    <S sid="255" ssid="78">The tapes move under the heads from the right and then continue to the left No symbols are shown to the right on the bottom tape, because we are assuming that the operation chronicled in these diagrams is one in which a surface form is being generated.</S>
    <S sid="256" ssid="79">The bottom tape&#8212;the one containing the surface form&#8212;is therefore being written and it is for this reason that nothing appears to the right.</S>
    <S sid="257" ssid="80">The other three tapes, in the order shown, contain the root, the prosodic template, and the vocalism.</S>
    <S sid="258" ssid="81">To the right of the tapes, the frame is shown which sanctions the move that will be made to advance from that position to the next.</S>
    <S sid="259" ssid="82">No such frame is given for the last configuration for the obvious reason that this represents the end of the process.</S>
    <S sid="260" ssid="83">The move from (a) to (b) is sanctioned by a frame in which the root consonant is ignored.</S>
    <S sid="261" ssid="84">There must be a &amp;quot;V&amp;quot; on the template tape and an &amp;quot;a&amp;quot; in the current position of the vocalism.</S>
    <S sid="262" ssid="85">However, the vocalism tape will not move when the automata move to their next states.</S>
    <S sid="263" ssid="86">Finally, there will be an &amp;quot;a&amp;quot; on the tape containing the surface form.</S>
    <S sid="264" ssid="87">In summary, given that the prosodie template calls for a vowel, the next vowel in the vocalism has been copied to the surface.</S>
    <S sid="265" ssid="88">Nondeterministically, the device predicts that this same contribution from the vocalism will also be required to fill a later position.</S>
    <S sid="266" ssid="89">The move from (b) to (c) is sanctioned by a frame in which the vocalism is ignored.</S>
    <S sid="267" ssid="90">The template requires a consonant and the frame accordingly specifies the same consonant on both the root and the surface tapes, advancing both of them.</S>
    <S sid="268" ssid="91">A parallel move, differing only in the identity of the consonant, is made from (c) to (d).</S>
    <S sid="269" ssid="92">The move from (d) to (e) is similar to that from (a) to (b) except that, this time, the vocalism tape does advance.</S>
    <S sid="270" ssid="93">The nondeterministic prediction that is being made in this case is that there will be no further slots for the &amp;quot;a&amp;quot; to fill.</S>
    <S sid="271" ssid="94">Just what it is that makes this the &amp;quot;right&amp;quot; move is a matter to which we shall return.</S>
    <S sid="272" ssid="95">The move from (e) to (f) differs from the previous two moves over root consonants in that the &amp;quot;b&amp;quot; is being &amp;quot;spread&amp;quot;.</S>
    <S sid="273" ssid="96">In other words, the root tape does not move, and this possibility is allowed on the specific grounds that it is the last symbol on the tape.</S>
    <S sid="274" ssid="97">Once again, the automata are making a nondeterministic decision, this time that there will be another consonant called for later by the prosodic template and which it will be possible to fill only if this last entry on the root tape does not move away.</S>
    <S sid="275" ssid="98">The moves from (f) to (g) and from (g) to (h) are like those from (d) to (e) and (b) to (c) respectively.</S>
    <S sid="276" ssid="99">Just what is the force of the remark, made from time to time in this commentary, that a certain move is made nondeterministically?</S>
    <S sid="277" ssid="100">These are all situations in which some other move was, in fact, open to the transducers but where the one displayed was carefully chosen to be the one that would lead to the correct result.</S>
    <S sid="278" ssid="101">Suppose that, instead of leaving the root tape stationary in the move from (e) to (f), it had been allowed to advance using a frame parallel to the one used in the moves from (b) to (c) and (c) to (d), a frame which it is only reasonable to assume must exist for all consonants, including &amp;quot;b&amp;quot;.</S>
    <S sid="279" ssid="102">The move from (f) to (g) could still have been made in the same way, but this would have led to a configuration in which a consonant was required by the prosodic template, but none was available from the root.</S>
    <S sid="280" ssid="103">A derivation cannot be allowed to count as complete until all tapes are exhausted, so the automata would have reached an impasse.</S>
    <S sid="281" ssid="104">We must assume that, when this happens, the automata are able to return to a preceding situation in which an essentially arbitrarily choice was made, and try a different alternative.</S>
    <S sid="282" ssid="105">Indeed, we must assume that a general backtracking strategy is in effect, which ensures that all allowable sequences of choices are explored.</S>
    <S sid="283" ssid="106">Now consider the nondeterministic choice that was made in the move from (a) to (b), as contrasted with the one made under essentially indistinguishable circumstances from (d) to (e) If the vocalism tape had advanced in the first of these situations, but not in the second, we should presumably have been able to generate the putative form &amp;quot;aktibib&amp;quot;, which does not exist.</S>
    <S sid="284" ssid="107">This can be excluded only if we assume that there is a transducer that disallows this sequence of events, or if the frames available for &amp;quot;i&amp;quot; are not the same as those for &amp;quot;a&amp;quot;.</S>
    <S sid="285" ssid="108">We are, in fact, making the latter assumption, on the grounds that the vowel &amp;quot;i&amp;quot; occurs only in the final position of Arabic verb stems.</S>
    <S sid="286" ssid="109">Consider, now, the forms in rows II and V of table I.</S>
    <S sid="287" ssid="110">In each of these, the middle consonant of the root is geminate in the surface.</S>
    <S sid="288" ssid="111">This is not a result of spreading as we have described it, because spreading only occurs with the last consonant of a root.</S>
    <S sid="289" ssid="112">If the prosodic template for row II is &amp;quot;CVCCVC&amp;quot;, how is that we do not get forms like &amp;quot;katbab&amp;quot; and &amp;quot;kutbib&amp;quot; beside the ones shown?</S>
    <S sid="290" ssid="113">This is a problem that is overcome in McCarthy's autosegmental account only at considerable cost.</S>
    <S sid="291" ssid="114">Indeed, is is a deficiency of that formalism that the only mechanisms available in it to account for gemination are as complex as they are, given how common the phenomenon is.</S>
    <S sid="292" ssid="115">Within the framework proposed here, gemination is provided for in a very natural way.</S>
    <S sid="293" ssid="116">Consider the following pair of frame schemata, in which c is and arbitrary consonant: The First of these is the one that was used for the consonants in the above example except in the situation for the first occurrence of &amp;quot;b&amp;quot;, where is was being spread into the final two consonantal positions of the form.</S>
    <S sid="294" ssid="117">The second frame differs from this is two respects.</S>
    <S sid="295" ssid="118">First, the prosodic template contains the hitherto unused symbol &amp;quot;G&amp;quot;. for &amp;quot;geminate&amp;quot;, and second, the root tape is not advanced.</S>
    <S sid="296" ssid="119">Suppose, now, that the the prosodic template for forms like &amp;quot;kattab&amp;quot; is not &amp;quot;CVCCVC&amp;quot;, but &amp;quot;CVGCVC&amp;quot;.</S>
    <S sid="297" ssid="120">It will be possible to discharge the &amp;quot;G&amp;quot; only if the root template does not advance, so that the following &amp;quot;C&amp;quot; in the template can only cause the same consonant to be inserted into the word a second time.</S>
    <S sid="298" ssid="121">The sequence &amp;quot;GC&amp;quot; in a prosodic template is therefore an idiom for consonant gemination.</S>
    <S sid="299" ssid="122">Needless to say, McCarthy's work, on which this paper is based, is not interesting simply for the fact that he is able to achieve an adequate description of the data in table I, but also for the claims he makes about the way that account extends to a wider class of phenomena, thus achieving a measure of explanatory power.</S>
    <S sid="300" ssid="123">In particular, he claims that it extends to roots with two and four consonants.</S>
    <S sid="301" ssid="124">Consider, in particular, the following sets of forms: ktanbab dhanraj kattab dahraj takattab tadahraj Those in the second column are based on the root /dhrj/.</S>
    <S sid="302" ssid="125">In the first column are the corresponding forms of /ktb/.</S>
    <S sid="303" ssid="126">The similarity in the sets of corresponding forms is unmistakable.</S>
    <S sid="304" ssid="127">They exhibit the same patterns of consonants and vowels, differing only in that, whereas some consonant appears twice in the forms in column one, the consonantal slots are all occupied by different segments in the forms on the right.</S>
    <S sid="305" ssid="128">For these purposes, the &amp;quot;n&amp;quot; of the first pair of forms should be ignored since it is contributed by the prosodic template, and not by the root. consonantal slot in the prosodic template only in the case of the shorter form.</S>
    <S sid="306" ssid="129">The structure of the second and third forms is equally straighforward, but it is less easy to see how our machinery could account for them.</S>
    <S sid="307" ssid="130">Once again, the template calls for four root consonants and, where only three are provided, one must do double duty.</S>
    <S sid="308" ssid="131">But in this case, the effect is achieved through gemination rather than spreading so that the gemination mechanism just outlined is presumably in play.</S>
    <S sid="309" ssid="132">That mechanism makes no provision for gemination to be invoked only when needed to fill slots in the prosodic template that would otherwise remain empty.</S>
    <S sid="310" ssid="133">If the mechanism were as just described, and the triliteral forms were &amp;quot;CVGCVC&amp;quot; and &amp;quot;tVCVGCVC&amp;quot; respectively, then the quadriliteral forms would have to be generated on a different base.</S>
    <S sid="311" ssid="134">It is in cases like this, of which there in fact many, that the finite-state transducers play a substantive role.</S>
    <S sid="312" ssid="135">What is required in this case is a transducer that allows the root tape to remain stationary while the template tape moves over a &amp;quot;G&amp;quot;, provided no spreading will be allowed to occur later to fill consonantal slots that would Given a triliteral and a quadriliteral root, otherwise he unclaimed.</S>
    <S sid="313" ssid="136">If extra consonants are the first pair are exactly as one would expect&#8212;the final root consonant is spread to fill the final required, then the first priority must he to let them occupy the slots marked with a &amp;quot;0&amp;quot; in the template.</S>
    <S sid="314" ssid="137">Fig.</S>
    <S sid="315" ssid="138">1 shows a schema for the transition diagram of a transducer that has this effect.</S>
    <S sid="316" ssid="139">I call it a &amp;quot;schema&amp;quot; only because each of the edges shown does duty for a number of actual transitions.</S>
    <S sid="317" ssid="140">The machine begins in the &amp;quot;start&amp;quot; state and continues to return there so long as no frame is encountered involving a &amp;quot;G&amp;quot; on the template tape.</S>
    <S sid="318" ssid="141">A &amp;quot;G&amp;quot; transition causes a nondeterministic choice.</S>
    <S sid="319" ssid="142">If the root tape moves at the same time as the &amp;quot;G&amp;quot; is scanned, the transducer goes into its &amp;quot;no-spread&amp;quot; state, to which it continues to return so long as every move over a &amp;quot;C&amp;quot; on the prosodic tape is accompanied by a move over a consonant on the root tape.</S>
    <S sid="320" ssid="143">In other words, it must be possible to complete the process without spreading consonants.</S>
    <S sid="321" ssid="144">The other alternative is that the transducer should enter the &amp;quot;geminate&amp;quot; state over a transition over a in the template with the root tape remaining stationary.</S>
    <S sid="322" ssid="145">The transitions at the &amp;quot;geminate&amp;quot; state allow both spreading and nonspreading transitions.</S>
    <S sid="323" ssid="146">In summary, spreading can occur only if the transducer never leaves the &amp;quot;start&amp;quot; state and there is no &amp;quot;G&amp;quot; in the template, or there is a &amp;quot;G&amp;quot; on the template which does not trigger gemination.</S>
    <S sid="324" ssid="147">A &amp;quot;G&amp;quot; can fail to trigger gemination only when the root contains enough consonants to fill all the requirements that the template makes for them.</S>
    <S sid="325" ssid="148">One quadriliteral case remains to be accounted for, namely the following: ktaabab dharjaj According to the strategy just elaborated, we should have expected the quadriliteral form to have been &amp;quot;dhaaraj&amp;quot;.</S>
    <S sid="326" ssid="149">But, apparently this form contains a slot that is used for vowel lengthening with triliteral roots, and as consonantal position for quadriliterals.</S>
    <S sid="327" ssid="150">We must therefore presumably take it that the prosodic template for this form is something like &amp;quot;CCVXCVC&amp;quot; where &amp;quot;X&amp;quot; is a segment, but not specified as either vocalic or consonantal.</S>
    <S sid="328" ssid="151">This much is in line with the proposal that McCarthy himself makes The question is, when should be filled by a vowel, and when by a consonant?</S>
    <S sid="329" ssid="152">The data in Table I is, of course, insufficient to answer question. but a plausible answer that strongly suggests itself is that the &amp;quot;X&amp;quot; slot prefers a consonantal filler except where that would result in gemination.</S>
    <S sid="330" ssid="153">If this is true, then it is another case where the notion of gemination, though not actually exemplified in the form, plays a central role.</S>
    <S sid="331" ssid="154">Supposing that the analysis is correct, the next question is, how is it to be implemented.</S>
    <S sid="332" ssid="155">The most appealing answer would be to make &amp;quot;X&amp;quot; the exact obverse of &amp;quot;G&amp;quot;, when filled with a consonant.</S>
    <S sid="333" ssid="156">In other words, when a root consonant fills such a slot, the root tape must advance so that the same consonant will no longer be available to fill the next position.</S>
    <S sid="334" ssid="157">The possibility that the next root consonant would simply be a repetition of the current one would be excluded if we were to take over from autosegmental phonology and morphology, some version of th Obligatory Contour Principle (OCP) (Goldsmith, 1979) which disallows repeated segments except in the prosodic template and in the surface string.</S>
    <S sid="335" ssid="158">McCarthy points out the roots like /smnn/, which appear to violate the OCP can invariably be reanalyzed as biliteral roots like /sm/ and, if this is done, our analysis, like his, goes through.</S>
    <S sid="336" ssid="159">The OCP does seem likely to cause some trouble when we come to treat one of the principal remaining problems, namely that of the forms in row I of table I.</S>
    <S sid="337" ssid="160">It turns out that the vowel that appears in the second syllable of these forms is not provided by the vocalism, but by the root.</S>
    <S sid="338" ssid="161">The vowel that appears in the perfect is generally different from the one that appears in the imperfect, and four different pairs are possible.</S>
    <S sid="339" ssid="162">The pair that is used with a given root is an idiosyncratic property of that root.</S>
    <S sid="340" ssid="163">One possibility is, therefore, that we treat the traditional triliteral roots as consisting not simply of three consonants, but as three consonants with a vowel intervening between the second and third, for a total of four segments.</S>
    <S sid="341" ssid="164">This flies in the face of traditional wisdom.</S>
    <S sid="342" ssid="165">It also runs counter to one of the motivating intuitions of autosegmental phonology which would have it that particular phonological features can be represented on at most one lexical tier, or tape.</S>
    <S sid="343" ssid="166">The intuition is that these tiers or tapes each contain a record or a particular kind of articulatory gesture; from the hearer's point of view, it is as though they contained a record of the signal received from a receptor that was attuned only to certain features.</S>
    <S sid="344" ssid="167">If we wish to maintain this model, there are presumably two alternatives open to us.</S>
    <S sid="345" ssid="168">Both involve assuming that roots are represented on at least two tapes in parallel, with the consonants separate from the vowel.</S>
    <S sid="346" ssid="169">According to one alternative, the root vowel would be written on the same tape as the vocalism; according to the other, it would be on a tape of its own.</S>
    <S sid="347" ssid="170">Unfortunately, neither alternative makes for a particularly happy solution.</S>
    <S sid="348" ssid="171">No problem arises from the proposal that a given morpheme should, in general, be represented on more than one lexical tape.</S>
    <S sid="349" ssid="172">However, the idea that the vocalic material associated with a root should appear on a special tape, reserved for it alone, breaks the clean lines of the system as so far presented in two ways.</S>
    <S sid="350" ssid="173">First, it spearates material onto two tapes, specifically the new one and the vocalism, on purely lexical grounds, having nothing to do with their phonetic or phonological constitution, and this runs counter to the idea of tapes as records of activity on phonetically specialized receptors.</S>
    <S sid="351" ssid="174">It is also at least slightly troublesome in that that newly introduced tape fills no function except in the generation of the first row of the table.</S>
    <S sid="352" ssid="175">Neither of these arguments is conclusive, and they could diminish considerably in force as a wider range of data was considered.</S>
    <S sid="353" ssid="176">Representing the vocalic contribution of the root on the same tape as the vacalism would avoid both of these objections, but would require that vocalic contribution to be recorded either before or after the vocalism itself.</S>
    <S sid="354" ssid="177">Since the root vowel affects the latter part of the root, it seems reasonable that it should be positioned to the right.</S>
    <S sid="355" ssid="178">Notice, however, that this is the only instance in which we have had to make any assumptions about the relative ordering of the morphemes that contribute to a stem.</S>
    <S sid="356" ssid="179">Once again, it may be possible to assemble further evidence reflecting on some such ordering, but I do not see it in these data.</S>
    <S sid="357" ssid="180">It is only right that I should point out the difficulty of accounting satisfactorily for the vocalic contribution of verbal roots.</S>
    <S sid="358" ssid="181">It is only right that I should also point out that the autosegmental solution fares no better on this score, resorting, as it must, to rules that access essentially non-phonological properties of the morphemes involved.</S>
    <S sid="359" ssid="182">By insisting that what I have called the spelling of a morpheme should by, by definition, be its only contribution to phonological processes, I have cut myself off from any such deus ex machina.</S>
    <S sid="360" ssid="183">Linguists in general, and computational linguists in particular, do well to employ finite-state devices wherever possible.</S>
    <S sid="361" ssid="184">They are theoretically appealing because they are computational weak and best understood from a mathematical point of view.</S>
    <S sid="362" ssid="185">They are computationally appealing because they make for simple, elegant, and highly efficient implementaions.</S>
    <S sid="363" ssid="186">In this paper, I hope I have shown how they can be applied to a problem in nonconcatenative morphology which seems initially to require heavier machinary.</S>
  </SECTION>
</PAPER>
