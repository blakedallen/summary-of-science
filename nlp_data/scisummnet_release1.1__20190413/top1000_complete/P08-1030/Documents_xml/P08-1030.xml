<PAPER>
  <S sid="0">Refining Event Extraction through Cross-Document Inference</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We apply the hypothesis of &#8220;One Sense Per Discourse&#8221; (Yarowsky, 1995) to information extraction (IE), and extend the scope of &#8220;discourse&#8221; from one single document to a cluster of topically-related documents.</S>
    <S sid="2" ssid="2">We employ a similar approach to propagate consistent event arguments across sentences and documents.</S>
    <S sid="3" ssid="3">Combining global evidence from related documents with local decisions, we design a simple scheme to conduct cross-document inference for improving the ACE event ex- Without using any additional labeled data this new approach obtained 7.6% higher F-Measure in trigger labeling and 6% higher F-Measure in argument labeling over a state-of-the-art IE system which extracts events independently for each sentence.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="4" ssid="1">Identifying events of a particular type within individual documents &#8211; &#8216;classical&#8217; information extraction &#8211; remains a difficult task.</S>
    <S sid="5" ssid="2">Recognizing the different forms in which an event may be expressed, distinguishing events of different types, and finding the arguments of an event are all challenging tasks.</S>
    <S sid="6" ssid="3">Fortunately, many of these events will be reported multiple times, in different forms, both within the same document and within topicallyrelated documents (i.e. a collection of documents sharing participants in potential events).</S>
    <S sid="7" ssid="4">We can take advantage of these alternate descriptions to improve event extraction in the original document, by favoring consistency of interpretation across sentences and documents.</S>
    <S sid="8" ssid="5">Several recent studies involving specific event types have stressed the benefits of going beyond traditional singledocument extraction; in particular, Yangarber (2006) has emphasized this potential in his work on medical information extraction.</S>
    <S sid="9" ssid="6">In this paper we demonstrate that appreciable improvements are possible over the variety of event types in the ACE (Automatic Content Extraction) evaluation through the use of cross-sentence and cross-document evidence.</S>
    <S sid="10" ssid="7">As we shall describe below, we can make use of consistency at several levels: consistency of word sense across different instances of the same word in related documents, and consistency of arguments and roles across different mentions of the same or related events.</S>
    <S sid="11" ssid="8">Such methods allow us to build dynamic background knowledge as required to interpret a document and can compensate for the limited annotated training data which can be provided for each event type.</S>
  </SECTION>
  <SECTION title="2 Task and Baseline System" number="2">
    <S sid="12" ssid="1">The event extraction task we are addressing is that of the Automatic Content Extraction (ACE) evaluations2.</S>
    <S sid="13" ssid="2">ACE defines the following terminology: entity: an object or a set of objects in one of the semantic categories of interest mention: a reference to an entity (typically, a noun phrase) event trigger: the main word which most clearly expresses an event occurrence event arguments: the mentions that are involved in an event (participants) event mention: a phrase or sentence within which an event is described, including trigger and arguments The 2005 ACE evaluation had 8 types of events, with 33 subtypes; for the purpose of this paper, we will treat these simply as 33 distinct event types.</S>
    <S sid="14" ssid="3">For example, for a sentence: the event extractor should detect a &#8220;Personnel_End-Position&#8221; event mention, with the trigger word, the position, the person who quit the position, the organization, and the time during which the event happened: We define the following standards to determine the correctness of an event mention: We use a state-of-the-art English IE system as our baseline (Grishman et al., 2005).</S>
    <S sid="15" ssid="4">This system extracts events independently for each sentence.</S>
    <S sid="16" ssid="5">Its training and test procedures are as follows.</S>
    <S sid="17" ssid="6">The system combines pattern matching with statistical models.</S>
    <S sid="18" ssid="7">For every event mention in the ACE training corpus, patterns are constructed based on the sequences of constituent heads separating the trigger and arguments.</S>
    <S sid="19" ssid="8">In addition, a set of Maximum Entropy based classifiers are trained: In the test procedure, each document is scanned for instances of triggers from the training corpus.</S>
    <S sid="20" ssid="9">When an instance is found, the system tries to match the environment of the trigger against the set of patterns associated with that trigger.</S>
    <S sid="21" ssid="10">This pattern-matching process, if successful, will assign some of the mentions in the sentence as arguments of a potential event mention.</S>
    <S sid="22" ssid="11">The argument classifier is applied to the remaining mentions in the sentence; for any argument passing that classifier, the role classifier is used to assign a role to it.</S>
    <S sid="23" ssid="12">Finally, once all arguments have been assigned, the reportable-event classifier is applied to the potential event mention; if the result is successful, this event mention is reported.</S>
  </SECTION>
  <SECTION title="3 Motivations" number="3">
    <S sid="24" ssid="1">In this section we shall present our motivations based on error analysis for the baseline event tagger.</S>
    <S sid="25" ssid="2">Across a heterogeneous document corpus, a particular verb can sometimes be trigger and sometimes not, and can represent different event types.</S>
    <S sid="26" ssid="3">However, for a collection of topically-related documents, the distribution may be much more convergent.</S>
    <S sid="27" ssid="4">We investigate this hypothesis by automatically obtaining 25 related documents for each test text.</S>
    <S sid="28" ssid="5">The statistics of some trigger examples are presented in table 2.</S>
    <S sid="29" ssid="6">As we can see from the table, the likelihood of a candidate word being an event trigger in the test document is closer to its distribution in the collection of related documents than the uniform training corpora.</S>
    <S sid="30" ssid="7">So if we can determine the sense (event type) of a word in the related documents, this will allow us to infer its sense in the test document.</S>
    <S sid="31" ssid="8">In this way related documents can help recover event mentions missed by within-sentence extraction.</S>
    <S sid="32" ssid="9">For example, in a document about &#8220;the advance into Baghdad&#8221;: Most US army commanders believe it is critical to pause the breakneck advance towards Baghdad to secure the supply lines and make sure weapons are operable and troops resupplied.... British and US forces report gains in the advance on Baghdad and take control of Umm Qasr, despite a fierce sandstorm which slows another flank.</S>
    <S sid="33" ssid="10">...</S>
    <S sid="34" ssid="11">The baseline event tagger is not able to detect &#8220;advance&#8221; as a &#8220;Movement_Transport&#8221; event trigger because there is no pattern &#8220;advance towards [Place]&#8221; in the ACE training corpora (&#8220;advance&#8221; by itself is too ambiguous).</S>
    <S sid="35" ssid="12">The training data, however, does include the pattern &#8220;advance on [Place]&#8221;, which allows the instance of &#8220;advance&#8221; in the related documents to be successfully identified with high confidence by pattern matching as an event.</S>
    <S sid="36" ssid="13">This provides us much stronger &#8220;feedback&#8221; confidence in tagging &#8216;advance&#8217; in the test sentence as a correct trigger.</S>
    <S sid="37" ssid="14">On the other hand, if a word is not tagged as an event trigger in most related documents, then it&#8217;s less likely to be correct in the test sentence despite its high local confidence.</S>
    <S sid="38" ssid="15">For example, in a document about &#8220;assessment of Russian president Putin&#8221;: But few at the Kremlin forum suggested that Putin's own standing among voters will be hurt by Russia's apparent diplomacy failures.</S>
    <S sid="39" ssid="16">Putin boosted ties with the United States by throwing his support behind its war on terrorism after the Sept. 11 attacks, but the Iraq war has hurt the relationship.</S>
    <S sid="40" ssid="17">...</S>
    <S sid="41" ssid="18">The word &#8220;hurt&#8221; in the test sentence is mistakenly identified as a &#8220;Life_Injure&#8221; trigger with high local confidence (because the within-sentence extractor misanalyzes &#8220;voters&#8221; as the object of &#8220;hurt&#8221; and so matches the pattern &#8220;[Person] be hurt&#8221;).</S>
    <S sid="42" ssid="19">Based on the fact that many other instances of &#8220;hurt&#8221; are not &#8220;Life_Injure&#8221; triggers in the related documents, we can successfully remove this wrong event mention in the test document.</S>
    <S sid="43" ssid="20">Inspired by the observation about trigger distribution, we propose a similar hypothesis &#8211; one argument role per cluster for event arguments.</S>
    <S sid="44" ssid="21">In other words, each entity plays the same argument role, or no role, for events with the same type in a collection of related documents.</S>
    <S sid="45" ssid="22">For example, The above test sentence doesn&#8217;t include an explicit trigger word to indicate &#8220;Vivendi&#8221; as a &#8220;seller&#8221; of a &#8220;Transaction_Transfer-Ownership&#8221; event mention, but &#8220;Vivendi&#8221; is correctly identified as &#8220;seller&#8221; in many other related sentences (by matching patterns &#8220;[Seller] sell&#8221; and &#8220;buy [Seller]&#8217;s&#8221;).</S>
    <S sid="46" ssid="23">So we can incorporate such additional information to enhance the confidence of &#8220;Vivendi&#8221; as a &#8220;seller&#8221; in the test sentence.</S>
    <S sid="47" ssid="24">On the other hand, we can remove spurious arguments with low cross-document frequency and confidence.</S>
    <S sid="48" ssid="25">In the following example, The Davao Medical Center, a regional government hospital, recorded 19 deaths with 50 wounded.</S>
    <S sid="49" ssid="26">&#8220;the Davao Medical Center&#8221; is mistakenly tagged as &#8220;Place&#8221; for a &#8220;Life_Die&#8221; event mention.</S>
    <S sid="50" ssid="27">But the same annotation for this mention doesn&#8217;t appear again in the related documents, so we can determine it&#8217;s a spurious argument.</S>
  </SECTION>
  <SECTION title="4 System Approach Overview" number="4">
    <S sid="51" ssid="1">Based on the above motivations we propose to incorporate global evidence from a cluster of related documents to refine local decisions.</S>
    <S sid="52" ssid="2">This section gives more details about the baseline withinsentence event tagger, and the information retrieval system we use to obtain related documents.</S>
    <S sid="53" ssid="3">In the next section we shall focus on describing the inference procedure.</S>
    <S sid="54" ssid="4">Figure 1 depicts the general procedure of our approach.</S>
    <S sid="55" ssid="5">EMSet represents a set of event mentions which is gradually updated.</S>
    <S sid="56" ssid="6">We apply within-sentence event extraction to get an initial set of event mentions EMSett , and conduct cross-sentence inference (details will be presented in section 5) to get an updated set of event mentions EMSett .</S>
  </SECTION>
  <SECTION title="1" number="5">
    <S sid="57" ssid="1">We then use the INDRI retrieval system (Strohman et al., 2005) to obtain the top N (N=25 in this paper3) related documents.</S>
    <S sid="58" ssid="2">We construct an INDRI query from the triggers and arguments, each weighted by local confidence and frequency in the test document.</S>
    <S sid="59" ssid="3">For each argument we also add other names coreferential with or bearing some ACE relation to the argument.</S>
    <S sid="60" ssid="4">For each related document r returned by INDRI, we repeat the within-sentence event extraction and cross-sentence inference procedure, and get an expanded event mention set EMSett +r .</S>
    <S sid="61" ssid="5">Then we apply</S>
  </SECTION>
  <SECTION title="5 Global Inference" number="6">
    <S sid="62" ssid="1">The central idea of inference is to obtain document-wide and cluster-wide statistics about the frequency with which triggers and arguments are associated with particular types of events, and then use this information to correct event and argument identification and classification.</S>
    <S sid="63" ssid="2">For a set of event mentions we tabulate the following document-wide and cluster-wide confidence-weighted frequencies: coreferential with or related to the argument, the frequency of the event type and role.</S>
    <S sid="64" ssid="3">Besides these frequencies, we also define the following margin metric to compute the confidence of the best (most frequent) event type or role: &#8211; WeightedFrequency (second most freq value))/ WeightedFrequency (second most freq value) A large margin indicates greater confidence in the most frequent value.</S>
    <S sid="65" ssid="4">We summarize the frequency and confidence metrics in Table 3.</S>
    <S sid="66" ssid="5">Based on these confidence metrics, we designed the inference rules in Table 4.</S>
    <S sid="67" ssid="6">These rules are applied in the order (1) to (9) based on the principle of improving &#8216;local&#8217; information before global propagation.</S>
    <S sid="68" ssid="7">Although the rules may seem complex, they basically serve two functions:</S>
  </SECTION>
  <SECTION title="6 Experimental Results and Analysis" number="7">
    <S sid="69" ssid="1">In this section we present the results of applying this inference method to improve ACE event extraction.</S>
    <S sid="70" ssid="2">We used 10 newswire texts from ACE 2005 training corpora (from March to May of 2003) as our development set, and then conduct blind test on a separate set of 40 ACE 2005 newswire texts.</S>
    <S sid="71" ssid="3">For each test text we retrieved 25 related texts from English TDT5 corpus which in total consists of 278,108 texts (from April to September of 2003).</S>
    <S sid="72" ssid="4">We select the thresholds (Sk with k=1~13) for various confidence metrics by optimizing the Fmeasure score of each rule on the development set, as shown in Figure 2 and 3 as follows.</S>
    <S sid="73" ssid="5">Each curve in Figure 2 and 3 shows the effect on precision and recall of varying the threshold for an individual rule.</S>
    <S sid="74" ssid="6">The labeled point on each curve shows the best F-measure that can be obtained on the development set by adjusting the threshold for that rule.</S>
    <S sid="75" ssid="7">The gain obtained by applying successive rules can be seen in the progression of successive points towards higher recall and, for argument labeling, precision4.</S>
    <S sid="76" ssid="8">Table 5 shows the overall Precision (P), Recall (R) and F-Measure (F) scores for the blind test set.</S>
    <S sid="77" ssid="9">In addition, we also measured the performance of two human annotators who prepared the ACE 2005 training data on 28 newswire texts (a subset of the blind test set).</S>
    <S sid="78" ssid="10">The final key was produced by review and adjudication of the two annotations.</S>
    <S sid="79" ssid="11">Both cross-sentence and cross-document inferences provided significant improvement over the baseline with local confidence thresholds controlled.</S>
    <S sid="80" ssid="12">We conducted the Wilcoxon Matched-Pairs Signed-Ranks Test on a document basis.</S>
    <S sid="81" ssid="13">The results show that the improvement using crosssentence inference is significant at a 99.9% confidence level for both trigger and argument labeling; adding cross-document inference is significant at a 99.9% confidence level for trigger labeling and 93.4% confidence level for argument labeling.</S>
    <S sid="82" ssid="14">From table 5 we can see that for trigger labeling our approach dramatically enhanced recall (22.9% improvement) with some loss (7.4%) in precision.</S>
    <S sid="83" ssid="15">This precision loss was much larger than that for the development set (0.3%).</S>
    <S sid="84" ssid="16">This indicates that the trigger propagation thresholds optimized on the development set were too low for the blind test set and thus more spurious triggers got propagated.</S>
    <S sid="85" ssid="17">The improved trigger labeling is better than one human annotator and only 4.7% worse than another.</S>
    <S sid="86" ssid="18">For argument labeling we can see that crosssentence inference improved both identification (3.7% higher F-Measure) and classification (6.1% higher accuracy); and cross-document inference mainly provided further gains (1.9%) in classification.</S>
    <S sid="87" ssid="19">This shows that identification consistency may be achieved within a narrower context while the classification task favors more global background knowledge in order to solve some difficult cases.</S>
    <S sid="88" ssid="20">This matches the situation of human annotation as well: we may decide whether a mention is involved in some particular event or not by reading and analyzing the target sentence itself; but in order to decide the argument&#8217;s role we may need to frequently refer to wider discourse in order to infer and confirm our decision.</S>
    <S sid="89" ssid="21">In fact sometimes it requires us to check more similar web pages or even wikipedia databases.</S>
    <S sid="90" ssid="22">This was exactly the intuition of our approach.</S>
    <S sid="91" ssid="23">We should also note that human annotators label arguments based on perfect entity mentions, but our system used the output from the IE system.</S>
    <S sid="92" ssid="24">So the gap was also partially due to worse entity detection.</S>
    <S sid="93" ssid="25">Error analysis on the inference procedure shows that the propagation rules (3), (4), (7) and (9) produced a few extra false alarms.</S>
    <S sid="94" ssid="26">For trigger labeling, most of these errors appear for support verbs such as &#8220;take&#8221; and &#8220;get&#8221; which can only represent an event mention together with other verbs or nouns.</S>
    <S sid="95" ssid="27">Some other errors happen on nouns and adjectives.</S>
    <S sid="96" ssid="28">These are difficult tasks even for human annotators.</S>
    <S sid="97" ssid="29">As shown in table 5 the inter-annotator agreement on trigger identification is only about 40%.</S>
    <S sid="98" ssid="30">Besides some obvious overlooked cases (it&#8217;s probably difficult for a human to remember 33 different event types during annotation), most difficulties were caused by judging generic verbs, nouns and adjectives.</S>
    <S sid="99" ssid="31">In fact, compared to a statistical tagger trained on the corpus after expert adjudication, a human annotator tends to make more mistakes in trigger classification.</S>
    <S sid="100" ssid="32">For example it&#8217;s hard to decide whether &#8220;named&#8221; represents a &#8220;Personnel_Nominate&#8221; or &#8220;Personnel_Start-Position&#8221; event mention; &#8220;hacked to death&#8221; represents a &#8220;Life_Die&#8221; or &#8220;Conflict_Attack&#8221; event mention without following more specific annotation guidelines.</S>
  </SECTION>
  <SECTION title="7 Related Work" number="8">
    <S sid="101" ssid="1">The trigger labeling task described in this paper is in part a task of word sense disambiguation (WSD), so we have used the idea of sense consistency introduced in (Yarowsky, 1995), extending it to operate across related documents.</S>
    <S sid="102" ssid="2">Almost all the current event extraction systems focus on processing single documents and, except for coreference resolution, operate a sentence at a time (Grishman et al., 2005; Ahn, 2006; Hardy et al., 2006).</S>
    <S sid="103" ssid="3">We share the view of using global inference to improve event extraction with some recent research.</S>
    <S sid="104" ssid="4">Yangarber et al. (Yangarber and Jokipii, 2005; Yangarber, 2006; Yangarber et al., 2007) applied cross-document inference to correct local extraction results for disease name, location and start/end time.</S>
    <S sid="105" ssid="5">Mann (2007) encoded specific inference rules to improve extraction of CEO (name, start year, end year) in the MUC management succession task.</S>
    <S sid="106" ssid="6">In addition, Patwardhan and Riloff (2007) also demonstrated that selectively applying event patterns to relevant regions can improve MUC event extraction.</S>
    <S sid="107" ssid="7">We expand the idea to more general event types and use information retrieval techniques to obtain wider background knowledge from related documents.</S>
  </SECTION>
  <SECTION title="8 Conclusion and Future Work" number="9">
    <S sid="108" ssid="1">One of the initial goals for IE was to create a database of relations and events from the entire input corpus, and allow further logical reasoning on the database.</S>
    <S sid="109" ssid="2">The artificial constraint that extraction should be done independently for each document was introduced in part to simplify the task and its evaluation.</S>
    <S sid="110" ssid="3">In this paper we propose a new approach to break down the document boundaries for event extraction.</S>
    <S sid="111" ssid="4">We gather together event extraction results from a set of related documents, and then apply inference and constraints to enhance IE performance.</S>
    <S sid="112" ssid="5">In the short term, the approach provides a platform for many byproducts.</S>
    <S sid="113" ssid="6">For example, we can naturally get an event-driven summary for the collection of related documents; the sentences including high-confidence events can be used as additional training data to bootstrap the event tagger; from related events in different timeframes we can derive entailment rules; the refined consistent events can serve better for other NLP tasks such as template based question-answering.</S>
    <S sid="114" ssid="7">The aggregation approach described here can be easily extended to improve relation detection and coreference resolution (two argument mentions referring to the same role of related events are likely to corefer).</S>
    <S sid="115" ssid="8">Ultimately we would like to extend the system to perform essential, although probably lightweight, event prediction.</S>
    <S sid="116" ssid="9">XSent-Trigger-Freq(trigger, etype) The weighted frequency of string trigger appearing as the trigger of an event of type etype across all sentences within a document XDoc-Trigger-Freq (trigger, etype) The weighted frequency of string trigger appearing as the trigger of an event of type etype across all documents in a cluster XDoc-Trigger-BestFreq (trigger) Maximum over all etypes of XDoc-Trigger-Freq (trigger, etype) XDoc-Arg-Freq(arg, etype) The weighted frequency of arg appearing as an argument of an event of type etype across all documents in a cluster XDoc-Role-Freq(arg, etype, role) The weighted frequency of arg appearing as an argument of an event of type etype with role role across all documents in a cluster XDoc-Role-BestFreq(arg) Maximum over all etypes and roles of XDoc-Role-Freq(arg, etype, role) XSent-Trigger-Margin(trigger) The margin value of trigger in XSent-Trigger-Freq XDoc-Trigger-Margin(trigger) The margin value of trigger in XDoc-Trigger-Freq XDoc-Role-Margin(arg) The margin value of arg in XDoc-Role-Freq</S>
  </SECTION>
</PAPER>
