[
  {
    "citance_No": 1, 
    "citing_paper_id": "D07-1100", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Tetsuji, Nakagawa", 
    "raw_text": "For dependency parsing, McDonald and Pereira (2006) proposed a method which can incorporate some types of global features, and Riedel and Clarke (2006) studied a method using integer linear programming which can incorporate global linguistic constraints", 
    "clean_text": "For dependency parsing, McDonald and Pereira (2006) proposed a method which can incorporate some types of global features, and Riedel and Clarke (2006) studied a method using integer linear programming which can incorporate global linguistic constraints.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "N09-2002", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Sebastian, Riedel | James, Clarke", 
    "raw_text": "However, work in dependency parsing (Riedel and Clarke, 2006) has demonstrated that it is possible to use ILP to perform efficient inference for very large programs when used in an incremental manner", 
    "clean_text": "However, work in dependency parsing (Riedel and Clarke, 2006) has demonstrated that it is possible to use ILP to perform efficient inference for very large programs when used in an incremental manner.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "N09-2002", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Sebastian, Riedel | James, Clarke", 
    "raw_text": "However, recent work (Riedel and Clarke,2006) has shown that even exponentially large decoding problems may be solved efficiently using ILP solvers if a Cutting-Plane Algorithm (Dantzig et al, 1954) is used.3 A Cutting-Plane Algorithm starts with a subset of the complete set of constraints", 
    "clean_text": "However, recent work (Riedel and Clarke, 2006) has shown that even exponentially large decoding problems may be solved efficiently using ILP solvers if a Cutting-Plane Algorithm (Dantzig et al, 1954) is used.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "D10-1125", 
    "citing_paper_authority": 41, 
    "citing_paper_authors": "Terry, Koo | Alexander M., Rush | Michael John, Collins | Tommi, Jaakkola | David, Sontag", 
    "raw_text": "Riedel and Clarke (2006 )de scribe ILP methods for the problem; Martins et al (2009) recently introduced alternative LP and ILP formulations", 
    "clean_text": "Riedel and Clarke (2006) describe ILP methods for the problem; Martins et al (2009) recently introduced alternative LP and ILP formulations.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "N10-1117", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Sebastian, Riedel | David A., Smith", 
    "raw_text": "Riedel and Clarke (2006) tackled the MAP problem for dependency parsing by an incremental approach that starts with a relaxation of the problem, solves it, and adds additional constraints only if they are violated", 
    "clean_text": "Riedel and Clarke (2006) tackled the MAP problem for dependency parsing by an incremental approach that starts with a relaxation of the problem, solves it, and adds additional constraints only if they are violated.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "D11-1012", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Vivek, Srikumar | Dan, Roth", 
    "raw_text": "ILPs have since been used successfully in many NLP applications involving complex structures? Punyakanok et al (2008) for semantic role labeling, Riedel and Clarke (2006) and Martins et al (2009) for dependency parsing and several others6. Let vCi, a be the Boolean indicator variable that denotes that the ith argument candidate for a predicate is assigned a label a and let? Ci, a represent the score assigned by the argument classifier for this decision", 
    "clean_text": "ILPs have since been used successfully in many NLP applications involving complex structures Punyakanok et al (2008) for semantic role labeling, Riedel and Clarke (2006) and Martins et al (2009) for dependency parsing and several others.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "E09-1051", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Manfred, Klenner | &Eacute;tienne, Ailloud", 
    "raw_text": "Another attempt to overcome the problem of complexity with ILP models is described in (Riedel and Clarke, 2006) (dependency parsing)", 
    "clean_text": "Another attempt to overcome the problem of complexity with ILP models is described in (Riedel and Clarke, 2006) (dependency parsing).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "D08-1016", 
    "citing_paper_authority": 38, 
    "citing_paper_authors": "David A., Smith | Jason M., Eisner", 
    "raw_text": "In contrast, generic NP-hard solution techniques like Integer Linear Programming (Riedel and Clarke, 2006) know nothing about optimal substructure", 
    "clean_text": "In contrast, generic NP-hard solution techniques like Integer Linear Programming (Riedel and Clarke, 2006) know nothing about optimal substructure.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "D12-1067", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "David A., Smith | Sebastian, Riedel | Andrew, McCallum", 
    "raw_text": "Riedel and Clarke (2006) showed that dependency parsing can be framed as Integer Linear Program (ILP), and efficiently solved using an off-the shelf optimizer if a cutting plane approach is used.1 Compared to tailor made dynamic programs, such generic solvers give the practitioner more modeling flexibility (Martins et al2009), albeit at the cost of efficiency", 
    "clean_text": "Riedel and Clarke (2006) showed that dependency parsing can be framed as Integer Linear Program (ILP), and efficiently solved using an off-the shelf optimizer if a cutting plane approach is used.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "D12-1067", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "David A., Smith | Sebastian, Riedel | Andrew, McCallum", 
    "raw_text": "Compared to the representation Riedel and Clarke (2006), this bound has the benefit a small polynomial number of constraints", 
    "clean_text": "Compared to the representation Riedel and Clarke (2006), this bound has the benefit a small polynomial number of constraints.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "D12-1067", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "David A., Smith | Sebastian, Riedel | Andrew, McCallum", 
    "raw_text": "Our formulation is in spired by Martins et al2009), and hence uses fewer constraints than Riedel and Clarke (2006)", 
    "clean_text": "Our formulation is inspired by Martins et al 2009, and hence uses fewer constraints than Riedel and Clarke (2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "P11-1062", 
    "citing_paper_authority": 23, 
    "citing_paper_authors": "Jonathan, Berant | Ido, Dagan | Jacob, Goldberger", 
    "raw_text": "We suggest scaling techniques that allow to optimally learn such graphs over a large set of typed predicates by first decomposing nodes into components and then applying incremental ILP (Riedel and Clarke, 2006)", 
    "clean_text": "We suggest scaling techniques that allow to optimally learn such graphs over a large set of typed predicates by first decomposing nodes into components and then applying incremental ILP (Riedel and Clarke, 2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "P11-1062", 
    "citing_paper_authority": 23, 
    "citing_paper_authors": "Jonathan, Berant | Ido, Dagan | Jacob, Goldberger", 
    "raw_text": "Another solution for scaling ILP is to employ incremental ILP, which has been used in dependency parsing (Riedel and Clarke, 2006)", 
    "clean_text": "Another solution for scaling ILP is to employ incremental ILP, which has been used in dependency parsing (Riedel and Clarke, 2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "C10-1011", 
    "citing_paper_authority": 68, 
    "citing_paper_authors": "Bernd, Bohnet", 
    "raw_text": "For instance, to improve the accuracy further, more global constrains capturing the sub categorization correct could be integrated as in Riedel and Clarke (2006)", 
    "clean_text": "For instance, to improve the accuracy further, more global constrains capturing the subcategorization correct could be integrated as in Riedel and Clarke (2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "P09-1039", 
    "citing_paper_authority": 54, 
    "citing_paper_authors": "Andre, Martins | Noah A., Smith | Eric P., Xing", 
    "raw_text": "Riedel and Clarke (2006) cast dependency parsing as an ILP, but efficient formulations remain an open problem", 
    "clean_text": "Riedel and Clarke (2006) cast dependency parsing as an ILP, but efficient formulations remain an open problem.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "P09-1039", 
    "citing_paper_authority": 54, 
    "citing_paper_authors": "Andre, Martins | Noah A., Smith | Eric P., Xing", 
    "raw_text": "If it is extended to labeled parsing (a straightforward extension), our formulation fully subsumes that of Riedel and Clarke (2006), since it allows using the same hard constraints and features while keeping the ILPpolynomial in size", 
    "clean_text": "If it is extended to labeled parsing (a straightforward extension), our formulation fully subsumes that of Riedel and Clarke (2006), since it allows using the same hard constraints and features while keeping the ILP polynomial in size.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "P09-1039", 
    "citing_paper_authority": 54, 
    "citing_paper_authors": "Andre, Martins | Noah A., Smith | Eric P., Xing", 
    "raw_text": "Rather than adding exponentially many constraints, one for each potential cycle (like Riedel and Clarke, 2006), we equivalently replace condition 3 by 3?", 
    "clean_text": "Rather than adding exponentially many constraints, one for each potential cycle (like Riedel and Clarke, 2006), we equivalently replace condition 3 by 3.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "P09-1039", 
    "citing_paper_authority": 54, 
    "citing_paper_authors": "Andre, Martins | Noah A., Smith | Eric P., Xing", 
    "raw_text": "baselines, all of them state-of-the-art parsers based on non-arc-factored models: the second order model of McDonald and Pereira (2006), the hybrid model of Nivre and McDonald (2008), which combines a (labeled) transition-based and a graph based parser, and a refinement of the latter ,dueto Martins et al (2008), which attempts to approximate non-local features.13 We did not reproduce the model of Riedel and Clarke (2006) since the latter is tailored for labeled dependency parsing; however, experiments reported in that paper for Dutch (and extended to other languages in the CoNLL-X task) suggest that their model performs worse than our three baselines", 
    "clean_text": "all of them state-of-the-art parsers based on non-arc-factored models: the second order model of McDonald and Pereira (2006), the hybrid model of Nivre and McDonald (2008), which combines a (labeled) transition-based and a graph based parser, and a refinement of the latter, due to Martins et al (2008), which attempts to approximate non-local features. We did not reproduce the model of Riedel and Clarke (2006) since the latter is tailored for labeled dependency parsing; however, experiments reported in that paper for Dutch (and extended to other languages in the CoNLL-X task) suggest that their model performs worse than our three baselines.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "P09-1039", 
    "citing_paper_authority": 54, 
    "citing_paper_authors": "Andre, Martins | Noah A., Smith | Eric P., Xing", 
    "raw_text": "The average runtime (across all languages) is 0.632 seconds per sentence, which is in line with existing higher-order parsers and is much faster than the runtimes reported by Riedel and Clarke (2006)", 
    "clean_text": "The average runtime (across all languages) is 0.632 seconds per sentence, which is in line with existing higher-order parsers and is much faster than the runtimes reported by Riedel and Clarke (2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "D12-1102", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Vivek, Srikumar | Gourab, Kundu | Dan, Roth", 
    "raw_text": "The standard approach to framing dependency parsing as an integer linear program was introduced by (Riedel and Clarke, 2006), who converted the MST parser of (McDonald et al 2005) to use ILP for inference. The key idea is to build a complete graph consisting of tokens of the sentence where each edge is weighted by a learned scoring function", 
    "clean_text": "The standard approach to framing dependency parsing as an integer linear program was introduced by (Riedel and Clarke, 2006), who converted the MST parser of (McDonald et al 2005) to use ILP for inference. The key idea is to build a complete graph consisting of tokens of the sentence where each edge is weighted by a learned scoring function.", 
    "keep_for_gold": 0
  }
]
