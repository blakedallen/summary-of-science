<PAPER>
  <S sid="0">Identifying Agreement And Disagreement In Conversational Speech: Use Of Bayesian Networks To Model Pragmatic Dependencies</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We describe a statistical approach for modeling agreements and disagreements in conversational interaction.</S>
    <S sid="2" ssid="2">Our approach first identifies adjacency pairs using maximum entropy ranking based on a set of lexical, durational, and structural features that look both forward and backward in the discourse.</S>
    <S sid="3" ssid="3">We then classify utterances as agreement or disagreement using these adjacency pairs and features that represent various pragmatic influences of previous agreement or disagreement on the current utterance.</S>
    <S sid="4" ssid="4">Our approach achieves 86.9% accuracy, a 4.9% increase over previous work.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">One of the main features of meetings is the occurrence of agreement and disagreement among participants.</S>
    <S sid="6" ssid="2">Often meetings include long stretches of controversial discussion before some consensus decision is reached.</S>
    <S sid="7" ssid="3">Our ultimate goal is automated summarization of multi-participant meetings and we hypothesize that the ability to automatically identify agreement and disagreement between participants will help us in the summarization task.</S>
    <S sid="8" ssid="4">For example, a summary might resemble minutes of meetings with major decisions reached (consensus) along with highlighted points of the pros and cons for each decision.</S>
    <S sid="9" ssid="5">In this paper, we present a method to automatically classify utterances as agreement, disagreement, or neither.</S>
    <S sid="10" ssid="6">Previous work in automatic identification of agreement/disagreement (Hillard et al., 2003) demonstrates that this is a feasible task when various textual, durational, and acoustic features are available.</S>
    <S sid="11" ssid="7">We build on their approach and show that we can get an improvement in accuracy when contextual information is taken into account.</S>
    <S sid="12" ssid="8">Our approach first identifies adjacency pairs using maximum entropy ranking based on a set of lexical, durational and structural features that look both forward and backward in the discourse.</S>
    <S sid="13" ssid="9">This allows us to acquire, and subsequently process, knowledge about who speaks to whom.</S>
    <S sid="14" ssid="10">We hypothesize that pragmatic features that center around previous agreement between speakers in the dialog will influence the determination of agreement/disagreement.</S>
    <S sid="15" ssid="11">For example, if a speaker disagrees with another person once in the conversation, is he more likely to disagree with him again?</S>
    <S sid="16" ssid="12">We model context using Bayesian networks that allows capturing of these pragmatic dependencies.</S>
    <S sid="17" ssid="13">Our accuracy for classifying agreements and disagreements is 86.9%, which is a 4.9% improvement over (Hillard et al., 2003).</S>
    <S sid="18" ssid="14">In the following sections, we begin by describing the annotated corpus that we used for our experiments.</S>
    <S sid="19" ssid="15">We then turn to our work on identifying adjacency pairs.</S>
    <S sid="20" ssid="16">In the section on identification of agreement/disagreement, we describe the contextual features that we model and the implementation of the classifier.</S>
    <S sid="21" ssid="17">We close with a discussion of future work.</S>
  </SECTION>
  <SECTION title="2 Corpus" number="2">
    <S sid="22" ssid="1">The ICSI Meeting corpus (Janin et al., 2003) is a collection of 75 meetings collected at the International Computer Science Institute (ICSI), one among the growing number of corpora of humanto-human multi-party conversations.</S>
    <S sid="23" ssid="2">These are naturally occurring, regular weekly meetings of various ICSI research teams.</S>
    <S sid="24" ssid="3">Meetings in general run just under an hour each; they have an average of 6.5 participants.</S>
    <S sid="25" ssid="4">These meetings have been labeled with adjacency pairs (AP), which provide information about speaker interaction.</S>
    <S sid="26" ssid="5">They reflect the structure of conversations as paired utterances such as questionanswer and offer-acceptance, and their labeling is used in our work to determine who are the addressees in agreements and disagreements.</S>
    <S sid="27" ssid="6">The annotation of the corpus with adjacency pairs is described in (Shriberg et al., 2004; Dhillon et al., 2004).</S>
    <S sid="28" ssid="7">Seven of those meetings were segmented into spurts, defined as periods of speech that have no pauses greater than .5 second, and each spurt was labeled with one of the four categories: agreement, disagreement, backchannel, and other.1 We used spurt segmentation as our unit of analysis instead of sentence segmentation, because our ultimate goal is to build a system that can be fully automated, and in that respect, spurt segmentation is easy to obtain.</S>
    <S sid="29" ssid="8">Backchannels (e.g.</S>
    <S sid="30" ssid="9">&#8220;uhhuh&#8221; and &#8220;okay&#8221;) were treated as a separate category, since they are generally used by listeners to indicate they are following along, while not necessarily indicating agreement.</S>
    <S sid="31" ssid="10">The proportion of classes is the following: 11.9% are agreements, 6.8% are disagreements, 23.2% are backchannels, and 58.1% are others.</S>
    <S sid="32" ssid="11">Inter-labeler reliability estimated on 500 spurts with 2 labelers was considered quite acceptable, since the kappa coefficient was .63 (Cohen, 1960).</S>
  </SECTION>
  <SECTION title="3 Adjacency Pairs" number="3">
    <S sid="33" ssid="1">Adjacency pairs (AP) are considered fundamental units of conversational organization (Schegloff and Sacks, 1973).</S>
    <S sid="34" ssid="2">Their identification is central to our problem, since we need to know the identity of addressees in agreements and disagreements, and adjacency pairs provide a means of acquiring this knowledge.</S>
    <S sid="35" ssid="3">An adjacency pair is said to consist of two parts (later referred to as A and B) that are ordered, adjacent, and produced by different speakers.</S>
    <S sid="36" ssid="4">The first part makes the second one immediately relevant, as a question does with an answer, or an offer does with an acceptance.</S>
    <S sid="37" ssid="5">Extensive work in conversational analysis uses a less restrictive definition of adjacency pair that does not impose any actual adjacency requirement; this requirement is problematic in many respects (Levinson, 1983).</S>
    <S sid="38" ssid="6">Even when APs are not directly adjacent, the same constraints between pairs and mechanisms for selecting the next speaker remain in place (e.g. the case of embedded question and answer pairs).</S>
    <S sid="39" ssid="7">This relaxation on a strict adjacency requirement is particularly important in interactions of multiple speakers since other speakers have more opportunities to insert utterances between the two elements of the AP construction (e.g. interrupted, abandoned or ignored utterances; backchannels; APs with multiple second elements, e.g. a question followed by answers of multiple speakers).2 Information provided by adjacency pairs can be used to identify the target of an agreeing or disagreeing utterance.</S>
    <S sid="40" ssid="8">We define the problem of AP identification as follows: given the second element (B) of an adjacency pair, determine who is the speaker of the first element (A).</S>
    <S sid="41" ssid="9">A quite effective baseline algorithm is to select as speaker of utterance A the most recent speaker before the occurrence of utterance B.</S>
    <S sid="42" ssid="10">This strategy selects the right speaker in 79.8% of the cases in the 50 meetings that were annotated with adjacency pairs.</S>
    <S sid="43" ssid="11">The next subsection describes the machine learning framework used to significantly outperform this already quite effective baseline algorithm.</S>
    <S sid="44" ssid="12">We view the problem as an instance of statistical ranking, a general machine learning paradigm used for example in statistical parsing (Collins, 2000) and question answering (Ravichandran et al., 2003).3 The problem is to select, given a set of possible candidates (in our case, potential A speakers), the one candidate that maximizes a given conditional probability distribution.</S>
    <S sid="45" ssid="13">We use maximum entropy modeling (Berger et al., 1996) to directly model the conditional probability , where each in The only role of the denominator is to ensure that is a proper probability distribution.</S>
    <S sid="46" ssid="14">It is defined as: To find the most probable speaker of part A, we use the following decision rule: Note that we have also attempted to model the problem as a binary classification problem where is an observation associated with the corresponding speaker.is represented here by only one variable for notational ease, but it possibly represents several lexical, durational, structural, and acoustic observations.</S>
    <S sid="47" ssid="15">Given feature functions and model parameters , the probability of the maximum entropy model is defined as: each speaker is either classified as speaker A or not, but we abandoned that approach, since it gives much worse performance.</S>
    <S sid="48" ssid="16">This finding is consistent with previous work (Ravichandran et al., 2003) that compares maximum entropy classification and re-ranking on a question answering task.</S>
    <S sid="49" ssid="17">We will now describe the features used to train the maximum entropy model mentioned previously.</S>
    <S sid="50" ssid="18">To rank all speakers (aside from the B speaker) and to determine how likely each one is to be the A speaker of the adjacency pair involving speaker B, we use four categories of features: structural, durational, lexical, and dialog act (DA) information.</S>
    <S sid="51" ssid="19">For the remainder of this section, we will interchangeably use A to designate either the potential A speaker or the most recent utterance4 of that speaker, assuming the distinction is generally unambiguous.</S>
    <S sid="52" ssid="20">We use B to designate either the B speaker or the current spurt for which we need to identify a corresponding A part.</S>
    <S sid="53" ssid="21">The feature sets are listed in Table 1.</S>
    <S sid="54" ssid="22">Structural features encode some helpful information regarding ordering and overlap of spurts.</S>
    <S sid="55" ssid="23">Note that with only the first feature listed in the table, the maximum entropy ranker matches exactly the performance of the baseline algorithm (79.8% accuracy).</S>
    <S sid="56" ssid="24">Regarding lexical features, we used a countbased feature selection algorithm to remove many first-word and last-word features that occur infrequently and that are typically uninformative for the task at hand.</S>
    <S sid="57" ssid="25">Remaining features essentially contained function words, in particular sentence-initial indicators of questions (&#8220;where&#8221;, &#8220;when&#8221;, and so on).</S>
    <S sid="58" ssid="26">Note that all features in Table 1 are &#8220;backwardlooking&#8221;, in the sense that they result from an analysis of context preceding B.</S>
    <S sid="59" ssid="27">For many of them, we built equivalent &#8220;forward-looking&#8221; features that pertain to the closest utterance of the potential speaker A that follows part B.</S>
    <S sid="60" ssid="28">The motivation for extracting these features is that speaker A is generally expected to react if he or she is addressed, and thus, to take the floor soon after B is produced.</S>
  </SECTION>
  <SECTION title="3.4 Results" number="4">
    <S sid="61" ssid="1">We used the labeled adjacency pairs of 50 meetings and selected 80% of the pairs for training.</S>
    <S sid="62" ssid="2">To train the maximum entropy ranking model, we used the generalized iterative scaling algorithm (Darroch and Ratcliff, 1972) as implemented in YASMET.5 Table 2 summarizes the accuracy of our statistical ranker on the test data with different feature sets: the performance is 89.39% when using all feature sets, and reaches 90.2% after applying Gaussian smoothing and using incremental feature selection as described in (Berger et al., 1996) and implemented in the yasmetFS package.6 Note that restricting ourselves to only backward looking features decreases the performance significantly, as we can see in Table 2.</S>
    <S sid="63" ssid="3">We also wanted to determine if information about dialog acts (DA) helps the ranking task.</S>
    <S sid="64" ssid="4">If we hypothesize that only a limited set of paired DAs (e.g. offer-accept, question-answer, and apologydownplay) can be realized as adjacency pairs, then knowing the DA category of the B part and of all potential A parts should help in finding the most meaningful dialog act tag among all potential A parts; for example, the question-accept pair is admittedly more likely to correspond to an AP than e.g. backchannel-accept.</S>
    <S sid="65" ssid="5">We used the DA annotation that we also had available, and used the DA tag sequence of part A and B as a feature.7 When we add the DA feature set, the accuracy reaches 91.34%, which is only slightly better than our 90.20% accuracy, which indicates that lexical, durational, and structural features capture most of the informativeness provided by DAs.</S>
    <S sid="66" ssid="6">This improved accuracy with DA information should of course not be considered as the actual accuracy of our system, since DA information is difficult to acquire automatically (Stolcke et al., 2000).</S>
  </SECTION>
  <SECTION title="4 Agreements and Disagreements" number="5">
    <S sid="67" ssid="1">This section focusses on the use of contextual information, in particular the influence of previous agreements and disagreements and detected adjacency pairs, to improve the classification of agreements and disagreements.</S>
    <S sid="68" ssid="2">We first define the classification problem, then describe non-contextual features, provide some empirical evidence justifying our choice of contextual features, and finally evaluate the classifier.</S>
    <S sid="69" ssid="3">We need to first introduce some notational conventions and define the classification problem with the agreement/disagreement tagset.</S>
    <S sid="70" ssid="4">In our classification problem, each spurt among the spurts of a meeting must be assigned a tag AGREEDISAGREEBACKCHANNELOTHER.</S>
    <S sid="71" ssid="5">To specify the speaker of the spurt (e.g. speaker B), the notation will sometimes be augmented to incorporate speaker information, as with , and to designate the addressee of B (e.g. listener A), we will use the notation .</S>
    <S sid="72" ssid="6">For example, AGREE simply means that B agrees with A in the spurt of index .</S>
    <S sid="73" ssid="7">This notation makes it obvious that we do not necessarily assume that agreements and disagreements are reflexive 7The annotation of DA is particularly fine-grained with a choice of many optional tags that can be associated with each DA.</S>
    <S sid="74" ssid="8">To deal with this problem, we used various scaled-down versions of the original tagset. relations.</S>
    <S sid="75" ssid="9">We define: as the tag of the most recent spurt before that is produced by Y and addresses X.</S>
    <S sid="76" ssid="10">This definition will help our multi-party analyses of agreement and disagreement behaviors.</S>
    <S sid="77" ssid="11">Many of the local features described in this subsection are similar in spirit to the ones used in the previous work of (Hillard et al., 2003).</S>
    <S sid="78" ssid="12">We did not use acoustic features, since the main purpose of the current work is to explore the use of contextual information.</S>
    <S sid="79" ssid="13">Table 3 lists the features that were found most helpful at identifying agreements and disagreements.</S>
    <S sid="80" ssid="14">Regarding lexical features, we selected a list of lexical items we believed are instrumental in the expression of agreements and disagreements: agreement markers, e.g.</S>
    <S sid="81" ssid="15">&#8220;yes&#8221; and &#8220;right&#8221;, as listed in (Cohen, 2002), general cue phrases, e.g.</S>
    <S sid="82" ssid="16">&#8220;but&#8221; and &#8220;alright&#8221; (Hirschberg and Litman, 1994), and adjectives with positive or negative polarity (Hatzivassiloglou and McKeown, 1997).</S>
    <S sid="83" ssid="17">We incorporated a set of durational features that were described in the literature as good predictors of agreements: utterance length distinguishes agreement from disagreement, the latter tending to be longer since the speaker elaborates more on the reasons and circumstances of her disagreement than for an agreement (Cohen, 2002).</S>
    <S sid="84" ssid="18">Duration is also a good predictor of backchannels, since they tend to be quite short.</S>
    <S sid="85" ssid="19">Finally, a fair amount of silence and filled pauses is sometimes an indicator of disagreement, since it is a dispreferred response in most social contexts and can be associated with hesitation (Pomerantz, 1984).</S>
    <S sid="86" ssid="20">We first performed several empirical analyses in order to determine to what extent contextual information helps in discriminating between agreement and disagreement.</S>
    <S sid="87" ssid="21">By integrating the interpretation of the pragmatic function of an utterance into a wider context, we aim to detect cases of mismatch between a correct pragmatic interpretation and the surface form of the utterance, e.g. the case of weak or &#8220;empty&#8221; agreement, which has some properties of downright agreement (lexical items of positive polarity), but which is commonly considered to be a disagreement (Pomerantz, 1984).</S>
    <S sid="88" ssid="22">While the actual classification problem incorporates four classes, the BACKCHANNEL class is igTable 3.</S>
    <S sid="89" ssid="23">Local features for agreement and disagreement classification nored here to make the empirical study easier to interpret.</S>
    <S sid="90" ssid="24">We assume in that study that accurate AP labeling is available, but for the purpose of building and testing a classifier, we use only automatically extracted adjacency pair information.</S>
    <S sid="91" ssid="25">We tested the validity of four pragmatic assumptions: dency: a tag is influenced by , the most recent tag of the same speaker addressing the same listener; for example, it might be reasonable to assume that if speaker B disagrees with A, B is likely to disagree with A in his or her next speech addressing A. for which exists, then a tag is influenced by and ; an example of such an influence is a case where speaker first agrees with , then speaker disagrees with , from which one could possibly conclude that is actually in disagreement with .</S>
    <S sid="92" ssid="26">Table 4 presents the results of our empirical evaluation of the first three assumptions.</S>
    <S sid="93" ssid="27">For comparison, the distribution of classes is the following: 18.8% are agreements, 10.6% disagreements, and 70.6% other.</S>
    <S sid="94" ssid="28">The dependencies empirically evaluated in the two last columns are non-local; they create dependencies between spurts separated by an arbitrarily long time span.</S>
    <S sid="95" ssid="29">Such long range dependencies are often undesirable, since the influence of one spurt on the other is often weak or too difficult to capture with our model.</S>
    <S sid="96" ssid="30">Hence, we made a Markov assumption by limiting context to an arbitrarily chosen value .</S>
    <S sid="97" ssid="31">In this analysis subsection and for all classification results presented thereafter, we used a value of .</S>
    <S sid="98" ssid="32">The table yields some interesting results, showing quite significant variations in class distribution when it is conditioned on various types of contextual information.</S>
    <S sid="99" ssid="33">We can see for example, that the proportion of agreements and disagreements (respectively 18.8% and 10.6%) changes to 13.9% and 20.9% respectively when we restrict the counts to spurts that are preceded by a DISAGREE.</S>
    <S sid="100" ssid="34">Similarly, that distribution changes to 21.3% and 7.3% when the previous tag is an AGREE.</S>
    <S sid="101" ssid="35">The variable is even more noticeable between probabilities and Structural features: is the previous/next spurt of the same speaker? is the previous/next spurt involving the same B speaker?</S>
    <S sid="102" ssid="36">Durational features: duration of the spurt seconds of overlap with any other speaker seconds of silence during the spurt speech rate in the spurt Lexical features: number of words in the spurt number of content words in the spurt perplexity of the spurt with respect to four language models, one for each class first and last word of the spurt number of instances of adjectives with positive polarity (Hatzivassiloglou and McKeown, 1997) idem, with adjectives of negative polarity number of instances in the spurt of each cue phrase and agreement/disagreement token listed in (Hirschberg and Litman, 1994; Cohen, 2002) .</S>
    <S sid="103" ssid="37">In 26.1% of the cases where a given speaker B disagrees with A, he or she will continue to disagree in the next exchange involving the same speaker and the same listener.</S>
    <S sid="104" ssid="38">Similarly with the same probability distribution, a tendency to agree is confirmed in 25% of the cases.</S>
    <S sid="105" ssid="39">The results in the last column are quite different from the two preceding ones.</S>
    <S sid="106" ssid="40">While agreements in response to agreements ( AGREEAGREE ) are slightly less probable than agreements without conditioning on any previous tag ( AGREE ), the probability of an agreement produced in response to a disagreement is quite high (with 23.4%), even higher than the proportion of agreements in the entire data (18.8%).</S>
    <S sid="107" ssid="41">This last result would arguably be quite different with more quarrelsome meeting participants.</S>
    <S sid="108" ssid="42">Table 5 represents results concerning the fourth pragmatic assumption.</S>
    <S sid="109" ssid="43">While none of the results characterize any strong conditioning of by and , we can nevertheless notice some interesting phenomena.</S>
    <S sid="110" ssid="44">For example, there is a tendency for agreements to be transitive, i.e. if X agrees with A and B agrees with X within a limited segment of speech, then agreement between B and A is confirmed in 22.5% of the cases, while the probability of the agreement class is only 18.8%.</S>
    <S sid="111" ssid="45">The only slightly surprising result appears in the last column of the table, from which we cannot conclude that disagreement with a disagreement is equivalent to agreement.</S>
    <S sid="112" ssid="46">This might be explained by the fact that these sequences of agreement and disagreement do not necessarily concern the same propositional content.</S>
    <S sid="113" ssid="47">The probability distributions presented here are admittedly dependent on the meeting genre and particularly speaker personalities.</S>
    <S sid="114" ssid="48">Nonetheless, we believe this model can as well be used to capture salient interactional patterns specific to meetings with different social dynamics.</S>
    <S sid="115" ssid="49">We will next discuss our choice of a statistical model to classify sequence data that can deal with non-local label dependencies, such as the ones tested in our empirical study.</S>
    <S sid="116" ssid="50">Extensive research has targeted the problem of labeling sequence information to solve a variety of problems in natural language processing.</S>
    <S sid="117" ssid="51">Hidden Markov models (HMM) are widely used and considerably well understood models for sequence labeling.</S>
    <S sid="118" ssid="52">Their drawback is that, as most generative models, they are generally computed to maximize the joint likelihood of the training data.</S>
    <S sid="119" ssid="53">In order to define a probability distribution over the sequences of observation and labels, it is necessary to enumerate all possible sequences of observations.</S>
    <S sid="120" ssid="54">Such enumeration is generally prohibitive when the model incorporates many interacting features and long-range dependencies (the reader can find a discussion of the problem in (McCallum et al., 2000)).</S>
    <S sid="121" ssid="55">Conditional models address these concerns.</S>
    <S sid="122" ssid="56">Conditional Markov models (CMM) (Ratnaparkhi, 1996; Klein and Manning, 2002) have been successfully used in sequence labeling tasks incorporating rich feature sets.</S>
    <S sid="123" ssid="57">In a left-to-right CMM as shown in Figure 1(a), the probability of a sequence of L tags is decomposed as: is the vector of observations and each is the index of a spurt.</S>
    <S sid="124" ssid="58">The probability distribution associated with each state of the Markov chain only depends on the preceding tag and the local observation .</S>
    <S sid="125" ssid="59">However, in order to incorporate more than one label dependency and, in particular, to take into account the four pragmatic and , there is then a direct dependency between and , and the probability model becomes .</S>
    <S sid="126" ssid="60">This is a simplifying example; in practice, each label is dependent on a fixed number of other labels. contextual dependencies discussed in the previous subsection, we must augment the structure of our model to obtain a more general one.</S>
    <S sid="127" ssid="61">Such a model is shown in Figure 1(b), a Bayesian network model that is well-understood and that has precisely defined semantics.</S>
    <S sid="128" ssid="62">To this Bayesian network representation, we apply maximum entropy modeling to define a probability distribution at each node ( ) dependent on the observation variable and the five contextual tags used in the four pragmatic dependencies.8 For notational simplicity, the contextual tags representing these pragmatic dependencies are represented here as a vector ( ,, and so on).</S>
    <S sid="129" ssid="63">Given feature functions Again, the only role of the denominator is to ensure that sums to 1, and need not be computed when searching for the most probable tags.</S>
    <S sid="130" ssid="64">Note that in our case, the structure of the Bayesian network is known and need not be inferred, since AP identification is performed before the actual agreement and disagreement classification.</S>
    <S sid="131" ssid="65">Since tag sequences are known during training, the inference of a model for sequence labels is no more difficult than inferring a model in a non-sequential case.</S>
    <S sid="132" ssid="66">We compute the most probable sequence by performing a left-to-right decoding using a beam search.</S>
    <S sid="133" ssid="67">The algorithm is exactly the same as the one described in (Ratnaparkhi, 1996) to find the most probable part-of-speech sequence.</S>
    <S sid="134" ssid="68">We used a large beam of size =100, which is not computationally prohibitive, since the tagset contains only four elements.</S>
    <S sid="135" ssid="69">Note however that this algorithm can lead to search errors.</S>
    <S sid="136" ssid="70">An alternative would be to use a variant of the Viterbi algorithm, which was successfully used in (McCallum et al., 2000) to decode the most probable sequence in a CMM.</S>
  </SECTION>
  <SECTION title="4.6 Results" number="6">
    <S sid="137" ssid="1">We had 8135 spurts available for training and testing, and performed two sets of experiments to evaluate the performance of our system.</S>
    <S sid="138" ssid="2">The tools used to perform the training are the same as those described in section 3.4.</S>
    <S sid="139" ssid="3">In the first set of experiments, we reproduced the experimental setting of (Hillard et al., 2003), a three-way classification (BACKCHANNEL and OTHER are merged) using hand-labeled data of a single meeting as a test set and the remaining data as training material; for this experiment, we used the same training set as (Hillard et al., 2003).</S>
    <S sid="140" ssid="4">Performance is reported in Table 6.</S>
    <S sid="141" ssid="5">In the second set of experiments, we aimed at reducing the expected variance of our experimental results and performed N-fold cross-validation in a four-way classification task, at each step retaining the hand-labeled data of a meeting for testing and the rest of the data for training.</S>
    <S sid="142" ssid="6">Table 7 summarizes the performance of our classifier with the different feature sets in this classification task, distinguishing the case where the four label-dependency pragmatic features are available during decoding from the case where they are not.</S>
    <S sid="143" ssid="7">First, the analysis of our results shows that with our three local feature sets only, we obtain substantially better results than (Hillard et al., 2003).</S>
    <S sid="144" ssid="8">This might be due to some additional features the latter work didn&#8217;t exploit (e.g. structural features and adjective polarity), and to the fact that the learning algorithm used in our experiments might be more accurate than decision trees in the given task.</S>
    <S sid="145" ssid="9">Second, the table corroborates the findings of (Hillard et al., 2003) that lexical information make the most helpful local features.</S>
    <S sid="146" ssid="10">Finally, we observe that by incorporating label-dependency features representing pragmatic influences, we further improve the performance (about 1% in Table 7).</S>
    <S sid="147" ssid="11">This seems to indicate that modeling label dependencies in our classification problem is useful.</S>
  </SECTION>
  <SECTION title="5 Conclusion" number="7">
    <S sid="148" ssid="1">We have shown how identification of adjacency pairs can help in designing features representing pragmatic dependencies between agreement and disagreement labels.</S>
    <S sid="149" ssid="2">These features are shown to be informative and to help the classification task, yielding a substantial improvement (1.3% to reach a 86.9% accuracy in three-way classification).</S>
    <S sid="150" ssid="3">We also believe that the present work may be useful in other computational pragmatic research focusing on multi-party dialogs, such as dialog act (DA) classification.</S>
    <S sid="151" ssid="4">Most previous work in that area is limited to interaction between two speakers (e.g.</S>
    <S sid="152" ssid="5">Switchboard, (Stolcke et al., 2000)).</S>
    <S sid="153" ssid="6">When more than two speakers are involved, the question of who is the addressee of an utterance is crucial, since it generally determines what DAs are relevant after the addressee&#8217;s last utterance.</S>
    <S sid="154" ssid="7">So, knowledge about adjacency pairs is likely to help DA classification.</S>
    <S sid="155" ssid="8">In future work, we plan to extend our inference process to treat speaker ranking (i.e.</S>
    <S sid="156" ssid="9">AP identification) and agreement/disagreement classification as a single, joint inference problem.</S>
    <S sid="157" ssid="10">Contextual information about agreements and disagreements can also provide useful cues regarding who is the addressee of a given utterance.</S>
    <S sid="158" ssid="11">We also plan to incorporate acoustic features to increase the robustness of our procedure in the case where only speech recognition output is available.</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="8">
    <S sid="159" ssid="1">We are grateful to Mari Ostendorf and Dustin Hillard for providing us with their agreement and disagreement labeled data.</S>
    <S sid="160" ssid="2">This material is based on research supported by the National Science Foundation under Grant No.</S>
    <S sid="161" ssid="3">IIS-012196.</S>
    <S sid="162" ssid="4">Any opinions, findings and conclusions or recommendations expressed in this material are those of the authors and do not necessarily reflect the views of the National Science Foundation.</S>
  </SECTION>
</PAPER>
