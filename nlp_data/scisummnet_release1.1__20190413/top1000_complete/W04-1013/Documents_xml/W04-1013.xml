<PAPER>
  <S sid="0">ROUGE: A Package For Automatic Evaluation Of Summaries</S>
  <ABSTRACT>
    <S sid="1" ssid="1">for Recall-Oriented Understudy for Gisting Evaluation.</S>
    <S sid="2" ssid="2">It includes measures to automatically determine the quality of a summary by comparing it to other (ideal) summaries created by humans.</S>
    <S sid="3" ssid="3">The measures count the number of overlapping units such as n-gram, word sequences, and word pairs between the computer-generated summary to be evaluated and the ideal summaries created by humans.</S>
    <S sid="4" ssid="4">This paper introduces four different included in the summarization evaluation package and their evaluations.</S>
    <S sid="5" ssid="5">Three of them have been used in the Document Understanding Conference (DUC) 2004, a large-scale summarization evaluation sponsored by NIST.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">Traditionally evaluation of summarization involves human judgments of different quality metrics, for example, coherence, conciseness, grammaticality, readability, and content (Mani, 2001).</S>
    <S sid="7" ssid="2">However, even simple manual evaluation of summaries on a large scale over a few linguistic quality questions and content coverage as in the Document Understanding Conference (DUC) (Over and Yen, 2003) would require over 3,000 hours of human efforts.</S>
    <S sid="8" ssid="3">This is very expensive and difficult to conduct in a frequent basis.</S>
    <S sid="9" ssid="4">Therefore, how to evaluate summaries automatically has drawn a lot of attention in the summarization research community in recent years.</S>
    <S sid="10" ssid="5">For example, Saggion et al. (2002) proposed three content-based evaluation methods that measure similarity between summaries.</S>
    <S sid="11" ssid="6">These methods are: cosine similarity, unit overlap (i.e. unigram or bigram), and longest common subsequence.</S>
    <S sid="12" ssid="7">However, they did not show how the results of these automatic evaluation methods correlate to human judgments.</S>
    <S sid="13" ssid="8">Following the successful application of automatic evaluation methods, such as BLEU (Papineni et al., 2001), in machine translation evaluation, Lin and Hovy (2003) showed that methods similar to BLEU, i.e. n-gram co-occurrence statistics, could be applied to evaluate summaries.</S>
    <S sid="14" ssid="9">In this paper, we introduce a package, ROUGE, for automatic evaluation of summaries and its evaluations.</S>
    <S sid="15" ssid="10">ROUGE stands for Recall-Oriented Understudy for Gisting Evaluation.</S>
    <S sid="16" ssid="11">It includes several automatic evaluation methods that measure the similarity between summaries.</S>
    <S sid="17" ssid="12">We describe ROUGE-N in Section 2, ROUGE-L in Section 3, ROUGE-W in Section 4, and ROUGE-S in Section 5.</S>
    <S sid="18" ssid="13">Section 6 shows how these measures correlate with human judgments using DUC 2001, 2002, and 2003 data.</S>
    <S sid="19" ssid="14">Section 7 concludes this paper and discusses future directions.</S>
  </SECTION>
  <SECTION title="2 ROUGE-N: N-gram Co-Occurrence Statistics" number="2">
    <S sid="20" ssid="1">Formally, ROUGE-N is an n-gram recall between a candidate summary and a set of reference summaries.</S>
    <S sid="21" ssid="2">ROUGE-N is computed as follows: Where n stands for the length of the n-gram, gramn, and Countmatch(gramn) is the maximum number of n-grams co-occurring in a candidate summary and a set of reference summaries.</S>
    <S sid="22" ssid="3">It is clear that ROUGE-N is a recall-related measure because the denominator of the equation is the total sum of the number of n-grams occurring at the reference summary side.</S>
    <S sid="23" ssid="4">A closely related measure, BLEU, used in automatic evaluation of machine translation, is a precision-based measure.</S>
    <S sid="24" ssid="5">BLEU measures how well a candidate translation matches a set of reference translations by counting the percentage of n-grams in the candidate translation overlapping with the references.</S>
    <S sid="25" ssid="6">Please see Papineni et al. (2001) for details about BLEU.</S>
    <S sid="26" ssid="7">Note that the number of n-grams in the denominator of the ROUGE-N formula increases as we add more references.</S>
    <S sid="27" ssid="8">This is intuitive and reasonable because there might exist multiple good summaries.</S>
    <S sid="28" ssid="9">Every time we add a reference into the pool, we expand the space of alternative summaries.</S>
    <S sid="29" ssid="10">By controlling what types of references we add to the reference pool, we can design evaluations that focus on different aspects of summarization.</S>
    <S sid="30" ssid="11">Also note that the numerator sums over all reference summaries.</S>
    <S sid="31" ssid="12">This effectively gives more weight to matching n-grams occurring in multiple references.</S>
    <S sid="32" ssid="13">Therefore a candidate summary that contains words shared by more references is favored by the ROUGE-N measure.</S>
    <S sid="33" ssid="14">This is again very intuitive and reasonable because we normally prefer a candidate summary that is more similar to consensus among reference summaries.</S>
    <S sid="34" ssid="15">So far, we only demonstrated how to compute ROUGE-N using a single reference.</S>
    <S sid="35" ssid="16">When multiple references are used, we compute pairwise summarylevel ROUGE-N between a candidate summary s and every reference, ri, in the reference set.</S>
    <S sid="36" ssid="17">We then take the maximum of pairwise summary-level ROUGE-N scores as the final multiple reference ROUGE-N score.</S>
    <S sid="37" ssid="18">This can be written as follows: This procedure is also applied to computation of ROUGE-L (Section 3), ROUGE-W (Section 4), and ROUGE-S (Section 5).</S>
    <S sid="38" ssid="19">In the implementation, we use a Jackknifing procedure.</S>
    <S sid="39" ssid="20">Given M references, we compute the best score over M sets of M-1 references.</S>
    <S sid="40" ssid="21">The final ROUGE-N score is the average of the M ROUGE-N scores using different M-1 references.</S>
    <S sid="41" ssid="22">The Jackknifing procedure is adopted since we often need to compare system and human performance and the reference summaries are usually the only human summaries available.</S>
    <S sid="42" ssid="23">Using this procedure, we are able to estimate average human performance by averaging M ROUGE-N scores of one reference vs. the rest M-1 references.</S>
    <S sid="43" ssid="24">Although the Jackknifing procedure is not necessary when we just want to compute ROUGE scores using multiple references, it is applied in all ROUGE score computations in the ROUGE evaluation package.</S>
    <S sid="44" ssid="25">In the next section, we describe a ROUGE measure based on longest common subsequences between two summaries.</S>
  </SECTION>
  <SECTION title="3 ROUGE-L: Longest Common Subsequence" number="3">
    <S sid="45" ssid="1">A sequence Z = [z1, z2, ..., zn] is a subsequence of another sequence X = [x1, x2, ..., xm], if there exists a strict increasing sequence [i1, i2, ..., ik] of indices of X such that for all j = 1, 2, ..., k, we have xij = zj (Cormen et al., 1989).</S>
    <S sid="46" ssid="2">Given two sequences X and Y, the longest common subsequence (LCS) of X and Y is a common subsequence with maximum length.</S>
    <S sid="47" ssid="3">LCS has been used in identifying cognate candidates during construction of N-best translation lexicon from parallel text.</S>
    <S sid="48" ssid="4">Melamed (1995) used the ratio (LCSR) between the length of the LCS of two words and the length of the longer word of the two words to measure the cognateness between them.</S>
    <S sid="49" ssid="5">He used LCS as an approximate string matching algorithm.</S>
    <S sid="50" ssid="6">Saggion et al. (2002) used normalized pairwise LCS to compare similarity between two texts in automatic summarization evaluation.</S>
    <S sid="51" ssid="7">To apply LCS in summarization evaluation, we view a summary sentence as a sequence of words.</S>
    <S sid="52" ssid="8">The intuition is that the longer the LCS of two summary sentences is, the more similar the two summaries are.</S>
    <S sid="53" ssid="9">We propose using LCS-based Fmeasure to estimate the similarity between two summaries X of length m and Y of length n, assuming X is a reference summary sentence and Y is a candidate summary sentence, as follows: Where LCS(X,Y) is the length of a longest common subsequence of X and Y, and &#223; = Plcs/Rlcs when ?Flcs/?Rlcs=?Flcs/?Plcs.</S>
    <S sid="54" ssid="10">In DUC, &#223; is set to a very big number (?</S>
    <S sid="55" ssid="11">8 ).</S>
    <S sid="56" ssid="12">Therefore, only Rlcs is considered.</S>
    <S sid="57" ssid="13">We call the LCS-based F-measure, i.e.</S>
    <S sid="58" ssid="14">Equation 4, ROUGE-L. Notice that ROUGE-L is 1 when X = Y; while ROUGE-L is zero when LCS(X,Y) = 0, i.e. there is nothing in common between X and Y. Fmeasure or its equivalents has been shown to have met several theoretical criteria in measuring accuracy involving more than one factor (Van Rijsbergen, 1979).</S>
    <S sid="59" ssid="15">The composite factors are LCS-based recall and precision in this case.</S>
    <S sid="60" ssid="16">Melamed et al. (2003) used unigram F-measure to estimate machine translation quality and showed that unigram Fmeasure was as good as BLEU.</S>
    <S sid="61" ssid="17">One advantage of using LCS is that it does not require consecutive matches but in-sequence matches that reflect sentence level word order as n-grams.</S>
    <S sid="62" ssid="18">The other advantage is that it automatically includes longest in-sequence common n-grams, therefore no predefined n-gram length is necessary.</S>
    <S sid="63" ssid="19">ROUGE-L as defined in Equation 4 has the property that its value is less than or equal to the minimum of unigram F-measure of X and Y. Unigram recall reflects the proportion of words in X (reference summary sentence) that are also present in Y (candidate summary sentence); while unigram precision is the proportion of words in Y that are also in X. Unigram recall and precision count all cooccurring words regardless their orders; while ROUGE-L counts only in-sequence co-occurrences.</S>
    <S sid="64" ssid="20">By only awarding credit to in-sequence unigram matches, ROUGE-L also captures sentence level structure in a natural way.</S>
    <S sid="65" ssid="21">Consider the following example: S1. police killed the gunman S2. police kill the gunman S3. the gunman kill police We only consider ROUGE-2, i.e.</S>
    <S sid="66" ssid="22">N=2, for the purpose of explanation.</S>
    <S sid="67" ssid="23">Using S1 as the reference and S2 and S3 as the candidate summary sentences, S2 and S3 would have the same ROUGE-2 score, since they both have one bigram, i.e.</S>
    <S sid="68" ssid="24">&#8220;the gunman&#8221;.</S>
    <S sid="69" ssid="25">However, S2 and S3 have very different meanings.</S>
    <S sid="70" ssid="26">In the case of ROUGE-L, S2 has a score of 3/4 = 0.75 and S3 has a score of 2/4 = 0.5, with &#223; = 1.</S>
    <S sid="71" ssid="27">Therefore S2 is better than S3 according to ROUGE-L.</S>
    <S sid="72" ssid="28">This example also illustrated that ROUGE-L can work reliably at sentence level.</S>
    <S sid="73" ssid="29">However, LCS suffers one disadvantage that it only counts the main in-sequence words; therefore, other alternative LCSes and shorter sequences are not reflected in the final score.</S>
    <S sid="74" ssid="30">For example, given the following candidate sentence: S4. the gunman police killed Using S1 as its reference, LCS counts either &#8220;the gunman&#8221; or &#8220;police killed&#8221;, but not both; therefore, S4 has the same ROUGE-L score as S3.</S>
    <S sid="75" ssid="31">ROUGE-2 would prefer S4 than S3.</S>
    <S sid="76" ssid="32">Previous section described how to compute sentence-level LCS-based F-measure score.</S>
    <S sid="77" ssid="33">When applying to summary-level, we take the union LCS matches between a reference summary sentence, ri, and every candidate summary sentence, cj.</S>
    <S sid="78" ssid="34">Given a reference summary of u sentences containing a total of m words and a candidate summary of v sentences containing a total of n words, the summary-level LCS-based F-measure can be computed as follows: Again &#223; is set to a very big number (?</S>
    <S sid="79" ssid="35">8 ) in DUC, i.e. only Rlcs is considered.</S>
    <S sid="80" ssid="36">LCS&#8746; (ri, C) is the LCS score of the union longest common subsequence between reference sentence ri and candidate summary C. For example, if ri = w1 w2 w3 w4 w5, and C contains two sentences: c1 = w1 w2 w6 w7 w8 and c2 = w1 w3 w8 w9 w5, then the longest common subsequence of ri and c1 is &#8220;w1 w2&#8221; and the longest common subsequence of ri and c2 is &#8220;w1 w3 w5&#8221;.</S>
    <S sid="81" ssid="37">The union longest common subsequence of ri, c1, and c2 is &#8220;w1 w2 w3 w5&#8221; and LCS&#8746; (ri, C) = 4/5.</S>
    <S sid="82" ssid="38">The normalized pairwise LCS proposed by Radev et al. (page 51, 2002) between two summaries S1 and S2, LCS(S1 ,S2)MEAD , is written as follows: Assuming S1 has m words and S2 has n words, Equation 8 can be rewritten as Equation 9 due to symmetry: We then define MEAD LCS recall (Rlcs-MEAD) and MEAD LCS precision (Plcs-MEAD) as follows: We can rewrite Equation (9) in terms of Rlcs-MEAD and Plcs-MEAD with a constant parameter &#223; = 1 as follows: Equation 12 shows that normalized pairwise LCS as defined in Radev et al.</S>
    <S sid="83" ssid="39">(2002) and implemented in MEAD is also a F-measure with &#223; = 1.</S>
    <S sid="84" ssid="40">Sentencelevel normalized pairwise LCS is the same as ROUGE-L with &#223; = 1.</S>
    <S sid="85" ssid="41">Besides setting &#223; = 1, summary-level normalized pairwise LCS is different from ROUGE-L in how a sentence gets its LCS score from its references.</S>
    <S sid="86" ssid="42">Normalized pairwise LCS takes the best LCS score while ROUGE-L takes the union LCS score.</S>
  </SECTION>
  <SECTION title="4 ROUGE-W: Weighted Longest Common Subsequence" number="4">
    <S sid="87" ssid="1">LCS has many nice properties as we have described in the previous sections.</S>
    <S sid="88" ssid="2">Unfortunately, the basic LCS also has a problem that it does not differentiate LCSes of different spatial relations within their embedding sequences.</S>
    <S sid="89" ssid="3">For example, given a reference sequence X and two candidate sequences Y1 and Y2 as follows: Y1 and Y2 have the same ROUGE-L score.</S>
    <S sid="90" ssid="4">However, in this case, Y1 should be the better choice than Y2 because Y1 has consecutive matches.</S>
    <S sid="91" ssid="5">To improve the basic LCS method, we can simply remember the length of consecutive matches encountered so far to a regular two dimensional dynamic program table computing LCS.</S>
    <S sid="92" ssid="6">We call this weighted LCS (WLCS) and use k to indicate the length of the current consecutive matches ending at words xi and yj.</S>
    <S sid="93" ssid="7">Given two sentences X and Y, the WLCS score of X and Y can be computed using the following dynamic programming procedure: For (j = 1; j &lt;= n; j++) If xi = yj Then // the length of consecutive matches at // position i-1 and j -1 Where c is the dynamic programming table, c(i,j) stores the WLCS score ending at word xi of X and yj of Y, w is the table storing the length of consecutive matches ended at c table position i and j, and f is a function of consecutive matches at the table position, c(i,j).</S>
    <S sid="94" ssid="8">Notice that by providing different weighting function f, we can parameterize the WLCS algorithm to assign different credit to consecutive in-sequence matches.</S>
    <S sid="95" ssid="9">The weighting function f must have the property that f(x+y) &gt; f(x) + f(y) for any positive integers x and y.</S>
    <S sid="96" ssid="10">In other words, consecutive matches are awarded more scores than non-consecutive matches.</S>
    <S sid="97" ssid="11">For example, f(k)=ak &#8211; b when k &gt;= 0, and a, b &gt; 0.</S>
    <S sid="98" ssid="12">This function charges a gap penalty of &#8211;b for each non-consecutive n-gram sequences.</S>
    <S sid="99" ssid="13">Another possible function family is the polynomial family of the form ka where -a &gt; 1.</S>
    <S sid="100" ssid="14">However, in order to normalize the final ROUGE-W score, we also prefer to have a function that has a close form inverse function.</S>
    <S sid="101" ssid="15">For example, f(k)=k2 has a close form inverse function f -1(k)=k1/2.</S>
    <S sid="102" ssid="16">F-measure based on WLCS can be computed as follows, given two sequences X of length m and Y of length n: Where f -1 is the inverse function of f. In DUC, &#223; is set to a very big number (?</S>
    <S sid="103" ssid="17">8 ).</S>
    <S sid="104" ssid="18">Therefore, only Rwlcs is considered.</S>
    <S sid="105" ssid="19">We call the WLCS-based Fmeasure, i.e.</S>
    <S sid="106" ssid="20">Equation 15, ROUGE-W.</S>
    <S sid="107" ssid="21">Using Equation 15 and f(k)=k2 as the weighting function, the ROUGE-W scores for sequences Y1 and Y2 are 0.571 and 0.286 respectively.</S>
    <S sid="108" ssid="22">Therefore, Y1 would be ranked higher than Y2 using WLCS.</S>
    <S sid="109" ssid="23">We use the polynomial function of the form ka in the ROUGE evaluation package.</S>
    <S sid="110" ssid="24">In the next section, we introduce the skip-bigram co-occurrence statistics.</S>
  </SECTION>
  <SECTION title="5 ROUGE-S: Skip-Bigram Co-Occurrence Statistics" number="5">
    <S sid="111" ssid="1">Skip-bigram is any pair of words in their sentence order, allowing for arbitrary gaps.</S>
    <S sid="112" ssid="2">Skip-bigram cooccurrence statistics measure the overlap of skipbigrams between a candidate translation and a set of reference translations.</S>
    <S sid="113" ssid="3">Using the example given in Section 3.1: each sentence has C(4,2)1 = 6 skip-bigrams.</S>
    <S sid="114" ssid="4">For example, S1 has the following skip-bigrams: (&#8220;police killed&#8221;, &#8220;police the&#8221;, &#8220;police gunman&#8221;, &#8220;killed the&#8221;, &#8220;killed gunman&#8221;, &#8220;the gunman&#8221;) S2 has three skip-bigram matches with S1 (&#8220;police the&#8221;, &#8220;police gunman&#8221;, &#8220;the gunman&#8221;), S3 has one skip-bigram match with S1 (&#8220;the gunman&#8221;), and S4 has two skip-bigram matches with S1 (&#8220;police killed&#8221;, &#8220;the gunman&#8221;).</S>
    <S sid="115" ssid="5">Given translations X of length m and Y of length n, assuming X is a reference translation and Y is a candidate translation, we compute skip-bigram-based F-measure as follows: Where SKIP2(X,Y) is the number of skip-bigram matches between X and Y, &#223; controlling the relative importance of Pskip2 and Rskip2, and C is the combination function.</S>
    <S sid="116" ssid="6">We call the skip-bigram-based Fmeasure, i.e.</S>
    <S sid="117" ssid="7">Equation 18, ROUGE-S.</S>
    <S sid="118" ssid="8">Using Equation 18 with &#223; = 1 and S1 as the reference, S2&#8217;s ROUGE-S score is 0.5, S3 is 0.167, and S4 is 0.333.</S>
    <S sid="119" ssid="9">Therefore, S2 is better than S3 and S4, and S4 is better than S3.</S>
    <S sid="120" ssid="10">This result is more intuitive than using BLEU-2 and ROUGE-L. One advantage of skip-bigram vs. BLEU is that it does not require consecutive matches but is still sensitive to word order.</S>
    <S sid="121" ssid="11">Comparing skip-bigram with LCS, skip-bigram counts all in-order matching word pairs while LCS only counts one longest common subsequence.</S>
    <S sid="122" ssid="12">Applying skip-bigram without any constraint on the distance between the words, spurious matches such as &#8220;the the&#8221; or &#8220;of in&#8221; might be counted as valid matches.</S>
    <S sid="123" ssid="13">To reduce these spurious matches, we can limit the maximum skip distance, dskip, between two in-order words that is allowed to form a skip-bigram.</S>
    <S sid="124" ssid="14">For example, if we set dskip to 0 then ROUGE-S is equivalent to bigram overlap Fmeasure.</S>
    <S sid="125" ssid="15">If we set dskip to 4 then only word pairs of at most 4 words apart can form skip-bigrams.</S>
    <S sid="126" ssid="16">Adjusting Equations 16, 17, and 18 to use maximum skip distance limit is straightforward: we only count the skip-bigram matches, SKIP2(X,Y), within the maximum skip distance and replace denominators of Equations 16, C(m,2), and 17, C(n,2), with the actual numbers of within distance skip-bigrams from the reference and the candidate respectively.</S>
    <S sid="127" ssid="17">One potential problem for ROUGE-S is that it does not give any credit to a candidate sentence if the sentence does not have any word pair co-occurring with its references.</S>
    <S sid="128" ssid="18">For example, the following sentence has a ROUGE-S score of zero: S5. gunman the killed police S5 is the exact reverse of S1 and there is no skip bigram match between them.</S>
    <S sid="129" ssid="19">However, we would like to differentiate sentences similar to S5 from sentences that do not have single word cooccurrence with S1.</S>
    <S sid="130" ssid="20">To achieve this, we extend ROUGE-S with the addition of unigram as counting unit.</S>
    <S sid="131" ssid="21">The extended version is called ROUGE-SU.</S>
    <S sid="132" ssid="22">We can also obtain ROUGE-SU from ROUGE-S by adding a begin-of-sentence marker at the beginning of candidate and reference sentences.</S>
  </SECTION>
  <SECTION title="6 Evaluations of ROUGE" number="6">
    <S sid="133" ssid="1">To assess the effectiveness of ROUGE measures, we compute the correlation between ROUGE assigned summary scores and human assigned summary scores.</S>
    <S sid="134" ssid="2">The intuition is that a good evaluation measure should assign a good score to a good summary and a bad score to a bad summary.</S>
    <S sid="135" ssid="3">The ground truth is based on human assigned scores.</S>
    <S sid="136" ssid="4">Acquiring human judgments are usually very expensive; fortunately, we have DUC 2001, 2002, and 2003 evaluation data that include human judgments for the following: Besides these human judgments, we also have 3 sets of manual summaries for DUC 2001, 2 sets for DUC 2002, and 4 sets for DUC 2003.</S>
    <S sid="137" ssid="5">Human judges assigned content coverage scores to a candidate summary by examining the percentage of content overlap between a manual summary unit, i.e. elementary discourse unit or sentence, and the candidate summary using Summary Evaluation Environment3 (SEE) developed by the University of Southern California&#8217;s Information Sciences Institute (ISI).</S>
    <S sid="138" ssid="6">The overall candidate summary score is the average of the content coverage scores of all the units in the manual summary.</S>
    <S sid="139" ssid="7">Note that human judges used only one manual summary in all the evaluations although multiple alternative summaries were available.</S>
    <S sid="140" ssid="8">With the DUC data, we computed Pearson&#8217;s product moment correlation coefficients, Spearman&#8217;s rank order correlation coefficients, and Kendall&#8217;s correlation coefficients between systems&#8217; average ROUGE scores and their human assigned average coverage scores using single reference and multiple references.</S>
    <S sid="141" ssid="9">To investigate the effect of stemming and inclusion or exclusion of stopwords, we also ran experiments over original automatic and manual summaries (CASE set), stemmed4 version of the summaries (STEM set), and stopped version of the summaries (STOP set).</S>
    <S sid="142" ssid="10">For example, we computed ROUGE scores for the 12 systems participated in the DUC 2001 single document summarization evaluation using the CASE set with single reference and then calculated the three correlation scores for these 12 systems&#8217; ROUGE scores vs. human assigned average coverage scores.</S>
    <S sid="143" ssid="11">After that we repeated the process using multiple references and then using STEM and STOP sets.</S>
    <S sid="144" ssid="12">Therefore, 2 (multi or single) x 3 (CASE, STEM, or STOP) x 3 (Pearson, Spearman, or Kendall) = 18 data points were collected for each ROUGE measure and each DUC task.</S>
    <S sid="145" ssid="13">To assess the significance of the results, we applied bootstrap resampling technique (Davison and Hinkley, 1997) to estimate 95% confidence intervals for every correlation computation.</S>
    <S sid="146" ssid="14">17 ROUGE measures were tested for each run using ROUGE evaluation package v1.2.1: ROUGE-N with N = 1 to 9, ROUGE-L, ROUGE-W with weighting factor a = 1.2, ROUGE-S and ROUGE-SU with maximum skip distance d,1,,o = 1, 4, and 9.</S>
    <S sid="147" ssid="15">Due to limitation of space, we only report correlation analysis results based on Pearson&#8217;s correlation coefficient.</S>
    <S sid="148" ssid="16">Correlation analyses based on Spearman&#8217;s and Kendall&#8217;s correlation coefficients are tracking Pearson&#8217;s very closely and will be posted later at the ROUGE website5 for reference.</S>
    <S sid="149" ssid="17">The critical value6 for Pearson&#8217;s correlation is 0.632 at 95% confidence with 8 degrees of freedom.</S>
    <S sid="150" ssid="18">Table 1 shows the Pearson&#8217;s correlation coefficients of the 17 ROUGE measures vs. human judgments on DUC 2001 and 2002 100 words single document summarization data.</S>
    <S sid="151" ssid="19">The best values in each column are marked with dark (green) color and statistically equivalent values to the best values are marked with gray.</S>
    <S sid="152" ssid="20">We found that correlations were not affected by stemming or removal of stopwords in this data set, ROUGE-2 performed better among the ROUGE-N variants, ROUGE-L, ROUGE-W, and ROUGE-S were all performing well, and using multiple references improved performance though not much.</S>
    <S sid="153" ssid="21">All ROUGE measures achieved very good correlation with human judgments in the DUC 2002 data.</S>
    <S sid="154" ssid="22">This might due to the double sample size in DUC 2002 (295 vs. 149 in DUC 2001) for each system.</S>
    <S sid="155" ssid="23">Table 2 shows the correlation analysis results on the DUC 2003 single document very short summary data.</S>
    <S sid="156" ssid="24">We found that ROUGE-1, ROUGE-L, ROUGESU4 and 9, and ROUGE-W were very good measures in this category, ROUGE-N with N &gt; 1 performed significantly worse than all other measures, and exclusion of stopwords improved performance in general except for ROUGE-1.</S>
    <S sid="157" ssid="25">Due to the large number of samples (624) in this data set, using multiple references did not improve correlations.</S>
    <S sid="158" ssid="26">In Table 3 A1, A2, and A3, we show correlation analysis results on DUC 2001, 2002, and 2003 100 words multi-document summarization data.</S>
    <S sid="159" ssid="27">The results indicated that using multiple references improved correlation and exclusion of stopwords usually improved performance.</S>
    <S sid="160" ssid="28">ROUGE-1, 2, and 3 performed fine but were not consistent.</S>
    <S sid="161" ssid="29">ROUGE-1, ROUGE-S4, ROUGE-SU4, ROUGE-S9, and ROUGESU9 with stopword removal had correlation above 0.70.</S>
    <S sid="162" ssid="30">ROUGE-L and ROUGE-W did not work well in this set of data.</S>
    <S sid="163" ssid="31">Table 3 C, D1, D2, E1, E2, and F show the correlation analyses using multiple references on the rest of DUC data.</S>
    <S sid="164" ssid="32">These results again suggested that exclusion of stopwords achieved better performance especially in multi-document summaries of 50 words.</S>
    <S sid="165" ssid="33">Better correlations (&gt; 0.70) were observed on long summary tasks, i.e.</S>
    <S sid="166" ssid="34">200 and 400 words summaries.</S>
    <S sid="167" ssid="35">The relative performance of ROUGE measures followed the pattern of the 100 words multi-document summarization task.</S>
    <S sid="168" ssid="36">Comparing the results in Table 3 with Tables 1 and 2, we found that correlation values in the multidocument tasks rarely reached high 90% except in long summary tasks.</S>
    <S sid="169" ssid="37">One possible explanation of this outcome is that we did not have large amount of samples for the multi-document tasks.</S>
    <S sid="170" ssid="38">In the single document summarization tasks we had over 100 samples; while we only had about 30 samples in the multi-document tasks.</S>
    <S sid="171" ssid="39">The only tasks that had over 30 samples was from DUC 2002 and the correlations of ROUGE measures with human judgments on the 100 words summary task were much better and more stable than similar tasks in DUC 2001 and 2003.</S>
    <S sid="172" ssid="40">Statistically stable human judgments of system performance might not be obtained due to lack of samples and this in turn caused instability of correlation analyses.</S>
  </SECTION>
  <SECTION title="7 Conclusions" number="7">
    <S sid="173" ssid="1">In this paper, we introduced ROUGE, an automatic evaluation package for summarization, and conducted comprehensive evaluations of the automatic measures included in the ROUGE package using three years of DUC data.</S>
    <S sid="174" ssid="2">To check the significance of the results, we estimated confidence intervals of correlations using bootstrap resampling.</S>
    <S sid="175" ssid="3">We found that (1) ROUGE-2, ROUGE-L, ROUGE-W, and ROUGE-S worked well in single document summarization tasks, (2) ROUGE-1, ROUGE-L, ROUGE-W, ROUGE-SU4, and ROUGE-SU9 performed great in evaluating very short summaries (or headline-like summaries), (3) correlation of high 90% was hard to achieve for multi-document summarization tasks but ROUGE-1, ROUGE-2, ROUGE-S4, ROUGE-S9, ROUGE-SU4, and ROUGE-SU9 worked reasonably well when stopwords were excluded from matching, (4) exclusion of stopwords usually improved correlation, and (5) correlations to human judgments were increased by using multiple references.</S>
    <S sid="176" ssid="4">In summary, we showed that the ROUGE package could be used effectively in automatic evaluation of summaries.</S>
    <S sid="177" ssid="5">In a separate study (Lin and Och, 2004), ROUGE-L, W, and S were also shown to be very effective in automatic evaluation of machine translation.</S>
    <S sid="178" ssid="6">The stability and reliability of ROUGE at different sample sizes was reported by the author in (Lin, 2004).</S>
    <S sid="179" ssid="7">However, how to achieve high correlation with human judgments in multi-document summarization tasks as ROUGE already did in single document summarization tasks is still an open research topic.</S>
  </SECTION>
  <SECTION title="8 Acknowledgements" number="8">
    <S sid="180" ssid="1">The author would like to thank the anonymous reviewers for their constructive comments, Paul Over at NIST, U.S.A, and ROUGE users around the world for testing and providing useful feedback on earlier versions of the ROUGE evaluation package, and the DARPA TIDES project for supporting this research.</S>
  </SECTION>
</PAPER>
