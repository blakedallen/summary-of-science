<PAPER>
  <S sid="0">Bilingual Parsing With Factored Estimation: Using English To Parse Korean</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We describe how simple, commonly understood statistical models, such as statistical dependency parsers, probabilistic context-free grammars, and word-to-word translation models, can be effectively combined into a unified bilingual parser that jointly searches for the best English parse, Korean parse, and word alignment, where these hidden structures all constrain each other.</S>
    <S sid="2" ssid="2">The model used for parsing is completely factored into the two parsers and the TM, allowing separate parameter estimation.</S>
    <S sid="3" ssid="3">We evaluate our bilingual parser on the Penn Korean Treebank and against several baseline systems and show improvements parsing Korean with very limited labeled data.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="4" ssid="1">Consider the problem of parsing a language L for which annotated resources like treebanks are scarce.</S>
    <S sid="5" ssid="2">Suppose we have a small amount of text data with syntactic annotations and a fairly large corpus of parallel text, for which the other language (e.g., English) is not resourceimpoverished.</S>
    <S sid="6" ssid="3">How might we exploit English parsers to improve syntactic analysis tools for this language?</S>
    <S sid="7" ssid="4">One idea (Yarowsky and Ngai, 2001; Hwa et al., 2002) is to project English analysis onto L data, &#8220;through&#8221; word-aligned parallel text.</S>
    <S sid="8" ssid="5">To do this, we might use an English parser to analyze the English side of the parallel text and a word-alignment algorithm to induce word correspondences.</S>
    <S sid="9" ssid="6">By positing a coupling of English syntax with L syntax, we can induce structure on the L side of the parallel text that is in some sense isomorphic to the English parse.</S>
    <S sid="10" ssid="7">We might take the projection idea a step farther.</S>
    <S sid="11" ssid="8">A statistical English parser can tell us much more than the hypothesized best parse.</S>
    <S sid="12" ssid="9">It can be used to find every parse admitted by a grammar, and also scores of those parses.</S>
    <S sid="13" ssid="10">Similarly, translation models, which yield word alignments, can be used in principle to score competing alignments and offer alternatives to a single-best alignment.</S>
    <S sid="14" ssid="11">It might also be beneficial to include the predictions of an L parser, trained on any available annotated L data, however few.</S>
    <S sid="15" ssid="12">This paper describes how simple, commonly understood statistical models&#8212;statistical dependency parsers, probabilistic context-free grammars (PCFGs), and word translation models (TMs)&#8212;can be effectively combined into a unified framework that jointly searches for the best English parse, L parse, and word alignment, where these hidden structures are all constrained to be consistent.</S>
    <S sid="16" ssid="13">This inference task is carried out by a bilingual parser.</S>
    <S sid="17" ssid="14">At present, the model used for parsing is completely factored into the two parsers and the TM, allowing separate parameter estimation.</S>
    <S sid="18" ssid="15">First, we discuss bilingual parsing (&#167;2) and show how it can solve the problem of joint English-parse, L-parse, and word-alignment inference.</S>
    <S sid="19" ssid="16">In &#167;3 we describe parameter estimation for each of the factored models, including novel applications of log-linear models to English dependency parsing and Korean morphological analysis.</S>
    <S sid="20" ssid="17">&#167;4 presents Korean parsing results with various monolingual and bilingual algorithms, including our bilingual parsing algorithm.</S>
    <S sid="21" ssid="18">We close by reviewing prior work in areas related to this paper (&#167;5).</S>
  </SECTION>
  <SECTION title="2 Bilingual parsing" number="2">
    <S sid="22" ssid="1">The joint model used by our bilingual parser is an instance of a stochastic bilingual multitext grammar (2MTG), formally defined by Melamed (2003).</S>
    <S sid="23" ssid="2">The 2MTG formalism generates two strings such that each syntactic constituent&#8212;including individual words&#8212;in one side of the bitext corresponds either to a constituent in the other side or to &#8709;.</S>
    <S sid="24" ssid="3">Melamed defines bilexicalized MTG (L2MTG), which is a synchronous extension of bilexical grammars such as those described in Eisner and Satta (1999) and applies the latter&#8217;s algorithmic speedups to L2MTG-parsing.</S>
    <S sid="25" ssid="4">Our formalism is not a precise fit to either unlexicalized MTG or L2MTG since we posit lexical dependency structure only in one of the languages (English).</S>
    <S sid="26" ssid="5">The primary rationale for this is that we are dealing with only a small quantity of labeled data in language L and therefore do not expect to be able to accurately estimate its lexical affinities.</S>
    <S sid="27" ssid="6">Further, synchronous parsing is in practice computationally expensive, and eliminating lexicalization on one side reduces the run-time of the parser from O(n8) to O(n7).</S>
    <S sid="28" ssid="7">Our parsing algorithm is a simple transformation of Melamed&#8217;s R2D parser that eliminates head information in all Korean parser items.</S>
    <S sid="29" ssid="8">The model event space for our stochastic &#8220;halfbilexicalized&#8221; 2-MTG consists of rewrite rules of the following two forms, with English above and L below: where upper-case symbols are nonterminals and lowercase symbols are words (potentially &#8709;).</S>
    <S sid="30" ssid="9">One approach to assigning a probability to such a rule is to make an independence assumption, for example: There are two powerful reasons to model the bilingual grammar in this factored way.</S>
    <S sid="31" ssid="10">First, we know of no treealigned corpora from which bilingual rewrite probabilities could be estimated; this rules out the possibility of supervised training of the joint rules.</S>
    <S sid="32" ssid="11">Second, separating the probabilities allows separate estimation of the probabilities&#8212;resulting in two well-understood parameter estimation tasks which can be carried out independently.1 This factored modeling approach bears a strong resemblance to the factored monolingual parser of Klein and Manning (2002), which combined an English dependency model and an unlexicalized PCFG.</S>
    <S sid="33" ssid="12">The generative model used by Klein and Manning consisted of multiplying the two component models; the model was therefore deficient.</S>
    <S sid="34" ssid="13">We go a step farther, replacing the deficient generative model with a log-linear model.</S>
    <S sid="35" ssid="14">The underlying parsing algorithm remains the same, but the weights are no longer constrained to sum to one.</S>
    <S sid="36" ssid="15">(Hereafter, we assume weights are additive real values; a log-probability is an example of a weight.)</S>
    <S sid="37" ssid="16">The weights may be estimated using discriminative training (as we do for the English model, &#167;3.1) or as if they were log-probabilities, using smoothed maximum likelihood estimation (as we do for the Korean model, &#167;3.3).</S>
    <S sid="38" ssid="17">Because we use this model only for inference, it is not necessary to compute a partition function for the combined log-linear model.</S>
    <S sid="39" ssid="18">In addition to the two monolingual syntax models, we add a word-to-word translation model to the mix.</S>
    <S sid="40" ssid="19">In this paper we use a translation model to induce only a single best word matching, but in principle the translation model could be used to weight all possible wordword links, and the parser would solve the joint alignment/parsing problem.2 As a testbed for our experiments, the Penn Korean Treebank (KTB; Han et al., 2002) provides 5,083 Korean constituency trees along with English translations and their trees.</S>
    <S sid="41" ssid="20">The KTB also analyzes Korean words into their component morphemes and morpheme tags, which allowed us to train a morphological disambiguation model.</S>
    <S sid="42" ssid="21">To make the most of this small corpus, we performed all our evaluations using five-fold cross-validation.</S>
    <S sid="43" ssid="22">Due to the computational expense of bilingual parsing, we produced a sub-corpus of the KTB limiting English sentence length to 10 words, or 27% of the full data.</S>
    <S sid="44" ssid="23">We then randomized the order of sentences and divided the data into five equal test sets of 280 sentences each (&#8776;1,700 Korean words, &#8776;2,100 English words).</S>
    <S sid="45" ssid="24">Complementing each test set, the remaining data were used for training sets of increasing size to simulate various levels of data scarcity.</S>
  </SECTION>
  <SECTION title="3 Parameter estimation" number="3">
    <S sid="46" ssid="1">We now describe parameter estimation for the four component models that combine to make our full system (Table 1).</S>
    <S sid="47" ssid="2">Our English syntax model is based on weighted bilexical dependencies.</S>
    <S sid="48" ssid="3">The model predicts the generation of a child (POS tag, word) pair, dependent upon its parent (tag, word) and the tag of the parent&#8217;s most recent child on the same side (left or right).</S>
    <S sid="49" ssid="4">These events correspond quite closely to the parser described by Eisner&#8217;s (1996) model C, but instead of the rules receiving conditional probabilities, we use a log-linear model and allow arbitrary weights.</S>
    <S sid="50" ssid="5">The model does not predict POS tags; it assumes they are given, even in test.</S>
    <S sid="51" ssid="6">Note that the dynamic program used for inference of bilexical parses is indifferent to the origin of the rule weights; they could be log-probabilities or arbitrary numbers, as in our model.</S>
    <S sid="52" ssid="7">The parsing algorithm need not change to accommodate the new parameterization.</S>
    <S sid="53" ssid="8">In this model, the probability of a (sentence, tree) pair (E, T) is given by: where 0 are the model parameters and f is a vector function such that fi is equal to the number of times a feature (e.g., a production rule) fires in (E, T).</S>
    <S sid="54" ssid="9">Parameter estimation consists of selecting weights 0 to maximize the conditional probability of the correct parses given observed sentences:3 Another important advantage of moving to log-linear models is the simple handling of data sparseness.</S>
    <S sid="55" ssid="10">The feature templates used by our model are shown in Table 2.</S>
    <S sid="56" ssid="11">The first feature corresponds to the fully-described child-generation event; others are similar but less informative.</S>
    <S sid="57" ssid="12">These &#8220;overlapping&#8221; features offer a kind of backoff, so that each child-generation event&#8217;s weight receives a contribution from several granularities of description.</S>
    <S sid="58" ssid="13">Feature selection is done by simple thresholding: if a feature is observed 5 times or more in the training set, its weight is estimated; otherwise its weight is locked at Model Formalism Estimation Role English syntax (&#167;3.1) bilexical dependency discriminative estimation combines with Korean grammar syntax for bilingual parsing Korean morphology (&#167;3.2) two-sequence discriminative estimation best analysis used as input trigram model over a lattice to TM training and to parsing Korean syntax (&#167;3.3) PCFG smoothed MLE combines with English syntax for bilingual parsing Translation model (&#167;3.4) IBM models 1&#8211;4, unsupervised estimation best analysis used as both directions (approximation to EM) input to bilingual parsing dency parser.</S>
    <S sid="59" ssid="14">TX is a tag and WX is a word.</S>
    <S sid="60" ssid="15">P indicates the parent, A the previous child, and C the nextgenerated child.</S>
    <S sid="61" ssid="16">D is the direction (left or right).</S>
    <S sid="62" ssid="17">The last two templates correspond to stopping.</S>
    <S sid="63" ssid="18">0.</S>
    <S sid="64" ssid="19">If a feature is never seen in training data, we give it the same weight as the minimum-valued feature from the training set (Bmin).</S>
    <S sid="65" ssid="20">To handle out-of-vocabulary (OOV) words, we treat any word seen for the first time in the final 300 sentences of the training corpus as OOV.</S>
    <S sid="66" ssid="21">The model is smoothed using a Gaussian prior with unit variance on every weight.</S>
    <S sid="67" ssid="22">Because the left and right children of a parent are independent of each other, our model can be described as a weighted split head automaton grammar (Eisner and Satta, 1999).</S>
    <S sid="68" ssid="23">This allowed us to use Eisner and Satta&#8217;s O(n3) parsing algorithm to speed up training.4 This speedup could not, however, be applied to the bilingual parsing algorithm since a split parsing algorithm will preclude inference of certain configurations of word alignments that are allowed by a non-split parser (Melamed, 2003).</S>
    <S sid="69" ssid="24">We trained the parser on sentences of 15 words or fewer in the WSJ Treebank sections 01&#8211;21.5 99.49% dependency attachment accuracy was achieved on the training set, and 76.68% and 75.00% were achieved on sections 22 and 23, respectively.</S>
    <S sid="70" ssid="25">Performance on the English side of our KTB test set was 71.82% (averaged across 5 folds, u = 1.75).</S>
    <S sid="71" ssid="26">This type of discriminative training has been applied to log-linear variants of hidden Markov models (Lafferty et al., 2001) and to lexical-functional grammar (Johnson et al., 1999; Riezler et al., 2002).</S>
    <S sid="72" ssid="27">To our knowledge, it has not been explored for context-free models (including bilexical dependency models like ours).</S>
    <S sid="73" ssid="28">A review of discriminative approaches to parsing can be found in Chiang (2003).</S>
    <S sid="74" ssid="29">A Korean word typically consists of a head morpheme followed by a series of closed-class dependent morphemes such as case markers, copula, topicalizers, and conjunctions.</S>
    <S sid="75" ssid="30">Since most of the semantic content resides in the leading head morpheme, we eliminate for word alignment all trailing morphemes, which reduces the KTB&#8217;s vocabulary size from 10,052 to 3,104.</S>
    <S sid="76" ssid="31">Existing morphological processing tools for many languages are often unweighted finite-state transducers that encode the possible analyses for a surface form word.</S>
    <S sid="77" ssid="32">One such tool, klex, is available for Korean (Han, 2004).</S>
    <S sid="78" ssid="33">Unfortunately, while the unweighted FST describes the set of valid analyses, it gives no way to choose among them.</S>
    <S sid="79" ssid="34">We treat this as a noisy channel: Korean morpheme-tag pairs are generated in sequence by some process, then passed through a channel that turns them into Korean words (with loss of information).</S>
    <S sid="80" ssid="35">The channel is given by the FST, but without any weights.</S>
    <S sid="81" ssid="36">To select the best output, we model the source process.</S>
    <S sid="82" ssid="37">We model the sequence of morphemes and their tags as a log-linear trigram model.</S>
    <S sid="83" ssid="38">Overlapping trigram, bigram, and unigram features provide backoff information to deal with data sparseness (Table 3).</S>
    <S sid="84" ssid="39">For each training sentence, we used the FST-encoded morphological dictionary to construct a lattice of possible analyses.</S>
    <S sid="85" ssid="40">The lattice has a &#8220;sausage&#8221; form with all paths joining between each word.</S>
    <S sid="86" ssid="41">We train the feature weights to maximize the weight of the correct path relative to all paths in the lattice.</S>
    <S sid="87" ssid="42">In contrast, Lafferty et al. (2001) train to maximize the the probability of the tags given the words.</S>
    <S sid="88" ssid="43">Over training sentences, maximize: where Ti is the correct tagging for sentence i, Mi is the correct morpheme sequence.</S>
    <S sid="89" ssid="44">There are a few complications.</S>
    <S sid="90" ssid="45">First, the coverage of the FST is of course not universal; in fact, it cannot analyze 4.66% of word types (2.18% of tokens) in the KTB.</S>
    <S sid="91" ssid="46">We tag such words as atomic common nouns (the most common tag).</S>
    <S sid="92" ssid="47">Second, many of the analyses in the KTB are not admitted by the FST: 21.06% of correct analyses (by token) are not admitted by the FST; 6.85% do not have an FST analysis matching in the first tag and morpheme, 3.63% do not have an FST analysis matching the full tag sequence, and 1.22% do not have an analysis matching the first tag.</S>
    <S sid="93" ssid="48">These do not include the 2.18% of tokens with no analysis at all.</S>
    <S sid="94" ssid="49">When this happened in training, we added the correct analysis to the lattice.</S>
    <S sid="95" ssid="50">To perform inference on new data, we construct a lattice from the FST (adding in any analyses of the word seen in training) and use a dynamic program (essentially the Viterbi algorithm) to find the best path through the lattice.</S>
    <S sid="96" ssid="51">Unseen features are given the weight Bmin.</S>
    <S sid="97" ssid="52">Table 4 shows performance on ambiguous tokens in training and test data (averaged over five folds).</S>
    <S sid="98" ssid="53">Because we are using small training sets, parameter estimates for a lexicalized Korean probabilistic grammar are likely to be highly unreliable due to sparse data.</S>
    <S sid="99" ssid="54">Therefore we use an unlexicalized PCFG.</S>
    <S sid="100" ssid="55">Because the POS tags are given by the morphological analyzer, the PCFG need not predict words (i.e., head morphemes), only POS tags.</S>
    <S sid="101" ssid="56">Rule probabilities were estimated with MLE.</S>
    <S sid="102" ssid="57">Since only the sentence nonterminal S was smoothed (using add-0.1), the grammar could parse any sequence of tags but was relatively sparse, which kept bilingual run-time down.</S>
    <S sid="103" ssid="58">6 When we combine the PCFG with the other models to do joint bilingual parsing, we simply use the logs of the PCFG probabilities as if they were log-linear weights.</S>
    <S sid="104" ssid="59">A PCFG treated this way is a perfectly valid log-linear model; the exponentials of its weights just happen to satisfy certain sum-to-one constraints.</S>
    <S sid="105" ssid="60">In the spirit of joint optimization, we might have also combined the Korean morphology and syntax models into one inference task.</S>
    <S sid="106" ssid="61">We did not do this, largely out of concerns over computational expense (see the discussion of translation models in &#167;3.4).</S>
    <S sid="107" ssid="62">This parser, independent of the bilingual parser, is evaluated in &#167;4.</S>
    <S sid="108" ssid="63">In our bilingual parser, the English and Korean parses are mediated through word-to-word translational correspondence links.</S>
    <S sid="109" ssid="64">Unlike the syntax models, the translation models were trained without the benefit of labeled data.</S>
    <S sid="110" ssid="65">We used the GIZA++ implementation of the IBM statistical translation models (Brown et al., 1993; Och and Ney, 2003).</S>
    <S sid="111" ssid="66">To obtain reliable word translation estimates, we trained on a bilingual corpus in addition to the KTB training set.</S>
    <S sid="112" ssid="67">The Foreign Broadcast Information Service dataset contains about 99,000 sentences of Korean and 72,000 of English translation.</S>
    <S sid="113" ssid="68">For our training, we extracted a relatively small parallel corpus of about 19,000 high-confidence sentence pairs.</S>
    <S sid="114" ssid="69">As noted above, Korean&#8217;s productive agglutinative morphology leads to sparse estimates of word frequencies.</S>
    <S sid="115" ssid="70">We therefore trained our translation models after replacing each Korean word with its first morpheme stripped of its closed-class dependent morphemes, as described in &#167;3.2.</S>
    <S sid="116" ssid="71">The size of the translation tables made optimal bilingual parsing prohibitive by exploding the number of possible analyses.</S>
    <S sid="117" ssid="72">We therefore resorted to using GIZA++&#8217;s hypothesized alignments.</S>
    <S sid="118" ssid="73">Since the IBM models only hypothesize one-to-many alignments from target to source, we trained using each side of the bitext as source and target in turn.</S>
    <S sid="119" ssid="74">We could then produce two kinds of alignment graphs by taking either the intersection or the union of the links in the two GIZA++ alignment graphs.</S>
    <S sid="120" ssid="75">All words not in the resulting alignment graph are set to align to &#8709;.</S>
    <S sid="121" ssid="76">Our bilingual parser deals only in one-to-one alignments (mappings); the intersection graph yields a mapping.</S>
    <S sid="122" ssid="77">The union graph yields a set of links which may permit different one-to-one mappings.</S>
    <S sid="123" ssid="78">Using the union graph therefore allows for flexibility in the word alignments inferred by the bilingual parser, but this comes at computational expense (because more analyses are permitted).</S>
    <S sid="124" ssid="79">Even with over 20,000 sentence pairs of training data, the hypothesized alignments are relatively sparse.</S>
    <S sid="125" ssid="80">For the intersection alignments, an average of 23% of nonpunctuation Korean words and 17% of non-punctuation English words have a link to the other language.</S>
    <S sid="126" ssid="81">For the union alignments, this improves to 88% for Korean and 22% for English.</S>
    <S sid="127" ssid="82">A starker measure of alignment sparsity is the accuracy of English dependency links projected onto Korean.</S>
    <S sid="128" ssid="83">Following Hwa et al. (2002), we looked at dependency links in the true English parses from the KTB where both the dependent and the head were linked to words on the Korean side using the intersection alignment.</S>
    <S sid="129" ssid="84">Note that Hwa et al. used not only the true English trees, but also hand-produced alignments.</S>
    <S sid="130" ssid="85">If we hypothesize that, if English words i and j are in a parent-child relationship, then so are their linked Korean words, then we infer an incomplete dependency graph for the Korean sentences whose precision is around 49%&#8211;53% but whose recall is standard deviations) are shown over five-fold cross-validation.</S>
    <S sid="131" ssid="86">Over 65% of word tokens are ambiguous.</S>
    <S sid="132" ssid="87">The accuracy of the first tag in each word affects the PCFG and the accuracy of the first morpheme affects the translation model (under our aggressive morphological lemmatization). an abysmal 2.5%&#8211;3.6%.</S>
    <S sid="133" ssid="88">7</S>
  </SECTION>
  <SECTION title="4 Evaluation" number="4">
    <S sid="134" ssid="1">Having trained each part of the model, we bring them together in a unified dynamic program to perform inference on the bilingual text as described in &#167;2.</S>
    <S sid="135" ssid="2">In order to experiment easily with different algorithms, we implemented all the morphological disambiguation and parsing models in this paper in Dyna, a new language for weighted dynamic programming (Eisner et al., 2004).</S>
    <S sid="136" ssid="3">For parameter estimation, we used the complementary DynaMITE tool.</S>
    <S sid="137" ssid="4">Just as CKY parsing starts with words in its chart, the dynamic program chart for the bilingual parser is seeded with the links given in the hypothesized word alignment.</S>
    <S sid="138" ssid="5">All our current results are optimal under the model, but as we scale up to more complex data, we might introduce A&#8727; heuristics or, at the possible expense of optimality, a beam search or pruning techniques.</S>
    <S sid="139" ssid="6">Our agenda discipline is uniform-cost search, which guarantees that the first full parse discovered will be optimal&#8212;if none of the weights are positive.</S>
    <S sid="140" ssid="7">In our case we are maximizing sums of negative weights, as if working with log probabilities.8 When evaluating our parsing output against the test data from the KTB, we do not claim credit for the single outermost bracketing or for unary productions.</S>
    <S sid="141" ssid="8">Since unary productions do not translate well from language to language (Hwa et al., 2002), we collapse them to their lower nodes.</S>
    <S sid="142" ssid="9">We compare our bilingual parser to several baseline systems.</S>
    <S sid="143" ssid="10">The first is the Korean PCFG trained on the small KTB training sets, as described in &#167;3.3.</S>
    <S sid="144" ssid="11">We also consider Wu&#8217;s (1997) stochastic inversion transduction grammar (SITG) as well as strictly left- and right-branching trees.</S>
    <S sid="145" ssid="12">We report the results of five-fold cross-validation with the mean and standard deviation (in parentheses).</S>
    <S sid="146" ssid="13">Since it is unlexicalized, the PCFG parses sequences of tags as output by the morphological analysis model.</S>
    <S sid="147" ssid="14">By contrast, we can build translation tables for the SITG directly from surface words&#8212;and thus not use any labeled training data at all&#8212;or from the sequence of head morphemes.</S>
    <S sid="148" ssid="15">Experiments showed, however, that the SITG using words consistently outperformed the SITG using morphemes.</S>
    <S sid="149" ssid="16">We also implemented Wu&#8217;s treetransformation algorithm to turn full binary-branching SITG output into flatter trees.</S>
    <S sid="150" ssid="17">Finally, we can provide extra information to the SITG by giving it a set of English bracketings that it must respect when constructing the joint tree.</S>
    <S sid="151" ssid="18">To get an upper bound on performance, we used the true parses from the English side of the KTB.</S>
    <S sid="152" ssid="19">Only the PCFG, of course, can be evaluated on labeled bracketing (Table 6).</S>
    <S sid="153" ssid="20">Although labeled precision and recall on test data generally increase with more training data, the slightly lower performance at the highest training set size may indicate overtraining of this simple model.</S>
    <S sid="154" ssid="21">Unlabeled precision and recall show continued improvement with more Korean training data.</S>
    <S sid="155" ssid="22">Even with help from the true English trees, the unsupervised SITGs underperform PCFGs trained on as few as 32 sentences, with the exception of unlabeled recall in one experiment.</S>
    <S sid="156" ssid="23">It seems that even some small amount of knowledge of the language helps parsing.</S>
    <S sid="157" ssid="24">Crossing brackets for the flattened SITG parses are understandably lower.</S>
    <S sid="158" ssid="25">The output of our bilingual parser contains three types of constituents: English-only (aligned to 0), Korean-only (aligned to 0), and bilingual.</S>
    <S sid="159" ssid="26">The Korean parse induced by the Korean-only and bilingual constituents is filtered so constituents with intermediate labels (generated by the binarization process) are eliminated.</S>
    <S sid="160" ssid="27">A second filter we consider is to keep only the (remaining) bilingual constituents corresponding to an English head word&#8217;s maximal span.</S>
    <S sid="161" ssid="28">This filter will eliminate constituents whose English correspondent is a head word with some (but not all) of its dependents.</S>
    <S sid="162" ssid="29">Such partial English constituents are by-products of the parsing and do not correspond to the modeled syntax.</S>
    <S sid="163" ssid="30">With good word alignments, the English parser can help disambiguate Korean phrase boundaries and overcome erroneous morphological analyses (Table 5).</S>
    <S sid="164" ssid="31">Results without and with the second filter are shown in Table 7.</S>
    <S sid="165" ssid="32">Because larger training datasets lead to larger PCFGs (with more rules), the grammar constant increases.</S>
    <S sid="166" ssid="33">Our bilingual parser implementation is on the cusp of practicality (in terms of memory requirements); when the grammar constant increased, we were unable to parse longer sentences.</S>
    <S sid="167" ssid="34">Therefore the results given for bilingual parsing are on reduced test sets, where a length filter was applied: sentences with |E |+ |F |&gt; T were removed, for varying values of T. While neither bilingual parser consistently beats the PCFG on its own, they offer slight, complementary improvements on small training datasets of 32 and 64 sentences (Table 7).</S>
    <S sid="168" ssid="35">The bilingual parser without the English head span filter gives a small recall improvement on average at similar precision.</S>
    <S sid="169" ssid="36">Neither of these differences is significant when measured with a paired-sample t-test.</S>
    <S sid="170" ssid="37">In contrast, the parser with the English head span filter sacrifices significantly on recall for a small but significant gain in precision at the 0.01 level.</S>
    <S sid="171" ssid="38">Crossing brackets at all levels are significantly lower with the English head span filter.</S>
    <S sid="172" ssid="39">We can describe this effect as a filtering of Korean constituents by the English model and word alignments.</S>
    <S sid="173" ssid="40">Constituents that are not strongly evident on the English side are simply removed.</S>
    <S sid="174" ssid="41">On small training datasets, this effect is positive: although good constituents are lost so that recall is poor compared to the PCFG, precision and crossing brackets are improved.</S>
    <S sid="175" ssid="42">As one would expect, as the amount of training data increases, the advantage of using a bilingual parser vanishes&#8212;there is no benefit from falling back on the English parser and word alignments to help disambiguate the Korean structure.</S>
    <S sid="176" ssid="43">Since we have not pruned our search space in these experiments, we can be confident that all variations are due to the influence of the translation and English syntax models.</S>
    <S sid="177" ssid="44">Our approach has this principal advantage: the various morphology, parsing, and alignment components can be improved or replaced easily without needing to retrain the other modules.</S>
    <S sid="178" ssid="45">The low dependency projection results (&#167;3.4), in conjunction with our modest overall gains, indicate that the alignment/translation model should receive the most attention.</S>
    <S sid="179" ssid="46">In all the bilingual experiments, there is a small positive correlation (0.3), for sentences at each length, between the proportion of Korean words aligned to English and measures ofparsing accuracy.</S>
    <S sid="180" ssid="47">Improved English parsers&#8212;such as Collins&#8217; models&#8212;have also been implemented in Dyna, the dynamic programming framework used here (Eisner et al., 2004).</S>
  </SECTION>
  <SECTION title="5 Prior work" number="5">
    <S sid="181" ssid="1">Combining separately trained systems and then searching for an (ideally) optimal solution is standard practice in statistical continuous speech recognition (Jelinek, 1998) and statistical machine translation (Brown et al., 1990).</S>
    <S sid="182" ssid="2">Composition is even more of a staple in finitestate frameworks (Knight and Graehl, 1998).</S>
    <S sid="183" ssid="3">Finally, factored models involving parses have been used to guide search.</S>
    <S sid="184" ssid="4">Charniak et al. (2003) combine separately trained parse production probabilities with translation probabilities to prune a parse forest hypothesized by the translation model.</S>
    <S sid="185" ssid="5">As discussed in &#167;2, Klein and Manning (2002) guide their parser&#8217;s search using a combination of separate unlexicalized PCFG and lexical dependency models.</S>
    <S sid="186" ssid="6">The extent to which assumptions about similarity of syntax across languages are empirically valid has received attention in a few pilot studies.</S>
    <S sid="187" ssid="7">Fox (2002) has considered English and French, and Hwa et al. (2002) investigate Chinese and English.</S>
    <S sid="188" ssid="8">Xia et al. (2000) compare the rule templates of lexicalized tree adjoining grammars extracted from treebanks in English, Chinese, and Korean.</S>
    <S sid="189" ssid="9">In the context of machine translation, Dorr (1994) investigated divergences between two languages&#8217; structures.</S>
    <S sid="190" ssid="10">Some proposals have sidestepped the empirical issue entirely.</S>
    <S sid="191" ssid="11">Wu (1997) and Alshawi et al. (2000) used unsupervised learning on parallel text to induce syntactic analysis that was useful for their respective applications in phrasal translation extraction and speech translation, though not necessarily similar to what a human annotator would select.</S>
    <S sid="192" ssid="12">Note a point of divergence of the SITG from our bilingual parsing system: SITG only allows words, but not higher structures, to match null in the other language and thus requires that the trees in parallel sentences be isomorphic.</S>
    <S sid="193" ssid="13">Yamada and Knight (2001) introduced tree-to-string alignment on Japanese data, and Gildea (2003) performed tree-to-tree alignment on the Korean Treebank, allowing for non-isomorphic structures; he applied this to word-to-word alignment.</S>
    <S sid="194" ssid="14">Finally, inspired by these intuitive notions of translational correspondence, Cherry and Lin (2003) include dependency features in a word alignment model to improve non-syntactic baseline systems.</S>
    <S sid="195" ssid="15">In more formal work, Melamed (2003) proposes multitext grammars and algorithms for parsing them.</S>
    <S sid="196" ssid="16">Shieber and Schabes (1990) describe a synchronous tree adjoining grammar.</S>
    <S sid="197" ssid="17">While both of these formalisms require bilingual grammar rules, Eisner (2003) describes an algorithm for learning tree substitution grammars from unaligned trees.</S>
    <S sid="198" ssid="18">Working on the Penn Korean Treebank, Sarkar and Han (2002) made a single training/test split and used 91% of the sentences to train a morphological disambiguator and lexicalized tree adjoining grammar (LTAG) based parsing system.</S>
    <S sid="199" ssid="19">For a monolingual approach to training a parser with scarce resources, see (Steedman et al., 2003), who apply co-training and corrected co-training to bootstrapping an English parser starting with 1000 parsed training senvalidation.</S>
    <S sid="200" ssid="20">The SITG system is evaluated on test data, but is trained without labeled data; the SITG with English trees uses true treebank English parses to constrain the search and thus represents an upper bound.</S>
    <S sid="201" ssid="21">The table shows means and standard deviations for five-fold cross-validation.</S>
    <S sid="202" ssid="22">The best test results in each column are in bold. validation.</S>
    <S sid="203" ssid="23">Bold-faced numbers in the bilingual parsers indicate significant improvements on the PCFG baseline using the paired-sample t-test at the 0.01 level. tences.</S>
    <S sid="204" ssid="24">Although this technique has interesting properties, our combined optimization should be more stable since it does not involve iterative example selection.</S>
  </SECTION>
  <SECTION title="6 Conclusion" number="6">
    <S sid="205" ssid="1">We have presented a novel technique for merging simple, separately trained models for Korean parsing, English dependency parsing, and word translation, and optimizing the joint result using dynamic programming.</S>
    <S sid="206" ssid="2">We showed small but significant improvements for Korean parsers trained on small amounts of labeled data.</S>
  </SECTION>
  <SECTION title="7 Acknowledgements" number="7">
    <S sid="207" ssid="1">We would like to thank Elliott Dr&#180;abek, Jason Eisner, Eric Goldlust, Philip Resnik, Charles Schafer, David Yarowsky, and the reviewers for their comments and assistance and Chung-hye Han, Na-Rae Han, and Anoop Sarkar for their help with the Korean resources.</S>
    <S sid="208" ssid="2">This work was supported under a National Science Foundation Graduate Research Fellowship and a Fannie and John Hertz Foundation Fellowship.</S>
  </SECTION>
</PAPER>
