<PAPER>
  <S sid="0">Reading Level Assessment Using Support Vector Machines And Statistical Language Models</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Reading proficiency is a fundamental component of language competency.</S>
    <S sid="2" ssid="2">However, finding topical texts at an appropriate reading level for foreign and second language learners is a challenge for teachers.</S>
    <S sid="3" ssid="3">This task can be addressed with natural language processing technology to assess reading level.</S>
    <S sid="4" ssid="4">Existing measures of reading level are not well suited to this task, but previous work and our own pilot experiments have shown the benefit of using statistical language models.</S>
    <S sid="5" ssid="5">In this paper, we also use support vector machines to combine features from traditional reading level measures, statistical language models, and other language processing tools to produce a better method of assessing reading level.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">The U.S. educational system is faced with the challenging task of educating growing numbers of students for whom English is a second language (U.S. Dept. of Education, 2003).</S>
    <S sid="7" ssid="2">In the 2001-2002 school year, Washington state had 72,215 students (7.2% of all students) in state programs for Limited English Proficient (LEP) students (Bylsma et al., 2003).</S>
    <S sid="8" ssid="3">In the same year, one quarter of all public school students in California and one in seven students in Texas were classified as LEP (U.S. Dept. of Education, 2004).</S>
    <S sid="9" ssid="4">Reading is a critical part of language and educational development, but finding appropriate reading material for LEP students is often difficult.</S>
    <S sid="10" ssid="5">To meet the needs of their students, bilingual education instructors seek out &#8220;high interest level&#8221; texts at low reading levels, e.g. texts at a first or second grade reading level that support the fifth grade science curriculum.</S>
    <S sid="11" ssid="6">Teachers need to find material at a variety of levels, since students need different texts to read independently and with help from the teacher.</S>
    <S sid="12" ssid="7">Finding reading materials that fulfill these requirements is difficult and time-consuming, and teachers are often forced to rewrite texts themselves to suit the varied needs of their students.</S>
    <S sid="13" ssid="8">Natural language processing (NLP) technology is an ideal resource for automating the task of selecting appropriate reading material for bilingual students.</S>
    <S sid="14" ssid="9">Information retrieval systems successfully find topical materials and even answer complex queries in text databases and on the World Wide Web.</S>
    <S sid="15" ssid="10">However, an effective automated way to assess the reading level of the retrieved text is still needed.</S>
    <S sid="16" ssid="11">In this work, we develop a method of reading level assessment that uses support vector machines (SVMs) to combine features from statistical language models (LMs), parse trees, and other traditional features used in reading level assessment.</S>
    <S sid="17" ssid="12">The results presented here on reading level assessment are part of a larger project to develop teacher-support tools for bilingual education instructors.</S>
    <S sid="18" ssid="13">The larger project will include a text simplification system, adapting paraphrasing and summarization techniques.</S>
    <S sid="19" ssid="14">Coupled with an information retrieval system, these tools will be used to select and simplify reading material in multiple languages for use by language learners.</S>
    <S sid="20" ssid="15">In addition to students in bilingual education, these tools will also be useful for those with reading-related learning disabilities and adult literacy students.</S>
    <S sid="21" ssid="16">In both of these situations, as in the bilingual education case, the student&#8217;s reading level does not match his/her intellectual level and interests.</S>
    <S sid="22" ssid="17">The remainder of the paper is organized as follows.</S>
    <S sid="23" ssid="18">Section 2 describes related work on reading level assessment.</S>
    <S sid="24" ssid="19">Section 3 describes the corpora used in our work.</S>
    <S sid="25" ssid="20">In Section 4 we present our approach to the task, and Section 5 contains experimental results.</S>
    <S sid="26" ssid="21">Section 6 provides a summary and description of future work.</S>
  </SECTION>
  <SECTION title="2 Reading Level Assessment" number="2">
    <S sid="27" ssid="1">This section highlights examples and features of some commonly used measures of reading level and discusses current research on the topic of reading level assessment using NLP techniques.</S>
    <S sid="28" ssid="2">Many traditional methods of reading level assessment focus on simple approximations of syntactic complexity such as sentence length.</S>
    <S sid="29" ssid="3">The widelyused Flesch-Kincaid Grade Level index is based on the average number of syllables per word and the average sentence length in a passage of text (Kincaid et al., 1975) (as cited in (Collins-Thompson and Callan, 2004)).</S>
    <S sid="30" ssid="4">Similarly, the Gunning Fog index is based on the average number of words per sentence and the percentage of words with three or more syllables (Gunning, 1952).</S>
    <S sid="31" ssid="5">These methods are quick and easy to calculate but have drawbacks: sentence length is not an accurate measure of syntactic complexity, and syllable count does not necessarily indicate the difficulty of a word.</S>
    <S sid="32" ssid="6">Additionally, a student may be familiar with a few complex words (e.g. dinosaur names) but unable to understand complex syntactic constructions.</S>
    <S sid="33" ssid="7">Other measures of readability focus on semantics, which is usually approximated by word frequency with respect to a reference list or corpus.</S>
    <S sid="34" ssid="8">The Dale-Chall formula uses a combination of average sentence length and percentage of words not on a list of 3000 &#8220;easy&#8221; words (Chall and Dale, 1995).</S>
    <S sid="35" ssid="9">The Lexile framework combines measures of semantics, represented by word frequency counts, and syntax, represented by sentence length (Stenner, 1996).</S>
    <S sid="36" ssid="10">These measures are inadequate for our task; in many cases, teachers want materials with more difficult, topic-specific words but simple structure.</S>
    <S sid="37" ssid="11">Measures of reading level based on word lists do not capture this information.</S>
    <S sid="38" ssid="12">In addition to the traditional reading level metrics, researchers at Carnegie Mellon University have applied probabilistic language modeling techniques to this task.</S>
    <S sid="39" ssid="13">Si and Callan (2001) conducted preliminary work to classify science web pages using unigram models.</S>
    <S sid="40" ssid="14">More recently, Collins-Thompson and Callan manually collected a corpus of web pages ranked by grade level and observed that vocabulary words are not distributed evenly across grade levels.</S>
    <S sid="41" ssid="15">They developed a &#8220;smoothed unigram&#8221; classifier to better capture the variance in word usage across grade levels (Collins-Thompson and Callan, 2004).</S>
    <S sid="42" ssid="16">On web text, their classifier outperformed several other measures of semantic difficulty: the fraction of unknown words in the text, the number of distinct types per 100 token passage, the mean log frequency of the text relative to a large corpus, and the Flesch-Kincaid measure.</S>
    <S sid="43" ssid="17">The traditional measures performed better on some commercial corpora, but these corpora were calibrated using similar measures, so this is not a fair comparison.</S>
    <S sid="44" ssid="18">More importantly, the smoothed unigram measure worked better on the web corpus, especially on short passages.</S>
    <S sid="45" ssid="19">The smoothed unigram classifier is also more generalizable, since it can be trained on any collection of data.</S>
    <S sid="46" ssid="20">Traditional measures such as Dale-Chall and Lexile are based on static word lists.</S>
    <S sid="47" ssid="21">Although the smoothed unigram classifier outperforms other vocabulary-based semantic measures, it does not capture syntactic information.</S>
    <S sid="48" ssid="22">We believe that higher order n-gram models or class n-gram models can achieve better performance by capturing both semantic and syntactic information.</S>
    <S sid="49" ssid="23">This is particularly important for the tasks we are interested in, when the vocabulary (i.e. topic) and grade level are not necessarily well-matched.</S>
  </SECTION>
  <SECTION title="3 Corpora" number="3">
    <S sid="50" ssid="1">Our work is currently focused on a corpus obtained from Weekly Reader, an educational newspaper with versions targeted at different grade levels (Weekly Reader, 2004).</S>
    <S sid="51" ssid="2">These data include a variety of labeled non-fiction topics, including science, history, and current events.</S>
    <S sid="52" ssid="3">Our corpus consists of articles from the second, third, fourth, and fifth grade editions of the newspaper.</S>
    <S sid="53" ssid="4">We design classifiers to distinguish each of these four categories.</S>
    <S sid="54" ssid="5">This corpus contains just under 2400 articles, distributed as shown in Table 1.</S>
    <S sid="55" ssid="6">Additionally, we have two corpora consisting of articles for adults and corresponding simplified versions for children or other language learners.</S>
    <S sid="56" ssid="7">Barzilay and Elhadad (2003) have allowed us to use their corpus from Encyclopedia Britannica, which contains articles from the full version of the encyclopedia and corresponding articles from Britannica Elementary, a new version targeted at children.</S>
    <S sid="57" ssid="8">The Western/Pacific Literacy Network&#8217;s (2004) web site has an archive of CNN news stories and abridged versions which we have also received permission to use.</S>
    <S sid="58" ssid="9">Although these corpora do not provide an explicit grade-level ranking for each article, broad categories are distinguished.</S>
    <S sid="59" ssid="10">We use these data as a supplement to the Weekly Reader corpus for learning models to distinguish broad reading level classes than can serve to provide features for more detailed classification.</S>
    <S sid="60" ssid="11">Table 2 shows the size of the supplemental corpora.</S>
  </SECTION>
  <SECTION title="4 Approach" number="4">
    <S sid="61" ssid="1">Existing reading level measures are inadequate due to their reliance on vocabulary lists and/or a superficial representation of syntax.</S>
    <S sid="62" ssid="2">Our approach uses ngram language models as a low-cost automatic approximation of both syntactic and semantic analysis.</S>
    <S sid="63" ssid="3">Statistical language models (LMs) are used successfully in this way in other areas of NLP such as speech recognition and machine translation.</S>
    <S sid="64" ssid="4">We also use a standard statistical parser (Charniak, 2000) to provide syntactic analysis.</S>
    <S sid="65" ssid="5">In practice, a teacher is likely to be looking for texts at a particular level rather than classifying a group of texts into a variety of categories.</S>
    <S sid="66" ssid="6">Thus we construct one classifier per category which decides whether a document belongs in that category or not, rather than constructing a classifier which ranks documents into different categories relative to each other.</S>
    <S sid="67" ssid="7">Statistical LMs predict the probability that a particular word sequence will occur.</S>
    <S sid="68" ssid="8">The most commonly used statistical language model is the n-gram model, which assumes that the word sequence is an (n&#8722;1)th order Markov process.</S>
    <S sid="69" ssid="9">For example, for the common trigram model where n = 3, the probability of sequence w is: The parameters of the model are estimated using a maximum likelihood estimate based on the observed frequency in a training corpus and smoothed using modified Kneser-Ney smoothing (Chen and Goodman, 1999).</S>
    <S sid="70" ssid="10">We used the SRI Language Modeling Toolkit (Stolcke, 2002) for language model training.</S>
    <S sid="71" ssid="11">Our first set of classifiers consists of one n-gram language model per class c in the set of possible classes C. For each text document t, we can calculate the likelihood ratio between the probability given by the model for class c and the probabilities given by the other models for the other classes: where we assume uniform prior probabilities P(c).</S>
    <S sid="72" ssid="12">The resulting value can be compared to an empirically chosen threshold to determine if the document is in class c or not.</S>
    <S sid="73" ssid="13">For each class c, a language model is estimated from a corpus of training texts.</S>
    <S sid="74" ssid="14">In addition to using the likelihood ratio for classification, we can use scores from language models as features in another classifier (e.g. an SVM).</S>
    <S sid="75" ssid="15">For example, perplexity (PP) is an information-theoretic measure often used to assess language models: where H(t|c) is the entropy relative to class c of a length m word sequence t = w1, ..., wm, defined as Low perplexity indicates a better match between the test data and the model, corresponding to a higher probability P(t|c).</S>
    <S sid="76" ssid="16">Perplexity scores are used as features in the SVM model described in Section 4.3.</S>
    <S sid="77" ssid="17">The likelihood ratio described above could also be used as a feature, but we achieved better results using perplexity.</S>
    <S sid="78" ssid="18">Feature selection is a common part of classifier design for many classification problems; however, there are mixed results in the literature on feature selection for text classification tasks.</S>
    <S sid="79" ssid="19">In CollinsThompson and Callan&#8217;s work (2004) on readability assessment, LM smoothing techniques are more effective than other forms of explicit feature selection.</S>
    <S sid="80" ssid="20">However, feature selection proves to be important in other text classification work, e.g.</S>
    <S sid="81" ssid="21">Lee and Myaeng&#8217;s (2002) genre and subject detection work and Boulis and Ostendorf&#8217;s (2005) work on feature selection for topic classification.</S>
    <S sid="82" ssid="22">For our LM classifiers, we followed Boulis and Ostendorf&#8217;s (2005) approach for feature selection and ranked words by their ability to discriminate between classes.</S>
    <S sid="83" ssid="23">Given P(c|w), the probability of class c given word w, estimated empirically from the training set, we sorted words based on their information gain (IG).</S>
    <S sid="84" ssid="24">Information gain measures the difference in entropy when w is and is not included as a feature.</S>
    <S sid="85" ssid="25">The most discriminative words are selected as features by plotting the sorted IG values and keeping only those words below the &#8220;knee&#8221; in the curve, as determined by manual inspection of the graph.</S>
    <S sid="86" ssid="26">In an early experiment, we replaced all remaining words with a single &#8220;unknown&#8221; tag.</S>
    <S sid="87" ssid="27">This did not result in an effective classifier, so in later experiments the remaining words were replaced with a small set of general tags.</S>
    <S sid="88" ssid="28">Motivated by our goal of representing syntax, we used part-of-speech (POS) tags as labeled by a maximum entropy tagger (Ratnaparkhi, 1996).</S>
    <S sid="89" ssid="29">These tags allow the model to represent patterns in the text at a higher level than that of individual words, using sequences of POS tags to capture rough syntactic information.</S>
    <S sid="90" ssid="30">The resulting vocabulary consisted of 276 words and 56 POS tags.</S>
    <S sid="91" ssid="31">Support vector machines (SVMs) are a machine learning technique used in a variety of text classification problems.</S>
    <S sid="92" ssid="32">SVMs are based on the principle of structural risk minimization.</S>
    <S sid="93" ssid="33">Viewing the data as points in a high-dimensional feature space, the goal is to fit a hyperplane between the positive and negative examples so as to maximize the distance between the data points and the plane.</S>
    <S sid="94" ssid="34">SVMs were introduced by Vapnik (1995) and were popularized in the area of text classification by Joachims (1998a).</S>
    <S sid="95" ssid="35">The unit of classification in this work is a single article.</S>
    <S sid="96" ssid="36">Our SVM classifiers for reading level use the following features: The OOV scores are relative to the most common 100, 200 and 500 words in the lowest grade level (grade 2) 2.</S>
    <S sid="97" ssid="37">For each article, we calculated the percentage of a) all word instances (tokens) and b) all unique words (types) not on these lists, resulting in three token OOV rate features and three type OOV rate features per article.</S>
    <S sid="98" ssid="38">The parse features are generated using the Charniak parser (Charniak, 2000) trained on the standard Wall Street Journal Treebank corpus.</S>
    <S sid="99" ssid="39">We chose to use this standard data set as we do not have any domain-specific treebank data for training a parser.</S>
    <S sid="100" ssid="40">Although clearly there is a difference between news text for adults and news articles intended for children, inspection of some of the resulting parses showed good accuracy.</S>
    <S sid="101" ssid="41">Ideally, the language model scores would be for LMs from domain-specific training data (i.e. more Weekly Reader data.)</S>
    <S sid="102" ssid="42">However, our corpus is limited and preliminary experiments in which the training data was split for LM and SVM training were unsuccessful due to the small size of the resulting data sets.</S>
    <S sid="103" ssid="43">Thus we made use of the Britannica and CNN articles to train models of three n-gram orders on &#8220;child&#8221; text and &#8220;adult&#8221; text.</S>
    <S sid="104" ssid="44">This resulted in 12 LM perplexity features per article based on trigram, bigram and unigram LMs trained on Britannica (adult), Britannica Elementary, CNN (adult) and CNN abridged text.</S>
    <S sid="105" ssid="45">For training SVMs, we used the SVMUght toolkit developed by Joachims (1998b).</S>
    <S sid="106" ssid="46">Using development data, we selected the radial basis function kernel and tuned parameters using cross validation and grid search as described in (Hsu et al., 2003).</S>
  </SECTION>
  <SECTION title="5 Experiments" number="5">
    <S sid="107" ssid="1">We divide the Weekly Reader corpus described in Section 3 into separate training, development, and test sets.</S>
    <S sid="108" ssid="2">The number of articles in each set is shown in Table 3.</S>
    <S sid="109" ssid="3">The development data is used as a test set for comparing classifiers, tuning parameters, etc, and the results presented in this section are based on the test set.</S>
    <S sid="110" ssid="4">We present results in three different formats.</S>
    <S sid="111" ssid="5">For analyzing our binary classifiers, we use Detection Error Tradeoff (DET) curves and precision/recall corpus as divided into training, development and test sets.</S>
    <S sid="112" ssid="6">The dev and test sets are the same size and each consist of approximately 5% of the data for each grade level. measures.</S>
    <S sid="113" ssid="7">For comparison to other methods, e.g.</S>
    <S sid="114" ssid="8">Flesch-Kincaid and Lexile, which are not binary classifiers, we consider the percentage of articles which are misclassified by more than one grade level.</S>
    <S sid="115" ssid="9">Detection Error Tradeoff curves show the tradeoff between misses and false alarms for different threshold values for the classifiers.</S>
    <S sid="116" ssid="10">&#8220;Misses&#8221; are positive examples of a class that are misclassified as negative examples; &#8220;false alarms&#8221; are negative examples misclassified as positive.</S>
    <S sid="117" ssid="11">DET curves have been used in other detection tasks in language processing, e.g.</S>
    <S sid="118" ssid="12">Martin et al. (1997).</S>
    <S sid="119" ssid="13">We use these curves to visualize the tradeoff between the two types of errors, and select the minimum cost operating point in order to get a threshold for precision and recall calculations.</S>
    <S sid="120" ssid="14">The minimum cost operating point depends on the relative costs of misses and false alarms; it is conceivable that one type of error might be more serious than the other.</S>
    <S sid="121" ssid="15">After consultation with teachers (future users of our system), we concluded that there are pros and cons to each side, so for the purpose of this analysis we weighted the two types of errors equally.</S>
    <S sid="122" ssid="16">In this work, the minimum cost operating point is selected by averaging the percentages of misses and false alarms at each point and choosing the point with the lowest average.</S>
    <S sid="123" ssid="17">Unless otherwise noted, errors reported are associated with these actual operating points, which may not lie on the convex hull of the DET curve.</S>
    <S sid="124" ssid="18">Precision and recall are often used to assess information retrieval systems, and our task is similar.</S>
    <S sid="125" ssid="19">Precision indicates the percentage of the retrieved documents that are relevant, in this case the percentage of detected documents that match the target grade level.</S>
    <S sid="126" ssid="20">Recall indicates the percentage of the total number of relevant documents in the data set that are retrieved, in this case the percentage of the total number of documents from the target level that are detected. these classifiers, indicated by large dots in the plot, are in the range of 33-43%, with only one over 40%.</S>
    <S sid="127" ssid="21">The curves for bigram and unigram models have similar shapes, but the trigram models outperform the lower-order models.</S>
    <S sid="128" ssid="22">Error rates for the bigram models range from 37-45% and the unigram models have error rates in the 39-49% range, with all but one over 40%.</S>
    <S sid="129" ssid="23">Although our training corpus is small the feature selection described in Section 4.2 allows us to use these higher-order trigram models.</S>
    <S sid="130" ssid="24">By combining language model scores with other features in an SVM framework, we achieve our best results.</S>
    <S sid="131" ssid="25">Figures 2 and 3 show DET curves for this set of classifiers on the development set and test set, respectively.</S>
    <S sid="132" ssid="26">The grade 2 and 5 classifiers have the best performance, probably because grade 3 and 4 must be distinguished from other classes at both higher and lower levels.</S>
    <S sid="133" ssid="27">Using threshold values selected based on minimum cost on the development set, indicated by large dots on the plot, we calculated precision and recall on the test set.</S>
    <S sid="134" ssid="28">Results are presented in Table 4.</S>
    <S sid="135" ssid="29">The grade 3 classifier has high recall but relatively low precision; the grade 4 classifier does better on precision and reasonably well on recall.</S>
    <S sid="136" ssid="30">Since the minimum cost operating points do not correspond to the equal error rate (i.e. equal percentage of misses and false alarms) there is variation in the precision-recall tradeoff for the different grade level classifiers.</S>
    <S sid="137" ssid="31">For example, for class 3, the operating point corresponds to a high probability of false alarms and a lower probability of misses, which results in low precision and high recall.</S>
    <S sid="138" ssid="32">For operating points chosen on the convex hull of the DET curves, the equal error rate ranges from 12-25% for the different grade levels.</S>
    <S sid="139" ssid="33">We investigated the contribution of individual features to the overall performance of the SVM classifier and found that no features stood out as most important, and performance was degraded when any particular features were removed.</S>
    <S sid="140" ssid="34">We also compared error rates for the best performing SVM classifier with two traditional reading level measures, Flesch-Kincaid and Lexile.</S>
    <S sid="141" ssid="35">The Flesch-Kincaid Grade Level index is a commonly used measure of reading level based on the average number of syllables per word and average sentence length.</S>
    <S sid="142" ssid="36">The Flesch-Kincaid score for a document is intended to directly correspond with its grade level.</S>
    <S sid="143" ssid="37">We chose the Lexile measure as an example of a reading level classifier based on word lists.3 Lexile scores do not correlate directly to numeric grade levels, however a mapping of ranges of Lexile scores to their corresponding grade levels is available on the Lexile web site (Lexile, 2005).</S>
    <S sid="144" ssid="38">For each of these three classifiers, Table 5 shows the percentage of articles which are misclassified by more than one grade level.</S>
    <S sid="145" ssid="39">Flesch-Kincaid performs poorly, as expected since its only features are sen3Other classifiers such as Dale-Chall do not have automatic software available. tence length and average syllable count.</S>
    <S sid="146" ssid="40">Although this index is commonly used, perhaps due to its simplicity, it is not accurate enough for the intended application.</S>
    <S sid="147" ssid="41">Our SVM classifier also outperforms the Lexile metric.</S>
    <S sid="148" ssid="42">Lexile is a more general measure while our classifier is trained on this particular domain, so the better performance of our model is not entirely surprising.</S>
    <S sid="149" ssid="43">Importantly, however, our classifier is easily tuned to any corpus of interest.</S>
    <S sid="150" ssid="44">To test our classifier on data outside the Weekly Reader corpus, we downloaded 10 randomly selected newspaper articles from the &#8220;Kidspost&#8221; edition of The Washington Post (2005).</S>
    <S sid="151" ssid="45">&#8220;Kidspost&#8221; is intended for grades 3-8.</S>
    <S sid="152" ssid="46">We found that our SVM classifier, trained on the Weekly Reader corpus, classified four of these articles as grade 4 and seven articles as grade 5 (with one overlap with grade 4).</S>
    <S sid="153" ssid="47">These results indicate that our classifier can generalize to other data sets.</S>
    <S sid="154" ssid="48">Since there was no training data corresponding to higher reading levels, the best performance we can expect for adult-level newspaper articles is for our classifiers to mark them as the highest grade level, which is indeed what happened for 10 randomly chosen articles from standard edition of The Washington Post.</S>
  </SECTION>
  <SECTION title="6 Conclusions and Future Work" number="6">
    <S sid="155" ssid="1">Statistical LMs were used to classify texts based on reading level, with trigram models being noticeably more accurate than bigrams and unigrams.</S>
    <S sid="156" ssid="2">Combining information from statistical LMs with other features using support vector machines provided the best results.</S>
    <S sid="157" ssid="3">Future work includes testing additional classifier features, e.g. parser likelihood scores and features obtained using a syntax-based language model such as Chelba and Jelinek (2000) or Roark (2001).</S>
    <S sid="158" ssid="4">Further experiments are planned on the generalizability of our classifier to text from other sources (e.g. newspaper articles, web pages); to accomplish this we will add higher level text as negative training data.</S>
    <S sid="159" ssid="5">We also plan to test these techniques on languages other than English, and incorporate them with an information retrieval system to create a tool that may be used by teachers to help select reading material for their students.</S>
  </SECTION>
</PAPER>
