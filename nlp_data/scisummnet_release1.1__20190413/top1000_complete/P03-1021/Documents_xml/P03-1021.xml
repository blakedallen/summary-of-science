<PAPER>
  <S sid="0">Minimum Error Rate Training In Statistical Machine Translation</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Often, the training procedure for statistical machine translation models is based on maximum likelihood or related criteria.</S>
    <S sid="2" ssid="2">A general problem of this approach is that there is only a loose relation to the final translation quality on unseen text.</S>
    <S sid="3" ssid="3">In this paper, we analyze various training criteria which directly optimize translation quality.</S>
    <S sid="4" ssid="4">These training criteria make use of recently proposed automatic evaluation metrics.</S>
    <S sid="5" ssid="5">We describe a new algorithm for efficient training an unsmoothed error count.</S>
    <S sid="6" ssid="6">We show that significantly better results can often be obtained if the final evaluation criterion is taken directly into account as part of the training procedure.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="7" ssid="1">Many tasks in natural language processing have evaluation criteria that go beyond simply counting the number of wrong decisions the system makes.</S>
    <S sid="8" ssid="2">Some often used criteria are, for example, F-Measure for parsing, mean average precision for ranked retrieval, and BLEU or multi-reference word error rate for statistical machine translation.</S>
    <S sid="9" ssid="3">The use of statistical techniques in natural language processing often starts out with the simplifying (often implicit) assumption that the final scoring is based on simply counting the number of wrong decisions, for instance, the number of sentences incorrectly translated in machine translation.</S>
    <S sid="10" ssid="4">Hence, there is a mismatch between the basic assumptions of the used statistical approach and the final evaluation criterion used to measure success in a task.</S>
    <S sid="11" ssid="5">Ideally, we would like to train our model parameters such that the end-to-end performance in some application is optimal.</S>
    <S sid="12" ssid="6">In this paper, we investigate methods to efficiently optimize model parameters with respect to machine translation quality as measured by automatic evaluation criteria such as word error rate and BLEU.</S>
  </SECTION>
  <SECTION title="2 Statistical Machine Translation with Log-linear Models" number="2">
    <S sid="13" ssid="1">Let us assume that we are given a source (&#8216;French&#8217;) sentence , which is to be translated into a target (&#8216;English&#8217;) sentence Among all possible target sentences, we will choose the sentence with the highest probability:1 The argmax operation denotes the search problem, i.e. the generation of the output sentence in the target language.</S>
    <S sid="14" ssid="2">The decision in Eq.</S>
    <S sid="15" ssid="3">1 minimizes the number of decision errors.</S>
    <S sid="16" ssid="4">Hence, under a so-called zero-one loss function this decision rule is optimal (Duda and Hart, 1973).</S>
    <S sid="17" ssid="5">Note that using a different loss function&#8212;for example, one induced by the BLEU metric&#8212;a different decision rule would be optimal.</S>
    <S sid="18" ssid="6">'The notational convention will be as follows.</S>
    <S sid="19" ssid="7">We use the symbol Pr to denote general probability distributions with (nearly) no specific assumptions.</S>
    <S sid="20" ssid="8">In contrast, for model-based probability distributions, we use the generic symbol .</S>
    <S sid="21" ssid="9">As the true probability distribution Pr is unknown, we have to develop a model that approximates Pr .</S>
    <S sid="22" ssid="10">We directly model the posterior probability Pr by using a log-linear model.</S>
    <S sid="23" ssid="11">In this framework, we have a set of feature functions .</S>
    <S sid="24" ssid="12">For each feature function, there exists a model parameter .</S>
    <S sid="25" ssid="13">The direct translation probability is given by: In this framework, the modeling problem amounts to developing suitable feature functions that capture the relevant properties of the translation task.</S>
    <S sid="26" ssid="14">The training problem amounts to obtaining suitable parameter values .</S>
    <S sid="27" ssid="15">A standard criterion for loglinear models is the MMI (maximum mutual information) criterion, which can be derived from the maximum entropy principle: The optimization problem under this criterion has very nice properties: there is one unique global optimum, and there are algorithms (e.g. gradient descent) that are guaranteed to converge to the global optimum.</S>
    <S sid="28" ssid="16">Yet, the ultimate goal is to obtain good translation quality on unseen test data.</S>
    <S sid="29" ssid="17">Experience shows that good results can be obtained using this approach, yet there is no reason to assume that an optimization of the model parameters using Eq.</S>
    <S sid="30" ssid="18">4 yields parameters that are optimal with respect to translation quality.</S>
    <S sid="31" ssid="19">The goal of this paper is to investigate alternative training criteria and corresponding training algorithms, which are directly related to translation quality measured with automatic evaluation criteria.</S>
    <S sid="32" ssid="20">In Section 3, we review various automatic evaluation criteria used in statistical machine translation.</S>
    <S sid="33" ssid="21">In Section 4, we present two different training criteria which try to directly optimize an error count.</S>
    <S sid="34" ssid="22">In Section 5, we sketch a new training algorithm which efficiently optimizes an unsmoothed error count.</S>
    <S sid="35" ssid="23">In Section 6, we describe the used feature functions and our approach to compute the candidate translations that are the basis for our training procedure.</S>
    <S sid="36" ssid="24">In Section 7, we evaluate the different training criteria in the context of several MT experiments.</S>
  </SECTION>
  <SECTION title="3 Automatic Assessment of Translation Quality" number="3">
    <S sid="37" ssid="1">In recent years, various methods have been proposed to automatically evaluate machine translation quality by comparing hypothesis translations with reference translations.</S>
    <S sid="38" ssid="2">Examples of such methods are word error rate, position-independent word error rate (Tillmann et al., 1997), generation string accuracy (Bangalore et al., 2000), multi-reference word error rate (Nie&#223;en et al., 2000), BLEU score (Papineni et al., 2001), NIST score (Doddington, 2002).</S>
    <S sid="39" ssid="3">All these criteria try to approximate human assessment and often achieve an astonishing degree of correlation to human subjective evaluation of fluency and adequacy (Papineni et al., 2001; Doddington, 2002).</S>
    <S sid="40" ssid="4">In this paper, we use the following methods: multi-reference word error rate (mWER): When this method is used, the hypothesis translation is compared to various reference translations by computing the edit distance (minimum number of substitutions, insertions, deletions) between the hypothesis and the closest of the given reference translations. multi-reference position independent error rate (mPER): This criterion ignores the word order by treating a sentence as a bag-of-words and computing the minimum number of substitutions, insertions, deletions needed to transform the hypothesis into the closest of the given reference translations.</S>
    <S sid="41" ssid="5">BLEU score: This criterion computes the geometric mean of the precision of-grams of various lengths between a hypothesis and a set of reference translations multiplied by a factor BP that penalizes short sentences: NIST score: This criterion computes a weighted precision of-grams between a hypothesis and a set of reference translations multiplied by a factor BP&#8217; that penalizes short sentences: Heredenotes the weighted precision ofgrams in the translation.</S>
    <S sid="42" ssid="6">We use .</S>
    <S sid="43" ssid="7">Both, NIST and BLEU are accuracy measures, and thus larger values reflect better translation quality.</S>
    <S sid="44" ssid="8">Note that NIST and BLEU scores are not additive for different sentences, i.e. the score for a document cannot be obtained by simply summing over scores for individual sentences.</S>
    <S sid="45" ssid="9">It includes an argmax operation (Eq.</S>
    <S sid="46" ssid="10">6).</S>
    <S sid="47" ssid="11">Therefore, it is not possible to compute a gradient and we cannot use gradient descent methods to perform optimization.</S>
    <S sid="48" ssid="12">The objective function has many different local optima.</S>
    <S sid="49" ssid="13">The optimization algorithm must handle this.</S>
    <S sid="50" ssid="14">In addition, even if we manage to solve the optimization problem, we might face the problem of overfitting the training data.</S>
    <S sid="51" ssid="15">In Section 5, we describe an efficient optimization algorithm.</S>
    <S sid="52" ssid="16">To be able to compute a gradient and to make the objective function smoother, we can use the following error criterion which is essentially a smoothed error count, with a parameter to adjust the smoothness: In the following, we assume that we can measure the number of errors in sentence by comparing it with a reference sentenceusing a function E .</S>
    <S sid="53" ssid="17">However, the following exposition can be easily adapted to accuracy metrics and to metrics that make use of multiple references.</S>
    <S sid="54" ssid="18">We assume that the number of errors for a set of sentences is obtained by summing the errors for the individual sentences: .</S>
    <S sid="55" ssid="19">Our goal is to obtain a minimal error count on a representative corpus with given reference translations and a set of different candidate translations for each input sentence .</S>
    <S sid="56" ssid="20">In the extreme case, for , Eq.</S>
    <S sid="57" ssid="21">7 converges to the unsmoothed criterion of Eq.</S>
    <S sid="58" ssid="22">5 (except in the case of ties).</S>
    <S sid="59" ssid="23">Note, that the resulting objective function might still have local optima, which makes the optimization hard compared to using the objective function of Eq.</S>
    <S sid="60" ssid="24">4 which does not have different local optima.</S>
    <S sid="61" ssid="25">The use of this type of smoothed error count is a common approach in the speech community (Juang et al., 1995; Schl&#168;uter and Ney, 2001).</S>
    <S sid="62" ssid="26">Figure 1 shows the actual shape of the smoothed and the unsmoothed error count for two parameters in our translation system.</S>
    <S sid="63" ssid="27">We see that the unsmoothed error count has many different local optima and is very unstable.</S>
    <S sid="64" ssid="28">The smoothed error count is much more stable and has fewer local optima.</S>
    <S sid="65" ssid="29">But (5) as we show in Section 7, the performance on our task obtained with the smoothed error count does not differ significantly from that obtained with the unsmoothed error count.</S>
    <S sid="66" ssid="30">The above stated optimization criterion is not easy to handle:</S>
  </SECTION>
  <SECTION title="5 Optimization Algorithm for Unsmoothed Error Count" number="4">
    <S sid="67" ssid="1">A standard algorithm for the optimization of the unsmoothed error count (Eq.</S>
    <S sid="68" ssid="2">5) is Powells algorithm combined with a grid-based line optimization method (Press et al., 2002).</S>
    <S sid="69" ssid="3">We start at a random point in the -dimensional parameter space and try to find a better scoring point in the parameter space by making a one-dimensional line minimization along the directions given by optimizing one parameter while keeping all other parameters fixed.</S>
    <S sid="70" ssid="4">To avoid finding a poor local optimum, we start from different initial parameter values.</S>
    <S sid="71" ssid="5">A major problem with the standard approach is the fact that grid-based line optimization is hard to adjust such that both good performance and efficient search are guaranteed.</S>
    <S sid="72" ssid="6">If a fine-grained grid is used then the algorithm is slow.</S>
    <S sid="73" ssid="7">If a large grid is used then the optimal solution might be missed.</S>
    <S sid="74" ssid="8">In the following, we describe a new algorithm for efficient line optimization of the unsmoothed error count (Eq.</S>
    <S sid="75" ssid="9">5) using a log-linear model (Eq.</S>
    <S sid="76" ssid="10">3) which is guaranteed to find the optimal solution.</S>
    <S sid="77" ssid="11">The new algorithm is much faster and more stable than the grid-based line optimization method.</S>
    <S sid="78" ssid="12">Computing the most probable sentence out of a set of candidate translation (see Eq.</S>
    <S sid="79" ssid="13">6) along a line with parameter results in an optimization problem of the following functional form: Here, and are constants with respect to .</S>
    <S sid="80" ssid="14">Hence, every candidate translation in corresponds to a line.</S>
    <S sid="81" ssid="15">The function is piecewise linear (Papineni, 1999).</S>
    <S sid="82" ssid="16">This allows us to compute an efficient exhaustive representation of that function.</S>
    <S sid="83" ssid="17">In the following, we sketch the new algorithm to optimize Eq.</S>
    <S sid="84" ssid="18">5: We compute the ordered sequence of linear intervals constituting for every sentence together with the incremental change in error count from the previous to the next interval.</S>
    <S sid="85" ssid="19">Hence, we obtain for every sentence a sequence which denote the interval boundaries and a corresponding sequence for the change in error count involved at the corresponding interval boundary Here, denotes the change in the error count at . position to the error count at position .</S>
    <S sid="86" ssid="20">By merging all sequences and for all different sentences of our corpus, the complete set of interval boundaries and error count changes on the whole corpus are obtained.</S>
    <S sid="87" ssid="21">The optimal can now be computed easily by traversing the sequence of interval boundaries while updating an error count.</S>
    <S sid="88" ssid="22">It is straightforward to refine this algorithm to also handle the BLEU and NIST scores instead of sentence-level error counts by accumulating the relevant statistics for computing these scores (n-gram precision, translation length and reference length) .</S>
  </SECTION>
  <SECTION title="6 Baseline Translation Approach" number="5">
    <S sid="89" ssid="1">The basic feature functions of our model are identical to the alignment template approach (Och and Ney, 2002).</S>
    <S sid="90" ssid="2">In this translation model, a sentence is translated by segmenting the input sentence into phrases, translating these phrases and reordering the translations in the target language.</S>
    <S sid="91" ssid="3">In addition to the feature functions described in (Och and Ney, 2002), our system includes a phrase penalty (the number of alignment templates used) and special alignment features.</S>
    <S sid="92" ssid="4">Altogether, the log-linear model includes different features.</S>
    <S sid="93" ssid="5">Note that many of the used feature functions are derived from probabilistic models: the feature function is defined as the negative logarithm of the corresponding probabilistic model.</S>
    <S sid="94" ssid="6">Therefore, the feature functions are much more &#8217;informative&#8217; than for instance the binary feature functions used in standard maximum entropy models in natural language processing.</S>
    <S sid="95" ssid="7">For search, we use a dynamic programming beam-search algorithm to explore a subset of all possible translations (Och et al., 1999) and extractbest candidate translations using A* search (Ueffing et al., 2002).</S>
    <S sid="96" ssid="8">Using an-best approximation, we might face the problem that the parameters trained are good for the list oftranslations used, but yield worse translation results if these parameters are used in the dynamic programming search.</S>
    <S sid="97" ssid="9">Hence, it is possible that our new search produces translations with more errors on the training corpus.</S>
    <S sid="98" ssid="10">This can happen because with the modified model scaling factors the -best list can change significantly and can include sentences not in the existing-best list.</S>
    <S sid="99" ssid="11">To avoid this problem, we adopt the following solution: First, we perform search (using a manually defined set of parameter values) and compute an-best list, and use this-best list to train the model parameters.</S>
    <S sid="100" ssid="12">Second, we use the new model parameters in a new search and compute a new-best list, which is combined with the existing-best list.</S>
    <S sid="101" ssid="13">Third, using this extended-best list new model parameters are computed.</S>
    <S sid="102" ssid="14">This is iterated until the resulting-best list does not change.</S>
    <S sid="103" ssid="15">In this algorithm convergence is guaranteed as, in the limit, the-best list will contain all possible translations.</S>
    <S sid="104" ssid="16">In our experiments, we compute in every iteration about 200 alternative translations.</S>
    <S sid="105" ssid="17">In practice, the algorithm converges after about five to seven iterations.</S>
    <S sid="106" ssid="18">As a result, error rate cannot increase on the training corpus.</S>
    <S sid="107" ssid="19">A major problem in applying the MMI criterion is the fact that the reference translations need to be part of the provided-best list.</S>
    <S sid="108" ssid="20">Quite often, none of the given reference translations is part of the-best list because the search algorithm performs pruning, which in principle limits the possible translations that can be produced given a certain input sentence.</S>
    <S sid="109" ssid="21">To solve this problem, we define for the MMI training new pseudo-references by selecting from thebest list all the sentences which have a minimal number of word errors with respect to any of the true references.</S>
    <S sid="110" ssid="22">Note that due to this selection approach, the results of the MMI criterion might be biased toward the mWER criterion.</S>
    <S sid="111" ssid="23">It is a major advantage of the minimum error rate training that it is not necessary to choose pseudo-references.</S>
  </SECTION>
  <SECTION title="7 Results" number="6">
    <S sid="112" ssid="1">We present results on the 2002 TIDES Chinese&#8211; English small data track task.</S>
    <S sid="113" ssid="2">The goal is the translation of news text from Chinese to English.</S>
    <S sid="114" ssid="3">Table 1 provides some statistics on the training, development and test corpus used.</S>
    <S sid="115" ssid="4">The system we use does not include rule-based components to translate numbers, dates or names.</S>
    <S sid="116" ssid="5">The basic feature functions were trained using the training corpus.</S>
    <S sid="117" ssid="6">The development corpus was used to optimize the parameters of the log-linear model.</S>
    <S sid="118" ssid="7">Translation results are reported on the test corpus.</S>
    <S sid="119" ssid="8">Table 2 shows the results obtained on the development corpus and Table 3 shows the results obtained on the test corpus.</S>
    <S sid="120" ssid="9">Italic numbers refer to results for which the difference to the best result (indicated in bold) is not statistically significant.</S>
    <S sid="121" ssid="10">For all error rates, we show the maximal occurring 95% confidence interval in any of the experiments for that column.</S>
    <S sid="122" ssid="11">The confidence intervals are computed using bootstrap resampling (Press et al., 2002).</S>
    <S sid="123" ssid="12">The last column provides the number of words in the produced translations which can be compared with the average number of reference words occurring in the development and test corpora given in Table 1.</S>
    <S sid="124" ssid="13">We observe that if we choose a certain error criterion in training, we obtain in most cases the best results using the same criterion as the evaluation metric on the test data.</S>
    <S sid="125" ssid="14">The differences can be quite large: If we optimize with respect to word error rate, the results are mWER=68.3%, which is better than if we optimize with respect to BLEU or NIST and the difference is statistically significant.</S>
    <S sid="126" ssid="15">Between BLEU and NIST, the differences are more moderate, but by optimizing on NIST, we still obtain a large improvement when measured with NIST compared to optimizing on BLEU.</S>
    <S sid="127" ssid="16">The MMI criterion produces significantly worse results on all error rates besides mWER.</S>
    <S sid="128" ssid="17">Note that, due to the re-definition of the notion of reference translation by using minimum edit distance, the results of the MMI criterion are biased toward mWER.</S>
    <S sid="129" ssid="18">It can be expected that by using a suitably definedgram precision to define the pseudo-references for MMI instead of using edit distance, it is possible to obtain better BLEU or NIST scores.</S>
    <S sid="130" ssid="19">An important part of the differences in the translation scores is due to the different translation length (last column in Table 3).</S>
    <S sid="131" ssid="20">The mWER and MMI criteria prefer shorter translations which are heavily penalized by the BLEU and NIST brevity penalty.</S>
    <S sid="132" ssid="21">We observe that the smoothed error count gives almost identical results to the unsmoothed error count.</S>
    <S sid="133" ssid="22">This might be due to the fact that the number of parameters trained is small and no serious overfitting occurs using the unsmoothed error count.</S>
  </SECTION>
  <SECTION title="8 Related Work" number="7">
    <S sid="134" ssid="1">The use of log-linear models for statistical machine translation was suggested by Papineni et al. (1997) and Och and Ney (2002).</S>
    <S sid="135" ssid="2">The use of minimum classification error training and using a smoothed error count is common in the pattern recognition and speech Table 3: Effect of different error criteria used in training on the test corpus.</S>
    <S sid="136" ssid="3">Note that better results correspond to larger BLEU and NIST scores and to smaller error rates.</S>
    <S sid="137" ssid="4">Italic numbers refer to results for which the difference to the best result (indicated in bold) is not statistically significant. recognition community (Duda and Hart, 1973; Juang et al., 1995; Schl&#168;uter and Ney, 2001).</S>
    <S sid="138" ssid="5">Paciorek and Rosenfeld (2000) use minimum classification error training for optimizing parameters of a whole-sentence maximum entropy language model.</S>
    <S sid="139" ssid="6">A technically very different approach that has a similar goal is the minimum Bayes risk approach, in which an optimal decision rule with respect to an application specific risk/loss function is used, which will normally differ from Eq.</S>
    <S sid="140" ssid="7">3.</S>
    <S sid="141" ssid="8">The loss function is either identical or closely related to the final evaluation criterion.</S>
    <S sid="142" ssid="9">In contrast to the approach presented in this paper, the training criterion and the statistical models used remain unchanged in the minimum Bayes risk approach.</S>
    <S sid="143" ssid="10">In the field of natural language processing this approach has been applied for example in parsing (Goodman, 1996) and word alignment (Kumar and Byrne, 2002).</S>
  </SECTION>
  <SECTION title="9 Conclusions" number="8">
    <S sid="144" ssid="1">We presented alternative training criteria for loglinear statistical machine translation models which are directly related to translation quality: an unsmoothed error count and a smoothed error count on a development corpus.</S>
    <S sid="145" ssid="2">For the unsmoothed error count, we presented a new line optimization algorithm which can efficiently find the optimal solution along a line.</S>
    <S sid="146" ssid="3">We showed that this approach obtains significantly better results than using the MMI training criterion (with our method to define pseudoreferences) and that optimizing error rate as part of the training criterion helps to obtain better error rate on unseen test data.</S>
    <S sid="147" ssid="4">As a result, we expect that actual &#8217;true&#8217; translation quality is improved, as previous work has shown that for some evaluation criteria there is a correlation with human subjective evaluation of fluency and adequacy (Papineni et al., 2001; Doddington, 2002).</S>
    <S sid="148" ssid="5">However, the different evaluation criteria yield quite different results on our Chinese&#8211;English translation task and therefore we expect that not all of them correlate equally well to human translation quality.</S>
    <S sid="149" ssid="6">The following important questions should be answered in the future: How many parameters can be reliably estimated using unsmoothed minimum error rate criteria using a given development corpus size?</S>
    <S sid="150" ssid="7">We expect that directly optimizing error rate for many more parameters would lead to serious overfitting problems.</S>
    <S sid="151" ssid="8">Is it possible to optimize more parameters using the smoothed error rate criterion?</S>
    <S sid="152" ssid="9">Which error rate should be optimized during training?</S>
    <S sid="153" ssid="10">This relates to the important question of which automatic evaluation measure is optimally correlated to human assessment of translation quality.</S>
    <S sid="154" ssid="11">Note, that this approach can be applied to any evaluation criterion.</S>
    <S sid="155" ssid="12">Hence, if an improved automatic evaluation criterion is developed that has an even better correlation with human judgments than BLEU and NIST, we can plug this alternative criterion directly into the training procedure and optimize the model parameters for it.</S>
    <S sid="156" ssid="13">This means that improved translation evaluation measures lead directly to improved machine translation quality.</S>
    <S sid="157" ssid="14">Of course, the approach presented here places a high demand on the fidelity of the measure being optimized.</S>
    <S sid="158" ssid="15">It might happen that by directly optimizing an error measure in the way described above, weaknesses in the measure might be exploited that could yield better scores without improved translation quality.</S>
    <S sid="159" ssid="16">Hence, this approach poses new challenges for developers of automatic evaluation criteria.</S>
    <S sid="160" ssid="17">Many tasks in natural language processing, for instance summarization, have evaluation criteria that go beyond simply counting the number of wrong system decisions and the framework presented here might yield improved systems for these tasks as well.</S>
  </SECTION>
  <SECTION title="Acknowledgements" number="9">
    <S sid="161" ssid="1">This work was supported by DARPA-ITO grant 66001-00-1-9814.</S>
  </SECTION>
</PAPER>
