Pseudo-Projective Dependency Parsing
In order to realize the full potential of dependency-based syntactic parsing, it is desirable to allow non-projective dependency structures.
We show how a data-driven deterministic dependency parser, in itself restricted to projective structures, can be combined with graph transformation techniques to produce non-projective structures.
Experiments using data from the Prague Dependency Treebank show that the combined system can handle non-projective constructions with a precision sufficient to yield a significant improvement in overall parsing accuracy.
This leads to the best reported performance for robust non-projective parsing of Czech.
In our pseudo-projective approach, non projective links are lifted upwards in the tree to achieve projectivity, and special trace labels are used to enable recovery of the non projective links at parse time.
We show how the restriction to projective dependency graphs could be lifted by using graph transformation techniques to preprocess training data and post-process parser output, so-called pseudo-projective parsing.
For handling non-projective relations, we suggest applying a preprocessing step to a dependency parser, which consists in lifting non-projective arcs to their head repeatedly, until the tree becomes pseudo-projective.
We note that since the number of non-projective dependencies is much smaller than the number of projective dependencies, it is not efficient to perform non-projective parsing for all cases.
