<PAPER>
  <S sid="0">Multi-Criteria-Based Active Learning For Named Entity Recognition</S>
  <ABSTRACT>
    <S sid="1" ssid="1">In this paper, we propose a multi-criteriabased active learning approach and effectively apply it to named entity recognition.</S>
    <S sid="2" ssid="2">Active learning targets to minimize the human annotation efforts by selecting examples for labeling.</S>
    <S sid="3" ssid="3">To maximize the contribution of the selected examples, we the multiple criteria: informativepropose measures to quantify them.</S>
    <S sid="4" ssid="4">More comprehensively, we incorporate all the criteria using two selection strategies, both of which result in less labeling cost than single-criterion-based method.</S>
    <S sid="5" ssid="5">The results of the named entity recognition in both MUC-6 and GENIA show that the labeling cost can be reduced by at least 80% without degrading the performance.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">In the machine learning approaches of natural language processing (NLP), models are generally trained on large annotated corpus.</S>
    <S sid="7" ssid="2">However, annotating such corpus is expensive and timeconsuming, which makes it difficult to adapt an existing model to a new domain.</S>
    <S sid="8" ssid="3">In order to overcome this difficulty, active learning (sample selection) has been studied in more and more NLP applications such as POS tagging (Engelson and Dagan 1999), information extraction (Thompson et al. 1999), text classification (Lewis and Catlett 1994; McCallum and Nigam 1998; Schohn and Cohn 2000; Tong and Koller 2000; Brinker 2003), statistical parsing (Thompson et al.</S>
    <S sid="9" ssid="4">1999; Tang et al. 2002; Steedman et al.</S>
    <S sid="10" ssid="5">2003), noun phrase chunking (Ngai and Yarowsky 2000), etc.</S>
    <S sid="11" ssid="6">Active learning is based on the assumption that a small number of annotated examples and a large number of unannotated examples are available.</S>
    <S sid="12" ssid="7">This assumption is valid in most NLP tasks.</S>
    <S sid="13" ssid="8">Different from supervised learning in which the entire corpus are labeled manually, active learning is to select the most useful example for labeling and add the labeled example to training set to retrain model.</S>
    <S sid="14" ssid="9">This procedure is repeated until the model achieves a certain level of performance.</S>
    <S sid="15" ssid="10">Practically, a batch of examples are selected at a time, called batchedbased sample selection (Lewis and Catlett 1994) since it is time consuming to retrain the model if only one new example is added to the training set.</S>
    <S sid="16" ssid="11">Many existing work in the area focus on two approaches: certainty-based methods (Thompson et al. 1999; Tang et al.</S>
    <S sid="17" ssid="12">2002; Schohn and Cohn 2000; Tong and Koller 2000; Brinker 2003) and committee-based methods (McCallum and Nigam 1998; Engelson and Dagan 1999; Ngai and Yarowsky 2000) to select the most informative examples for which the current model are most uncertain.</S>
    <S sid="18" ssid="13">Being the first piece of work on active learning for name entity recognition (NER) task, we target to minimize the human annotation efforts yet still reaching the same level of performance as a supervised learning approach.</S>
    <S sid="19" ssid="14">For this purpose, we make a more comprehensive consideration on the contribution of individual examples, and more importantly maximizing the contribution of a batch based on three criteria: informativeness, representativeness and diversity.</S>
    <S sid="20" ssid="15">First, we propose three scoring functions to quantify the informativeness of an example, which can be used to select the most uncertain examples.</S>
    <S sid="21" ssid="16">Second, the representativeness measure is further proposed to choose the examples representing the majority.</S>
    <S sid="22" ssid="17">Third, we propose two diversity considerations (global and local) to avoid repetition among the examples of a batch.</S>
    <S sid="23" ssid="18">Finally, two combination strategies with the above three criteria are proposed to reach the maximum effectiveness on active learning for NER.</S>
    <S sid="24" ssid="19">We build our NER model using Support Vector Machines (SVM).</S>
    <S sid="25" ssid="20">The experiment shows that our active learning methods achieve a promising result in this NER task.</S>
    <S sid="26" ssid="21">The results in both MUC6 and GENIA show that the amount of the labeled training data can be reduced by at least 80% without degrading the quality of the named entity recognizer.</S>
    <S sid="27" ssid="22">The contributions not only come from the above measures, but also the two sample selection strategies which effectively incorporate informativeness, representativeness and diversity criteria.</S>
    <S sid="28" ssid="23">To our knowledge, it is the first work on considering the three criteria all together for active learning.</S>
    <S sid="29" ssid="24">Furthermore, such measures and strategies can be easily adapted to other active learning tasks as well.</S>
  </SECTION>
  <SECTION title="2 Multi-criteria for NER Active Learning" number="2">
    <S sid="30" ssid="1">Support Vector Machines (SVM) is a powerful machine learning method, which has been applied successfully in NER tasks, such as (Kazama et al. 2002; Lee et al.</S>
    <S sid="31" ssid="2">2003).</S>
    <S sid="32" ssid="3">In this paper, we apply active learning methods to a simple and effective SVM model to recognize one class of names at a time, such as protein names, person names, etc.</S>
    <S sid="33" ssid="4">In NER, SVM is to classify a word into positive class &#8220;1&#8221; indicating that the word is a part of an entity, or negative class &#8220;-1&#8221; indicating that the word is not a part of an entity.</S>
    <S sid="34" ssid="5">Each word in SVM is represented as a high-dimensional feature vector including surface word information, orthographic features, POS feature and semantic trigger features (Shen et al. 2003).</S>
    <S sid="35" ssid="6">The semantic trigger features consist of some special head nouns for an entity class which is supplied by users.</S>
    <S sid="36" ssid="7">Furthermore, a window (size = 7), which represents the local context of the target word w, is also used to classify w. However, for active learning in NER, it is not reasonable to select a single word without context for human to label.</S>
    <S sid="37" ssid="8">Even if we require human to label a single word, he has to make an addition effort to refer to the context of the word.</S>
    <S sid="38" ssid="9">In our active learning process, we select a word sequence which consists of a machine-annotated named entity and its context rather than a single word.</S>
    <S sid="39" ssid="10">Therefore, all of the measures we propose for active learning should be applied to the machineannotated named entities and we have to further study how to extend the measures for words to named entities.</S>
    <S sid="40" ssid="11">Thus, the active learning in SVMbased NER will be more complex than that in simple classification tasks, such as text classification on which most SVM active learning works are conducted (Schohn and Cohn 2000; Tong and Koller 2000; Brinker 2003).</S>
    <S sid="41" ssid="12">In the next part, we will introduce informativeness, representativeness and diversity measures for the SVM-based NER.</S>
    <S sid="42" ssid="13">The basic idea of informativeness criterion is similar to certainty-based sample selection methods, which have been used in many previous works.</S>
    <S sid="43" ssid="14">In our task, we use a distance-based measure to evaluate the informativeness of a word and extend it to the measure of an entity using three scoring functions.</S>
    <S sid="44" ssid="15">We prefer the examples with high informative degree for which the current model are most uncertain.</S>
    <S sid="45" ssid="16">In the simplest linear form, training SVM is to find a hyperplane that can separate the positive and negative examples in training set with maximum margin.</S>
    <S sid="46" ssid="17">The margin is defined by the distance of the hyperplane to the nearest of the positive and negative examples.</S>
    <S sid="47" ssid="18">The training examples which are closest to the hyperplane are called support vectors.</S>
    <S sid="48" ssid="19">In SVM, only the support vectors are useful for the classification, which is different from statistical models.</S>
    <S sid="49" ssid="20">SVM training is to get these support vectors and their weights from training set by solving quadratic programming problem.</S>
    <S sid="50" ssid="21">The support vectors can later be used to classify the test data.</S>
    <S sid="51" ssid="22">Intuitively, we consider the informativeness of an example as how it can make effect on the support vectors by adding it to training set.</S>
    <S sid="52" ssid="23">An example may be informative for the learner if the distance of its feature vector to the hyperplane is less than that of the support vectors to the hyperplane (equal to 1).</S>
    <S sid="53" ssid="24">This intuition is also justified by (Schohn and Cohn 2000; Tong and Koller 2000) based on a version space analysis.</S>
    <S sid="54" ssid="25">They state that labeling an example that lies on or close to the hyperplane is guaranteed to have an effect on the solution.</S>
    <S sid="55" ssid="26">In our task, we use the distance to measure the informativeness of an example.</S>
    <S sid="56" ssid="27">The distance of a word&#8217;s feature vector to the hyperplane is computed as follows: where w is the feature vector of the word, ai, yi, si corresponds to the weight, the class and the feature vector of the ith support vector respectively.</S>
    <S sid="57" ssid="28">N is the number of the support vectors in current model.</S>
    <S sid="58" ssid="29">We select the example with minimal Dist, which indicates that it comes closest to the hyperplane in feature space.</S>
    <S sid="59" ssid="30">This example is considered most informative for current model.</S>
    <S sid="60" ssid="31">Based on the above informativeness measure for a word, we compute the overall informativeness degree of a named entity NE.</S>
    <S sid="61" ssid="32">In this paper, we propose three scoring functions as follows.</S>
    <S sid="62" ssid="33">Let NE = w1...wN in which wi is the feature vector of the ith word of NE. where, wi is the feature vector of the ith word in NE.</S>
    <S sid="63" ssid="34">In Section 4.3, we will evaluate the effectiveness of these scoring functions.</S>
    <S sid="64" ssid="35">In addition to the most informative example, we also prefer the most representative example.</S>
    <S sid="65" ssid="36">The representativeness of an example can be evaluated based on how many examples there are similar or near to it.</S>
    <S sid="66" ssid="37">So, the examples with high representative degree are less likely to be an outlier.</S>
    <S sid="67" ssid="38">Adding them to the training set will have effect on a large number of unlabeled examples.</S>
    <S sid="68" ssid="39">There are only a few works considering this selection criterion (McCallum and Nigam 1998; Tang et al. 2002) and both of them are specific to their tasks, viz. text classification and statistical parsing.</S>
    <S sid="69" ssid="40">In this section, we compute the similarity between words using a general vector-based measure, extend this measure to named entity level using dynamic time warping algorithm and quantify the representativeness of a named entity by its density.</S>
    <S sid="70" ssid="41">In general vector space model, the similarity between two vectors may be measured by computing the cosine value of the angle between them.</S>
    <S sid="71" ssid="42">The smaller the angle is, the more similar between the vectors are.</S>
    <S sid="72" ssid="43">This measure, called cosine-similarity measure, has been widely used in information retrieval tasks (Baeza-Yates and Ribeiro-Neto 1999).</S>
    <S sid="73" ssid="44">In our task, we also use it to quantify the similarity between two words.</S>
    <S sid="74" ssid="45">Particularly, the calculation in SVM need be projected to a higher dimensional space by using a certain kernel function K ( w i , w j ) .</S>
    <S sid="75" ssid="46">Therefore, we adapt the cosine-similarity measure to SVM as follows: (wi,wj)=k (wi , wi)k(wj , wj ) where, wi and wj are the feature vectors of the words i and j.</S>
    <S sid="76" ssid="47">This calculation is also supported by (Brinker 2003)&#8217;s work.</S>
    <S sid="77" ssid="48">Furthermore, if we use the linear kernel k(wi, wj) = wi &#8901; w j , the measure is the same as the traditional cosine similarity measgeneral vector-based similarity measure. tities In this part, we compute the similarity between two machine-annotated named entities given the similarities between words.</S>
    <S sid="78" ssid="49">Regarding an entity as a word sequence, this work is analogous to the alignment of two sequences.</S>
    <S sid="79" ssid="50">We employ the dynamic time warping (DTW) algorithm (Rabiner et al. 1978) to find an optimal alignment between the words in the sequences which maximize the accumulated similarity degree between the sequences.</S>
    <S sid="80" ssid="51">Here, we adapt it to our task.</S>
    <S sid="81" ssid="52">A sketch of the modified algorithm is as follows.</S>
    <S sid="82" ssid="53">Let NE1 = w11w12...w1n...w1N, (n = 1,..., N) and NE2 = w21w22...w2m...w2M, (m = 1,..., M) denote two word sequences to be matched.</S>
    <S sid="83" ssid="54">NE1 and NE2 consist of M and N words respectively.</S>
    <S sid="84" ssid="55">NE1(n) = w1n and NE2(m) = w2m.</S>
    <S sid="85" ssid="56">A similarity value Sim(w1n ,w2m) has been known for every pair of words (w1n,w2m) within NE1 and NE2.</S>
    <S sid="86" ssid="57">The goal of DTW is to find a path, m = map(n), which map n onto the corresponding m such that the accumulated similarity Sim* along the path is maximized. map n n= A dynamic programming method is used to determine the optimum path map(n).</S>
    <S sid="87" ssid="58">The accumulated similarity SimA to any grid point (n, m) can be recursively calculated as Certainly, the overall similarity measure Sim* has to be normalized as longer sequences normally give higher similarity value.</S>
    <S sid="88" ssid="59">So, the similarity between two sequences NE1 and NE2 is calculated as and may be regarded as a Entity Given a set of machine-annotated named entities NESet = {NE1, .</S>
    <S sid="89" ssid="60">.., NEN}, the representativeness of a named entity NEi in NESet is quantified by its density.</S>
    <S sid="90" ssid="61">The density of NEi is defined as the average similarity between NEi and all the other entities NEj in NESet as follows.</S>
    <S sid="91" ssid="62">If NEi has the largest density among all the entities in NESet, it can be regarded as the centroid of NESet and also the most representative examples in NESet.</S>
    <S sid="92" ssid="63">Diversity criterion is to maximize the training utility of a batch.</S>
    <S sid="93" ssid="64">We prefer the batch in which the examples have high variance to each other.</S>
    <S sid="94" ssid="65">For example, given the batch size 5, we try not to select five repetitious examples at a time.</S>
    <S sid="95" ssid="66">To our knowledge, there is only one work (Brinker 2003) exploring this criterion.</S>
    <S sid="96" ssid="67">In our task, we propose two methods: local and global, to make the examples diverse enough in a batch.</S>
    <S sid="97" ssid="68">For a global consideration, we cluster all named entities in NESet based on the similarity measure proposed in Section 2.2.2.</S>
    <S sid="98" ssid="69">The named entities in the same cluster may be considered similar to each other, so we will select the named entities from different clusters at one time.</S>
    <S sid="99" ssid="70">We employ a Kmeans clustering algorithm (Jelinek 1997), which is shown in Figure 1.</S>
    <S sid="100" ssid="71">The number of clusters is K Initialization: Randomly equally partition {NE1, ..., NEN} into K initial clusters Cj (j = 1, ... , K).</S>
    <S sid="101" ssid="72">Loop until the number of changes for the centroids of all clusters is less than a threshold In each round, we need to compute the pairwise similarities within each cluster to get the centroid of the cluster.</S>
    <S sid="102" ssid="73">And then, we need to compute the similarities between each example and all centroids to repartition the examples.</S>
    <S sid="103" ssid="74">So, the algorithm is time-consuming.</S>
    <S sid="104" ssid="75">Based on the assumption that N examples are uniformly distributed between the K clusters, the time complexity of the algorithm is about O(N2/K+NK) (Tang et al. 2002).</S>
    <S sid="105" ssid="76">In one of our experiments, the size of the NESet (N) is around 17000 and K is equal to 50, so the time complexity is about O(106).</S>
    <S sid="106" ssid="77">For efficiency, we may filter the entities in NESet before clustering them, which will be further discussed in Section 3.</S>
    <S sid="107" ssid="78">When selecting a machine-annotated named entity, we compare it with all previously selected named entities in the current batch.</S>
    <S sid="108" ssid="79">If the similarity between them is above a threshold 8, this example cannot be allowed to add into the batch.</S>
    <S sid="109" ssid="80">The order of selecting examples is based on some measure, such as informativeness measure, representativeness measure or their combination.</S>
    <S sid="110" ssid="81">This local selection method is shown in Figure 2.</S>
    <S sid="111" ssid="82">In this way, we avoid selecting too similar examples (similarity value &#8805; 8) in a batch.</S>
    <S sid="112" ssid="83">The threshold 8 may be the average similarity between the examples in NESet.</S>
    <S sid="113" ssid="84">This consideration only requires O(NK+K2) computational time.</S>
    <S sid="114" ssid="85">In one of our experiments (N &#732; 17000 and K = 50), the time complexity is about O(105).</S>
    <S sid="115" ssid="86">It is more efficient than clustering algorithm described in Section 2.3.1.</S>
  </SECTION>
  <SECTION title="3 Sample Selection strategies" number="3">
    <S sid="116" ssid="1">In this section, we will study how to combine and strike a proper balance between these criteria, viz. informativeness, representativeness and diversity, to reach the maximum effectiveness on NER active learning.</S>
    <S sid="117" ssid="2">We build two strategies to combine the measures proposed above.</S>
    <S sid="118" ssid="3">These strategies are based on the varying priorities of the criteria and the varying degrees to satisfy the criteria. most informativeness score from NESet to an intermediate set called INTERSet.</S>
    <S sid="119" ssid="4">By this preselecting, we make the selection process faster in the later steps since the size of INTERSet is much smaller than that of NESet.</S>
    <S sid="120" ssid="5">Then we cluster the examples in INTERSet and choose the centroid of each cluster into a batch called BatchSet.</S>
    <S sid="121" ssid="6">The centroid of a cluster is the most representative example in that cluster since it has the largest density.</S>
    <S sid="122" ssid="7">Furthermore, the examples in different clusters may be considered diverse to each other.</S>
    <S sid="123" ssid="8">By this means, we consider representativeness and diversity criteria at the same time.</S>
    <S sid="124" ssid="9">This strategy is shown in Figure 3.</S>
    <S sid="125" ssid="10">One limitation of this strategy is that clustering result may not reflect the distribution of whole sample space since we only cluster on INTERSet for efficiency.</S>
    <S sid="126" ssid="11">The other is that since the representativeness of an example is only evaluated on a cluster.</S>
    <S sid="127" ssid="12">If the cluster size is too small, the most representative example in this cluster may not be representative in the whole sample space.</S>
    <S sid="128" ssid="13">Given: NESet = {NE1, .</S>
    <S sid="129" ssid="14">.., NEN} BatchSet with the maximal size K. INTERSet with the maximal size M Steps: which the Info and Density value of NEi are normalized first.</S>
    <S sid="130" ssid="15">The individual importance of each criterion in this function is adjusted by the tradeoff parameter l ( 0 &#8804; l &#8804;1 ) (set to 0.6 in our experiment).</S>
    <S sid="131" ssid="16">First, we select a candidate example NEi with the maximum value of this function from NESet.</S>
    <S sid="132" ssid="17">Second, we consider diversity criterion using the local method in Section 3.3.2.</S>
    <S sid="133" ssid="18">We add the candidate example NEi to a batch only if NEi is different enough from any previously selected example in the batch.</S>
    <S sid="134" ssid="19">The threshold &#223; is set to the average pair-wise similarity of the entities in NESet.</S>
  </SECTION>
  <SECTION title="4 Experimental Results and Analysis" number="4">
    <S sid="135" ssid="1">In order to evaluate the effectiveness of our selection strategies, we apply them to recognize protein (PRT) names in biomedical domain using GENIA corpus V1.1 (Ohta et al. 2002) and person (PER), location (LOC), organization (ORG) names in newswire domain using MUC-6 corpus.</S>
    <S sid="136" ssid="2">First, we randomly split the whole corpus into three parts: an initial training set to build an initial model, a test set to evaluate the performance of the model and an unlabeled set to select examples.</S>
    <S sid="137" ssid="3">The size of each data set is shown in Table 1.</S>
    <S sid="138" ssid="4">Then, iteratively, we select a batch of examples following the selection strategies proposed, require human experts to label them and add them into the training set.</S>
    <S sid="139" ssid="5">The batch size K = 50 in GENIA and 10 in MUC-6.</S>
    <S sid="140" ssid="6">Each example is defined as a machine-recognized named entity and its context words (previous 3 words and next 3 words).</S>
    <S sid="141" ssid="7">Domain Class Corpus Initial Training Set Test Set Unlabeled Set Biomedical PRT GENIA1.1 10 sent.</S>
    <S sid="142" ssid="8">(277 words) 900 sent.</S>
    <S sid="143" ssid="9">(26K words) 8004 sent.</S>
    <S sid="144" ssid="10">(223K words) Newswire PER MUC-6 5 sent.</S>
    <S sid="145" ssid="11">(131 words) 602 sent.</S>
    <S sid="146" ssid="12">(14K words) 7809 sent.</S>
    <S sid="147" ssid="13">(157K words) LOC 5 sent.</S>
    <S sid="148" ssid="14">(130 words) 7809 sent.</S>
    <S sid="149" ssid="15">(157K words) ORG 5 sent.</S>
    <S sid="150" ssid="16">(113 words) 7809 sent.</S>
    <S sid="151" ssid="17">(157K words) The goal of our work is to minimize the human annotation effort to learn a named entity recognizer with the same performance level as supervised learning.</S>
    <S sid="152" ssid="18">The performance of our model is evaluated using &#8220;precision/recall/F-measure&#8221;.</S>
    <S sid="153" ssid="19">In this section, we evaluate our selection strategies by comparing them with a random selection method, in which a batch of examples is randomly selected iteratively, on GENIA and MUC-6 corpus.</S>
    <S sid="154" ssid="20">Table 2 shows the amount of training data needed to achieve the performance of supervised learning using various selection methods, viz.</S>
    <S sid="155" ssid="21">Random, Strategy1 and Strategy2.</S>
    <S sid="156" ssid="22">In GENIA, we find: Furthermore, when we apply our model to newswire domain (MUC-6) to recognize person, location and organization names, Strategy1 and Strategy2 show a more promising result by comparing with the supervised learning and Random, as shown in Table 2.</S>
    <S sid="157" ssid="23">On average, about 95% of the data can be reduced to achieve the same performance with the supervised learning in MUC-6.</S>
    <S sid="158" ssid="24">It is probably because NER in the newswire domain is much simpler than that in the biomedical domain (Shen et al. 2003) and named entities are less and distributed much sparser in the newswire texts than in the biomedical texts.</S>
    <S sid="159" ssid="25">In this section, we investigate the effectiveness of informativeness criterion in NER task.</S>
    <S sid="160" ssid="26">Figure 5 shows a plot of training data size versus F-measure achieved by the informativeness-based measures in Section 3.1.2: Info_Avg, Info_Min and Info_S/N as well as Random.</S>
    <S sid="161" ssid="27">We make the comparisons in GENIA corpus.</S>
    <S sid="162" ssid="28">In Figure 5, the horizontal line is the performance level (63.3 F-measure) achieved by supervised learning (223K words).</S>
    <S sid="163" ssid="29">We find that the three informativeness-based measures perform similarly and each of them outperforms Random.</S>
    <S sid="164" ssid="30">Table 3 highlights the various data sizes to achieve the peak performance using these selection methods.</S>
    <S sid="165" ssid="31">We find that Random (83K words) on average requires over 1.5 times as much as data to achieve the same performance as the informativeness-based selection methods (52K words).</S>
    <S sid="166" ssid="32">In addition to the informativeness criterion, we further incorporate representativeness and diversity criteria into active learning using two strategies described in Section 3.</S>
    <S sid="167" ssid="33">Comparing the two strategies with the best result of the single-criterionbased selection methods Info_Min, we are to justify that representativeness and diversity are also important factors for active learning.</S>
    <S sid="168" ssid="34">Figure 6 shows the learning curves for the various methods: Strategy1, Strategy2 and Info_Min.</S>
    <S sid="169" ssid="35">In the beginning iterations (F-measure &lt; 60), the three methods performed similarly.</S>
    <S sid="170" ssid="36">But with the larger training set, the efficiencies of Stratety1 and Strategy2 begin to be evident.</S>
    <S sid="171" ssid="37">Table 4 highlights the final result of the three methods.</S>
    <S sid="172" ssid="38">In order to reach the performance of supervised learning, Strategy1 (40K words) and Strategyy2 (31K words) require about 80% and 60% of the data that Info_Min (51.9K) does.</S>
    <S sid="173" ssid="39">So we believe the effective combinations of informativeness, representativeness and diversity will help to learn the NER model more quickly and cost less in annotation.</S>
  </SECTION>
  <SECTION title="5 Related Work" number="5">
    <S sid="174" ssid="1">Since there is no study on active learning for NER task previously, we only introduce general active learning methods here.</S>
    <S sid="175" ssid="2">Many existing active learning methods are to select the most uncertain examples using various measures (Thompson et al. 1999; Schohn and Cohn 2000; Tong and Koller 2000; Engelson and Dagan 1999; Ngai and Yarowsky 2000).</S>
    <S sid="176" ssid="3">Our informativeness-based measure is similar to these works.</S>
    <S sid="177" ssid="4">However these works just follow a single criterion.</S>
    <S sid="178" ssid="5">(McCallum and Nigam 1998; Tang et al. 2002) are the only two works considering the representativeness criterion in active learning.</S>
    <S sid="179" ssid="6">(Tang et al. 2002) use the density information to weight the selected examples while we use it to select examples.</S>
    <S sid="180" ssid="7">Moreover, the representativeness measure we use is relatively general and easy to adapt to other tasks, in which the example selected is a sequence of words, such as text chunking, POS tagging, etc.</S>
    <S sid="181" ssid="8">On the other hand, (Brinker 2003) first incorporate diversity in active learning for text classification.</S>
    <S sid="182" ssid="9">Their work is similar to our local consideration in Section 2.3.2.</S>
    <S sid="183" ssid="10">However, he didn&#8217;t further explore how to avoid selecting outliers to a batch.</S>
    <S sid="184" ssid="11">So far, we haven&#8217;t found any previous work integrating the informativeness, representativeness and diversity all together.</S>
  </SECTION>
  <SECTION title="6 Conclusion and Future Work" number="6">
    <S sid="185" ssid="1">In this paper, we study the active learning in a more complex NLP task, named entity recognition.</S>
    <S sid="186" ssid="2">We propose a multi-criteria-based approach to select examples based on their informativeness, representativeness and diversity, which are incorporated all together by two strategies (local and global).</S>
    <S sid="187" ssid="3">Experiments show that, in both MUC6 and GENIA, both of the two strategies combining the three criteria outperform the single criterion (informativeness).</S>
    <S sid="188" ssid="4">The labeling cost can be significantly reduced by at least 80% comparing with the supervised learning.</S>
    <S sid="189" ssid="5">To our best knowledge, this is not only the first work to report the empirical results of active learning for NER, but also the first work to incorporate the three criteria all together for selecting examples.</S>
    <S sid="190" ssid="6">Although the current experiment results are very promising, some parameters in our experiment, such as the batch size K and the X in the function of strategy 2, are decided by our experience in the domain.</S>
    <S sid="191" ssid="7">In practical application, the optimal value of these parameters should be decided automatically based on the training process.</S>
    <S sid="192" ssid="8">Furthermore, we will study how to overcome the limitation of the strategy 1 discussed in Section 3 by using more effective clustering algorithm.</S>
    <S sid="193" ssid="9">Another interesting work is to study when to stop active learning.</S>
  </SECTION>
</PAPER>
