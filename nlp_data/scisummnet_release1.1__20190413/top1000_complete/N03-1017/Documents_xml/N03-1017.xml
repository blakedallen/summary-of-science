<PAPER>
  <S sid="0">Statistical Phrase-Based Translation</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We propose a new phrase-based translation model and decoding algorithm that enables us to evaluate and compare several, previously proposed phrase-based translation models.</S>
    <S sid="2" ssid="2">Within our framework, we carry out a large number of experiments to understand better and explain why phrase-based models outperform word-based models.</S>
    <S sid="3" ssid="3">Our empirical results, which hold for all examined language pairs, suggest that the highest levels of performance can be obtained through relatively simple means: heuristic learning of phrase translations from word-based alignments and lexical weighting of phrase translations.</S>
    <S sid="4" ssid="4">Surprisingly, learning phrases longer than three words and learning phrases from high-accuracy wordlevel alignment models does not have a strong impact on performance.</S>
    <S sid="5" ssid="5">Learning only syntactically motivated phrases degrades the performance of our systems.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">Various researchers have improved the quality of statistical machine translation system with the use of phrase translation.</S>
    <S sid="7" ssid="2">Och et al. [1999]&#8217;s alignment template model can be reframed as a phrase translation system; Yamada and Knight [2001] use phrase translation in a syntaxbased translation system; Marcu and Wong [2002] introduced a joint-probability model for phrase translation; and the CMU and IBM word-based statistical machine translation systems' are augmented with phrase translation capability.</S>
    <S sid="8" ssid="3">Phrase translation clearly helps, as we will also show with the experiments in this paper.</S>
    <S sid="9" ssid="4">But what is the best method to extract phrase translation pairs?</S>
    <S sid="10" ssid="5">In order to investigate this question, we created a uniform evaluation framework that enables the comparison of different ways to build a phrase translation table.</S>
    <S sid="11" ssid="6">Our experiments show that high levels of performance can be achieved with fairly simple means.</S>
    <S sid="12" ssid="7">In fact, for most of the steps necessary to build a phrase-based system, tools and resources are freely available for researchers in the field.</S>
    <S sid="13" ssid="8">More sophisticated approaches that make use of syntax do not lead to better performance.</S>
    <S sid="14" ssid="9">In fact, imposing syntactic restrictions on phrases, as used in recently proposed syntax-based translation models [Yamada and Knight, 2001], proves to be harmful.</S>
    <S sid="15" ssid="10">Our experiments also show, that small phrases of up to three words are sufficient for obtaining high levels of accuracy.</S>
    <S sid="16" ssid="11">Performance differs widely depending on the methods used to build the phrase translation table.</S>
    <S sid="17" ssid="12">We found extraction heuristics based on word alignments to be better than a more principled phrase-based alignment method.</S>
    <S sid="18" ssid="13">However, what constitutes the best heuristic differs from language pair to language pair and varies with the size of the training corpus.</S>
  </SECTION>
  <SECTION title="2 Evaluation Framework" number="2">
    <S sid="19" ssid="1">In order to compare different phrase extraction methods, we designed a uniform framework.</S>
    <S sid="20" ssid="2">We present a phrase translation model and decoder that works with any phrase translation table.</S>
    <S sid="21" ssid="3">The phrase translation model is based on the noisy channel model.</S>
    <S sid="22" ssid="4">We use Bayes rule to reformulate the translation probability for translating a foreign sentence into English as This allows for a language model and a separate translation model . argmax argmax During decoding, the foreign input sentence is segmented into a sequence of phrases .</S>
    <S sid="23" ssid="5">We assume a uniform probability distribution over all possible segmentations.</S>
    <S sid="24" ssid="6">Each foreign phrase in is translated into an English phrase .</S>
    <S sid="25" ssid="7">The English phrases may be reordered.</S>
    <S sid="26" ssid="8">Phrase translation is modeled by a probability distribution .</S>
    <S sid="27" ssid="9">Recall that due to the Bayes rule, the translation direction is inverted from a modeling standpoint.</S>
    <S sid="28" ssid="10">Reordering of the English output phrases is modeled by a relative distortion probability distribution , where denotes the start position of the foreign phrase that was translated into the th English phrase, and denotes the end position of the foreign phrase translated into the th English phrase.</S>
    <S sid="29" ssid="11">In all our experiments, the distortion probability distribution is trained using a joint probability model (see Section 3.3).</S>
    <S sid="30" ssid="12">Alternatively, we could also use a simpler distortion model with an appropriate value for the parameter .</S>
    <S sid="31" ssid="13">In order to calibrate the output length, we introduce a factor for each generated English word in addition to the trigram language model LM.</S>
    <S sid="32" ssid="14">This is a simple means to optimize performance.</S>
    <S sid="33" ssid="15">Usually, this factor is larger than 1, biasing longer output.</S>
    <S sid="34" ssid="16">In summary, the best English output sentence best given a foreign input sentence according to our model is For all our experiments we use the same training data, trigram language model [Seymore and Rosenfeld, 1997], and a specialized decoder.</S>
    <S sid="35" ssid="17">The phrase-based decoder we developed for purpose of comparing different phrase-based translation models employs a beam search algorithm, similar to the one by Jelinek [1998].</S>
    <S sid="36" ssid="18">The English output sentence is generated left to right in form of partial translations (or hypotheses).</S>
    <S sid="37" ssid="19">We start with an initial empty hypothesis.</S>
    <S sid="38" ssid="20">A new hypothesis is expanded from an existing hypothesis by the translation of a phrase as follows: A sequence of untranslated foreign words and a possible English phrase translation for them is selected.</S>
    <S sid="39" ssid="21">The English phrase is attached to the existing English output sequence.</S>
    <S sid="40" ssid="22">The foreign words are marked as translated and the probability cost of the hypothesis is updated.</S>
    <S sid="41" ssid="23">The cheapest (highest probability) final hypothesis with no untranslated foreign words is the output of the search.</S>
    <S sid="42" ssid="24">The hypotheses are stored in stacks.</S>
    <S sid="43" ssid="25">The stack contains all hypotheses in which foreign words have been translated.</S>
    <S sid="44" ssid="26">We recombine search hypotheses as done by Och et al. [2001].</S>
    <S sid="45" ssid="27">While this reduces the number of hypotheses stored in each stack somewhat, stack size is exponential with respect to input sentence length.</S>
    <S sid="46" ssid="28">This makes an exhaustive search impractical.</S>
    <S sid="47" ssid="29">Thus, we prune out weak hypotheses based on the cost they incurred so far and a future cost estimate.</S>
    <S sid="48" ssid="30">For each stack, we only keep a beam of the best hypotheses.</S>
    <S sid="49" ssid="31">Since the future cost estimate is not perfect, this leads to search errors.</S>
    <S sid="50" ssid="32">Our future cost estimate takes into account the estimated phrase translation cost, but not the expected distortion cost.</S>
    <S sid="51" ssid="33">We compute this estimate as follows: For each possible phrase translation anywhere in the sentence (we call it a translation option), we multiply its phrase translation probability with the language model probability for the generated English phrase.</S>
    <S sid="52" ssid="34">As language model probability we use the unigram probability for the first word, the bigram probability for the second, and the trigram probability for all following words.</S>
    <S sid="53" ssid="35">Given the costs for the translation options, we can compute the estimated future cost for any sequence of consecutive foreign words by dynamic programming.</S>
    <S sid="54" ssid="36">Note that this is only possible, since we ignore distortion costs.</S>
    <S sid="55" ssid="37">Since there are only such sequences for a foreign input sentence of length , we can pre-compute these cost estimates beforehand and store them in a table.</S>
    <S sid="56" ssid="38">During translation, future costs for uncovered foreign words can be quickly computed by consulting this table.</S>
    <S sid="57" ssid="39">If a hypothesis has broken sequences of untranslated foreign words, we look up the cost for each sequence and take the product of their costs.</S>
    <S sid="58" ssid="40">The beam size, e.g. the maximum number of hypotheses in each stack, is fixed to a certain number.</S>
    <S sid="59" ssid="41">The number of translation options is linear with the sentence length.</S>
    <S sid="60" ssid="42">Hence, the time complexity of the beam search is quadratic with sentence length, and linear with the beam size.</S>
    <S sid="61" ssid="43">Since the beam size limits the search space and therefore search quality, we have to find the proper trade-off between speed (low beam size) and performance (high beam size).</S>
    <S sid="62" ssid="44">For our experiments, a beam size of only 100 proved to be sufficient.</S>
    <S sid="63" ssid="45">With larger beams sizes, only few sentences are translated differently.</S>
    <S sid="64" ssid="46">With our decoder, translating 1755 sentence of length 5-15 words takes about 10 minutes on a 2 GHz Linux system.</S>
    <S sid="65" ssid="47">In other words, we achieved fast decoding, while ensuring high quality. argmax best length argmax LM where is decomposed into</S>
  </SECTION>
  <SECTION title="3 Methods for Learning Phrase Translation" number="3">
    <S sid="66" ssid="1">We carried out experiments to compare the performance of three different methods to build phrase translation probability tables.</S>
    <S sid="67" ssid="2">We also investigate a number of variations.</S>
    <S sid="68" ssid="3">We report most experimental results on a GermanEnglish translation task, since we had sufficient resources available for this language pair.</S>
    <S sid="69" ssid="4">We confirm the major points in experiments on additional language pairs.</S>
    <S sid="70" ssid="5">As the first method, we learn phrase alignments from a corpus that has been word-aligned by a training toolkit for a word-based translation model: the Giza++ [Och and Ney, 2000] toolkit for the IBM models [Brown et al., 1993].</S>
    <S sid="71" ssid="6">The extraction heuristic is similar to the one used in the alignment template work by Och et al. [1999].</S>
    <S sid="72" ssid="7">A number of researchers have proposed to focus on the translation of phrases that have a linguistic motivation [Yamada and Knight, 2001; Imamura, 2002].</S>
    <S sid="73" ssid="8">They only consider word sequences as phrases, if they are constituents, i.e. subtrees in a syntax tree (such as a noun phrase).</S>
    <S sid="74" ssid="9">To identify these, we use a word-aligned corpus annotated with parse trees generated by statistical syntactic parsers [Collins, 1997; Schmidt and Schulte im Walde, 2000].</S>
    <S sid="75" ssid="10">The third method for comparison is the joint phrase model proposed by Marcu and Wong [2002].</S>
    <S sid="76" ssid="11">This model learns directly a phrase-level alignment of the parallel corpus.</S>
    <S sid="77" ssid="12">The Giza++ toolkit was developed to train word-based translation models from parallel corpora.</S>
    <S sid="78" ssid="13">As a byproduct, it generates word alignments for this data.</S>
    <S sid="79" ssid="14">We improve this alignment with a number of heuristics, which are described in more detail in Section 4.5.</S>
    <S sid="80" ssid="15">We collect all aligned phrase pairs that are consistent with the word alignment: The words in a legal phrase pair are only aligned to each other, and not to words outside [Och et al., 1999].</S>
    <S sid="81" ssid="16">Given the collected phrase pairs, we estimate the phrase translation probability distribution by relative frequency: count count No smoothing is performed.</S>
    <S sid="82" ssid="17">If we collect all phrase pairs that are consistent with word alignments, this includes many non-intuitive phrases.</S>
    <S sid="83" ssid="18">For instance, translations for phrases such as &#8220;house the&#8221; may be learned.</S>
    <S sid="84" ssid="19">Intuitively we would be inclined to believe that such phrases do not help: Restricting possible phrases to syntactically motivated phrases could filter out such non-intuitive pairs.</S>
    <S sid="85" ssid="20">Another motivation to evaluate the performance of a phrase translation model that contains only syntactic phrases comes from recent efforts to built syntactic translation models [Yamada and Knight, 2001; Wu, 1997].</S>
    <S sid="86" ssid="21">In these models, reordering of words is restricted to reordering of constituents in well-formed syntactic parse trees.</S>
    <S sid="87" ssid="22">When augmenting such models with phrase translations, typically only translation of phrases that span entire syntactic subtrees is possible.</S>
    <S sid="88" ssid="23">It is important to know if this is a helpful or harmful restriction.</S>
    <S sid="89" ssid="24">Consistent with Imamura [2002], we define a syntactic phrase as a word sequence that is covered by a single subtree in a syntactic parse tree.</S>
    <S sid="90" ssid="25">We collect syntactic phrase pairs as follows: We wordalign a parallel corpus, as described in Section 3.1.</S>
    <S sid="91" ssid="26">We then parse both sides of the corpus with syntactic parsers [Collins, 1997; Schmidt and Schulte im Walde, 2000].</S>
    <S sid="92" ssid="27">For all phrase pairs that are consistent with the word alignment, we additionally check if both phrases are subtrees in the parse trees.</S>
    <S sid="93" ssid="28">Only these phrases are included in the model.</S>
    <S sid="94" ssid="29">Hence, the syntactically motivated phrase pairs learned are a subset of the phrase pairs learned without knowledge of syntax (Section 3.1).</S>
    <S sid="95" ssid="30">As in Section 3.1, the phrase translation probability distribution is estimated by relative frequency.</S>
    <S sid="96" ssid="31">Marcu and Wong [2002] proposed a translation model that assumes that lexical correspondences can be established not only at the word level, but at the phrase level as well.</S>
    <S sid="97" ssid="32">To learn such correspondences, they introduced a phrase-based joint probability model that simultaneously generates both the Source and Target sentences in a parallel corpus.</S>
    <S sid="98" ssid="33">Expectation Maximization learning in Marcu and Wong&#8217;s framework yields both (i) a joint probability distribution , which reflects the probability that phrases and are translation equivalents; (ii) and a joint distribution , which reflects the probability that a phrase at position is translated into a phrase at position .</S>
    <S sid="99" ssid="34">To use this model in the context of our framework, we simply marginalize to conditional probabilities the joint probabilities estimated by Marcu and Wong [2002].</S>
    <S sid="100" ssid="35">Note that this approach is consistent with the approach taken by Marcu and Wong themselves, who use conditional models during decoding.</S>
  </SECTION>
  <SECTION title="4 Experiments" number="4">
    <S sid="101" ssid="1">We used the freely available Europarl corpus 2 to carry out experiments.</S>
    <S sid="102" ssid="2">This corpus contains over 20 million words in each of the eleven official languages of the European Union, covering the proceedings of the European Parliament 1996-2001.</S>
    <S sid="103" ssid="3">1755 sentences of length 5-15 were reserved for testing.</S>
    <S sid="104" ssid="4">In all experiments in Section 4.1-4.6 we translate from German to English.</S>
    <S sid="105" ssid="5">We measure performance using the BLEU score [Papineni et al., 2001], which estimates the accuracy of translation output with respect to a reference translation.</S>
    <S sid="106" ssid="6">First, we compared the performance of the three methods for phrase extraction head-on, using the same decoder (Section 2) and the same trigram language model.</S>
    <S sid="107" ssid="7">Figure 1 displays the results.</S>
    <S sid="108" ssid="8">In direct comparison, learning all phrases consistent with the word alignment (AP) is superior to the joint model (Joint), although not by much.</S>
    <S sid="109" ssid="9">The restriction to only syntactic phrases (Syn) is harmful.</S>
    <S sid="110" ssid="10">We also included in the figure the performance of an IBM Model 4 wordbased translation system (M4), which uses a greedy decoder [Germann et al., 2001].</S>
    <S sid="111" ssid="11">Its performance is worse than both AP and Joint.</S>
    <S sid="112" ssid="12">These results are consistent over training corpus sizes from 10,000 sentence pairs to 320,000 sentence pairs.</S>
    <S sid="113" ssid="13">All systems improve with more data.</S>
    <S sid="114" ssid="14">Table 1 lists the number of distinct phrase translation pairs learned by each method and each corpus.</S>
    <S sid="115" ssid="15">The number grows almost linearly with the training corpus size, due to the large number of singletons.</S>
    <S sid="116" ssid="16">The syntactic restriction eliminates over 80% of all phrase pairs.</S>
    <S sid="117" ssid="17">Note that the millions of phrase pairs learned fit easily into the working memory of modern computers.</S>
    <S sid="118" ssid="18">Even the largest models take up only a few hundred megabyte of RAM.</S>
    <S sid="119" ssid="19">The restriction on syntactic phrases is harmful, because too many phrases are eliminated.</S>
    <S sid="120" ssid="20">But still, we might suspect, that these lead to more reliable phrase pairs. pairs consistent with a word alignment (AP), phrase pairs from the joint model (Joint), IBM Model 4 (M4), and only syntactic phrases (Syn) One way to check this is to use all phrase pairs and give more weight to syntactic phrase translations.</S>
    <S sid="121" ssid="21">This can be done either during the data collection &#8211; say, by counting syntactic phrase pairs twice &#8211; or during translation &#8211; each time the decoder uses a syntactic phrase pair, it credits a bonus factor to the hypothesis score.</S>
    <S sid="122" ssid="22">We found that neither of these methods result in significant improvement of translation performance.</S>
    <S sid="123" ssid="23">Even penalizing the use of syntactic phrase pairs does not harm performance significantly.</S>
    <S sid="124" ssid="24">These results suggest that requiring phrases to be syntactically motivated does not lead to better phrase pairs, but only to fewer phrase pairs, with the loss of a good amount of valuable knowledge.</S>
    <S sid="125" ssid="25">One illustration for this is the common German &#8220;es gibt&#8221;, which literally translates as &#8220;it gives&#8221;, but really means &#8220;there is&#8221;.</S>
    <S sid="126" ssid="26">&#8220;Es gibt&#8221; and &#8220;there is&#8221; are not syntactic constituents.</S>
    <S sid="127" ssid="27">Note that also constructions such as &#8220;with regard to&#8221; and &#8220;note that&#8221; have fairly complex syntactic representations, but often simple one word translations.</S>
    <S sid="128" ssid="28">Allowing to learn phrase translations over such sentence fragments is important for achieving high performance.</S>
    <S sid="129" ssid="29">How long do phrases have to be to achieve high performance?</S>
    <S sid="130" ssid="30">Figure 2 displays results from experiments with different maximum phrase lengths.</S>
    <S sid="131" ssid="31">All phrases consistent with the word alignment (AP) are used.</S>
    <S sid="132" ssid="32">Surprisingly, limiting the length to a maximum of only three words show that length 3 is enough per phrase already achieves top performance.</S>
    <S sid="133" ssid="33">Learning longer phrases does not yield much improvement, and occasionally leads to worse results.</S>
    <S sid="134" ssid="34">Reducing the limit to only two, however, is clearly detrimental.</S>
    <S sid="135" ssid="35">Allowing for longer phrases increases the phrase translation table size (see Table 2).</S>
    <S sid="136" ssid="36">The increase is almost linear with the maximum length limit.</S>
    <S sid="137" ssid="37">Still, none of these model sizes cause memory problems.</S>
    <S sid="138" ssid="38">One way to validate the quality of a phrase translation pair is to check, how well its words translate to each other.</S>
    <S sid="139" ssid="39">For this, we need a lexical translation probability distribution .</S>
    <S sid="140" ssid="40">We estimated it by relative frequency from the same word alignments as the phrase model. count count A special English NULL token is added to each English sentence and aligned to each unaligned foreign word.</S>
    <S sid="141" ssid="41">Given a phrase pair and a word alignment between the foreign word positions and the English word positions , we compute the lexical weight by an alignment and a lexical translation probability distribution See Figure 3 for an example.</S>
    <S sid="142" ssid="42">If there are multiple alignments for a phrase pair , we use the one with the highest lexical weight: We use the lexical weight during translation as a additional factor.</S>
    <S sid="143" ssid="43">This means that the model is extended to The parameter defines the strength of the lexical weight .</S>
    <S sid="144" ssid="44">Good values for this parameter are around 0.25.</S>
    <S sid="145" ssid="45">Figure 4 shows the impact of lexical weighting on machine translation performance.</S>
    <S sid="146" ssid="46">In our experiments, we achieved improvements of up to 0.01 on the BLEU score scale.</S>
    <S sid="147" ssid="47">Again, all phrases consistent with the word alignment are used (Section 3.1).</S>
    <S sid="148" ssid="48">Note that phrase translation with a lexical weight is a special case of the alignment template model [Och et al., 1999] with one word class for each word.</S>
    <S sid="149" ssid="49">Our simplification has the advantage that the lexical weights can be factored into the phrase translation table beforehand, speeding up decoding.</S>
    <S sid="150" ssid="50">In contrast to the beam search decoder for the alignment template model, our decoder is able to search all possible phrase segmentations of the input sentence, instead of choosing one segmentation before decoding.</S>
    <S sid="151" ssid="51">Recall from Section 3.1 that we learn phrase pairs from word alignments generated by Giza++.</S>
    <S sid="152" ssid="52">The IBM Models that this toolkit implements only allow at most one English word to be aligned with a foreign word.</S>
    <S sid="153" ssid="53">We remedy this problem with a heuristic approach.</S>
    <S sid="154" ssid="54">First, we align a parallel corpus bidirectionally &#8211; foreign to English and English to foreign.</S>
    <S sid="155" ssid="55">This gives us two word alignments that we try to reconcile.</S>
    <S sid="156" ssid="56">If we intersect the two alignments, we get a high-precision alignment of high-confidence alignment points.</S>
    <S sid="157" ssid="57">If we take the union of the two alignments, we get a high-recall alignment with additional alignment points.</S>
    <S sid="158" ssid="58">We explore the space between intersection and union with expansion heuristics that start with the intersection and add additional alignment points.</S>
    <S sid="159" ssid="59">The decision which points to add may depend on a number of criteria: In which alignment does the potential alignment point exist?</S>
    <S sid="160" ssid="60">Foreign-English or English-foreign?</S>
    <S sid="161" ssid="61">Does the potential point neighbor already established points?</S>
    <S sid="162" ssid="62">Does &#8220;neighboring&#8221; mean directly adjacent (blockdistance), or also diagonally adjacent?</S>
    <S sid="163" ssid="63">Is the English or the foreign word that the potential point connects unaligned so far?</S>
    <S sid="164" ssid="64">Are both unaligned?</S>
    <S sid="165" ssid="65">What is the lexical probability for the potential point?</S>
    <S sid="166" ssid="66">The base heuristic [Och et al., 1999] proceeds as follows: We start with intersection of the two word alignments.</S>
    <S sid="167" ssid="67">We only add new alignment points that exist in the union of two word alignments.</S>
    <S sid="168" ssid="68">We also always require that a new alignment point connects at least one previously unaligned word.</S>
    <S sid="169" ssid="69">First, we expand to only directly adjacent alignment points.</S>
    <S sid="170" ssid="70">We check for potential points starting from the top right corner of the alignment matrix, checking for alignment points for the first English word, then continue with alignment points for the second English word, and so on.</S>
    <S sid="171" ssid="71">This is done iteratively until no alignment point can be added anymore.</S>
    <S sid="172" ssid="72">In a final step, we add non-adjacent alignment points, with otherwise the same requirements.</S>
    <S sid="173" ssid="73">Figure 5 shows the performance of this heuristic (base) compared against the two mono-directional alignments (e2f, f2e) and their union (union).</S>
    <S sid="174" ssid="74">The figure also contains two modifications of the base heuristic: In the first (diag) we also permit diagonal neighborhood in the iterative expansion stage.</S>
    <S sid="175" ssid="75">In a variation of this (diag-and), we require in the final step that both words are unaligned.</S>
    <S sid="176" ssid="76">The ranking of these different methods varies for different training corpus sizes.</S>
    <S sid="177" ssid="77">For instance, the alignment f2e starts out second to worst for the 10,000 sentence pair corpus, but ultimately is competitive with the best method at 320,000 sentence pairs.</S>
    <S sid="178" ssid="78">The base heuristic is initially the best, but then drops off.</S>
    <S sid="179" ssid="79">The discrepancy between the best and the worst method is quite large, about 0.02 BLEU.</S>
    <S sid="180" ssid="80">For almost all training corpus sizes, the heuristic diag-and performs best, albeit not always significantly.</S>
    <S sid="181" ssid="81">The initial word alignment for collecting phrase pairs is generated by symmetrizing IBM Model 4 alignments.</S>
    <S sid="182" ssid="82">Model 4 is computationally expensive, and only approximate solutions exist to estimate its parameters.</S>
    <S sid="183" ssid="83">The IBM Models 1-3 are faster and easier to implement.</S>
    <S sid="184" ssid="84">For IBM Model 1 and 2 word alignments can be computed efficiently without relying on approximations.</S>
    <S sid="185" ssid="85">For more information on these models, please refer to Brown et al. [1993].</S>
    <S sid="186" ssid="86">Again, we use the heuristics from the Section 4.5 to reconcile the mono-directional alignments obtained through training parameters using models of increasing complexity.</S>
    <S sid="187" ssid="87">How much is performance affected, if we base word alignments on these simpler methods?</S>
    <S sid="188" ssid="88">As Figure 6 indicates, not much.</S>
    <S sid="189" ssid="89">While Model 1 clearly results in worse performance, the difference is less striking for Model 2 and 3.</S>
    <S sid="190" ssid="90">Using different expansion heuristics during symmetrizing the word alignments has a bigger effect.</S>
    <S sid="191" ssid="91">We can conclude from this, that high quality phrase alignments can be learned with fairly simple means.</S>
    <S sid="192" ssid="92">The simpler and faster Model 2 provides similar performance to the complex Model 4.</S>
    <S sid="193" ssid="93">We validated our findings for additional language pairs.</S>
    <S sid="194" ssid="94">Table 3 displays some of the results.</S>
    <S sid="195" ssid="95">For all language pairs the phrase model (based on word alignments, Section 3.1) outperforms IBM Model 4.</S>
    <S sid="196" ssid="96">Lexicalization (Lex) always helps as well.</S>
  </SECTION>
  <SECTION title="5 Conclusion" number="5">
    <S sid="197" ssid="1">We created a framework (translation model and decoder) that enables us to evaluate and compare various phrase translation methods.</S>
    <S sid="198" ssid="2">Our results show that phrase translation gives better performance than traditional word-based methods.</S>
    <S sid="199" ssid="3">We obtain the best results even with small phrases of up to three words.</S>
    <S sid="200" ssid="4">Lexical weighting ofphrase translation helps.</S>
    <S sid="201" ssid="5">Straight-forward syntactic models that map constituents into constituents fail to account for important phrase alignments.</S>
    <S sid="202" ssid="6">As a consequence, straight-forward syntax-based mappings do not lead to better translations than unmotivated phrase mappings.</S>
    <S sid="203" ssid="7">This is a challenge for syntactic translation models.</S>
    <S sid="204" ssid="8">It matters how phrases are extracted.</S>
    <S sid="205" ssid="9">The results suggest that choosing the right alignment heuristic is more important than which model is used to create the initial word alignments.</S>
  </SECTION>
</PAPER>
