<PAPER>
	<S sid="0">Chinese Segmentation And New Word Detection Using Conditional Random Fields</S><ABSTRACT>
		<S sid="1" ssid="1">Chinese word segmentation is a difficult, im portant and widely-studied sequence modelingproblem.</S>
		<S sid="2" ssid="2">This paper demonstrates the abil ity of linear-chain conditional random fields(CRFs) to perform robust and accurate Chinese word segmentation by providing a principled framework that easily supports the in tegration of domain knowledge in the form of multiple lexicons of characters and words.</S>
		<S sid="3" ssid="3">We also present a probabilistic new word detection method, which further improves performance.</S>
		<S sid="4" ssid="4">Our system is evaluated on four datasets usedin a recent comprehensive Chinese word segmentation competition.</S>
		<S sid="5" ssid="5">State-of-the-art perfor mance is obtained.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number="1">
			<S sid="6" ssid="6">Unlike English and other western languages, many Asian languages such as Chinese, Japanese, and Thai, do not delimit words by white-space.</S>
			<S sid="7" ssid="7">Wordsegmentation is therefore a key precursor for language processing tasks in these languages.</S>
			<S sid="8" ssid="8">For Chinese, there has been significant research on find ing word boundaries in unsegmented sequences(see (Sproat and Shih, 2002) for a review).</S>
			<S sid="9" ssid="9">Un fortunately, building a Chinese word segmentation system is complicated by the fact that there is no standard definition of word boundaries in Chinese.</S>
			<S sid="10" ssid="10">Approaches to Chinese segmentation fall roughly into two categories: heuristic dictionary-based methods and statistical machine learning methods.In dictionary-based methods, a predefined dictio nary is used along with hand-generated rules for segmenting input sequence (Wu, 1999).</S>
			<S sid="11" ssid="11">Howeverthese approaches have been limited by the impossibility of creating a lexicon that includes all possible Chinese words and by the lack of robust statistical inference in the rules.</S>
			<S sid="12" ssid="12">Machine learning approaches are more desirable and have been successful in both unsupervised learning (Peng and Schuur mans, 2001) and supervised learning (Teahan et al, 2000).</S>
			<S sid="13" ssid="13">Many current approaches suffer from either lackof exact inference over sequences or difficulty in incorporating domain knowledge effectively into seg mentation.</S>
			<S sid="14" ssid="14">Domain knowledge is either not used, used in a limited way, or used in a complicated way spread across different components.</S>
			<S sid="15" ssid="15">For example,the N-gram generative language modeling based ap proach of Teahan et al(2000) does not use domainknowledge.</S>
			<S sid="16" ssid="16">Gao et al(2003) uses class-based language for word segmentation where some word cat egory information can be incorporated.</S>
			<S sid="17" ssid="17">Zhang et al (2003) use a hierarchical hidden Markov Model to incorporate lexical knowledge.</S>
			<S sid="18" ssid="18">A recent advance in this area is Xue (2003), in which the author uses a sliding-window maximum entropy classifier to tag Chinese characters into one of four position tags, and then covert these tags into a segmentation using rules.</S>
			<S sid="19" ssid="19">Maximum entropy models give tremendousflexibility to incorporate arbitrary features.</S>
			<S sid="20" ssid="20">How ever, a traditional maximum entropy tagger, as used in Xue (2003), labels characters without consideringdependencies among the predicted segmentation labels that is inherent in the state transitions of finite state sequence models.</S>
			<S sid="21" ssid="21">Linear-chain conditional random fields (CRFs) (Lafferty et al, 2001) are models that address both issues above.</S>
			<S sid="22" ssid="22">Unlike heuristic methods, they are principled probabilistic finite state models onwhich exact inference over sequences can be ef ficiently performed.</S>
			<S sid="23" ssid="23">Unlike generative N-gram or hidden Markov models, they have the ability to straightforwardly combine rich domain knowledge, for example in this paper, in the form of multiple readily-available lexicons.</S>
			<S sid="24" ssid="24">Furthermore, they arediscriminatively-trained, and are often more accurate than generative models, even with the same fea tures.</S>
			<S sid="25" ssid="25">In their most general form, CRFs are arbitrary undirected graphical models trained to maximize the conditional probability of the desired outputs given the corresponding inputs.</S>
			<S sid="26" ssid="26">In the linear-chainspecial case we use here, they can be roughly un derstood as discriminatively-trained hidden Markovmodels with next-state transition functions represented by exponential models (as in maximum en tropy classifiers), and with great flexibility to viewthe observation sequence in terms of arbitrary, over lapping features, with long-range dependencies, and at multiple levels of granularity.</S>
			<S sid="27" ssid="27">These beneficialproperties suggests that CRFs are a promising ap proach for Chinese word segmentation.New word detection is one of the most impor tant problems in Chinese information processing.Many machine learning approaches have been pro posed (Chen and Bai, 1998; Wu and Jiang, 2000; Nie et al, 1995).</S>
			<S sid="28" ssid="28">New word detection is normally considered as a separate process from segmentation.However, integrating them would benefit both seg mentation and new word detection.</S>
			<S sid="29" ssid="29">CRFs provide aconvenient framework for doing this.</S>
			<S sid="30" ssid="30">They can pro duce not only a segmentation, but also confidence in local segmentation decisions, which can be usedto find new, unfamiliar character sequences sur rounded by high-confidence segmentations.</S>
			<S sid="31" ssid="31">Thus, our new word detection is not a stand-alone process, but an integral part of segmentation.</S>
			<S sid="32" ssid="32">Newly detected words are re-incorporated into our word lexicon,and used to improve segmentation.</S>
			<S sid="33" ssid="33">Improved seg mentation can then be further used to improve new word detection.</S>
			<S sid="34" ssid="34">Comparing Chinese word segmentation accuracyacross systems can be difficult because many re search papers use different data sets and different ground-rules.</S>
			<S sid="35" ssid="35">Some published results claim 98% or99% segmentation precision and recall, but these ei ther count only the words that occur in the lexicon, or use unrealistically simple data, lexicons that haveextremely small (or artificially non-existant) outof-vocabulary rates, short sentences or many numbers.</S>
			<S sid="36" ssid="36">A recent Chinese word segmentation competition (Sproat and Emerson, 2003) has made compar isons easier.</S>
			<S sid="37" ssid="37">The competition provided four datasets with significantly different segmentation guidelines, and consistent train-test splits.</S>
			<S sid="38" ssid="38">The performance ofparticipating system varies significantly across different datasets.</S>
			<S sid="39" ssid="39">Our system achieves top performance in two of the runs, and a state-of-the-art per formance on average.</S>
			<S sid="40" ssid="40">This indicates that CRFs are a viable model for robust Chinese word segmentation.</S>
	</SECTION>
	<SECTION title="Conditional Random Fields. " number="2">
			<S sid="41" ssid="1">Conditional random fields (CRFs) are undirected graphical models trained to maximize a conditional probability (Lafferty et al, 2001).</S>
			<S sid="42" ssid="2">A common special-case graph structure is a linear chain, which corresponds to a finite state machine, and is suitablefor sequence labeling.</S>
			<S sid="43" ssid="3">A linear-chain CRF with parameters ? = {?1, ...}</S>
			<S sid="44" ssid="4">defines a conditional proba bility for a state (label) sequence y = y1...yT (for example, labels indicating where words start or have their interior) given an input sequence x = x1...xT (for example, the characters of a Chinese sentence) to be P?(y|x) = 1Zx exp ( T?</S>
			<S sid="45" ssid="5">t=1 ? k ?kfk(yt?1, yt,x, t) ) , (1) where Zx is the per-input normalization that makes the probability of all state sequences sum to one;fk(yt?1, yt,x, t) is a feature function which is of ten binary-valued, but can be real-valued, and ?k is a learned weight associated with feature fk.</S>
			<S sid="46" ssid="6">The feature functions can measure any aspect of a statetransition, yt?1 ? yt, and the entire observation se quence, x, centered at the current time step, t. For example, one feature function might have value 1when yt?1 is the state START, yt is the state NOT START, and xt is a word appearing in a lexicon of people?s first names.</S>
			<S sid="47" ssid="7">Large positive values for ?kindicate a preference for such an event; large nega tive values make the event unlikely.</S>
			<S sid="48" ssid="8">The most probable label sequence for an input x, y?</S>
			<S sid="49" ssid="9">= argmaxy P?(y|x),can be efficiently determined using the Viterbi algorithm (Rabiner, 1990).</S>
			<S sid="50" ssid="10">An N -best list of labeling sequences can also be obtained using modi fied Viterbi algorithm and A* search (Schwartz and Chow, 1990).</S>
			<S sid="51" ssid="11">The parameters can be estimated by maximum likelihood?maximizing the conditional probabilityof a set of label sequences, each given their cor responding input sequences.</S>
			<S sid="52" ssid="12">The log-likelihood of training set {(xi, yi) : i = 1, ...M} is written L?</S>
			<S sid="53" ssid="13">= ? i logP?(yi|xi) = ? i ( T?</S>
			<S sid="54" ssid="14">t=1 ? k ?kfk(yt?1, yt,x, t)?</S>
			<S sid="55" ssid="15">logZxi ) . Traditional maximum entropy learning algorithms, such as GIS and IIS (della Pietra et al, 1995), canbe used to train CRFs.</S>
			<S sid="56" ssid="16">However, our implemen tation uses a quasi-Newton gradient-climber BFGS for optimization, which has been shown to converge much faster (Malouf, 2002; Sha and Pereira, 2003).</S>
			<S sid="57" ssid="17">The gradient of the likelihood is ?P?(y|x)/??k = ? i,t fk(yt?1, y(i)t ,x(i), t) ? ?</S>
			<S sid="58" ssid="18">i,y,t P?(y|x(i))fk(yt?1, yt,x(i), t) CRFs share many of the advantageous properties of standard maximum entropy classifiers, including their convex likelihood function, which guarantees that the learning procedure converges to the global maximum.</S>
			<S sid="59" ssid="19">2.1 Regularization in CRFs.</S>
			<S sid="60" ssid="20">To avoid over-fitting, log-likelihood is usually penalized by some prior distribution over the parameters.</S>
			<S sid="61" ssid="21">A commonly used prior is a zero-mean Gaussian.</S>
			<S sid="62" ssid="22">With a Gaussian prior, log-likelihood is penal ized as follows.</S>
			<S sid="63" ssid="23">L? = ? i logP?(yi|xi)?</S>
			<S sid="64" ssid="24">k ?2k 2?2k (2) where ?2k is the variance for feature dimension k. The variance can be feature dependent.</S>
			<S sid="65" ssid="25">However for simplicity, constant variance is often used for all features.</S>
			<S sid="66" ssid="26">We experiment an alternate version ofGaussian prior in which the variance is feature dependent.</S>
			<S sid="67" ssid="27">We bin features by frequency in the train ing set, and let the features in the same bin share the same variance.</S>
			<S sid="68" ssid="28">The discounted value is set to be ?k dck/Me??2 where ck is the count of features, M is the bin size set by held out validation, and dae is the ceiling function.</S>
			<S sid="69" ssid="29">See Peng and McCallum (2004) for more details and further experiments.</S>
			<S sid="70" ssid="30">2.2 State transition features.</S>
			<S sid="71" ssid="31">Varying state-transition structures with different Markov order can be specified by different CRF feature functions, as determined by the number ofoutput labels y examined together in a feature func tion.</S>
			<S sid="72" ssid="32">We define four different state transition feature functions corresponding to different Markov orders.Higher-order features capture more long-range de pendencies, but also cause more data sparseness problems and require more memory for training.</S>
			<S sid="73" ssid="33">The best Markov order for a particular application can be selected by held-out cross-validation.</S>
			<S sid="74" ssid="34">1.</S>
			<S sid="75" ssid="35">First-order: Here the inputs are examined in.</S>
			<S sid="76" ssid="36">the context of the current state only.</S>
			<S sid="77" ssid="37">The feature functions are represented as f(yt,x).There are no separate parameters for state tran sitions.</S>
			<S sid="78" ssid="38">2.</S>
			<S sid="79" ssid="39">First-order+transitions: Here we add parame-.</S>
			<S sid="80" ssid="40">ters corresponding to state transitions.</S>
			<S sid="81" ssid="41">The fea ture functions used are f(yt,x), f(yt?1, yt).context of the current and previous states.</S>
			<S sid="82" ssid="42">Fea ture function are represented as f(yt?1, yt,x).</S>
			<S sid="83" ssid="43">4.</S>
			<S sid="84" ssid="44">Third-order: Here inputs are examined in.</S>
			<S sid="85" ssid="45">the context of the current, and two previous states.</S>
			<S sid="86" ssid="46">Feature function are represented as f(yt?2, yt?1, yt,x).</S>
	</SECTION>
	<SECTION title="CRFs for Word Segmentation. " number="3">
			<S sid="87" ssid="1">We cast the segmentation problem as one of se quence tagging: Chinese characters that begin a new word are given the START tag, and characters in the middle and at the end of words are given theNONSTART tag.</S>
			<S sid="88" ssid="2">The task of segmenting new, un segmented test data becomes a matter of assigning a sequence of tags (labels) to the input sequence of Chinese characters.</S>
			<S sid="89" ssid="3">Conditional random fields are configured as a linear-chain (finite state machine) for this purpose,and tagging is performed using the Viterbi algorithm to efficiently find the most likely label se quence for a given character sequence.</S>
			<S sid="90" ssid="4">3.1 Lexicon features as domain knowledge.</S>
			<S sid="91" ssid="5">One advantage of CRFs (as well as traditional maximum entropy models) is its flexibility in using arbitrary features of the input.</S>
			<S sid="92" ssid="6">To explore this advantage, as well as the importance of domain knowledge, we use many open features from external re sources.</S>
			<S sid="93" ssid="7">To specifically evaluate the importance ofdomain knowledge beyond the training data, we divide our features into two categories: closed fea tures and open features, (i.e., features allowed in thecompetition?s ?closed test?</S>
			<S sid="94" ssid="8">and ?open test?</S>
			<S sid="95" ssid="9">respec tively).</S>
			<S sid="96" ssid="10">The open features include a large word list (containing single and multiple-character words), a character list, and additional topic or part-of-speech character lexicons obtained from various sources.</S>
			<S sid="97" ssid="11">The closed features are obtained from training data alone, by intersecting the character list obtainedfrom training data with corresponding open lexi cons.</S>
			<S sid="98" ssid="12">Many lexicons of Chinese words and characters are available from the Internet and other sources.</S>
			<S sid="99" ssid="13">Besides the word list and character list, our lexiconsinclude 24 lists of Chinese words and characters obtained from several Internet sites1 cleaned and augmented by a local native Chinese speaker indepen dently of the competition data.</S>
			<S sid="100" ssid="14">The list of lexicons used in our experiments is shown in Figure 1.</S>
			<S sid="101" ssid="15">3.2 Feature conjunctions.</S>
			<S sid="102" ssid="16">Since CRFs are log-linear models, feature conjunctions are required to form complex, non-linear de cision boundaries in the original feature space.</S>
			<S sid="103" ssid="17">We 1http://www.mandarintools.com, ftp://xcin.linux.org.tw/pub/xcin/libtabe, http://www.geocities.com/hao510/wordlist noun (e.g.,?,?)</S>
			<S sid="104" ssid="18">verb (e.g.,?)</S>
			<S sid="105" ssid="19">adjective (e.g.,?,?)</S>
			<S sid="106" ssid="20">adverb (e.g.,!,?)</S>
			<S sid="107" ssid="21">auxiliary (e.g.,,?)</S>
			<S sid="108" ssid="22">preposition (e.g.,?)</S>
			<S sid="109" ssid="23">number (e.g.,,) negative (e.g.,X,:) determiner (e.g.,?,?,Y) function (e.g. ?,?)</S>
			<S sid="110" ssid="24">letter (English character) punctuation (e.g., # $) last name (e.g.,K) foreign name (e.g.,?)</S>
			<S sid="111" ssid="25">maybe last-name (e.g.,?,[) plural character (e.g.,?,?)</S>
			<S sid="112" ssid="26">pronoun (e.g.,fi,?,?)</S>
			<S sid="113" ssid="27">unit character (e.g.,G,?)</S>
			<S sid="114" ssid="28">country name (e.g.,?,?)</S>
			<S sid="115" ssid="29">Chinese place name (e.g.,?)</S>
			<S sid="116" ssid="30">organization name title suffix (e.g.,?,?)</S>
			<S sid="117" ssid="31">title prefix (e.g.,,?)</S>
			<S sid="118" ssid="32">date (e.g.,#,?,?)</S>
			<S sid="119" ssid="33">Figure 1: Lexicons used in our experiments C?2: second previous character in lexicon C?1: previous character in lexicon C1: next character in lexicon C2: second next character in lexicon C0C1: current and next character in lexicon C?1C0: current and previous character in lexicon C?2C?1: previous two characters in lexicon C?1C0C1: previous, current, and next character in the lexicon Figure 2: Feature conjunctions used in experiments use feature conjunctions in both the open and closed tests, as listed Figure 2.</S>
	</SECTION>
	<SECTION title="Probabilistic New Word Identification. " number="4">
			<S sid="120" ssid="1">Since no vocabulary list could ever be complete,new word (unknown word) identification is an im portant issue in Chinese segmentation.</S>
			<S sid="121" ssid="2">Unknownwords cause segmentation errors in that these outof-vocabulary words in input text are often in correctly segmented into single-character or otheroverly-short words (Chen and Bai, 1998).</S>
			<S sid="122" ssid="3">Tradi tionally, new word detection has been considered as a standalone process.</S>
			<S sid="123" ssid="4">We consider here new word detection as an integral part of segmentation, aimingto improve both segmentation and new word detec tion: detected new words are added to the word list lexicon in order to improve segmentation; improved segmentation can potentially further improve new word detection.</S>
			<S sid="124" ssid="5">We measure the performance ofnew word detection by its improvements on seg mentation.</S>
			<S sid="125" ssid="6">Given a word segmentation proposed by the CRF, we can compute a confidence in each segment.</S>
			<S sid="126" ssid="7">We detect as new words those that are not in the existing word list, yet are either highly confident segments, or low confident segments that are surrounded by high confident words.</S>
			<S sid="127" ssid="8">A confidence threshold of 0.9 is determined by cross-validation.Segment confidence is estimated using constrained forward-backward (Culotta and McCallum, 2004).</S>
			<S sid="128" ssid="9">The standard forward-backward algorithm (Rabiner, 1990) calculates Zx, the total like lihood of all label sequences y given a sequence x. Constrained forward-backward algorithm calculates Z ?x, total likelihood of all paths passing through a constrained segment (in our case, a sequence of characters starting with a START tag followed by a few NONSTART tags before the next START tag).</S>
			<S sid="129" ssid="10">The confidence in this segment is then Z ? x Zx , a real number between 0 and 1.In order to increase recall of new words, we consider not only the most likely (Viterbi) segmen tation, but the segmentations in the top N most likely segmentations (an N -best list), and detect new words according to the above criteria in all N segmentations.Many errors can be corrected by new word detection.</S>
			<S sid="130" ssid="11">For example, person name ?????</S>
			<S sid="131" ssid="12">hap pens four times.</S>
			<S sid="132" ssid="13">In the first pass of segmentation, two of them are segmented correctly and the other two are mistakenly segmented as ??</S>
			<S sid="133" ssid="14">(they are segmented differently because Viterbi algorithm decodes based on context.).</S>
			<S sid="134" ssid="15">However, ?????</S>
			<S sid="135" ssid="16">is identified as a new word and added to the word list lexicon.</S>
			<S sid="136" ssid="17">In the second pass of segmentation, the other two mistakes are corrected.</S>
	</SECTION>
	<SECTION title="Experiments and Analysis. " number="5">
			<S sid="137" ssid="1">To make a comprehensive evaluation, we use allfour of the datasets from a recent Chinese word segmentation bake-off competition (Sproat and Emer son, 2003).</S>
			<S sid="138" ssid="2">These datasets represent four different segmentation standards.</S>
			<S sid="139" ssid="3">A summary of the datasets is shown in Table 1.</S>
			<S sid="140" ssid="4">The standard bake-off scoring program is used to calculate precision, recall, F1, and OOV word recall.</S>
			<S sid="141" ssid="5">5.1 Experimental design.</S>
			<S sid="142" ssid="6">Since CTB and PK are provided in the GB encod ing while AS and HK use the Big5 encoding, we convert AS and HK datasets to GB in order to make cross-training-and-testing possible.</S>
			<S sid="143" ssid="7">Note that this conversion could potentially worsen performance slightly due to a few conversion errors.</S>
			<S sid="144" ssid="8">We use cross-validation to choose Markov-order and perform feature selection.</S>
			<S sid="145" ssid="9">Thus, each training set is randomly split?80% used for training and theremaining 20% for validation?and based on vali dation set performance, choices are made for model structure, prior, and which word lexicons to include.</S>
			<S sid="146" ssid="10">The choices of prior and model structure shown in Table 2 are used for our final testing.</S>
			<S sid="147" ssid="11">We conduct closed and open tests on all four datasets.</S>
			<S sid="148" ssid="12">The closed tests use only material from the training data for the particular corpus being tested.Open tests allows using other material, such as lexicons from Internet.</S>
			<S sid="149" ssid="13">In open tests, we use lexi cons obtained from various resources as described Corpus Abbrev.</S>
			<S sid="150" ssid="14">Encoding #Train words #Test Words OOV rate (%) UPenn Chinese Treebank CTB GB 250K 40K 18.1 Beijing University PK GB 1.1M 17K 6.9 Hong Kong City U HK Big 5 240K 35K 7.1 Academia Sinica AS Big 5 5.8M 12K 2.2 Table 1: Datasets statistics bin-Size M Markov order CTB 10 first-order + transitions PK 15 first-order + transitions HK 1 first-order AS 15 first-order + transitions Table 2: Optimal prior and Markov order setting in Section 3.1.</S>
			<S sid="151" ssid="15">In addition, we conduct cross-dataset tests, in which we train on one dataset and test on other datasets.</S>
			<S sid="152" ssid="16">5.2 Overall results.</S>
			<S sid="153" ssid="17">Final results of CRF based segmentation with newword detection are summarized in Table 3.</S>
			<S sid="154" ssid="18">The up per part of the table contains the closed test results, and the lower part contains the open test results.</S>
			<S sid="155" ssid="19">Each entry is the performance of the given metric (precision, recall, F1, and Roov) on the test set.</S>
			<S sid="156" ssid="20">Closed Precision Recall F1 Roov CTB 0.828 0.870 0.849 0.550 PK 0.935 0.947 0.941 0.660 HK 0.917 0.940 0.928 0.531 AS 0.950 0.962 0.956 0.292 Open Precision Recall F1 Roov CTB 0.889 0.898 0.894 0.619 PK 0.941 0.952 0.946 0.676 HK 0.944 0.948 0.946 0.629 AS 0.953 0.961 0.957 0.403 Table 3: Overall results of CRF segmentation on closed and open tests To compare our results against other systems, we summarize the competition results reported in (Sproat and Emerson, 2003) in Table 4.</S>
			<S sid="157" ssid="21">XXc and XXo indicate the closed and open runs on datasetXX respectively.</S>
			<S sid="158" ssid="22">Entries contain the F1 perfor mance of each participating site on different runs, with the best performance in bold.</S>
			<S sid="159" ssid="23">Our results are in the last row.</S>
			<S sid="160" ssid="24">Column SITE-AVG is the averageF1 performance over the datasets on which a site re ported results.</S>
			<S sid="161" ssid="25">Column OUR-AVG is the average F1 performance of our system over the same datasets.Comparing performance across systems is diffi cult since none of those systems reported results on all eight datasets (open and closed runs on 4 datasets).</S>
			<S sid="162" ssid="26">Nevertheless, several observations could be made from Table 4.</S>
			<S sid="163" ssid="27">First, no single system achieved best results in all tests.</S>
			<S sid="164" ssid="28">Only one site (S01)achieved two best runs (CTBc and PKc) with an av erage of 91.8% over 6 runs.</S>
			<S sid="165" ssid="29">S01 is one of the best segmentation systems in mainland China (Zhang et al., 2003).</S>
			<S sid="166" ssid="30">We also achieve two best runs (ASo and HKc), with a comparable average of 91.9% over the same 6 runs, and a 92.7% average over all the 8 runs.Second, performance varies significantly across dif ferent datasets, indicating that the four datasets havedifferent characteristics and use very different seg mentation guidelines.</S>
			<S sid="167" ssid="31">We also notice that the worstresults were obtained on CTB dataset for all systems.</S>
			<S sid="168" ssid="32">This is due to significant inconsistent segmen tation in training and testing (Sproat and Emerson, 2003).</S>
			<S sid="169" ssid="33">We verify this by another test.</S>
			<S sid="170" ssid="34">We randomly split the training data into 80% training and 20%testing, and run the experiments for 3 times, result ing in a testing F1 of 97.13%.</S>
			<S sid="171" ssid="35">Third, consider a comparison of our results with site S12, who use a sliding-window maximum entropy model (Xue, 2003).</S>
			<S sid="172" ssid="36">They participated in two datasets, with an average of 93.8%.</S>
			<S sid="173" ssid="37">Our average over the same two runs is 94.2%.</S>
			<S sid="174" ssid="38">This gives some empirical evidenceof the advantages of linear-chain CRFs over sliding window maximum entropy models, however, this comparison still requires further investigation sincethere are many factors that could affect the performance such as different features used in both sys tems.</S>
			<S sid="175" ssid="39">To further study the robustness of our approach to segmentation, we perform cross-testing?that is, training on one dataset and testing on other datasets.</S>
			<S sid="176" ssid="40">Table 5 summarizes these results, in which the rows are the training datasets and the columns are thetesting datasets.</S>
			<S sid="177" ssid="41">Not surprisingly, cross testing re sults are worse than the results using the same ASc ASo CTBc CTBo HKc HKo PKc PKo SITE-AVG OUR-AVG S01 93.8 88.1 88.1 90.1 95.1 95.3 91.8 91.9 S02 87.4 91.2 89.3 87.2 S03 87.2 82.9 88.6 92.5 87.8 93.6 S04 93.9 93.7 93.8 94.4 S05 94.2 73.2 89.4 85.6 91.5 S06 94.5 82.9 92.4 92.4 90.6 91.9 S07 94.0 94.0 94.6 S08 90.4 95.6 93.6 93.8 93.4 94.0 S09 96.1 94.6 95.4 94.9 S10 83.1 90.1 94.7 95.9 91.0 90.8 S11 90.4 88.4 87.9 88.6 88.8 93.6 S12 95.9 91.6 93.8 94.2 95.6 95.7 84.9 89.4 92.8 94.6 94.1 94.6 92.7 Table 4: Comparisons against other systems: the first column contains the 12 sites participating in bake-off competition; the second to the ninth columns contain their results on the 8 runs, where a bold entry is the winner of that run; column SITE-AVG contains the average performance of the site over the runs in which it participated, where a bold entry indicates that this site performs better than our system; column OUR-AVG is the average of our system over the same runs, where a bolded entry indicates our system performs better than the other site; the last row is the performance of our system over all the runs and the overall average.</S>
			<S sid="178" ssid="42">source as training due to different segmentationpolicies, with an exception on CTB where mod els trained on other datasets perform better than the model trained on CTB itself.</S>
			<S sid="179" ssid="43">This is due to the data problem mentioned above.</S>
			<S sid="180" ssid="44">Overall, CRFs perform robustly well across all datasets.</S>
			<S sid="181" ssid="45">From both Table 3 and 5, we see, as expected,improvement from closed tests to open tests, indicating the significant contribution of domain knowl edge lexicons.</S>
			<S sid="182" ssid="46">Closed CTB PK HK AS CTB 0.822 0.810 0.815 PK 0.816 0.824 0.830 HK 0.790 0.807 0.825 AS 0.890 0.844 0.864 Open CTB PK HK AS CTB 0.863 0.870 0.894 PK 0.852 0.862 0.871 HK 0.861 0.871 0.889 AS 0.898 0.867 0.871 Table 5: Crossing test of CRF segmentation 5.3 Effects of new word detection.</S>
			<S sid="183" ssid="47">Table 6 shows the effect of new word detection on the closed tests.</S>
			<S sid="184" ssid="48">An interesting observation is CTB PK HK AS w/o NWD 0.792 0.934 0.916 0.956 NWD 0.849 0.941 0.928 0.946 Table 6: New word detection effects: w/o NWD is the results without new word detection and NWD is the results with new word detection.</S>
			<S sid="185" ssid="49">that the improvement is monotonically related to the OOV rate (OOV rates are listed in Table 1).</S>
			<S sid="186" ssid="50">This is desirable because new word detection is most needed in situations that have high OOV rate.</S>
			<S sid="187" ssid="51">At low OOV rate, noisy new word detection can result in worse performance, as seen in the AS dataset.</S>
			<S sid="188" ssid="52">5.4 Error analysis and discussion.</S>
			<S sid="189" ssid="53">Several typical errors are observed in error anal ysis.</S>
			<S sid="190" ssid="54">One typical error is caused by inconsistent segmentation labeling in the test set.</S>
			<S sid="191" ssid="55">This is mostnotorious in CTB dataset.</S>
			<S sid="192" ssid="56">The second most typical error is in new, out-of-vocabulary words, especially proper names.</S>
			<S sid="193" ssid="57">Although our new word detec tion fixes many of these problems, it is not effectiveenough to recognize proper names well.</S>
			<S sid="194" ssid="58">One solution to this problem could use a named entity ex tractor to recognize proper names; this was found to be very helpful in Wu (2003).</S>
			<S sid="195" ssid="59">One of the most attractive advantages of CRFs (and maximum entropy models in general) is its the flexibility to easily incorporate arbitrary features,here in the form domain-knowledge-providing lex icons.</S>
			<S sid="196" ssid="60">However, obtaining these lexicons is not a trivial matter.</S>
			<S sid="197" ssid="61">The quality of lexicons can affect the performance of CRFs significantly.</S>
			<S sid="198" ssid="62">In addition, compared to simple models like n-gram language models (Teahan et al, 2000), another shortcomingof CRF-based segmenters is that it requires signifi cantly longer training time.</S>
			<S sid="199" ssid="63">However, training is a one-time process, and testing time is still linear in the length of the input.</S>
	</SECTION>
	<SECTION title="Conclusions. " number="6">
			<S sid="200" ssid="1">The contribution of this paper is three-fold.</S>
			<S sid="201" ssid="2">First, we apply CRFs to Chinese word segmentation and find that they achieve state-of-the art performance.Second, we propose a probabilistic new word de tection method that is integrated in segmentation, and show it to improve segmentation performance.</S>
			<S sid="202" ssid="3">Third, as far as we are aware, this is the first work to comprehensively evaluate on the four benchmark datasets, making a solid baseline for future research on Chinese word segmentation.</S>
			<S sid="203" ssid="4">AcknowledgmentsThis work was supported in part by the Center for Intelligent Information Retrieval, in part by The Cen tral Intelligence Agency, the National Security Agencyand National Science Foundation under NSF grant #IIS 0326249, and in part by SPAWARSYSCEN-SD grant number N66001-02-1-8903.</S>
	</SECTION>
</PAPER>
