<PAPER>
  <S sid="0">A New Dataset and Method for Automatically Grading ESOL Texts</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We demonstrate how supervised discriminative machine learning techniques can be used to automate the assessment of &#8216;English as a Second or Other Language&#8217; (ESOL) examination scripts.</S>
    <S sid="2" ssid="2">In particular, we use rank preference learning to explicitly model the grade relationships between scripts.</S>
    <S sid="3" ssid="3">A number of different features are extracted and ablation tests are used to investigate their contribution to overall performance.</S>
    <S sid="4" ssid="4">A comparison between regression and rank preference models further supports our method.</S>
    <S sid="5" ssid="5">Experimental results on the first publically available dataset show that our system can achieve levels of performance close to the upper bound for the task, as defined by the agreement between human examiners on the same corpus.</S>
    <S sid="6" ssid="6">Finally, using a set of &#8216;outlier&#8217; texts, we test the validity of our model and identify cases where the model&#8217;s scores diverge from that of a human examiner.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="7" ssid="1">The task of automated assessment of free text focuses on automatically analysing and assessing the quality of writing competence.</S>
    <S sid="8" ssid="2">Automated assessment systems exploit textual features in order to measure the overall quality and assign a score to a text.</S>
    <S sid="9" ssid="3">The earliest systems used superficial features, such as word and sentence length, as proxies for understanding the text.</S>
    <S sid="10" ssid="4">More recent systems have used more sophisticated automated text processing techniques to measure grammaticality, textual coherence, prespecified errors, and so forth.</S>
    <S sid="11" ssid="5">Deployment of automated assessment systems gives a number of advantages, such as the reduced workload in marking texts, especially when applied to large-scale assessments.</S>
    <S sid="12" ssid="6">Additionally, automated systems guarantee the application of the same marking criteria, thus reducing inconsistency, which may arise when more than one human examiner is employed.</S>
    <S sid="13" ssid="7">Often, implementations include feedback with respect to the writers&#8217; writing abilities, thus facilitating self-assessment and self-tutoring.</S>
    <S sid="14" ssid="8">Implicitly or explicitly, previous work has mostly treated automated assessment as a supervised text classification task, where training texts are labelled with a grade and unlabelled test texts are fitted to the same grade point scale via a regression step applied to the classifier output (see Section 6 for more details).</S>
    <S sid="15" ssid="9">Different techniques have been used, including cosine similarity of vectors representing text in various ways (Attali and Burstein, 2006), often combined with dimensionality reduction techniques such as Latent Semantic Analysis (LSA) (Landauer et al., 2003), generative machine learning models (Rudner and Liang, 2002), domain-specific feature extraction (Attali and Burstein, 2006), and/or modified syntactic parsers (Lonsdale and Strong-Krause, 2003).</S>
    <S sid="16" ssid="10">A recent review identifies twelve different automated free-text scoring systems (Williamson, 2009).</S>
    <S sid="17" ssid="11">Examples include e-Rater (Attali and Burstein, 2006), Intelligent Essay Assessor (IEA) (Landauer et al., 2003), IntelliMetric (Elliot, 2003; Rudner et al., 2006) and Project Essay Grade (PEG) (Page, 2003).</S>
    <S sid="18" ssid="12">Several of these are now deployed in highstakes assessment of examination scripts.</S>
    <S sid="19" ssid="13">Although there are many published analyses of the performance of individual systems, as yet there is no publically available shared dataset for training and testing such systems and comparing their performance.</S>
    <S sid="20" ssid="14">As it is likely that the deployment of such systems will increase, standardised and independent evaluation methods are important.</S>
    <S sid="21" ssid="15">We make such a dataset of ESOL examination scripts available1 (see Section 2 for more details), describe our novel approach to the task, and provide results for our system on this dataset.</S>
    <S sid="22" ssid="16">We address automated assessment as a supervised discriminative machine learning problem and particularly as a rank preference problem (Joachims, 2002).</S>
    <S sid="23" ssid="17">Our reasons are twofold: Discriminative classification techniques often outperform non-discriminative ones in the context of text classification (Joachims, 1998).</S>
    <S sid="24" ssid="18">Additionally, rank preference techniques (Joachims, 2002) allow us to explicitly learn an optimal ranking model of text quality.</S>
    <S sid="25" ssid="19">Learning a ranking directly, rather than fitting a classifier score to a grade point scale after training, is both a more generic approach to the task and one which exploits the labelling information in the training data efficiently and directly.</S>
    <S sid="26" ssid="20">Techniques such as LSA (Landauer and Foltz, 1998) measure, in addition to writing competence, the semantic relevance of a text written in response to a given prompt.</S>
    <S sid="27" ssid="21">However, although our corpus of manually-marked texts was produced by learners of English in response to prompts eliciting free-text answers, the marking criteria are primarily based on the accurate use of a range of different linguistic constructions.</S>
    <S sid="28" ssid="22">For this reason, we believe that an approach which directly measures linguistic competence will be better suited to ESOL text assessment, and will have the additional advantage that it may not require retraining for new prompts or tasks.</S>
    <S sid="29" ssid="23">As far as we know, this is the first application of a rank preference model to automated assessment (hereafter AA).</S>
    <S sid="30" ssid="24">In this paper, we report experiments on rank preference Support Vector Machines (SVMs) trained on a relatively small amount of data, on identification of appropriate feature types derived automatically from generic text processing tools, on comparison with a regression SVM model, and on the robustness of the best model to &#8216;outlier&#8217; texts.</S>
    <S sid="31" ssid="25">We report a consistent, comparable and replicable set of results based entirely on the new dataset and on public-domain tools and data, whilst also experimentally motivating some novel feature types for the AA task, thus extending the work described in (Briscoe et al., 2010).</S>
    <S sid="32" ssid="26">In the following sections we describe in more detail the dataset used for training and testing, the system developed, the evaluation methodology, as well as ablation experiments aimed at studying the contribution of different feature types to the AA task.</S>
    <S sid="33" ssid="27">We show experimentally that discriminative models with appropriate feature types can achieve performance close to the upper bound, as defined by the agreement between human examiners on the same test corpus.</S>
  </SECTION>
  <SECTION title="2 Cambridge Learner Corpus" number="2">
    <S sid="34" ssid="1">The Cambridge Learner Corpus2 (CLC), developed as a collaborative project between Cambridge University Press and Cambridge Assessment, is a large collection of texts produced by English language learners from around the world, sitting Cambridge Assessment&#8217;s English as a Second or Other Language (ESOL) examinations3.</S>
    <S sid="35" ssid="2">For the purpose of this work, we extracted scripts produced by learners taking the First Certificate in English (FCE) exam, which assesses English at an upper-intermediate level.</S>
    <S sid="36" ssid="3">The scripts, which are anonymised, are annotated using XML and linked to meta-data about the question prompts, the candidate&#8217;s grades, native language and age.</S>
    <S sid="37" ssid="4">The FCE writing component consists of two tasks asking learners to write either a letter, a report, an article, a composition or a short story, between 200 and 400 words.</S>
    <S sid="38" ssid="5">Answers to each of these tasks are annotated with marks (in the range 1&#8211;40), which have been fitted to a RASCH model (Fischer and Molenaar, 1995) to correct for inter-examiner inconsistency and comparability.</S>
    <S sid="39" ssid="6">In addition, an overall mark is assigned to both tasks, which is the one we use in our experiments.</S>
    <S sid="40" ssid="7">Each script has been also manually tagged with information about the linguistic errors committed, using a taxonomy of approximately 80 error types (Nicholls, 2003).</S>
    <S sid="41" ssid="8">The following is an example errorcoded sentence: In the morning, you are &lt;NS type = &#8220;TV&#8221;&gt; waken|woken&lt;/NS&gt; up by a singing puppy.</S>
    <S sid="42" ssid="9">In this sentence, TV denotes an incorrect tense of verb error, where waken can be corrected to woken.</S>
    <S sid="43" ssid="10">Our data consists of 1141 scripts from the year 2000 for training written by 1141 distinct learners, and 97 scripts from the year 2001 for testing written by 97 distinct learners.</S>
    <S sid="44" ssid="11">The learners&#8217; ages follow a bimodal distribution with peaks at approximately 16&#8211;20 and 26&#8211;30 years of age.</S>
    <S sid="45" ssid="12">The prompts eliciting the free text are provided with the dataset.</S>
    <S sid="46" ssid="13">However, in this paper we make no use of prompt information and do not make any attempt to check that the text answer is appropriate to the prompt.</S>
    <S sid="47" ssid="14">Our focus is on developing an accurate AA system for ESOL text that does not require prompt-specific or topic-specific training.</S>
    <S sid="48" ssid="15">There is no overlap between the prompts used in 2000 and in 2001.</S>
    <S sid="49" ssid="16">A typical prompt taken from the 2000 training dataset is shown below: Your teacher has asked you to write a story for the school&#8217;s English language magazine.</S>
    <S sid="50" ssid="17">The story must begin with the following words: &#8220;Unfortunately, Pat wasn&#8217;t very good at keeping secrets&#8221;.</S>
  </SECTION>
  <SECTION title="3 Approach" number="3">
    <S sid="51" ssid="1">We treat automated assessment of ESOL text (see Section 2) as a rank preference learning problem (see Section 1).</S>
    <S sid="52" ssid="2">In the experiments reported here we use Support Vector Machines (SVMs) (Vapnik, 1995) through the SVMlight package (Joachims, 1999).</S>
    <S sid="53" ssid="3">Using the dataset described in Section 2, a number of linguistic features are automatically extracted and their contribution to overall performance is investigated.</S>
    <S sid="54" ssid="4">SVMs have been extensively used for learning classification, regression and ranking functions.</S>
    <S sid="55" ssid="5">In its basic form, a binary SVM classifier learns a linear threshold function that discriminates data points of two categories.</S>
    <S sid="56" ssid="6">By using a different loss function, the e-insensitive loss function (Smola, 1996), SVMs can also perform regression.</S>
    <S sid="57" ssid="7">SVMs in regression mode estimate a function that outputs a real number based on the training data.</S>
    <S sid="58" ssid="8">In both cases, the model generalises by computing a hyperplane that has the largest (soft-)margin.</S>
    <S sid="59" ssid="9">In rank preference SVMs, the goal is to learn a ranking function which outputs a score for each data point, from which a global ordering of the data is constructed.</S>
    <S sid="60" ssid="10">This procedure requires a set R consisting of training samples xn and their target rankings rn: such that xi &gt;-R xj when ri &lt; rj, where 1 5 i,j 5 n and i =&#65533; j.</S>
    <S sid="61" ssid="11">A rank preference model is not trained directly on this set of data objects and their labels; rather a set of pair-wise difference vectors is created.</S>
    <S sid="62" ssid="12">The goal of a linear ranking model is to compute a weight vector w that maximises the number of correctly ranked pairs: This is equivalent to solving the following optimisation problem: The factor C allows a trade-off between the training error and the margin size, while &#65533;ij are nonnegative slack variables that measure the degree of misclassification.</S>
    <S sid="63" ssid="13">The optimisation problem is equivalent to that for the classification model on pair-wise difference vectors.</S>
    <S sid="64" ssid="14">In this case, generalisation is achieved by maximising the differences between closely-ranked data pairs.</S>
    <S sid="65" ssid="15">The principal advantage of applying rank preference learning to the AA task is that we explicitly model the grade relationships between scripts and do not need to apply a further regression step to fit the classifier output to the scoring scheme.</S>
    <S sid="66" ssid="16">The results reported in this paper are obtained by learning a linear classification function.</S>
    <S sid="67" ssid="17">We parsed the training and test data (see Section 2) using the Robust Accurate Statistical Parsing (RASP) system with the standard tokenisation and sentence boundary detection modules (Briscoe et al., 2006) in order to broaden the space of candidate features suitable for the task.</S>
    <S sid="68" ssid="18">The features used in our experiments are mainly motivated by the fact that lexical and grammatical features should be highly discriminative for the AA task.</S>
    <S sid="69" ssid="19">Our full feature set is as follows: Word unigrams and bigrams are lower-cased and used in their inflected forms.</S>
    <S sid="70" ssid="20">PoS unigrams, bigrams and trigrams are extracted using the RASP tagger, which uses the CLAWS4 tagset.</S>
    <S sid="71" ssid="21">The most probable posterior tag per word is used to construct PoS ngram features, but we use the RASP parser&#8217;s option to analyse words assigned multiple tags when the posterior probability of the highest ranked tag is less than 0.9, and the next n tags have probability greater than 150 of it.</S>
    <S sid="72" ssid="22">Based on the most likely parse for each identified sentence, we extract the rule names from the phrase structure (PS) tree.</S>
    <S sid="73" ssid="23">RASP&#8217;s rule names are semiautomatically generated and encode detailed information about the grammatical constructions found (e.g.</S>
    <S sid="74" ssid="24">V1/modal bse/+-, &#8216;a VP consisting of a modal auxiliary head followed by an (optional) adverbial phrase, followed by a VP headed by a verb with base inflection&#8217;).</S>
    <S sid="75" ssid="25">Moreover, rule names explicitly represent information about peripheral or rare constructions (e.g.</S>
    <S sid="76" ssid="26">S/pp-ap s-r, &#8216;a S with preposed PP with adjectival complement, e.g. for better or worse, he left&#8217;), as well as about fragmentary and likely extragrammatical sequences (e.g.</S>
    <S sid="77" ssid="27">T/txt-frag, &#8216;a text unit consisting of 2 or more subanalyses that cannot be combined using any rule in the grammar&#8217;).</S>
    <S sid="78" ssid="28">Therefore, we believe that many (longer-distance) grammatical constructions and errors found in texts can be (implicitly) captured by this feature type.</S>
    <S sid="79" ssid="29">In developing our AA system, a number of different grammatical complexity measures were extracted from parses, and their impact on the accuracy of the system was explored.</S>
    <S sid="80" ssid="30">For the experiments reported here, we use complexity measures representing the sum of the longest distance in word tokens between a head and dependent in a grammatical relation (GR) from the RASP GR output, calculated for each GR graph from the top 10 parses per sentence.</S>
    <S sid="81" ssid="31">In particular, we extract the mean and median values of these distances per sentence and use the maximum values per script.</S>
    <S sid="82" ssid="32">Intuitively, this feature captures information about the grammatical sophistication of the writer.</S>
    <S sid="83" ssid="33">However, it may also be confounded in cases where sentence boundaries are not identified through, for example, poor punctuation.</S>
    <S sid="84" ssid="34">Although the CLC contains information about the linguistic errors committed (see Section 2), we try to extract an error-rate in a way that doesn&#8217;t require manually tagged data.</S>
    <S sid="85" ssid="35">However, we also use an error-rate calculated from the CLC error tags to obtain an upper bound for the performance of an automated error estimator (true CLC error-rate).</S>
    <S sid="86" ssid="36">In order to estimate the error-rate, we build a trigram language model (LM) using ukWaC (ukWaC LM) (Ferraresi et al., 2008), a large corpus of English containing more than 2 billion tokens.</S>
    <S sid="87" ssid="37">Next, we extend our language model with trigrams extracted from a subset of the texts contained in the CLC (CLC LM).</S>
    <S sid="88" ssid="38">As the CLC contains texts produced by second language learners, we only extract frequently occurring trigrams from highly ranked scripts to avoid introducing erroneous ones to our language model.</S>
    <S sid="89" ssid="39">A word trigram in test data is counted as an error if it is not found in the language model.</S>
    <S sid="90" ssid="40">We compute presence/absence efficiently using a Bloom filter encoding of the language models (Bloom, 1970).</S>
    <S sid="91" ssid="41">Feature instances of types i and ii are weighted using the tf*idf scheme and normalised by the L2 norm.</S>
    <S sid="92" ssid="42">Feature type iii is weighted using frequency counts, while iii and iv are scaled so that their final value has approximately the same order of magnitude as i and ii.</S>
    <S sid="93" ssid="43">The script length is based on the number of words and is mainly added to balance the effect the length of a script has on other features.</S>
    <S sid="94" ssid="44">Finally, features whose overall frequency is lower than four are discarded from the model.</S>
  </SECTION>
  <SECTION title="4 Evaluation" number="4">
    <S sid="95" ssid="1">In order to evaluate our AA system, we use two correlation measures, Pearson&#8217;s product-moment correlation coefficient and Spearman&#8217;s rank correlation coefficient (hereafter Pearson&#8217;s and Spearman&#8217;s correlation respectively).</S>
    <S sid="96" ssid="2">Pearson&#8217;s correlation determines the degree to which two linearly dependent variables are related.</S>
    <S sid="97" ssid="3">As Pearson&#8217;s correlation is sensitive to the distribution of data and, due to outliers, its value can be misleading, we also report Spearman&#8217;s correlation.</S>
    <S sid="98" ssid="4">The latter is a nonparametric robust measure of association which is sensitive only to the ordinal arrangement of values.</S>
    <S sid="99" ssid="5">As our data contains some tied values, we calculate Spearman&#8217;s correlation by using Pearson&#8217;s correlation on the ranks.</S>
    <S sid="100" ssid="6">Table 1 presents the Pearson&#8217;s and Spearman&#8217;s correlation between the CLC scores and the AA system predicted values, when incrementally adding to the model the feature types described in Section 3.2.</S>
    <S sid="101" ssid="7">Each feature type improves the model&#8217;s performance.</S>
    <S sid="102" ssid="8">Extending our language model with frequent trigrams extracted from the CLC improves Pearson&#8217;s and Spearman&#8217;s correlation by 0.006 and 0.015 respectively.</S>
    <S sid="103" ssid="9">The addition of the error-rate obtained from the manually annotated CLC error tags on top of all the features further improves performance by 0.01 and 0.016.</S>
    <S sid="104" ssid="10">An evaluation of our best error detection method shows a Pearson correlation of 0.611 between the estimated and the true CLC error counts.</S>
    <S sid="105" ssid="11">This suggests that there is room for improvement in the language models we developed to estimate the error-rate.</S>
    <S sid="106" ssid="12">In the experiments reported hereafter, we use the ukWaC+CLC LM to calculate the error-rate.</S>
    <S sid="107" ssid="13">In order to assess the independent as opposed to the order-dependent additive contribution of each feature type to the overall performance of the system, we run a number of ablation tests.</S>
    <S sid="108" ssid="14">An ablation test consists of removing one feature of the system at a time and re-evaluating the model on the test set.</S>
    <S sid="109" ssid="15">Table 2 presents Pearson&#8217;s and Spearman&#8217;s correlation between the CLC and our system, when removing one feature at a time.</S>
    <S sid="110" ssid="16">All features have a positive effect on performance, while the error-rate has a big impact, as its absence is responsible for a 0.061 decrease of Spearman&#8217;s correlation.</S>
    <S sid="111" ssid="17">In addition, the removal of either the word ngrams, the PS rules, or the error-rate estimate contributes to a large decrease in Pearson&#8217;s correlation.</S>
    <S sid="112" ssid="18">In order to test the significance of the improved correlations, we ran one-tailed t-tests with a = 0.05 for the difference between dependent correlations (Williams, 1959; Steiger, 1980).</S>
    <S sid="113" ssid="19">The results showed that PoS ngrams, PS rules, the complexity measures, and the estimated error-rate contribute significantly to the improvement of Spearman&#8217;s correlation, while PS rules also contribute significantly to the improvement of Pearson&#8217;s correlation.</S>
    <S sid="114" ssid="20">One of the main approaches adopted by previous systems involves the identification of features that measure writing skill, and then the application of linear or stepwise regression to find optimal feature weights so that the correlation with manually assigned scores is maximised.</S>
    <S sid="115" ssid="21">We trained a SVM regression model with our full set of feature types and compared it to the SVM rank preference model.</S>
    <S sid="116" ssid="22">The results are given in Table 3.</S>
    <S sid="117" ssid="23">The rank preference model improves Pearson&#8217;s and Spearman&#8217;s correlation by 0.044 and 0.067 respectively, and these differences are significant, suggesting that rank preference is a more appropriate model for the AA task.</S>
    <S sid="118" ssid="24">Four senior and experienced ESOL examiners remarked the 97 FCE test scripts drawn from 2001 exams, using the marking scheme from that year (see Section 2).</S>
    <S sid="119" ssid="25">In order to obtain a ceiling for the performance of our system, we calculate the average correlation between the CLC and the examiners&#8217; scores, and find an upper bound of 0.796 and 0.792 Pearson&#8217;s and Spearman&#8217;s correlation respectively.</S>
    <S sid="120" ssid="26">In order to evaluate the overall performance of our system, we calculate its correlation with the four senior examiners in addition to the RASCH-adjusted CLC scores.</S>
    <S sid="121" ssid="27">Tables 4 and 5 present the results obtained.</S>
    <S sid="122" ssid="28">The average correlation of the AA system with the CLC and the examiner scores shows that it is close dicted values with the CLC and the examiners&#8217; scores, where E1 refers to the first examiner, E2 to the second etc. to the upper bound for the task.</S>
    <S sid="123" ssid="29">Human&#8211;machine agreement is comparable to that of human&#8211;human agreement, with the exception of Pearson&#8217;s correlation with examiner E4 and Spearman&#8217;s correlation with examiners E1 and E4, where the discrepancies are higher.</S>
    <S sid="124" ssid="30">It is likely that a larger training set and/or more consistent grading of the existing training data would help to close this gap.</S>
    <S sid="125" ssid="31">However, our system is not measuring some properties of the scripts, such as discourse cohesion or relevance to the prompt eliciting the text, that examiners will take into account.</S>
  </SECTION>
  <SECTION title="5 Validity tests" number="5">
    <S sid="126" ssid="1">The practical utility of an AA system will depend strongly on its robustness to subversion by writers who understand something of its workings and attempt to exploit this to maximise their scores (independently of their underlying ability).</S>
    <S sid="127" ssid="2">Surprisingly, there is very little published data on the robustness of existing systems.</S>
    <S sid="128" ssid="3">However, Powers et al. (2002) invited writing experts to trick the scoring capabilities of an earlier version of e-Rater (Burstein et al., 1998). e-Rater (see Section 6 for more details) assigns a score to a text based on linguistic feature types extracted using relatively domain-specific techniques.</S>
    <S sid="129" ssid="4">Participants were given a description of these techniques as well as of the cue words that the system uses.</S>
    <S sid="130" ssid="5">The results showed that it was easier to fool the system into assigning higher than lower scores.</S>
    <S sid="131" ssid="6">Our goal here is to determine the extent to which knowledge of the feature types deployed poses a threat to the validity of our system, where certain text generation strategies may give rise to large positive discrepancies.</S>
    <S sid="132" ssid="7">As mentioned in Section 2, the marking criteria for FCE scripts are primarily based on the accurate use of a range of different grammatical constructions relevant to specific communicative goals, but our system assesses this indirectly.</S>
    <S sid="133" ssid="8">We extracted 6 high-scoring FCE scripts from the CLC that do not overlap with our training and test data.</S>
    <S sid="134" ssid="9">Based on the features used by our system and without bias towards any modification, we modified each script in one of the following ways: ii.</S>
    <S sid="135" ssid="10">Swap words that have the same PoS within a sentence Although the above modifications do not exhaust the potential challenges a deployed AA system might face, they represent a threat to the validity of our system since we are using a highly related feature set.</S>
    <S sid="136" ssid="11">In total, we create 30 such &#8216;outlier&#8217; texts, which were given to an ESOL examiner for marking.</S>
    <S sid="137" ssid="12">Using the &#8216;outlier&#8217; scripts as well as their original/unmodified versions, we ran our system on each modification separately and calculated the correlation between the predicted values and the examiner&#8217;s scores.</S>
    <S sid="138" ssid="13">Table 6 presents the results.</S>
    <S sid="139" ssid="14">The predicted values of the system have a high correlation with the examiner&#8217;s scores when tested on &#8216;outlier&#8217; texts of modification types i(a), i(b) and i(c).</S>
    <S sid="140" ssid="15">However, as i(c) has a lower correlation compared to i(a) and i(b), it is likely that a random ordering of ngrams with N &gt; 3 will further decrease performance.</S>
    <S sid="141" ssid="16">A modification of type ii, where words with the same PoS within a sentence are swapped, results in a Pearson and Spearman correlation of 0.634 and 0.761 respectively.</S>
    <S sid="142" ssid="17">Analysis of the results showed that our system predicted higher scores than the ones assigned by the examiner.</S>
    <S sid="143" ssid="18">This can be explained by the fact that texts produced using modification type ii contain a small portion of correct sentences.</S>
    <S sid="144" ssid="19">However, the marking criteria are based on the overall writing quality.</S>
    <S sid="145" ssid="20">The final case, where correct sentences are randomly ordered, receives the lowest correlation.</S>
    <S sid="146" ssid="21">As our system is not measuring discourse cohesion, discrepancies are much higher; the system&#8217;s predicted scores are high whilst the ones assigned by the examiner are very low.</S>
    <S sid="147" ssid="22">However, for a writer to be able to generate text of this type already requires significant linguistic competence, whilst a number of generic methods for assessing text and/or discourse cohesion have been developed and could be deployed in an extended version of our system.</S>
    <S sid="148" ssid="23">It is also likely that highly creative &#8216;outlier&#8217; essays may give rise to large negative discrepancies.</S>
    <S sid="149" ssid="24">Recent comments in the British media have focussed on this issue, reporting that, for example, one deployed essay marking system assigned Winston Churchill&#8217;s speech &#8216;We Shall Fight on the Beaches&#8217; a low score because of excessive repetition5.</S>
    <S sid="150" ssid="25">Our model predicted a high passing mark for this text, but not the highest one possible, that some journalists clearly feel it deserves.</S>
  </SECTION>
  <SECTION title="6 Previous work" number="6">
    <S sid="151" ssid="1">In this section we briefly discuss a number of the more influential and/or better described approaches.</S>
    <S sid="152" ssid="2">P&#180;erez-Marin et al. (2009), Williamson (2009), Dikli (2006) and Valenti et al.</S>
    <S sid="153" ssid="3">(2003) provide a more detailed overview of existing AA systems.</S>
    <S sid="154" ssid="4">Project Essay Grade (PEG) (Page, 2003), one of the earliest systems, uses a number of manuallyidentified mostly shallow textual features, which are considered to be proxies for intrinsic qualities of writing competence.</S>
    <S sid="155" ssid="5">Linear regression is used to assign optimal feature weights that maximise the correlation with the examiner&#8217;s scores.</S>
    <S sid="156" ssid="6">The main issue with this system is that features such as word length and script length are easy to manipulate independently of genuine writing ability, potentially undermining the validity of the system.</S>
    <S sid="157" ssid="7">In e-Rater (Attali and Burstein, 2006), texts are represented using vectors of weighted features.</S>
    <S sid="158" ssid="8">Each feature corresponds to a different property of texts, such as an aspect of grammar, style, discourse and topic similarity.</S>
    <S sid="159" ssid="9">Additional features, representing stereotypical grammatical errors for example, are extracted using manually-coded task-specific detectors based, in part, on typical marking criteria.</S>
    <S sid="160" ssid="10">An unmarked text is scored based on the cosine similarity between its weighted vector and the ones in the training set.</S>
    <S sid="161" ssid="11">Feature weights and/or scores can be fitted to a marking scheme by stepwise or linear regression.</S>
    <S sid="162" ssid="12">Unlike our approach, e-Rater models discourse structure, semantic coherence and relevance to the prompt.</S>
    <S sid="163" ssid="13">However, the system contains manually developed task-specific components and requires retraining or tuning for each new prompt and assessment task.</S>
    <S sid="164" ssid="14">Intelligent Essay Assessor (IEA) (Landauer et al., 2003) uses Latent Semantic Analysis (LSA) (Landauer and Foltz, 1998) to compute the semantic similarity between texts, at a specific grade point, and a test text.</S>
    <S sid="165" ssid="15">In LSA, text is represented by a matrix, where rows correspond to words and columns to context (texts).</S>
    <S sid="166" ssid="16">Singular Value Decomposition (SVD) is used to obtain a reduced dimension matrix clustering words and contexts.</S>
    <S sid="167" ssid="17">The system is trained on topic and/or prompt specific texts while test texts are assigned a score based on the ones in the training set that are most similar.</S>
    <S sid="168" ssid="18">The overall score, which is calculated using regression techniques, is based on the content score as well as on other properties of texts, such as style, grammar, and so forth, though the methods used to assess these are not described in any detail in published work.</S>
    <S sid="169" ssid="19">Again, the system requires retraining or tuning for new prompts and assessment tasks.</S>
    <S sid="170" ssid="20">Lonsdale and Strong-Krause (2003) use a modified syntactic parser to analyse and score texts.</S>
    <S sid="171" ssid="21">Their method is based on a modified version of the Link Grammar parser (Sleator and Templerley, 1995) where the overall score of a text is calculated as the average of the scores assigned to each sentence.</S>
    <S sid="172" ssid="22">Sentences are scored on a five-point scale based on the parser&#8217;s cost vector, which roughly measures the complexity and deviation of a sentence from the parser&#8217;s grammatical model.</S>
    <S sid="173" ssid="23">This approach bears some similarities to our use of grammatical complexity and extragrammaticality features, but grammatical features represent only one component of our overall system, and of the task.</S>
    <S sid="174" ssid="24">The Bayesian Essay Test Scoring sYstem (BETSY) (Rudner and Liang, 2002) uses multinomial or Bernoulli Naive Bayes models to classify texts into different classes (e.g. pass/fail, grades A&#8211; F) based on content and style features such as word unigrams and bigrams, sentence length, number of verbs, noun&#8211;verb pairs etc.</S>
    <S sid="175" ssid="25">Classification is based on the conditional probability of a class given a set of features, which is calculated using the assumption that each feature is independent of the other.</S>
    <S sid="176" ssid="26">This system shows that treating AA as a text classification problem is viable, but the feature types are all fairly shallow, and the approach doesn&#8217;t make efficient use of the training data as a separate classifier is trained for each grade point.</S>
    <S sid="177" ssid="27">Recently, Chen et al. (2010) has proposed an unsupervised approach to AA of texts addressing the same topic, based on a voting algorithm.</S>
    <S sid="178" ssid="28">Texts are clustered according to their grade and given an initial Z-score.</S>
    <S sid="179" ssid="29">A model is trained where the initial score of a text changes iteratively based on its similarity with the rest of the texts as well as their Zscores.</S>
    <S sid="180" ssid="30">The approach might be better described as weakly supervised as the distribution of text grades in the training data is used to fit the final Z-scores to grades.</S>
    <S sid="181" ssid="31">The system uses a bag-of-words representation of text, so would be easy to subvert.</S>
    <S sid="182" ssid="32">Nevertheless, exploration of the trade-offs between degree of supervision required in training and grading accuracy is an important area for future research.</S>
  </SECTION>
  <SECTION title="7 Conclusions and future work" number="7">
    <S sid="183" ssid="1">Finally, we hope that the release of the training and test dataset described here will facilitate further research on the AA task for ESOL free text and, in particular, precise comparison of different systems, feature types, and grade fitting methods.</S>
    <S sid="184" ssid="2">Though many of the systems described in Section 6 have been shown to correlate well with examiners&#8217; marks on test data in many experimental contexts, no cross-system comparisons are available because of the lack of a shared training and test dataset.</S>
    <S sid="185" ssid="3">Furthermore, none of the published work of which we are aware has systematically compared the contribution of different feature types to the AA task, and only one (Powers et al., 2002) assesses the ease with which the system can be subverted given some knowledge of the features deployed.</S>
    <S sid="186" ssid="4">We have shown experimentally how rank preference models can be effectively deployed for automated assessment of ESOL free-text answers.</S>
    <S sid="187" ssid="5">Based on a range of feature types automatically extracted using generic text processing techniques, our system achieves performance close to the upper bound for the task.</S>
    <S sid="188" ssid="6">Ablation tests highlight the contribution of each feature type to the overall performance, while significance of the resulting improvements in correlation with human scores has been calculated.</S>
    <S sid="189" ssid="7">A comparison between regression and rank preference models further supports our approach.</S>
    <S sid="190" ssid="8">Preliminary experiments based on a set of &#8216;outlier&#8217; texts have shown the types of texts for which the system&#8217;s scoring capability can be undermined.</S>
    <S sid="191" ssid="9">We plan to experiment with better error detection techniques, since the overall error-rate of a script is one of the most discriminant features.</S>
    <S sid="192" ssid="10">Briscoe et al. (2010) describe an approach to automatic offprompt detection which does not require retraining for each new question prompt and which we plan to integrate with our system.</S>
    <S sid="193" ssid="11">It is clear from the &#8216;outlier&#8217; experiments reported here that our system would benefit from features assessing discourse coherence, and to a lesser extent from features assessing semantic (selectional) coherence over longer bounds than those captured by ngrams.</S>
    <S sid="194" ssid="12">The addition of an incoherence metric to the feature set of an AA system has been shown to improve performance significantly (Miltsakaki and Kukich, 2000; Miltsakaki and Kukich, 2004).</S>
  </SECTION>
  <SECTION title="Acknowledgements" number="8">
    <S sid="195" ssid="1">We would like to thank Cambridge ESOL, a division of Cambridge Assessment, for permission to use and distribute the examination scripts.</S>
    <S sid="196" ssid="2">We are also grateful to Cambridge Assessment for arranging for the test scripts to be remarked by four of their senior examiners.</S>
    <S sid="197" ssid="3">Finally, we would like to thank Marek Rei, &#216;istein Andersen and the anonymous reviewers for their useful comments.</S>
  </SECTION>
</PAPER>
