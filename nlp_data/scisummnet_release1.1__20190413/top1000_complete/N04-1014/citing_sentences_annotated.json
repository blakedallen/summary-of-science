[
  {
    "citance_No": 1, 
    "citing_paper_id": "P05-1067", 
    "citing_paper_authority": 63, 
    "citing_paper_authors": "Yuan, Ding | Martha, Palmer", 
    "raw_text": "Graehl and Knight (2004 )de fined training and decoding algorithms for both generalized tree-to-tree and tree-to-string transducers", 
    "clean_text": "Graehl and Knight (2004) defined training and decoding algorithms for both generalized tree-to-tree and tree-to-string transducers.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "P14-2024", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Graham, Neubig | Kevin, Duh", 
    "raw_text": "In our experiments, we use a translation model based on T2S tree transducers (Graehl and Knight,2004), constructed using the Travatar toolkit (Neu big, 2013)", 
    "clean_text": "In our experiments, we use a translation model based on T2S tree transducers (Graehl and Knight,2004), constructed using the Travatar toolkit (Neu big, 2013).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "W06-3601", 
    "citing_paper_authority": 37, 
    "citing_paper_authors": "Liang, Huang | Kevin, Knight | Aravind K., Joshi", 
    "raw_text": "Similarly, in the tree-transducer terminology, Graehl and Knight (2004) define extended tree transducers that have multi-level trees on the source-side. Since an SD translator separates the source language analysis from the recursive transformation, the domains of locality in these two modules are orthogonal to each other: in this work, we use a CFG based Treebank parser but focuses on the extended domain in the recursive converter", 
    "clean_text": "Similarly, in the tree-transducer terminology, Graehl and Knight (2004) define extended tree transducers that have multi-level trees on the source-side.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "W06-3601", 
    "citing_paper_authority": 37, 
    "citing_paper_authors": "Liang, Huang | Kevin, Knight | Aravind K., Joshi", 
    "raw_text": "In this section, we define the formal machinery of our recursive transformation model as a special case of x Rs transducers (Graehl and Knight, 2004) that has only one state, and each rule is linear (L) and non-deleting (N) with regarding to variables in the source and target sides (henth the name 1-xRLNs)", 
    "clean_text": "In this section, we define the formal machinery of our recursive transformation model as a special case of xRs transducers (Graehl and Knight, 2004) that has only one state, and each rule is linear (L) and non-deleting (N) with regarding to variables in the source and target sides (henth the name 1-xRLNs).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "C08-5001", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Liang, Huang", 
    "raw_text": "Graehl and Knight (2004) present an implementation that runs in time O (V log V+ E) using the method described in Algorithm 5 to ensure that every hyper edge is visited only once (assuming the priority queue is implemented as a Fibonaaci heap; for binary heap, it runs in O ((V+ E) log V))", 
    "clean_text": "Graehl and Knight (2004) present an implementation that runs in time O (V log V+ E) using the method described in Algorithm 5 to ensure that every hyperedge is visited only once (assuming the priority queue is implemented as a Fibonaaci heap; for binary heap, it runs in O ((V+ E) log V)).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "W07-0709", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Jiadong, Sun | Tiejun, Zhao | Huashen, Liang", 
    "raw_text": "Graehl and Knight (2004) described the use of tree transducers for natural language processing and addressed the training problems for this kind of transducers", 
    "clean_text": "Graehl and Knight (2004) described the use of tree transducers for natural language processing and addressed the training problems for this kind of transducers.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "P08-1066", 
    "citing_paper_authority": 79, 
    "citing_paper_authors": "Libin, Shen | Jinxi, Xu | Ralph M., Weischedel", 
    "raw_text": "Graehl and Knight (2004) proposed the use of target tree-to-source-string transducers (x Rs) to model translation", 
    "clean_text": "Graehl and Knight (2004) proposed the use of target tree-to-source-string transducers (xRs) to model translation.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "D09-1136", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Ding, Liu | Daniel, Gildea", 
    "raw_text": "The recomposed templates are then re-estimated using the EM algorithm described in Graehl and Knight (2004)", 
    "clean_text": "The recomposed templates are then re-estimated using the EM algorithm described in Graehl and Knight (2004).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "P06-1121", 
    "citing_paper_authority": 153, 
    "citing_paper_authors": "Michel, Galley | Jonathan, Graehl | Kevin, Knight | Daniel, Marcu | Steve, DeNeefe | Wei, Wang | Ignacio, Thayer", 
    "raw_text": "It is appealing to model the transformation of pi into f using tree-to-string (x Rs) transducers, since their theory has been worked out in an extensive literature and is well understood (see ,e.g., (Graehl and Knight, 2004))", 
    "clean_text": "It is appealing to model the transformation of pi into f using tree-to-string (xRs) transducers, since their theory has been worked out in an extensive literature and is well understood (see, e.g., (Graehl and Knight, 2004)).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "P06-1121", 
    "citing_paper_authority": 153, 
    "citing_paper_authors": "Michel, Galley | Jonathan, Graehl | Kevin, Knight | Daniel, Marcu | Steve, DeNeefe | Wei, Wang | Ignacio, Thayer", 
    "raw_text": "While it is infeasible to enumerate the millions of derivations in each forest, Graehl and Knight (2004) demonstrate an efficient algorithm. They also analyze how to train arbitrary tree transducers into two steps", 
    "clean_text": "While it is infeasible to enumerate the millions of derivations in each forest, Graehl and Knight (2004) demonstrate an efficient algorithm.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "I08-1067", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Ananthakrishnan, Ramanathan | Jayprasad, Hegde | Ritesh M., Shah | Pushpak, Bhattacharyya | Sasikumar, M", 
    "raw_text": "Yamada and Knight (2001) propose a model that transforms target language parse trees to source language strings by applying reordering, insertion, and translation operations at each node of the tree. Graehl and Knight (2004) and Melamed (2004), propose methods based on tree-to-tree mappings", 
    "clean_text": "Graehl and Knight (2004) and Melamed (2004), propose methods based on tree-to-tree mappings.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "W10-2503", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Andreas, Maletti | Giorgio, Satta", 
    "raw_text": "WXTTs have been proposed by Graehl and Knight (2004) and Knight (2007) and are rooted in similar devices introduced ear lier in the formal language literature (Arnold and Dauchet, 1982)", 
    "clean_text": "WXTTs have been proposed by Graehl and Knight (2004) and Knight (2007) and are rooted in similar devices introduced earlier in the formal language literature (Arnold and Dauchet, 1982).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "W10-2503", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Andreas, Maletti | Giorgio, Satta", 
    "raw_text": "Note that our semanticsis equivalent to the classical term rewriting semantics, which is presented by Graehl and Knight (2004) and Graehl et al (2008), for example", 
    "clean_text": "Note that our semantics is equivalent to the classical term rewriting semantics, which is presented by Graehl and Knight (2004) and Graehl et al (2008), for example.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "C10-1081", 
    "citing_paper_authority": 18, 
    "citing_paper_authors": "Ding, Liu | Daniel, Gildea", 
    "raw_text": "The formal description of a TTS transducer is given by Graehl and Knight (2004), and our baseline approach follows the Extended Tree-to-String Transducer defined by Huang et al (2006)", 
    "clean_text": "The formal description of a TTS transducer is given by Graehl and Knight (2004), and our baseline approach follows the Extended Tree-to-String Transducer defined by Huang et al (2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "C10-1081", 
    "citing_paper_authority": 18, 
    "citing_paper_authors": "Ding, Liu | Daniel, Gildea", 
    "raw_text": "The standard inside outside algorithm (Graehl and Knight, 2004) can be used to compute the expected counts of the TTS templates", 
    "clean_text": "The standard inside outside algorithm (Graehl and Knight, 2004) can be used to compute the expected counts of the TTS templates.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "P06-1077", 
    "citing_paper_authority": 122, 
    "citing_paper_authors": "Yang, Liu | Qun, Liu | Shouxun, Lin", 
    "raw_text": "Graehl and Knight (2004) describe training and decoding algorithms for both generalized tree-to-tree and tree-to-string transducers", 
    "clean_text": "Graehl and Knight (2004) describe training and decoding algorithms for both generalized tree-to-tree and tree-to-string transducers.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "W06-1628", 
    "citing_paper_authority": 20, 
    "citing_paper_authors": "Brooke, Cowan | Ivona, Kucerova | Michael John, Collins", 
    "raw_text": "Wu (1997) and Alshawi (1996) describe early work on formalisms that make use of transductive grammars; Graehl and Knight (2004) describe methods for training tree transducers", 
    "clean_text": "Graehl and Knight (2004) describe methods for training tree transducers.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "D07-1038", 
    "citing_paper_authority": 12, 
    "citing_paper_authors": "Jonathan, May | Kevin, Knight", 
    "raw_text": "Such an algorithm is presented by Graehl and Knight (2004)", 
    "clean_text": "Such an algorithm is presented by Graehl and Knight (2004).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "D07-1038", 
    "citing_paper_authority": 12, 
    "citing_paper_authors": "Jonathan, May | Kevin, Knight", 
    "raw_text": "The algorithm consists of two components: DERIV, which is a procedure for constructing a packed forest of derivation trees of rules that explain a (tree, string) bi text corpus given that corpus and a rule set, and TRAIN, which is an iterative parameter-setting procedure. We initially attempted to use the top-down DE RIV algorithm of Graehl and Knight (2004), but as the constraints of the derivation forests are largely lexical, too much time was spent on exploring dead ends", 
    "clean_text": "We initially attempted to use the top-down DERIV algorithm of Graehl and Knight (2004), but as the constraints of the derivation forests are largely lexical, too much time was spent on exploring dead ends.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "D07-1038", 
    "citing_paper_authority": 12, 
    "citing_paper_authors": "Jonathan, May | Kevin, Knight", 
    "raw_text": "The actual running of EM iterations (which directly implements the TRAIN algorithm of Graehl and Knight (2004)) 1In the cases where a rule is not synchronous-binarizablestandard left-right binarization is performed and proper permutation of the disjoint English tree spans must be verified when building the part of the chart that uses this rule", 
    "clean_text": "The actual running of EM iterations (which directly implements the TRAIN algorithm of Graehl and Knight (2004)).", 
    "keep_for_gold": 0
  }
]
