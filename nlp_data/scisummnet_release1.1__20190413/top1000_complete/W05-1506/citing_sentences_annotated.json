[
  {
    "citance_No": 1, 
    "citing_paper_id": "N06-1045", 
    "citing_paper_authority": 10, 
    "citing_paper_authors": "Jonathan, May | Kevin, Knight", 
    "raw_text": "We will present an algorithm for determinizing weighted finite tree recognizers, and use a variant of the procedure found in (Huang and Chiang, 2005) to obtain -best lists of trees that are weighted correctly and contain no repetition", 
    "clean_text": "We will present an algorithm for determinizing weighted finite tree recognizers, and use a variant of the procedure found in (Huang and Chiang, 2005) to obtain -best lists of trees that are weighted correctly and contain no repetition.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "N06-1045", 
    "citing_paper_authority": 10, 
    "citing_paper_authors": "Jonathan, May | Kevin, Knight", 
    "raw_text": "We remove cycles from each 355 Algorithm 1: Weighted Determinization of Tree Automata Input: BOTTOM-UP TREE-TO-WEIGHT TRANSDUCER. Output: SUBSEQUENTIAL BOTTOM-UP TREE-TO-WEIGHT TRANSDUCER .begin1 2 3 PRIORITY QUEUE4 5 6 ENQUEUE7 while do8 v head9 v10 for each v such that do11 if such that then12 s.t.13 14 for each such that v do15 v v16 v v v v s.t.17 v v v18 /* RANK returns the largest hyper edge size that can leave state. COMBINATIONS returns all possible vectors of length containing members of and at least one member of. */ if v is a new state then19 for each u COMBINATIONS v v RANK do 20 if u is a new vector then21 ENQUEUEu22v23 DEQUEUE24end25forest,3 apply our determinization algorithm, and ex tract the -best trees using a variant of (Huang and Chiang, 2005)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "W12-0902", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Margaux, Smets | Rens, Bod", 
    "raw_text": "We follow the third algorithm in Huang and Chiang (2005), where first a traditional Viterbi-chart is created, which enumerates in an efficient way all possible sub derivations", 
    "clean_text": "We follow the third algorithm in Huang and Chiang (2005), where first a traditional Viterbi-chart is created, which enumerates in an efficient way all possible sub derivations.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "P11-1003", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Xianchao, Wu | Takuya, Matsuzaki | Jun'ichi, Tsujii", 
    "raw_text": "In terms of decoding time, even though we used Algorithm 3 described in (Huang and Chiang, 2005), which lazily generated the N-best translation candidates, the decoding time tended to be increased because more rules were available during cube pruning", 
    "clean_text": "In terms of decoding time, even though we used Algorithm 3 described in (Huang and Chiang, 2005), which lazily generated the N-best translation candidates, the decoding time tended to be increased because more rules were available during cube pruning.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "D11-1004", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Michel, Galley | Chris, Quirk", 
    "raw_text": "S. The latter function uses bi nary lazy enumeration in a manner similar to (Huang and Chiang, 2005), and relies on two global variables: I and L. The first of these, I, is used to memoize the results of calls to GETNEXTBEST; given a range of sentences and a rank n, it stores the nth best combination for that range of sentences", 
    "clean_text": "The latter function uses bi nary lazy enumeration in a manner similar to (Huang and Chiang, 2005), and relies on two global variables: I and L.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "P13-1045", 
    "citing_paper_authority": 28, 
    "citing_paper_authors": "Richard, Socher | John, Bauer | Christopher D., Manning | Andrew Y., Ng", 
    "raw_text": "The k= 200-best parses at the top cell of the chart are calculated using the efficient algorithm of (Huang and Chiang, 2005)", 
    "clean_text": "The k= 200-best parses at the top cell of the chart are calculated using the efficient algorithm of (Huang and Chiang, 2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "D09-1161", 
    "citing_paper_authority": 14, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Chew Lim, Tan | Haizhou, Li", 
    "raw_text": "This technique utilizes a bunch of linguistic features to re-rank the k-best (Huang and Chiang 2005) output on the forest level or tree level", 
    "clean_text": "This technique utilizes a bunch of linguistic features to re-rank the k-best (Huang and Chiang 2005) output on the forest level or tree level.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "P06-1109", 
    "citing_paper_authority": 21, 
    "citing_paper_authors": "Rens, Bod", 
    "raw_text": "We could also have used the more efficient k-best hyper graph parsing technique by Huang and Chiang (2005), but we have not yet incorporated this into our implementation", 
    "clean_text": "We could also have used the more efficient k-best hyper graph parsing technique by Huang and Chiang (2005), but we have not yet incorporated this into our implementation.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "C10-1051", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Yanqing, He | Yu, Zhou | Chengqing, Zong | Huilin, Wang", 
    "raw_text": "N-best list not the lazy algorithm of (Huang and Chiang, 2005)", 
    "clean_text": "N-best list not the lazy algorithm of (Huang and Chiang, 2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "P10-1033", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Shujie, Liu | Chi-Ho, Li | Ming, Zhou", 
    "raw_text": "It is found to be well handled by the K-Best parsing method in Huang and Chiang (2005)", 
    "clean_text": "It is found to be well handled by the K-Best parsing method in Huang and Chiang (2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "W10-2501", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Zolt&aacute;n, F&uuml;l&ouml;p | Andreas, Maletti | Heiko, Vogler", 
    "raw_text": "Those weighted tree languages are recognizable and there exist algorithms (Huang and Chiang, 2005) that efficiently extract the k-best parse trees (i.e., those with the highest probability) for further processing. In this paper we consider synchronized tree substitution grammars (STSG)", 
    "clean_text": "Those weighted tree languages are recognizable and there exist algorithms (Huang and Chiang, 2005) that efficiently extract the k-best parse trees (i.e., those with the highest probability) for further processing.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "W12-4410", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Waleed, Ammar | Noah A., Smith | Chris, Dyer", 
    "raw_text": "k-best lists are extracted from the CRF trellis using the lazy enumeration algorithm of Huang and Chiang (2005)", 
    "clean_text": "k-best lists are extracted from the CRF trellis using the lazy enumeration algorithm of Huang and Chiang (2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "C10-1036", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Nan, Duan | Mu, Li | Dongdong, Zhang | Ming, Zhou", 
    "raw_text": "Translation hyper graphs are generated by each baseline system during the MAPde coding phase, and 1000-best lists used for MERT algorithm are extracted from hyper graphs by the k-best parsing algorithm (Huang and Chiang, 2005)", 
    "clean_text": "Translation hyper graphs are generated by each baseline system during the MAPde coding phase, and 1000-best lists used for MERT algorithm are extracted from hyper graphs by the k-best parsing algorithm (Huang and Chiang, 2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "P10-4002", 
    "citing_paper_authority": 67, 
    "citing_paper_authors": "Chris, Dyer | Adam, Lopez | Juri, Ganitkevitch | Jonathan, Weese | Ferhan, Ture | Philip, Blunsom | Hendra, Setiawan | Vladimir, Eidelman | Philip, Resnik", 
    "raw_text": "Although Viterbi and k-best extraction algorithms are often expressed as INSIDE algorithms with the tropical semiring ,cdec provides a separate derivation extraction framework that makes use of a &lt; operator (Huang and Chiang, 2005)", 
    "clean_text": "Although Viterbi and k-best extraction algorithms are often expressed as INSIDE algorithms with the tropical semiring ,cdec provides a separate derivation extraction framework that makes use of a &lt; operator (Huang and Chiang, 2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "P09-1108", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Adam, Pauls | Dan, Klein", 
    "raw_text": "The amount of work done in the k-best phase is no more than the amount of work done by the algorithm of Huang and Chiang (2005)", 
    "clean_text": "The amount of work done in the k-best phase is no more than the amount of work done by the algorithm of Huang and Chiang (2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "P09-1108", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Adam, Pauls | Dan, Klein", 
    "raw_text": "In a certain sense, described in greater detail below, this precomputation of exact heuristics is equivalent to the k-best extraction algorithm of Huang and Chiang (2005)", 
    "clean_text": "In a certain sense, described in greater detail below, this precomputation of exact heuristics is equivalent to the k-best extraction algorithm of Huang and Chiang (2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "P09-1108", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Adam, Pauls | Dan, Klein", 
    "raw_text": "By exploiting a local ordering amongst derivations, we can be more conservative about combination and gain the advantages of a lazy successor function (Huang and Chiang, 2005)", 
    "clean_text": "By exploiting a local ordering amongst derivations, we can be more conservative about combination and gain the advantages of a lazy successor function (Huang and Chiang, 2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "P09-1108", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Adam, Pauls | Dan, Klein", 
    "raw_text": "used by Huang and Chiang (2005)", 
    "clean_text": "This triggering is similar to the lazy frontier used by Huang and Chiang (2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "P09-1108", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Adam, Pauls | Dan, Klein", 
    "raw_text": "to the approach of Huang and Chiang (2005), which we will call EXH (see below for more explanation) since it requires exhaustive parsing in the bottom-up pass", 
    "clean_text": "As a baseline, we compared KA\u2217 to the approach of Huang and Chiang (2005), which we will call EXH (see below for more explanation) since it requires exhaustive parsing in the bottom-up pass.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "P09-1108", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Adam, Pauls | Dan, Klein", 
    "raw_text": "While formulated very differently, one limiting case of our algorithm relates closely to the EXHalgorithm of Huang and Chiang (2005)", 
    "clean_text": "While formulated very differently, one limiting case of our algorithm relates closely to the EXH algorithm of Huang and Chiang (2005).", 
    "keep_for_gold": 0
  }
]
