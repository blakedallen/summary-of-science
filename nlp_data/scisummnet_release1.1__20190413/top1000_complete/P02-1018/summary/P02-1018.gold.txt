A Simple Pattern-Matching Algorithm For Recovering Empty Nodes And Their Antecedents
This paper describes a simple pattern matching algorithm for recovering empty nodes and identifying their co-indexed antecedents in phrase structure trees that do not contain this information.
The patterns are minimal connected tree fragments containing an empty node and all other nodes co-indexed with it.
This paper also proposes an evaluation procedure for empty node recovery procedures which is independent of most of the details of phrase structure, which makes it possible to compare the performance of empty node recovery on parser output with the empty node annotations in a gold standard corpus.
Evaluating the algorithm on the output of Charniakâ€™s parser (Charniak, 2000) and the Penn treebank (Marcus et al., 1993) shows that the pattern matching algorithm does surprisingly well on the most frequently occuring types of empty nodes given its simplicity.
We propose an algorithm that is able to find long-distance dependencies, as a post processing step, after parsing.
While Charniak's parser does not generate empty category information, we have developed an algorithm that extracts patterns from the Treebank which can be used to insert empty categories into the parser's output.
It is the first post-processing approach to non-local dependency recovery, using a simple pattern-matching algorithm on context-free trees.
