[
  {
    "citance_No": 1, 
    "citing_paper_id": "W97-0908", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Michael, Gamon | Carmen, Lozano | Jessie, Pinkham | Tom, Reutter", 
    "raw_text": "Principle-based parsers are also designed with universal grammar in mind (Lin 1994), but have yet to demonstrate large scale coverage in several anguages", 
    "clean_text": "Principle-based parsers are also designed with universal grammar in mind (Lin 1994), but have yet to demonstrate large scale coverage in several languages.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "C10-1112", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Shuming, Shi | Huibin, Zhang | Xiaojie, Yuan | Ji-Rong, Wen", 
    "raw_text": "In this paper, we adopt Minipar (Lin, 1994) to parse sentences and to construct syntactic trees", 
    "clean_text": "In this paper, we adopt Minipar (Lin, 1994) to parse sentences and to construct syntactic trees.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "P06-2014", 
    "citing_paper_authority": 23, 
    "citing_paper_authors": "Colin, Cherry | Dekang, Lin", 
    "raw_text": "English dependency trees are provided by Minipar (Lin, 1994)", 
    "clean_text": "English dependency trees are provided by Minipar (Lin, 1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "W07-1419", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Gaston G., Burek | Christian, Pietsch | Anne N., De Roeck", 
    "raw_text": "It is based on Principar, which is described in Lin (1994)", 
    "clean_text": "It is based on Principar, which is described in Lin (1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "N03-4011", 
    "citing_paper_authority": 4, 
    "citing_paper_authors": "Patrick, Pantel | Dekang, Lin", 
    "raw_text": "These features are obtained by parsing a large corpus using Minipar (Lin 1994), a broad-coverage English parser", 
    "clean_text": "These features are obtained by parsing a large corpus using Minipar (Lin 1994), a broad-coverage English parser.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "N04-1041", 
    "citing_paper_authority": 43, 
    "citing_paper_authors": "Patrick, Pantel | Deepak, Ravichandran", 
    "raw_text": "We used Minipar (Lin 1994), a broad coverage parser, to parse 3GB of newspaper text from the Aquaint (TREC-9) collection", 
    "clean_text": "We used Minipar (Lin 1994), a broad coverage parser, to parse 3GB of newspaper text from the Aquaint (TREC-9) collection.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "P06-1112", 
    "citing_paper_authority": 10, 
    "citing_paper_authors": "Dan, Shen | Dietrich, Klakow", 
    "raw_text": "We parse questions and candidate sentences with MiniPar (Lin, 1994), a fast and robust parser for grammatical dependency relations", 
    "clean_text": "We parse questions and candidate sentences with MiniPar (Lin, 1994), a fast and robust parser for grammatical dependency relations.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "C02-1144", 
    "citing_paper_authority": 29, 
    "citing_paper_authors": "Dekang, Lin | Patrick, Pantel", 
    "raw_text": "We used Minipar 1 (Lin 1994), a broad coverage English parser, to parse about 1GB (144M words) of newspaper text from the TREC collection (1988 AP Newswire, 1989-90 LA Times, and 1991 San Jose Mercury) at a speed of about 500words/second on a PIII-750 with 512MB memory", 
    "clean_text": "We used Minipar (Lin 1994), a broad coverage English parser, to parse about 1GB (144M words) of newspaper text from the TREC collection (1988 AP Newswire, 1989-90 LA Times, and 1991 San Jose Mercury) at a speed of about 500words/second on a PIII-750 with 512MB memory.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "P05-1077", 
    "citing_paper_authority": 33, 
    "citing_paper_authors": "Deepak, Ravichandran | Patrick, Pantel | Eduard, Hovy", 
    "raw_text": "We parse a 6 GB newspaper (TREC9 and TREC2002 collection) corpus using the dependency parser Minipar (Lin, 1994)", 
    "clean_text": "We parse a 6 GB newspaper (TREC9 and TREC 2002 collection) corpus using the dependency parser Minipar (Lin, 1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "C04-1111", 
    "citing_paper_authority": 29, 
    "citing_paper_authors": "Patrick, Pantel | Deepak, Ravichandran | Eduard, Hovy", 
    "raw_text": "For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set", 
    "clean_text": "For the co-occurrence model, we used Minipar (Lin 1994), a broad coverage parser, to parse each data set.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "C08-2033", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Vishnu, Vyas | Patrick, Pantel", 
    "raw_text": "tive Properties For the algorithm discussed in Section 4.1, we derived our descriptive properties using the output of the dependency analysis generated by the Minipar (Lin, 1994) dependency parser", 
    "clean_text": "For the algorithm discussed in Section 4.1, we derived our descriptive properties using the output of the dependency analysis generated by the Minipar (Lin, 1994) dependency parser.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "E06-1019", 
    "citing_paper_authority": 4, 
    "citing_paper_authors": "Colin, Cherry | Dekang, Lin", 
    "raw_text": "English dependency trees are supplied by Minipar (Lin, 1994)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "P00-1014", 
    "citing_paper_authority": 19, 
    "citing_paper_authors": "Patrick, Pantel | Dekang, Lin", 
    "raw_text": "We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994)", 
    "clean_text": "We parsed a 125-million word newspaper corpus with Minipar3, a descendent of Principar (Lin, 1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "P05-1016", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Patrick, Pantel", 
    "raw_text": "We used Minipar (Lin 1994), a broad coverage parser, to analyze text", 
    "clean_text": "We used Minipar (Lin 1994), a broad coverage parser, to analyze text.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "P05-1016", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Patrick, Pantel", 
    "raw_text": "We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002)", 
    "clean_text": "We used Minipar (Lin 1994), a broad coverage parser, to parse two 3GB corpora (TREC-9 and TREC-2002).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "P08-1009", 
    "citing_paper_authority": 21, 
    "citing_paper_authors": "Colin, Cherry", 
    "raw_text": "English dependency trees are provided by Minipar (Lin, 1994)", 
    "clean_text": "English dependency trees are provided by Minipar (Lin, 1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "P07-1057", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Samuel, Brody", 
    "raw_text": "The Simplified Clause: In order to extract clauses from the text, we use Lin? s parser MINI PAR (Lin, 1994)", 
    "clean_text": "The Simplified Clause: In order to extract clauses from the text, we use Lin's parser MINI PAR (Lin, 1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "D07-1002", 
    "citing_paper_authority": 31, 
    "citing_paper_authors": "Dan, Shen | Mirella, Lapata", 
    "raw_text": "All FrameNet sentences, questions, and answer sentences were parsed using MiniPar (Lin, 1994), a robust dependency parser. As mentioned in Section 4 we extract dependency relation paths by traversing the dependency tree from the frame element node to the predicate node", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "W05-0612", 
    "citing_paper_authority": 11, 
    "citing_paper_authors": "Colin, Cherry | Shane, Bergsma", 
    "raw_text": "To get the context values and implement the syntactic filters, we parsed our corpora with Minipar (Lin,1994)", 
    "clean_text": "To get the context values and implement the syntactic filters, we parsed our corpora with Minipar (Lin,1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "N09-2047", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Srinivas, Bangalore | Pierre, Boullier | Alexis, Nasr | Owen, Rambow | Beno&icirc;t, Sagot", 
    "raw_text": "Widely used dependency parsers which generate deep dependency representations include Minipar (Lin, 1994), which uses a declarative grammar, and the Stanford parser (Levy and Manning, 2004), which performs a conversion from a standard phrase-structure parse", 
    "clean_text": "Widely used dependency parsers which generate deep dependency representations include Minipar (Lin, 1994), which uses a declarative grammar, and the Stanford parser (Levy and Manning, 2004), which performs a conversion from a standard phrase-structure parse.", 
    "keep_for_gold": 0
  }
]
