<PAPER>
  <S sid="0">Scaling To Very Very Large Corpora For Natural Language Disambiguation</S>
  <ABSTRACT>
    <S sid="1" ssid="1">The amount of readily available on-line text has reached hundreds of billions of words and continues to grow.</S>
    <S sid="2" ssid="2">Yet for most core natural language tasks, algorithms continue to be optimized, tested and compared after training on corpora consisting of only one million words or less.</S>
    <S sid="3" ssid="3">In this paper, we evaluate the performance of different learning methods on a prototypical natural language disambiguation task, confusion set disambiguation, when trained on orders of magnitude more labeled data than has previously been used.</S>
    <S sid="4" ssid="4">We are fortunate that for this particular application, correctly labeled training data is free.</S>
    <S sid="5" ssid="5">Since this will often not be the case, we examine methods for effectively exploiting very large corpora when labeled data comes at a cost.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">Machine learning techniques, which automatically learn linguistic information from online text corpora, have been applied to a number of natural language problems throughout the last decade.</S>
    <S sid="7" ssid="2">A large percentage of papers published in this area involve comparisons of different learning approaches trained and tested with commonly used corpora.</S>
    <S sid="8" ssid="3">While the amount of available online text has been increasing at a dramatic rate, the size of training corpora typically used for learning has not.</S>
    <S sid="9" ssid="4">In part, this is due to the standardization of data sets used within the field, as well as the potentially large cost of annotating data for those learning methods that rely on labeled text.</S>
    <S sid="10" ssid="5">The empirical NLP community has put substantial effort into evaluating performance of a large number of machine learning methods over fixed, and relatively small, data sets.</S>
    <S sid="11" ssid="6">Yet since we now have access to significantly more data, one has to wonder what conclusions that have been drawn on small data sets may carry over when these learning methods are trained using much larger corpora.</S>
    <S sid="12" ssid="7">In this paper, we present a study of the effects of data size on machine learning for natural language disambiguation.</S>
    <S sid="13" ssid="8">In particular, we study the problem of selection among confusable words, using orders of magnitude more training data than has ever been applied to this problem.</S>
    <S sid="14" ssid="9">First we show learning curves for four different machine learning algorithms.</S>
    <S sid="15" ssid="10">Next, we consider the efficacy of voting, sample selection and partially unsupervised learning with large training corpora, in hopes of being able to obtain the benefits that come from significantly larger training corpora without incurring too large a cost.</S>
  </SECTION>
  <SECTION title="2 Confusion Set Disambiguation" number="2">
    <S sid="16" ssid="1">Confusion set disambiguation is the problem of choosing the correct use of a word, given a set of words with which it is commonly confused.</S>
    <S sid="17" ssid="2">Example confusion sets include: {principle , principal}, {then, than}, {to,two,too}, and {weather,whether}.</S>
    <S sid="18" ssid="3">Numerous methods have been presented for confusable disambiguation.</S>
    <S sid="19" ssid="4">The more recent set of techniques includes multiplicative weightupdate algorithms (Golding and Roth, 1998), latent semantic analysis (Jones and Martin, 1997), transformation-based learning (Mangu and Brill, 1997), differential grammars (Powers, 1997), decision lists (Yarowsky, 1994), and a variety of Bayesian classifiers (Gale et al., 1993, Golding, 1995, Golding and Schabes, 1996).</S>
    <S sid="20" ssid="5">In all of these approaches, the problem is formulated as follows: Given a specific confusion set (e.g.</S>
    <S sid="21" ssid="6">{to,two,too}), all occurrences of confusion set members in the test set are replaced by a marker; everywhere the system sees this marker, it must decide which member of the confusion set to choose.</S>
    <S sid="22" ssid="7">Confusion set disambiguation is one of a class of natural language problems involving disambiguation from a relatively small set of alternatives based upon the string context in which the ambiguity site appears.</S>
    <S sid="23" ssid="8">Other such problems include word sense disambiguation, part of speech tagging and some formulations of phrasal chunking.</S>
    <S sid="24" ssid="9">One advantageous aspect of confusion set disambiguation, which allows us to study the effects of large data sets on performance, is that labeled training data is essentially free, since the correct answer is surface apparent in any collection of reasonably well-edited text.</S>
  </SECTION>
  <SECTION title="3 Learning Curve Expe riments" number="3">
    <S sid="25" ssid="1">This work was partially motivated by the desire to develop an improved grammar checker.</S>
    <S sid="26" ssid="2">Given a fixed amount of time, we considered what would be the most effective way to focus our efforts in order to attain the greatest performance improvement.</S>
    <S sid="27" ssid="3">Some possibilities included modifying standard learning algorithms, exploring new learning techniques, and using more sophisticated features.</S>
    <S sid="28" ssid="4">Before exploring these somewhat expensive paths, we decided to first see what happened if we simply trained an existing method with much more data.</S>
    <S sid="29" ssid="5">This led to the exploration of learning curves for various machine learning algorithms: winnow1, perceptron, na&#239;ve Bayes, and a very simple memory-based learner.</S>
    <S sid="30" ssid="6">For the first three learners, we used the standard collection of features employed for this problem: the set of words within a window of the target word, and collocations containing words and/or parts of speech.</S>
    <S sid="31" ssid="7">The memory-based learner used only the word before and word after as features.</S>
    <S sid="32" ssid="8">We collected a 1-billion-word training corpus from a variety of English texts, including news articles, scientific abstracts, government transcripts, literature and other varied forms of prose.</S>
    <S sid="33" ssid="9">This training corpus is three orders of magnitude greater than the largest training corpus previously used for this problem.</S>
    <S sid="34" ssid="10">We used 1 million words of Wall Street Journal text as our test set, and no data from the Wall Street Journal was used when constructing the training corpus.</S>
    <S sid="35" ssid="11">Each learner was trained at several cutoff points in the training corpus, i.e. the first one million words, the first five million words, and so on, until all one billion words were used for training.</S>
    <S sid="36" ssid="12">In order to avoid training biases that may result from merely concatenating the different data sources to form a larger training corpus, we constructed each consecutive training corpus by probabilistically sampling sentences from the different sources weighted by the size of each source.</S>
    <S sid="37" ssid="13">In Figure 1, we show learning curves for each learner, up to one billion words of training data.</S>
    <S sid="38" ssid="14">Each point in the graph is the average performance over ten confusion sets for that size training corpus.</S>
    <S sid="39" ssid="15">Note that the curves appear to be log-linear even out to one billion words.</S>
    <S sid="40" ssid="16">Of course for many problems, additional training data has a non-zero cost.</S>
    <S sid="41" ssid="17">However, these results suggest that we may want to reconsider the trade-off between spending time and money on algorithm development versus spending it on corpus development.</S>
    <S sid="42" ssid="18">At least for the problem of confusable disambiguation, none of the learners tested is close to asymptoting in performance at the training corpus size commonly employed by the field.</S>
    <S sid="43" ssid="19">Such gains in accuracy, however, do not come for free.</S>
    <S sid="44" ssid="20">Figure 2 shows the size of learned representations as a function of training data size.</S>
    <S sid="45" ssid="21">For some applications, this is not necessarily a concern.</S>
    <S sid="46" ssid="22">But for others, where space comes at a premium, obtaining the gains that come with a billion words of training data may not be viable without an effort made to compress information.</S>
    <S sid="47" ssid="23">In such cases, one could look at numerous methods for compressing data (e.g.</S>
    <S sid="48" ssid="24">Dagan and Engleson, 1995, Weng, et al, 1998).</S>
  </SECTION>
  <SECTION title="4 The Efficacy of Voting" number="4">
    <S sid="49" ssid="1">Voting has proven to be an effective technique for improving classifier accuracy for many applications, including part-of-speech tagging (van Halteren, et al, 1998), parsing (Henderson and Brill, 1999), and word sense disambiguation (Pederson, 2000).</S>
    <S sid="50" ssid="2">By training a set of classifiers on a single training corpus and then combining their outputs in classification, it is often possible to achieve a target accuracy with less labeled training data than would be needed if only one classifier was being used.</S>
    <S sid="51" ssid="3">Voting can be effective in reducing both the bias of a particular training corpus and the bias of a specific learner.</S>
    <S sid="52" ssid="4">When a training corpus is very small, there is much more room for these biases to surface and therefore for voting to be effective.</S>
    <S sid="53" ssid="5">But does voting still offer performance gains when classifiers are trained on much larger corpora?</S>
    <S sid="54" ssid="6">The complementarity between two learners was defined by Brill and Wu (1998) in order to quantify the percentage of time when one system is wrong, that another system is correct, and therefore providing an upper bound on combination accuracy.</S>
    <S sid="55" ssid="7">As training size increases significantly, we would expect complementarity between classifiers to decrease.</S>
    <S sid="56" ssid="8">This is due in part to the fact that a larger training corpus will reduce the data set variance and any bias arising from this.</S>
    <S sid="57" ssid="9">Also, some of the differences between classifiers might be due to how they handle a sparse training set.</S>
    <S sid="58" ssid="10">As a result of comparing a sample of two learners as a function of increasingly large training sets, we see in Table 1 that complementarity does indeed decrease as training size increases.</S>
    <S sid="59" ssid="11">Next we tested whether this decrease in complementarity meant that voting loses its effectiveness as the training set increases.</S>
    <S sid="60" ssid="12">To examine the impact of voting when using a significantly larger training corpus, we ran 3 out of the 4 learners on our set of 10 confusable pairs, excluding the memory-based learner.</S>
    <S sid="61" ssid="13">Voting was done by combining the normalized score each learner assigned to a classification choice.</S>
    <S sid="62" ssid="14">In Figure 3, we show the accuracy obtained from voting, along with the single best learner accuracy at each training set size.</S>
    <S sid="63" ssid="15">We see that for very small corpora, voting is beneficial, resulting in better performance than any single classifier.</S>
    <S sid="64" ssid="16">Beyond 1 million words, little is gained by voting, and indeed on the</S>
  </SECTION>
  <SECTION title="5 When Annotated Data Is Not Free" number="5">
    <S sid="65" ssid="1">While the observation that learning curves are not asymptoting even with orders of magnitude more training data than is currently used is very exciting, this result may have somewhat limited ramifications.</S>
    <S sid="66" ssid="2">Very few problems exist for which annotated data of this size is available for free.</S>
    <S sid="67" ssid="3">Surely we cannot reasonably expect that the manual annotation of one billion words along with corresponding parse trees will occur any time soon (but see (Banko and Brill 2001) for a discussion that this might not be completely infeasible).</S>
    <S sid="68" ssid="4">Despite this pitfall, there are techniques one can use to try to obtain the benefits of considerably larger training corpora without incurring significant additional costs.</S>
    <S sid="69" ssid="5">In the sections that follow, we study two such solutions: active learning and unsupervised learning.</S>
    <S sid="70" ssid="6">Active learning involves intelligently selecting a portion of samples for annotation from a pool of as-yet unannotated training samples.</S>
    <S sid="71" ssid="7">Not all samples in a training set are equally useful.</S>
    <S sid="72" ssid="8">By concentrating human annotation efforts on the samples of greatest utility to the machine learning algorithm, it may be possible to attain better performance for a fixed annotation cost than if samples were chosen randomly for human annotation.</S>
    <S sid="73" ssid="9">Most active learning approaches work by first training a seed learner (or family of learners) and then running the learner(s) over a set of unlabeled samples.</S>
    <S sid="74" ssid="10">A sample is presumed to be more useful for training the more uncertain its classification label is.</S>
    <S sid="75" ssid="11">Uncertainty can be judged by the relative weights assigned to different labels by a single classifier (Lewis and Catlett, 1994).</S>
    <S sid="76" ssid="12">Another approach, committee-based sampling, first creates a committee of classifiers and then judges classification uncertainty according to how much the learners differ among label assignments.</S>
    <S sid="77" ssid="13">For example, Dagan and Engelson (1995) describe a committee-based sampling technique where a part of speech tagger is trained using an annotated seed corpus.</S>
    <S sid="78" ssid="14">A family of taggers is then generated by randomly permuting the tagger probabilities, and the disparity among tags output by the committee members is used as a measure of classification uncertainty.</S>
    <S sid="79" ssid="15">Sentences for human annotation are drawn, biased to prefer those containing high uncertainty instances.</S>
    <S sid="80" ssid="16">While active learning has been shown to work for a number of tasks, the majority of active learning experiments in natural language processing have been conducted using very small seed corpora and sets of unlabeled examples.</S>
    <S sid="81" ssid="17">Therefore, we wish to explore situations where we have, or can afford, a nonnegligible sized training corpus (such as for part-of-speech tagging) and have access to very large amounts of unlabeled data.</S>
    <S sid="82" ssid="18">We can use bagging (Breiman, 1996), a technique for generating a committee of classifiers, to assess the label uncertainty of a potential training instance.</S>
    <S sid="83" ssid="19">With bagging, a variant of the original training set is constructed by randomly sampling sentences with replacement from the source training set in order to produce N new training sets of size equal to the original.</S>
    <S sid="84" ssid="20">After the N models have been trained and run on the same test set, their classifications for each test sentence can be compared for classification agreement.</S>
    <S sid="85" ssid="21">The higher the disagreement between classifiers, the more useful it would be to have an instance manually labeled.</S>
    <S sid="86" ssid="22">We used the na&#239;ve Bayes classifier, creating 10 classifiers each trained on bags generated from an initial one million words of labeled training data.</S>
    <S sid="87" ssid="23">We present the active learning algorithm we used below.</S>
    <S sid="88" ssid="24">Initialize: Training data consists of X words correctly labeled We initially tried selecting the M most uncertain examples, but this resulted in a sample too biased toward the difficult instances.</S>
    <S sid="89" ssid="25">Instead we pick half of our samples for annotation randomly and the other half from those whose labels we are most uncertain of, as judged by the entropy of the votes assigned to the instance by the committee.</S>
    <S sid="90" ssid="26">This is, in effect, biasing our sample toward instances the classifiers are most uncertain of.</S>
    <S sid="91" ssid="27">We show the results from sample selection for confusion set disambiguation in Figure 4.</S>
    <S sid="92" ssid="28">The line labeled &amp;quot;sequential&amp;quot; shows test set accuracy achieved for different percentages of the one billion word training set, where training instances are taken at random.</S>
    <S sid="93" ssid="29">We ran three active learning experiments, increasing the size of the total unlabeled training corpus from which we can pick samples to be annotated.</S>
    <S sid="94" ssid="30">In all three cases, sample selection outperforms sequential sampling.</S>
    <S sid="95" ssid="31">At the endpoint of each training run in the graph, the same number of samples has been annotated for training.</S>
    <S sid="96" ssid="32">However, we see that the larger the pool of candidate instances for annotation is, the better the resulting accuracy.</S>
    <S sid="97" ssid="33">By increasing the pool of unlabeled training instances for active learning, we can improve accuracy with only a fixed additional annotation cost.</S>
    <S sid="98" ssid="34">Thus it is possible to benefit from the availability of extremely large corpora without incurring the full costs of annotation, training time, and representation size.</S>
    <S sid="99" ssid="35">While the previous section shows that we can benefit from substantially larger training corpora without needing significant additional manual annotation, it would be ideal if we could improve classification accuracy using only our seed annotated corpus and the large unlabeled corpus, without requiring any additional hand labeling.</S>
    <S sid="100" ssid="36">In this section we turn to unsupervised learning in an attempt to achieve this goal.</S>
    <S sid="101" ssid="37">Numerous approaches have been explored for exploiting situations where some amount of annotated data is available and a much larger amount of data exists unannotated, e.g.</S>
    <S sid="102" ssid="38">Marialdo's HMM part-of-speech tagger training (1994), Charniak's parser retraining experiment (1996), Yarowsky's seeds for word sense disambiguation (1995) and Nigam et al's (1998) topic classifier learned in part from unlabelled documents.</S>
    <S sid="103" ssid="39">A nice discussion of this general problem can be found in Mitchell (1999).</S>
    <S sid="104" ssid="40">The question we want to answer is whether there is something to be gained by combining unsupervised and supervised learning when we scale up both the seed corpus and the unlabeled corpus significantly.</S>
    <S sid="105" ssid="41">We can again use a committee of bagged classifiers, this time for unsupervised learning.</S>
    <S sid="106" ssid="42">Whereas with active learning we want to choose the most uncertain instances for human annotation, with unsupervised learning we want to choose the instances that have the highest probability of being correct for automatic labeling and inclusion in our labeled training data.</S>
    <S sid="107" ssid="43">In Table 2, we show the test set accuracy (averaged over the four most frequently occurring confusion pairs) as a function of the number of classifiers that agree upon the label of an instance.</S>
    <S sid="108" ssid="44">For this experiment, we trained a collection of 10 na&#239;ve Bayes classifiers, using bagging on a 1-millionword seed corpus.</S>
    <S sid="109" ssid="45">As can be seen, the greater the classifier agreement, the more likely it is that a test sample has been correctly labeled.</S>
    <S sid="110" ssid="46">Since the instances in which all bags agree have the highest probability of being correct, we attempted to automatically grow our labeled training set using the 1-million-word labeled seed corpus along with the collection of na&#239;ve Bayes classifiers described above.</S>
    <S sid="111" ssid="47">All instances from the remainder of the corpus on which all 10 classifiers agreed were selected, trusting the agreed-upon label.</S>
    <S sid="112" ssid="48">The classifiers were then retrained using the labeled seed corpus plus the new training material collected automatically during the previous step.</S>
    <S sid="113" ssid="49">In Table 3 we show the results from these unsupervised learning experiments for two confusion sets.</S>
    <S sid="114" ssid="50">In both cases we gain from unsupervised training compared to using only the seed corpus, but only up to a point.</S>
    <S sid="115" ssid="51">At this point, test set accuracy begins to decline as additional training instances are automatically harvested.</S>
    <S sid="116" ssid="52">We are able to attain improvements in accuracy for free using unsupervised learning, but unlike our learning curve experiments using correctly labeled data, accuracy does not continue to improve with additional data.</S>
    <S sid="117" ssid="53">Charniak (1996) ran an experiment in which he trained a parser on one million words of parsed data, ran the parser over an additional 30 million words, and used the resulting parses to reestimate model probabilities.</S>
    <S sid="118" ssid="54">Doing so gave a small improvement over just using the manually parsed data.</S>
    <S sid="119" ssid="55">We repeated this experiment with our data, and show the outcome in Table 4.</S>
    <S sid="120" ssid="56">Choosing only the labeled instances most likely to be correct as judged by a committee of classifiers results in higher accuracy than using all instances classified by a model trained with the labeled seed corpus.</S>
  </SECTION>
  <SECTION title="Methods" number="6">
    <S sid="121" ssid="1">In applying unsupervised learning to improve upon a seed-trained method, we consistently saw an improvement in performance followed by a decline.</S>
    <S sid="122" ssid="2">This is likely due to eventualy having reached a point where the gains from additional training data are offset by the sample bias in mining these instances.</S>
    <S sid="123" ssid="3">It may be possible to combine active learning with unsupervised learning as a way to reduce this sample bias and gain the benefits of both approaches.</S>
  </SECTION>
  <SECTION title="6 Conclusions" number="7">
    <S sid="124" ssid="1">In this paper, we have looked into what happens when we begin to take advantage of the large amounts of text that are now readily available.</S>
    <S sid="125" ssid="2">We have shown that for a prototypical natural language classification task, the performance of learners can benefit significantly from much larger training sets.</S>
    <S sid="126" ssid="3">We have also shown that both active learning and unsupervised learning can be used to attain at least some of the advantage that comes with additional training data, while minimizing the cost of additional human annotation.</S>
    <S sid="127" ssid="4">We propose that a logical next step for the research community would be to direct efforts towards increasing the size of annotated training collections, while deemphasizing the focus on comparing different learning techniques trained only on small training corpora.</S>
    <S sid="128" ssid="5">While it is encouraging that there is a vast amount of on-line text, much work remains to be done if we are to learn how best to exploit this resource to improve natural language processing.</S>
  </SECTION>
</PAPER>
