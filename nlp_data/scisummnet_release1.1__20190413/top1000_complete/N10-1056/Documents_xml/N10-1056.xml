<PAPER>
  <S sid="0">For the sake of simplicity: Unsupervised extraction of lexical simplifications from Wikipedia</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We report on work in progress on extractlexical simplifications (e.g., focusing on utilizing edit histories in Simple English Wikipedia for this task.</S>
    <S sid="2" ssid="2">We consider two main approaches: (1) deriving simplification probabilities via an edit model that accounts for a mixture of different operations, and (2) using metadata to focus on edits that are more likely to be simplification operations.</S>
    <S sid="3" ssid="3">We find our methods to outperform a reasonable baseline and yield many high-quality lexical simplifications not included in an independently-created manually prepared list.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="4" ssid="1">Nothing is more simple than greatness; indeed, to be simple is to be great.</S>
    <S sid="5" ssid="2">&#8212;Emerson, Literary Ethics Style is an important aspect of information presentation; indeed, different contexts call for different styles.</S>
    <S sid="6" ssid="3">Here, we consider an important dimension of style, namely, simplicity.</S>
    <S sid="7" ssid="4">Systems that can rewrite text into simpler versions promise to make information available to a broader audience, such as non-native speakers, children, laypeople, and so on.</S>
    <S sid="8" ssid="5">One major effort to produce such text is the Simple English Wikipedia (henceforth SimpleEW)1, a sort of spin-off of the well-known English Wikipedia (henceforth ComplexEW) where human editors enforce simplicity of language through rewriting.</S>
    <S sid="9" ssid="6">The crux of our proposal is to learn lexical simplifications from SimpleEW edit histories, thus leveraging the efforts of the 18K pseudonymous individuals who work on SimpleEW.</S>
    <S sid="10" ssid="7">Importantly, not all the changes on SimpleEW are simplifications; we thus also make use of ComplexEW edits to filter out non-simplifications.</S>
    <S sid="11" ssid="8">Related work and related problems Previous work usually involves general syntactic-level transformation rules [1, 9, 10].2 In contrast, we explore data-driven methods to learn lexical simplifications (e.g., &#8220;collaborate&#8221; &#8594; &#8220;work together&#8221;), which are highly specific to the lexical items involved and thus cannot be captured by a few general rules.</S>
    <S sid="12" ssid="9">Simplification is strongly related to but distinct from paraphrasing and machine translation (MT).</S>
    <S sid="13" ssid="10">While it can be considered a directional form of the former, it differs in spirit because simplification must trade off meaning preservation (central to paraphrasing) against complexity reduction (not a consideration in paraphrasing).</S>
    <S sid="14" ssid="11">Simplification can also be considered to be a form of MT in which the two &#8220;languages&#8221; in question are highly related.</S>
    <S sid="15" ssid="12">However, note that ComplexEW and SimpleEW do not together constitute a clean parallel corpus, but rather an extremely noisy comparable corpus.</S>
    <S sid="16" ssid="13">For example, Complex/Simple same-topic document pairs are often written completely independently of each other, and even when it is possible to get good sentence alignments between them, the sentence pairs may reflect operations other than simplification, such as corrections, additions, or edit spam.</S>
    <S sid="17" ssid="14">Our work joins others in using Wikipedia revisions to learn interesting types of directional lexical relations, e.g, &#8220;eggcorns&#8221;3 [7] and entailments [8].</S>
  </SECTION>
  <SECTION title="2 Method" number="2">
    <S sid="18" ssid="1">As mentioned above, a key idea in our work is to utilize SimpleEW edits.</S>
    <S sid="19" ssid="2">The primary difficulty in working with these modifications is that they include not only simplifications but also edits that serve other functions, such as spam removal or correction of grammar or factual content (&#8220;fixes&#8221;).</S>
    <S sid="20" ssid="3">We describe two main approaches to this problem: a probabilistic model that captures this mixture of different edit operations (&#167;2.1), and the use of metadata to filter out undesirable revisions (&#167;2.2).</S>
    <S sid="21" ssid="4">We say that the kth article in a Wikipedia corresponds to (among other things) a title or topic (e.g., ~ &#8220;Cat&#8221;) and a sequence dk of article versions caused by successive edits.</S>
    <S sid="22" ssid="5">For a given lexical item or ~ phrase A, we write A E dk if there is any version ~ ~ in dk that contains A.</S>
    <S sid="23" ssid="6">From each dk we extract a collection ek = (ek,1, ek,2, .</S>
    <S sid="24" ssid="7">.</S>
    <S sid="25" ssid="8">.</S>
    <S sid="26" ssid="9">, ek,nk) of lexical edit instances, repeats allowed, where ek,i = A &#8211;* a means that phrase A in one version was changed to a in the next, A =&#65533; a; e.g., &#8220;stands for&#8221; &#8211;* &#8220;is the same as&#8221;.</S>
    <S sid="27" ssid="10">(We defer detailed description of how we extract lexical edit instances from data to &#167;3.1.)</S>
    <S sid="28" ssid="11">We denote the collection of ~dk in ComplexEW and SimpleEW as C and S, respectively.</S>
    <S sid="29" ssid="12">There are at least four possible edit operations: fix (o1), simplify (o2), no-op (o3), or spam (o4).</S>
    <S sid="30" ssid="13">However, for this initial work we assume P(o4) = 0.4 Let P(oi  |A) be the probability that oi is applied to A, and P(a  |A, oi) be the probability of A &#8211;* a given that the operation is oi.</S>
    <S sid="31" ssid="14">The key quantities of interest are P(o2  |A) in S, which is the probability that A should be simplified, and P(a  |A, o2), which yields proper simplifications of A.</S>
    <S sid="32" ssid="15">We start with an equation that models the probability that a phrase A is edited into a: ~ We similarly define fS(A) on dk in S. Note that we count topics (version sequences), not individual versions: if A appears at some point and is not edited until 50 revisions later, we should not conclude that A is unlikely to be rewritten; for example, the intervening revisions could all be minor additions, or part of an edit war.</S>
    <S sid="33" ssid="16">If we assume that the probability of any particular fix operation being applied in SimpleEW is proportional to that in ComplexEW&#8212; e.g., the SimpleEW fix rate might be dampened because already-edited ComplexEW articles are copied over &#8212; we have6 Pb(o1  |A) = &#945;fC(A) where 0 &lt; &#945; &lt; 1.</S>
    <S sid="34" ssid="17">Note that in SimpleEW, where P(o1 V o2  |A) is the probability that A is changed to abdifferent word in SimpleEW, which we estimate as P(o1 V o2  |A) = fS(A).</S>
    <S sid="35" ssid="18">We then set Next, under our working assumption, we estimate the probability of A being changed to a as a fix by the proportion of ComplexEW edit instances that rewrite A to a: where Q is the set of edit operations.</S>
    <S sid="36" ssid="19">This involves the desired parameters, which we solve for by estimating the others from data, as described next.</S>
    <S sid="37" ssid="20">Estimation Note that P(a  |A, o3) = 0 if A =&#65533; a.</S>
    <S sid="38" ssid="21">Thus, if we have estimates for o1-related probabilities, we can derive o2-related probabilities via Equation 1.</S>
    <S sid="39" ssid="22">To begin with, we make the working assumption that occurrences of simplification in ComplexEW are negligible in comparison to fixes.</S>
    <S sid="40" ssid="23">Since we are also currently ignoring edit spam, we thus assume that only o1 edits occur in ComplexEW.5 Let fC(A) be the fraction of ~dk in C containing A in which A is modified: A natural estimate for the conditional probability of A being rewritten to a under any operation type is based on observations of A &#8211;* a in SimpleEW, since that is the corpus wherein both operations are assumed to occur: Thus, from (1) we get that for A =&#65533; a:</S>
  </SECTION>
  <SECTION title="2.2 Metadata-based methods" number="3">
    <S sid="41" ssid="1">Wiki editors have the option of associating a comment with each revision, and such comments sometimes indicate the intent of the revision.</S>
    <S sid="42" ssid="2">We therefore sought to use comments to identify &#8220;trusted&#8221; revisions wherein the extracted lexical edit instances (see &#167;3.1) would be likely to be simplifications.</S>
    <S sid="43" ssid="3">Let ik = (rk, ... , rk, ...) be the sequence of revisions for the kth article in SimpleEW, where rk is the set of lexical edit instances (A &#8212;* a) extracted from the ith modification of the document.</S>
    <S sid="44" ssid="4">Let ck be the comment that accompanies rk, and conversely, let R(Set) = {rk|ck E Set}.</S>
    <S sid="45" ssid="5">We start with a seed set of trusted comments, Seed.</S>
    <S sid="46" ssid="6">To initialize it, we manually inspected a small sample of the 700K+ SimpleEW revisions that bear comments, and found that comments containing a word matching the regular expression *simpl* (e.g, &#8220;simplify&#8221;) seem promising.</S>
    <S sid="47" ssid="7">We thus set Seed &#65533;= { * simpl*} (abusing notation).</S>
    <S sid="48" ssid="8">The SIMPL method Given a set of trusted revisions TRev (in our case TRev = R(Seed)), we score each A &#8212;* a E TRev by the point-wise mutual information (PMI) between A and a.7 We write RANK(TRev) to denote the PMI-based ranking of A &#8212;* a E TRev, and use SIMPL to denote our most basic ranking method, RANK(R(Seed)).</S>
    <S sid="49" ssid="9">Two ideas for bootstrapping We also considered bootstrapping as a way to be able to utilize revisions whose comments are not in the initial Seed set.</S>
    <S sid="50" ssid="10">Our first idea was to iteratively expand the set of trusted comments to include those that most often accompany already highly ranked simplifications.</S>
    <S sid="51" ssid="11">Unfortunately, our initial implementations involved many parameters (upper and lower commentfrequency thresholds, number of highly ranked simplifications to consider, number of comments to add per iteration), making it relatively difficult to tune; we thus omit its results.</S>
    <S sid="52" ssid="12">Our second idea was to iteratively expand the set of trusted revisions, adding those that contain already highly ranked simplifications.</S>
    <S sid="53" ssid="13">While our initial implementation had fewer parameters than the method sketched above, it tended to terminate quickly, so that not many new simplifications were found; so, again, we do not report results here.</S>
    <S sid="54" ssid="14">An important direction for future work is to differentially weight the edit instances within a revision, as opposed to placing equal trust in all of them; this could prevent our bootstrapping methods from giving common fixes (e.g., &#8220;a&#8221; &#8212;* &#8220;the&#8221;) high scores.</S>
  </SECTION>
  <SECTION title="3 Evaluation8" number="4">
    <S sid="55" ssid="1">We obtained the revision histories of both SimpleEW (November 2009 snapshot) and ComplexEW (January 2008 snapshot).</S>
    <S sid="56" ssid="2">In total, &#8212;1.5M revisions for 81733 SimpleEW articles were processed (only 30% involved textual changes).</S>
    <S sid="57" ssid="3">For ComplexEW, we processed &#8212;16M revisions for 19407 articles.</S>
    <S sid="58" ssid="4">Extracting lexical edit instances.</S>
    <S sid="59" ssid="5">For each article, we aligned sentences in each pair of adjacent versions using tf-idf scores in a way similar to Nelken and Shieber [6] (this produced satisfying results because revisions tended to represent small changes).</S>
    <S sid="60" ssid="6">From the aligned sentence pairs, we obtained the aforementioned lexical edit instances A &#8212;* a.</S>
    <S sid="61" ssid="7">Since the focus of our study was not word alignment, we used a simple method that identified the longest differing segments (based on word boundaries) between each sentence, except that to prevent the extraction of entire (highly nonmatching) sentences, we filtered out A &#8212;* a pairs if either A or a contained more than five words.</S>
    <S sid="62" ssid="8">Baselines RANDOM returns lexical edit instances drawn uniformly at random from among those extracted from SimpleEW.</S>
    <S sid="63" ssid="9">FREQUENT returns the most frequent lexical edit instances extracted from SimpleEW.</S>
    <S sid="64" ssid="10">Dictionary of simplifications The SimpleEW editor &#8220;Spencerk&#8221; (Spencer Kelly) has assembled a list of simple words and simplifications using a combination of dictionaries and manual effort9.</S>
    <S sid="65" ssid="11">He provides a list of 17,900 simple words &#8212; words that do not need further simplification &#8212; and a list of 2000 transformation pairs.</S>
    <S sid="66" ssid="12">We did not use Spencerk&#8217;s set as the gold standard because many transformations we found to be reasonable were not on his list.</S>
    <S sid="67" ssid="13">Instead, we measured our agreement with the list of transformations he assembled (SPLIST).</S>
    <S sid="68" ssid="14">The top 100 pairs from each system (edit model10 and SIMPL and the two baselines) plus 100 randomly selected pairs from SPLIST were mixed and all presented in random order to three native English speakers and three non-native English speakers (all non-authors).</S>
    <S sid="69" ssid="15">Each pair was presented in random orientation (i.e., either as A &#8594; a or as a &#8594; A), and the labels included &#8220;simpler&#8221;, &#8220;more complex&#8221;, &#8220;equal&#8221;, &#8220;unrelated&#8221;, and &#8220;?&#8221; (&#8220;hard to judge&#8221;).</S>
    <S sid="70" ssid="16">The first two labels correspond to simplifications for the orientations A &#8594; a and a &#8594; A, respectively.</S>
    <S sid="71" ssid="17">Collapsing the 5 labels into &#8220;simplification&#8221;, &#8220;not a simplification&#8221;, and &#8220;?&#8221; yields reasonable agreement among the 3 native speakers (n = 0.69; 75.3% of the time all three agreed on the same label).</S>
    <S sid="72" ssid="18">While we postulated that non-native speakers11 might be more sensitive to what was simpler, we note that they disagreed more than the native speakers (n = 0.49) and reported having to consult a dictionary.</S>
    <S sid="73" ssid="19">The nativespeaker majority label was used in our evaluations.</S>
    <S sid="74" ssid="20">Here are the results; &#8220;-x-y&#8221; means that x and y are the number of instances discarded from the precision calculation for having no majority label or majority label &#8220;?&#8221;, respectively: Both baselines yielded very low precisions &#8212; clearly not all (frequent) edits in SimpleEW were simplifications.</S>
    <S sid="75" ssid="21">Furthermore, the edit model yielded higher precision than SIMPL for the top 100 pairs.</S>
    <S sid="76" ssid="22">(Note that we only examined one simplification per A for those A where P&#65533;(o2  |A) was well-defined; thus &#8220;# of pairs&#8221; does not directly reflect the full potential recall that either method can achieve.)</S>
    <S sid="77" ssid="23">Both, however, produced many high-quality pairs (62% and 71% of the correct pairs) not included in SPLIST.</S>
    <S sid="78" ssid="24">We also found the pairs produced by these two systems to be complementary to each other.</S>
    <S sid="79" ssid="25">We believe that these two approaches provide a good starting point for further explorations.</S>
    <S sid="80" ssid="26">Finally, some examples of simplifications found by our methods: &#8220;stands for&#8221; &#8594; &#8220;is the same as&#8221;, &#8220;indigenous&#8221; &#8594; &#8220;native&#8221;, &#8220;permitted&#8221; &#8594; &#8220;allowed&#8221;, &#8220;concealed&#8221; &#8594; &#8220;hidden&#8221;, &#8220;collapsed&#8221; &#8594; &#8220;fell down&#8221;, &#8220;annually&#8221; &#8594; &#8220;every year&#8221;.</S>
  </SECTION>
  <SECTION title="3.4 Future work" number="5">
    <S sid="81" ssid="1">Further evaluation could include comparison with machine-translation and paraphrasing algorithms.</S>
    <S sid="82" ssid="2">It would be interesting to use our proposed estimates as initialization for EM-style iterative re-estimation.</S>
    <S sid="83" ssid="3">Another idea would be to estimate simplification priors based on a model of inherent lexical complexity; some possible starting points are number of syllables (which is used in various readability formulae) or word length.</S>
  </SECTION>
</PAPER>
