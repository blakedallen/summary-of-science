<PAPER>
  <S sid="0">Empirical Methods For Compound Splitting</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Compounded words are a challenge for NLP applications such as machine translation (MT).</S>
    <S sid="2" ssid="2">We introduce methods to learn splitting rules from monolingual and parallel corpora.</S>
    <S sid="3" ssid="3">We evaluate them against a gold standard and measure their impact on performance of statistical MT systems.</S>
    <S sid="4" ssid="4">Results show accuracy of 99.1% and performance gains for MT of 0.039 BLEU on a German-English noun phrase translation task.</S>
    <S sid="5" ssid="5">Splitting options for the German word Aktionsplan Aktionsplan Aktion actionplan action plan Akt ion s plan act ion plan</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">Compounding of words is common in a number of languages (German, Dutch, Finnish, Greek, etc.).</S>
    <S sid="7" ssid="2">Since words may be joined freely, this vastly increases the vocabulary size, leading to sparse data problems.</S>
    <S sid="8" ssid="3">This poses challenges for a number of NLP applications such as machine translation, speech recognition, text classification, information extraction, or information retrieval.</S>
    <S sid="9" ssid="4">For machine translation, the splitting of an unknown compound into its parts enables the translation of the compound by the translation of its parts.</S>
    <S sid="10" ssid="5">Take the word Aktionsplan in German (see Figure 1), which was created by joining the words Aktion and Plan.</S>
    <S sid="11" ssid="6">Breaking up this compound would assist the translation into English as action plan.</S>
    <S sid="12" ssid="7">Compound splitting is a well defined computational linguistics task.</S>
    <S sid="13" ssid="8">One way to define the goal of compound splitting is to break up foreign words, so that a one-to-one correspondence to English can be established.</S>
    <S sid="14" ssid="9">Note that we are looking for a one-to-one correspondence to English content words: Say, the preferred translation of Aktionsplan is plan for action.</S>
    <S sid="15" ssid="10">The lack of correspondence for the English word for does not detract from the definition of the task: We would still like to break up the German compound into the two parts Aktion and Plan.</S>
    <S sid="16" ssid="11">The insertion of function words is not our concern.</S>
    <S sid="17" ssid="12">Ultimately, the purpose of this work is to improve the quality of machine translation systems.</S>
    <S sid="18" ssid="13">For instance, phrase-based translation systems [Marcu and Wong, 2002] may recover more easily from splitting regimes that do not create a one-to-one translation correspondence.</S>
    <S sid="19" ssid="14">One splitting method may mistakenly break up the word Aktionsplan into the three words Akt, Ion, and Plan.</S>
    <S sid="20" ssid="15">But if we consistently break up the word Aktion into Akt and Ion in our training data, such a system will likely learn the translation of the word pair Akt Ion into the single English word action.</S>
    <S sid="21" ssid="16">These considerations lead us to three different objectives and therefore three different evaluation metrics for the task of compound splitting: For the first objective, we compare the output of our methods to a manually created gold standard.</S>
    <S sid="22" ssid="17">For the second and third, we provide differently prepared training corpora to statistical machine translation systems.</S>
  </SECTION>
  <SECTION title="2 Related Work" number="2">
    <S sid="23" ssid="1">While the linguistic properties of compounds are widely studied [Langer, 1998], there has been only limited work on empirical methods to split up compounds for specific applications.</S>
    <S sid="24" ssid="2">Brown [2002] proposes a approach guided by a parallel corpus.</S>
    <S sid="25" ssid="3">It is limited to breaking compounds into cognates and words found in a translation lexicon.</S>
    <S sid="26" ssid="4">This lexicon may also be acquired by training a statistical machine translation system.</S>
    <S sid="27" ssid="5">The methods leads to improved text coverage of an example based machine translation system, but no results on translation performance are reported.</S>
    <S sid="28" ssid="6">Monz and de Rijke [2001] and Hedlund et al. [2001] successfully use lexicon based approaches to compound splitting for information retrieval.</S>
    <S sid="29" ssid="7">Compounds are broken into either the smallest or the biggest words that can be found in a given lexicon.</S>
    <S sid="30" ssid="8">Larson et al. [2000] propose a data-driven method that combines compound splitting and word recombination for speech recognition.</S>
    <S sid="31" ssid="9">While it reduces the number of out-of-vocabulary words, it does not improve speech recognition accuracy.</S>
    <S sid="32" ssid="10">Morphological analyzers such as Morphix [Finkler and Neumann, 19981 usually provide a variety of splitting options and leave it to the subsequent application to pick the best choice.</S>
  </SECTION>
  <SECTION title="3 Splitting Options" number="3">
    <S sid="33" ssid="1">Compounds are created by joining existing words together.</S>
    <S sid="34" ssid="2">Thus, to enumerate all possible splittings of a compound, we consider all splits into known words.</S>
    <S sid="35" ssid="3">Known words are words that exist in a training corpus, in our case the European parliament proceedings consisting of 20 million words of German [Koehn, 2002].</S>
    <S sid="36" ssid="4">When joining words, filler letters may be inserted at the joint.</S>
    <S sid="37" ssid="5">These are called Fugenelemente in German.</S>
    <S sid="38" ssid="6">Recall the example of Aktionsplan, where the letter s was inserted between Aktion and Plan.</S>
    <S sid="39" ssid="7">Since there are no simple rules for when such letters may be inserted we allow them between any two words.</S>
    <S sid="40" ssid="8">As fillers we allow s and es when splitting German words, which covers almost all cases.</S>
    <S sid="41" ssid="9">Other transformations at joints include dropping of letters, such as when Schweigen and Minute are joined into Schweigeminute, dropping an n. A extensive study of such transformations is carried out by Langer [1998] for German.</S>
    <S sid="42" ssid="10">To summarize: We try to cover the entire length of the compound with known words and fillers between words.</S>
    <S sid="43" ssid="11">An algorithm to break up words in such a manner could be implemented using dynamic programming, but since computational complexity is not a problem, we employ an exhaustive recursive search.</S>
    <S sid="44" ssid="12">To speed up word matching, we store the known words in a hash based on the first three letters.</S>
    <S sid="45" ssid="13">Also, we restrict known words to words of at least length three.</S>
    <S sid="46" ssid="14">For the word Aktionsplan, we find the following splitting options: We arrive at these splitting options, since all the parts &#8212; aktionsplan, aktions, aktion, akt, ion, and plan &#8212; have been observed as whole words in the training corpus.</S>
    <S sid="47" ssid="15">These splitting options are the basis of our work.</S>
    <S sid="48" ssid="16">In the following we discuss methods that pick one of them as the correct splitting of the compound.</S>
  </SECTION>
  <SECTION title="4 Frequency Based Metric" number="4">
    <S sid="49" ssid="1">The more frequent a word occurs in a training corpus, the bigger the statistical basis to estimate translation probabilities, and the more likely the correct translation probability distribution is learned [Koehn and Knight, 20011.</S>
    <S sid="50" ssid="2">This insight leads us to define a splitting metric based on word frequency.</S>
    <S sid="51" ssid="3">Given the count of words in the corpus, we pick the split S with the highest geometric mean of word frequencies of its parts pi (n being the number of parts): Since this metric is purely defined in terms of German word frequencies, there is not necessarily a relationship between the selected option and correspondence to English words.</S>
    <S sid="52" ssid="4">If a compound occurs more frequently in the text than its parts, this metric would leave the compound unbroken &#8212; even if it is translated in parts into English.</S>
    <S sid="53" ssid="5">In fact, this is the case for the example Aktionsplan.</S>
    <S sid="54" ssid="6">Again, the four options: Behind each part, we indicated its frequency in parenthesis.</S>
    <S sid="55" ssid="7">On the right side is the geometric mean score of these frequencies.</S>
    <S sid="56" ssid="8">The score for the unbroken compound (852) is higher than the preferred choice (825.6).</S>
    <S sid="57" ssid="9">On the other hand, a word that has a simple oneto-one correspondence to English may be broken into parts that bear little relation to its meaning.</S>
    <S sid="58" ssid="10">We can illustrate this on the example of Freitag (English: Friday), which is broken into frei (English: free) and Tag (English: day):</S>
  </SECTION>
  <SECTION title="5 Guidance from a Parallel Corpus" number="5">
    <S sid="59" ssid="1">As stated earlier, one of our objectives is the splitting of compounds into parts that have one-to-one correspondence to English.</S>
    <S sid="60" ssid="2">One source of information about word correspondence is a parallel corpus: text in a foreign language, accompanied by translations into English.</S>
    <S sid="61" ssid="3">Usually, such a corpus is provided in form of sentence translation pairs.</S>
    <S sid="62" ssid="4">Going through such a corpus, we can check for each splitting option if its parts have translations in the English translation of the sentence.</S>
    <S sid="63" ssid="5">In the case of Aktionsplan we would expect the words action and plan on the English side, but in case of Freitag we would not expect the words free and day.</S>
    <S sid="64" ssid="6">This would lead us to break up Aktionsplan, but not Freitag.</S>
    <S sid="65" ssid="7">See Figure 2 for illustration of this method.</S>
    <S sid="66" ssid="8">This approach requires a translation lexicon.</S>
    <S sid="67" ssid="9">The easiest way to obtain a translation lexicon is to learn it from a parallel corpus.</S>
    <S sid="68" ssid="10">This can be done with the toolkit Giza [Al-Onaizan et al., 1999], which establishes word-alignments for the sentences in the two languages.</S>
    <S sid="69" ssid="11">With this translation lexicon we can perform the method alluded to above: For each German word, we consider all splitting options.</S>
    <S sid="70" ssid="12">For each splitting option, we check if it has translations on the English side.</S>
    <S sid="71" ssid="13">To deal with noise in the translation table, we demand that the translation probability of the English word given the German word be at least 0.01.</S>
    <S sid="72" ssid="14">We also allow each English word to be considered only once: If it is taken as evidence for correspondence to the first part of the compound, it is excluded as evidence for the other parts.</S>
    <S sid="73" ssid="15">If multiple options match the English, we select the one(s) with the most splits and use word frequencies as the ultimate tie-breaker.</S>
    <S sid="74" ssid="16">While this method works well for the examples Aktionsplan and Freitag, it failed in our experiments for words such as Grundrechte (English: basic rights).</S>
    <S sid="75" ssid="17">This word should be broken into the two parts Grund and Rechte.</S>
    <S sid="76" ssid="18">However, Grund translates usually as reason or foundation.</S>
    <S sid="77" ssid="19">But here we are looking for a translation into the adjective basic or fundamental.</S>
    <S sid="78" ssid="20">Such a translation only occurs when Grund is used as the first part of a compound.</S>
    <S sid="79" ssid="21">To account for this, we build a second translation lexicon as follows: First, we break up German words in the parallel corpus with the frequency method.</S>
    <S sid="80" ssid="22">Then, we train a translation lexicon using Giza from the parallel corpus with split German and unchanged English.</S>
    <S sid="81" ssid="23">Since in this corpus Grund is often broken off from a compound, we learn the translation table entry GrundE4basic.</S>
    <S sid="82" ssid="24">By joining the two translation lexicons, we can apply the same method, but this time we correctly split Grundrechte.</S>
    <S sid="83" ssid="25">By splitting all the words on the German side of the parallel corpus, we acquire a vast amount of splitting knowledge (for our data, this covers 75,055 different words).</S>
    <S sid="84" ssid="26">This knowledge contains for instance, that Grundrechte was split up 213 times, and kept together 17 times.</S>
    <S sid="85" ssid="27">When making splitting decisions for new texts, we follow the most frequent option based on the splitting knowledge.</S>
    <S sid="86" ssid="28">If the word has not been seen before, we use the frequency method as a back-off.</S>
  </SECTION>
  <SECTION title="6 Limitation on Part-Of-Speech" number="6">
    <S sid="87" ssid="1">A typical error of the method presented so far is that prefixes and suffixes are often split off.</S>
    <S sid="88" ssid="2">For instance, the word folgenden (English: following) is broken off into folgen (English: consequences) and den (English: the).</S>
    <S sid="89" ssid="3">While this is nonsensical, it is easy to explain: The word the is commonly found in English sentences, and therefore taken as evidence for the existence of a translation for den.</S>
    <S sid="90" ssid="4">Another example for this is the word Voraussetzung (English: condition), which is split into vor and aussetzung.</S>
    <S sid="91" ssid="5">The word vor translates to many different prepositions, which frequently occur in English.</S>
    <S sid="92" ssid="6">To exclude these mistakes, we use information about the parts-of-speech of words.</S>
    <S sid="93" ssid="7">We do not want to break up a compound into parts that are prepositions or determiners, but only content words: nouns, adverbs, adjectives, and verbs.</S>
    <S sid="94" ssid="8">To accomplish this, we tag the German corpus with POS tags using the TnT tagger [Brants, 2000].</S>
    <S sid="95" ssid="9">We then obtain statistics on the parts-ofspeech of words in the corpus.</S>
    <S sid="96" ssid="10">This allows us to exclude words based on their POS as possible parts of compounds.</S>
    <S sid="97" ssid="11">We limit possible parts of compounds to words that occur most of the time as one of following POS: ADJA, ADJD, ADV, NN, NE, PTKNEG, VVFIN, VVIMP, VVINF, VVIZU, VVPP, VAFIN, VAIMP, VAINF, VAPP, VMFIN, VMINF, VMPP.</S>
  </SECTION>
  <SECTION title="7 Evaluation" number="7">
    <S sid="98" ssid="1">The training set for the experiments is a corpus of 650,000 noun phrases and prepositional phrases (NP/PP).</S>
    <S sid="99" ssid="2">For each German NP/PP, we have a English translation.</S>
    <S sid="100" ssid="3">This data was extracted from the Europarl corpus [Koehn, 20021, with the help of a German and English statistical parser.</S>
    <S sid="101" ssid="4">This limitation is purely for computational reasons, since we expect most compounds to be nouns.</S>
    <S sid="102" ssid="5">An evaluation of full sentences is expected to show similar results.</S>
    <S sid="103" ssid="6">We evaluate the performance of the described methods on a blind test set of 1000 NP/PPs, which contain 3498 words.</S>
    <S sid="104" ssid="7">Following good engineering practice, the methods have been developed with a different development test set.</S>
    <S sid="105" ssid="8">This restrains us from over-fitting to a specific test set.</S>
    <S sid="106" ssid="9">Recall that our first objective is to break up German words into parts that have a one-to-one translation correspondence to English words.</S>
    <S sid="107" ssid="10">To judge this, we manually annotated the test set with correct splits.</S>
    <S sid="108" ssid="11">Given this gold standard, we can evaluate the splits proposed by the methods.</S>
    <S sid="109" ssid="12">The results of this evaluation are given in Table 1.</S>
    <S sid="110" ssid="13">The columns in this table mean: correct split: words that should be split and were split correctly correct non: words that should not be split and were not wrong not: words that should be split but were not wrong faulty split: words that should be split, were split, but wrongly (either too much or too little) wrong split: words that should not be split, but were precision: (correct split) / (correct split + wrong faulty split + wrong superfluous split) recall: (correct split) / (correct split + wrong faulty split + wrong not split) accuracy: (correct) / (correct + wrong) To briefly review the methods: raw: unprocessed data with no splits eager: biggest split, i.e., the split into as many parts as possible.</S>
    <S sid="111" ssid="14">If multiple biggest splits are possible, the one with the highest frequency score is taken. frequency based: split into most frequent words, as described in Section 4 using parallel: split guided by splitting knowledge from a parallel corpus, as described in Section 5 using parallel and POS: as previous, with an additional restriction on the POS of split parts, as described in Section 6 Since we developed our methods to improve on this metric, it comes as no surprise that the most sophisticated method that employs splitting knowledge from a parallel corpus and information about POS tags proves to be superior with 99.1% accuracy.</S>
    <S sid="112" ssid="15">Its main remaining source of error is the lack of training data.</S>
    <S sid="113" ssid="16">For instance, it fails on more obscure words such as Passagier&#8212;auficommen (English: passenger volume), where even some of the parts have not been seen in the training corpus.</S>
    <S sid="114" ssid="17">The immediate purpose of our work is to improve the performance of statistical machine translation systems.</S>
    <S sid="115" ssid="18">Hence, we use the splitting methods to prepare training and testing data to optimize the performance of such systems.</S>
    <S sid="116" ssid="19">First, we measured the impact on a word based statistical machine translation system, the widely studied IBM Model 4 [Brown et al., 1990], for which training tools [Al-Onaizan et al., 19991 and decoders [Germann et al., 2001] are freely available.</S>
    <S sid="117" ssid="20">We trained the system on the 650,000 NP/PPs with the Giza toolkit, and evaluated the translation quality on the same 1000 NP/PP test set as in the previous section.</S>
    <S sid="118" ssid="21">Training and testing data was split consistently in the same way.</S>
    <S sid="119" ssid="22">The translation accuracy is measured against reference translations using the BLEU score [Papineni et al., 2002].</S>
    <S sid="120" ssid="23">Table 2 displays the results.</S>
    <S sid="121" ssid="24">Somewhat surprisingly, the frequency based method leads to better translation quality than the more accurate methods that take advantage from knowledge from the parallel corpus.</S>
    <S sid="122" ssid="25">One reason for this is that the system recovers more easily from words that are split too much than from words that are not split up sufficiently.</S>
    <S sid="123" ssid="26">Of course, this has limitations: Eager splitting into as many parts as possible fares abysmally.</S>
    <S sid="124" ssid="27">7.3 Translation Quality with Phrase Based Machine Translation Compound words violate the bias for one-to-one word correspondences of word based SMT systems.</S>
    <S sid="125" ssid="28">This is one of the motivations for phrase based systems that translate groups of words.</S>
    <S sid="126" ssid="29">One of such systems is the joint model proposed by Marcu and Wong [2002].</S>
    <S sid="127" ssid="30">We trained this sysbased statistical machine translation system.</S>
    <S sid="128" ssid="31">The ability to group split words into phrases overcomes the many mistakes of maximal (eager) splitting of words and outperforms the more accurate methods. tem with the different flavors of our training data, and evaluated the performance as before.</S>
    <S sid="129" ssid="32">Table 3 shows the results.</S>
    <S sid="130" ssid="33">Here, the eager splitting method that performed so poorly with the word based SMT system comes out ahead.</S>
    <S sid="131" ssid="34">The task of deciding the granularity of good splits is deferred to the phrase based SMT system, which uses a statistical method to group phrases and rejoin split words.</S>
    <S sid="132" ssid="35">This turns out to be even slightly better than the frequency based method.</S>
  </SECTION>
  <SECTION title="8 Conclusion" number="8">
    <S sid="133" ssid="1">We introduced various methods to split compound words into parts.</S>
    <S sid="134" ssid="2">Our experimental results demonstrate that what constitutes the optimal splitting depends on the intended application.</S>
    <S sid="135" ssid="3">While one of our method reached 99.1% accuracy compared against a gold standard of one-to-one correspondences to English, other methods show superior results in the context of statistical machine translation.</S>
    <S sid="136" ssid="4">For this application, we could dramatically improve the translation quality by up to 0.039 points as measured by the BLEU score.</S>
    <S sid="137" ssid="5">The words resulting from compound splitting could also be marked as such, and not just treated as regular words, as they are now.</S>
    <S sid="138" ssid="6">Future machine translation models that are sensitive to such linguistic clues might benefit even more.</S>
  </SECTION>
</PAPER>
