<PAPER>
  <S sid="0">Using The Web To Obtain Frequencies For Unseen Bigrams</S>
  <ABSTRACT>
    <S sid="1" ssid="1">This article shows that the Web can be employed to obtain frequencies for bigrams that are unseen in a given corpus.</S>
    <S sid="2" ssid="2">We describe a method for retrieving counts for adjective-noun, noun-noun, and verb-object bigrams from the Web by querying a search engine.</S>
    <S sid="3" ssid="3">We evaluate this method by demonstrating: (a) a high correlation between Web frequencies and corpus frequencies; (b) a reliable correlation between Web frequencies and plausibility judgments; (c) a reliable correlation between Web frequencies and frequencies recreated using class-based smoothing; (d) a good performance of Web frequencies in a pseudodisambiguation task.</S>
  </ABSTRACT>
  <SECTION title="" number="1">
    <S sid="4" ssid="1">This article shows that the Web can be employed to obtain frequencies for bigrams that are unseen in a given corpus.</S>
    <S sid="5" ssid="2">We describe a method for retrieving counts for adjective-noun, noun-noun, and verb-object bigrams from the Web by querying a search engine.</S>
    <S sid="6" ssid="3">We evaluate this method by demonstrating: (a) a high correlation between Web frequencies and corpus frequencies; (b) a reliable correlation between Web frequencies and plausibility judgments; (c) a reliable correlation between Web frequencies and frequencies recreated using class-based smoothing; (d) a good performance of Web frequencies in a pseudodisambiguation task.</S>
  </SECTION>
  <SECTION title="1." number="2">
    <S sid="7" ssid="1">In two recent papers, Banko and Brill (2001a, 2001b) criticize the fact that current NLP algorithms are typically optimized, tested, and compared on fairly small data sets (corpora with millions of words), even though data sets several orders of magnitude larger are available, at least for some NLP tasks.</S>
    <S sid="8" ssid="2">Banko and Brill (2001a, 2001b) experiment with context-sensitive spelling correction, a task for which large amounts of data can be obtained straightforwardly, as no manual annotation is required.</S>
    <S sid="9" ssid="3">They demonstrate that the learning algorithms typically used for spelling correction benefit significantly from larger training sets, and that their performance shows no sign of reaching an asymptote as the size of the training set increases.</S>
    <S sid="10" ssid="4">Arguably, the largest data set that is available for NLP is the Web,1 which currently consists of at least 3,033 million pages.2 Data retrieved from the Web therefore provide enormous potential for training NLP algorithms, if Banko and Brill&#8217;s (2001a, 2001b) findings for spelling corrections generalize; potential applications include tasks that involve word n-grams and simple surface syntax.</S>
    <S sid="11" ssid="5">There is a small body of existing research that tries to harness the potential of the Web for NLP.</S>
    <S sid="12" ssid="6">Grefenstette and Nioche (2000) and Jones and Ghani (2000) use the Web to generate corpora for languages for which electronic resources are scarce, and Resnik (1999) describes a method for mining the Web in order to obtain bilingual texts.</S>
    <S sid="13" ssid="7">Mihalcea and Moldovan (1999) and Agirre and Martinez (2000) use the Web for word sense disambiguation, Volk (2001) proposes a method for resolving PP attachment ambiguities based on Web data, Markert, Nissim, and Modjeska (2003) use the Web for the resolution of nominal anaphora, and Zhu and Rosenfeld (2001) use Web-based n-gram counts to improve language modeling.</S>
    <S sid="14" ssid="8">A particularly interesting application is proposed by Grefenstette (1998), who uses the Web for example-based machine translation.</S>
    <S sid="15" ssid="9">His task is to translate compounds from French into English, with corpus evidence serving as a filter for candidate translations.</S>
    <S sid="16" ssid="10">An example is the French compound groupe de travail.</S>
    <S sid="17" ssid="11">There are five translations of groupe and three translations for travail (in the dictionary that Grefenstette [1998] is using), resulting in 15 possible candidate translations.</S>
    <S sid="18" ssid="12">Only one of them, namely, work group, has a high corpus frequency, which makes it likely that this is the correct translation into English.</S>
    <S sid="19" ssid="13">Grefenstette (1998) observes that this approach suffers from an acute data sparseness problem if the counts are obtained from a conventional corpus.</S>
    <S sid="20" ssid="14">However, as Grefenstette (1998) demonstrates, this problem can be overcome by obtaining counts through Web searches, instead of relying on a corpus.</S>
    <S sid="21" ssid="15">Grefenstette (1998) therefore effectively uses the Web as a way of obtaining counts for compounds that are sparse in a given corpus.</S>
    <S sid="22" ssid="16">Although this is an important initial result, it raises the question of the generality of the proposed approach to overcoming data sparseness.</S>
    <S sid="23" ssid="17">It remains to be shown that Web counts are generally useful for approximating data that are sparse or unseen in a given corpus.</S>
    <S sid="24" ssid="18">It seems possible, for instance, that Grefenstette&#8217;s (1998) results are limited to his particular task (filtering potential translations) or to his particular linguistic phenomenon (noun-noun compounds).</S>
    <S sid="25" ssid="19">Another potential problem is the fact that Web counts are far more noisy than counts obtained from a well-edited, carefully balanced corpus.</S>
    <S sid="26" ssid="20">The effect of this noise on the usefulness of the Web counts is largely unexplored.</S>
    <S sid="27" ssid="21">Zhu and Rosenfeld (2001) use Web-based n-gram counts for language modeling.</S>
    <S sid="28" ssid="22">They obtain a standard language model from a 103-million-word corpus and employ Web-based counts to interpolate unreliable trigram estimates.</S>
    <S sid="29" ssid="23">They compare their interpolated model against a baseline trigram language model (without interpolation) and show that the interpolated model yields an absolute reduction in word error rate of .93% over the baseline.</S>
    <S sid="30" ssid="24">Zhu and Rosenfeld&#8217;s (2001) results demonstrate that the Web can be a source of data for language modeling.</S>
    <S sid="31" ssid="25">It is not clear, however, whether their result carries over to tasks that employ linguistically meaningful word sequences (e.g., head-modifier pairs or predicate-argument tuples) rather than simply adjacent words.</S>
    <S sid="32" ssid="26">Furthermore, Zhu and Rosenfeld (2001) do not undertake any studies that evaluate Web frequencies directly (i.e., without a task such as language modeling).</S>
    <S sid="33" ssid="27">This could be done, for instance, by comparing Web frequencies to corpus frequencies, or to frequencies re-created by smoothing techniques.</S>
    <S sid="34" ssid="28">The aim of the present article is to generalize Grefenstette&#8217;s (1998) and Zhu and Rosenfeld&#8217;s (2001) findings by testing the hypothesis that the Web can be employed to obtain frequencies for bigrams that are unseen in a given corpus.</S>
    <S sid="35" ssid="29">Instead of having a particular task in mind (which would introduce a sampling bias), we rely on sets of bigrams that are randomly selected from a corpus.</S>
    <S sid="36" ssid="30">We use a Web-based approach for bigrams that encode meaningful syntactic relations and obtain Web frequencies not only for noun-noun bigrams, but also for adjective-noun and verb-object bigrams.</S>
    <S sid="37" ssid="31">We thus explore whether this approach generalizes to different predicateargument combinations.</S>
    <S sid="38" ssid="32">We evaluate our Web counts in four ways: (a) comparison with actual corpus frequencies from two different corpora, (b) comparison with human plausibility judgments, (c) comparison with frequencies re-created using class-based smoothing, and (d) performance in a pseudodisambiguation task on data sets from the literature.</S>
  </SECTION>
  <SECTION title="2." number="3">
    <S sid="39" ssid="1">The data sets used in the present experiment were obtained from the British National Corpus (BNC) (see Burnard [1995]).</S>
    <S sid="40" ssid="2">The BNC is a large, synchronic corpus, consisting of 90 million words of text and 10 million words of speech.</S>
    <S sid="41" ssid="3">The BNC is a balanced corpus (i.e., it was compiled so as to represent a wide range of present day British English).</S>
    <S sid="42" ssid="4">The written part includes samples from newspapers, magazines, books (both academic and fiction), letters, and school and university essays, among other kinds of text.</S>
    <S sid="43" ssid="5">The spoken part consists of spontaneous conversations, recorded from volunteers balanced by age, region, and social class.</S>
    <S sid="44" ssid="6">Other samples of spoken language are also included, ranging from business or government meetings to radio shows and phoneins.</S>
    <S sid="45" ssid="7">The corpus represents many different styles and varieties and is not limited to any particular subject field, genre, or register.</S>
    <S sid="46" ssid="8">For the present study, the BNC was used to extract data for three types of predicateargument relations.</S>
    <S sid="47" ssid="9">The first type is adjective-noun bigrams, in which we assume that the noun is the predicate that takes the adjective as its argument.3 The second predicate-argument type we investigated is noun-noun compounds.</S>
    <S sid="48" ssid="10">For these, we assume that the rightmost noun is the predicate that selects the leftmost noun as its argument (as compound nouns are generally right-headed in English).</S>
    <S sid="49" ssid="11">Third, we included verb-object bigrams, in which the verb is the predicate that selects the object as its argument.</S>
    <S sid="50" ssid="12">We considered only direct NP objects; the bigram consists of the verb and the head noun of the object.</S>
    <S sid="51" ssid="13">For each of the three predicate-argument relations, we gathered two data sets, one containing seen bigrams (i.e., bigrams that occur in the BNC) and one with unseen bigrams (i.e., bigrams that do not occur in the BNC).</S>
    <S sid="52" ssid="14">For the seen adjective-noun bigrams, we used the data of Lapata, McDonald, and Keller (1999), who compiled a set of 90 bigrams as follows.</S>
    <S sid="53" ssid="15">First, 30 adjectives were randomly chosen from a part-of-speech-tagged and lemmatized version of the BNC so that each adjective had exactly two senses according to WordNet (Miller et al. 1990) and was unambiguously tagged as &#8220;adjective&#8221; 98.6% of the time.</S>
    <S sid="54" ssid="16">Lapata, McDonald, and Keller used the part-of-speech-tagged version that is made available with the BNC and was tagged using CLAWS4 (Leech, Garside, and Bryant 1994), a probabilistic partof-speech tagger, with error rate ranging from 3% to 4%.</S>
    <S sid="55" ssid="17">The lemmatized version of the corpus was obtained using Karp et al.&#8217;s (1992) morphological analyzer.</S>
    <S sid="56" ssid="18">The 30 adjectives ranged in BNC frequency from 1.9 to 49.1 per million words; that is, they covered the whole range from fairly infrequent to highly frequent items.</S>
    <S sid="57" ssid="19">Gsearch (Corley et al. 2001), a chart parser that detects syntactic patterns in a tagged corpus by exploiting a user-specified context-free grammar and a syntactic query, was used to extract all nouns occurring in a head-modifier relationship with one of the 30 adjectives.</S>
    <S sid="58" ssid="20">Examples of the syntactic patterns the parser identified are given in Table 1.</S>
    <S sid="59" ssid="21">In the case of adjectives modifying compound nouns, only sequences of two nouns were included, and the rightmost-occurring noun was considered the head.</S>
    <S sid="60" ssid="22">Bigrams involving proper nouns or low-frequency nouns (less than 10 per million words) were discarded.</S>
    <S sid="61" ssid="23">This was necessary because the bigrams were used in experiments involving native speakers (see Section 3.2), and we wanted to reduce the risk of including words unfamiliar to the experimental subjects.</S>
    <S sid="62" ssid="24">For each adjective, the set of bigrams was divided into three frequency bands based on an equal division of the range of log-transformed co-occurrence frequencies.</S>
    <S sid="63" ssid="25">Then one bigram was chosen at random from each band.</S>
    <S sid="64" ssid="26">This procedure ensures that the whole range of frequencies is represented in our sample.</S>
    <S sid="65" ssid="27">Lapata, Keller, and McDonald (2001) compiled a set of 90 unseen adjective-noun bigrams using the same 30 adjectives.</S>
    <S sid="66" ssid="28">For each adjective, Gsearch was used to compile a list of all nouns that did not co-occur in a head-modifier relationship with the adjective.</S>
    <S sid="67" ssid="29">Again, proper nouns and low-frequency nouns were discarded from this list.</S>
    <S sid="68" ssid="30">Then each adjective was paired with three randomly chosen nouns from its list of non-co-occurring nouns.</S>
    <S sid="69" ssid="31">Examples of seen and unseen adjective-noun bigrams are shown in Table 2.</S>
    <S sid="70" ssid="32">For the present study, we applied the procedure used by Lapata, McDonald, and Keller (1999) and Lapata, Keller, and McDonald (2001) to noun-noun bigrams and to verb-object bigrams, creating a set of 90 seen and 90 unseen bigrams for each type of predicate-argument relationship.</S>
    <S sid="71" ssid="33">More specifically, 30 nouns and 30 verbs were chosen according to the same criteria proposed for the adjective study (i.e., minimal sense ambiguity and unambiguous part of speech).</S>
    <S sid="72" ssid="34">All nouns modifying one of the 30 nouns were extracted from the BNC using a heuristic from Lauer (1995) that looks for consecutive pairs of nouns that are neither preceded nor succeeded by another noun.</S>
    <S sid="73" ssid="35">Lauer&#8217;s heuristic (see (1)) effectively avoids identifying as two-word compounds noun sequences that are part of a larger compound.</S>
    <S sid="74" ssid="36">Here, w1 w2 w3 w4 denotes the occurrence of a sequence of four words and N is the set of words tagged as nouns in the corpus.</S>
    <S sid="75" ssid="37">C is the set of compounds identified by Lauer&#8217;s (1995) heuristic.</S>
    <S sid="76" ssid="38">Verb-object bigrams for the 30 preselected verbs were obtained from the BNC using Cass (Abney 1996), a robust chunk parser designed for the shallow analysis of noisy text.</S>
    <S sid="77" ssid="39">The parser recognizes chunks and simplex clauses (i.e., sequences of nonrecursive clauses) using a regular expression grammar and a part-of-speech-tagged corpus, without attempting to resolve attachment ambiguities.</S>
    <S sid="78" ssid="40">It comes with a largescale grammar for English and a built-in tool that extracts predicate-argument tuples out of the parse trees that Cass produces.</S>
    <S sid="79" ssid="41">The parser&#8217;s output was postprocessed to remove bracketing errors and errors in identifying chunk categories that could potentially result in bigrams whose members do not stand in a verb-argument relationship.</S>
    <S sid="80" ssid="42">Tuples containing verbs or nouns attested in a verb-argument relationship only once were eliminated.</S>
    <S sid="81" ssid="43">Particle verbs were retained only if the particle was adjacent to the verb (e.g., come off heroin).</S>
    <S sid="82" ssid="44">Verbs followed by the preposition by and a head noun were considered instances of verb-subject relations.</S>
    <S sid="83" ssid="45">It was assumed that PPs adjacent to the verb headed by any of the prepositions in, to, for, with, on, at, from, of, into, through, and upon were prepositional objects (see Lapata [2001] for details on the filtering process).</S>
    <S sid="84" ssid="46">Only nominal heads were retained from the objects returned by the parser.</S>
    <S sid="85" ssid="47">As in the adjective study, noun-noun bigrams and verb-object bigrams with proper nouns or low-frequency nouns (less than 10 per million words) were discarded.</S>
    <S sid="86" ssid="48">The sets of noun-noun and verb-object bigrams were divided into three frequency bands, and one bigram was chosen at random from each band.</S>
    <S sid="87" ssid="49">The procedure described by Lapata, Keller, and McDonald (2001) was followed for creating sets of unseen noun-noun and verb-object bigrams: for each noun or verb, we compiled a list of all nouns with which it did not co-occur within a noun-noun or verbobject bigram in the BNC.</S>
    <S sid="88" ssid="50">Again, Lauer&#8217;s (1995) heuristic and Abney&#8217;s (1996) partial parser were used to identify bigrams, and proper nouns and low-frequency nouns were excluded.</S>
    <S sid="89" ssid="51">For each noun and verb, three bigrams were formed by pairing it with a noun randomly selected from the set of the non-co-occurring nouns for that noun or verb.</S>
    <S sid="90" ssid="52">Table 2 lists examples for the seen and unseen noun-noun and verb-object bigrams generated by this procedure.</S>
    <S sid="91" ssid="53">The extracted bigrams are in several respects an imperfect source of information about adjective-noun or noun-noun modification and verb-object relations.</S>
    <S sid="92" ssid="54">First notice that both Gsearch and Cass detect syntactic patterns on part-of-speech-tagged corpora.</S>
    <S sid="93" ssid="55">This means that parsing errors are likely to result because of tagging mistakes.</S>
    <S sid="94" ssid="56">Second, even if one assumes perfect tagging, the heuristic nature of our extraction procedures may introduce additional noise or miss bigrams for which detailed structural information would be needed.</S>
    <S sid="95" ssid="57">For instance, our method for extracting adjective-noun pairs ignores cases in which the adjective modifies noun sequences of length greater than two.</S>
    <S sid="96" ssid="58">The heuristic in (1) considers only two-word noun sequences.</S>
    <S sid="97" ssid="59">Abney&#8217;s (1996) chunker recognizes basic syntactic units without resolving attachment ambiguities or recovering missing information (such as traces resulting from the movement of constituents).</S>
    <S sid="98" ssid="60">Although parsing is robust and fast (since unlike in traditional parsers, no global optimization takes place), the identified verb-argument relations are undoubtedly somewhat noisy, given the errors inherent in the part-of-speech tagging and chunk recognition procedure.</S>
    <S sid="99" ssid="61">When evaluated against manually annotated data, Abney&#8217;s (1996) parser identified chunks with 87.9% precision and 87.1% recall.</S>
    <S sid="100" ssid="62">The parser further achieved a per-word accuracy of 92.1% (where per-word accuracy includes the chunk category and chunk length identified correctly).</S>
    <S sid="101" ssid="63">Despite their imperfect output, heuristic methods for the extraction of syntactic relations are relatively common in statistical NLP.</S>
    <S sid="102" ssid="64">Several statistical models employ frequencies obtained from the output of partial parsers and other heuristic methods; these include models for disambiguating the attachment site of prepositional phrases (Hindle and Rooth 1993; Ratnaparkhi 1998), models for interpreting compound nouns (Lauer 1995; Lapata 2002) and polysemous adjectives (Lapata 2001), models for the induction of selectional preferences (Abney and Light 1999), methods for automatically clustering words according to their distribution in particular syntactic contexts (Pereira, Tishby, and Lee 1993), automatic thesaurus extraction (Grefenstette 1994; Curran 2002), and similarity-based models of word co-occurrence probabilities (Lee 1999; Dagan, Lee, and Pereira 1999).</S>
    <S sid="103" ssid="65">In this article we investigate alternative ways for obtaining bigram frequencies that are potentially useful for such models despite the fact that some of these bigrams are identified in a heuristic manner and may be noisy.</S>
    <S sid="104" ssid="66">We also obtained corpus counts from a second corpus, the North American News Text Corpus (NANTC).</S>
    <S sid="105" ssid="67">This corpus differs in several important respects from the BNC.</S>
    <S sid="106" ssid="68">It is substantially larger, as it contains 350 million words of text.</S>
    <S sid="107" ssid="69">Also, it is not a balanced corpus, as it contains material from only one genre, namely, news text.</S>
    <S sid="108" ssid="70">However, the text originates from a variety of sources (Los Angeles Times, Washington Post, New York Times News Syndicate, Reuters News Service, and Wall Street Journal).</S>
    <S sid="109" ssid="71">Whereas the BNC covers British English, the NANTC covers American English.</S>
    <S sid="110" ssid="72">All these differences mean that the NANTC provides a second, independent standard against which to compare Web counts.</S>
    <S sid="111" ssid="73">At the same time the correlation found between the counts obtained from the two corpora can serve as an upper limit for the correlation that we can expect between corpus counts and Web counts.</S>
    <S sid="112" ssid="74">The NANTC corpus was parsed using MINIPAR (Lin 1994, 2001), a broad-coverage parser for English.</S>
    <S sid="113" ssid="75">MINIPAR employs a manually constructed grammar and a lexicon derived from WordNet with the addition of proper names (130,000 entries in total).</S>
    <S sid="114" ssid="76">Lexicon entries contain part-of-speech and subcategorization information.</S>
    <S sid="115" ssid="77">The grammar is represented as a network of 35 nodes (i.e., grammatical categories) and 59 edges (i.e., types of syntactic [dependency] relationships).</S>
    <S sid="116" ssid="78">MINIPAR employs a distributedchart parsing algorithm.</S>
    <S sid="117" ssid="79">Instead of a single chart, each node in the grammar network maintains a chart containing partially built structures belonging to the grammatical category represented by the node.</S>
    <S sid="118" ssid="80">Grammar rules are implemented as constraints associated with the nodes and edges.</S>
    <S sid="119" ssid="81">The output of MINIPAR is a dependency tree that represents the dependency relations between words in a sentence.</S>
    <S sid="120" ssid="82">Table 3 shows a subset of the dependencies MINIPAR outputs for the sentence The fat cat ate the door mat.</S>
    <S sid="121" ssid="83">In contrast to Gsearch and Cass, MINIPAR produces all possible parses for a given sentence.</S>
    <S sid="122" ssid="84">The parses are ranked according to the product of the probabilities of their edges, and the most likely parse is returned.</S>
    <S sid="123" ssid="85">Lin (1998) evaluated the parser on the SUSANNE corpus (Sampson 1995), a domain-independent corpus of British English, and achieved a recall of 79% and precision of 89% on the dependency relations. mat N:det:Det the determiner of noun mat N:nn:N door prenominal modifier of noun For our experiments, we concentrated solely on adjective-noun, noun-noun, and verb object relations (denoted as N:mod:A, N:nn:N, and V:obj:N in Table 3).</S>
    <S sid="124" ssid="86">From the syntactic analysis provided by the parser, we extracted all occurrences of bigrams that were attested both in the BNC and the NANTC corpus.</S>
    <S sid="125" ssid="87">In this way, we obtained NANTC frequency counts for the bigrams that we had randomly selected from the BNC.</S>
    <S sid="126" ssid="88">Table 4 shows the NANTC counts for the set of seen bigrams from Table 2.</S>
    <S sid="127" ssid="89">Because of the differences in the extraction methodology (chunking versus full parsing) and the text genre (balanced corpus versus news text), we expected that some BNC bigrams would not be attested in the NANTC corpus.</S>
    <S sid="128" ssid="90">More precisely, zero frequencies were returned for 23 adjective-noun, 16 verb-noun, and 37 noun-noun bigrams.</S>
    <S sid="129" ssid="91">The fact that more zero frequencies were observed for noun-noun bigrams than for the other two types is perhaps not surprising considering the ease with which novel compounds are created (Levi 1978).</S>
    <S sid="130" ssid="92">We adjusted the zero counts by setting them to .5.</S>
    <S sid="131" ssid="93">This was necessary because all further analyses were carried out on logtransformed frequencies (see Table 4).</S>
    <S sid="132" ssid="94">Web counts for bigrams were obtained using a simple heuristic based on queries to the search engines AltaVista and Google.</S>
    <S sid="133" ssid="95">All search terms took into account the inflectional morphology of nouns and verbs.</S>
    <S sid="134" ssid="96">The search terms for verb-object bigrams matched not only cases in which the object was directly adjacent to the verb (e.g., fulfill obligation), but also cases in which there was an intervening determiner (e.g., fulfill the/an obligation).</S>
    <S sid="135" ssid="97">The following search terms were used for adjective-noun, noun-noun, and verb-object bigrams, respectively: Note that all searches were for exact matches, which means that the words in the search terms had to be directly adjacent to score a match.</S>
    <S sid="136" ssid="98">This is encoded by enclosing the search term in quotation marks.</S>
    <S sid="137" ssid="99">All our search terms were in lower case.</S>
    <S sid="138" ssid="100">We searched the whole Web (as indexed by AltaVista and Google); that is, the queries were not restricted to pages in English.</S>
    <S sid="139" ssid="101">Based on the Web searches, we obtained bigram frequencies by adding up the number of pages that matched the morphologically expanded forms of the search terms (see the patterns in (2)&#8211;(4)).</S>
    <S sid="140" ssid="102">This process can be automated straightforwardly using a script that generates all the search terms for a given bigram, issues an AltaVista or Google query for each of the search terms, and then adds up the resulting number of matches for each bigram.</S>
    <S sid="141" ssid="103">We applied this process to all the bigrams in our data set, covering seen and unseen adjective-noun, noun-noun, and verb-object bigrams (i.e., a set of 540 bigrams in total).</S>
    <S sid="142" ssid="104">The queries were carried out in January 2003 (and thus the counts are higher than those reported in Keller, Lapata, and Ourioupina [2002], which were generated about a year earlier).</S>
    <S sid="143" ssid="105">For some bigrams that were unseen in the BNC, our Web-based procedure returned zero counts; that is, there were no matches for those bigrams in the Web searches.</S>
    <S sid="144" ssid="106">It is interesting to compare the Web and NANTC with respect to zero counts: Both data sources are larger than the BNC and hence should be able to mitigate the data sparseness problem to a certain extent.</S>
    <S sid="145" ssid="107">Table 5 provides the number of zero counts for both Web search engines and compares them to the number of bigrams that yielded no matches in the NANTC.</S>
    <S sid="146" ssid="108">We observe that the Web counts are substantially less sparse than the NANTC counts: In the worst case, there are nine bigrams for which our Web queries returned no matches (10% of the data), whereas up to 82 bigrams were unseen in the NANTC (91% of the data).</S>
    <S sid="147" ssid="109">Recall that the NANTC is 3.5 times larger than the BNC, which does not seem to be enough to substantially mitigate data sparseness.</S>
    <S sid="148" ssid="110">All further analyses were carried out on log-transformed frequencies; hence we adjusted zero counts by setting them to .5.</S>
    <S sid="149" ssid="111">Table 6 shows descriptive statistics for the bigram counts we obtained using AltaVista and Google.</S>
    <S sid="150" ssid="112">For comparison, this table also provides descriptive statistics for the BNC and NANTC counts (for seen bigrams only) and for the counts re-created using class-based smoothing (see Section 3.3 for details on the re-created frequencies).</S>
    <S sid="151" ssid="113">From these data, we computed the average factor by which the Web counts are larger than the BNC counts.</S>
    <S sid="152" ssid="114">The results are given in Table 7 and indicate that the AltaVista counts are between 550 and 691 times larger than the BNC counts, and that the Google counts are between 1,064 and 1,306 times larger than the BNC counts.</S>
    <S sid="153" ssid="115">As we know the size of the BNC (100 million words), we can use these figures to estimate the number of words available on the Web: between 55.0 and 69.1 billion words for AltaVista, and between 106.4 and 139.6 billion words for Google.</S>
    <S sid="154" ssid="116">These estimates are in the same order of magnitude as Grefenstette and Nioche&#8217;s (2000) estimate that 48.1 billion words of English are available on the Web (based on AltaVista counts compiled in February 2000).</S>
    <S sid="155" ssid="117">They also agree with Zhu and Rosenfeld&#8217;s (2001) estimate that the effective size of the Web is between 79 and 108 billion words (based on AltaVista, Lycos, and FAST counts; no date given).</S>
    <S sid="156" ssid="118">The method we used to retrieve Web counts is based on very simple heuristics; it is thus inevitable that the counts generated will contain a certain amount of noise.</S>
    <S sid="157" ssid="119">In this section we discuss a number of potential sources of such noise.</S>
    <S sid="158" ssid="120">An obvious limitation of our method is that it relies on the page counts returned by the search engines; we do not download the pages themselves for further processing.</S>
    <S sid="159" ssid="121">Note that many of the bigrams in our sample are very frequent (up to 106 matches; see the &#8220;Max&#8221; columns in Table 6), hence the effort involved in downloading all pages would be immense (though methods for downloading a representative sample could probably be devised).</S>
    <S sid="160" ssid="122">Our approach estimates Web frequencies based not on bigram counts directly, but on page counts.</S>
    <S sid="161" ssid="123">In other words, it ignores the fact that a bigram can occur more than once on a given Web page.</S>
    <S sid="162" ssid="124">This approximation is justified, as Zhu and Rosenfeld (2001) demonstrated for unigrams, bigrams, and trigrams: Page counts and n-gram counts are highly correlated on a log-log scale.</S>
    <S sid="163" ssid="125">This result is based on Zhu and Rosenfeld&#8217;s queries to AltaVista, a search engine that at the time of their research returned both the number of pages and the overall number of matches for a given query.4 Another important limitation of our approach arises from the fact that both Google and AltaVista disregard punctuation and capitalization, even if the search term is placed within quotation marks.</S>
    <S sid="164" ssid="126">This can lead to false positives, for instance, if the match crosses a phrase boundary, such as in (5), which matches hungry prey.</S>
    <S sid="165" ssid="127">Other false positives can be generated by page titles and links, such as the examples (6) and (7) which match edition broadcast.5 The fact that our method does not download Web pages means that no tagging, chunking, or parsing can be carried out to ensure that the matches are correct.</S>
    <S sid="166" ssid="128">Instead we rely on the simple adjacency of the search terms, which is enforced by using queries enclosed within quotation marks (see Section 2.3 for details).</S>
    <S sid="167" ssid="129">This means that we miss any nonadjacent matches, even though a chunker or parser (such as the one used for extracting BNC or NANTC bigrams) would find them.</S>
    <S sid="168" ssid="130">An example is an adjectivenoun bigram in which an adverbial intervenes between the adjective and the noun (see Table 1).</S>
    <S sid="169" ssid="131">Furthermore, the absence of tagging, chunking, and parsing can also generate false positives, in particular for queries containing words with part-of-speech ambiguity.</S>
    <S sid="170" ssid="132">(Recall that our bigram selection procedure ensures that the predicate word, but not the argument word, is unambiguous in terms of its POS tagging in the BNC.)</S>
    <S sid="171" ssid="133">As an example, consider process directory, which in our data set is a noun-noun bigram (see Table 2).</S>
    <S sid="172" ssid="134">One of the matches returned by Google is (8), in which process is a verb.</S>
    <S sid="173" ssid="135">Another example is fund membrane, which is a noun-noun bigram in our data set but matches (9) in Google.</S>
    <S sid="174" ssid="136">Keller and Lapata Web Frequencies for Unseen Bigrams Another source of noise is the fact that Google (but not AltaVista) will sometimes return pages that do not include the search term at all.</S>
    <S sid="175" ssid="137">This can happen if the search term is contained in a link to the page (but not on the page itself).</S>
    <S sid="176" ssid="138">As we did not limit our Web searches to English (even though many search engines now allow the target language for a search to be set), there is also a risk that false positives are generated by cross-linguistic homonyms, that is, by words of other languages that are spelled in the same way as the English words in our data sets.</S>
    <S sid="177" ssid="139">However, this problem is mitigated by the fact that English is by far the most common language on the Web, as shown by Grefenstette and Nioche (2000).</S>
    <S sid="178" ssid="140">Also, the chance of two such homonyms forming a valid bigram in another language is probably fairly small.</S>
    <S sid="179" ssid="141">To summarize, Web counts are certainly less sparse than the counts in a corpus of a fixed size (see Section 2.3).</S>
    <S sid="180" ssid="142">However, Web counts are also likely to be significantly more noisy than counts obtained from a carefully tagged and chunked or parsed corpus, as the examples in this section show.</S>
    <S sid="181" ssid="143">It is therefore essential to carry out a comprehensive evaluation of the Web counts generated by our method.</S>
    <S sid="182" ssid="144">This is the topic of the next section.</S>
  </SECTION>
  <SECTION title="3." number="4">
    <S sid="183" ssid="1">Since Web counts can be relatively noisy, as discussed in the previous section, it is crucial to determine whether there is a reliable relationship between Web counts and corpus counts.</S>
    <S sid="184" ssid="2">Once this is assured, we can explore the usefulness of Web counts for overcoming data sparseness.</S>
    <S sid="185" ssid="3">We carried out a correlation analysis to determine whether there is a linear relationship between BNC and NANTC counts and AltaVista and Google counts.</S>
    <S sid="186" ssid="4">All correlation coefficients reported in this article refer to Pearson&#8217;s r.6 All results were obtained on log-transformed counts.7 Table 8 shows the results of correlating Web counts with corpus counts from the BNC, the corpus from which our bigrams were sampled (see Section 2.1).</S>
    <S sid="187" ssid="5">A high correlation coefficient was obtained across the board, ranging from .720 to .847 for AltaVista counts and from .720 to .850 for Google counts.</S>
    <S sid="188" ssid="6">This indicates that Web counts approximate BNC counts for the three types of bigrams under investigation.</S>
    <S sid="189" ssid="7">Note that there is almost no difference between the correlations achieved using Google and AltaVista counts.</S>
    <S sid="190" ssid="8">It is important to check that these results are also valid for counts obtained from other corpora.</S>
    <S sid="191" ssid="9">We therefore correlated our Web counts with the counts obtained from NANTC, a corpus that is larger than the BNC but is drawn from a single genre, namely, news text (see Section 2.2).</S>
    <S sid="192" ssid="10">The results are shown in Table 9.</S>
    <S sid="193" ssid="11">We find that Google and AltaVista counts also correlate significantly with NANTC counts.</S>
    <S sid="194" ssid="12">The correlation coefficients range from .667 to .788 for AltaVista and from .662 to .787 for Google.</S>
    <S sid="195" ssid="13">Again, there is virtually no difference between the correlations for the two search engines.</S>
    <S sid="196" ssid="14">We also observe that the correlation between Web counts and BNC is generally slightly higher than the correlation between Web counts and NANTC counts.</S>
    <S sid="197" ssid="15">We carried out one-tailed t-tests to determine whether the differences in the correlation coefficients were significant.</S>
    <S sid="198" ssid="16">We found that both AltaVista counts (t(87) = 3.11, p &lt; .01) and Google counts (t(87) = 3.21, p &lt; .01) were significantly better correlated with BNC counts than with NANTC counts for adjective-noun bigrams.</S>
    <S sid="199" ssid="17">The difference in correlation coefficients was not significant for noun-noun and verb-object bigrams, for either search engine.</S>
    <S sid="200" ssid="18">Table 9 also shows the correlations between BNC counts and NANTC counts.</S>
    <S sid="201" ssid="19">The intercorpus correlation can be regarded as an upper limit for the correlations we can expect between counts from two corpora that differ in size and genre and that have been obtained using different extraction methods.</S>
    <S sid="202" ssid="20">The correlation between AltaVista and Google counts and NANTC counts reached the upper limit for all three bigram types (one-tailed t-tests found no significant differences between the correlation coefficients).</S>
    <S sid="203" ssid="21">The correlation between BNC counts and Web counts reached the upper limit for noun-noun and verb-object bigrams (no significant differences for either search engine) and significantly exceeded it for adjective-noun bigrams for AltaVista (t(87) = 3.16, p &lt; .01) and Google (t(87) = 3.26, p &lt; .01).</S>
    <S sid="204" ssid="22">We conclude that simple heuristics (see Section 2.3) are sufficient to obtain useful frequencies from the Web; it seems that the large amount of data available for Web counts outweighs the associated problems (noisy, unbalanced, etc.).</S>
    <S sid="205" ssid="23">We found that Web counts were highly correlated with frequencies from two different corpora.</S>
    <S sid="206" ssid="24">Furthermore, Web counts and corpus counts are as highly correlated as counts from two different corpora (which can be regarded as an upper bound).</S>
    <S sid="207" ssid="25">Note that Tables 8 and 9 also provide the correlation coefficients obtained when corpus frequencies are compared with frequencies that were re-created through classbased smoothing, using the BNC as a training corpus (after removing the seen bigrams).</S>
    <S sid="208" ssid="26">This will be discussed in more detail in Section 3.3.</S>
    <S sid="209" ssid="27">Previous work has demonstrated that corpus counts correlate with human plausibility judgments for adjective-noun bigrams.</S>
    <S sid="210" ssid="28">This result holds both for seen bigrams (Lapata, McDonald, and Keller 1999) and for unseen bigrams whose counts have been re-created using smoothing techniques (Lapata, Keller, and McDonald 2001).</S>
    <S sid="211" ssid="29">Based on these findings, we decided to evaluate our Web counts on the task of predicting plausibility ratings.</S>
    <S sid="212" ssid="30">If the Web counts for bigrams correlate with plausibility judgments, then this indicates that the counts are valid, in the sense of being useful for predicting the intuitive plausibility of predicate-argument pairs.</S>
    <S sid="213" ssid="31">The degree of correlation between Web counts and plausibility judgments is an indicator of the quality of the Web counts (compared to corpus counts or counts re-created using smoothing techniques).</S>
    <S sid="214" ssid="32">3.2.1 Method.</S>
    <S sid="215" ssid="33">For seen and unseen adjective-noun bigrams, we used the two sets of plausibility judgments collected by Lapata, McDonald, and Keller (1999) and Lapata, Keller, and McDonald (2001), respectively.</S>
    <S sid="216" ssid="34">We conducted four additional experiments to collect judgments for noun-noun and verb-object bigrams, both seen and unseen.</S>
    <S sid="217" ssid="35">The experimental method was the same for all six experiments.</S>
    <S sid="218" ssid="36">Materials.</S>
    <S sid="219" ssid="37">The experimental stimuli were based on the six sets of seen or unseen bigrams extracted from the BNC as described in Section 2.1 (adjective-noun, nounnoun, and verb-object bigrams).</S>
    <S sid="220" ssid="38">In the adjective-noun and noun-noun cases, the stimuli consisted simply of the bigrams.</S>
    <S sid="221" ssid="39">In the verb-object case, the bigrams were embedded in a short sentence to make them more natural: A proper-noun subject was added.</S>
    <S sid="222" ssid="40">Procedure.</S>
    <S sid="223" ssid="41">The experimental paradigm was magnitude estimation (ME), a technique standardly used in psychophysics to measure judgments of sensory stimuli (Stevens 1975), which Bard, Robertson, and Sorace (1996) and Cowart (1997) have applied to the elicitation of linguistic judgments.</S>
    <S sid="224" ssid="42">The ME procedure requires subjects to estimate the magnitude of physical stimuli by assigning numerical values proportional to the stimulus magnitude they perceive.</S>
    <S sid="225" ssid="43">In contrast to the five- or seven-point scale conventionally used to measure human intuitions, ME employs an interval scale and therefore produces data for which parametric inferential statistics are valid.</S>
    <S sid="226" ssid="44">ME requires subjects to assign numbers to a series of linguistic stimuli in a proportional fashion.</S>
    <S sid="227" ssid="45">Subjects are first exposed to a modulus item, to which they assign an arbitrary number.</S>
    <S sid="228" ssid="46">All other stimuli are rated proportional to the modulus.</S>
    <S sid="229" ssid="47">In this way, each subject can establish his or her own rating scale, thus yielding maximally finegraded data and avoiding the known problems with the conventional ordinal scales for linguistic data (Bard, Robertson, and Sorace 1996; Cowart 1997; Sch&#168;utze 1996).</S>
    <S sid="230" ssid="48">The experiments reported in this article were carried out using the WebExp software package (Keller et al. 1998).</S>
    <S sid="231" ssid="49">A series of previous studies has shown that data obtained using WebExp closely replicate results obtained in a controlled laboratory setting; this has been demonstrated for acceptability judgments (Keller and Alexopoulou 2001), coreference judgments (Keller and Asudeh 2001), and sentence completions (Corley and Scheepers 2002).</S>
    <S sid="232" ssid="50">In the present experiments, subjects were presented with bigram pairs and were asked to rate the degree of plausibility proportional to a modulus item.</S>
    <S sid="233" ssid="51">They first saw a set of instructions that explained the ME technique and the judgment task.</S>
    <S sid="234" ssid="52">The concept of plausibility was not defined, but examples of plausible and implausible bigrams were given (different examples for each stimulus set).</S>
    <S sid="235" ssid="53">Then subjects were asked to fill in a questionnaire with basic demographic information.</S>
    <S sid="236" ssid="54">The experiment proper consisted of three phases: (1) a calibration phase, designed to familiarize subjects with the task, in which they had to estimate the length of five horizontal lines; (2) a practice phase, in which subjects judged the plausibility of eight bigrams (similar to the ones in the stimulus set); (3) the main experiment, in which each subject judged one of the six stimulus sets (90 bigrams).</S>
    <S sid="237" ssid="55">The stimuli were presented in random order, with a new randomization being generated for each subject.</S>
    <S sid="238" ssid="56">Subjects.</S>
    <S sid="239" ssid="57">A separate experiment was conducted for each set of stimuli.</S>
    <S sid="240" ssid="58">The number of subjects per experiment is shown in Table 10 (in the column labeled N).</S>
    <S sid="241" ssid="59">All subjects were self-reported native speakers of English; they were recruited by postings to newsgroups and mailing lists.</S>
    <S sid="242" ssid="60">Participation was voluntary and unpaid.</S>
    <S sid="243" ssid="61">WebExp collects by-item response time data; subjects whose response times were very short or very long were excluded from the sample, as they are unlikely to have completed the experiment adequately.</S>
    <S sid="244" ssid="62">We also excluded the data of subjects who had participated more than once in the same experiment, based on their demographic data and on their Internet connection data, which is logged by WebExp.</S>
    <S sid="245" ssid="63">3.2.2 Results and Discussion.</S>
    <S sid="246" ssid="64">The experimental data were normalized by dividing each numerical judgment by the modulus value that the subject had assigned to the reference sentence.</S>
    <S sid="247" ssid="65">This operation creates a common scale for all subjects.</S>
    <S sid="248" ssid="66">Then the data were transformed by taking the decadic logarithm.</S>
    <S sid="249" ssid="67">This transformation ensures that the judgments are normally distributed and is standard practice for magnitude estimation data (Bard, Robertson, and Sorace 1996; Cowart 1997; Stevens 1975).</S>
    <S sid="250" ssid="68">All further analyses were conducted on the normalized, log-transformed judgments.</S>
    <S sid="251" ssid="69">Table 10 shows the descriptive statistics for all six judgment experiments: the original experiments by Lapata, McDonald, and Keller (1999) and Lapata, Keller, and McDonald (2001) for adjective-noun bigrams, and our new ones for noun-noun and verb-object bigrams.</S>
    <S sid="252" ssid="70">We used correlation analysis to compare corpus counts and Web counts with plausibility judgments.</S>
    <S sid="253" ssid="71">Table 11 (top half) lists the correlation coefficients that were obtained when correlating log-transformed Web counts (AltaVista and Google) and corpus counts (BNC and NANTC) with mean plausibility judgments for seen adjectivenoun, noun-noun, and verb-object bigrams.</S>
    <S sid="254" ssid="72">The results show that both AltaVista and Google counts correlate well with plausibility judgments for seen bigrams.</S>
    <S sid="255" ssid="73">The correlation coefficient for AltaVista ranges from .641 to .700; for Google, it ranges from .624 to .692.</S>
    <S sid="256" ssid="74">The correlations for the two search engines are very similar, which is also what we found in Section 3.1 for the correlations between Web counts and corpus counts.</S>
    <S sid="257" ssid="75">Note that the Web counts consistently achieve a higher correlation with the judgments than the BNC counts, which range from .488 to .569.</S>
    <S sid="258" ssid="76">We carried out a series of one-tailed t-tests to determine whether the differences between the correlation coefficients for the Web counts and the correlation coefficients for the BNC counts were significant.</S>
    <S sid="259" ssid="77">For the adjective-noun bigrams, the AltaVista coefficient was significantly higher than the BNC coefficient (t(87) = 1.76, p &lt; .05), whereas the difference between the Google coefficient and the BNC coefficient failed to reach significance.</S>
    <S sid="260" ssid="78">For the noun-noun bigrams, both the AltaVista and the Google coefficients were significantly higher than the BNC coefficient (t(87) = 3.11, p &lt; .01 and t(87) = 2.95, p &lt; .01).</S>
    <S sid="261" ssid="79">Also, for the verb-object bigrams, both the AltaVista coefficient and the Google coefficient were significantly higher than the BNC coefficient (t(87) = 2.64, p &lt; .01 and t(87) = 2.32, p &lt; .05).</S>
    <S sid="262" ssid="80">A similar picture was observed for the NANTC counts.</S>
    <S sid="263" ssid="81">Again, the Web counts outperformed the corpus counts in predicting plausibility.</S>
    <S sid="264" ssid="82">For the adjective-noun bigrams, both the AltaVista and the Google coefficient were significantly higher than the NANTC coefficient (t(87) = 1.97, p &lt; .05; t(87) = 1.81, p &lt; .05).</S>
    <S sid="265" ssid="83">For the noun-noun bigrams, the AltaVista coefficient was higher than the NANTC coefficient (t(87) = 1.64, p &lt; .05), but the Google coefficient was not significantly different from the NANTC coefficient.</S>
    <S sid="266" ssid="84">For verb-object bigrams, the difference was significant for both search engines (t(87) = 2.74, p &lt; .01; t(87) = 2.38, p &lt; .01).</S>
    <S sid="267" ssid="85">In sum, for all three types of bigrams, the correlation coefficients achieved with AltaVista were significantly higher than the ones achieved by either the BNC or the NANTC.</S>
    <S sid="268" ssid="86">Google counts outperformed corpus counts for all bigrams with the exception of adjective-noun counts from the BNC and noun-noun counts from the NANTC.</S>
    <S sid="269" ssid="87">The bottom panel of Table 11 shows the correlation coefficients obtained by comparing log-transformed judgments with log-transformed Web counts for unseen adjective-noun, noun-noun, and verb-object bigrams.</S>
    <S sid="270" ssid="88">We observe that the Web counts consistently show a significant correlation with the judgments, with the coefficient ranging from .480 to .578 for AltaVista counts and from .473 to .595 for the Google counts.</S>
    <S sid="271" ssid="89">Table 11 also provides the correlations between plausibility judgments and counts re-created using class-based smoothing, which we will discuss in Section 3.3.</S>
    <S sid="272" ssid="90">An important question is how well humans agree when judging the plausibility of adjective-noun, noun-noun, and verb-noun bigrams.</S>
    <S sid="273" ssid="91">Intersubject agreement gives an upper bound for the task and allows us to interpret how well our Web-based method performs in relation to humans.</S>
    <S sid="274" ssid="92">To calculate intersubject agreement we used leaveone-out resampling.</S>
    <S sid="275" ssid="93">This technique is a special case of n-fold cross-validation (Weiss and Kulikowski 1991) and has been previously used for measuring how well humans agree in judging semantic similarity (Resnik 1999, 2000).</S>
    <S sid="276" ssid="94">For each subject group, we divided the set of the subjects&#8217; responses with size n into a set of size n &#8722; 1 (i.e., the response data of all but one subject) and a set of size 1 (i.e., the response data of a single subject).</S>
    <S sid="277" ssid="95">We then correlated the mean ratings of the former set with the ratings of the latter.</S>
    <S sid="278" ssid="96">This was repeated n times (see the number of participants in Table 6); the mean of the correlation coefficients for the seen and unseen bigrams is shown in Table 11 in the rows labeled &#8220;Agreement.&#8221; For both seen and unseen bigrams, we found no significant difference between the upper bound (intersubject agreement) and the correlation coefficients obtained using either AltaVista or Google counts.</S>
    <S sid="279" ssid="97">This finding holds for all three types of bigrams.</S>
    <S sid="280" ssid="98">The same picture emerged for the BNC and NANTC counts: These correlation coefficients were not significantly different from the upper limit, for all three types of bigrams, both for seen and for unseen bigrams.</S>
    <S sid="281" ssid="99">To conclude, our evaluation demonstrated that Web counts reliably predict human plausibility judgments, both for seen and for unseen predicate-argument bigrams.</S>
    <S sid="282" ssid="100">AltaVista counts for seen bigrams are a better predictor of human judgments than BNC and NANTC counts.</S>
    <S sid="283" ssid="101">These results show that our heuristic method yields valid frequencies; the simplifications we made in obtaining the Web counts (see Section 2.3), as well as the fact that Web data are noisy (see Section 2.4), seem to be outweighed by the fact that the Web is up to a thousand times larger than the BNC.</S>
    <S sid="284" ssid="102">The evaluation in the last two sections established that Web counts are useful for approximating corpus counts and for predicting plausibility judgments.</S>
    <S sid="285" ssid="103">As a further step in our evaluation, we correlated Web counts with counts re-created by applying a class-based smoothing method to the BNC.</S>
    <S sid="286" ssid="104">We re-created co-occurrence frequencies for predicate-argument bigrams using a simplified version of Resnik&#8217;s (1993) selectional association measure proposed by Lapata, Keller, and McDonald (2001).</S>
    <S sid="287" ssid="105">In a nutshell, this measure replaces Resnik&#8217;s (1993) information-theoretic approach with a simpler measure that makes no assumptions with respect to the contribution of a semantic class to the total quantity of information provided by the predicate about the semantic classes of its argument.</S>
    <S sid="288" ssid="106">It simply substitutes the argument occurring in the predicate-argument bigram with the concept by which it is represented in the WordNet taxonomy.</S>
    <S sid="289" ssid="107">Predicate-argument co-occurrence frequency is estimated by counting the number of times the concept corresponding to the argument is observed to co-occur with the predicate in the corpus.</S>
    <S sid="290" ssid="108">Because a given word is not always represented by a single class in the taxonomy (i.e., the argument co-occurring with a predicate can generally be the realization of one of several conceptual classes), Lapata, Keller, and McDonald (2001) constructed the frequency counts for a predicate-argument bigram for each conceptual class by dividing the contribution from the argument by the number of classes to which it belongs.</S>
    <S sid="291" ssid="109">They demonstrate that the counts re-created using this smoothing technique correlate significantly with plausibility judgments for adjective-noun bigrams.</S>
    <S sid="292" ssid="110">They also show that this class-based approach outperforms distance-weighted averaging (Dagan, Lee, and Pereira 1999), a smoothing method that re-creates unseen word co-occurrences on the basis of distributional similarity (without relying on a predefined taxonomy), in predicting plausibility.</S>
    <S sid="293" ssid="111">In the current study, we used the smoothing technique of Lapata, Keller, and McDonald (2001) to re-create not only adjective-noun bigrams, but also noun-noun and verb-object bigrams.</S>
    <S sid="294" ssid="112">As already mentioned in Section 2.1, it was assumed that the noun is the predicate in adjective-noun bigrams; for noun-noun bigrams, we treated the right noun as the predicate, and for verb-object bigrams, we treated the verb as the predicate.</S>
    <S sid="295" ssid="113">We applied Lapata, Keller, and McDonald&#8217;s (2001) technique to the unseen bigrams for all three bigram types.</S>
    <S sid="296" ssid="114">We also used it on the seen bigrams, which we were able to treat as unseen by removing all instances of the bigrams from the training corpus.</S>
    <S sid="297" ssid="115">To test the claim that Web frequencies can be used to overcome data sparseness, we correlated the frequencies re-created using class-based smoothing on the BNC with the frequencies obtained from the Web.</S>
    <S sid="298" ssid="116">The correlation coefficients for both seen and unseen bigrams are shown in Table 12.</S>
    <S sid="299" ssid="117">In all cases, a significant correlation between Web counts and re-created counts is obtained.</S>
    <S sid="300" ssid="118">For seen bigrams, the correlation coefficient ranged from .344 to .362 for AltaVista counts and from .330 to .349 for Google counts.</S>
    <S sid="301" ssid="119">For unseen bigrams, the correlations were somewhat higher, ranging from .386 to .439 for AltaVista counts and from .397 to .444 for Google counts.</S>
    <S sid="302" ssid="120">For both seen and unseen bigrams, there was only a very small difference between the correlation coefficients obtained with the two search engines.</S>
    <S sid="303" ssid="121">It is also interesting to compare the performance of class-based smoothing and Web counts on the task of predicting plausibility judgments.</S>
    <S sid="304" ssid="122">The correlation coefficients are listed in Table 11.</S>
    <S sid="305" ssid="123">The re-created frequencies are correlated significantly with all three types of bigrams, both for seen and unseen bigrams.</S>
    <S sid="306" ssid="124">For the seen bigrams, we found that the correlation coefficients obtained using smoothed counts were significantly lower than the upper bound for all three types of bigrams (t(87) = 3.01, p &lt; .01; t(87) = 3.23, p &lt; .01; t(87) = 3.43, p &lt; .01).</S>
    <S sid="307" ssid="125">This result also held for the unseen bigrams: The correlations obtained using smoothing were significantly lower than the upper bound for all three types of bigrams (t(87) = 1.86, p &lt; .05; t(87) = 1.97, p &lt; .05; t(87) = 3.36, p &lt; .01).</S>
    <S sid="308" ssid="126">Recall that the correlation coefficients obtained using the Web counts were not found to be significantly different from the upper bound, which indicates that Web counts are better predictors of plausibility than smoothed counts.</S>
    <S sid="309" ssid="127">This fact was confirmed by further significance testing: For seen bigrams, we found that the AltaVista correlation coefficients were significantly higher than correlation coefficients obtained using smoothing, for all three types of bigrams (t(87) = 3.31, p &lt; .01; t(87) = 4.11, p &lt; .01; t(87) = 4.32, p &lt; .01).</S>
    <S sid="310" ssid="128">This also held for Google counts (t(87) = 3.16, p &lt; .01; t(87) = 4.02, p &lt; .01; t(87) = 4.03, p &lt; .01).</S>
    <S sid="311" ssid="129">For unseen bigrams, the AltaVista coefficients and the coefficients obtained using smoothing were not significantly different for adjective-noun bigrams, but the difference reached significance for noun-noun and verb-object bigrams (t(87) = 2.08, p &lt; .05; t(87) = 2.53, p &lt; .01).</S>
    <S sid="312" ssid="130">For Google counts, the difference was again not significant for adjective-noun bigrams, but it reached significance for noun-noun and verb-object bigrams (t(87) = 2.34, p &lt; .05; t(87) = 2.15, p &lt; .05).</S>
    <S sid="313" ssid="131">Finally, we conducted a small study to investigate the validity of the counts that were re-created using class-based smoothing.</S>
    <S sid="314" ssid="132">We correlated the re-created counts for the seen bigrams with their actual BNC and NANTC frequencies.</S>
    <S sid="315" ssid="133">The correlation coefficients are reported in Tables 8 and 9.</S>
    <S sid="316" ssid="134">We found that the correlation between recreated counts and corpus counts was significant for all three types of bigrams, for both corpora.</S>
    <S sid="317" ssid="135">This demonstrates that the smoothing technique we employed generates realistic corpus counts, in the sense that the re-created counts are correlated with the actual counts.</S>
    <S sid="318" ssid="136">However, the correlation coefficients obtained using Web counts were always substantially higher than those obtained using smoothed counts.</S>
    <S sid="319" ssid="137">These differences were significant for the BNC counts for AltaVista (t(87) = 8.38, p &lt; .01; t(87) = 5.00, p &lt; .01; t(87) = 5.03, p &lt; .01) and Google (t(87) = 8.35, p &lt; .01; t(87) = 5.00, p &lt; .01; t(87) = 5.03, p &lt; .01).</S>
    <S sid="320" ssid="138">They were also significant for the NANTC counts for AltaVista (t(87) = 4.12, p &lt; .01; t(87) = 3.72, p &lt; .01; t(87) = 6.58, p &lt; .01) and Google (t(87) = 4.08, p &lt; .01; t(87) = 3.06, p &lt; .01; t(87) = 6.47, p &lt; .01).</S>
    <S sid="321" ssid="139">To summarize, the results presented in this section indicate that Web counts are indeed a valid way of obtaining counts for bigrams that are unseen in a given corpus: They correlate reliably with counts re-created using class-based smoothing.</S>
    <S sid="322" ssid="140">For seen bigrams, we found that Web counts correlate with counts that were re-created using smoothing techniques (after removing the seen bigrams from the training corpus).</S>
    <S sid="323" ssid="141">For the task of predicting plausibility judgments, we were able to show that Web counts outperform re-created counts, both for seen and for unseen bigrams.</S>
    <S sid="324" ssid="142">Finally, we found that Web counts for seen bigrams correlate better than re-created counts with the real corpus counts.</S>
    <S sid="325" ssid="143">It is beyond the scope of the present study to undertake a full comparison between Web counts and frequencies re-created using all available smoothing techniques (and all available taxonomies that might be used for class-based smoothing).</S>
    <S sid="326" ssid="144">The smoothing method discussed above is simply one type of class-based smoothing.</S>
    <S sid="327" ssid="145">Other, more sophisticated class-based methods do away with the simplifying assumption that the argument co-occurring with a given predicate (adjective, noun, verb) is distributed evenly across its conceptual classes and attempt to find the right level of generalization in a concept hierarchy, by discounting, for example, the contribution of very general classes (Clark and Weir 2001; McCarthy 2000; Li and Abe 1998).</S>
    <S sid="328" ssid="146">Other smoothing approaches such as discounting (Katz 1987) and distance-weighted averaging (Grishman and Sterling 1994; Dagan, Lee, and Pereira 1999) re-create counts of unseen word combinations by exploiting only corpus-internal evidence, without relying on taxonomic information.</S>
    <S sid="329" ssid="147">Our goal was to demonstrate that frequencies retrieved from the Web are a viable alternative to conventional smoothing methods when data are sparse; we do not claim that our Web-based method is necessarily superior to smoothing or that it should be generally preferred over smoothing methods.</S>
    <S sid="330" ssid="148">However, the next section will present a small-scale study that compares the performance of several smoothing techniques with the performance of Web counts on a standard task from the literature.</S>
    <S sid="331" ssid="149">In the smoothing literature, re-created frequencies are typically evaluated using pseudodisambiguation (Clark and Weir 2001; Dagan, Lee, and Pereira 1999; Lee 1999; Pereira, Tishby, and Lee 1993; Prescher, Riezler, and Rooth 2000; Rooth et al. 1999).</S>
    <S sid="332" ssid="150">The aim of the pseudodisambiguation task is to decide whether a given algorithm re-creates frequencies that make it possible to distinguish between seen and unseen bigrams in a given corpus.</S>
    <S sid="333" ssid="151">A set of pseudobigrams is constructed according to a set of criteria (detailed below) that ensure that they are unattested in the training corpus.</S>
    <S sid="334" ssid="152">Then the seen bigrams are removed from the training data, and the smoothing method is used to re-create the frequencies of both the seen bigrams and the pseudobigrams.</S>
    <S sid="335" ssid="153">The smoothing method is then evaluated by comparing the frequencies it re-creates for both types of bigrams.</S>
    <S sid="336" ssid="154">We evaluated our Web counts by applying the pseudodisambiguation procedure that Rooth et al. (1999), Prescher, Riezler, and Rooth (2000), and Clark and Weir (2001) employed for evaluating re-created verb-object bigram counts.</S>
    <S sid="337" ssid="155">In this procedure, the noun n from a verb-object bigram (v, n) that is seen in a given corpus is paired with a randomly chosen verb v' that does not take n as its object within the corpus.</S>
    <S sid="338" ssid="156">This results in an unseen verb-object bigram (v', n).</S>
    <S sid="339" ssid="157">The seen bigram is now treated as unseen (i.e., all of its occurrences are removed from the training corpus), and the frequencies of both the seen and the unseen bigram are re-created (using smoothing, or Web counts, in our case).</S>
    <S sid="340" ssid="158">The task is then to decide which of the two verbs v and v' takes the noun n as its object.</S>
    <S sid="341" ssid="159">For this, the re-created bigram frequency is used: The bigram with the higher re-created frequency (or probability) is taken to be the seen bigram.</S>
    <S sid="342" ssid="160">If this bigram is really the seen one, then the disambiguation is correct.</S>
    <S sid="343" ssid="161">The overall percentage of correct disambiguations is a measure of the quality of the re-created frequencies (or probabilities).</S>
    <S sid="344" ssid="162">In the following, we will first describe in some detail the experiments that Rooth et al. (1999) and Clark and Weir (2001) conducted.</S>
    <S sid="345" ssid="163">We will then discuss how we replicated their experiments using the Web as an alternative smoothing method.</S>
    <S sid="346" ssid="164">Rooth et al. (1999) used pseudodisambiguation to evaluate a class-based model that is derived from unlabeled data using the expectation maximization (EM) algorithm.</S>
    <S sid="347" ssid="165">From a data set of 1,280,712 (v, n) pairs (obtained from the BNC using Carroll and Rooth&#8217;s [1998] parser), they randomly selected 3,000 pairs, with each pair containing a fairly frequent verb and noun (only verbs and nouns that occurred between 30 and 3,000 times in the data were considered).</S>
    <S sid="348" ssid="166">For each pair (v, n) a fairly frequent verb v' was randomly chosen such that the pair (v', n) did not occur in the data set.</S>
    <S sid="349" ssid="167">Given the set of (v, n, v') triples (a total of 1,337), the task was to decide whether (v, n) or (v',n) was the correct (i.e., seen) pair by comparing the probabilities P(nlv) and P(nlv').</S>
    <S sid="350" ssid="168">The probabilities were re-created using Rooth et al.&#8217;s (1999) EM-based clustering model on a training set from which all seen pairs (v, n) had been removed.</S>
    <S sid="351" ssid="169">An accuracy of 80% on the pseudodisambiguation task was achieved (see Table 13).</S>
    <S sid="352" ssid="170">Prescher, Riezler, and Rooth (2000) evaluated Rooth et al.&#8217;s (1999) EM-based clustering model again using pseudodisambiguation, but on a separate data set using a slightly different method for constructing the pseudobigrams.</S>
    <S sid="353" ssid="171">They used a set of 298 (v, n, n') BNC triples in which (v, n) was chosen as in Rooth et al. (1999) but paired with a randomly chosen noun n'.</S>
    <S sid="354" ssid="172">Given the set of (v, n, n') triples, the task was to decide whether (v, n) or (v, n') was the correct pair in each triple.</S>
    <S sid="355" ssid="173">Prescher, Riezler, and Rooth (2000) reported pseudodisambiguation results with two clustering models: (1) Rooth et al.&#8217;s (1999) clustering approach, which models the semantic fit between a verb and its argument (VA model), and (2) a refined version of this approach that models only the fit between a verb and its object (VO model), disregarding other arguments of the verb.</S>
    <S sid="356" ssid="174">The results of the two models on the pseudodisambiguation task are shown in Table 14.</S>
    <S sid="357" ssid="175">At this point, it is important to note that neither Rooth et al. (1999) nor Prescher, Riezler, and Rooth (2000) used pseudodisambiguation for the final evaluation of their models.</S>
    <S sid="358" ssid="176">Rather, the performance on the pseudodisambiguation task was used to optimize the model parameters.</S>
    <S sid="359" ssid="177">The results in Tables 13 and 14 show the pseudodisambiguation performance achieved for the best parameter settings.</S>
    <S sid="360" ssid="178">In other words, these results were obtained on the development set (i.e., on the same data set that was used to optimize the parameters), not on a completely unseen test set.</S>
    <S sid="361" ssid="179">This procedure is well-justified in the context of Rooth et al.&#8217;s (1999) and Prescher, Riezler, and Rooth&#8217;s (2000) work, which aimed at building models of lexical semantics, not of pseudodisambiguation.</S>
    <S sid="362" ssid="180">Therefore, they carried out their final evaluations on unseen test sets for the tasks of lexicon induction (Rooth et al. 1999) and target language disambiguation (Prescher, Riezler, and Rooth 2000), once the model parameters had been fixed using the pseudodisambiguation development set.8 Clark and Weir (2002) use a setting similar to that of Rooth et al.</S>
    <S sid="363" ssid="181">(1999) and Prescher, Riezler, and Rooth (2000); here pseudodisambiguation is employed to evaluate the performance of a class-based probability estimation method.</S>
    <S sid="364" ssid="182">In order to address the problem of estimating conditional probabilities in the face of sparse data, Clark and Weir (2002) define probabilities in terms of classes in a semantic hierarchy and propose hypothesis testing as a means of determining a suitable level of generalization in the hierarchy.</S>
    <S sid="365" ssid="183">Clark and Weir (2002) report pseudodisambiguation results on two data sets, with an experimental setup similar to that of Rooth et al. (1999).</S>
    <S sid="366" ssid="184">For the first data set, 3,000 pairs were randomly chosen from 1.3 million (v, n) tuples extracted from the BNC (using the parser of Briscoe and Carroll [1997]).</S>
    <S sid="367" ssid="185">The selected pairs contained relatively frequent verbs (occurring between 500 and 5,000 times in the data).</S>
    <S sid="368" ssid="186">The data sets were constructed as proposed by Rooth et al. (1999).</S>
    <S sid="369" ssid="187">The procedure for creating the second data set was identical, but this time only verbs that occurred between 100 and 1,000 times were considered.</S>
    <S sid="370" ssid="188">Clark and Weir (2002) further compared their approach with Resnik&#8217;s (1993) selectional association model and Li and Abe&#8217;s (1998) tree cut model on the same data sets.</S>
    <S sid="371" ssid="189">These methods are directly comparable, as they can be used for class-based probability estimation and address the question of how to find a suitable level of generalization in a hierarchy (i.e., WordNet).</S>
    <S sid="372" ssid="190">The results of the three methods used on the two data sets are shown in Table 15.</S>
    <S sid="373" ssid="191">We employed the same pseudodisambiguation method to test whether Web-based frequencies can be used for distinguishing between seen and artificially constructed unseen bigrams.</S>
    <S sid="374" ssid="192">We obtained the data sets of Rooth et al. (1999), Prescher, Riezler, and Rooth (2000), and Clark and Weir (2002) described above.</S>
    <S sid="375" ssid="193">Given a set of (v, n, v') triples, the task was to decide whether (v, n) or (v', n) was the correct pair.</S>
    <S sid="376" ssid="194">We obtained AltaVista counts for f (v, n), f (v', n), f (v), and f (v') as described in Section 2.3.9 Then we used two models for pseudodisambiguation: the joint probability model compared the joint probability estimates f (v, n) and f (v', n) and predicted that the bigram with the highest estimate is the seen one.</S>
    <S sid="377" ssid="195">The conditional probability model compared the conditional probability estimates f (v, n)/f (v) and f (v', n)/f (v') and again selected as the seen bigram the one with the highest estimate (in both cases, ties were resolved by choosing at random).10 The same two models were used to perform pseudodisambiguation for the (v, n, n') triples, where we have to choose between (v, n) and (v, n').</S>
    <S sid="378" ssid="196">Here, the probability estimates f (v, n) and f (v, n') were used for the joint probability model, and f (v, n)/f (n) and f (v, n')/f (n') for the conditional probability model.</S>
    <S sid="379" ssid="197">The results for Rooth et al.&#8217;s (1999) data set are given in Table 13.</S>
    <S sid="380" ssid="198">The conditional probability model achieves a performance of 71.2% correct for subjects and 85.2% correct for objects.</S>
    <S sid="381" ssid="199">The performance on the whole data set is 77.7%, which is below the performance of 80.0% reported by Rooth et al. (1999).</S>
    <S sid="382" ssid="200">However, the difference is not found to be significant using a chi-square test comparing the number of correct and incorrect classifications (x2(1) = 2.02, p = .16).</S>
    <S sid="383" ssid="201">The joint probability model performs consistently worse than the conditional probability model: It achieves an overall accuracy of 72.7%, which is significantly lower than the accuracy of the Rooth et al. (1999) model (x2(1) = 19.50, p &lt; .01).</S>
    <S sid="384" ssid="202">A similar picture emerges with regard to Prescher, Riezler, and Rooth&#8217;s (2000) data set (see Table 14).</S>
    <S sid="385" ssid="203">The conditional probability model achieves an accuracy of 66.7% for subjects and 70.5% for objects.</S>
    <S sid="386" ssid="204">The combined performance of 68.5% is significantly lower than the performance of both the VA model (x2(1) = 7.78, p &lt; .01) and the VO model (x2(1) = 33.28, p &lt; .01) reported by Prescher, Riezler, and Rooth (2000).</S>
    <S sid="387" ssid="205">Again, the joint probability model performs worse than the conditional probability model, achieving an overall accuracy of 62.4%.</S>
    <S sid="388" ssid="206">We also applied our Web-based method to the pseudodisambiguation data set of Clark and Weir (2002).</S>
    <S sid="389" ssid="207">Here, the conditional probability model reached a performance of 83.9% correct on the low-frequency data set.</S>
    <S sid="390" ssid="208">This is significantly higher than the highest performance of 72.4% reported by Clark and Weir (2002) on the same data set (x2(1) = 115.50, p &lt; .01).</S>
    <S sid="391" ssid="209">The joint probability model performs worse than the conditional model, at 81.1%.</S>
    <S sid="392" ssid="210">However, this is still significantly better than the best result of Clark and Weir (2002) (x2(1) = 63.14, p &lt; .01).</S>
    <S sid="393" ssid="211">The same pattern is observed for the high-frequency data set, on which the conditional probability model achieves 87.7% correct and thus significantly outperforms Clark and Weir (2002), who obtained 73.9% (x2(1) = 283.73, p &lt; .01).</S>
    <S sid="394" ssid="212">The joint probability model achieved 85.3% on this data set, also significantly outperforming Clark and Weir (2002) (x2(1) = 119.35, p &lt; .01).</S>
    <S sid="395" ssid="213">To summarize, we demonstrated that the simple Web-based approach proposed in this article yields results for pseudodisambiguation that outperform class-based smoothing techniques, such as the ones proposed by Resnik (1993), Li and Abe (1998), and Clark and Weir (2002).</S>
    <S sid="396" ssid="214">We were also able to show that a Web-based approach is able to achieve the same performance as an EM-based smoothing model proposed by Rooth et al. (1999).</S>
    <S sid="397" ssid="215">However, the Web-based approach was not able to outperform the more sophisticated EM-based model of Prescher, Riezler, and Rooth (2000).</S>
    <S sid="398" ssid="216">Another result we obtained is that Web-based models that use conditional probabilities (where unigram frequencies are used to normalize the bigram frequencies) generally outperform a more simple-minded approach that relies directly on bigram frequencies for pseudodisambiguation.</S>
    <S sid="399" ssid="217">There are a number of reasons why our results regarding pseudodisambiguation have to be treated with some caution.</S>
    <S sid="400" ssid="218">First of all, the two smoothing methods (i.e., EM-based clustering and class-based probability estimation using WordNet) were not evaluated on the same data set, and therefore the two results are not directly comparable.</S>
    <S sid="401" ssid="219">For instance, Clark and Weir&#8217;s (2002) data set is substantially less noisy than Rooth et al.&#8217;s (1999) and Prescher, Riezler, and Rooth&#8217;s (2000), as it contains only words and nouns that occur in WordNet.</S>
    <S sid="402" ssid="220">Furthermore, Stephen Clark (personal communication, 2003) points out that WordNet-based approaches are at a disadvantage when it comes to pseudodisambiguation.</S>
    <S sid="403" ssid="221">Pseudodisambiguation assumes that the correct pair is unseen in the training data; this makes the task deliberately hard, because some of the pairs might be frequent enough that reliable corpus counts can be obtained without having to use WordNet (using WordNet is likely to be more noisy than using the actual counts).</S>
    <S sid="404" ssid="222">Another problem with WordNet-based approaches is that they offer no systematic treatment of word sense ambiguity, which puts them at a disadvantage with respect to approaches that do not rely on a predefined inventory of word senses.</S>
    <S sid="405" ssid="223">Finally, recall that the results for the EM-based approaches in Tables 13 and 14 were obtained on the development set (as pseudodisambiguation was used as a means of parameter tuning by Rooth et al. [1999] and Prescher, Riezler, and Rooth [2000]).</S>
    <S sid="406" ssid="224">It is possible that this fact inflates the performance values for the EM-based approaches (but see note 8).</S>
  </SECTION>
  <SECTION title="4." number="5">
    <S sid="407" ssid="1">This article explored a novel approach to overcoming data sparseness.</S>
    <S sid="408" ssid="2">If a bigram is unseen in a given corpus, conventional approaches re-create its frequency using techniques such as back-off, linear interpolation, class-based smoothing or distanceweighted averaging (see Dagan, Lee, and Pereira [1999] and Lee [1999] for overviews).</S>
    <S sid="409" ssid="3">The approach proposed here does not re-create the missing counts but instead retrieves them from a corpus that is much larger (but also much more noisy) than any existing corpus: it launches queries to a search engine in order to determine how often the bigram occurs on the Web.</S>
    <S sid="410" ssid="4">We systematically investigated the validity of this approach by using it to obtain frequencies for predicate-argument bigrams (adjective-noun, noun-noun, and verbobject bigrams).</S>
    <S sid="411" ssid="5">We first applied the approach to seen bigrams randomly sampled from the BNC.</S>
    <S sid="412" ssid="6">We found that the counts obtained from the Web are highly correlated with the counts obtained from the BNC.</S>
    <S sid="413" ssid="7">We then obtained bigram counts from NANTC, a corpus that is substantially larger than the BNC.</S>
    <S sid="414" ssid="8">Again, we found that Web counts are highly correlated with corpus counts.</S>
    <S sid="415" ssid="9">This indicates that Web queries can generate frequencies that are comparable to the ones obtained from a balanced, carefully edited corpus such as the BNC, but also from a large news text corpus such as NANTC.</S>
    <S sid="416" ssid="10">Secondly, we performed an evaluation that used the Web frequencies to predict human plausibility judgments for predicate-argument bigrams.</S>
    <S sid="417" ssid="11">The results show that Web counts correlate reliably with judgments, for all three types of predicate-argument bigrams tested, both seen and unseen.</S>
    <S sid="418" ssid="12">For the seen bigrams, we showed that the Web frequencies correlate better with judged plausibility than corpus frequencies.</S>
    <S sid="419" ssid="13">To substantiate the claim that the Web counts can be used to overcome data sparseness, we compared bigram counts obtained from the Web with bigram counts recreated using a class-based smoothing technique (a variant of the one proposed by Resnik [1993]).</S>
    <S sid="420" ssid="14">We found that Web frequencies and re-created frequencies are reliably correlated, and that Web frequencies are better at predicting plausibility judgments than smoothed frequencies.</S>
    <S sid="421" ssid="15">This holds both for unseen bigrams and for seen bigrams that are treated as unseen by omitting them from the training corpus.</S>
    <S sid="422" ssid="16">Finally, we tested the performance of our frequencies in a standard pseudodisambiguation task.</S>
    <S sid="423" ssid="17">We applied our method to three data sets from the literature.</S>
    <S sid="424" ssid="18">The results show that Web counts outperform counts re-created using a number of classbased smoothing techniques.</S>
    <S sid="425" ssid="19">However, counts re-created using an EM-based smoothing approach yielded better pseudodisambiguation performance than Web counts.</S>
    <S sid="426" ssid="20">To summarize, we have proposed a simple heuristic method for obtaining bigram counts from the Web.</S>
    <S sid="427" ssid="21">Using four different types of evaluation, we demonstrated that this simple heuristic method is sufficient to obtain valid frequency estimates.</S>
    <S sid="428" ssid="22">It seems that the large amount of data available outweighs the problems associated with using the Web as a corpus (such as the fact that it is noisy and unbalanced).</S>
    <S sid="429" ssid="23">A number of questions arise for future research: (1) Are Web frequencies suitable for probabilistic modeling, in particular since Web counts are not perfectly normalized, as Zhu and Rosenfeld (2001) have shown?</S>
    <S sid="430" ssid="24">(2) How can existing smoothing methods benefit from Web counts?</S>
    <S sid="431" ssid="25">(3) How do the results reported in this article carry over to languages other than English (for which a much smaller amount of Web data are available)?</S>
    <S sid="432" ssid="26">(4) What is the effect of the noise introduced by our heuristic approach?</S>
    <S sid="433" ssid="27">The last question could be assessed by reproducing our results using a snapshot of the Web, from which argument relations can be extracted more accurately using POS tagging and chunking techniques.</S>
    <S sid="434" ssid="28">Finally, it will be crucial to test the usefulness of Web-based frequencies for realistic NLP tasks.</S>
    <S sid="435" ssid="29">Preliminary results are reported by Lapata and Keller (2003), who use Web counts successfully for a range of NLP tasks, including candidate selection for machine translation, context-sensitive spelling correction, bracketing and interpretation of compounds, adjective ordering, and PP attachment.</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="6">
    <S sid="436" ssid="1">This work was conducted while both authors were at the Department of Computational Linguistics, Saarland University, Saarbr&#168;ucken.</S>
    <S sid="437" ssid="2">The work was inspired by a talk that Gregory Grefenstette gave in Saarbr&#168;ucken in 2001 about his research on using the Web as a corpus.</S>
    <S sid="438" ssid="3">The present article is an extended and revised version of Keller, Lapata, and Ourioupina (2002).</S>
    <S sid="439" ssid="4">Stephen Clark and Stefan Riezler provided valuable comments on this research.</S>
    <S sid="440" ssid="5">We are also grateful to four anonymous reviewers for Computational Linguistics; their feedback helped to substantially improve the present article.</S>
    <S sid="441" ssid="6">Special thanks are due to Stephen Clark and Detlef Prescher for making their pseudodisambiguation data sets available.</S>
  </SECTION>
</PAPER>
