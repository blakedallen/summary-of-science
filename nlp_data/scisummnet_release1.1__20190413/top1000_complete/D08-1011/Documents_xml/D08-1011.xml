<PAPER>
  <S sid="0">Indirect-HMM-based Hypothesis Alignment for Combining Outputs from Machine Translation Systems</S>
  <ABSTRACT>
    <S sid="1" ssid="1">This paper presents a new hypothesis alignment method for combining outputs of multiple machine translation (MT) systems.</S>
    <S sid="2" ssid="2">An indirect hidden Markov model (IHMM) is proposed to address the synonym matching and word ordering issues in hypothesis alignment.</S>
    <S sid="3" ssid="3">Unlike traditional HMMs whose parameters are trained via maximum likelihood estimation (MLE), the of the IHMM are estimated a variety of sources including word semantic similarity, word surface similarity, and a distance-based distortion penalty.</S>
    <S sid="4" ssid="4">The IHMM-based method significantly outperforms the state-of-the-art TER-based alignment model in our experiments on NIST benchmark datasets.</S>
    <S sid="5" ssid="5">Our combined SMT system using the proposed method achieved the best Chinese-to-English translation result in the constrained training track of the</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">System combination has been applied successfully to various machine translation tasks.</S>
    <S sid="7" ssid="2">Recently, confusion-network-based system combination algorithms have been developed to combine outputs of multiple machine translation (MT) systems to form a consensus output (Bangalore, et al. 2001, Matusov et al., 2006, Rosti et al., 2007, Sim et al., 2007).</S>
    <S sid="8" ssid="3">A confusion network comprises a sequence of sets of alternative words, possibly including null&#8217;s, with associated scores.</S>
    <S sid="9" ssid="4">The consensus output is then derived by selecting one word from each set of alternatives, to produce the sequence with the best overall score, which could be assigned in various ways such as by voting, by using posterior probability estimates, or by using a combination of these measures and other features.</S>
    <S sid="10" ssid="5">Constructing a confusion network requires choosing one of the hypotheses as the backbone (also called &#8220;skeleton&#8221; in the literature), and other hypotheses are aligned to it at the word level.</S>
    <S sid="11" ssid="6">High quality hypothesis alignment is crucial to the performance of the resulting system combination.</S>
    <S sid="12" ssid="7">However, there are two challenging issues that make MT hypothesis alignment difficult.</S>
    <S sid="13" ssid="8">First, different hypotheses may use different synonymous words to express the same meaning, and these synonyms need to be aligned to each other.</S>
    <S sid="14" ssid="9">Second, correct translations may have different word orderings in different hypotheses and these words need to be properly reordered in hypothesis alignment.</S>
    <S sid="15" ssid="10">In this paper, we propose an indirect hidden Markov model (IHMM) for MT hypothesis alignment.</S>
    <S sid="16" ssid="11">The HMM provides a way to model both synonym matching and word ordering.</S>
    <S sid="17" ssid="12">Unlike traditional HMMs whose parameters are trained via maximum likelihood estimation (MLE), the parameters of the IHMM are estimated indirectly from a variety of sources including word semantic similarity, word surface similarity, and a distancebased distortion penalty, without using large amount of training data.</S>
    <S sid="18" ssid="13">Our combined SMT system using the proposed method gave the best result on the Chinese-to-English test in the constrained training track of the 2008 NIST Open MT Evaluation (MT08).</S>
  </SECTION>
  <SECTION title="2 Confusion-network-based MT system combination" number="2">
    <S sid="19" ssid="1">The current state-of-the-art is confusion-networkbased MT system combination as described by Rosti and colleagues (Rosti et al., 2007a, Rosti et al., 2007b).</S>
    <S sid="20" ssid="2">The major steps are illustrated in Figure 1.</S>
    <S sid="21" ssid="3">In Fig.</S>
    <S sid="22" ssid="4">1 (a), hypotheses from different MT systems are first collected.</S>
    <S sid="23" ssid="5">Then in Fig.</S>
    <S sid="24" ssid="6">1 (b), one of the hypotheses is selected as the backbone for hypothesis alignment.</S>
    <S sid="25" ssid="7">This is usually done by a sentence-level minimum Bayes risk (MBR) method which selects a hypothesis that has the minimum average distance compared to all hypotheses.</S>
    <S sid="26" ssid="8">The backbone determines the word order of the combined output.</S>
    <S sid="27" ssid="9">Then as illustrated in Fig.</S>
    <S sid="28" ssid="10">1 (c), all other hypotheses are aligned to the backbone.</S>
    <S sid="29" ssid="11">Note that in Fig.</S>
    <S sid="30" ssid="12">1 (c) the symbol &#949; denotes a null word, which is inserted by the alignment normalization algorithm described in section 3.4.</S>
    <S sid="31" ssid="13">Fig.</S>
    <S sid="32" ssid="14">1 (c) also illustrates the handling of synonym alignment (e.g., aligning &#8220;car&#8221; to &#8220;sedan&#8221;), and word re-ordering of the hypothesis.</S>
    <S sid="33" ssid="15">Then in Fig.</S>
    <S sid="34" ssid="16">1 (d), a confusion network is constructed based on the aligned hypotheses, which consists of a sequence of sets in which each word is aligned to a list of alternative words (including null) in the same set.</S>
    <S sid="35" ssid="17">Then, a set of global and local features are used to decode the confusion network.</S>
  </SECTION>
  <SECTION title="3 Indirect-HMM-based Hypothesis Alignment" number="3">
    <S sid="36" ssid="1">In confusion-network-based system combination for SMT, a major difficulty is aligning hypotheses to the backbone.</S>
    <S sid="37" ssid="2">One possible statistical model for word alignment is the HMM, which has been widely used for bilingual word alignment (Vogel et al., 1996, Och and Ney, 2003).</S>
    <S sid="38" ssid="3">In this paper, we propose an indirect-HMM method for monolingual hypothesis alignment.</S>
    <S sid="39" ssid="4">Let denote the backbone, &#65533;' _ ( ,...,dj) a hypothesis to be aligned to e; , and the alignment that specifies the position of the backbone word aligned to each hypothesis word.</S>
    <S sid="40" ssid="5">We treat each word in the backbone as an HMM state and the words in the hypothesis as the observation sequence.</S>
    <S sid="41" ssid="6">We use a first-order HMM, assuming that the emission probability depends only on the backbone word, and the transition probability p(aj I aj_,,I) depends only on the position of the last state and the length of the backbone.</S>
    <S sid="42" ssid="7">Treating the alignment as hidden variable, the conditional probability that the hypothesis is generated by the backbone is given by As in HMM-based bilingual word alignment (Och and Ney, 2003), we also associate a null with each backbone word to allow generating hypothesis words that do not align to any backbone word.</S>
    <S sid="43" ssid="8">In HMM-based hypothesis alignment, emission probabilities model the similarity between a backbone word and a hypothesis word, and will be referred to as the similarity model.</S>
    <S sid="44" ssid="9">The transition probabilities model word reordering, and will be called the distortion model.</S>
    <S sid="45" ssid="10">The similarity model, which specifies the emission probabilities of the HMM, models the similarity between a backbone word and a hypothesis word.</S>
    <S sid="46" ssid="11">Since both words are in the same language, the similarity model can be derived based on both semantic similarity and surface similarity, and the overall similarity model is a linear interpolation of the two: where and reflect the semantic and surface similarity between and e; , respectively, and &#945; is the interpolation factor.</S>
    <S sid="47" ssid="12">Since the semantic similarity between two target words is source-dependent, the semantic similarity model is derived by using the source word sequence as a hidden layer: where is the source sentence.</S>
    <S sid="48" ssid="13">Moreover, in order to handle the case that two target words are synonyms but neither of them has counter-part in the source sentence, a null is introduced on the source side, which is represented by f0.</S>
    <S sid="49" ssid="14">The last step in (3) assumes that first ei generates all source words including null.</S>
    <S sid="50" ssid="15">Then ej&#8217; is generated by all source words including null.</S>
    <S sid="51" ssid="16">In the common SMT scenario where a large amount of bilingual parallel data is available, we can estimate the translation probabilities from a source word to a target word and vice versa via conventional bilingual word alignment.</S>
    <S sid="52" ssid="17">Then both p(fk I e;) and in (3) can be derived: where is the translation model from the source-to-target word alignment model, and p(fk I e;) , which enforces the sum-to-1 constraint over all words in the source sentence, takes the following form, where A2s (fk I e;) is the translation model from the target-to-source word alignment model.</S>
    <S sid="53" ssid="18">In our method, A2s (null I e;) for all target words is simply a constant pnull, whose value is optimized on held-out data 1.</S>
    <S sid="54" ssid="19">The surface similarity model can be estimated in several ways.</S>
    <S sid="55" ssid="20">A very simple model could be based on exact match: the surface similarity model, per,,.</S>
    <S sid="56" ssid="21">(elj I , would take the value 1.0 if e&#8217;= e, and 0 otherwise 2 .</S>
    <S sid="57" ssid="22">However, a smoothed surface similarity model is used in our method.</S>
    <S sid="58" ssid="23">If the target language uses alphabetic orthography, as English does, we treat words as letter sequences and the similarity measure can be the length of the longest matched prefix (LMP) or the length of the longest common subsequence (LCS) between them.</S>
    <S sid="59" ssid="24">Then, this raw similarity measure is transformed to a surface similarity score between 0 and 1 through an exponential mapping, where is computed as and is the raw similarity measure of ej&#8217; ei, which is the length of the LMP or LCS of ej&#8217; and ei. and p is a smoothing factor that characterizes the mapping, Thus as p approaches infinity, backs off to the exact match model.</S>
    <S sid="60" ssid="25">We found the smoothed similarity model of (4) yields slightly better results than the exact match model.</S>
    <S sid="61" ssid="26">Both LMP- and LCS- based methods achieve similar performance but the computation of LMP is faster.</S>
    <S sid="62" ssid="27">Therefore, we only report results of the LMP-based smoothed similarity model.</S>
    <S sid="63" ssid="28">The distortion model, which specifies the transition probabilities of the HMM, models the first-order dependencies of word ordering.</S>
    <S sid="64" ssid="29">In bilingual HMM-based word alignment, it is commonly assumed that transition probabilities Following Och and Ney (2003), we use a fixed value p0 for the probability of jumping to a null state, which can be optimized on held-out data, and the overall distortion model becomes As suggested by Liang et al. (2006), we can group the distortion parameters {c(d)}, d= i - i', into a few buckets.</S>
    <S sid="65" ssid="30">In our implementation, 11 buckets are used for c(&#8804;-4), c(-3), ... c(0), ..., c(5), c(&#8805;6).</S>
    <S sid="66" ssid="31">The probability mass for transitions with jump distance larger than 6 and less than -4 is uniformly divided.</S>
    <S sid="67" ssid="32">By doing this, only a handful of c(d) parameters need to be estimated.</S>
    <S sid="68" ssid="33">Although it is possible to estimate them using the EM algorithm on a small development set, we found that a particularly simple model, described below, works surprisingly well in our experiments.</S>
    <S sid="69" ssid="34">Since both the backbone and the hypothesis are in the same language, It seems intuitive that the distortion model should favor monotonic alignment and only allow non-monotonic alignment with a certain penalty.</S>
    <S sid="70" ssid="35">This leads us to use a distortion model of the following form, where K is a tuning factor optimized on held-out data.</S>
    <S sid="71" ssid="36">As shown in Fig.</S>
    <S sid="72" ssid="37">2, the value of distortion score peaks at d=1, i.e., the monotonic alignment, and decays for non-monotonic alignments depending on how far it diverges from the monotonic alignment.</S>
    <S sid="73" ssid="38">Given an HMM, the Viterbi alignment algorithm can be applied to find the best alignment between the backbone and the hypothesis, However, the alignment produced by the algorithm cannot be used directly to build a confusion network.</S>
    <S sid="74" ssid="39">There are two reasons for this.</S>
    <S sid="75" ssid="40">First, the alignment produced may contain 1-N mappings between the backbone and the hypothesis whereas 1-1 mappings are required in order to build a confusion network.</S>
    <S sid="76" ssid="41">Second, if hypothesis words are aligned to a null in the backbone or vice versa, we need to insert actual nulls into the right places in the hypothesis and the backbone, respectively.</S>
    <S sid="77" ssid="42">Therefore, we need to normalize the alignment produced by Viterbi search.</S>
    <S sid="78" ssid="43">First, whenever more than one hypothesis words are aligned to one backbone word, we keep the link which gives the highest occupation probability computed via the forward-backward algorithm.</S>
    <S sid="79" ssid="44">The other hypothesis words originally aligned to the backbone word will be aligned to the null associated with that backbone word.</S>
    <S sid="80" ssid="45">Second, for the hypothesis words that are aligned to a particular null on the backbone side, a set of nulls are inserted around that backbone word associated with the null such that no links cross each other.</S>
    <S sid="81" ssid="46">As illustrated in Fig.</S>
    <S sid="82" ssid="47">3 (a), if a hypothesis word e2&#8217; is aligned to the backbone word e2, a null is inserted in front of the backbone word e2 linked to the hypothesis word e1&#8217; that comes before e2&#8217;.</S>
    <S sid="83" ssid="48">Nulls are also inserted for other hypothesis words such as e3&#8217; and e4&#8217; after the backbone word e2.</S>
    <S sid="84" ssid="49">If there is no hypothesis word aligned to that backbone word, all nulls are inserted after that backbone word .3 For a backbone word that is aligned to no hypothesis word, a null is inserted on the hypothesis side, right after the hypothesis word which is aligned to the immediately preceding backbone word.</S>
    <S sid="85" ssid="50">An example is shown in Fig.</S>
    <S sid="86" ssid="51">3 (b).</S>
  </SECTION>
  <SECTION title="4 Related work" number="4">
    <S sid="87" ssid="1">The two main hypothesis alignment methods for system combination in the previous literature are GIZA++ and TER-based methods.</S>
    <S sid="88" ssid="2">Matusov et al. (2006) proposed using GIZA++ to align words between different MT hypotheses, where all hypotheses of the test corpus are collected to create hypothesis pairs for GIZA++ training.</S>
    <S sid="89" ssid="3">This approach uses the conventional HMM model bootstrapped from IBM Model-1 as implemented in GIZA++, and heuristically combines results from aligning in both directions.</S>
    <S sid="90" ssid="4">System combination based on this approach gives an improvement over the best single system.</S>
    <S sid="91" ssid="5">However, the number of hypothesis pairs for training is limited by the size of the test corpus.</S>
    <S sid="92" ssid="6">Also, MT hypotheses from the same source sentence are correlated with each other and these hypothesis pairs are not i.i.d. data samples.</S>
    <S sid="93" ssid="7">Therefore, GIZA++ training on such a data set may be unreliable.</S>
    <S sid="94" ssid="8">Bangalore et al. (2001) used a multiple stringmatching algorithm based on Levenshtein edit distance, and later Sim et al.</S>
    <S sid="95" ssid="9">(2007) and Rosti et al. (2007) extended it to a TER-based method for hypothesis alignment.</S>
    <S sid="96" ssid="10">TER (Snover et al., 2006) measures the minimum number of edits, including substitution, insertion, deletion, and shift of blocks of words, that are needed to modify a hypothesis so that it exactly matches the other hypothesis.</S>
    <S sid="97" ssid="11">The best alignment is the one that gives the minimum number of translation edits.</S>
    <S sid="98" ssid="12">TER-based confusion network construction and system combination has demonstrated superior performance on various large-scale MT tasks (Rosti. et al, 2007).</S>
    <S sid="99" ssid="13">However, when searching for the optimal alignment, the TER-based method uses a strict surface hard match for counting edits.</S>
    <S sid="100" ssid="14">Therefore, it is not able to handle synonym matching well.</S>
    <S sid="101" ssid="15">Moreover, although TER-based alignment allows phrase shifts to accommodate the non-monotonic word ordering, all non-monotonic shifts are penalized equally no matter how short or how long the move is, and this penalty is set to be the same as that for substitution, deletion, and insertion edits.</S>
    <S sid="102" ssid="16">Therefore, its modeling of non-monotonic word ordering is very coarse-grained.</S>
    <S sid="103" ssid="17">In contrast to the GIZA++-based method, our IHMM-based method has a similarity model estimated using bilingual word alignment HMMs that are trained on a large amount of bi-text data.</S>
    <S sid="104" ssid="18">Moreover, the surface similarity information is explicitly incorporated in our model, while it is only used implicitly via parameter initialization for IBM Model-1 training by Matusov et al. (2006).</S>
    <S sid="105" ssid="19">On the other hand, the TER-based alignment model is similar to a coarse-grained, nonnormalized version of our IHMM, in which the similarity model assigns no penalty to an exact surface match and a fixed penalty to all substitutions, insertions, and deletions, and the distortion model simply assigns no penalty to a monotonic jump, and a fixed penalty to all other jumps, equal to the non-exact-match penalty in the similarity model.</S>
    <S sid="106" ssid="20">There have been other hypothesis alignment methods.</S>
    <S sid="107" ssid="21">Karakos, et al. (2008) proposed an ITGbased method for hypothesis alignment, Rosti et al.</S>
    <S sid="108" ssid="22">(2008) proposed an incremental alignment method, and a heuristic-based matching algorithm was proposed by Jayaraman and Lavie (2005).</S>
  </SECTION>
  <SECTION title="5 Evaluation" number="5">
    <S sid="109" ssid="1">In this section, we evaluate our IHMM-based hypothesis alignment method on the Chinese-toEnglish (C2E) test in the constrained training track of the 2008 NIST Open MT Evaluation (NIST, 2008).</S>
    <S sid="110" ssid="2">We compare to the TER-based method used by Rosti et al. (2007).</S>
    <S sid="111" ssid="3">In the following experiments, the NIST BLEU score is used as the evaluation metric (Papineni et al., 2002), which is reported as a percentage in the following sections.</S>
    <S sid="112" ssid="4">In our implementation, the backbone is selected with MBR.</S>
    <S sid="113" ssid="5">Only the top hypothesis from each single system is considered as a backbone.</S>
    <S sid="114" ssid="6">A uniform posteriori probability is assigned to all hypotheses.</S>
    <S sid="115" ssid="7">TER is used as loss function in the MBR computation.</S>
    <S sid="116" ssid="8">Similar to (Rosti et al., 2007), each word in the confusion network is associated with a word posterior probability.</S>
    <S sid="117" ssid="9">Given a system S, each of its hypotheses is assigned with a rank-based score of 1/(1+r)&#951;, where r is the rank of the hypothesis, and &#951; is a rank smoothing parameter.</S>
    <S sid="118" ssid="10">The system specific rank-based score of a word w for a given system S is the sum of all the rank-based scores of the hypotheses in system S that contain the word w at the given position (after hypothesis alignment).</S>
    <S sid="119" ssid="11">This score is then normalized by the sum of the scores of all the alternative words at the same position and from the same system S to generate the system specific word posterior.</S>
    <S sid="120" ssid="12">Then, the total word posterior of w over all systems is a sum of these system specific posteriors weighted by system weights.</S>
    <S sid="121" ssid="13">Beside the word posteriors, we use language model scores and a word count as features for confusion network decoding.</S>
    <S sid="122" ssid="14">Therefore, for an M-way system combination that uses N LMs, a total of M+N+1 decoding parameters, including M-1 system weights, one rank smoothing factor, N language model weights, and one weight for the word count feature, are optimized using Powell&#8217;s method (Brent, 1973) to maximize BLEU score on a development set4 .</S>
    <S sid="123" ssid="15">Two language models are used in our experiments.</S>
    <S sid="124" ssid="16">One is a trigram model estimated from the English side of the parallel training data, and the other is a 5-gram model trained on the English GigaWord corpus from LDC using the MSRLM toolkit (Nguyen et al, 2007).</S>
    <S sid="125" ssid="17">4 The parameters of IHMM are not tuned by maximum-BLEU training.</S>
    <S sid="126" ssid="18">In order to reduce the fluctuation of BLEU scores caused by the inconsistent translation output length, an unsupervised length adaptation method has been devised.</S>
    <S sid="127" ssid="19">We compute an expected length ratio between the MT output and the source sentences on the development set after maximumBLEU training.</S>
    <S sid="128" ssid="20">Then during test, we adapt the length of the translation output by adjusting the weight of the word count feature such that the expected output/source length ratio is met.</S>
    <S sid="129" ssid="21">In our experiments, we apply length adaptation to the system combination output at the level of the whole test corpus.</S>
    <S sid="130" ssid="22">The development (dev) set used for system combination parameter training contains 1002 sentences sampled from the previous NIST MT Chinese-to-English test sets: 35% from MT04, 55% from MT05, and 10% from MT06-newswire.</S>
    <S sid="131" ssid="23">The test set is the MT08 Chinese-to-English &#8220;current&#8221; test set, which includes 1357 sentences from both newswire and web-data genres.</S>
    <S sid="132" ssid="24">Both dev and test sets have four references per sentence.</S>
    <S sid="133" ssid="25">As inputs to the system combination, 10-best hypotheses for each source sentence in the dev and test sets are collected from each of the eight single systems.</S>
    <S sid="134" ssid="26">All outputs on the MT08 test set were true-cased before scoring using a log-linear conditional Markov model proposed by Toutanova et al. (2008).</S>
    <S sid="135" ssid="27">However, to save computation effort, the results on the dev set are reported in case insensitive BLEU (ciBLEU) score instead.</S>
    <S sid="136" ssid="28">In our main experiments, outputs from a total of eight single MT systems were combined.</S>
    <S sid="137" ssid="29">As listed in Table 1, Sys-1 is a tree-to-string system proposed by Quirk et al., (2005); Sys-2 is a phrasebased system with fast pruning proposed by Moore and Quirk (2008); Sys-3 is a phrase-based system with syntactic source reordering proposed by Wang et al. (2007a); Sys-4 is a syntax-based preordering system proposed by Li et. al.</S>
    <S sid="138" ssid="30">(2007); Sys5 is a hierarchical system proposed by Chiang (2007); Sys-6 is a lexicalized re-ordering system proposed by Xiong et al. (2006); Sys-7 is a twopass phrase-based system with adapted LM proposed by Foster and Kuhn (2007); and Sys-8 is a hierarchical system with two-pass rescoring using a parser-based LM proposed by Wang et al., (2007b).</S>
    <S sid="139" ssid="31">All systems were trained within the confines of the constrained training condition of NIST MT08 evaluation.</S>
    <S sid="140" ssid="32">These single systems are optimized with maximum-BLEU training on different subsets of the previous NIST MT test data.</S>
    <S sid="141" ssid="33">The bilingual translation models used to compute the semantic similarity are from the worddependent HMMs proposed by He (2007), which are trained on two million parallel sentence-pairs selected from the training corpus allowed by the constrained training condition of MT08.</S>
    <S sid="142" ssid="34">In the IHMM-based method, the smoothing factor for surface similarity model is set to &#961; = 3, the interpolation factor of the overall similarity model is set to &#945; = 0.3, and the controlling factor of the distance-based distortion parameters is set to K=2.</S>
    <S sid="143" ssid="35">These settings are optimized on the dev set.</S>
    <S sid="144" ssid="36">Individual system results and system combination results using both IHMM and TER alignment, on both the dev and test sets, are presented in Table 1.</S>
    <S sid="145" ssid="37">The TER-based hypothesis alignment tool used in our experiments is the publicly available TER Java program, TERCOM (Snover et al., 2006).</S>
    <S sid="146" ssid="38">Default settings of TERCOM are used in the following experiments.</S>
    <S sid="147" ssid="39">On the dev set, the case insensitive BLEU score of the IHMM-based 8-way system combination output is about 5.8 points higher than that of the best single system.</S>
    <S sid="148" ssid="40">Compared to the TER-based method, the IHMM-based method is about 1.5 BLEU points better.</S>
    <S sid="149" ssid="41">On the MT08 test set, the IHMM-based system combination gave a case sensitive BLEU score of 30.89%.</S>
    <S sid="150" ssid="42">It outperformed the best single system by 4.7 BLEU points and the TER-based system combination by 1.0 BLEU points.</S>
    <S sid="151" ssid="43">Note that the best single system on the dev set and the test set are different.</S>
    <S sid="152" ssid="44">The different single systems are optimized on different tuning sets, so this discrepancy between dev set and test set results is presumably due to differing degrees of mismatch between the dev and test sets and the various tuning sets.</S>
    <S sid="153" ssid="45">In order to evaluate how well our method performs when we combine more systems, we collected MT outputs on MT08 from seven additional single systems as summarized in Table 2.</S>
    <S sid="154" ssid="46">These systems belong to two groups.</S>
    <S sid="155" ssid="47">Sys-9 to Sys-12 are in the first group.</S>
    <S sid="156" ssid="48">They are syntaxaugmented hierarchical systems similar to those described by Shen et al. (2008) using different Chinese word segmentation and language models.</S>
    <S sid="157" ssid="49">The second group has Sys-13 to Sys-15.</S>
    <S sid="158" ssid="50">Sys-13 is a phrasal system proposed by Koehn et al. (2003), Sys-14 is a hierarchical system proposed by Chiang (2007), and Sys-15 is a syntax-based system proposed by Galley et al.</S>
    <S sid="159" ssid="51">(2006).</S>
    <S sid="160" ssid="52">All seven systems were trained within the confines of the constrained training condition of NIST MT08 evaluation.</S>
    <S sid="161" ssid="53">We collected 10-best MT outputs only on the MT08 test set from these seven extra systems.</S>
    <S sid="162" ssid="54">No MT outputs on our dev set are available from them at present.</S>
    <S sid="163" ssid="55">Therefore, we directly adopt system combination parameters trained for the previous 8way system combination, except the system weights, which are re-set by the following heuristics: First, the total system weight mass 1.0 is evenly divided among the three groups of single systems: {Sys-1~8}, {Sys-9~12}, and {Sys13~15}.</S>
    <S sid="164" ssid="56">Each group receives a total system weight mass of 1/3.</S>
    <S sid="165" ssid="57">Then the weight mass is further divided in each group: in the first group, the original weights of systems 1~8 are multiplied by 1/3; in the second and third groups, the weight mass is evenly distributed within the group, i.e., 1/12 for each system in group 2, and 1/9 for each system in group 35.</S>
    <S sid="166" ssid="58">Length adaptation is applied to control the final output length, where the same expected length ratio of the previous 8-way system combination is adopted.</S>
    <S sid="167" ssid="59">The results of the 15-way system combination are presented in Table 3.</S>
    <S sid="168" ssid="60">It shows that the IHMMbased method is still about 1 BLEU point better than the TER-based method.</S>
    <S sid="169" ssid="61">Moreover, combining 15 single systems gives an output that has a NIST BLEU score of 34.82%, which is 3.9 points better than the best submission to the NIST MT08 constrained training track (NIST, 2008).</S>
    <S sid="170" ssid="62">To our knowledge, this is the best result reported on this task.</S>
    <S sid="171" ssid="63">In this section, we evaluate the effect of the semantic similarity model and the surface similarity model by varying the interpolation weight &#945; of (2).</S>
    <S sid="172" ssid="64">The results on both the dev and test sets are reported in Table 4.</S>
    <S sid="173" ssid="65">In one extreme case, &#945; = 1, the overall similarity model is based only on semantic similarity.</S>
    <S sid="174" ssid="66">This gives a case insensitive BLEU score of 41.70% and a case sensitive BLEU score of 28.92% on the dev and test set, respectively.</S>
    <S sid="175" ssid="67">The accuracy is significantly improved to 43.62% on the dev set and 30.89% on test set when &#945; = 0.3.</S>
    <S sid="176" ssid="68">In another extreme case, &#945; = 0, in which only the surface similarity model is used for the overall similarity model, the performance degrades by about 0.2 point.</S>
    <S sid="177" ssid="69">Therefore, the surface similarity information seems more important for monolingual hypothesis alignment, but both sub-models are useful.</S>
    <S sid="178" ssid="70">We investigate the effect of the distance-based distortion model by varying the controlling factor K in (6).</S>
    <S sid="179" ssid="71">For example, setting K=1.0 gives a lineardecay distortion model, and setting K=2.0 gives a quadratic smoothed distance-based distortion model.</S>
    <S sid="180" ssid="72">As shown in Table 5, the optimal result can be achieved using a properly smoothed distancebased distortion model.</S>
  </SECTION>
  <SECTION title="6 Conclusion" number="6">
    <S sid="181" ssid="1">Synonym matching and word ordering are two central issues for hypothesis alignment in confusion-network-based MT system combination.</S>
    <S sid="182" ssid="2">In this paper, an IHMM-based method is proposed for hypothesis alignment.</S>
    <S sid="183" ssid="3">It uses a similarity model for synonym matching and a distortion model for word ordering.</S>
    <S sid="184" ssid="4">In contrast to previous methods, the similarity model explicitly incorporates both semantic and surface word similarity, which is critical to monolingual word alignment, and a smoothed distance-based distortion model is used to model the first-order dependency of word ordering, which is shown to be better than simpler approaches.</S>
    <S sid="185" ssid="5">Our experimental results show that the IHMMbased hypothesis alignment method gave superior results on the NIST MT08 C2E test set compared to the TER-based method.</S>
    <S sid="186" ssid="6">Moreover, we show that our system combination method can scale up to combining more systems and produce a better output that has a case sensitive BLEU score of 34.82, which is 3.9 BLEU points better than the best official submission of MT08.</S>
  </SECTION>
  <SECTION title="Acknowledgement" number="7">
    <S sid="187" ssid="1">The authors are grateful to Chris Quirk, Arul Menezes, Kristina Toutanova, William Dolan, Mu Li, Chi-Ho Li, Dongdong Zhang, Long Jiang, Ming Zhou, George Foster, Roland Kuhn, Jing Zheng, Wen Wang, Necip Fazil Ayan, Dimitra Vergyri, Nicolas Scheffer, Andreas Stolcke, Kevin Knight, Jens-Soenke Voeckler, Spyros Matsoukas, and Antti-Veikko Rosti for assistance with the MT systems and/or for the valuable suggestions and discussions.</S>
  </SECTION>
</PAPER>
