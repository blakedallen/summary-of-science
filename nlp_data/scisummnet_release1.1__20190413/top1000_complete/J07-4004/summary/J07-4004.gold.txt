Wide-Coverage Efficient Statistical Parsing with CCG and Log-Linear Models
This article describes a number of log-linear parsing models for an automatically extracted lexicalized grammar.
The models are "full" parsing models in the sense that probabilities are defined for complete parses, rather than for independent events derived by decomposing the parse tree.
Discriminative training is used to estimate the models, which requires incorrect parses for each sentence in the training data as well as the correct parse.
The lexicalized grammar formalism used is Combinatory Categorial Grammar (CCG), and the grammar is automatically extracted from CCGbank, a CCG version of the Penn Treebank.
The combination of discriminative training and an automatically extracted grammar leads to a significant memory requirement (up to 25 GB), which is satisfied using a parallel implementation of the BFGS optimization algorithm running on a Beowulf cluster.
Dynamic programming over a packed chart, in combination with the parallel implementation, allows us to solve one of the largest-scale estimation problems in the statistical parsing literature in under three hours.
A key component of the parsing system, for both training and testing, is a Maximum Entropy supertagger which assigns CCG lexical categories to words in a sentence.
The supertagger makes the discriminative training feasible, and also leads to a highly efficient parser.
Surprisingly, given CCG’s 'spurious ambiguity,' the parsing speeds are significantly higher than those reported for comparable parsers in the literature.
We also extend the existing parsing techniques for CCG by developing a new model and efficient parsing algorithm which exploits all derivations, including CCG’s nonstandard derivations.
This model and parsing algorithm, when combined with normal-form constraints, give state-of-the-art accuracy for the recovery of predicate–argument dependencies from CCGbank.
The parser is also evaluated on DepBank and compared against the RASP parser, outperforming RASP overall and on the majority of relation types.
The evaluation on DepBank raises a number of issues regarding parser evaluation.
This article provides a comprehensive blueprint for building a wide-coverage CCG parser.
We demonstrate that both accurate and highly efficient parsing is possible with CCG.
From a parsing perspective, the C & C parser has been shown to be competitive with state-of-theart statistical parsers on a variety of test suites, including those consisting of grammatical relations (Clark and Curran, 2007), Penn Treebank phrase structure trees (Clark and Curran, 2009), and unbounded dependencies (Rimell et al, 2009).
