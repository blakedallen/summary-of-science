<PAPER>
  <S sid="0">Exploring Content Models for Multi-Document Summarization</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We present an exploration of generative probabilistic models for multi-document summarization.</S>
    <S sid="2" ssid="2">Beginning with a simple word frequency based model (Nenkova and Vanderwende, 2005), we construct a sequence of models each injecting more structure into the representation of document set content and exhibiting ROUGE gains along the way.</S>
    <S sid="3" ssid="3">Our model, utilizes a hierarchical LDA-style model (Blei et al., 2004) to represent content specificity as a hierarchy of topic vocabulary distributions.</S>
    <S sid="4" ssid="4">At the task of producing generic DUC-style summaries, state-of-the-art ROUGE performance and in pairwise user evaluation strongly outperforms Toutanova et al. (2007)&#8217;s state-of-the-art discriminative system.</S>
    <S sid="5" ssid="5">We explore capacity to produce multiple &#8216;topical summaries&#8217; in order to facilitate content discovery and navigation.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">Over the past several years, there has been much interest in the task of multi-document summarization.</S>
    <S sid="7" ssid="2">In the common Document Understanding Conference (DUC) formulation of the task, a system takes as input a document set as well as a short description of desired summary focus and outputs a word length limited summary.1 To avoid the problem of generating cogent sentences, many systems opt for an extractive approach, selecting sentences from the document set which best reflect its core content.2 There are several approaches to modeling document content: simple word frequency-based methods (Luhn, 1958; Nenkova and Vanderwende, 2005), graph-based approaches (Radev, 2004; Wan and Yang, 2006), as well as more linguistically motivated techniques (Mckeown et al., 1999; Leskovec et al., 2005; Harabagiu et al., 2007).</S>
    <S sid="8" ssid="3">Another strand of work (Barzilay and Lee, 2004; Daum&#180;e III and Marcu, 2006; Eisenstein and Barzilay, 2008), has explored the use of structured probabilistic topic models to represent document content.</S>
    <S sid="9" ssid="4">However, little has been done to directly compare the benefit of complex content models to simpler surface ones for generic multi-document summarization.</S>
    <S sid="10" ssid="5">In this work we examine a series of content models for multi-document summarization and argue that LDA-style probabilistic topic models (Blei et al., 2003) can offer state-of-the-art summarization quality as measured by automatic metrics (see section 5.1) and manual user evaluation (see section 5.2).</S>
    <S sid="11" ssid="6">We also contend that they provide convenient building blocks for adding more structure to a summarization model.</S>
    <S sid="12" ssid="7">In particular, we utilize a variation of the hierarchical LDA topic model (Blei et al., 2004) to discover multiple specific &#8216;subtopics&#8217; within a document set.</S>
    <S sid="13" ssid="8">The resulting model, HIERSUM (see section 3.4), can produce general summaries as well as summaries for any of the learned sub-topics.</S>
  </SECTION>
  <SECTION title="2 Experimental Setup" number="2">
    <S sid="14" ssid="1">The task we will consider is extractive multidocument summarization.</S>
    <S sid="15" ssid="2">In this task we assume a document collection D consisting of documents Di, ... , D,,, describing the same (or closely related) narrative (Lapata, 2003). set of events.</S>
    <S sid="16" ssid="3">Our task will be to propose a summary S consisting of sentences in D totaling at most L words.3 Here as in much extractive summarization, we will view each sentence as a bag-of-words or more generally a bag-of-ngrams (see section 5.1).</S>
    <S sid="17" ssid="4">The most prevalent example of this data setting is document clusters found on news aggregator sites.</S>
    <S sid="18" ssid="5">For model development we will utilize the DUC 2006 evaluation set4 consisting of 50 document sets each with 25 documents; final evaluation will utilize the DUC 2007 evaluation set (section 5).</S>
    <S sid="19" ssid="6">Automated evaluation will utilize the standard DUC evaluation metric ROUGE (Lin, 2004) which represents recall over various n-grams statistics from a system-generated summary against a set of humangenerated peer summaries.5 We compute ROUGE scores with and without stop words removed from peer and proposed summaries.</S>
    <S sid="20" ssid="7">In particular, we utilize R-1 (recall against unigrams), R-2 (recall against bigrams), and R-SU4 (recall against skip-4 bigrams)6.</S>
    <S sid="21" ssid="8">We present R-2 without stop words in the running text, but full development results are presented in table 1.</S>
    <S sid="22" ssid="9">Official DUC scoring utilizes the jackknife procedure and assesses significance using bootstrapping resampling (Lin, 2004).</S>
    <S sid="23" ssid="10">In addition to presenting automated results, we also present a user evaluation in section 5.2.</S>
  </SECTION>
  <SECTION title="3 Summarization Models" number="3">
    <S sid="24" ssid="1">We present a progression of models for multidocument summarization.</S>
    <S sid="25" ssid="2">Inference details are given in section 4.</S>
    <S sid="26" ssid="3">The SUMBASIC algorithm, introduced in Nenkova and Vanderwende (2005), is a simple effective procedure for multi-document extractive summarization.</S>
    <S sid="27" ssid="4">Its design is motivated by the observation that the relative frequency of a non-stop word in a document set is a good predictor of a word appearing in a human summary.</S>
    <S sid="28" ssid="5">In SUMBASIC, each sentence where PD(&#183;) initially reflects the observed unigram probabilities obtained from the document collection D. A summary S is progressively built by adding the highest scoring sentence according to (1).7 In order to discourage redundancy, the words in the selected sentence are updated PDnew (w) a til the summary word limit has been reached.</S>
    <S sid="29" ssid="6">Despite its simplicity, SUMBASIC yields 5.3 R-2 without stop words on DUC 2006 (see table 1).8 By comparison, the highest-performing ROUGE system at the DUC 2006 evaluation, SUMFOCUS, was built on top of SUMBASIC and yielded a 6.0, which is not a statistically significant improvement (Vanderwende et al., 2007).9 Intuitively, SUMBASIC is trying to select a summary which has sentences where most words have high likelihood under the document set unigram distribution.</S>
    <S sid="30" ssid="7">One conceptual problem with this objective is that it inherently favors repetition of frequent non-stop words despite the &#8216;squaring&#8217; update.</S>
    <S sid="31" ssid="8">Ideally, a summarization criterion should be more recall oriented, penalizing summaries which omit moderately frequent document set words and quickly diminishing the reward for repeated use of word.</S>
    <S sid="32" ssid="9">Another more subtle shortcoming is the use of the raw empirical unigram distribution to represent content significance.</S>
    <S sid="33" ssid="10">For instance, there is no distinction between a word which occurs many times in the same document or the same number of times across several documents.</S>
    <S sid="34" ssid="11">Intuitively, the latter word is more indicative of significant document set content.</S>
    <S sid="35" ssid="12">The KLSUM algorithm introduces a criterion for selecting a summary S given document collection D, where PS is the empirical unigram distribution of the candidate summary S and KL(P Q) represents the Kullback-Lieber (KL) divergence given by divergence between the true distribution P (here the document set unigram distribution) and the approximating distribution Q (the summary distribution).</S>
    <S sid="36" ssid="13">This criterion casts summarization as finding a set of summary sentences which closely match the document set unigram distribution.</S>
    <S sid="37" ssid="14">Lin et al. (2006) propose a related criterion for robust summarization evaluation, but to our knowledge this criteria has been unexplored in summarization systems.</S>
    <S sid="38" ssid="15">We address optimizing equation (2) as well as summary sentence ordering in section 4.</S>
    <S sid="39" ssid="16">KLSUM yields 6.0 R-2 without stop words, beating SUMBASIC but not with statistical significance.</S>
    <S sid="40" ssid="17">It is worth noting however that KLSUM&#8217;s performance matches SUMFOCUS (Vanderwende et al., 2007), the highest R-2 performing system at DUC 2006.</S>
    <S sid="41" ssid="18">As mentioned in section 3.2, the raw unigram distribution PD(&#183;) may not best reflect the content of D for the purpose of summary extraction.</S>
    <S sid="42" ssid="19">We propose TOPICSUM, which uses a simple LDA-like topic model (Blei et al., 2003) similar to Daum&#180;e III and Marcu (2006) to estimate a content distribu10In order to ensure finite values of KL-divergence we smoothe PS(&#183;) so that it has a small amount of mass on all document set words. tion for summary extraction.11 We extract summary sentences as before using the KLSUM criterion (see equation (2)), plugging in a learned content distribution in place of the raw unigram distribution.</S>
    <S sid="43" ssid="20">First, we describe our topic model (see figure 1) which generates a collection of document sets.</S>
    <S sid="44" ssid="21">We assume a fixed vocabulary V :12 11A topic model is a probabilistic generative process that generates a collection of documents using a mixture of topic vocabulary distributions (Steyvers and Griffiths, 2007).</S>
    <S sid="45" ssid="22">Note this usage of topic is unrelated to the summary focus given for document collections; this information is ignored by our models.</S>
    <S sid="46" ssid="23">12In contrast to previous models, stop words are not removed in pre-processing.</S>
    <S sid="47" ssid="24">13DIRICHLET(V,A) represents the symmetric Dirichlet prior distribution over V each with a pseudo-count of A.</S>
    <S sid="48" ssid="25">Concrete pseudo-count values will be given in section 4.</S>
    <S sid="49" ssid="26">4.</S>
    <S sid="50" ssid="27">For each sentence S of each document D, draw a distribution &#968;T over topics (CONTENT, DOCSPECIFIC, BACKGROUND) from a Dirichlet prior with pseudo-counts (1.0, 5.0,10.0).14 For each word position in the sentence, we draw a topic Z from &#968;T, and a word W from the topic distribution Z indicates.</S>
    <S sid="51" ssid="28">Our intent is that &#966;C represents the core content of a document set.</S>
    <S sid="52" ssid="29">Intuitively, &#966;C does not include words which are common amongst several document collections (modeled with the BACKGROUND topic), or words which don&#8217;t appear across many documents (modeled with the DOCSPECIFIC topic).</S>
    <S sid="53" ssid="30">Also, because topics are tied together at the sentence level, words which frequently occur with other content words are more likely to be considered content words.</S>
    <S sid="54" ssid="31">We ran our topic model over the DUC 2006 document collections and estimated the distribution &#966;C(&#183;) for each document set.15 Then we extracted a summary using the KLSUM criterion with our estimated &#966;C in place of the the raw unigram distribution.</S>
    <S sid="55" ssid="32">Doing so yielded 6.3 R-2 without stop words (see TOPICSUM in table 1); while not a statistically significant improvement over KLSUM, it is our first model which outperforms SUMBASIC with statistical significance.</S>
    <S sid="56" ssid="33">Daum&#180;e III and Marcu (2006) explore a topic model similar to ours for query-focused multidocument summarization.16 Crucially however, Daum&#180;e III and Marcu (2006) selected sentences with the highest expected number of CONTENT words.17 We found that in our model using this extraction criterion yielded 5.3 R-2 without stop words, significantly underperforming our TOPICSUM model.</S>
    <S sid="57" ssid="34">One reason for this may be that Daum&#180;e III and Marcu (2006)&#8217;s criterion encourages selecting sentences which have words that are confidently generated by the CONTENT distribution, but not necessarily sentences which contain a plurality of it&#8217;s mass.</S>
    <S sid="58" ssid="35">TENT distribution by analytically integrating over &#966;C (Blei et al., 2003), doing so gave no benefit.</S>
    <S sid="59" ssid="36">Previous sections have treated the content of a document set as a single (perhaps learned) unigram distribution.</S>
    <S sid="60" ssid="37">However, as Barzilay and Lee (2004) observe, the content of document collections is highly structured, consisting of several topical themes, each with its own vocabulary and ordering preferences.</S>
    <S sid="61" ssid="38">For concreteness consider the DUC 2006 document collection describing the opening of Star Wars: Episode 1 (see figure 2(a)).</S>
    <S sid="62" ssid="39">While there are words which indicate the general content of this document collection (e.g. star, wars), there are several sub-stories with their own specific vocabulary.</S>
    <S sid="63" ssid="40">For instance, several documents in this collection spend a paragraph or two talking about the financial aspect of the film&#8217;s opening and use a specific vocabulary there (e.g.</S>
    <S sid="64" ssid="41">$, million, record).</S>
    <S sid="65" ssid="42">A user may be interested in general content of a document collection or, depending on his or her interests, one or more of the sub-stories.</S>
    <S sid="66" ssid="43">We choose to adapt our topic modeling approach to allow modeling this aspect of document set content.</S>
    <S sid="67" ssid="44">Rather than drawing a single CONTENT distribution 0C for a document collection, we now draw a general content distribution 0C0 from DIRICHLET(V,AG) as well as specific content distributions 0Ci for i = 1, ... , K each from DIRICHLET(V,AS).18 Our intent is that 0C0 represents the 18We choose K=3 in our experiments, but one could flexibly general content of the document collection and each 0Ci represents specific sub-stories.</S>
    <S sid="68" ssid="45">As with TOPICSUM, each sentence has a distribution &#968;T over topics (BACKGROUND, DOCSPECIFIC, CONTENT).</S>
    <S sid="69" ssid="46">When BACKGROUND or DOCSPECIFIC topics are chosen, the model works exactly as in TOPICSUM.</S>
    <S sid="70" ssid="47">However when the CONTENT topic is drawn, we must decide whether to emit a general content word (from 0C0) or from one of the specific content distributions (from one of 0Ci for i = 1, ... , K).</S>
    <S sid="71" ssid="48">The generative story of TOPICSUM is altered as follows in this case: &#8226; General or Specific?</S>
    <S sid="72" ssid="49">We must first decide whether to use a general or specific content word.</S>
    <S sid="73" ssid="50">Each sentence draws a binomial distribution &#968;G determining whether a CONTENT word in the sentence will be drawn from the general or a specific topic distribution.</S>
    <S sid="74" ssid="51">Reflecting the intuition that the earlier sentences in a document19 describe the general content of a story, we bias &#968;G to be drawn from BETA(5,2), preferring general content words, and every later sentence from BETA(1,2).20 emitting a topic specific content word, we must decide which of 0Cl, ... , 0CK to use.</S>
    <S sid="75" ssid="52">In order to ensure tight lexical cohesion amongst the specific topics, we assume that each sentence draws a single specific topic ZS used for every specific content word in that sentence.</S>
    <S sid="76" ssid="53">Reflecting intuition that adjacent sentences are likely to share specific content vocabulary, we utilize a &#8216;sticky&#8217; HMM as in Barzilay and Lee (2004) over the each sentences&#8217; ZS.</S>
    <S sid="77" ssid="54">Concretely, ZS for the first sentence in a document is drawn uniformly from 1, ... , K, and each subsequent sentence&#8217;s ZS will be identical to the previous sentence with probability Q, and with probability 1 &#8722; Q we select a successor topic from a learned transition distribution amongst 1, ... , K.21 Our intent is that the general content distribution 0C0 now prefers words which not only appear in many documents, but also words which appear consistently throughout a document rather than being concentrated in a small number of sentences.</S>
    <S sid="78" ssid="55">Each specific content distribution 0Ci is meant to model topics which are used in several documents but tend to be used in concentrated locations.</S>
    <S sid="79" ssid="56">HIERSUM can be used to extract several kinds of summaries.</S>
    <S sid="80" ssid="57">It can extract a general summary by plugging 0C0 into the KLSUM criterion.</S>
    <S sid="81" ssid="58">It can also produce topical summaries for the learned specific topics by extracting a summary over each 0Ci distribution; this might be appropriate for a user who wants to know more about a particular substory.</S>
    <S sid="82" ssid="59">While we found the general content distribution (from 0Co) to produce the best single summary, we experimented with utilizing topical summaries for other summarization tasks (see section 6.1).</S>
    <S sid="83" ssid="60">The resulting system, HIERSUM yielded 6.4 R-2 without stop words.</S>
    <S sid="84" ssid="61">While not a statistically significant improvement in ROUGE over TOPICSUM, we found the summaries to be noticeably improved.</S>
  </SECTION>
  <SECTION title="4 Inference and Model Details" number="4">
    <S sid="85" ssid="1">Since globally optimizing the KLSUM criterion in equation (equation (2)) is exponential in the total number of sentences in a document collection, we 21We choose &#963; = 0.75 in our experiments. opted instead for a simple approximation where sentences are greedily added to a summary so long as they decrease KL-divergence.</S>
    <S sid="86" ssid="2">We attempted more complex inference procedures such as McDonald (2007), but these attempts only yielded negligible performance gains.</S>
    <S sid="87" ssid="3">All summary sentence ordering was determined as follows: each sentence in the proposed summary was assigned a number in [0, 1] reflecting its relative sentence position in its source document, and sorted by this quantity.</S>
    <S sid="88" ssid="4">All topic models utilize Gibbs sampling for inference (Griffiths, 2002; Blei et al., 2004).</S>
    <S sid="89" ssid="5">In general for concentration parameters, the more specific a distribution is meant to be, the smaller its concentration parameter.</S>
    <S sid="90" ssid="6">Accordingly for TOPICSUM, AG = AD = 1 and AC = 0.1.</S>
    <S sid="91" ssid="7">For HIERSUM we used AG = 0.1 and AS = 0.01.</S>
    <S sid="92" ssid="8">These parameters were minimally tuned (without reference to ROUGE results) in order to ensure that all topic distribution behaved as intended.</S>
  </SECTION>
  <SECTION title="5 Formal Experiments" number="5">
    <S sid="93" ssid="1">We present formal experiments on the DUC 2007 data main summarization task, proposing a general summary of at most 250 words22 which will be evaluated automatically and manually in order to simulate as much as possible the DUC evaluation environment.23 DUC 2007 consists of 45 document sets, each consisting of 25 documents and 4 human reference summaries.</S>
    <S sid="94" ssid="2">We primarily evaluate the HIERSUM model, extracting a single summary from the general content distribution using the KLSUM criterion (see section 3.2).</S>
    <S sid="95" ssid="3">Although the differences in ROUGE between HIERSUM and TOPICSUM were minimal, we found HIERSUM summary quality to be stronger.</S>
    <S sid="96" ssid="4">In order to provide a reference for ROUGE and manual evaluation results, we compare against PYTHY, a state-of-the-art supervised sentence extraction summarization system.</S>
    <S sid="97" ssid="5">PYTHY uses humangenerated summaries in order to train a sentence ranking system which discriminatively maximizes ROUGE scores.</S>
    <S sid="98" ssid="6">PYTHY uses several features to rank sentences including several variations of the SUMBASIC score (see section 3.1).</S>
    <S sid="99" ssid="7">At DUC 2007, PYTHY was ranked first overall in automatic ROUGE evaluation and fifth in manual content judgments.</S>
    <S sid="100" ssid="8">As PYTHY utilizes a sentence simplification component, which we do not, we also compare against PYTHY without sentence simplification.</S>
    <S sid="101" ssid="9">ROUGE results comparing variants of HIERSUM and PYTHY are given in table 3.</S>
    <S sid="102" ssid="10">The HIERSUM system as described in section 3.4 yields 7.3 R-2 without stop words, falling significantly short of the 8.7 that PYTHY without simplification yields.</S>
    <S sid="103" ssid="11">Note that R-2 is a measure of bigram recall and HIERSUM does not represent bigrams whereas PYTHY includes several bigram and higher order n-gram statistics.</S>
    <S sid="104" ssid="12">In order to put HIERSUM and PYTHY on equalfooting with respect to R-2, we instead ran HIERSUM with each sentence consisting of a bag of bigrams instead of unigrams.24 All the details of the model remain the same.</S>
    <S sid="105" ssid="13">Once a general content distribution over bigrams has been determined by hierarchical topic modeling, the KLSUM criterion is used as before to extract a summary.</S>
    <S sid="106" ssid="14">This system, labeled HIERSUM bigram in table 3, yields 9.3 R-2 without stop words, significantly outperforming HIERSUM unigram.</S>
    <S sid="107" ssid="15">This model outperforms PYTHY with and without sentence simplification, but not with statistical significance.</S>
    <S sid="108" ssid="16">We conclude that both PYTHY variants and HIERSUM bigram are comparable with respect to ROUGE performance.</S>
    <S sid="109" ssid="17">24Note that by doing topic modeling in this way over bigrams, our model becomes degenerate as it can generate inconsistent bags of bigrams.</S>
    <S sid="110" ssid="18">Future work may look at topic models over n-grams as suggested by Wang et al. (2007).</S>
    <S sid="111" ssid="19">In order to obtain a more accurate measure of summary quality, we performed a simple user study.</S>
    <S sid="112" ssid="20">For each document set in the DUC 2007 collection, a user was given a reference summary, a PYTHY summary, and a HIERSUM summary;25 note that the original documents in the set were not provided to the user, only a reference summary.</S>
    <S sid="113" ssid="21">For this experiment we use the bigram variant of HIERSUM and compare it to PYTHY without simplification so both systems have the same set of possible output summaries.</S>
    <S sid="114" ssid="22">The reference summary for each document set was selected according to highest R-2 without stop words against the remaining peer summaries.</S>
    <S sid="115" ssid="23">Users were presented with 4 questions drawn from the DUC manual evaluation guidelines:26 (1) Overall quality: Which summary was better overall?</S>
    <S sid="116" ssid="24">(2) Non-Redundancy: Which summary was less redundant?</S>
    <S sid="117" ssid="25">(3) Coherence: Which summary was more coherent?</S>
    <S sid="118" ssid="26">(4) Focus: Which summary was more 25The system identifier was of course not visible to the user.</S>
    <S sid="119" ssid="27">The order of automatic summaries was determined randomly. focused in its content, not conveying irrelevant details?</S>
    <S sid="120" ssid="28">The study had 16 users and each was asked to compare five summary pairs, although some did fewer.</S>
    <S sid="121" ssid="29">A total of 69 preferences were solicited.</S>
    <S sid="122" ssid="30">Document collections presented to users were randomly selected from those evaluated fewest.</S>
    <S sid="123" ssid="31">As seen in table 5.2, HIERSUM outperforms PYTHY under all questions.</S>
    <S sid="124" ssid="32">All results are statistically significant as judged by a simple pairwise t-test with 95% confidence.</S>
    <S sid="125" ssid="33">It is safe to conclude that users in this study strongly preferred the HIERSUM summaries over the PYTHY summaries.</S>
  </SECTION>
  <SECTION title="6 Discussion" number="6">
    <S sid="126" ssid="1">While it is difficult to qualitatively compare one summarization system over another, we can broadly characterize HIERSUM summaries compared to some of the other systems discussed.</S>
    <S sid="127" ssid="2">For example output from HIERSUM and PYTHY see table 2.</S>
    <S sid="128" ssid="3">On the whole, HIERSUM summaries appear to be significantly less redundant than PYTHY and moderately less redundant than SUMBASIC.</S>
    <S sid="129" ssid="4">The reason for this might be that PYTHY is discriminatively trained to maximize ROUGE which does not directly penalize redundancy.</S>
    <S sid="130" ssid="5">Another tendency is for HIERSUM to select longer sentences typically chosen from an early sentence in a document.</S>
    <S sid="131" ssid="6">As discussed in section 3.4, HIERSUM is biased to consider early sentences in documents have a higher proportion of general content words and so this tendency is to be expected.</S>
    <S sid="132" ssid="7">A common concern in multi-document summarization is that without any indication of user interest or intent providing a single satisfactory summary to a user may not be feasible.</S>
    <S sid="133" ssid="8">While many variants of the general summarization task have been proposed which utilize such information (Vanderwende et al., 2007; Nastase, 2008), this presupposes that a user knows enough of the content of a document collection in order to propose a query.</S>
    <S sid="134" ssid="9">As Leuski et al. (2003) and Branavan et al.</S>
    <S sid="135" ssid="10">(2007) suggest, a document summarization system should facilitate content discovery and yield summaries relevant to a user&#8217;s interests.</S>
    <S sid="136" ssid="11">We may use HIERSUM in order to facilitate content discovery via presenting a user with salient words or phrases from the specific content topics parametrized by 0C1, ... , 0CK (for an example see figure 3).</S>
    <S sid="137" ssid="12">While these topics are not adaptive to user interest, they typically reflect lexically coherent vocabularies.</S>
  </SECTION>
  <SECTION title="Conclusion" number="7">
    <S sid="138" ssid="1">In this paper we have presented an exploration of content models for multi-document summarization and demonstrated that the use of structured topic models can benefit summarization quality as measured by automatic and manual metrics.</S>
    <S sid="139" ssid="2">Acknowledgements The authors would like to thank Bob Moore, Chris Brockett, Chris Quirk, and Kristina Toutanova for their useful discussions as well as the reviewers for their helpful comments.</S>
  </SECTION>
</PAPER>
