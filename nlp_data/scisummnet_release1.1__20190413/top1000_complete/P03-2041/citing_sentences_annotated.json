[
  {
    "citance_No": 1, 
    "citing_paper_id": "C04-1154", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Declan, Groves | Mary, Hearne | Andy, Way", 
    "raw_text": "(Eisner, 2003) outlines a computationally expensive structural manipulation tool which he has used for intra-lingual translation but has yet to apply to interlingual translation", 
    "clean_text": "(Eisner, 2003) outlines a computationally expensive structural manipulation tool which he has used for intra-lingual translation but has yet to apply to interlingual translation.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "C04-1154", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Declan, Groves | Mary, Hearne | Andy, Way", 
    "raw_text": "(Eisner, 2003) presents a tree-mapping method for use on dependency trees which he claims can be adapted for use with PS trees", 
    "clean_text": "(Eisner, 2003) presents a tree-mapping method for use on dependency trees which he claims can be adapted for use with PS trees.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "P13-1080", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Fabienne, Braune | Nina, Seemann | Daniel, Quernheim | Andreas, Maletti", 
    "raw_text": "Those systems use synchronous context-free grammars (Chiang, 2007), synchronous tree substitution grammars (Eisner, 2003) or even more powerful formalisms like synchronous tree-sequence substitution grammars (Sun et al, 2009)", 
    "clean_text": "Those systems use synchronous context-free grammars (Chiang, 2007), synchronous tree substitution grammars (Eisner, 2003) or even more powerful formalisms like synchronous tree-sequence substitution grammars (Sun et al, 2009).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "W06-3601", 
    "citing_paper_authority": 37, 
    "citing_paper_authors": "Liang, Huang | Kevin, Knight | Aravind K., Joshi", 
    "raw_text": "For example, Shieber and Schabes (1990) introduce synchronous tree-adjoining grammar (STAG) and Eisner (2003) uses a synchronous tree-substitution grammar (STSG), which is a restricted version of STAG with no ad junctions", 
    "clean_text": "For example, Shieber and Schabes (1990) introduce synchronous tree-adjoining grammar (STAG) and Eisner (2003) uses a synchronous tree-substitution grammar (STSG), which is a restricted version of STAG with no adjunctions.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "W06-3601", 
    "citing_paper_authority": 37, 
    "citing_paper_authors": "Liang, Huang | Kevin, Knight | Aravind K., Joshi", 
    "raw_text": "In computational linguistics, the bottom-up version of this algorithm resembles the tree parsing algorithm for TSG by Eisner (2003)", 
    "clean_text": "In computational linguistics, the bottom-up version of this algorithm resembles the tree parsing algorithm for TSG by Eisner (2003).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "N12-1027", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Andreas, Maletti", 
    "raw_text": "Several tree transformation devices are used as translation models in statistical machine translation. Chiang (2007) uses synchronous context-free gram mars, which force translations to be very similar as observed by Eisner (2003) and Shieber (2004)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "D09-1039", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Daniel, Galron | Sergio, Penkale | Andy, Way | I. Dan, Melamed", 
    "raw_text": "(Eisner, 2003))", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "P11-2122", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Seth, Kulick | Ann, Bies | Justin, Mott", 
    "raw_text": "5A related approach is taken by Kato and Matsubara (2010), who compare partial parse trees for different instances of the same sequence of words in a corpus, resulting in rules based on a synchronous Tree Substitution Grammar (Eisner, 2003)", 
    "clean_text": "A related approach is taken by Kato and Matsubara (2010), who compare partial parse trees for different instances of the same sequence of words in a corpus, resulting in rules based on a synchronous Tree Substitution Grammar (Eisner, 2003).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "D10-1043", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Eng Siong, Chng", 
    "raw_text": "To capture both side syntax contexts, Eisner (2003) studies the bilingual dependency tree-to-tree map ping in conceptual level", 
    "clean_text": "To capture both side syntax contexts, Eisner (2003) studies the bilingual dependency tree-to-tree mapping in conceptual level.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "P12-3004", 
    "citing_paper_authority": 7, 
    "citing_paper_authors": "Qiang, Li | Tong, Xiao | Jingbo, Zhu | Hao, Zhang", 
    "raw_text": "If the parse tree of source sentence is provided, decoding (for tree-to string and tree-to-tree models) can also be cast as a tree-parsing problem (Eisner, 2003)", 
    "clean_text": "If the parse tree of source sentence is provided, decoding (for tree-to-string and tree-to-tree models) can also be cast as a tree-parsing problem (Eisner, 2003).", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "C08-1018", 
    "citing_paper_authority": 28, 
    "citing_paper_authors": "Trevor, Cohn | Mirella, Lapata", 
    "raw_text": "Our approach is based on synchronous tree substitution grammar (STSG, Eisner (2003)), a formalism that can account for structural mismatches, and is trained discriminatively", 
    "clean_text": "Our approach is based on synchronous tree substitution grammar (STSG, Eisner (2003)), a formalism that can account for structural mismatches, and is trained discriminatively.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "C08-1018", 
    "citing_paper_authority": 28, 
    "citing_paper_authors": "Trevor, Cohn | Mirella, Lapata", 
    "raw_text": "We hope that some of the work described here might be of relevance to other generation tasks such as machine translation (Eisner, 2003), multi-document summarisation (Barzilay, 2003), and text simplification (Carroll et al, 1999)", 
    "clean_text": "We hope that some of the work described here might be of relevance to other generation tasks such as machine translation (Eisner, 2003), multi-document summarisation (Barzilay, 2003), and text simplification (Carroll et al, 1999).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "C08-1018", 
    "citing_paper_authority": 28, 
    "citing_paper_authors": "Trevor, Cohn | Mirella, Lapata", 
    "raw_text": "A synchronous tree substitution grammar (STSG, Eisner (2003)) licenses the space of all possible rewrites", 
    "clean_text": "A synchronous tree substitution grammar (STSG, Eisner (2003)) licenses the space of all possible rewrites.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "P10-1096", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Elif, Yamangil | Stuart M., Shieber", 
    "raw_text": "More expressive formalisms such as synchronous tree-substitution (Eisner, 2003) or tree adjoining grammars may better capture the pairings", 
    "clean_text": "More expressive formalisms such as synchronous tree-substitution (Eisner, 2003) or tree adjoining grammars may better capture the pairings.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "P10-1096", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Elif, Yamangil | Stuart M., Shieber", 
    "raw_text": "Synchronous tree-substitution grammar is a formalism for synchronously generating a pair of non-isomorphic source and target trees (Eisner,2003)", 
    "clean_text": "Synchronous tree-substitution grammar is a formalism for synchronously generating a pair of non-isomorphic source and target trees (Eisner, 2003).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "P10-1096", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Elif, Yamangil | Stuart M., Shieber", 
    "raw_text": "(Eisner, 2003) However, as noted earlier, EM is subject to the narrowness and over fitting problems", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "P10-1096", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Elif, Yamangil | Stuart M., Shieber", 
    "raw_text": "We use dynamic programming for parsing under this finite model (Eisner, 2003) .3 Unfortunately, this approach does not ensure that the test instances are parsable, since ts may include unseen structure or novel words", 
    "clean_text": "We use dynamic programming for parsing under this finite model (Eisner, 2003).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "P08-1064", 
    "citing_paper_authority": 42, 
    "citing_paper_authors": "Min, Zhang | Hongfei, Jiang | Aiti, Aw | Haizhou, Li | Chew Lim, Tan | Sheng, Li", 
    "raw_text": "Eisner (2003) studies how to learn non-isomorphic tree-to-tree/string mappings using a STSG", 
    "clean_text": "Eisner (2003) studies how to learn non-isomorphic tree-to-tree/string mappings using a STSG.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "P09-1063", 
    "citing_paper_authority": 27, 
    "citing_paper_authors": "Yang, Liu | Yajuan, L&uuml; | Qun, Liu", 
    "raw_text": "Eachhy per edge e? E is a triple e=? T (e), h (e), f (e)?, where h (e)? V is its head, T (e)? V? is a vector of tail nodes, and f (e) is a weight function from R|T (e)| to R. Our forest-based tree-to-tree model is based on a probabilistic STSG (Eisner, 2003)", 
    "clean_text": "Our forest-based tree-to-tree model is based on a probabilistic STSG (Eisner, 2003).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "P11-1128", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Yang, Liu | Qun, Liu | Yajuan, L&uuml;", 
    "raw_text": "As tree-to string translation takes a source parse tree as input, the decoding can be cast as a tree parsing problem (Eisner, 2003): reconstructing TAG derivations from a derived tree using tree-to-string rules that allow for both substitution and adjoining", 
    "clean_text": "As tree-to-string translation takes a source parse tree as input, the decoding can be cast as a tree parsing problem (Eisner, 2003): reconstructing TAG derivations from a derived tree using tree-to-string rules that allow for both substitution and adjoining.", 
    "keep_for_gold": 0
  }
]
