<PAPER>
  <S sid="0">The Web As A Baseline: Evaluating The Performance Of Unsupervised Web-Based Models For A Range Of NLP Tasks</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Previous work demonstrated that web counts can be used to approximate bigram frequencies, and thus should be useful for a wide variety of NLP tasks.</S>
    <S sid="2" ssid="2">So far, only two generation tasks (candidate selection for machine translation and confusion-set disambiguation) have been tested using web-scale data sets.</S>
    <S sid="3" ssid="3">The present paper investigates if these results generalize to tasks covering both syntax and semantics, both generation and analysis, and a larger of For the majority of tasks, we find that simple, unsupervised models perform when frequencies are obtained from the web rather than from a large corpus.</S>
    <S sid="4" ssid="4">However, in most cases, web-based models fail to outperform more sophisticated state-of-theart models trained on small corpora.</S>
    <S sid="5" ssid="5">We argue that web-based models should therefore be used as a baseline for, rather than an alternative to, standard models.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">Keller and Lapata (2003) investigated the validity of web counts for a range of predicate-argument bigrams (verbobject, adjective-noun, and noun-noun bigrams).</S>
    <S sid="7" ssid="2">They presented a simple method for retrieving bigram counts from the web by querying a search engine and demonstrated that web counts (a) correlate with frequencies obtained from a carefully edited, balanced corpus such as the 100M words British National Corpus (BNC), (b) correlate with frequencies recreated using smoothing methods in the case of unseen bigrams, (c) reliably predict human plausibility judgments, and (d) yield state-of-the-art performance on pseudo-disambiguation tasks.</S>
    <S sid="8" ssid="3">Keller and Lapata&#8217;s (2003) results suggest that webbased frequencies can be a viable alternative to bigram frequencies obtained from smaller corpora or recreated using smoothing.</S>
    <S sid="9" ssid="4">However, they do not demonstrate that realistic NLP tasks can benefit from web counts.</S>
    <S sid="10" ssid="5">In order to show this, web counts would have to be applied to a diverse range of NLP tasks, both syntactic and semantic, involving analysis (e.g., disambiguation) and generation (e.g., selection among competing outputs).</S>
    <S sid="11" ssid="6">Also, it remains to be shown that the web-based approach scales up to larger n-grams (e.g., trigrams), and to combinations of different parts of speech (Keller and Lapata 2003 only tested bigrams involving nouns, verbs, and adjectives).</S>
    <S sid="12" ssid="7">Another important question is whether web-based methods, which are by definition unsupervised, can be competitive alternatives to supervised approaches used for most tasks in the literature.</S>
    <S sid="13" ssid="8">This paper aims to address these questions.</S>
    <S sid="14" ssid="9">We start by using web counts for two generation tasks for which the use of large data sets has shown promising results: (a) target language candidate selection for machine translation (Grefenstette, 1998) and (b) context sensitive spelling correction (Banko and Brill, 2001a,b).</S>
    <S sid="15" ssid="10">Then we investigate the generality of the web-based approach by applying it to a range of analysis and generations tasks, involving both syntactic and semantic knowledge: (c) ordering of prenominal adjectives, (d) compound noun bracketing, (e) compound noun interpretation, and (f) noun countability detection.</S>
    <S sid="16" ssid="11">Table 1 gives an overview of these tasks and their properties.</S>
    <S sid="17" ssid="12">In all cases, we propose a simple, unsupervised n-gram based model whose parameters are estimated using web counts.</S>
    <S sid="18" ssid="13">We compare this model both against a baseline (same model, but parameters estimated on the BNC) and against state-of-the-art models from the literature, which are either supervised (i.e., use annotated training data) or unsupervised but rely on taxonomies to recreate missing counts.</S>
  </SECTION>
  <SECTION title="2 Method" number="2">
    <S sid="19" ssid="1">Following Keller and Lapata (2003), web counts for ngrams were obtained using a simple heuristic based on queries to the search engine Altavista.1 In this approach, the web count for a given n-gram is simply the number of hits (pages) returned by the search engine for the queries generated for this n-gram.</S>
    <S sid="20" ssid="2">Three different types of queries were used for the NLP tasks in the present paper: Literal queries use the quoted n-gram directly as a search term for Altavista (e.g., the bigram history changes expands to the query &amp;quot;history changes&amp;quot;).</S>
    <S sid="21" ssid="3">Near queries use Altavista&#8217;s NEAR operator to expand the n-gram; a NEAR b means that a has to occur in the same ten word window as b; the window is treated as a bag of words (e.g., history changes expands to &amp;quot;history&amp;quot; NEAR &amp;quot;changes&amp;quot;).</S>
    <S sid="22" ssid="4">Inflected queries are performed by expanding an n-gram into all its morphological forms.</S>
    <S sid="23" ssid="5">These forms are then submitted as literal queries, and the resulting hits are summed up (e.g., history changes expands to &amp;quot;history change&amp;quot;, &amp;quot;histories change&amp;quot;, &amp;quot;history changed&amp;quot;, etc.).</S>
    <S sid="24" ssid="6">John Carroll&#8217;s suite of morphological tools (morpha, morphg, and ana) was used to generate inflected forms of verbs and nouns.2 In certain cases (detailed below), determiners were inserted before nouns in order to make it possible to recognize simple NPs.</S>
    <S sid="25" ssid="7">This insertion was limited to a/an, the, and the empty determiner (for bare plurals).</S>
    <S sid="26" ssid="8">All queries (other than the ones using the NEAR operator) were performed as exact matches (using quotation marks in Altavista).</S>
    <S sid="27" ssid="9">All search terms were submitted to the search engine in lower case.</S>
    <S sid="28" ssid="10">If a query consists of a single, highly frequent word (such as the), Altavista will return an error message.</S>
    <S sid="29" ssid="11">In these cases, we set the web count to a large constant (108).</S>
    <S sid="30" ssid="12">This problem is limited to unigrams, which were used in some of the models detailed below.</S>
    <S sid="31" ssid="13">Sometimes the search engine fails to return a hit for a given n-gram (for any of its morphological variants).</S>
    <S sid="32" ssid="14">We smooth zero counts by setting them to .5.</S>
    <S sid="33" ssid="15">For all tasks, the web-based models are compared against identical models whose parameters were estimated from the BNC (Burnard, 1995).</S>
    <S sid="34" ssid="16">The BNC is a static 100M word corpus of British English, which is about 1000 times smaller than the web (Keller and Lapata, 2003).</S>
    <S sid="35" ssid="17">Comparing the performance of the same model on the web and on the BNC allows us to assess how much improvement can be expected simply by using a larger data set.</S>
    <S sid="36" ssid="18">The BNC counts were retrieved using the Gsearch corpus query tool (Corley et al., 2001); the morphological query expansion was the same as for web queries; the NEAR operator was simulated by assuming a window of five words to the left and five to the right.</S>
    <S sid="37" ssid="19">Gsearch was used to search solely for adjacent words; no POS information was incorporated in the queries, and no parsing was performed.</S>
    <S sid="38" ssid="20">For all of our tasks, we have to select either the best of several possible models or the best parameter setting for a single model.</S>
    <S sid="39" ssid="21">We therefore require a separate development set.</S>
    <S sid="40" ssid="22">This was achieved by using the gold standard data set from the literature for a given task and randomly dividing it into a development set and a test set (of equal size).</S>
    <S sid="41" ssid="23">We report the test set performance for all models for a given task, and indicate which model shows optimal performance on the development set (marked by a &#8216;#&#8217; in all subsequent tables).</S>
    <S sid="42" ssid="24">We then compare the test set performance of this optimal model to the performance of the models reported in the literature.</S>
    <S sid="43" ssid="25">It is important to note that the figures taken from the literature were typically obtained on the whole gold standard data set, and hence may differ from the performance on our test set.</S>
    <S sid="44" ssid="26">We work on the assumption that such differences are negligible.</S>
    <S sid="45" ssid="27">We use &#967;2 tests to determine whether the performance of the best web model on the test set is significantly different from that of the best BNC model.</S>
    <S sid="46" ssid="28">We also determine whether both models differ significantly from the baseline and from the best model in the literature.</S>
    <S sid="47" ssid="29">A set of diacritics is used to indicate significance throughout this paper, see Table 2.</S>
  </SECTION>
  <SECTION title="3 Candidate Selection for Machine Translation" number="3">
    <S sid="48" ssid="1">Target word selection is a generation task that occurs in machine translation (MT).</S>
    <S sid="49" ssid="2">A word in a source language can often be translated into different words in the target language and the choice of the appropriate translation depends on a variety of semantic and pragmatic factors.</S>
    <S sid="50" ssid="3">The task is illustrated in (1) where there are five translation alternatives for the German noun Geschichte listed in curly brackets, the first being the correct one.</S>
    <S sid="51" ssid="4">Statistical approaches to target word selection rely on bilingual lexica to provide all possible translations of words in the source language.</S>
    <S sid="52" ssid="5">Once the set of translation candidates is generated, statistical information gathered from target language corpora is used to select the most appropriate alternative (Dagan and Itai, 1994).</S>
    <S sid="53" ssid="6">The task is somewhat simplified by Grefenstette (1998) and Prescher et al. (2000) who do not produce a translation of the entire sentence.</S>
    <S sid="54" ssid="7">Instead, they focus on specific syntactic relations.</S>
    <S sid="55" ssid="8">Grefenstette translates compounds from German and Spanish into English, and uses BNC frequencies as a filter for candidate translations.</S>
    <S sid="56" ssid="9">He observes that this approach suffers from an acute data sparseness problem and goes on to obtain counts for candidate compounds through web searches, thus achieving a translation accuracy of 86&#8211;87%.</S>
    <S sid="57" ssid="10">Prescher et al. (2000) concentrate on verbs and their objects.</S>
    <S sid="58" ssid="11">Assuming that the target language translation of the verb is known, they select from the candidate translations the noun that is semantically most compatible with the verb.</S>
    <S sid="59" ssid="12">The semantic fit between a verb and its argument is modeled using a class-based lexicon that is derived from unlabeled data using the expectation maximization algorithm (verb-argument model).</S>
    <S sid="60" ssid="13">Prescher et al. also propose a refined version of this approach that only models the fit between a verb and its object (verb-object model), disregarding other arguments of the verb.</S>
    <S sid="61" ssid="14">The two models are trained on the BNC and evaluated against two corpora of 1,340 and 814 bilingual sentence pairs, with an average of 8.63 and 2.83 translations for the object noun, respectively.</S>
    <S sid="62" ssid="15">Table 4 lists Prescher et al.&#8217;s results for the two corpora and for both models together with a random baseline (select a target noun at random) and a frequency baseline (select the most frequent target noun).</S>
    <S sid="63" ssid="16">Grefenstette&#8217;s (1998) evaluation was restricted to compounds that are listed in a dictionary.</S>
    <S sid="64" ssid="17">These compounds are presumably well-established and fairly frequent, which makes it easy to obtain reliable web frequencies.</S>
    <S sid="65" ssid="18">We wanted to test if the web-based approach extends from lexicalized compounds to productive syntactic units for which dictionary entries do not exist.</S>
    <S sid="66" ssid="19">We therefore performed our evaluation using Prescher et al.&#8217;s (2000) test set of verb-object pairs.</S>
    <S sid="67" ssid="20">Web counts were retrieved for all possible verb-object translations; the most likely one was selected using either co-occurrence frequency (f(v,n)) or conditional probability (f (v,n)/f (n)).</S>
    <S sid="68" ssid="21">The web counts were gathered using inflected queries involving the verb, a determiner, and the object (see Section 2).</S>
    <S sid="69" ssid="22">Table 3 compares the web-based models against the BNC models.</S>
    <S sid="70" ssid="23">For both the high ambiguity and the low ambiguity data set, we find that the performance of the best Altavista model is not significantly different from that of the best BNC model.</S>
    <S sid="71" ssid="24">Table 4 compares our simple, unsupervised methods with the two sophisticated class-based models discussed above.</S>
    <S sid="72" ssid="25">The results show that there is no significant difference in performance between the best model reported in the literature and the best Altavista or the best BNC model.</S>
    <S sid="73" ssid="26">However, both models significantly outperform the baseline.</S>
    <S sid="74" ssid="27">This holds for both the high and low ambiguity data sets.</S>
  </SECTION>
  <SECTION title="4 Context-sensitive Spelling Correction" number="4">
    <S sid="75" ssid="1">Context-sensitive spelling correction is the task of correcting spelling errors that result in valid words.</S>
    <S sid="76" ssid="2">Such a spelling error is illustrated in (4) where principal was typed when principle was intended.</S>
    <S sid="77" ssid="3">(2) Introduction of the dialogue principal proved strikingly effective.</S>
    <S sid="78" ssid="4">The task can be viewed as generation task, as it consists of choosing between alternative surface realizations of a word.</S>
    <S sid="79" ssid="5">This choice is typically modeled by confusion sets such as {principal, principle} or {then, than} under the assumption that each word in the set could be mistakenly typed when another word in the set was intended.</S>
    <S sid="80" ssid="6">The task is to infer which word in a confusion set is the correct one in a given context.</S>
    <S sid="81" ssid="7">This choice can be either syntactic (as for {then, than}) or semantic (as for {principal, principle}).</S>
    <S sid="82" ssid="8">A number of machine learning methods have been proposed for context-sensitive spelling correction.</S>
    <S sid="83" ssid="9">These include a variety of Bayesian classifiers (Golding, 1995; Golding and Schabes, 1996), decision lists (Golding, 1995) transformation-based learning (Mangu and Brill, 1997), Latent Semantic Analysis (LSA) (Jones and Martin, 1997), multiplicative weight update algorithms (Golding and Roth, 1999), and augmented mixture models (Cucerzan and Yarowsky, 2002).</S>
    <S sid="84" ssid="10">Despite their differences, most approaches use two types of features: context words and collocations.</S>
    <S sid="85" ssid="11">Context word features record the presence of a word within a fixed window around the target word (bag of words); collocational features capture the syntactic environment of the target word and are usually represented by a small number of words and/or partof-speech tags to the left or right of the target word.</S>
    <S sid="86" ssid="12">The results obtained by a variety of classification methods are given in Table 6.</S>
    <S sid="87" ssid="13">All methods use either the full set or a subset of 18 confusion sets originally gathered by Golding (1995).</S>
    <S sid="88" ssid="14">Most methods are trained and tested on the Brown corpus, using 80% for training and 20% for testing.3 We devised a simple, unsupervised method for performing spelling correction using web counts.</S>
    <S sid="89" ssid="15">The method takes into account collocational features, i.e., words that are adjacent to the target word.</S>
    <S sid="90" ssid="16">For each word in the confusion set, we used the web to estimate how frequently it co-occurs with a word or a pair of words immediately to its left or right.</S>
    <S sid="91" ssid="17">Disambiguation is then performed by selecting the word in the confusion set with the highest co-occurrence frequency or probability.</S>
    <S sid="92" ssid="18">The web counts were retrieved using literal queries (see Section 2).</S>
    <S sid="93" ssid="19">Ties are resolved by comparing the unigram frequencies of the words in the confusion set and defaulting to the word with the highest one.</S>
    <S sid="94" ssid="20">Table 5 shows the types of collocations we considered and their corresponding accuracy.</S>
    <S sid="95" ssid="21">The baseline (f(t)) in Table 5 was obtained by always choosing the most frequent unigram in the confusion set.</S>
    <S sid="96" ssid="22">We used the same test set (2056 tokens from the Brown corpus) and confusion sets as Golding and Schabes (1996), Mangu and Brill (1997), and Cucerzan and Yarowsky (2002).</S>
    <S sid="97" ssid="23">Table 5 shows that the best result (89.24%) for the webbased approach is obtained with a context of one word to the left and one word to the right of the target word (f (w1,t,w2)).</S>
    <S sid="98" ssid="24">The BNC-based models perform consistently worse than the web-based models with the exception of f(t,w1)/t; the best Altavista model performs significantly better than the best BNC model.</S>
    <S sid="99" ssid="25">Table 6 shows that both the best Altavista model and the best BNC model outperform their respective baselines.</S>
    <S sid="100" ssid="26">A comparison with the literature shows that the best Altavista model outperforms Golding (1995), Jones and Martin (1997) and performs similar to Golding and Schabes (1996).</S>
    <S sid="101" ssid="27">The highest accuracy on the task is achieved by the class of multiplicative weight-update algorithms such as Winnow (Golding and Roth, 1999).</S>
    <S sid="102" ssid="28">Both the best BNC model and the best Altavista model perform significantly worse than this model.</S>
    <S sid="103" ssid="29">Note that Golding and Roth (1999) use algorithms that can handle large numbers of features and are robust to noise.</S>
    <S sid="104" ssid="30">Our method uses a very small feature set, it relies only on co-occurrence frequencies and does not have access to POS information (the latter has been shown to have an improvement on confusion sets whose words belong to different parts of speech).</S>
    <S sid="105" ssid="31">An advantage of our method is that it can be used for a large number of confusion sets without relying on the availability of training data.</S>
  </SECTION>
  <SECTION title="5 Ordering of Prenominal Adjectives" number="5">
    <S sid="106" ssid="1">The ordering of prenominal modifiers is important for natural language generation systems where the text must be both fluent and grammatical.</S>
    <S sid="107" ssid="2">For example, the sequence big fat Greek wedding is perfectly acceptable, whereas fat Greek big wedding sounds odd.</S>
    <S sid="108" ssid="3">The ordering of prenominal adjectives has sparked a great deal of theoretical debate (see Shaw and Hatzivassiloglou 1999 for an overview) and efforts have concentrated on defining rules based on semantic criteria that account for different orders (e.g., age &#65533; color, value &#65533; dimension).</S>
    <S sid="109" ssid="4">Data intensive approaches to the ordering problem rely on corpora for gathering evidence for the likelihood of different orders.</S>
    <S sid="110" ssid="5">They rest on the hypothesis that the relative order of premodifiers is fixed, and independent of context and the noun being modified.</S>
    <S sid="111" ssid="6">The simplest strategy is what Shaw and Hatzivassiloglou (1999) call direct evidence.</S>
    <S sid="112" ssid="7">Given an adjective pair {a,b}, they count how many times (a,b) and (b,a) appear in the corpus and choose the pair with the highest frequency.</S>
    <S sid="113" ssid="8">Unfortunately the direct evidence method performs poorly when a given order is unseen in the training data.</S>
    <S sid="114" ssid="9">To compensate for this, Shaw and Hatzivassiloglou (1999) propose to compute the transitive closure of the ordering relation: if a &#65533; c and c &#65533; b, then a &#65533; b. Malouf (2000) further proposes a back-off bigram model of adjective pairs for choosing among alternative orders (P((a,b) {a,b}) vs. P((b,a) {a,b})).</S>
    <S sid="115" ssid="10">He also proposes positional probabilities as a means of estimating how likely it is for a given adjective a to appear first in a sequence by looking at each pair in the training data that contains the adjective a and recording its position.</S>
    <S sid="116" ssid="11">Finally, he uses memory-based learning as a means to encode morphological and semantic similarities among different adjective orders.</S>
    <S sid="117" ssid="12">Each adjective pair ab is encoded as a vector of 16 features (the last eight characters of a and the last eight characters of b) and a class ((a,b) or Table 7: Performance of Altavista counts and BNC counts for adjective ordering (data from Malouf 2000) (b,a)).</S>
    <S sid="118" ssid="13">Malouf (2000) extracted 263,838 individual pairs of adjectives from the BNC which he randomly partitioned into test (10%) and training data (90%) and evaluated all the above methods for ordering prenominal adjectives.</S>
    <S sid="119" ssid="14">His results showed that a memory-based classifier that uses morphological information as well as positional probabilities as features outperforms all other methods (see Table 7).</S>
    <S sid="120" ssid="15">For the ordering task we restricted ourselves to the direct evidence strategy which simply chooses the adjective order with the highest frequency or probability (see Table 7).</S>
    <S sid="121" ssid="16">Web counts were obtained by submitting literal queries to Altavista (see Section 2).</S>
    <S sid="122" ssid="17">We used the same 263,838 adjective pairs that Malouf extracted from the BNC.</S>
    <S sid="123" ssid="18">These were randomly partitioned into a training (90%) and test corpus (10%).</S>
    <S sid="124" ssid="19">The test corpus contained 26,271 adjective pairs.</S>
    <S sid="125" ssid="20">Given that submitting 26,271 queries to Altavista would be fairly timeconsuming, a random sample of 1000 sequences was obtained from the test corpus and the web frequencies of these pairs were retrieved.</S>
    <S sid="126" ssid="21">The best Altavista model significantly outperformed the best BNC model, as indicated in Table 7.</S>
    <S sid="127" ssid="22">We also found that there was no significant difference between the best Altavista model and the best model reported by Malouf, a supervised method using positional probability estimates from the BNC and morphological variants.</S>
  </SECTION>
  <SECTION title="6 Bracketing of Compound Nouns" number="6">
    <S sid="128" ssid="1">The first analysis task we consider is the syntactic disambiguation of compound nouns, which has received a fair amount of attention in the NLP literature (Pustejovsky et al., 1993; Resnik, 1993; Lauer, 1995).</S>
    <S sid="129" ssid="2">The task can be summarized as follows: given a three word compound n1 n3 n3, determine the correct binary bracketing of the word sequence (see (3) for an example).</S>
    <S sid="130" ssid="3">Previous approaches typically compare different bracketings and choose the most likely one.</S>
    <S sid="131" ssid="4">The adjacency model compares [n1 n2] against [n2 n3] and adopts a right branching analysis if [n2 n3] is more likely than [n1 n2].</S>
    <S sid="132" ssid="5">The dependency model compares [n1 n2] against [n1 n3] and adopts a right branching analysis if [n1 n3] is more likely than [n1 n2].</S>
    <S sid="133" ssid="6">The simplest model of compound noun disambiguation compares the frequencies of the two competing analyses and opts for the most frequent one (Pustejovsky et al., 1993).</S>
    <S sid="134" ssid="7">Lauer (1995) proposes an unsupervised method for estimating the frequencies of the competing bracketings based on a taxonomy or a thesaurus.</S>
    <S sid="135" ssid="8">He uses a probability ratio to compare the probability of the leftbranching analysis to that of the right-branching (see (4) for the dependency model and (5) for the adjacency model).</S>
    <S sid="136" ssid="9">Here t1, t2 and t3 are conceptual categories in the taxonomy or thesaurus, and the nouns w1...wi are members of these categories.</S>
    <S sid="137" ssid="10">The estimation ofprobabilities over concepts (rather than words) reduces the number of model parameters and effectively decreases the amount of training data required.</S>
    <S sid="138" ssid="11">The probability P(t1 -&gt; t2) denotes the modification of a category t2 by a category t1.</S>
    <S sid="139" ssid="12">Lauer (1995) tested both the adjacency and dependency models on 244 compounds extracted from Grolier&#8217;s encyclopedia, a corpus of 8 million words.</S>
    <S sid="140" ssid="13">Frequencies for the two models were obtained from the same corpus and from Roget&#8217;s thesaurus (version 1911) by counting pairs of nouns that are either strictly adjacent or co-occur within a window of a fixed size (e.g., two, three, fifty, or hundred words).</S>
    <S sid="141" ssid="14">The majority of the bracketings in our test set were left-branching, yielding a baseline of 63.93% (see Table 9).</S>
    <S sid="142" ssid="15">Lauer&#8217;s best results (77.50%) were obtained with the dependency model and a training scheme which takes strictly adjacent nouns into account.</S>
    <S sid="143" ssid="16">Performance increased further by 3.2% when POS tags were taken into account.</S>
    <S sid="144" ssid="17">The results for this tuned model are also given in Table 9.</S>
    <S sid="145" ssid="18">Finally, Lauer conducted an experiment with human judges to assess the upper bound for the bracketing task.</S>
    <S sid="146" ssid="19">An average accuracy of 81.50% was obtained.</S>
    <S sid="147" ssid="20">We replicated Lauer&#8217;s (1995) results for compound noun bracketing using the same test set.</S>
    <S sid="148" ssid="21">We compared the performance of the adjacency and dependency models (see (4) and (5)), but instead of relying on a corpus and a thesaurus, we estimated the relevant probabilities using web counts.</S>
    <S sid="149" ssid="22">The latter were obtained using inflected queries (see Section 2) and Altavista&#8217;s NEAR operator.</S>
    <S sid="150" ssid="23">Ties were resolved by defaulting to the most frequent analysis (i.e., left-branching).</S>
    <S sid="151" ssid="24">To gauge the performance of the web-based models we compared them against their BNC-based alternatives; the performance of the best Altavista model was significantly higher than that of the best BNC model (see Table 8).</S>
    <S sid="152" ssid="25">A comparison with the literature (see Table 9) shows that the best BNC model fails to significantly outperform the baseline, and it performs significantly worse than the best model in the literature (Lauer&#8217;s tuned model).</S>
    <S sid="153" ssid="26">The best Altavista model, on the other hand, is not significantly different from Lauer&#8217;s tuned model and significantly outperforms the baseline.</S>
    <S sid="154" ssid="27">Hence we achieve the same performance as Lauer without recourse to a predefined taxonomy or a thesaurus.</S>
  </SECTION>
  <SECTION title="7 Interpretation of Compound Nouns" number="7">
    <S sid="155" ssid="1">The second analysis task we consider is the semantic interpretation of compound nouns.</S>
    <S sid="156" ssid="2">Most previous approaches to this problem have focused on the interpretation of two word compounds whose nouns are related via a basic set of semantic relations (e.g., CAUSE relates onion tears, FOR relates pet spray).</S>
    <S sid="157" ssid="3">The majority of proposals are symbolic and therefore limited to a specific domain due to the large effort involved in hand-coding semantic information (see Lauer 1995 for an extensive overview).</S>
    <S sid="158" ssid="4">Lauer (1995) is the first to propose and evaluate an unsupervised probabilistic model of compound noun interpretation for domain independent text.</S>
    <S sid="159" ssid="5">By recasting the interpretation problem in terms of paraphrasing, Lauer assumes that the semantic relations of compound heads and modifiers can be expressed via prepositions that (in contrast to abstract semantic relations) can be found in a corpus.</S>
    <S sid="160" ssid="6">For example, in order to interpret war story, one needs to find in a corpus related paraphrases: story about the war, story of the war, story in the war, etc.</S>
    <S sid="161" ssid="7">Lauer uses eight prepositions for the paraphrasing task (of, for, in, at, on, from, with, about).</S>
    <S sid="162" ssid="8">A simple model of compound noun paraphrasing is shown in (6): Lauer (1995) points out that the above model contains one parameter for every triple (p,n1,n2), and as a result hundreds of millions of training instances would be necessary.</S>
    <S sid="163" ssid="9">As an alternative to (6), he proposes the model in (7) which combines the probability of the modifier given a certain preposition with the probability of the head given the same preposition, and assumes that these two probabilities are independent.</S>
    <S sid="164" ssid="10">Here, t1 and t2 represent concepts in Roget&#8217;s thesaurus.</S>
    <S sid="165" ssid="11">Lauer (1995) also experimented with a lexicalized version of (7) where probabilities are calculated on the basis of word (rather than concept) frequencies which Lauer obtained from Grolier&#8217;s encyclopedia heuristically via pattern matching.</S>
    <S sid="166" ssid="12">Lauer (1995) tested the model in (7) on 282 compounds that he selected randomly from Grolier&#8217;s encyclopedia and annotated with their paraphrasing prepositions.</S>
    <S sid="167" ssid="13">The preposition of accounted for 33% of the paraphrases in this data set (see Baseline in Table 11).</S>
    <S sid="168" ssid="14">The conceptbased model (see (7)) achieved an accuracy of 28% on this test set, whereas its lexicalized version reached an accuracy of 40% (see Table 11).</S>
    <S sid="169" ssid="15">We attempted the interpretation task with the lexicalized version of the bigram model (see (7)), but also tried the more data intensive trigram model (see (6)), again in its lexicalized form.</S>
    <S sid="170" ssid="16">Furthermore, we experimented with several conditional and unconditional variants of (7) and (6).</S>
    <S sid="171" ssid="17">Co-occurrence frequencies were estimated from the web using inflected queries (see Section 2).</S>
    <S sid="172" ssid="18">Determiners were inserted before nouns resulting in queries of the type story/stories about and about the/a/0 war/wars for the compound war story.</S>
    <S sid="173" ssid="19">As shown in Table 10, the best performance was obtained using the web-based trigram model (f(n1, p,n2)); it significantly outperformed the best BNC model.</S>
    <S sid="174" ssid="20">The comparison with the literature in Table 11 showed that the best Altavista model significantly outperformed both the baseline and the best model in the literature (Lauer&#8217;s word-based model).</S>
    <S sid="175" ssid="21">The BNC model, on the other hand, achieved a performance that is not significantly different from the baseline, and significantly worse than Lauer&#8217;s best model.</S>
  </SECTION>
  <SECTION title="8 Noun Countability Detection" number="8">
    <S sid="176" ssid="1">The next analysis task that we consider is the problem of determining the countability of nouns.</S>
    <S sid="177" ssid="2">Countability is the semantic property that determines whether a noun can occur in singular and plural forms, and affects the range of permissible modifiers.</S>
    <S sid="178" ssid="3">In English, nouns are typically either countable (e.g., one dog, two dogs) or uncountable (e.g., some peace, *one peace, *two peaces).</S>
    <S sid="179" ssid="4">Baldwin and Bond (2003) propose a method for automatically learning the countability of English nouns from the BNC.</S>
    <S sid="180" ssid="5">They obtain information about noun countability by merging lexical entries from COMLEX (Grishman et al., 1994) and the ALTJ/E Japanese-to-English semantic transfer dictionary (Ikehara et al., 1991).</S>
    <S sid="181" ssid="6">Words are classified into four classes: countable, uncountable, bipartite (e.g., trousers), and plural only (e.g., goods).</S>
    <S sid="182" ssid="7">A memory-based classifier is used to learn the four-way distinction on the basis of several linguistically motivated features such as: number of the head noun, number of the modifier, subject-verb agreement, plural determiners.</S>
    <S sid="183" ssid="8">We devised unsupervised models for the countability learning task and evaluated their performance on Baldwin and Bond&#8217;s (2003) test data.</S>
    <S sid="184" ssid="9">We concentrated solely on countable and uncountable nouns, as they account for the vast majority of the data.</S>
    <S sid="185" ssid="10">Four models were tested: (a) compare the frequency of the singular and plural forms of the noun; (b) compare the frequency of determiner-noun pairs that are characteristic of countable or uncountable nouns; the determiners used were many for countable and much for uncountable ones; (c) same as model (b), but the det-noun frequencies are normalized by the frequency of the noun; (d) backoff: try to make a decision using det-noun frequencies; if these are too sparse, back off to singular/plural frequencies.</S>
    <S sid="186" ssid="11">Unigram and bigram frequencies were estimated from the web using literal queries; for models (a)&#8211;(c) a threshold parameter was optimized on the development set (this parameter determines the ratio of singular/plural frequencies or det-noun frequencies above which a noun was considered as countable).</S>
    <S sid="187" ssid="12">For model (b), an additional backoffparameter was used, specifying the minimum frequency that triggers backoff.</S>
    <S sid="188" ssid="13">The models and their performance on the test set are listed in Table 12.</S>
    <S sid="189" ssid="14">The best Altavista model is the conditional det-noun model (f (det,n)/f (n)), which achieves 88.38% on countable and 91.22% on uncountable nouns.</S>
    <S sid="190" ssid="15">On the BNC, the simple unigram model performs best.</S>
    <S sid="191" ssid="16">Its performance is not statistically different from that of the best Altavista model.</S>
    <S sid="192" ssid="17">Note that for the BNC models, data sparseness means the det-noun models perform poorly, which is why the backoff model was not attempted here.</S>
    <S sid="193" ssid="18">Table 13 shows that both the Altavista model and BNC model significantly outperform the baseline (relative frequency of the majority class on the gold-standard data).</S>
    <S sid="194" ssid="19">The comparison with the literature shows that both the Altavista and the BNC model perform significantly worse than the best model proposed by Baldwin and Bond (2003); this is a supervised model that uses many more features than just singular/plural frequency and det-noun frequency.</S>
  </SECTION>
  <SECTION title="9 Conclusions" number="9">
    <S sid="195" ssid="1">We showed that simple, unsupervised models using web counts can be devised for a variety of NLP tasks.</S>
    <S sid="196" ssid="2">The tasks were selected so that they cover both syntax and semantics, both generation and analysis, and a wider range of n-grams than have been previously used.</S>
    <S sid="197" ssid="3">For all but two tasks (candidate selection for MT and noun countability detection) we found that simple, unsupervised models perform significantly better when ngram frequencies are obtained from the web rather than from a standard large corpus.</S>
    <S sid="198" ssid="4">This result is consistent with Keller and Lapata&#8217;s (2003) findings that the web yields better counts than the BNC.</S>
    <S sid="199" ssid="5">The reason for this seems to be that the web is much larger than the BNC (about 1000 times); the size seems to compensate for the fact that simple heuristics were used to obtain web counts, and for the noise inherent in web data.</S>
    <S sid="200" ssid="6">Our results were less encouraging when it comes to comparisons with state-of-the-art models.</S>
    <S sid="201" ssid="7">We found that in all but one case, web-based models fail to significantly outperform the state of the art.</S>
    <S sid="202" ssid="8">The exception was compound noun interpretation, for which the Altavista model was significantly better than the Lauer&#8217;s (1995) model.</S>
    <S sid="203" ssid="9">For three tasks (candidate selection for MT, adjective ordering, and compound noun bracketing), we found that the performance of the web-based models was not significantly different from the performance of the best models reported in the literature.</S>
    <S sid="204" ssid="10">Note that for all the tasks we investigated, the best performance in the literature was obtained by supervised models that have access not only to simple bigram or trigram frequencies, but also to linguistic information such as part-of-speech tags, semantic restrictions, or context (or a thesaurus, in the case of Lauer&#8217;s models).</S>
    <S sid="205" ssid="11">When unsupervised web-based models are compared against supervised methods that employ a wide variety of features, we observe that having access to linguistic information makes up for the lack of vast amounts of data.</S>
    <S sid="206" ssid="12">Our results therefore indicate that large data sets such as those obtained from the web are not the panacea that they are claimed to be (at least implicitly) by authors such as Grefenstette (1998) and Keller and Lapata (2003).</S>
    <S sid="207" ssid="13">Rather, in our opinion, web-based models should be used as a new baseline for NLP tasks.</S>
    <S sid="208" ssid="14">The web baseline indicates how much can be achieved with a simple, unsupervised model based on n-grams with access to a huge data set.</S>
    <S sid="209" ssid="15">This baseline is more realistic than baselines obtained from standard corpora; it is generally harder to beat, as our comparisons with the BNC baseline throughout this paper have shown.</S>
    <S sid="210" ssid="16">Note that for certain tasks, the performance of a web baseline model might actually be sufficient, so that the effort of constructing a sophisticated supervised model and annotating the necessary training data can be avoided.</S>
    <S sid="211" ssid="17">Another possibility that needs further investigation is the combination of web-based models with supervised methods.</S>
    <S sid="212" ssid="18">This can be done with ensemble learning methods or simply by using web-based frequencies (or probabilities) as features (in addition to linguistically motivated features) to train supervised classifiers.</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="10">
    <S sid="213" ssid="1">We are grateful to Tim Baldwin, Silviu Cucerzan, Mark Lauer, Rob Malouf, Detelef Prescher, and Adwait Ratnaparkhi for making their data sets available.</S>
  </SECTION>
</PAPER>
