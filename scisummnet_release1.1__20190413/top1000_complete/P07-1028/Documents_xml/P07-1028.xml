<PAPER>
  <S sid="0">A Simple Similarity-based Model for Selectional Preferences</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We propose a new, simple model for the automatic induction of selectional preferences, using corpus-based semantic similarity metrics.</S>
    <S sid="2" ssid="2">Focusing on the task of semantic role labeling, we compute selectional preferences for semantic roles.</S>
    <S sid="3" ssid="3">In evaluations the similarity-based model shows lower error rates than both Resnik's WordNet-based model and the EM-based clustering model, but has coverage problems.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="4" ssid="1">Selectional preferences, which characterize typical arguments of predicates, are a very useful and versatile knowledge source.</S>
    <S sid="5" ssid="2">They have been used for example for syntactic disambiguation (Hindle and Rooth, 1993), word sense disambiguation (WSD) (McCarthy and Carroll, 2003) and semantic role labeling (SRL) (Gildea and Jurafsky, 2002).</S>
    <S sid="6" ssid="3">The corpus-based induction of selectional preferences was first proposed by Resnik (1996).</S>
    <S sid="7" ssid="4">All later approaches have followed the same twostep procedure, first collecting argument headwords from a corpus, then generalizing to other, similar words.</S>
    <S sid="8" ssid="5">Some approaches have used WordNet for the generalization step (Resnik, 1996; Clark and Weir, 2001; Abe and Li, 1993), others EM-based clustering (Rooth et al., 1999).</S>
    <S sid="9" ssid="6">In this paper we propose a new, simple model for selectional preference induction that uses corpus-based semantic similarity metrics, such as Cosine or Lin's (1998) mutual informationbased metric, for the generalization step.</S>
    <S sid="10" ssid="7">This model does not require any manually created lexical resources.</S>
    <S sid="11" ssid="8">In addition, the corpus for computing the similarity metrics can be freely chosen, allowing greater variation in the domain of generalization than a fixed lexical resource.</S>
    <S sid="12" ssid="9">We focus on one application of selectional preferences: semantic role labeling.</S>
    <S sid="13" ssid="10">The argument positions for which we compute selectional preferences will be semantic roles in the FrameNet (Baker et al., 1998) paradigm, and the predicates we consider will be semantic classes of words rather than individual words (which means that different preferences will be learned for different senses of a predicate word).</S>
    <S sid="14" ssid="11">In SRL, the two most pressing issues today are (1) the development of strong semantic features to complement the current mostly syntacticallybased systems, and (2) the problem of the domain dependence (Carreras and Marquez, 2005).</S>
    <S sid="15" ssid="12">In the CoNLL-05 shared task, participating systems showed about 10 points F-score difference between in-domain and out-of-domain test data.</S>
    <S sid="16" ssid="13">Concerning (1), we focus on selectional preferences as the strongest candidate for informative semantic features.</S>
    <S sid="17" ssid="14">Concerning (2), the corpusbased similarity metrics that we use for selectional preference induction open up interesting possibilities of mixing domains.</S>
    <S sid="18" ssid="15">We evaluate the similarity-based model against Resnik's WordNet-based model as well as the EM-based clustering approach.</S>
    <S sid="19" ssid="16">In the evaluation, the similarity-model shows lower error rates than both Resnik's WordNet-based model and the EM-based clustering model.</S>
    <S sid="20" ssid="17">However, the EM-based clustering model has higher coverage than both other paradigms.</S>
    <S sid="21" ssid="18">Plan of the paper.</S>
    <S sid="22" ssid="19">After discussing previous approaches to selectional preference induction in Section 2, we introduce the similaritybased model in Section 3.</S>
    <S sid="23" ssid="20">Section 4 describes the data used for the experiments reported in Section 5, and Section 6 concludes.</S>
  </SECTION>
  <SECTION title="2 Related Work" number="2">
    <S sid="24" ssid="1">Selectional restrictions and selectional preferences that predicates impose on their arguments have long been used in semantic theories, (see e.g.</S>
    <S sid="25" ssid="2">(Katz and Fodor, 1963; Wilks, 1975)).</S>
    <S sid="26" ssid="3">The induction of selectional preferences from corpus data was pioneered by Resnik (1996).</S>
    <S sid="27" ssid="4">All subsequent approaches have followed the same twostep procedure, first collecting argument headwords from a corpus, then generalizing over the seen headwords to similar words.</S>
    <S sid="28" ssid="5">Resnik uses the WordNet noun hierarchy for generalization.</S>
    <S sid="29" ssid="6">His information-theoretic approach models the selectional preference strength of an argument positions rp of a predicate p as where the c are WordNet synsets.</S>
    <S sid="30" ssid="7">The preference that rp has for a given synset c0, the selectional association between the two, is then defined as the contribution of c0 to rp's selectional preference strength: Further WordNet-based approaches to selectional preference induction include Clark and Weir (2001), and Abe and Li (1993).</S>
    <S sid="31" ssid="8">Brockmann and Lapata (2003) perform a comparison of WordNet-based models.</S>
    <S sid="32" ssid="9">Rooth et al. (1999) generalize over seen headwords using EM-based clustering rather than WordNet.</S>
    <S sid="33" ssid="10">They model the probability of a word w occurring as the argument rp of a predicate p as being independently conditioned on a set of classes C: 'We write rp to indicate predicate-specific roles, like &#8220;the direct object of catch&#8221;, rather than just &#8220;obj&amp;quot;.</S>
    <S sid="34" ssid="11">The parameters P(c), P(rp|c) and P(w|c) are estimated using the EM algorithm.</S>
    <S sid="35" ssid="12">While there have been no isolated comparisons of the two generalization paradigms that we are aware of, Gildea and Jurafsky's (2002) task-based evaluation has found clusteringbased approaches to have better coverage than WordNet generalization, that is, for a given role there are more words for which they can state a preference.</S>
  </SECTION>
  <SECTION title="3 Model" number="3">
    <S sid="36" ssid="1">The approach we are proposing makes use of two corpora, a primary corpus and a generalization corpus (which may, but need not, be identical).</S>
    <S sid="37" ssid="2">The primary corpus is used to extract tuples (p, rp, w) of a predicate, an argument position and a seen headword.</S>
    <S sid="38" ssid="3">The generalization corpus is used to compute a corpus-based semantic similarity metric.</S>
    <S sid="39" ssid="4">Let Seen(rp) be the set of seen headwords for an argument rp of a predicate p. Then we model the selectional preference S of rp for a possible headword w0 as a weighted sum of the similarities between w0 and the seen headwords: sim(w0, w) is the similarity between the seen and the potential headword, and wtrp(w) is the weight of seen headword w. Similarity sim(w0, w) will be computed on the generalization corpus, again on the basis of extracted tuples (p, rp, w).</S>
    <S sid="40" ssid="5">We will be using the similarity metrics shown in Table 1: Cosine, the Dice and Jaccard coefficients, and Hindle's (1990) and Lin's (1998) mutual information-based metrics.</S>
    <S sid="41" ssid="6">We write f for frequency, I for mutual information, and R(w) for the set of arguments rp for which w occurs as a headword.</S>
    <S sid="42" ssid="7">In this paper we only study corpus-based metrics.</S>
    <S sid="43" ssid="8">The sim function can equally well be in)stantiated with a WordNet-based metric (for an overview see Budanitsky and Hirst (2006)), but we restrict our experiments to corpus-based metrics (a) in the interest of greatest possible resource-independence and (b) in order to be able to shape the similarity metric by the choice of generalization corpus.</S>
    <S sid="44" ssid="9">For the headword weights wtrp(w), the simplest possibility is to assume a uniform weight distribution, i.e. wtrp(w) = 1.</S>
    <S sid="45" ssid="10">In addition, we test a frequency-based weight, i.e. wtrp(w) = f(w, rp), and inverse document frequency, which weighs a word according to its discriminativity: num. words This similarity-based model of selectional preferences is a straightforward implementation of the idea of generalization from seen headwords to other, similar words.</S>
    <S sid="46" ssid="11">Like the clustering-based model, it is not tied to the availability of WordNet or any other manually created resource.</S>
    <S sid="47" ssid="12">The model uses two corpora, a primary corpus for the extraction of seen headwords and a generalization corpus for the computation of semantic similarity metrics.</S>
    <S sid="48" ssid="13">This gives the model flexibility to influence the similarity metric through the choice of text domain of the generalization corpus.</S>
    <S sid="49" ssid="14">Instantiation used in this paper.</S>
    <S sid="50" ssid="15">Our aim is to compute selectional preferences for semantic roles.</S>
    <S sid="51" ssid="16">So we choose a particular instantiation of the similarity-based model that makes use of the fact that the two-corpora approach allows us to use different notions of &#8220;predicate&#8221; and &#8220;argument&#8221; in the primary and generalization corpus.</S>
    <S sid="52" ssid="17">Our primary corpus will consist of manually semantically annotated data, and we will use semantic verb classes as predicates and semantic roles as arguments.</S>
    <S sid="53" ssid="18">Examples of extracted (p, rp, w) tuples are (Morality evaluation, Evaluee, gamblers) and (Placing, Goal, briefcase).</S>
    <S sid="54" ssid="19">Semantic similarity, on the other hand, will be computed on automatically syntactically parsed corpus, where the predicates are words and the arguments are syntactic dependents.</S>
    <S sid="55" ssid="20">Examples of extracted (p, rp, w) tuples from the generalization corpus include (catch, obj, frogs) and (intervene, in, deal).2 This instantiation of the similarity-based model allows us to compute word sense specific selectional preferences, generalizing over manually semantically annotated data using automatically syntactically annotated data.</S>
  </SECTION>
  <SECTION title="4 Data" number="4">
    <S sid="56" ssid="1">We use FrameNet (Baker et al., 1998), a semantic lexicon for English that groups words in semantic classes called frames and lists semantic roles for each frame.</S>
    <S sid="57" ssid="2">The FrameNet 1.3 annotated data comprises 139,439 sentences from the British National Corpus (BNC).</S>
    <S sid="58" ssid="3">For our experiments, we chose 100 frame-specific semantic roles at random, 20 each from five frequency bands: 50-100 annotated occurrences of the role, 100-200 occurrences, 200-500, 5001000, and more than 1000 occurrences.</S>
    <S sid="59" ssid="4">The annotated data for these 100 roles comprised 59,608 sentences, our primary corpus.</S>
    <S sid="60" ssid="5">To determine headwords of the semantic roles, the corpus was parsed using the Collins (1997) parser.</S>
    <S sid="61" ssid="6">Our generalization corpus is the BNC.</S>
    <S sid="62" ssid="7">It was parsed using Minipar (Lin, 1993), which is considerably faster than the Collins parser but failed to parse about a third of all sentences.</S>
    <S sid="63" ssid="8">Accordingly, the arguments r extracted from the generalization corpus are Minipar dependencies, except that paths through preposition nodes were collapsed, using the preposition as the dependency relation.</S>
    <S sid="64" ssid="9">We obtained parses for 5,941,811 sentences of the generalization corpus.</S>
    <S sid="65" ssid="10">The EM-based clustering model was computed with all of the FrameNet 1.3 data (139,439 sentences) as input.</S>
    <S sid="66" ssid="11">Resnik's model was trained on the primary corpus (59,608 sentences).</S>
  </SECTION>
  <SECTION title="5 Experiments" number="5">
    <S sid="67" ssid="1">In this section we describe experiments comparing the similarity-based model for selectional preferences to Resnik's WordNet-based model and to an EM-based clustering model3.</S>
    <S sid="68" ssid="2">For the similarity-based model we test the five similarity metrics and three weighting schemes listed in section 3.</S>
    <S sid="69" ssid="3">Like Rooth et al. (1999) we evaluate selectional preference induction approaches in a pseudodisambiguation task.</S>
    <S sid="70" ssid="4">In a test set of pairs (rp, w), each headword w is paired with a confounder w' chosen randomly from the BNC according to its frequency4.</S>
    <S sid="71" ssid="5">Noun headwords are paired with noun confounders in order not to disadvantage Resnik's model, which only works with nouns.</S>
    <S sid="72" ssid="6">The headword/confounder pairs are only computed once and reused in all crossvalidation runs.</S>
    <S sid="73" ssid="7">The task is to choose the more likely role headword from the pair (w, w').</S>
    <S sid="74" ssid="8">In the main part of the experiment, we count a pair as covered if both w and w' are assigned some level of preference by a model (&#8220;full coverage&amp;quot;).</S>
    <S sid="75" ssid="9">We contrast this with another condition, where we count a pair as covered if at least one of the two words w, w' is assigned a level of preference by a model (&#8220;half coverage&#8221;).</S>
    <S sid="76" ssid="10">If only one is assigned a preference, that word is counted as chosen.</S>
    <S sid="77" ssid="11">To test the performance difference between models for significance, we use Dietterich's Under the null hypothesis, the t statistic has approximately a t distribution with 5 degrees of freedom.5</S>
  </SECTION>
  <SECTION title="Results and discussion" number="6">
    <S sid="78" ssid="1">Error rates.</S>
    <S sid="79" ssid="2">Table 2 shows error rates and coverage for the different selectional preference induction methods.</S>
    <S sid="80" ssid="3">The first five models are similarity-based, computed with uniform weights.</S>
    <S sid="81" ssid="4">The name in the first column is the name of the similarity metric used.</S>
    <S sid="82" ssid="5">Next come EM-based clustering models, using 30 (40) clusters and 20 re-estimation steps6, and the last row lists the results for Resnik's WordNet-based method.</S>
    <S sid="83" ssid="6">Results are micro-averaged.</S>
    <S sid="84" ssid="7">The table shows very low error rates for the similarity-based models, up to 15 points lower than the EM-based models.</S>
    <S sid="85" ssid="8">The error rates sus error rate by frequency band, Jaccard, uniform weights of Resnik's model are considerably higher than both the EM-based and the similarity-based models, which is unexpected.</S>
    <S sid="86" ssid="9">While EM-based models have been shown to work better in SRL tasks (Gildea and Jurafsky, 2002), this has been attributed to the difference in coverage.</S>
    <S sid="87" ssid="10">In addition to the full coverage condition, we also computed error rate and coverage for the half coverage case.</S>
    <S sid="88" ssid="11">In this condition, the error rates of the EM-based models are unchanged, while the error rates for all similarity-based models as well as Resnik's model rise to values between 0.4 and 0.6.</S>
    <S sid="89" ssid="12">So the EM-based model tends to have preferences only for the &#8220;right&#8221; words.</S>
    <S sid="90" ssid="13">Why this is so is not clear.</S>
    <S sid="91" ssid="14">It may be a genuine property, or an artifact of the FrameNet data, which only contains chosen, illustrative sentences for each frame.</S>
    <S sid="92" ssid="15">It is possible that these sentences have fewer occurrences of highly frequent but semantically less informative role headwords like &#8220;it&amp;quot; or &#8220;that&#8221; exactly because of their illustrative purpose.</S>
    <S sid="93" ssid="16">Table 3 inspects differences between error rates using Dietterich's 5x2cv, basically confirming Table 2.</S>
    <S sid="94" ssid="17">Each cell shows the wins minus losses for the method listed in the row when compared against the method in the column.</S>
    <S sid="95" ssid="18">The number of cases that did not reach significance is given in brackets.</S>
    <S sid="96" ssid="19">Coverage.</S>
    <S sid="97" ssid="20">The coverage rates of the similarity-based models, while comparable to Resnik's model, are considerably lower than for EM-based clustering, which achieves good coverage with 30 and almost perfect coverage with 40 clusters (Table 2).</S>
    <S sid="98" ssid="21">While peculiarities of the FrameNet data may have influenced the results in the EM-based model&#8217;s favor (see the discussion of the half coverage condition above), the low coverage of the similarity-based models is still surprising.</S>
    <S sid="99" ssid="22">After all, the generalization corpus of the similarity-based models is far larger than the corpus used for clustering.</S>
    <S sid="100" ssid="23">Given the learning curve in Figure 1 it is unlikely that the reason for the lower coverage is data sparseness.</S>
    <S sid="101" ssid="24">However, EM-based clustering is a soft clustering method, which relates every predicate and every headword to every cluster, if only with a very low probability.</S>
    <S sid="102" ssid="25">In similarity-based models, on the other hand, two words that have never been seen in the same argument slot in the generalization corpus will have zero similarity.</S>
    <S sid="103" ssid="26">That is, a similarity-based model can assign a level of preference for an argument rp and word wo only if R(wo) n R(Seen(rp)) is nonempty.</S>
    <S sid="104" ssid="27">Since the flexibility of similarity-based models extends to the vector space for computing similarities, one obvious remedy to the coverage problem would be the use of a less sparse vector space.</S>
    <S sid="105" ssid="28">Given the low error rates of similarity-based models, it may even be advisable to use two vector spaces, backing off to the denser one for words not covered by the sparse but highly accurate space used in this paper.</S>
    <S sid="106" ssid="29">Parameters of similarity-based models.</S>
    <S sid="107" ssid="30">Besides the similarity metric itself, which we discuss below, parameters of the similarity-based models include the number of seen headwords, the weighting scheme, and the number of similar words for each headword.</S>
    <S sid="108" ssid="31">Table 4 breaks down error rates by semantic role frequency band for two of the similaritybased models, micro-averaging over roles of the same frequency band and over cross-validation runs.</S>
    <S sid="109" ssid="32">As the table shows, there was some variation across frequency bands, but not as much as between models.</S>
    <S sid="110" ssid="33">The question of the number of seen headwords necessary to compute selectional preferences is further explored in Figure 1.</S>
    <S sid="111" ssid="34">The figure charts the number of seen headwords against error rate for a Jaccard similarity-based model (uniform weights).</S>
    <S sid="112" ssid="35">As can be seen, error rates reach a plateau at about 25 seen headwords for Jaccard.</S>
    <S sid="113" ssid="36">For other similarity metrics the result is similar.</S>
    <S sid="114" ssid="37">The weighting schemes wtrp had surprisingly little influence on results.</S>
    <S sid="115" ssid="38">For Jaccard similarity, the model had an error rate of 0.1858 for uniform weights, 0.1874 for frequency weighting, and 0.1806 for discriminativity.</S>
    <S sid="116" ssid="39">For other similarity metrics the results were similar.</S>
    <S sid="117" ssid="40">A cutoff was used in the similarity-based model: For each seen headword, only the 500 most similar words (according to a given similarity measure) were included in the computaof similar words; (b) % of times the more frequent word won; (c) number of distinct similar words per seen headword; (d) avg. size of intersection between roles tion; for all others, a similarity of 0 was assumed.</S>
    <S sid="118" ssid="41">Experiments testing a range of values for this parameter show that error rates stay stable for parameter values &gt; 200.</S>
    <S sid="119" ssid="42">So similarity-based models seem not overly sensitive to the weighting scheme used, the number of seen headwords, or the number of similar words per seen headword.</S>
    <S sid="120" ssid="43">The difference between similarity metrics, however, is striking.</S>
    <S sid="121" ssid="44">Differences between similarity metrics.</S>
    <S sid="122" ssid="45">As Table 2 shows, Lin and Jaccard worked best (though Lin has very low coverage), Dice and Hindle not as good, and Cosine showed the worst performance.</S>
    <S sid="123" ssid="46">To determine possible reasons for the difference, Table 5 explores properties of the five similarity measures.</S>
    <S sid="124" ssid="47">Given a set S = Seen(rp) of seen headwords for some role rp, each similarity metric produces a set like(S) of words that have nonzero similarity to S, that is, to at least one word in S. Line (a) shows the average frequency of words in like(S).</S>
    <S sid="125" ssid="48">The results confirm that the Lin and Cosine metrics tend to propose less frequent words as similar.</S>
    <S sid="126" ssid="49">Line (b) pursues the question of the frequency bias further, showing the percentage of headword/confounder pairs for which the more frequent of the two words &#8220;won&amp;quot; in the pseudodisambiguation task (using uniform weights).</S>
    <S sid="127" ssid="50">This it is an indirect estimate of the frequency bias of a similarity metric.</S>
    <S sid="128" ssid="51">Note that the headword actually was more frequent than the confounder in only 36% of all pairs.</S>
    <S sid="129" ssid="52">These first two tests do not yield any explanation for the low performance of Cosine, as the results they show do not separate Cosine from all other metrics.</S>
    <S sid="130" ssid="53">Lines (c) and (d), however, do just that.</S>
    <S sid="131" ssid="54">Line (c) looks at the size of like(S).</S>
    <S sid="132" ssid="55">Since we are using a cutoff of 500 similar words computed per word in S, the size of like(S) can only vary if the same word is suggested as similar for several seen headwords in S. This way, the size of like(S) functions as an indicator of the degree of uniformity or similarity that a similarity metric &#8220;perceives&#8221; among the members of S. To facilitate comparison across frequency bands, line (c) normalizes by the size of S, showwe see that Cosine seems to &#8220;perceive&#8221; considerably less similarity among the seen headwords than any of the other metrics.</S>
    <S sid="133" ssid="56">Line (d) looks at the sets s25(r) of the 25 most preferred potential headwords of roles r, showing the average size of the intersection s25(r) fl s25(r') between two roles (preferences computed with uniform weights).</S>
    <S sid="134" ssid="57">It indicates another possible reason for Cosine&#8217;s problem: Cosine seems to keep proposing the same words as similar for different roles.</S>
    <S sid="135" ssid="58">We will see this tendency also in the sample results we discuss next.</S>
    <S sid="136" ssid="59">Sample results.</S>
    <S sid="137" ssid="60">Table 6 shows samples of headwords induced by the similarity-based model for two FrameNet senses of the verb &#8220;take&#8221;: Ride vehicle (&#8220;take the bus&amp;quot;) and Ingest substance (&#8220;take drugs&#8221;), a semantic class that is exclusively about ingesting controlled substances.</S>
    <S sid="138" ssid="61">The semantic role Vehicle of the Ride vehicle frame and the role Substance of Ingest substance are both typically realized as the direct object of &#8220;take&#8221;.</S>
    <S sid="139" ssid="62">The table only shows new induced headwords; seen headwords were omitted from the list.</S>
    <S sid="140" ssid="63">The particular implementation of the similarity-based model we have chosen, using frames and roles as predicates and arguments in the primary corpus, should enable the model to compute preferences specific to word senses.</S>
    <S sid="141" ssid="64">The sample in Table 6 shows that this is indeed the case: The preferences differ considerably for the two senses (frames) of &#8220;take&#8221;, at least for the Jaccard metric, which shows a clear preference for vehicles for the Vehicle role.</S>
    <S sid="142" ssid="65">The Substance role of Ingest substance is harder to characterize, with very diverse seen headwords such as &#8220;crack&#8221;, &#8220;lines&#8221;, &#8220;fluid&amp;quot;, &#8220;speed&#8221;.</S>
    <S sid="143" ssid="66">While the highest-ranked induced words for Jaccard do include three food items, there is no word, with the possible exception of &#8220;ice cream&#8221;, that could be construed as a controlled substance.</S>
    <S sid="144" ssid="67">The induced headwords for the Cosine metric are considerably less pertinent for both roles and show the above-mentioned tendency to repeat some high-frequency words.</S>
    <S sid="145" ssid="68">The inspection of &#8220;take&#8221; anecdotally confirms that different selectional preferences are learned for different senses.</S>
    <S sid="146" ssid="69">This point (which comes down to the usability of selectional preferences for WSD) should be verified in an empirical evaluation, possibly in another pseudodisambiguation task, choosing as confounders seen headwords for other senses of a predicate word.</S>
  </SECTION>
  <SECTION title="6 Conclusion" number="7">
    <S sid="147" ssid="1">We have introduced the similarity-based model for inducing selectional preferences.</S>
    <S sid="148" ssid="2">Computing selectional preference as a weighted sum of similarities to seen headwords, it is a straightforward implementation of the idea of generalization from seen headwords to other, similar words.</S>
    <S sid="149" ssid="3">The similarity-based model is particularly simple and easy to compute, and seems not very sensitive to parameters.</S>
    <S sid="150" ssid="4">Like the EM-based clustering model, it is not dependent on lexical resources.</S>
    <S sid="151" ssid="5">It is, however, more flexible in that it induces similarities from a separate generalization corpus, which allows us to control the similarities we compute by the choice of text domain for the generalization corpus.</S>
    <S sid="152" ssid="6">In this paper we have used the model to compute sense-specific selectional preferences for semantic roles.</S>
    <S sid="153" ssid="7">In a pseudo-disambiguation task the similarity-based model showed error rates down to 0.16, far lower than both EM-based clustering and Resnik's WordNet model.</S>
    <S sid="154" ssid="8">However its coverage is considerably lower than that of EMbased clustering, comparable to Resnik's model.</S>
    <S sid="155" ssid="9">The most probable reason for this is the sparsity of the underlying vector space.</S>
    <S sid="156" ssid="10">The choice of similarity metric is critical in similarity-based models, with Jaccard and Lin achieving the best performance, and Cosine surprisingly bringing up the rear.</S>
    <S sid="157" ssid="11">Next steps will be to test the similarity-based model &#8220;in vivo&#8221;, in an SRL task; to test the model in a WSD task; to evaluate the model on a primary corpus that is not semantically analyzed, for greater comparability to previous approaches; to explore other vector spaces to address the coverage issue; and to experiment on domain transfer, using an appropriate generalization corpus to induce selectional preferences for a domain different from that of the primary corpus.</S>
    <S sid="158" ssid="12">This is especially relevant in view of the domain-dependence problem that SRL faces.</S>
    <S sid="159" ssid="13">Acknowledgements Many thanks to Jason Baldridge, Razvan Bunescu, Stefan Evert, Ray Mooney, Ulrike and Sebastian Pad6, and Sabine Schulte im Walde for helpful discussions.</S>
  </SECTION>
</PAPER>
