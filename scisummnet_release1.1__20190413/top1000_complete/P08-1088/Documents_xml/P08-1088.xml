<PAPER>
  <S sid="0">Learning Bilingual Lexicons from Monolingual Corpora</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We present a method for learning bilingual translation lexicons from monolingual corpora.</S>
    <S sid="2" ssid="2">Word types in each language are characterized by purely monolingual features, such as context counts and orthographic substrings.</S>
    <S sid="3" ssid="3">Translations are induced using a generative model based on canonical correlation analysis, which explains the monolingual lexicons in terms of latent matchings.</S>
    <S sid="4" ssid="4">We show that high-precision lexicons can be learned in a variety of language pairs and from a range of corpus types.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">Current statistical machine translation systems use parallel corpora to induce translation correspondences, whether those correspondences be at the level of phrases (Koehn, 2004), treelets (Galley et al., 2006), or simply single words (Brown et al., 1994).</S>
    <S sid="6" ssid="2">Although parallel text is plentiful for some language pairs such as English-Chinese or EnglishArabic, it is scarce or even non-existent for most others, such as English-Hindi or French-Japanese.</S>
    <S sid="7" ssid="3">Moreover, parallel text could be scarce for a language pair even if monolingual data is readily available for both languages.</S>
    <S sid="8" ssid="4">In this paper, we consider the problem of learning translations from monolingual sources alone.</S>
    <S sid="9" ssid="5">This task, though clearly more difficult than the standard parallel text approach, can operate on language pairs and in domains where standard approaches cannot.</S>
    <S sid="10" ssid="6">We take as input two monolingual corpora and perhaps some seed translations, and we produce as output a bilingual lexicon, defined as a list of word pairs deemed to be word-level translations.</S>
    <S sid="11" ssid="7">Precision and recall are then measured over these bilingual lexicons.</S>
    <S sid="12" ssid="8">This setting has been considered before, most notably in Koehn and Knight (2002) and Fung (1995), but the current paper is the first to use a probabilistic model and present results across a variety of language pairs and data conditions.</S>
    <S sid="13" ssid="9">In our method, we represent each language as a monolingual lexicon (see figure 2): a list of word types characterized by monolingual feature vectors, such as context counts, orthographic substrings, and so on (section 5).</S>
    <S sid="14" ssid="10">We define a generative model over (1) a source lexicon, (2) a target lexicon, and (3) a matching between them (section 2).</S>
    <S sid="15" ssid="11">Our model is based on canonical correlation analysis (CCA)1 and explains matched word pairs via vectors in a common latent space.</S>
    <S sid="16" ssid="12">Inference in the model is done using an EM-style algorithm (section 3).</S>
    <S sid="17" ssid="13">Somewhat surprisingly, we show that it is possible to learn or extend a translation lexicon using monolingual corpora alone, in a variety of languages and using a variety of corpora, even in the absence of orthographic features.</S>
    <S sid="18" ssid="14">As might be expected, the task is harder when no seed lexicon is provided, when the languages are strongly divergent, or when the monolingual corpora are from different domains.</S>
    <S sid="19" ssid="15">Nonetheless, even in the more difficult cases, a sizable set of high-precision translations can be extracted.</S>
    <S sid="20" ssid="16">As an example of the performance of the system, in English-Spanish induction with our best feature set, using corpora derived from topically similar but non-parallel sources, the system obtains 89.0% precision at 33% recall.</S>
  </SECTION>
  <SECTION title="2 Bilingual Lexicon Induction" number="2">
    <S sid="21" ssid="1">As input, we are given a monolingual corpus S (a sequence of word tokens) in a source language and a monolingual corpus T in a target language.</S>
    <S sid="22" ssid="2">Let s = (s1, ... , snS) denote nS word types appearing in the source language, and t = (t1, ... , tnT) denote word types in the target language.</S>
    <S sid="23" ssid="3">Based on S and T, our goal is to output a matching m between s and t. We represent m as a set of integer pairs so that (i, j) E m if and only if si is matched with tj.</S>
  </SECTION>
  <SECTION title="2.1 Generative Model" number="3">
    <S sid="24" ssid="1">We propose the following generative model over matchings m and word types (s, t), which we call matching canonical correlation analysis (MCCA).</S>
    <S sid="25" ssid="2">First, we generate a matching m E M, where M is the set of matchings in which each word type is matched to at most one other word type.2 We take MATCHING-PRIOR to be uniform over M.3 Then, for each matched pair of word types (i, j) E m, we need to generate the observed feature vectors of the source and target word types, fS(si) E RdS and fT (tj) E RdT .</S>
    <S sid="26" ssid="3">The feature vector of each word type is computed from the appropriate monolingual corpus and summarizes the word&#8217;s monolingual characteristics; see section 5 for details and figure 2 for an illustration.</S>
    <S sid="27" ssid="4">Since si and tj are translations of each other, we expect fS(si) and fT(tj) to be connected somehow by the generative process.</S>
    <S sid="28" ssid="5">In our model, they are related through a vector zi,j E Rd representing the shared, language-independent concept.</S>
    <S sid="29" ssid="6">Specifically, to generate the feature vectors, we first generate a random concept zi,j &#8212; N(0, Id), where Id is the d x d identity matrix.</S>
    <S sid="30" ssid="7">The source feature vector fS(si) is drawn from a multivariate Gaussian with mean WSzi,j and covariance FS, where WS is a dS x d matrix which transforms the language-independent concept zi,j into a languagedependent vector in the source space.</S>
    <S sid="31" ssid="8">The arbitrary covariance parameter FS &#65533;: 0 explains the sourcespecific variations which are not captured by WS; it does not play an explicit role in inference.</S>
    <S sid="32" ssid="9">The target fT (tj) is generated analogously using WT and FT, conditionally independent of the source given zi,j (see figure 2).</S>
    <S sid="33" ssid="10">For each of the remaining unmatched source word types si which have not yet been generated, we draw the word type features from a baseline normal distribution with variance &#963;2IdS, with hyperparameter &#963;2 &#187; 0; unmatched target words are similarly generated.</S>
    <S sid="34" ssid="11">If two word types are truly translations, it will be better to relate their feature vectors through the latent space than to explain them independently via the baseline distribution.</S>
    <S sid="35" ssid="12">However, if a source word type is not a translation of any of the target word types, we can just generate it independently without requiring it to participate in the matching.</S>
  </SECTION>
  <SECTION title="3 Inference" number="4">
    <S sid="36" ssid="1">Given our probabilistic model, we would like to maximize the log-likelihood of the observed data with respect to the model parameters 0 = (WS, WT, `pS, &amp;T).</S>
    <S sid="37" ssid="2">We use the hard (Viterbi) EM algorithm as a starting point, but due to modeling and computational considerations, we make several important modifications, which we describe later.</S>
    <S sid="38" ssid="3">The general form of our algorithm is as follows: E-step: Find the maximum weighted (partial) bipartite matching m E &#10003;Vl M-step: Find the best parameters 0 by performing canonical correlation analysis (CCA) M-step Given a matching m, the M-step optimizes logp(m, s, t; 0) with respect to 0, which can be rewritten as This objective corresponds exactly to maximizing the likelihood of the probabilistic CCA model presented in Bach and Jordan (2006), which proved that the maximum likelihood estimate can be computed by canonical correlation analysis (CCA).</S>
    <S sid="39" ssid="4">Intuitively, CCA finds d-dimensional subspaces US E RdS&#215;d of the source and UT E RdT &#215;d of the target such that the components of the projections U&gt;S fS(si) and U&gt;T fT(tj) are maximally correlated.4 US and UT can be found by solving an eigenvalue problem (see Hardoon et al. (2003) for details).</S>
    <S sid="40" ssid="5">Then the maximum likelihood estimates are as follows: WS = CSSUSP1/2, WT = CTTUTP1/2, q'S =CSS &#8722; WSWS&gt; , and 'PT = CTT &#8722; WTWT&gt; , where P is a d x d diagonal matrix of the canonical correlations, CSS = |m |E(i,j)&#8712;m fS(si)fS(si)&gt; is the empirical covariance matrix in the source domain, and CTT is defined analogously.</S>
    <S sid="41" ssid="6">E-step To perform a conventional E-step, we would need to compute the posterior over all matchings, which is #P-complete (Valiant, 1979).</S>
    <S sid="42" ssid="7">On the other hand, hard EM only requires us to compute the best matching under the current model:5 We cast this optimization as a maximum weighted bipartite matching problem as follows.</S>
    <S sid="43" ssid="8">Define the edge weight between source word type i and target word type j to be are presented for other languages in section 6.</S>
    <S sid="44" ssid="9">In this section, we describe the data and experimental methodology used throughout this work. which can be loosely viewed as a pointwise mutual information quantity.</S>
    <S sid="45" ssid="10">We can check that the objective logp(m, s, t; B) is equal to the weight of a matching plus some constant C: To find the optimal partial matching, edges with weight wz,7 &lt; 0 are set to zero in the graph and the optimal full matching is computed in 0((nS+nT)3) time using the Hungarian algorithm (Kuhn, 1955).</S>
    <S sid="46" ssid="11">If a zero edge is present in the solution, we remove the involved word types from the matching.6 Bootstrapping Recall that the E-step produces a partial matching of the word types.</S>
    <S sid="47" ssid="12">If too few word types are matched, learning will not progress quickly; if too many are matched, the model will be swamped with noise.</S>
    <S sid="48" ssid="13">We found that it was helpful to explicitly control the number of edges.</S>
    <S sid="49" ssid="14">Thus, we adopt a bootstrapping-style approach that only permits high confidence edges at first, and then slowly permits more over time.</S>
    <S sid="50" ssid="15">In particular, we compute the optimal full matching, but only retain the highest weighted edges.</S>
    <S sid="51" ssid="16">As we run EM, we gradually increase the number of edges to retain.</S>
    <S sid="52" ssid="17">In our context, bootstrapping has a similar motivation to the annealing approach of Smith and Eisner (2006), which also tries to alter the space of hidden outputs in the E-step over time to facilitate learning in the M-step, though of course the use of bootstrapping in general is quite widespread (Yarowsky, 1995).</S>
  </SECTION>
  <SECTION title="4 Experimental Setup" number="5">
    <S sid="53" ssid="1">In section 5, we present developmental experiments in English-Spanish lexicon induction; experiments 6Empirically, we obtained much better efficiency and even increased accuracy by replacing these marginal likelihood weights with a simple proxy, the distances between the words&#8217; mean latent concepts: where A is a thresholding constant, zz = E(zi,j &#65533;fS(si)) = P1/2Us fS(si), and zj* is defined analogously.</S>
    <S sid="54" ssid="2">The increased accuracy may not be an accident: whether two words are translations is perhaps better characterized directly by how close their latent concepts are, whereas log-probability is more sensitive to perturbations in the source and target spaces.</S>
    <S sid="55" ssid="3">Note that even when corpora are derived from parallel sources, no explicit use is ever made of document or sentence-level alignments.</S>
    <S sid="56" ssid="4">In particular, our method is robust to permutations of the sentences in the corpora.</S>
    <S sid="57" ssid="5">Each experiment requires a lexicon for evaluation.</S>
    <S sid="58" ssid="6">Following Koehn and Knight (2002), we consider lexicons over only noun word types, although this is not a fundamental limitation of our model.</S>
    <S sid="59" ssid="7">We consider a word type to be a noun if its most common tag is a noun in our monolingual corpus.11 For all languages pairs except English-Arabic, we extract evaluation lexicons from the Wiktionary online dictionary.</S>
    <S sid="60" ssid="8">As we discuss in section 7, our extracted lexicons have low coverage, particularly for proper nouns, and thus all performance measures are (sometimes substantially) pessimistic.</S>
    <S sid="61" ssid="9">For EnglishArabic, we extract a lexicon from 100k parallel sentences of UN parallel corpora by running the HMM intersected alignment model (Liang et al., 2008), adding (s, t) to the lexicon if s was aligned to t at least three times and more than any other word.</S>
    <S sid="62" ssid="10">Also, as in Koehn and Knight (2002), we make use of a seed lexicon, which consists of a small, and perhaps incorrect, set of initial translation pairs.</S>
    <S sid="63" ssid="11">We used two methods to derive a seed lexicon.</S>
    <S sid="64" ssid="12">The first is to use the evaluation lexicon Le and select the hundred most common noun word types in the source corpus which have translations in Le.</S>
    <S sid="65" ssid="13">The second method is to heuristically induce, where applicable, a seed lexicon using edit distance, as is done in Koehn and Knight (2002).</S>
    <S sid="66" ssid="14">Section 6.2 compares the performance of these two methods.</S>
    <S sid="67" ssid="15">We evaluate a proposed lexicon Lp against the evaluation lexicon Le using the Fl measure in the standard fashion; precision is given by the number of proposed translations contained in the evaluation lexicon, and recall is given by the fraction of possible translation pairs proposed.12 Since our model naturally produces lexicons in which each entry is associated with a weight based on the model, we can give a full precision/recall curve (see figure 3).</S>
    <S sid="68" ssid="16">We summarize these curves with both the best Fl over all possible thresholds and various precisions px at recalls x.</S>
    <S sid="69" ssid="17">All reported numbers exclude evaluation on the seed lexicon entries, regardless of how those seeds are derived or whether they are correct.</S>
    <S sid="70" ssid="18">In all experiments, unless noted otherwise, we used a seed of size 100 obtained from Le and considered lexicons between the top n = 2,000 most frequent source and target noun word types which were not in the seed lexicon; each system proposed an already-ranked one-to-one translation lexicon amongst these n words.</S>
    <S sid="71" ssid="19">Where applicable, we compare against the EDITDIST baseline, which solves a maximum bipartite matching problem where edge weights are normalized edit distances.</S>
    <S sid="72" ssid="20">We will use MCCA (for matching CCA) to denote our model using the optimal feature set (see section 5.3).</S>
  </SECTION>
  <SECTION title="5 Features" number="6">
    <S sid="73" ssid="1">In this section, we explore feature representations of word types in our model.</S>
    <S sid="74" ssid="2">Recall that f&#65533;(&#183;) and fT (&#183;) map source and target word types to vectors in RdS and RdT, respectively (see section 2).</S>
    <S sid="75" ssid="3">The features used in each representation are defined identically and derived only from the appropriate monolingual corpora.</S>
    <S sid="76" ssid="4">For a concrete example of a word type to feature vector mapping, see figure 2.</S>
    <S sid="77" ssid="5">For closely related languages, such as English and Spanish, translation pairs often share many orthographic features.</S>
    <S sid="78" ssid="6">One direct way to capture orthographic similarity between word pairs is edit distance.</S>
    <S sid="79" ssid="7">Running EDITDIST (see section 4.3) on ENES-W yielded 61.1 p0.33, but precision quickly degrades for higher recall levels (see EDITDIST in table 1).</S>
    <S sid="80" ssid="8">Nevertheless, when available, orthographic clues are strong indicators of translation pairs.</S>
    <S sid="81" ssid="9">We can represent orthographic features of a word type w by assigning a feature to each substring of length G 3.</S>
    <S sid="82" ssid="10">Note that MCCA can learn regular orthographic correspondences between source and target words, which is something edit distance cannot capture (see table 5).</S>
    <S sid="83" ssid="11">Indeed, running our MCCA model with only orthographic features on EN-ESW, labeled ORTHO in table 1, yielded 80.1 p0.33, a 31% error-reduction over EDITDIST in p0.33.</S>
    <S sid="84" ssid="12">While orthographic features are clearly effective for historically related language pairs, they are more limited for other language pairs, where we need to appeal to other clues.</S>
    <S sid="85" ssid="13">One non-orthographic clue that word types s and t form a translation pair is that there is a strong correlation between the source words used with s and the target words used with t. To capture this information, we define context features for each word type w, consisting of counts of nouns which occur within a window of size 4 around w. Consider the translation pair (time, tiempo) illustrated in figure 2.</S>
    <S sid="86" ssid="14">As we become more confident about other translation pairs which have active period and periodico context features, we learn that translation pairs tend to jointly generate these features, which leads us to believe that time and tiempo might be generated by a common underlying concept vector (see section 2).13 Using context features alone on EN-ES-W, our MCCA model (labeled CONTEXT in table 1) yielded a 80.2 p0.33.</S>
    <S sid="87" ssid="15">It is perhaps surprising that context features alone, without orthographic information, can yield a best-F1comparable to EDITDIST.</S>
    <S sid="88" ssid="16">We can of course combine context and orthographic features.</S>
    <S sid="89" ssid="17">Doing so yielded 89.03 p0.33 (labeled MCCA in table 1); this represents a 46.4% error reduction in p0.33 over the EDITDIST baseline.</S>
    <S sid="90" ssid="18">For the remainder of this work, we will use MCCA to refer to our model using both orthographic and context features.</S>
  </SECTION>
  <SECTION title="6 Experiments" number="7">
    <S sid="91" ssid="1">In this section we examine how system performance varies when crucial elements are altered.</S>
    <S sid="92" ssid="2">There are many sources from which we can derive monolingual corpora, and MCCA performance depends on the degree of similarity between corpora.</S>
    <S sid="93" ssid="3">We explored the following levels of relationships between corpora, roughly in order of closest to most distant: Our results for all conditions are presented in table 2(a).</S>
    <S sid="94" ssid="4">The predominant trend is that system performance degraded when the corpora diverged in content, presumably due to context features becoming less informative.</S>
    <S sid="95" ssid="5">However, it is notable that even in the most extreme case of disjoint corpora from different time periods and topics (e.g.</S>
    <S sid="96" ssid="6">EN-ES-G), we are still able to recover lexicons of reasonable accuracy.</S>
    <S sid="97" ssid="7">All of our experiments so far have exploited a small seed lexicon which has been derived from the evaluation lexicon (see section 4.3).</S>
    <S sid="98" ssid="8">In order to explore system robustness to heuristically chosen seed lexicons, we automatically extracted a seed lexicon similarly to Koehn and Knight (2002): we ran EDITDIST on EN-ES-D and took the top 100 most confident translation pairs.</S>
    <S sid="99" ssid="9">Using this automatically derived seed lexicon, we ran our system on EN-ESD as before, evaluating on the top 2,000 noun word types not included in the automatic lexicon.14 Using the automated seed lexicon, and still evaluating against our Wiktionary lexicon, MCCA-AUTO yielded 91.8 p0.33 (see table 2(b)), indicating that our system can produce lexicons of comparable accuracy with a heuristically chosen seed.</S>
    <S sid="100" ssid="10">We should note that this performance represents no knowledge given to the system in the form of gold seed lexicon entries.</S>
    <S sid="101" ssid="11">We also explored how system performance varies for language pairs other than English-Spanish.</S>
    <S sid="102" ssid="12">On English-French, for the disjoint EN-FR-D corpus (described in section 4.1), MCCA yielded 88.3 p0.33 (see table 2(c) for more performance measures).</S>
    <S sid="103" ssid="13">This verified that our model can work for another closely related language-pair on which no model development was performed.</S>
    <S sid="104" ssid="14">One concern is how our system performs on language pairs where orthographic features are less applicable.</S>
    <S sid="105" ssid="15">Results on disjoint English-Chinese and English-Arabic are given as EN-CH-D and EN-AR in table 2(c), both using only context features.</S>
    <S sid="106" ssid="16">In these cases, MCCA yielded much lower precisions of 26.8 and 31.0 p0.33, respectively.</S>
    <S sid="107" ssid="17">For both languages, performance degraded compared to EN-ESfidence system predictions, where the only editing done is to ignore predictions which consist of identical source and target words.</S>
    <S sid="108" ssid="18">D and EN-FR-D, presumably due in part to the lack of orthographic features.</S>
    <S sid="109" ssid="19">However, MCCA still achieved surprising precision at lower recall levels.</S>
    <S sid="110" ssid="20">For instance, at p0.1, MCCA yielded 60.1 and 70.0 on Chinese and Arabic, respectively.</S>
    <S sid="111" ssid="21">Figure 3 shows the highest-confidence outputs in several languages.</S>
    <S sid="112" ssid="22">There has been previous work in extracting translation pairs from non-parallel corpora (Rapp, 1995; Fung, 1995; Koehn and Knight, 2002), but generally not in as extreme a setting as the one considered here.</S>
    <S sid="113" ssid="23">Due to unavailability of data and specificity in experimental conditions and evaluations, it is not possible to perform exact comparisons.</S>
    <S sid="114" ssid="24">However, we attempted to run an experiment as similar as possible in setup to Koehn and Knight (2002), using English Gigaword and German Europarl.</S>
    <S sid="115" ssid="25">In this setting, our MCCA system yielded 61.7% accuracy on the 186 most confident predictions compared to 39% reported in Koehn and Knight (2002).</S>
  </SECTION>
  <SECTION title="7 Analysis" number="8">
    <S sid="116" ssid="1">We have presented a novel generative model for bilingual lexicon induction and presented results under a variety of data conditions (section 6.1) and languages (section 6.3) showing that our system can produce accurate lexicons even in highly adverse conditions.</S>
    <S sid="117" ssid="2">In this section, we broadly characterize and analyze the behavior of our system.</S>
    <S sid="118" ssid="3">We manually examined the top 100 errors in the English-Spanish lexicon produced by our system on EN-ES-W. Of the top 100 errors: 21 were correct translations not contained in the Wiktionary lexicon (e.g. pintura to painting), 4 were purely morphological errors (e.g. airport to aeropuertos), 30 were semantically related (e.g. basketball to b&#180;eisbol), 15 were words with strong orthographic similarities (e.g. coast to costas), and 30 were difficult to categorize and fell into none of these categories.</S>
    <S sid="119" ssid="4">Since many of our &#8216;errors&#8217; actually represent valid translation pairs not contained in our extracted dictionary, we supplemented our evaluation lexicon with one automatically derived from 100k sentences of parallel Europarl data.</S>
    <S sid="120" ssid="5">We ran the intersected HMM wordalignment model (Liang et al., 2008) and added (s, t) to the lexicon if s was aligned to t at least three times and more than any other word.</S>
    <S sid="121" ssid="6">Evaluating against the union of these lexicons yielded 98.0 p0.33, a significant improvement over the 92.3 using only the Wiktionary lexicon.</S>
    <S sid="122" ssid="7">Of the true errors, the most common arose from semantically related words which had strong context feature correlations (see table 4(b)).</S>
    <S sid="123" ssid="8">We also explored the relationships our model learns between features of different languages.</S>
    <S sid="124" ssid="9">We projected each source and target feature into the shared canonical space, and for each projected source feature we examined the closest projected target features.</S>
    <S sid="125" ssid="10">In table 5(a), we present some of the orthographic feature relationships learned by our system.</S>
    <S sid="126" ssid="11">Many of these relationships correspond to phonological and morphological regularities such as the English suffix ing mapping to the Spanish suffix gia.</S>
    <S sid="127" ssid="12">In table 5(b), we present context feature correspondences.</S>
    <S sid="128" ssid="13">Here, the broad trend is for words which are either translations or semantically related across languages to be close in canonical space.</S>
  </SECTION>
  <SECTION title="8 Conclusion" number="9">
    <S sid="129" ssid="1">We have presented a generative model for bilingual lexicon induction based on probabilistic CCA.</S>
    <S sid="130" ssid="2">Our experiments show that high-precision translations can be mined without any access to parallel corpora.</S>
    <S sid="131" ssid="3">It remains to be seen how such lexicons can be best utilized, but they invite new approaches to the statistical translation of resource-poor languages.</S>
  </SECTION>
</PAPER>
