<PAPER>
  <S sid="0">Improving Machine Translation Performance By Exploiting Non-Parallel Corpora</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We present a novel method for discovering parallel sentences in comparable, non-parallel corpora.</S>
    <S sid="2" ssid="2">We train a maximum entropy classifier that, given a pair of sentences, can reliably determine whether or not they are translations of each other.</S>
    <S sid="3" ssid="3">Using this approach, we extract parallel data from large Chinese, Arabic, and English non-parallel newspaper corpora.</S>
    <S sid="4" ssid="4">We evaluate the quality of the extracted data by showing that it improves the performance of a state-of-the-art statistical machine translation system.</S>
    <S sid="5" ssid="5">We also show that a good-quality MT system can be built from scratch by starting with a very small parallel corpus (100,000 words) and exploiting a large non-parallel corpus.</S>
    <S sid="6" ssid="6">Thus, our method can be applied with great benefit to language pairs for which only scarce resources are available.</S>
  </ABSTRACT>
  <SECTION title="" number="1">
    <S sid="7" ssid="1">We present a novel method for discovering parallel sentences in comparable, non-parallel corpora.</S>
    <S sid="8" ssid="2">We train a maximum entropy classifier that, given a pair of sentences, can reliably determine whether or not they are translations of each other.</S>
    <S sid="9" ssid="3">Using this approach, we extract parallel data from large Chinese, Arabic, and English non-parallel newspaper corpora.</S>
    <S sid="10" ssid="4">We evaluate the quality of the extracted data by showing that it improves the performance of a state-of-the-art statistical machine translation system.</S>
    <S sid="11" ssid="5">We also show that a good-quality MT system can be built from scratch by starting with a very small parallel corpus (100,000 words) and exploiting a large non-parallel corpus.</S>
    <S sid="12" ssid="6">Thus, our method can be applied with great benefit to language pairs for which only scarce resources are available.</S>
  </SECTION>
  <SECTION title="1." number="2">
    <S sid="13" ssid="1">Parallel texts&#8212;texts that are translations of each other&#8212;are an important resource in many NLP applications.</S>
    <S sid="14" ssid="2">They provide indispensable training data for statistical machine translation (Brown et al. 1990; Och and Ney 2002) and have been found useful in research on automatic lexical acquisition (Gale and Church 1991; Melamed 1997), crosslanguage information retrieval (Davis and Dunning 1995; Oard 1997), and annotation projection (Diab and Resnik 2002; Yarowsky and Ngai 2001; Yarowsky, Ngai, and Wicentowski 2001).</S>
    <S sid="15" ssid="3">Unfortunately, parallel texts are also scarce resources: limited in size, language coverage, and language register.</S>
    <S sid="16" ssid="4">There are relatively few language pairs for which parallel corpora of reasonable sizes are available; and even for those pairs, the corpora come mostly from one domain, that of political discourse (proceedings of the Canadian or European Parliament, or of the United Nations).</S>
    <S sid="17" ssid="5">This is especially problematic for the field of statistical machine translation (SMT), because translation systems trained on data from a particular domain (e.g., parliamentary proceedings) will perform poorly when translating texts from a different domain (e.g., news articles).</S>
    <S sid="18" ssid="6">One way to alleviate this lack of parallel data is to exploit a much more available and diverse resource: comparable non-parallel corpora.</S>
    <S sid="19" ssid="7">Comparable corpora are texts that, while not parallel in the strict sense, are somewhat related and convey overlapping information.</S>
    <S sid="20" ssid="8">Good examples are the multilingual news feeds produced by news agencies such as Agence France Presse, Xinhua News, Reuters, CNN, BBC, etc.</S>
    <S sid="21" ssid="9">Such texts are widely available on the Web for many language pairs and domains.</S>
    <S sid="22" ssid="10">They often contain many sentence pairs that are fairly good translations of each other.</S>
    <S sid="23" ssid="11">The ability to reliably identify these pairs would enable the automatic creation of large and diverse parallel corpora.</S>
    <S sid="24" ssid="12">However, identifying good translations in comparable corpora is hard.</S>
    <S sid="25" ssid="13">Even texts that convey the same information will exhibit great differences at the sentence level.</S>
    <S sid="26" ssid="14">Consider the two newspaper articles in Figure 1.</S>
    <S sid="27" ssid="15">They have been published by the English and French editors of Agence France Presse, and report on the same event, an epidemic of cholera in Pyongyang.</S>
    <S sid="28" ssid="16">The lines in the figure connect sentence pairs that are approximate translations of each other.</S>
    <S sid="29" ssid="17">Discovering these links automatically is clearly non-trivial.</S>
    <S sid="30" ssid="18">Traditional sentence alignment algorithms (Gale and Church 1991; Wu 1994; Fung and Church 1994; Melamed 1999; Moore 2002) are designed to align sentences in parallel corpora and operate on the assumption that there are no reorderings and only limited insertions and deletions between the two renderings of a parallel document.</S>
    <S sid="31" ssid="19">Thus, they perform poorly on comparable, non-parallel texts.</S>
    <S sid="32" ssid="20">What we need are methods able to judge sentence pairs in isolation, independent of the (potentially misleading) context.</S>
    <S sid="33" ssid="21">This article describes a method for identifying parallel sentences in comparable corpora and builds on our earlier work on parallel sentence extraction (Munteanu, Fraser, and Marcu 2004).</S>
    <S sid="34" ssid="22">We describe how to build a maximum entropy-based classifier that can reliably judge whether two sentences are translations of each other, without making use of any context.</S>
    <S sid="35" ssid="23">Using this classifier, we extract parallel sentences from very large comparable corpora of newspaper articles.</S>
    <S sid="36" ssid="24">We demonstrate the quality of our A pair of comparable texts. extracted sentences by showing that adding them to the training data of an SMT system improves the system&#8217;s performance.</S>
    <S sid="37" ssid="25">We also show that language pairs for which very little parallel data is available are likely to benefit the most from our method; by running our extraction system on a large comparable corpus in a bootstrapping manner, we can obtain performance improvements of more than 50% over a baseline MT system trained only on existing parallel data.</S>
    <S sid="38" ssid="26">Our main experimental framework is designed to address the commonly encountered situation that exists when the MT training and test data come from different domains.</S>
    <S sid="39" ssid="27">In such a situation, the test data is in-domain, and the training data is out-of-domain.</S>
    <S sid="40" ssid="28">The problem is that in such conditions, translation performance is quite poor; the out-of-domain data doesn&#8217;t really help the system to produce good translations.</S>
    <S sid="41" ssid="29">What is needed is additional in-domain training data.</S>
    <S sid="42" ssid="30">Our goal is to get such data from a large in-domain comparable corpus and use it to improve the performance of an out-of-domain MT system.</S>
    <S sid="43" ssid="31">We work in the context of Arabic-English and Chinese-English statistical machine translation systems.</S>
    <S sid="44" ssid="32">Our out-of-domain data comes from translated United Nations proceedings, and our indomain data consists of news articles.</S>
    <S sid="45" ssid="33">In this experimental framework we have access to a variety of resources, all of which are available from the Linguistic Data Consortium:1 In summary, we call in-domain the domain of the test data that we wish to translate; in this article, that in-domain data consists of news articles.</S>
    <S sid="46" ssid="34">Out-of-domain data is data that belongs to any other domain; in this article, the out-of-domain data is drawn from United Nations (UN) parliamentary proceedings.</S>
    <S sid="47" ssid="35">We are interested in the situation that exists when we need to translate news data but only have UN data available for training.</S>
    <S sid="48" ssid="36">The solution we propose is to get comparable news data, automatically extract parallel sentences from it, and use these sentences as additional training data; we will show that doing this improves translation performance on a news test set.</S>
    <S sid="49" ssid="37">The Arabic-English and Chinese-English resources described in the previous paragraph enable us to simulate our conditions of interest and perform detailed measurements of the impact of our proposed solution.</S>
    <S sid="50" ssid="38">We can train baseline systems on UN parallel data (using the data from the first bullet in the previous paragraph), extract additional news data from the large comparable corpora (the fourth bullet), accurately measure translation performance on news data against four reference translations (the third bullet), and compare the impact of the automatically extracted news data with that of similar amounts of human-translated news data (the second bullet).</S>
    <S sid="51" ssid="39">In the next section, we give a high-level overview of our parallel sentence extraction system.</S>
    <S sid="52" ssid="40">In Section 3, we describe in detail the core of the system, the parallel sentence classifier.</S>
    <S sid="53" ssid="41">In Section 4, we discuss several data extraction experiments.</S>
    <S sid="54" ssid="42">In Section 5, we evaluate the extracted data by showing that adding it to out-of-domain parallel data improves the in-domain performance of an out-of-domain MT system, and in Section 6, we show that in certain cases, even larger improvements can be obtained by using bootstrapping.</S>
    <S sid="55" ssid="43">In Section 7, we present examples of sentence pairs extracted by our method and discuss some of its weaknesses.</S>
    <S sid="56" ssid="44">Before concluding, we discuss related work.</S>
  </SECTION>
  <SECTION title="2." number="3">
    <S sid="57" ssid="1">The general architecture of our extraction system is presented in Figure 2.</S>
    <S sid="58" ssid="2">Starting with two large monolingual corpora (a non-parallel corpus) divided into documents, we begin by selecting pairs of similar documents (Section 2.1).</S>
    <S sid="59" ssid="3">From each such pair, we generate all possible sentence pairs and pass them through a simple word-overlapbased filter (Section 2.2), thus obtaining candidate sentence pairs.</S>
    <S sid="60" ssid="4">The candidates are presented to a maximum entropy (ME) classifier (Section 2.3) that decides whether the sentences in each pair are mutual translations of each other.</S>
    <S sid="61" ssid="5">The resources required by the system are minimal: a bilingual dictionary and a small amount of parallel data (used for training the ME classifier).</S>
    <S sid="62" ssid="6">The dictionaries used in our experiments are learned automatically from (out-of-domain) parallel corpora;2 thus, the only resource used by our system consists of parallel sentences.</S>
    <S sid="63" ssid="7">2 If such a resource is unavailable, other dictionaries can be used.</S>
    <S sid="64" ssid="8">Our comparable corpus consists of two large, non-parallel, news corpora, one in English and the other in the foreign language of interest (in our case, Chinese or Arabic).</S>
    <S sid="65" ssid="9">The parallel sentence extraction process begins by selecting, for each foreign article, English articles that are likely to contain sentences that are parallel to those in the foreign one.</S>
    <S sid="66" ssid="10">This step of the process emphasizes recall rather than precision.</S>
    <S sid="67" ssid="11">For each foreign document, we do not attempt to find the best-matching English document, but rather a set of similar English documents.</S>
    <S sid="68" ssid="12">The subsequent components of the system are robust enough to filter out the extra noise introduced by the selection of additional (possibly bad) English documents.</S>
    <S sid="69" ssid="13">We perform document selection using the Lemur IR toolkit3 (Ogilvie and Callan 2001).</S>
    <S sid="70" ssid="14">We first index all the English documents into a database.</S>
    <S sid="71" ssid="15">For each foreign document, we take the top five translations of each of its words (according to our probabilistic dictionary) and create an English language query.</S>
    <S sid="72" ssid="16">The translation probabilities are only used to choose the word translations; they do not appear in the query.</S>
    <S sid="73" ssid="17">We use the query to run TF-IDF retrieval against the database, take the top 20 English documents returned by Lemur, and pair each of them with the foreign query document.</S>
    <S sid="74" ssid="18">This document matching procedure is both slow (it looks at all possible document pairs, so it is quadratic in the number of documents) and imprecise (due to noise in the dictionary, the query will contain many wrong words).</S>
    <S sid="75" ssid="19">We attempt to fix these problems by using the following heuristic: we consider it likely that articles with similar content have publication dates that are close to each other.</S>
    <S sid="76" ssid="20">Thus, each query is actually run only against English documents published within a window of five days around the publication date of the foreign query document; we retrieve the best 20 of these documents.</S>
    <S sid="77" ssid="21">Each query is thus run against fewer documents, so it becomes faster and has a better chance of getting the right documents at the top.</S>
    <S sid="78" ssid="22">Our experiments have shown that the final performance of the system does not depend too much on the size of the window (for example, doubling the size to 10 days made no difference).</S>
    <S sid="79" ssid="23">However, having no window at all leads to a decrease in the overall performance of the system.</S>
    <S sid="80" ssid="24">From each foreign document and set of associated English documents, we take all possible sentence pairs and pass them through a word-overlap filter.</S>
    <S sid="81" ssid="25">The filter verifies that the ratio of the lengths of the two sentences is no greater than two.</S>
    <S sid="82" ssid="26">It then checks that at least half the words in each sentence have a translation in the other sentence, according to the dictionary.</S>
    <S sid="83" ssid="27">Pairs that do not fulfill these two conditions are discarded.</S>
    <S sid="84" ssid="28">The others are passed on to the parallel sentence selection stage.</S>
    <S sid="85" ssid="29">This step removes most of the noise (i.e., pairs of non-parallel sentences) introduced by our recall-oriented document selection procedure.</S>
    <S sid="86" ssid="30">It also removes good pairs that fail to pass the filter because the dictionary does not contain the necessary entries; but those pairs could not have been handled reliably anyway, so the overall effect of the filter is to improve the precision and robustness of the system.</S>
    <S sid="87" ssid="31">However, the filter also accepts many wrong pairs, because the word-overlap condition is weak; for instance, stopwords almost always have a translation on the other side, so if a few of the content For each candidate sentence pair, we need a reliable way of deciding whether the two sentences in the pair are mutual translations.</S>
    <S sid="88" ssid="32">This is achieved by a Maximum Entropy (ME) classifier (described at length in Section 3), which is the core component of our system.</S>
    <S sid="89" ssid="33">Those pairs that are classified as being translations of each other constitute the output of the system.</S>
  </SECTION>
  <SECTION title="3." number="4">
    <S sid="90" ssid="1">In the Maximum Entropy (ME) statistical modeling framework, we impose constraints on the model of our data by defining a set of feature functions.</S>
    <S sid="91" ssid="2">These feature functions emphasize properties of the data that we believe to be useful for the modeling task.</S>
    <S sid="92" ssid="3">For example, for a sentence pair sp, the word overlap (the percentage of words in either sentence that have a translation in the other) might be a useful indicator of whether the sentences are parallel.</S>
    <S sid="93" ssid="4">We therefore define a feature function f (sp), whose value is the word overlap of the sentences in sp.</S>
    <S sid="94" ssid="5">According to the ME principle, the optimal parametric form of the model of our data, taking into account the constraints imposed by the feature functions, is a log linear combination of these functions.</S>
    <S sid="95" ssid="6">Thus, for our classification problem, we have: where ci is the class (c0=&#8221;parallel&#8221;, c1=&#8221;not parallel&#8221;), Z(sp) is a normalization factor, and fij are the feature functions (indexed both by class and by feature).</S>
    <S sid="96" ssid="7">The resulting model has free parameters &#955;j, the feature weights.</S>
    <S sid="97" ssid="8">The parameter values that maximize the likelihood of a given training corpus can be computed using various optimization algorithms (see [Malouf 2002] for a comparison of such algorithms).</S>
    <S sid="98" ssid="9">For our particular classification problem, we need to find feature functions that distinguish between parallel and non-parallel sentence pairs.</S>
    <S sid="99" ssid="10">For this purpose, we compute and exploit word-level alignments between the sentences in each pair.</S>
    <S sid="100" ssid="11">A word alignment between two sentences in different languages specifies which words in one sentence are translations of which words in the other.</S>
    <S sid="101" ssid="12">Word alignments were first introduced in the context of statistical MT, where they are used to estimate the parameters of a translation model (Brown et al. 1990).</S>
    <S sid="102" ssid="13">Since then, they were found useful in many other NLP applications (e.g., word sense tagging [Diab and Resnik 2002] and question answering [Echihabi and Marcu 2003]).</S>
    <S sid="103" ssid="14">Figures 3 and 4 give examples of word alignments between two English-Arabic sentence pairs from our comparable corpus.</S>
    <S sid="104" ssid="15">Each figure contains two alignments.</S>
    <S sid="105" ssid="16">The one on the left is a correct alignment, produced by a human, while the one on the right Alignments between two parallel sentences. was computed automatically.</S>
    <S sid="106" ssid="17">As can be seen from the gloss next to the Arabic words, the sentences in Figure 3 are parallel while the sentences in Figure 4 are not.</S>
    <S sid="107" ssid="18">In a correct alignment between two non-parallel sentences, most words would have no translation equivalents; in contrast, in an alignment between parallel sentences, most words would be aligned.</S>
    <S sid="108" ssid="19">Automatically computed alignments, however, may have incorrect connections; for example, on the right side of Figure 3, the Arabic word issue is connected to the comma; and in Figure 4, the Arabic word at is connected to the English phrase its case to the.</S>
    <S sid="109" ssid="20">Such errors are due to noisy dictionary entries and to Alignments between two non-parallel sentences. shortcomings of the model used to generate the alignments.</S>
    <S sid="110" ssid="21">Thus, merely looking at the number of unconnected words, while helpful, is not discriminative enough.</S>
    <S sid="111" ssid="22">Still, automatically produced alignments have certain additional characteristics that can be exploited.</S>
    <S sid="112" ssid="23">We follow Brown et al. (1993) in defining the fertility of a word in an alignment as the number of words it is connected to.</S>
    <S sid="113" ssid="24">The presence, in an automatically computed alignment between a pair of sentences, of words of high fertility (such as the Arabic word at in Figure 4) is indicative of non-parallelism.</S>
    <S sid="114" ssid="25">Most likely, these connections were produced because of a lack of better alternatives.</S>
    <S sid="115" ssid="26">Another aspect of interest is the presence of long contiguous connected spans, which we define as pairs of bilingual substrings in which the words in one substring are connected only to words in the other substring.</S>
    <S sid="116" ssid="27">Such a span may contain a few words without any connection (a small percentage of the length of the span), but no word with a connection outside the span.</S>
    <S sid="117" ssid="28">Examples of such spans can be seen in Figure 3: the English strings after saudi mediation failed or to the international court ofjustice together with their Arabic counterparts.</S>
    <S sid="118" ssid="29">Long contiguous connected spans are indicative of parallelism, since they suggest that the two sentences have long phrases in common.</S>
    <S sid="119" ssid="30">And, in contrast, long substrings whose words are all unconnected are indicative of non-parallelism.</S>
    <S sid="120" ssid="31">To summarize, our classifier uses the following features, defined over two sentences and an automatically computed alignment between them.</S>
    <S sid="121" ssid="32">General features (independent of the word alignment): In order to compute word alignments we need a simple and efficient model.</S>
    <S sid="122" ssid="33">We want to align a large number of sentences, with many out-of-vocabulary words, in reasonable time.</S>
    <S sid="123" ssid="34">We also want a model with as few parameters as possible&#8212;preferably only wordfor-word translation probabilities.</S>
    <S sid="124" ssid="35">One such model is the IBM Model 1 (Brown et al. 1993).</S>
    <S sid="125" ssid="36">According to this model, given foreign sentence (fj1&lt;=j&lt;=m), English sentence (ei1&lt;=i&lt;=l), and translation probabilities t(fj|ei), the best alignment f &#8594; e is obtained by linking each foreign word fj to its most likely English translation argmaxeit(fj|ei).</S>
    <S sid="126" ssid="37">Thus, each foreign word is aligned to exactly one English word (or to a special NULL token).</S>
    <S sid="127" ssid="38">Due to its simplicity, this model has several shortcomings, some more structural than others (see Moore [2004] for a discussion).</S>
    <S sid="128" ssid="39">Thus, we use a version that is augmented with two simple heuristics that attempt to alleviate some of these shortcomings.</S>
    <S sid="129" ssid="40">One possible improvement concerns English words that appear more than once in a sentence.</S>
    <S sid="130" ssid="41">According to the model, a foreign word that prefers to be aligned with such an English word could be equally well aligned with any instance of that word.</S>
    <S sid="131" ssid="42">In such situations, instead of arbitrarily choosing the first instance or a random instance, we attempt to make a &#8221;smarter&#8221; decision.</S>
    <S sid="132" ssid="43">First, we create links only for those English words that appear exactly once; next, for words that appear more than once, we choose which instance to link with so that we minimize the number of crossings with already existing links.</S>
    <S sid="133" ssid="44">The second heuristic attempts to improve the choice of the most likely English translation of a foreign word.</S>
    <S sid="134" ssid="45">Our translation probabilities are automatically learned from parallel data, and we learn values for both t(fj|ei) and t(ei|fj).</S>
    <S sid="135" ssid="46">We can therefore decide that the most likely English translation of fj is argmaxei{t(fj|ei),t(ei|fj)}.</S>
    <S sid="136" ssid="47">Using both sets of probabilities is likely to help us make a better-informed decision.</S>
    <S sid="137" ssid="48">Using this alignment strategy, we follow (Och and Ney 2003) and compute one alignment for each translation direction (f - 4e and e -4 f), and then combine them.</S>
    <S sid="138" ssid="49">Och and Ney present three combination methods: intersection, union, and refined (a form of intersection expanded with certain additional neighboring links).</S>
    <S sid="139" ssid="50">Thus, for each sentence pair, we compute five alignments (two modified-IBMModel-1 plus three combinations) and then extract one set of general features and five sets of alignment features (as described in the previous section).</S>
    <S sid="140" ssid="51">We create training instances for our classifier from a small parallel corpus.</S>
    <S sid="141" ssid="52">The simplest way to obtain classifier training data from a parallel corpus is to generate all possible sentence pairs from the corpus (the Cartesian product).</S>
    <S sid="142" ssid="53">This generates 5,0002 training instances, out of which 5,000 are positive (i.e., belong to class &#8221;parallel&#8221;) and the rest are negative.</S>
    <S sid="143" ssid="54">One drawback of this approach is that the resulting training set is very imbalanced, i.e., it has many more negative examples than positive ones.</S>
    <S sid="144" ssid="55">Classifiers trained on such data do not achieve good performance; they generally tend to predict the majority class, i.e., classify most sentences as non-parallel (which has indeed been the case in our experiments).</S>
    <S sid="145" ssid="56">Our solution to this is to downsample, i.e., eliminate a number of (randomly selected) negative instances.</S>
    <S sid="146" ssid="57">Another problem is that the large majority of sentence pairs in the Cartesian product have low word overlap (i.e., few words that are translations of each other).</S>
    <S sid="147" ssid="58">As explained in Section 2 (and shown in Figure 2), when extracting data from a comparable corpus, we only apply the classifier on the output of the word-overlap filter.</S>
    <S sid="148" ssid="59">Thus, low-overlap sentence pairs, which would be discarded by the filter, are unlikely to be useful as training examples.</S>
    <S sid="149" ssid="60">We therefore use for training only those pairs from the Cartesian product that are accepted by the word-overlap filter.</S>
    <S sid="150" ssid="61">This has the additional advantage that, since all these pairs have many words in common, the classifier learns to make distinctions that cannot be made based on word overlap alone.</S>
    <S sid="151" ssid="62">To summarize, we prepare our classifier training set in the following manner: starting from a parallel corpus of about 5,000 sentence pairs, we generate all the sentence pairs in the Cartesian product; we discard the pairs that do not fulfill the conditions of the word-overlap filter; if the resulting set is imbalanced, i.e., the ratio of non-parallel to parallel pairs is greater than five, we balance it by removing randomly chosen nonparallel pairs.</S>
    <S sid="152" ssid="63">We then compute word alignments and extract feature values.</S>
    <S sid="153" ssid="64">Using the training set, we compute values for the classifier feature weights using the YASMET4 implementation of the GIS algorithm (Darroch and Ratcliff 1974).</S>
    <S sid="154" ssid="65">Since we are dealing with few parameters and have sufficiently many training instances, using more advanced training algorithms is unlikely to bring significant improvements.</S>
    <S sid="155" ssid="66">We test the performance of the classifier by generating test instances from a different parallel corpus (also around 5,000 sentence pairs) and checking how many of these instances are correctly classified.</S>
    <S sid="156" ssid="67">We prepare the test set by creating the Cartesian product of the sentences in the test parallel corpus and applying the word-overlap filter (we do not perform any balancing).</S>
    <S sid="157" ssid="68">Although we apply the filter, we still conceptually classify all pairs from the Cartesian product in a two-stage classification process: all pairs discarded by the filter are classified as &#8221;non-parallel,&#8221; and for the rest, we obtain predictions from the classifier.</S>
    <S sid="158" ssid="69">Since this is how we apply the system on truly unseen data, this is the process in whose performance we are interested.</S>
    <S sid="159" ssid="70">We measure the performance of the classification process by computing precision and recall.</S>
    <S sid="160" ssid="71">Precision is the ratio of sentence pairs correctly judged as parallel to the total number of pairs judged as parallel by the classifier.</S>
    <S sid="161" ssid="72">Recall is the ratio of sentence pairs correctly identified as parallel by the classifier to the total number of truly parallel pairs&#8212;i.e., the number of pairs in the parallel corpus used to generate the test instances.</S>
    <S sid="162" ssid="73">Both numbers are expressed as percentages.</S>
    <S sid="163" ssid="74">More formally: let classified parallel be the total number of sentence pairs from our test set that the classifier judged as parallel, classified well be the number of pairs that the classifier correctly judged as parallel, and true parallel be the total number of parallel pairs in the test set.</S>
    <S sid="164" ssid="75">Then: classified parallel true parallel There are two factors that influence a classifier&#8217;s performance: dictionary coverage and similarity between the domains of the training and test instances.</S>
    <S sid="165" ssid="76">We performed evaluation experiments to account for both these factors.</S>
    <S sid="166" ssid="77">All our dictionaries are automatically learned from parallel data; thus, we can create dictionaries of various coverage by learning them from parallel corpora of different sizes.</S>
    <S sid="167" ssid="78">We use five dictionaries, learned from five initial out-of-domain parallel corpora, whose sizes are 100k, 1M, 10M, 50M, and 95M tokens, as measured on the English side.</S>
    <S sid="168" ssid="79">Since we want to use the classifier to extract sentence pairs from our in-domain comparable corpus, we test it on instances generated from an in-domain parallel corpus.</S>
    <S sid="169" ssid="80">In order to measure the effect of the domain difference, we use two training sets: one generated from an in-domain parallel corpus and another one from an out-ofdomain parallel corpus.</S>
    <S sid="170" ssid="81">In summary, for each language pair, we use the following corpora: Precision and recall of the Arabic-English classifiers.</S>
    <S sid="171" ssid="82">From each initial, out-of-domain corpus, we learn a dictionary.</S>
    <S sid="172" ssid="83">We then take the classifier training and test corpora and, using the method described in the previous section, create two sets of training instances and one set of test instances.</S>
    <S sid="173" ssid="84">We train two classifiers (one on each training set) and evaluate both of them on the test set.</S>
    <S sid="174" ssid="85">The parallel corpora used for generating training and test instances have around 5k sentence pairs each (approximately 150k English tokens), and generate around 10k training instances (for each training set) and 8k test instances.</S>
    <S sid="175" ssid="86">Precision and recall of the Chinese-English classifiers.</S>
    <S sid="176" ssid="87">Figures 5 and 6 show the recall and precision of our classifiers, for both ArabicEnglish and Chinese-English.</S>
    <S sid="177" ssid="88">The results show that the precision of our classification process is robust with respect to dictionary coverage and training domain.</S>
    <S sid="178" ssid="89">Even when starting from a very small initial parallel corpus, we can build a high-precision classifier.</S>
    <S sid="179" ssid="90">Having a good dictionary and training data from the right domain does help though, mainly with respect to recall.</S>
    <S sid="180" ssid="91">The classifiers achieve high precision because their positive training examples are clean parallel sentence pairs, with high word overlap (since the pairs with low overlap are filtered out); thus, the classification decision frontier is pushed towards &#8220;goodlooking&#8221; alignments.</S>
    <S sid="181" ssid="92">The low recall results are partly due to the word-overlap filter (the first stage of the classification process), which discards many parallel pairs.</S>
    <S sid="182" ssid="93">If we don&#8217;t apply the filter before the classifier, the recall results increase by about 20% (with no loss in precision).</S>
    <S sid="183" ssid="94">However, the filter plays a very important role in keeping the extraction pipeline robust and efficient (as shown in Figure 7, the filter discards 99% of the candidate pairs), so this loss of recall is a price worth paying.</S>
    <S sid="184" ssid="95">Classifier evaluations using different subsets of features show that most of the classifier performance comes from the general features together with the alignment features concerning the percentage and number of words that have no connection.</S>
    <S sid="185" ssid="96">However, we expect that in real data, the differences between parallel and non-parallel pairs are less clear than in our test data (see the discussion in Section 7) and can no The amounts of data processed by our system during extraction from the Chinese-English comparable corpus. longer be accounted for only by counting the linked words; thus, the other features should become more important.</S>
  </SECTION>
  <SECTION title="4." number="5">
    <S sid="186" ssid="1">The comparable corpora that we use for parallel sentence extraction are collections of news stories published by the Agence France Presse and Xinhua News agencies.</S>
    <S sid="187" ssid="2">They are parts of the Arabic, English, and Chinese Gigaword corpora which are available from the Linguistic Data Consortium.</S>
    <S sid="188" ssid="3">From these collections, for each language pair, we create an in-domain comparable corpus by putting together articles coming from the same agency and the same time period.</S>
    <S sid="189" ssid="4">Table 1 presents in detail the sources and sizes of the resulting comparable corpora.</S>
    <S sid="190" ssid="5">The remainder of the section presents the various data sets that we extracted automatically from these corpora, under various experimental conditions.</S>
    <S sid="191" ssid="6">In the experiments described in Section 3.4, we started out with five out-of-domain initial parallel corpora of various sizes and obtained five dictionaries and five out-ofdomain trained classifiers (per language pair).</S>
    <S sid="192" ssid="7">We now plug in each of these classifiers (and their associated dictionaries) in our extraction system (Section 2) and apply it to our comparable corpora.</S>
    <S sid="193" ssid="8">We thus obtain five Arabic-English and five Chinese-English extracted corpora.</S>
    <S sid="194" ssid="9">Note that in each of these experiments the only resource used by our system is the initial, out-of-domain parallel corpus.</S>
    <S sid="195" ssid="10">Thus, the experiments fit in the framework of interest described in Section 1, which assumes the availability of (limited amounts of) out-of-domain training data and (large amounts of) in-domain comparable data.</S>
    <S sid="196" ssid="11">Table 2 shows the sizes of the extracted corpora for each initial corpus size, for both Chinese-English and Arabic-English.</S>
    <S sid="197" ssid="12">As can be seen, when the initial parallel corpus is very small, the amount of extracted data is also quite small.</S>
    <S sid="198" ssid="13">This is due to the low coverage of the dictionary learned from that corpus.</S>
    <S sid="199" ssid="14">Our candidate pair selection step (Section 2.2) discards pairs with too many unknown (or unrelated) words, according to the dictionary; thus, only few sentences fulfill the word-overlap condition of our filter.</S>
    <S sid="200" ssid="15">As mentioned in Section 1, our goal is to use the extracted data as additional MT training data and obtain better translation performance on a given in-domain MT test set.</S>
    <S sid="201" ssid="16">A simple way of estimating the usefulness of the data for this purpose is to measure its coverage of the test set, i.e., the percentage of running n-grams from the test corpus that are also in our corpus.</S>
    <S sid="202" ssid="17">Tables 3 and 4 present the coverage of our extracted corpora.</S>
    <S sid="203" ssid="18">For each initial corpus size, the first column shows the coverage of that initial corpus, and the second column shows the coverage of the initial corpus plus the extracted corpus.</S>
    <S sid="204" ssid="19">Each cell contains four numbers that represent the coverage with respect to unigrams, bigrams, trigrams, and 4-grams.</S>
    <S sid="205" ssid="20">The numbers show that unigram coverage depends only on the size of the corpus (and not on the domain), but for longer n-grams, our in-domain extracted data brings significant improvements in coverage.</S>
    <S sid="206" ssid="21">The extraction experiments from the previous section are controlled experiments in which we only use limited amounts of parallel data for our extraction system.</S>
    <S sid="207" ssid="22">In this section, we describe experiments in which the goal is to assess the applicability of our method to data that we mined from the Web.</S>
    <S sid="208" ssid="23">We obtained comparable corpora from the Web by going to bilingual news websites (such as Al-Jazeera) and downloading news articles in each language independently.</S>
    <S sid="209" ssid="24">In order to get as many articles as possible, we used the web site&#8217;s search engine to get lists of articles and their URLs, and then crawled those lists.</S>
    <S sid="210" ssid="25">We used the AgentBuilder tool (Ticrea and Minton 2003; Minton, Ticrea, and Beach 2003) for crawling.</S>
    <S sid="211" ssid="26">The tool can be programmed to automatically initiate searches with different parameters and to identify and extract the desired article URLs (as well as other information such as dates and titles) from the result pages.</S>
    <S sid="212" ssid="27">Table 5 shows the sources, time periods, and size of the datasets that we downloaded.</S>
    <S sid="213" ssid="28">For the extraction experiments, we used dictionaries of high coverage, learned from all our available parallel training data.</S>
    <S sid="214" ssid="29">The sizes of these training corpora, measured in number of English tokens, are as follows: We applied our extraction method on both the LDC-released Gigaword corpora and the Web-downloaded comparable corpora.</S>
    <S sid="215" ssid="30">For each language pair, we used the highest precision classifier from those presented in Section 3.4.</S>
    <S sid="216" ssid="31">In order to obtain data of higher quality, we didn&#8217;t use all the sentences classified as parallel, but only those for which the probability computed by our classifier was higher than 0.70.</S>
    <S sid="217" ssid="32">Table 6 shows the amounts of extracted data, measured in number of English tokens.</S>
    <S sid="218" ssid="33">For ArabicEnglish, we were able to extract from the Gigaword corpora much more data than in our previous experiments (see Table 2), clearly due to the better dictionary.</S>
    <S sid="219" ssid="34">For ChineseEnglish, there was no increase in the size of extracted data (although the amount from Table 6 is smaller than that from Table 2, it counts only sentence pairs extracted with confidence higher than 0.70).</S>
    <S sid="220" ssid="35">In the previous section, we measured, for our training corpora, their coverage of the test set (Tables 3 and 4).</S>
    <S sid="221" ssid="36">We repeated the measurements for the training data from Table 6 and obtained very similar results: using the additional extracted data improves coverage, especially for longer n-grams.</S>
    <S sid="222" ssid="37">To give the reader an idea of the amount of data that is funneled through our system, we show in Figure 7 the sizes of the data processed by each of the system&#8217;s components during extraction from the Gigaword and Web-based Chinese-English comparable corpora.</S>
    <S sid="223" ssid="38">We use a dictionary learned from a parallel corpus on 190M English tokens and a classifier trained on instances generated from a parallel corpus of 220k English tokens.</S>
    <S sid="224" ssid="39">We start with a comparable corpus consisting of 500k Chinese articles and 600k English articles.</S>
    <S sid="225" ssid="40">The article selection step (Section 2.1) outputs 7.5M similar article pairs; from each article pair we generate all possible sentence pairs and obtain 2,400M pairs.</S>
    <S sid="226" ssid="41">Of these, less than 1% (17M) pass the candidate selection stage (Section 2.2) and are presented to the ME classifier.</S>
    <S sid="227" ssid="42">The system outputs 430k sentence pairs (9.5M English tokens) that have been classified as parallel (with probability greater than 0.7).</S>
    <S sid="228" ssid="43">The figure also presents, in the lower part, the parameters that control the filtering at each stage. the particular sentence pair to be parallel; the higher the value, the higher the classifier&#8217;s confidence.</S>
    <S sid="229" ssid="44">Thus, in order to obtain higher precision, we can choose to define as parallel only those pairs for which the classifier probability is above a certain threshold.</S>
    <S sid="230" ssid="45">In the experiments from Section 4.1, we use the (default) threshold of 0.5, while in Section 4.2 we use 0.7.</S>
  </SECTION>
  <SECTION title="5." number="6">
    <S sid="231" ssid="1">Our main goal is to extract, from an in-domain comparable corpus, parallel training data that improves the performance of an out-of-domain-trained SMT system.</S>
    <S sid="232" ssid="2">Thus, we evaluate our extracted corpora by showing that adding them to the out-of-domain training data of a baseline MT system improves its performance.</S>
    <S sid="233" ssid="3">We first evaluate the extracted corpora presented in Section 4.1.</S>
    <S sid="234" ssid="4">The extraction system used to obtain each of those corpora made use of a certain initial out-of-domain parallel corpus.</S>
    <S sid="235" ssid="5">We train a Baseline MT system on that initial corpus.</S>
    <S sid="236" ssid="6">We then train another MT system (which we call PlusExtracted) on the initial corpus plus the extracted corpus.</S>
    <S sid="237" ssid="7">In order to compare the quality of our extracted data with that of human-translated data from the same domain, we also train an UpperBound MT system, using the initial corpus plus a corpus of in-domain, human-translated data.</S>
    <S sid="238" ssid="8">For each initial corpus, we use the same amount of human-translated data as there is extracted data (see Table 2).</S>
    <S sid="239" ssid="9">Thus, for each language pair and each initial parallel corpus, we compare 3 MT systems: Baseline, PlusExtracted, and UpperBound.</S>
    <S sid="240" ssid="10">All our MT systems were trained using a variant of the alignment template model described in (Och 2003).</S>
    <S sid="241" ssid="11">Each system used two language models: a very large one, trained on 800 million English tokens, which is the same for all the systems; and a smaller one, trained only on the English side of the parallel training data for that particular system.</S>
    <S sid="242" ssid="12">This ensured that any differences in performance are caused only by differences in the training data.</S>
    <S sid="243" ssid="13">The systems were tested on the news test corpus used for the NIST 2003 MT evaluation.5 Translation performance was measured using the automatic BLEU evaluation metric (Papineni et al. 2002) on four reference translations.</S>
    <S sid="244" ssid="14">Figures 8 and 9 show the BLEU scores obtained by our MT systems.</S>
    <S sid="245" ssid="15">The 95% confidence intervals of the scores computed by bootstrap resampling (Koehn 2004) are marked on the graphs; the delta value is around 1.2 for Arabic-English and 1 for Chinese-English.</S>
    <S sid="246" ssid="16">As the results show, the automatically extracted additional training data yields significant improvements in performance over most initial training corpora for both language pairs.</S>
    <S sid="247" ssid="17">At least for Chinese-English, the improvements are quite comparable to those produced by the human-translated data.</S>
    <S sid="248" ssid="18">And, as can be expected, the impact of the extracted data decreases as the size of the initial corpus increases.</S>
    <S sid="249" ssid="19">In order to check that the classifier really does something important, we performed a few experiments without it.</S>
    <S sid="250" ssid="20">After the article selection step, we simply paired each foreign document with the best-matching English one, assumed they are parallel, sentence-aligned them with a generic sentence alignment method, and added the resulting data to the training corpus.</S>
    <S sid="251" ssid="21">The resulting BLEU scores were practically the same as the baseline; thus, our classifier does indeed help to discover higher-quality parallel data.</S>
    <S sid="252" ssid="22">We also measured the MT performance impact of the extracted corpora described in Section 4.2.</S>
    <S sid="253" ssid="23">We trained a Baseline MT system on all our available (in-domain and MT performance improvements for Arabic-English. out-of-domain) parallel data, and a PlusExtracted system on the parallel data plus the extracted in-domain data.</S>
    <S sid="254" ssid="24">Clearly, we have access to no UpperBound system in this case.</S>
    <S sid="255" ssid="25">The results are presented in the first two rows of Table 7.</S>
    <S sid="256" ssid="26">Adding the extracted corpus lowers the score for the Arabic-English system and improves the score for the Chinese-English one; however, none of the differences are statistically significant.</S>
    <S sid="257" ssid="27">Since the baseline systems are trained on such large amounts of data (see Section 4.2), it is not surprising that our extracted corpora have no significant impact.</S>
    <S sid="258" ssid="28">In an attempt to give a better indication of the value of these corpora, we used them alone as MT training data.</S>
    <S sid="259" ssid="29">The BLEU scores obtained by the systems we trained on them are presented in the third row of Table 7.</S>
    <S sid="260" ssid="30">For comparison purposes, the last line of the table shows the scores of systems trained on 10M English tokens of outof-domain data.</S>
    <S sid="261" ssid="31">As can be seen, our automatically extracted corpora obtain better MT performance than out-of-domain parallel corpora of similar size.</S>
    <S sid="262" ssid="32">It&#8217;s true that this is not a fair comparison, since the extracted corpora were obtained using all our available parallel data.</S>
    <S sid="263" ssid="33">The numbers do show, however, that the extracted data, although it was obtained automatically, is of good value for machine translation.</S>
  </SECTION>
  <SECTION title="6." number="7">
    <S sid="264" ssid="1">As can be seen from Table 2, the amount of data we can extract from our comparable corpora is adversely affected by poor dictionary coverage.</S>
    <S sid="265" ssid="2">Thus, if we start with very little parallel data, we do not make good use of the comparable corpora.</S>
    <S sid="266" ssid="3">One simple way to alleviate this problem is to bootstrap: after we&#8217;ve extracted some in-domain data, we can use it to learn a new dictionary and go back and extract again.</S>
    <S sid="267" ssid="4">Bootstrapping was also successfully applied to this problem by Fung and Cheung (2004).</S>
    <S sid="268" ssid="5">We performed bootstrapping iterations starting from two very small corpora: 100k English tokens and 1M English tokens, respectively.</S>
    <S sid="269" ssid="6">After each iteration, we trained MT performance improvements for Chinese-English.</S>
    <S sid="270" ssid="7">(and evaluated) an MT system on the initial data plus the data extracted in that iteration.</S>
    <S sid="271" ssid="8">We did not use any of the data extracted in previous iterations since it is mostly a subset of that extracted in the current iteration.</S>
    <S sid="272" ssid="9">We iterated until there were no further improvements in MT performance on our development data.</S>
    <S sid="273" ssid="10">Figures 10 and 11 show the sizes of the data extracted at each iteration, for both initial corpus sizes.</S>
    <S sid="274" ssid="11">Iteration 0 is the one that uses the dictionary learned from the initial corpus.</S>
    <S sid="275" ssid="12">Starting with 100k words of parallel data, we eventually collect 20M words of in-domain Arabic-English data and 90M words of in-domain Chinese-English data.</S>
    <S sid="276" ssid="13">Figures 12 and 13 show the BLEU scores of these MT systems.</S>
    <S sid="277" ssid="14">For comparison purposes, we also plotted on each graph the performance of our best MT system for that language pair, trained on all our available parallel data (Table 7).</S>
    <S sid="278" ssid="15">As we can see, bootstrapping allows us to extract significantly larger amounts of data, which leads to significantly higher BLEU scores.</S>
    <S sid="279" ssid="16">Starting with as little as 100k English tokens of parallel data, we obtain MT systems that come within 7&#8211;10 BLEU points of systems trained on parallel corpora of more than 100M English tokens.</S>
    <S sid="280" ssid="17">This shows that using our method, a good-quality MT system can be built from very little parallel data and a large amount of comparable, non-parallel data.</S>
  </SECTION>
  <SECTION title="7." number="8">
    <S sid="281" ssid="1">We conclude the description of our method by presenting a few sentence pairs extracted by our system.</S>
    <S sid="282" ssid="2">We chose the examples by looking for cases when a given foreign sentence was judged parallel to several different English sentences.</S>
    <S sid="283" ssid="3">Figures 14 and 15 show the foreign sentence in Arabic and Chinese, respectively, followed by a human-produced translation in bold italic font, followed by the automatically extracted matching English sentences in normal font.</S>
    <S sid="284" ssid="4">The sentences are picked from the data sets presented in Section 4.2.</S>
    <S sid="285" ssid="5">The examples reveal the two main types of errors that our system makes.</S>
    <S sid="286" ssid="6">The first type concerns cases when the system classifies as parallel sentence pairs that, although they share many content words, express slightly different meanings, as in Figure 15, example 7.</S>
    <S sid="287" ssid="7">The second concerns pairs in which the two sentences convey different amounts of information.</S>
    <S sid="288" ssid="8">In such pairs, one of the sentences contains a transSizes of the Chinese-English corpora extracted using bootstrapping, in millions of English tokens.</S>
    <S sid="289" ssid="9">BLEU scores of the Arabic-English MT systems using bootstrapping. lation of the other, plus additional (often quite long) phrases (Figure 15, examples 1 and 5).</S>
    <S sid="290" ssid="10">These errors are caused by the noise present in the automatically learned dictionaries and by the use of a weak word alignment model for extracting the classifier BLEU scores of the Chinese-English MT systems using bootstrapping. features.</S>
    <S sid="291" ssid="11">In an automatically learned dictionary, many words (especially the frequent, non-content ones) will have a lot of spurious translations.</S>
    <S sid="292" ssid="12">The IBM-1 alignment model takes no account of word order and allows a source word to be connected to arbitrarily many target words.</S>
    <S sid="293" ssid="13">Alignments computed using this model and a noisy, automatically learned, dictionary will contain many incorrect links.</S>
    <S sid="294" ssid="14">Thus, if two sentences share several content words, these incorrect links together with the correct links between the common content words will yield an alignment good enough to make the classifier judge the sentence pair as parallel.</S>
    <S sid="295" ssid="15">The effect of the noise in the dictionary is even more clear for sentence pairs with few words, such as Figure 14, example 6.</S>
    <S sid="296" ssid="16">The sentences in that example are tables of soccer team statistics.</S>
    <S sid="297" ssid="17">They are judged parallel because corresponding digits align to each other, and according to our dictionary, the Arabic word for &#8220;Mexico&#8221; can be translated as any of the country names listed in the example.</S>
    <S sid="298" ssid="18">These examples also show that the problem of finding only true translation pairs is hard.</S>
    <S sid="299" ssid="19">Two sentences may share many content words and yet express different meanings (see Figure 14, example 1).</S>
    <S sid="300" ssid="20">However, our task of getting useful MT training data does not require a perfect solution; as we have seen, even such noisy training pairs can help improve a translation system&#8217;s performance.</S>
  </SECTION>
  <SECTION title="8." number="9">
    <S sid="301" ssid="1">While there is a large body of work on bilingual comparable corpora, most of it is focused on learning word translations (Fung and Yee 1998; Rapp 1999; Diab and Finch 2000; Koehn and Knight 2000; Gaussier et al. 2004).</S>
    <S sid="302" ssid="2">We are aware of only three previous efforts aimed at discovering parallel sentences.</S>
    <S sid="303" ssid="3">Zhao and Vogel (2002) describe a generative model for discovering parallel sentences in the Xinhua News ChineseEnglish corpus.</S>
    <S sid="304" ssid="4">Utiyama et. al (2003) use cross-language information retrieval techniques and dynamic programming to extract sentences from an English-Japanese comparable corpus.</S>
    <S sid="305" ssid="5">Fung and Cheung (2004) present an extraction method similar to ours but focus on &#8220;very-non-parallel corpora,&#8221; aggregations of Chinese and English news stories from different sources and time periods.</S>
    <S sid="306" ssid="6">The first two systems extend algorithms designed to perform sentence alignment of parallel texts.</S>
    <S sid="307" ssid="7">They start by attempting to identify similar article pairs from the two corpora.</S>
    <S sid="308" ssid="8">Then they treat each of those pairs as parallel texts and align their sentences by defining a sentence pair similarity score and use dynamic programming to find the least-cost alignment over the whole document pair.</S>
    <S sid="309" ssid="9">In the article pair selection stage, the researchers try to identify, for an article in one language, the best matching article in the other language.</S>
    <S sid="310" ssid="10">Zhao and Vogel (2002) measure article similarity by defining a generative model in which an English story generates a Chinese story with a given probability.</S>
    <S sid="311" ssid="11">Utiyama et al. (2003) use the BM25 (Robertson and Walker 1994) similarity measure.</S>
    <S sid="312" ssid="12">The two works also differ in the way they define the sentence similarity score.</S>
    <S sid="313" ssid="13">Zhao and Vogel (2002) combine a sentence length model with an IBM Model 1-type translation model.</S>
    <S sid="314" ssid="14">Utiyama et al. (2003) define a score based on word overlap (i.e., number of word pairs from the two sentences that are translations of each other), which also includes the similarity score of the article pair from which the sentence pair originates.</S>
    <S sid="315" ssid="15">The performance of these approaches depends heavily on the ability to reliably find similar document pairs.</S>
    <S sid="316" ssid="16">Moreover, comparable article pairs, even those similar in content, may exhibit great differences at the sentence level (reorderings, additions, etc).</S>
    <S sid="317" ssid="17">Therefore, they pose hard problems for the dynamic programming alignment approach.</S>
    <S sid="318" ssid="18">In contrast, our method is more robust.</S>
    <S sid="319" ssid="19">The document pair selection part plays a minor role; it only acts as a filter.</S>
    <S sid="320" ssid="20">We do not attempt to find the best-matching English document for each foreign one, but rather a set of similar documents.</S>
    <S sid="321" ssid="21">And, most importantly, we are able to reliably judge each sentence pair in isolation, without need for context.</S>
    <S sid="322" ssid="22">On the other hand, the dynamic programming approach enables discovery of many-to-one sentence alignments, whereas our method is limited to finding one-toone alignments.</S>
    <S sid="323" ssid="23">The approach of Fung and Cheung (2004) is a simpler version of ours.</S>
    <S sid="324" ssid="24">They match each foreign document with a set of English documents, using a threshold on their cosine similarity.</S>
    <S sid="325" ssid="25">Then, from each document pair, they generate all possible sentence pairs, compute their cosine similarity, and apply another threshold in order to select the ones that are parallel.</S>
    <S sid="326" ssid="26">Using the set of extracted sentences, they learn a new dictionary, try to extend their set of matching document pairs (by looking for other documents that contain these sentences), and iterate.</S>
    <S sid="327" ssid="27">The evaluation methodologies of these previous approaches are less direct than ours.</S>
    <S sid="328" ssid="28">Utiyama et al. (2003) evaluate their sentence pairs manually; they estimate that about 90% of the sentence pairs in their final corpus are parallel.</S>
    <S sid="329" ssid="29">Fung and Cheung (2004) also perform a manual evaluation of the extracted sentences and estimate their precision to be 65.7% after bootstrapping.</S>
    <S sid="330" ssid="30">In addition, they also estimate the quality of a lexicon automatically learned from those sentences.</S>
    <S sid="331" ssid="31">Zhao and Vogel (2002) go one step further and show that the sentences extracted with their method improve the accuracy of automatically computed word alignments, to an F-score of 52.56% over a baseline of 46.46%.</S>
    <S sid="332" ssid="32">In a subsequent publication, Vogel (2003) evaluates these sentences in the context of an MT system and shows that they bring improvement under special circumstances (i.e., a language model constructed from reference translations) designed to reduce the noise introduced by the automatically extracted corpus.</S>
    <S sid="333" ssid="33">We go even further and demonstrate that our method can extract data that improves end-to-end MT performance without any special processing.</S>
    <S sid="334" ssid="34">Moreover, we show that our approach works even when only a limited amount of initial parallel data (i.e., a low-coverage dictionary) is available.</S>
    <S sid="335" ssid="35">The problem of aligning sentences in comparable corpora was also addressed for monolingual texts.</S>
    <S sid="336" ssid="36">Barzilay and Elhadad (2003) present a method of aligning sentences in two comparable English corpora for the purpose of building a training set of text-totext rewriting examples.</S>
    <S sid="337" ssid="37">Monolingual parallel sentence detection presents a particular challenge: there are many sentence pairs that have low lexical overlap but are nevertheless parallel.</S>
    <S sid="338" ssid="38">Therefore pairs cannot be judged in isolation, and context becomes an important factor.</S>
    <S sid="339" ssid="39">Barzilay and Elhadad (2003) make use of contextual information by detecting the topical structure of the articles in the two corpora and aligning them at paragraph level based on the topic assigned to each paragraph.</S>
    <S sid="340" ssid="40">Afterwards, they proceed and align sentences within paragraph pairs using dynamic programming.</S>
    <S sid="341" ssid="41">Their results show that both the induced topical structure and the paragraph alignment improve the precision of their extraction method.</S>
    <S sid="342" ssid="42">A line of research that is both complementary and related to ours is that of Resnik and Smith (2003).</S>
    <S sid="343" ssid="43">Their STRAND Web-mining system has a purpose that is similar to ours: to identify translational pairs.</S>
    <S sid="344" ssid="44">However, STRAND focuses on extracting pairs of parallel Web pages rather than sentences.</S>
    <S sid="345" ssid="45">Resnik and Smith (2003) show that their approach is able to find large numbers of similar document pairs.</S>
    <S sid="346" ssid="46">Their system is potentially a good way of acquiring comparable corpora from the Web that could then be mined for parallel sentences using our method.</S>
  </SECTION>
  <SECTION title="9." number="10">
    <S sid="347" ssid="1">The most important feature of our parallel sentence selection approach is its robustness.</S>
    <S sid="348" ssid="2">Comparable corpora are inherently noisy environments, where even similar content may be expressed in very different ways.</S>
    <S sid="349" ssid="3">Moreover, out-of-domain corpora introduce additional difficulties related to limited dictionary coverage.</S>
    <S sid="350" ssid="4">Therefore, the ability to reliably judge sentence pairs in isolation is crucial.</S>
    <S sid="351" ssid="5">Comparable corpora of interest are usually of large size; thus, processing them requires efficient algorithms.</S>
    <S sid="352" ssid="6">The computational processes involved in our system are quite modest.</S>
    <S sid="353" ssid="7">All the operations necessary for the classification of a sentence pair (filter, word alignment computation, and feature extraction) can be implemented efficiently and scaled up to very large amounts of data.</S>
    <S sid="354" ssid="8">The task can be easily parallelized for increased speed.</S>
    <S sid="355" ssid="9">For example, extracting data from 600k English documents and 500k Chinese documents (Section 4.2) required only about 7 days of processing time on 10 processors.</S>
    <S sid="356" ssid="10">The data that we extract is useful.</S>
    <S sid="357" ssid="11">Its impact on MT performance is comparable to that of human-translated data of similar size and domain.</S>
    <S sid="358" ssid="12">Thus, although we have focused our experiments on the particular scenario where there is little in-domain training data available, we believe that our method can be useful for increasing the amount of training data, regardless of the domain of interest.</S>
    <S sid="359" ssid="13">As we have shown, this could be particularly effective for language pairs for which only very small amounts of parallel data are available.</S>
    <S sid="360" ssid="14">By acquiring a large comparable corpus and performing a few bootstrapping iterations, we can obtain a training corpus that yields a competitive MT system.</S>
    <S sid="361" ssid="15">We suspect our approach can be used on comparable corpora coming from any domain.</S>
    <S sid="362" ssid="16">The only domain-dependent element of the system is the date window parameter of the article selection stage (Figure 7); for other domains, this can be replaced with a more appropriate indication of where the parallel sentences are likely to be found.</S>
    <S sid="363" ssid="17">For example, if the domain were that of technical manuals, one would cluster printer manuals and aircraft manuals separately.</S>
    <S sid="364" ssid="18">It is important to note that our work assumes that the comparable corpus does contain parallel sentences (which is the case for our data).</S>
    <S sid="365" ssid="19">Whether this is true for comparable corpora from other domains is an empirical question outside the scope of this article; however, both our results and those of Resnik and Smith (2003) strongly indicate that good data is available on the Web.</S>
    <S sid="366" ssid="20">Lack of parallel corpora is a major bottleneck in the development of SMT systems for most language pairs.</S>
    <S sid="367" ssid="21">The method presented in this paper is a step towards the important goal of automatic acquisition of such corpora.</S>
    <S sid="368" ssid="22">Comparable texts are available on the Web in large quantities for many language pairs and domains.</S>
    <S sid="369" ssid="23">In this article, we have shown how they can be efficiently mined for parallel sentences.</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="11">
    <S sid="370" ssid="1">This work was supported by DARPA-ITO grant NN66001-00-1-9814 and NSF grant IIS-0326276.</S>
    <S sid="371" ssid="2">The experiments were run on University of Southern California&#8217;s high-performance computer cluster HPC (http://www.usc.edu/hpcc).</S>
    <S sid="372" ssid="3">We would like to thank Hal Daum&#180;e III, Alexander Fraser, Radu Soricut, as well as the anonymous reviewers, for their helpful comments.</S>
    <S sid="373" ssid="4">Any remaining errors are of course our own.</S>
  </SECTION>
</PAPER>
