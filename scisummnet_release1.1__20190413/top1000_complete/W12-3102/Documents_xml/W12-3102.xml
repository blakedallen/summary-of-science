<PAPER>
  <S sid="0">Findings of the 2012 Workshop on Statistical Machine Translation</S>
  <ABSTRACT>
    <S sid="1" ssid="1">This paper presents the results of the WMT12 shared tasks, which included a translation task, a task for machine translation evaluation metrics, and a task for run-time estimation of machine translation quality.</S>
    <S sid="2" ssid="2">We conducted a large-scale manual evaluation of 103 machine translation systems submitted by 34 teams.</S>
    <S sid="3" ssid="3">We used the ranking of these systems to measure how strongly automatic metrics correlate with human judgments of translation quality for 12 evaluation metrics.</S>
    <S sid="4" ssid="4">We introduced a new quality estimation task this year, and evaluated submissions from 11 teams.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">This paper presents the results of the shared tasks of the Workshop on statistical Machine Translation (WMT), which was held at NAACL 2012.</S>
    <S sid="6" ssid="2">This workshop builds on six previous WMT workshops (Koehn and Monz, 2006; Callison-Burch et al., 2007; Callison-Burch et al., 2008; Callison-Burch et al., 2009; Callison-Burch et al., 2010; CallisonBurch et al., 2011).</S>
    <S sid="7" ssid="3">In the past, the workshops have featured a number of shared tasks: a translation task between English and other languages, a task for automatic evaluation metrics to predict human judgments of translation quality, and a system combination task to get better translation quality by combining the outputs of multiple translation systems.</S>
    <S sid="8" ssid="4">This year we discontinued the system combination task, and introduced a new task in its place: ficulty is not uniform across all input types.</S>
    <S sid="9" ssid="5">It would thus be useful to have some measure of confidence in the quality of the output, which has potential usefulness in a range of settings, such as deciding whether output needs human post-editing or selecting the best translation from outputs from a number of systems.</S>
    <S sid="10" ssid="6">This shared task focused on sentence-level estimation, and challenged participants to rate the quality of sentences produced by a standard Moses translation system on an EnglishSpanish news corpus in one of two tasks: ranking and scoring.</S>
    <S sid="11" ssid="7">Predictions were scored against a blind test set manually annotated with relevant quality judgments.</S>
    <S sid="12" ssid="8">The primary objectives of WMT are to evaluate the state of the art in machine translation, to disseminate common test sets and public training data with published performance numbers, and to refine evaluation methodologies for machine translation.</S>
    <S sid="13" ssid="9">As with previous workshops, all of the data, translations, and collected human judgments are publicly available.1 We hope these datasets form a valuable resource for research into statistical machine translation, system combination, and automatic evaluation or automatic prediction of translation quality.</S>
    <S sid="14" ssid="10">2 Overview of the Shared Translation Task The recurring task of the workshop examines translation between English and four other languages: German, Spanish, French, and Czech.</S>
    <S sid="15" ssid="11">We created a test set for each language pair by translating newspaper articles.</S>
    <S sid="16" ssid="12">We additionally provided training data and two baseline systems.</S>
    <S sid="17" ssid="13">The test data for this year&#8217;s task was created by hiring people to translate news articles that were drawn from a variety of sources from November 15, 2011.</S>
    <S sid="18" ssid="14">A total of 99 articles were selected, in roughly equal amounts from a variety of Czech, English, French, German, and Spanish news sites:2 Czech: Blesk (1), CTK (1), E15 (1), den&#180;&#305;k (4), iDNES.cz (3), iHNed.cz (3), Ukacko (2), Zheny (1) French: Canoe (3), Croix (3), Le Devoir (3), Les Echos (3), Equipe (2), Le Figaro (3), Liberation (3) Spanish: ABC.es (4), Milenio (4), Noroeste (4), Nacion (3), El Pais (3), El Periodico (3), Prensa Libre (3), El Universal (4) English: CNN (3), Fox News (2), Los Angeles Times (3), New York Times (3), Newsweek (1), Time (3), Washington Post (3) German: Berliner Kurier (1), FAZ (3), Giessener Allgemeine (2), Morgenpost (3), Spiegel (3), Welt (3) The translations were created by the professional translation agency CEET.3 All of the translations were done directly, and not via an intermediate language.</S>
    <S sid="19" ssid="15">Although the translations were done professionally, we observed a number of errors.</S>
    <S sid="20" ssid="16">These errors ranged from minor typographical mistakes (I was terrible... instead of It was terrible... ) to more serious errors of incorrect verb choices and nonsensical constructions.</S>
    <S sid="21" ssid="17">An example of the latter is the French sentence (translated from German): Il a gratt&#180;e une planche de b&#180;eton, perdit des pi`eces du v&#180;ehicule.</S>
    <S sid="22" ssid="18">(He scraped against a concrete crash barrier and lost parts of the car.)</S>
    <S sid="23" ssid="19">Here, the French verb gratter is incorrect, and the phrase planche de b&#180;eton does not make any sense.</S>
    <S sid="24" ssid="20">We did not quantify errors, but collected a number of examples during the course of the manual evaluation.</S>
    <S sid="25" ssid="21">These errors were present in the data available to all the systems and therefore did not bias the results, but we suggest that next year a manual review of the professionally-collected translations be taken prior to releasing the data in order to correct mistakes and provide feedback to the translation agency.</S>
    <S sid="26" ssid="22">As in past years we provided parallel corpora to train translation models, monolingual corpora to train language models, and development sets to tune system parameters.</S>
    <S sid="27" ssid="23">Some statistics about the training materials are given in Figure 1.</S>
    <S sid="28" ssid="24">We received submissions from 34 groups across 18 institutions.</S>
    <S sid="29" ssid="25">The participants are listed in Table 1.</S>
    <S sid="30" ssid="26">We also included two commercial off-the-shelf MT systems, three online statistical MT systems, and three online rule-based MT systems.</S>
    <S sid="31" ssid="27">Not all systems supported all language pairs.</S>
    <S sid="32" ssid="28">We note that the eight companies that developed these systems did not submit entries themselves, but were instead gathered by translating the test data via their interfaces (web or PC).4 They are therefore anonymized in this paper.</S>
    <S sid="33" ssid="29">The data used to construct these systems is not subject to the same constraints as the shared task participants.</S>
    <S sid="34" ssid="30">It is possible that part of the reference translations that were taken from online news sites could have been included in the systems&#8217; models, for instance.</S>
    <S sid="35" ssid="31">We therefore categorize all commercial systems as unconstrained when evaluating the results.</S>
  </SECTION>
  <SECTION title="3 Human Evaluation" number="2">
    <S sid="36" ssid="1">As with past workshops, we placed greater emphasis on the human evaluation than on the automatic evaluation metric scores.</S>
    <S sid="37" ssid="2">It is our contention that automatic measures are an imperfect substitute for human assessment of translation quality.</S>
    <S sid="38" ssid="3">Therefore, we define the manual evaluation to be primary, and distinct words (case-insensitive) is based on the provided tokenizer. use the human judgments to validate automatic metrics.</S>
    <S sid="39" ssid="4">Manual evaluation is time consuming, and it requires a large effort to conduct on the scale of our workshop.</S>
    <S sid="40" ssid="5">We distributed the workload across a number of people, beginning with shared-task participants and interested volunteers.</S>
    <S sid="41" ssid="6">This year, we also opened up the evaluation to non-expert annotators hired on Amazon Mechanical Turk (CallisonBurch, 2009).</S>
    <S sid="42" ssid="7">To ensure that the Turkers provided high quality annotations, we used controls constructed from the machine translation ranking tasks from prior years.</S>
    <S sid="43" ssid="8">Control items were selected such that there was high agreement across the system developers who completed that item.</S>
    <S sid="44" ssid="9">In all, there were 229 people who participated in the manual evaluation, with 91 workers putting in more than an hour&#8217;s worth of effort, and 21 putting in more than four hours.</S>
    <S sid="45" ssid="10">After filtering Turker rankings against the controls to discard Turkers who fell below a threshold level of agreement on the control questions, there was a collective total of 336 hours of usable labor.</S>
    <S sid="46" ssid="11">This is similar to the total of 361 hours of labor collected for WMT11.</S>
    <S sid="47" ssid="12">We asked annotators to evaluate system outputs by ranking translated sentences relative to each other.</S>
    <S sid="48" ssid="13">This was our official determinant of translation quality.</S>
    <S sid="49" ssid="14">The total number of judgments collected for each of the language pairs is given in Table 2.</S>
    <S sid="50" ssid="15">Ranking translations relative to each other is a reasonably intuitive task.</S>
    <S sid="51" ssid="16">We therefore kept the instructions simple: You are shown a source sentence followed by several candidate translations.</S>
    <S sid="52" ssid="17">Your task is to rank the translations from best to worst (ties are allowed).</S>
    <S sid="53" ssid="18">Each screen for this task involved judging translations of three consecutive source segments.</S>
    <S sid="54" ssid="19">For each source segment, the annotator was shown the outputs of five submissions, and asked to rank them.</S>
    <S sid="55" ssid="20">We refer to each of these as ranking tasks or sometimes blocks.</S>
    <S sid="56" ssid="21">Every language task had more than five participating systems &#8212; up to a maximum of 16 for the German-English task.</S>
    <S sid="57" ssid="22">Rather than attempting to get a complete ordering over the systems in each ranking task, we instead relied on random selection and a reasonably large sample size to make the comparisons fair.</S>
    <S sid="58" ssid="23">We use the collected rank labels to assign each system a score that reflects how highly that system was usually ranked by the annotators.</S>
    <S sid="59" ssid="24">The score for some system A reflects how frequently it was judged to be better than other systems.</S>
    <S sid="60" ssid="25">Specifically, each block in which A appears includes four implicit pairwise comparisons (against the other presented systems).</S>
    <S sid="61" ssid="26">A is rewarded once for each of the four comparisons in which A wins, and its score is the number of such winning pairwise comparisons, divided by the total number of non-tying pairwise comparisons involving A.</S>
    <S sid="62" ssid="27">This scoring metric is different from that used in prior years in two ways.</S>
    <S sid="63" ssid="28">First, the score previously included ties between system rankings.</S>
    <S sid="64" ssid="29">In that case, the score for A reflected how often A was rated as better than or equal to other systems, and was normalized by all comparisons involving A.</S>
    <S sid="65" ssid="30">However, this approach unfairly rewards systems that are similar (and likely to be ranked as tied).</S>
    <S sid="66" ssid="31">This is problematic since many of the systems use variations of the same underlying decoder (Bojar et al., 2011).</S>
    <S sid="67" ssid="32">A second difference is that this year we no longer include comparisons against reference translations.</S>
    <S sid="68" ssid="33">In the past, reference translations were included among the systems to be ranked as controls, and the pairwise comparisons were used in determining the best system.</S>
    <S sid="69" ssid="34">However, workers have a very clear preference for reference translations, so including them unduly penalized systems that, through (un)luck of the draw, were pitted against the references more often.</S>
    <S sid="70" ssid="35">These changes are part of a broader discussion of the best way to produce the system ranking, which we discuss at length in Section 4.</S>
    <S sid="71" ssid="36">The system scores are reported in Section 3.3.</S>
    <S sid="72" ssid="37">Appendix A provides detailed tables that contain pairwise head-to-head comparisons between pairs of systems.</S>
    <S sid="73" ssid="38">Each year we calculate the inter- and intra-annotator agreement for the human evaluation, since a reasonable degree of agreement must exist to support our process as a valid evaluation setup.</S>
    <S sid="74" ssid="39">To ensure we had enough data to measure agreement, we occasionally showed annotators items that were repeated from previously completed items.</S>
    <S sid="75" ssid="40">These repeated items were drawn from ones completed by the same annotator and from different annotators.</S>
    <S sid="76" ssid="41">We measured pairwise agreement among annotators using Cohen&#8217;s kappa coefficient (n) (Cohen, 1960), which is defined as where P(A) is the proportion of times that the annotators agree, and P(E) is the proportion of time that they would agree by chance.</S>
    <S sid="77" ssid="42">Note that n is basically a normalized version of P(A), one which takes into account how meaningful it is for annotators to agree with each other, by incorporating P(E).</S>
    <S sid="78" ssid="43">Note also that n has a value of at most 1 (and could possibly be negative), with higher rates of agreement resulting in higher n. We calculate P(A) by examining all pairs of systems which had been judged by two or more judges, and calculating the proportion of time that they agreed that A &gt; B, A = B, or A &lt; B.</S>
    <S sid="79" ssid="44">In other words, P(A) is the empirical, observed rate at which annotators agree, in the context of pairwise comparisons.</S>
    <S sid="80" ssid="45">P(A) is computed similarly for intraannotator agreement (i.e. self-consistency), but over pairwise comparisons that were annotated more than once by a single annotator.</S>
    <S sid="81" ssid="46">As for P(E), it should capture the probability that two annotators would agree randomly.</S>
    <S sid="82" ssid="47">Therefore: Note that each of the three probabilities in P(E)&#8217;s definition are squared to reflect the fact that we are considering the chance that two annotators would agree by chance.</S>
    <S sid="83" ssid="48">Each of these probabilities is computed empirically, by observing how often annotators actually rank two systems as being tied.</S>
    <S sid="84" ssid="49">We note here that this empirical computation is a departure from previous years&#8217; analyses, where we had assumed that the three categories are equally likely (yielding P(E) = 19 + 19 + 19 = 1&#65533;).</S>
    <S sid="85" ssid="50">We believe that this is a more principled approach, which faithfully reflects the motivation of accounting for P(E) in the first place.</S>
    <S sid="86" ssid="51">Table 3 gives n values for inter-annotator and intra-annotator agreement.</S>
    <S sid="87" ssid="52">These give an indication of how often different judges agree, and how often single judges are consistent for repeated judgments, respectively.</S>
    <S sid="88" ssid="53">The exact interpretation of the kappa coefficient is difficult, but according to Landis and Koch (1977), 0 &#8722; 0.2 is slight, 0.2 &#8722; 0.4 is fair, 0.4 &#8722; 0.6 is moderate, 0.6 &#8722; 0.8 is substantial, and 0.8 &#8722; 1.0 is almost perfect.</S>
    <S sid="89" ssid="54">Based on these interpretations, the agreement for sentencelevel ranking is fair for inter-annotator and moderate for intra-annotator agreement.</S>
    <S sid="90" ssid="55">Consistent with previous years, intra-annotator agreement is higher than inter-annotator agreement, except for English&#8211; Czech.</S>
    <S sid="91" ssid="56">An important difference from last year is that the evaluations were not constrained only to workshop participants, but were made available to all Turkers.</S>
    <S sid="92" ssid="57">The workshop participants were trusted to complete the tasks in good faith, and we have multiple years of data establishing general levels of inter- and intra-annotator agreement.</S>
    <S sid="93" ssid="58">Their HITs were unpaid, and access was limited with the use of a qualification.</S>
    <S sid="94" ssid="59">The Turkers completed paid tasks, and we used controls to filter out fraudulent and unconscientious workers.</S>
    <S sid="95" ssid="60">Agreement rates vary widely across languages.</S>
    <S sid="96" ssid="61">For inter-annotator agreements, the range is 0.176 to 0.336, while intra-annotator agreement ranges from 0.279 to 0.648.</S>
    <S sid="97" ssid="62">We note in particular the low agreement rates among judgments in the English-Spanish task, which is reflected in the relative lack of statistical significance Table 4.</S>
    <S sid="98" ssid="63">The agreement rates for this year were somewhat lower than last year.</S>
    <S sid="99" ssid="64">We used the results of the manual evaluation to analyze the translation quality of the different systems that were submitted to the workshop.</S>
    <S sid="100" ssid="65">In our analysis, we aimed to address the following questions: Table 4 shows the system ranking for each of the translation tasks.</S>
    <S sid="101" ssid="66">For each language pair, we define a system as &#8216;winning&#8217; if no other system was found statistically significantly better (using the Sign Test, at p &lt; 0.10).</S>
    <S sid="102" ssid="67">In some cases, multiple systems are listed as winners, either due to a large number of participants or a low number of judgments per system pair, both of which are factors that make it difficult to achieve statistical significance.</S>
    <S sid="103" ssid="68">As in prior years, unconstrained online systems A and B are among the best for many tasks, with a few notable exceptions.</S>
    <S sid="104" ssid="69">CU-DEPFIX, which postprocesses the output of ONLINE-B, was judged as the best system for English-Czech.</S>
    <S sid="105" ssid="70">For the FrenchEnglish and English-French tasks, constrained systems came out on top, with LIMSI appearing both times.</S>
    <S sid="106" ssid="71">Consistent with prior years, the rule-based systems performed very well on the English-German task.</S>
    <S sid="107" ssid="72">A rule-based system also had a good showing for English-Spanish, but not really anywhere else.</S>
    <S sid="108" ssid="73">Among the systems competing in all tasks, no single system consistently appeared among the top entrants.</S>
    <S sid="109" ssid="74">Participants that competed in all tasks tended to fair worse, with the exception of UEDIN.</S>
    <S sid="110" ssid="75">Additionally, KIT appeared in four tasks and was a constrained winner each time.</S>
  </SECTION>
  <SECTION title="4 Methods for Overall Ranking" number="3">
    <S sid="111" ssid="1">Last year one of the long papers published at WMT criticized our method for compiling the overall ranking for systems in the translation task (Bojar et al., 2011).</S>
    <S sid="112" ssid="2">This year another paper shows some additional potential inconsistencies in the rankings (Lopez, 2012).</S>
    <S sid="113" ssid="3">In this section we delve into a detailed analysis of a variety of methods that use the human evaluation to create an overall ranking of systems.</S>
    <S sid="114" ssid="4">In the human evaluation, we collect ranking judgments for output from five systems at a time.</S>
    <S sid="115" ssid="5">We in5 2 4) pairwise judgments over terpret them as 10 &#8226; ( systems and use these to analyze how each system faired compared against each of the others.</S>
    <S sid="116" ssid="6">Not all pairwise comparisons detect statistical significantly superior quality of either system, and we note this accordingly.</S>
    <S sid="117" ssid="7">It is desirable to additionally produce an overall ranking.</S>
    <S sid="118" ssid="8">In the past evaluation campaigns, we used two different methods to obtain such a ranking, and this year we use yet another one.</S>
    <S sid="119" ssid="9">In this section, we discuss each of these overall ranking methods and a few more.</S>
    <S sid="120" ssid="10">In the first human evaluation, we use fluency and adequacy judgments on a scale from 1 to 5 (Koehn and Monz, 2006).</S>
    <S sid="121" ssid="11">We normalized the scores on a per-sentence basis, thus converting them to a relative ranking in a 5-system comparison.</S>
    <S sid="122" ssid="12">We listed systems by the average of these scores over all sentences, in which they were judged.</S>
    <S sid="123" ssid="13">We did not report ranks, but rank ranges.</S>
    <S sid="124" ssid="14">To give an example: if a system scored neither statistically significantly better nor statistically significantly worse than 3 other systems, we assign it the rank range 1&#8211;4.</S>
    <S sid="125" ssid="15">The given evidence is not sufficient to rank it exactly, but it does rank somewhere in the top 4.</S>
    <S sid="126" ssid="16">In subsequent years, we did not continue the reporting of rank ranges (although they can be obtained by examining the pairwise comparison tables), but we continued to report systems as winners whenever there was not statistically significantly outperformed by any other system.</S>
    <S sid="127" ssid="17">In the following years (Callison-Burch et al., 2007; Callison-Burch et al., 2008; Callison-Burch et al., 2009; Callison-Burch et al., 2010; Callison-Burch et al., 2011), we abandoned the idea of using fluency and adequacy judgments, since they showed to be less reliable than simple ranking of system translations.</S>
    <S sid="128" ssid="18">We also started to interpret the 5-system comparison as a set of pairwise comparisons.</S>
    <S sid="129" ssid="19">Systems were then ranked by the ratio of how often they were ranked better or equal to any of the other systems.</S>
    <S sid="130" ssid="20">Given a set J of sentence-level judgments (s1, s2, c) where s1 E S and s2 E S are two systhen we can count the total number of wins and ties of a system s as and rank systems by the ratio This ratio was used for the official rankings over the last five years.</S>
    <S sid="131" ssid="21">Bojar et al. (2011) present a persuasive argument that our ranking scheme is biased towards systems that are similar to many other systems.</S>
    <S sid="132" ssid="22">Given that most of the systems are based on phrase-based models trained on the same training data, this is indeed a valid concern.</S>
    <S sid="133" ssid="23">They suggest ignoring ties, and using as ranking score instead the following ratio: Lopez (2012, in this volume) argues against using aggregate statistics over a set of very diverse judgments.</S>
    <S sid="134" ssid="24">Instead, a ranking that has the least number of pairwise ranking violations is said to be preferred.</S>
    <S sid="135" ssid="25">If we define the number of pairwise wins as then we define a count function for pairwise order violations as ranking of three systems as: Given a bijective ranking function R(s) &#8212;* i with the codomain of consecutive integers starting at 1, the total number of pairwise ranking violations is defined as Finding the optimal ranking R that minimizes this score is not trivial, but given the number of systems involved in this evaluation campaign, it is quite manageable.</S>
    <S sid="136" ssid="26">We now introduce a variant to Lopez&#8217;s ranking method.</S>
    <S sid="137" ssid="27">We motivate it first.</S>
    <S sid="138" ssid="28">Consider the following scenario: Since this constitutes a circle, there are three rankings with the minimum number of 20 violation (ABC, BCA, CAB).</S>
    <S sid="139" ssid="29">However, we may want to take the ratio of wins and losses for each pairwise ranking into account.</S>
    <S sid="140" ssid="30">Using maximum likelihood estimation, we can define the probability that system s1 is better than system s2 on a randomly drawn sentence as This function scores the three rankings in the example above as follows: One disadvantage of this and the previous ranking method is that they do not take advantage of all available evidence.</S>
    <S sid="141" ssid="31">Consider the example: Here, system A is clearly ahead, but how about B and C?</S>
    <S sid="142" ssid="32">They are tied in their pairwise comparison.</S>
    <S sid="143" ssid="33">So, both ABC and ACB have no pairwise ranking violations and their most probable ranking score, as defined above, is the same.</S>
    <S sid="144" ssid="34">B is clearly worse than A, but C has a fighting chance, and this should be reflected in the ranking.</S>
    <S sid="145" ssid="35">The following two overall ranking methods overcome this problem.</S>
    <S sid="146" ssid="36">The sports world is accustomed to the problem of finding a ranking of sports teams, but being only able to have pairwise competitions (think basketball or football).</S>
    <S sid="147" ssid="37">One strategy is to stage playoffs.</S>
    <S sid="148" ssid="38">Let&#8217;s say there are 4 systems: A, B, C, and D. As in well-known play-off fashion, they are first seeded.</S>
    <S sid="149" ssid="39">In our case, this happens randomly, say, 1:A, 2:B, 3:C, 4:D (for simplicity&#8217;s sake).</S>
    <S sid="150" ssid="40">First round: A plays against D, B plays against C. How do they play?</S>
    <S sid="151" ssid="41">We randomly select a sentence on which they were compared (no ties).</S>
    <S sid="152" ssid="42">If A is better according to human judgment than D, then A wins.</S>
    <S sid="153" ssid="43">Let&#8217;s say, A wins against D, and B loses against C. This leads us to the final A against C and the 3rd place game D against B, in which, say, A and D win.</S>
    <S sid="154" ssid="44">The resulting final ranking is ACDB.</S>
    <S sid="155" ssid="45">We repeat this a million times with a different random seeding every time, and compute the average rank, which is then used for overall ranking.</S>
    <S sid="156" ssid="46">In European national football competitions, each team plays against each other team, and at the end the number of wins decides the rankings.6 We can simulate this type of tournament as well with Monte Carlo methods.</S>
    <S sid="157" ssid="47">However, in the limit, each team will be on average ranked based on its expected number of wins in the competition.</S>
    <S sid="158" ssid="48">We can compute the expected number of wins straightforward as j Note that this is very similar to Bojar&#8217;s method of ranking systems, with one additional and important twist.</S>
    <S sid="159" ssid="49">We can rewrite Equation 4, the variant that ignores ties, as: The difference is that the new overall ranking method normalizes the win ratios per pairwise ranking.</S>
    <S sid="160" ssid="50">And this makes sense, since it overcomes one problem with our traditional and Bojar&#8217;s ranking method.</S>
    <S sid="161" ssid="51">Previously, some systems were put at an disadvantage, if they are compared more frequently against good systems than against bad systems.</S>
    <S sid="162" ssid="52">This could happen, if participants were not allowed to rank their own systems (a constraint we enforced in the past, but no longer).</S>
    <S sid="163" ssid="53">This was noticed by judges a few years ago, when we had instant reporting of rankings during the evaluation period.</S>
    <S sid="164" ssid="54">If you have one of the best systems and carry out a lot of human judgments, then competitors&#8217; systems will creep up higher, since they are not compared against your own (very good) system anymore, but more frequently against bad systems.</S>
    <S sid="165" ssid="55">Table 5 shows the different rankings for English&#8211; German, a rather typical example.</S>
    <S sid="166" ssid="56">The table displays the ranking of the systems according to five different methods, alongside with system scores according to the ranking method: the win ratio (Bojar), the average rank (MC Playoffs), and the expected win ratio (Expected Wins).</S>
    <S sid="167" ssid="57">For the latter, we performed bootstrap resampling and computed rank ranges that lie in a 95% confidence interval.</S>
    <S sid="168" ssid="58">You can find the tables for the other language pairs in the annex.</S>
    <S sid="169" ssid="59">The win-based methods (Bojar, MC Playoffs, Expected Wins) give very similar rankings &#8212; exhibiting mostly just the occasional pairwise flip or for many language pairs the ranking is identical.</S>
    <S sid="170" ssid="60">The same is true for the two methods based on pairwise rankings (Lopez, Most Probable).</S>
    <S sid="171" ssid="61">However, the two types of ranking lead to significantly different outcomes.</S>
    <S sid="172" ssid="62">For instance, the win-based methods are pretty sure that ONLINE-B and RBMT-3 are the two top performers.</S>
    <S sid="173" ssid="63">Bootstrap resampling of rankings according to Expected Wins ranking draws a clear line between them and the rest.</S>
    <S sid="174" ssid="64">However, Lopez&#8217;s method ranks RBMT-4 first.</S>
    <S sid="175" ssid="65">Why?</S>
    <S sid="176" ssid="66">In direct comparison of the three systems, RBMT-4 beats statistically insignificantly ONLINE-B 45% wins against 42% wins and essentially ties with RBMT-3 41% wins against 41% wins (ONLINE-B beats RBMT-3 49%&#8211;35%, p G 0.01).</S>
    <S sid="177" ssid="67">We use Bojar&#8217;s method as our official method for ranking in Table 4 and as the human judgments that we used when calculating how well automatic evaluation metrics correlate with human judgments.</S>
    <S sid="178" ssid="68">In general, there are not enough judgments to rank systems unambiguously.</S>
    <S sid="179" ssid="69">How many judgments do we need?</S>
    <S sid="180" ssid="70">We may extrapolate this number from the number of judgments we have.</S>
    <S sid="181" ssid="71">Figure 2 provides some hints.</S>
    <S sid="182" ssid="72">The outlier is Czech&#8211;English, for which only 6 systems were submitted and we can separate them almost completely even at p-level 0.01.</S>
    <S sid="183" ssid="73">For all the other language pairs, we can only draw for around 40% of the pairwise comparisons conclusions with that level of statistical significance.</S>
    <S sid="184" ssid="74">Since the plots also contains the ratio of significant conclusions when sub-sampling the number of judgments, we obtain curves with a clear upward slope.</S>
    <S sid="185" ssid="75">For English&#8211;Czech, for which we were able to collect much more judgments, we can draw over 60% significant conclusions.</S>
    <S sid="186" ssid="76">The curve for this language pair does not look much different than the other languages, suggesting that doubling the number of judgments should allow similar levels for them as well.</S>
  </SECTION>
  <SECTION title="5 Metrics Task" number="4">
    <S sid="187" ssid="1">In addition to allowing us to analyze the translation quality of different systems, the data gathered during the manual evaluation is useful for validating automatic evaluation metrics.</S>
    <S sid="188" ssid="2">Table 6 lists the participants in this task, along with their metrics.</S>
    <S sid="189" ssid="3">A total of 12 metrics and their variants were submitted to the metrics task by 8 research groups.</S>
    <S sid="190" ssid="4">We provided BLEU and TER scores as baselines.</S>
    <S sid="191" ssid="5">We asked metrics developers to score the outputs of the machine translation systems and system combinations at the system-level and at the segmentlevel.</S>
    <S sid="192" ssid="6">The system-level metrics scores are given in the Appendix in Tables 29&#8211;36.</S>
    <S sid="193" ssid="7">The main goal of the metrics shared task is not to score the systems, but instead to validate the use of automatic metrics by measuring how strongly they correlate with human judgments.</S>
    <S sid="194" ssid="8">We used the human judgments collected during the manual evaluation for the translation task and the system combination task to calculate how well metrics correlate at system-level and at the segment-level.</S>
    <S sid="195" ssid="9">We measured the correlation of the automatic metrics with the human judgments of translation quality at the system-level using Spearman&#8217;s rank correlation coefficient &#961;.</S>
    <S sid="196" ssid="10">We converted the raw scores assigned to each system into ranks.</S>
    <S sid="197" ssid="11">We assigned a human ranking to the systems based on the percent of time that their translations were judged to be better than the translations of any other system in the manual evaluation (Equation 4).</S>
    <S sid="198" ssid="12">When there are no ties, &#961; can be calculated using the simplified equation: System-level correlation for translations into English where di is the difference between the rank for systemi and n is the number of systems.</S>
    <S sid="199" ssid="13">The possible values of p range between 1(where all systems are ranked in the same order) and &#8722;1 (where the systems are ranked in the reverse order).</S>
    <S sid="200" ssid="14">Thus an automatic evaluation metric with a higher absolute value for p is making predictions that are more similar to the human judgments than an automatic evaluation metric with a lower absolute p. The system-level correlations are shown in Table 7 for translations into English, and Table 8 out of English, sorted by average correlation across the language pairs.</S>
    <S sid="201" ssid="15">The highest correlation for each language pair and the highest overall average are bolded.</S>
    <S sid="202" ssid="16">Once again this year, many of the metrics had stronger correlation with human judgments than BLEU.</S>
    <S sid="203" ssid="17">The metrics that had the strongest correlation this year were SEMPOS for the into English direction and SIMPBLEU for the out of English direction.</S>
    <S sid="204" ssid="18">We measured the metrics&#8217; segment-level scores with the human rankings using Kendall&#8217;s tau rank correSegment-level correlation for translations into English lation coefficient.</S>
    <S sid="205" ssid="19">We calculated Kendall&#8217;s tau as: num concordant pairs - num discordant pairs T = total pairs where a concordant pair is a pair of two translations of the same segment in which the ranks calculated from the same human ranking task and from the corresponding metric scores agree; in a discordant pair, they disagree.</S>
    <S sid="206" ssid="20">In order to account for accuracy- vs. error-based metrics correctly, counts of concordant vs. discordant pairs were calculated specific to these two metric types.</S>
    <S sid="207" ssid="21">The possible values of T range between 1 (where all pairs are concordant) and &#8722;1 (where all pairs are discordant).</S>
    <S sid="208" ssid="22">Thus an automatic evaluation metric with a higher value for T is making predictions that are more similar to the human judgments than an automatic evaluation metric with a lower T. We did not include cases where the human ranking was tied for two systems.</S>
    <S sid="209" ssid="23">As the metrics produce absolute scores, compared to five relative ranks in the human assessment, it would be potentially unfair to the metric to count a slightly different metric score as discordant with a tie in the relative human rankings.</S>
    <S sid="210" ssid="24">A tie in automatic metric rank for two translations was counted as discordant with two corresponding non-tied human judgments.</S>
    <S sid="211" ssid="25">The correlations are shown in Table 9 for translations into English, and Table 10 out of English, sorted by average correlation across the four language pairs.</S>
    <S sid="212" ssid="26">The highest correlation for each language pair and the highest overall average are bolded.</S>
    <S sid="213" ssid="27">For the into English direction SPEDE and METEOR tied for the highest segment-level correlation.</S>
    <S sid="214" ssid="28">METEOR performed the best for the out of English direction, with AMBER doing admirably well in both the into- and the out-of-English directions.</S>
  </SECTION>
  <SECTION title="6 Quality Estimation task" number="5">
    <S sid="215" ssid="1">Quality estimation aims to provide a quality indicator for machine translated sentences at various granularity levels.</S>
    <S sid="216" ssid="2">It differs from MT evaluation, because quality estimation techniques do not rely on reference translations.</S>
    <S sid="217" ssid="3">Instead, quality estimation is generally addressed using machine learning techniques to predict quality scores.</S>
    <S sid="218" ssid="4">Potential applications of quality estimation include: This shared-task provides a first common ground for development and comparison of quality estimation systems, focusing on sentence-level estimation.</S>
    <S sid="219" ssid="5">It provides training and test datasets, along with evaluation metrics and a baseline system.</S>
    <S sid="220" ssid="6">The goals of this shared task are: The task provides datasets for a single language pair, text domain and MT system: English-Spanish news texts produced by a phrase-based SMT system (Moses) trained on Europarl and News Commentaries corpora provided in the WMT10 translation task.</S>
    <S sid="221" ssid="7">As training data, translations were manually annotated for quality in terms of post-editing effort (1-5 scores) and were provided together with their source sentences, reference translations, and post-edited translations (Section 6.1).</S>
    <S sid="222" ssid="8">The sharedtask consisted on automatically producing qualityestimations for a blind test-set, where English source sentences and their MT-translations were used as inputs.</S>
    <S sid="223" ssid="9">Hidden (and subsequently publicly-released) manual effort-annotations of those translations (obtained in the same fashion as for the training data) were used as reference labels to evaluate the performance of the participating systems (Section 6.1).</S>
    <S sid="224" ssid="10">Participants also had full access to the translation engine-related resources (Section 6.1) and could use any additional external resources.</S>
    <S sid="225" ssid="11">We have also provided a software package to extract baseline quality estimation features (Section 6.3).</S>
    <S sid="226" ssid="12">Participants could submit up to two systems for two variations of the task: ranking, where participants submit a ranking of translations (no ties allowed), without necessarily giving any explicit scores for translations, and scoring, where participants submit a score for each sentence (in the [1,5] range).</S>
    <S sid="227" ssid="13">Each of these subtasks is evaluated using specific metrics (Section 6.2).</S>
    <S sid="228" ssid="14">The training data used was selected from data available from previous WMT shared-tasks for machine-translation: a subset of the WMT10 English-Spanish test set, and a subset of the WMT09 English-Spanish test set, for a total of 1832 sentences.</S>
    <S sid="229" ssid="15">The training data consists of the following resources: The guidelines used by the PE-effort judges to assign scores 1-5 for each of the (source, MT-output, PE-output) triplets are the following: [1] The MT output is incomprehensible, with little or no information transferred accurately.</S>
    <S sid="230" ssid="16">It cannot be edited, needs to be translated from scratch.</S>
    <S sid="231" ssid="17">Providing reliable effort estimates turned out to be a difficult task for the PE-effort judges, even in the current set-up (with post edited outputs available for consultation).</S>
    <S sid="232" ssid="18">To eliminate some of the noise from these judgments, we performed an intermediate cleaning step, in which we eliminated the sentences for which the difference between the maximum score and the minimum score assigned between the three judges was &gt; 1.</S>
    <S sid="233" ssid="19">We started the data-creation process from a total of 2000 sentences for the training set, and the final 1832 sentences we selected as training data were the ones that passed through this intermediate cleaning step.</S>
    <S sid="234" ssid="20">Besides score disagreement, we noticed another trend on the human judgements of PE-effort.</S>
    <S sid="235" ssid="21">Some judges tend to give more moderate scores (in the middle of available range), while others like to commit also to scores that are more in the extremes of the available range.</S>
    <S sid="236" ssid="22">Since the quality estimation task would be negatively influenced by having most of the scores in the middle of the range, we have chosen to compute the final effort scores as an weighted average between the three PE-effort scores, with more weight given to the judges with higher standard deviation from their own mean score.</S>
    <S sid="237" ssid="23">We have used weights 3, 2, and 1 for the three PE-effort judges according to this criterion.</S>
    <S sid="238" ssid="24">There is an additional advantage resulting from this weighted average score: instead of obtaining average numbers only at values x.0, x.33, and x.66 (for unweighted average)7, the weighted averages are spread more evenly in the range [1, 5].</S>
    <S sid="239" ssid="25">A few variations of the training data were provided, including version with cases restored and a version detokenized.</S>
    <S sid="240" ssid="26">In addition, engine-internal information from Moses such as phrase and word alignments, detailed model scores, etc.</S>
    <S sid="241" ssid="27">(parameter -trace), n-best lists and stack information from the search graph as a word graph (parameter -outputword-graph) as produced by the Moses engine were provided.</S>
    <S sid="242" ssid="28">The rationale behind releasing this engineinternal data was to make it possible for this sharedtask to address quality estimation using a glass-box approach, that is, making use of information from the internal workings of the MT engine.</S>
    <S sid="243" ssid="29">The test data was a subset of the WMT12 EnglishSpanish test set, consisting of 442 sentences.</S>
    <S sid="244" ssid="30">The test data consists of the following files: The first two files were the input for the qualityestimation shared-task participating systems.</S>
    <S sid="245" ssid="31">Since the Moses engine used to create the MT outputs was the same as the one used for generating the training data, the engine-internal resources are the same as the ones we released as part of the training data package.</S>
    <S sid="246" ssid="32">The effort scores were released after the participants submitted their shared-task submission, and were solely used to evaluate the submissions according to the established metrics.</S>
    <S sid="247" ssid="33">The guidelines used by the PE-effort judges to assign 1-5 scores were the same as the ones used for creating the training data.</S>
    <S sid="248" ssid="34">We have used the same criteria to ensure the consistency of the human judgments.</S>
    <S sid="249" ssid="35">The initial set of candidates consisted of 604 sentences, of which only 442 met this criteria.</S>
    <S sid="250" ssid="36">The final scores used as goldvalues have been obtained using the same weightedaverage scheme as for the training data.</S>
  </SECTION>
  <SECTION title="Resources" number="6">
    <S sid="251" ssid="1">In addition to the training and test materials, we made several additional resources that were used for the baseline QE system and/or the SMT system that produced the training and test datasets: For the ranking task, we defined a novel metric that provides some advantages over a more traditional ranking metrics like Spearman correlation.</S>
    <S sid="252" ssid="2">Our metric, called DeltaAvg, assumes that the reference test set has a number associated with each entry that represents its extrinsic value.</S>
    <S sid="253" ssid="3">For instance, using the effort scale we described in Section 6.1, we associate a value between 1 and 5 with each sentence, representing the quality of that sentence.</S>
    <S sid="254" ssid="4">Given these values, our metric does not need an explicit reference ranking, the way the Spearman ranking correlation does.9 The goal of the DeltaAvg metric is to measure how valuable a proposed ranking (which we call a hypothesis ranking) is according to the extrinsic values associated with the test entries.</S>
    <S sid="255" ssid="5">We first define a parameterized version of this metric, called DeltaAvg[n].</S>
    <S sid="256" ssid="6">The following notations are used: for a given entry sentence s, V (s) represents the function that associates an extrinsic value to that entry; we extend this notation to a set S, with V (S) representing the average of all V (s), s &#8712; S. Intuitively, V (S) is a quantitative measure of the &#8220;quality&#8221; of the set S, as induced by the extrinsic values associated with the entries in S. For a set of ranked entries S and a parameter n, we denote by S1 the first quantile of set S (the highest-ranked entries), S2 the second quantile, and so on, for n quantiles of equal sizes.10 We also use the notation Si,&#65533; = vk=i Sk.</S>
    <S sid="257" ssid="7">Using these notations, we define: quantile (top half) S1 and the overall quality (represented by V (S)).</S>
    <S sid="258" ssid="8">For n = 3, DeltaAvg[3] = (V (S1)+V (S1,2)/2&#8722;V (S) = ((V (S1)&#8722;V (S))+ (V (S1,2 &#8722; V (S)))/2, hence it measures an average difference across two cases: between the quality of the top quantile (top third) and the overall quality, and between the quality of the top two quantiles (S1 &#8746;S2, top two-thirds) and the overall quality.</S>
    <S sid="259" ssid="9">In general, DeltaAvg[n] measures an average difference in quality across n &#8722; 1 cases, with each case measuring the impact in quality of adding an additional quantile, from top to bottom.</S>
    <S sid="260" ssid="10">Finally, we define: where N = |S|/2.</S>
    <S sid="261" ssid="11">As before, we write DeltaAvg for DeltaAvgV when the valuation function V is clear from the context.</S>
    <S sid="262" ssid="12">The DeltaAvg metric is an average across all DeltaAvg[n] values, for those n values for which the resulting quantiles have at least 2 entries (no singleton quantiles).</S>
    <S sid="263" ssid="13">The DeltaAvg metric has some important properties that are desired for a ranking metric (see Section 6.4 for the results of the shared-task that substantiate these claims): DeltaAvgV [n] = En&#65533;1 V (S) (14) &#8226; it measures the quality of a hypothesis rankk=1 V (S1,k) ing from an extrinsic perspective (as offered by n &#8722; 1 function V ) When the valuation function V is clear from the context, we write DeltaAvg[n] for DeltaAvgV [n].</S>
    <S sid="264" ssid="14">The parameter n represents the number of quantiles we want to split the set S into.</S>
    <S sid="265" ssid="15">For instance, n = 2 gives DeltaAvg[2] = V (S1) &#8722; V (S), hence it measures the difference between the quality of the top In the rest of this paper, we present results for DeltaAvg using as valuation function V the PostEditing effort scores, as defined in Section 6.1.</S>
    <S sid="266" ssid="16">We also report the results of the ranking task using the more-traditional Spearman correlation.</S>
    <S sid="267" ssid="17">For the scoring task, we use two metrics that have been traditionally used for measuring performance for regression tasks: Mean Absolute Error (MAE) as a primary metric, and Root of Mean Squared Error (RMSE) as a secondary metric.</S>
    <S sid="268" ssid="18">For a given test set 5 with entries si71 &lt; i &lt; |5|, we denote by H(si) the proposed score for entry si (hypothesis), and by V (si) the reference value for entry si (gold-standard value).</S>
    <S sid="269" ssid="19">We formally define our metrics as follows: where N = |5|.</S>
    <S sid="270" ssid="20">Both these metrics are nonparametric, automatic and deterministic (and therefore consistent), and extrinsically interpretable.</S>
    <S sid="271" ssid="21">For instance, a MAE value of 0.5 means that, on average, the absolute difference between the hypothesized score and the reference score value is 0.5.</S>
    <S sid="272" ssid="22">The interpretation of RMSE is similar, with the difference that RMSE penalizes larger errors more (via the square function).</S>
    <S sid="273" ssid="23">Eleven teams (listed in Table 11) submitted one or more systems to the shared task, with most teams submitting for both ranking and scoring subtasks.</S>
    <S sid="274" ssid="24">Each team was allowed up to two submissions (for each subtask).</S>
    <S sid="275" ssid="25">In the descriptions below participation in the ranking is denoted (R) and scoring is denoted (S).</S>
    <S sid="276" ssid="26">Baseline system (R, S): the baseline system used the feature extraction software (also provided to all participants).</S>
    <S sid="277" ssid="27">It analyzed the source and translation files and the SMT training corpus to extract the following 17 system-independent features that were found to be relevant in previous work (Specia et al., 2009): These features are used to train a Support Vector Machine (SVM) regression algorithm using a radial basis function kernel with the LIBSVM package (Chang and Lin, 2011).</S>
    <S sid="278" ssid="28">They, E and C parameters were optimized using a grid-search and 5-fold cross validation on the training set.</S>
    <S sid="279" ssid="29">We note that although the system is referred to as a &#8220;baseline&#8221;, it is in fact a strong system.</S>
    <S sid="280" ssid="30">Although it is simple it has proved to be robust across a range of language pairs, MT systems, and text domains.</S>
    <S sid="281" ssid="31">It is a simpler variant of the system used in (Specia, 2011).</S>
    <S sid="282" ssid="32">The rationale behind having such a strong baseline was to push systems to exploit alternative sources of information and combination / learning approaches.</S>
    <S sid="283" ssid="33">SDLLW (R, S): Both systems use 3 sets of features: the 17 baseline features, 8 systemdependent features from the decoder logs of Moses, and 20 features developed internally.</S>
    <S sid="284" ssid="34">Some of these features made use of additional data and/or resources, such as a secondary MT system that was used as pseudo-reference for the hypothesis, and POS taggers for both languages.</S>
    <S sid="285" ssid="35">Feature-selection algorithms were used to select subsets of features that directly optimize the metrics used in the task.</S>
    <S sid="286" ssid="36">System &#8220;SDLLW M5PbestAvgDelta&#8221; uses a resulting 15-feature set optimized towards the AvgDelta metric.</S>
    <S sid="287" ssid="37">It employs an M5P model to learn a decision-tree with only two linear equations.</S>
    <S sid="288" ssid="38">System &#8220;SDLLW SVM&#8221; uses a 20-feature set and an SVM epsilon regression model with radial basis function kernel with parameters C, gamma, and epsilon tuned on a development set (305 training instances).</S>
    <S sid="289" ssid="39">The model was trained with 10-fold cross validation and the tuning process was restarted several times using different starting points and step sizes to avoid overfitting.</S>
    <S sid="290" ssid="40">The final model was selected based on its performance on the development set and the number of support vectors.</S>
    <S sid="291" ssid="41">UU (R, S): System &#8220;UU best&#8221; uses the 17 baseline features, plus 82 features from Hardmeier (2011) (with some redundancy and some overlap with baseline features), and constituency trees over input sentences generated by the Stanford parser and dependency trees over both input and output sentences generated by the MaltParser.</S>
    <S sid="292" ssid="42">System &#8220;UU bltk&#8221; uses only the 17 baseline features plus constituency and dependency trees as above.</S>
    <S sid="293" ssid="43">The machine learning component in both cases is SVM regression (SVMlight software).</S>
    <S sid="294" ssid="44">For the ranking task, the ranking induced by the regression output is used.</S>
    <S sid="295" ssid="45">The system uses polynomial kernels of degree 2 (UU best) and 3 (UU bltk) as well as two different types of tree kernels for constituency and dependency trees, respectively.</S>
    <S sid="296" ssid="46">The SVM margin/error trade-off, the mixture proportion between tree kernels and polynomial kernels and the degree of the polynomial kernels were optimised using grid search with 5-fold cross-validation over the training set.</S>
    <S sid="297" ssid="47">TCD (R, S): &#8220;TCD M5P-resources-only&#8221; uses only the baseline features, while &#8220;TCD M5Pall&#8221; uses the baseline and additional features.</S>
    <S sid="298" ssid="48">A number of metrics (used as features in TCD M5P-all) were proposed which work in the following way: given a sentence to evaluate (source sentence for complexity or target sentence for fluency), it is compared against some reference data using similarity measures (various metrics which compare distributions of n-grams).</S>
    <S sid="299" ssid="49">The training data was used as reference, along with the Google ngrams dataset.</S>
    <S sid="300" ssid="50">Several learning methods were tested using Weka on the training data (10fold cross-validation).</S>
    <S sid="301" ssid="51">The system submission uses the M5P (regression with decision trees) algorithm which performed best.</S>
    <S sid="302" ssid="52">Contrary to what had been observed on the training data using cross-validation, &#8220;TCD M5P-resourcesonly&#8221; performs better than &#8220;TCD M5P-all&#8221; on the test data.</S>
    <S sid="303" ssid="53">PRHLT-UPV (R, S): The system addresses the task using a regression algorithm with 475 features, including the 17 the baseline features.</S>
    <S sid="304" ssid="54">Most of the features are defined as word scores.</S>
    <S sid="305" ssid="55">Among them, the features obtained form a smoothed naive Bayes classifier have shown to be particularly interesting.</S>
    <S sid="306" ssid="56">Different methods to combine word-level scores into sentencelevel features were investigated.</S>
    <S sid="307" ssid="57">For model building, SVM regression was used.</S>
    <S sid="308" ssid="58">Given the large number of features, the training data provided as part of the task was insufficient yielding unstable systems with not so good performance.</S>
    <S sid="309" ssid="59">Different feature selection methods were implemented to determine a subset of relevant features.</S>
    <S sid="310" ssid="60">The final submission used these relevant features to train an SVM system whose parameters were optimized with respect to the final evaluation metrics.</S>
    <S sid="311" ssid="61">UEDIN (R, S): The system uses the baseline features along with some additional features: binary features for named entities in source using Stanford NER Tagger; binary indicators for occurrence of quotes or parenthetical segments, words in upper case and numbers; geometric mean of target word probabilities and probability of worst scoring word under a Discriminative Word Lexicon Model; Sparse Neural Network directly mapping from source to target (using the vector space model) with source and target side either filtered to relevant words or hashed to reduce dimensionality; number of times at least a 3-gram is seen normalized by sentence length; and Levenshtein distance of either source or translation to closest entry of the SMT training corpus on word or character level.</S>
    <S sid="312" ssid="62">An ensemble of neural networks optimized for RMSE was used for prediction (scoring) and ranking.</S>
    <S sid="313" ssid="63">The contribution of new features was tested by adding them to the baseline features using 5-fold cross-validation.</S>
    <S sid="314" ssid="64">Most features did not result in any improvement over the baseline.</S>
    <S sid="315" ssid="65">The final submission was a combination of all feature sets that showed improvement.</S>
    <S sid="316" ssid="66">SJTU (R, S): The task is treated as a regression problem using the epsilon-SVM method.</S>
    <S sid="317" ssid="67">All features are extracted from the official data, involving no external NLP tools/resources.</S>
    <S sid="318" ssid="68">Most of them come from the phrase table, decoding data and SMT training data.</S>
    <S sid="319" ssid="69">The focus is on special word relations and special phrase patterns, thus several feature templates on this topic are extracted.</S>
    <S sid="320" ssid="70">Since the training data is not large enough to assign weights to all features, methods for estimating common strings or sequences of words are used.</S>
    <S sid="321" ssid="71">The training data is divided in 3/4 for training and 1/4 for development to filter ineffective features.</S>
    <S sid="322" ssid="72">Besides the baseline features, the final submission contains 18 feature templates and about 4 million features in total.</S>
    <S sid="323" ssid="73">WLV-SHEF (R, S): The systems integrates novel linguistic features from the source and target texts in an attempt to overcome the limitations of existing shallow features for quality estimation.</S>
    <S sid="324" ssid="74">These linguistically-informed features include part-of-speech information, phrase constituency, subject-verb agreement and target lexicon analysis, which are extracted using parsers, corpora and auxiliary resources.</S>
    <S sid="325" ssid="75">Systems are built using epsilon-SVM regression with parameters optimised using 5-fold crossvalidation on the training set and two different feature sets: &#8220;WLV-SHEF BL&#8221; uses the 17 baseline features plus 70 linguistically inspired features, while &#8220;WLV-SHEF FS&#8221; uses a larger set of 70 linguistic plus 77 shallow features (including the baseline).</S>
    <S sid="326" ssid="76">Although results indicate that the models fall slightly below the baseline, further analysis shows that linguistic information is indeed informative and complementary to shallow indicators.</S>
    <S sid="327" ssid="77">DFKI (R, S): &#8220;DFKI morphPOSibm1LM&#8221; (R) is a simple linear interpolation of POS 6-gram language model scores, morpheme 6-gram language model scores, IBM 1 scores (both &#8220;direct&#8221; and &#8220;inverse&#8221;) for POS 4-grams and for morphemes.</S>
    <S sid="328" ssid="78">The parallel News corpora from WMT10 is used as extra data to train the language model and the IBM 1 model.</S>
    <S sid="329" ssid="79">&#8220;DFKI cfsplsreg&#8221; and &#8220;DFKI grcfs-mars&#8221; (S) use a collection of 264 features generated containing the baseline features and additional resources.</S>
    <S sid="330" ssid="80">Numerous methods of feature selection were tested using 10-fold cross validation on the training data, reducing these to 23 feature sets.</S>
    <S sid="331" ssid="81">Several regression and (discretized) classification algorithms were employed to train prediction models.</S>
    <S sid="332" ssid="82">The best-performing models included features derived from PCFG parsing, language quality checking and LM scoring, of both source and target, besides features from the SMT search graph and a few baseline features.</S>
    <S sid="333" ssid="83">&#8220;DFKI cfs-plsreg&#8221; uses a Best First correlation-based feature selection technique, trained with Partial Least Squares Regression, while &#8220;DFKI grcfs-mars&#8221; uses a Greedy Stepwise correlation-based feature selection technique, trained with multivariate adaptive regression splines.</S>
    <S sid="334" ssid="84">DCU-SYMC (R, S): Systems are based on a classification approach using a set of features that includes the baseline features.</S>
    <S sid="335" ssid="85">The manually assigned quality scores provided for each MT output in the training set were rounded in order to apply classification algorithms on a limited set of classes (integer values from 1 to 5).</S>
    <S sid="336" ssid="86">Three classifiers were combined by averaging the predicted classes: SVM using sequential minimal optimization and RBF kernel (parameters optimized by grid search), Naive Bayes and Random Forest.</S>
    <S sid="337" ssid="87">&#8220;DCU-SYMC constrained&#8221; is based on a set of 70 features derived only from the data provided for the task.</S>
    <S sid="338" ssid="88">These include a set of features which attempt to model translation adequacy using a bilingual topic model built using Latent Dirichlet Allocation.</S>
    <S sid="339" ssid="89">&#8220;DCUSYMC unconstrained&#8221; is based on 308 features including the constrained ones and others extracted using external tools: grammaticality features extracted from the source segments using the TreeTagger part-of-speech tagger, an English precision grammar, the XLE parser and the Brown re-ranking parser and features based on part-of-speech tag counts extracted from the MT output using a Spanish TreeTagger model.</S>
    <S sid="340" ssid="90">Loria (S): Several numerical or boolean features are computed from the source and target sentences and used to train an SVM regression algorithm with linear (&#8220;Loria SVMlinear&#8221;) and radial basis function (&#8220;Loria SVMrbf&#8221;) as kernel.</S>
    <S sid="341" ssid="91">For the radial basis function, a grid search is performed to optimise the parameter -y.</S>
    <S sid="342" ssid="92">The official submission use the baseline features and a number of features proposed in previous work (Raybaud et al., 2011), amounting to 66 features.</S>
    <S sid="343" ssid="93">A feature selection algorithm is used in order to remove non-informative features.</S>
    <S sid="344" ssid="94">No additional data other than that provided for the shared task is considered.</S>
    <S sid="345" ssid="95">The training data is split into a training part (1000 sentences) and a development part (832 sentences) to learn the regression model and optimise the parameters of the regression and for feature selection.</S>
    <S sid="346" ssid="96">UPC (R, S): The systems use several features on top of the baseline features.</S>
    <S sid="347" ssid="97">These are mostly based on different language models estimated on reference and automatic Spanish translations of the news-v7 corpus.</S>
    <S sid="348" ssid="98">The automatic translations are generated by the system used for the shared task.</S>
    <S sid="349" ssid="99">N-gram LMs are estimated on word forms, POS tags, stop words interleaved by POS tags, stop-word patterns, plus variants in which the POS tags are replaced with the stem or root of each target word.</S>
    <S sid="350" ssid="100">The POS tags on the target side are obtained by projecting source side annotations via automatic alignments.</S>
    <S sid="351" ssid="101">The resulting features are: the perplexity of each additional language model, according to the two translations, and the ratio between the two perplexities.</S>
    <S sid="352" ssid="102">Additionally, features that estimate the likelihood of the projection of dependency parses on the two translations are encoded.</S>
    <S sid="353" ssid="103">For learning, linear SVM regression is used.</S>
    <S sid="354" ssid="104">Optimization was done via 5-fold cross-validation on a development data.</S>
    <S sid="355" ssid="105">Features are encoded by means of their z-scores, i.e. how many standard deviations the observed value is above or below the mean.</S>
    <S sid="356" ssid="106">A variant of the system, &#8220;UPC-2&#8221; uses an option of SVMLight that removes inconsistent points from the training set and retrains the model until convergence.</S>
  </SECTION>
  <SECTION title="6.4 Results" number="7">
    <S sid="357" ssid="1">Here we give the official results for the ranking and scoring subtasks followed by a discussion that highlights the main findings of the task.</S>
    <S sid="358" ssid="2">Table 12 gives the results for the ranking subtask.</S>
    <S sid="359" ssid="3">The table is sorted from best to worse using the DeltaAvg metric scores (Equation 15) as primary key and the Spearman correlation scores as secondary key.</S>
    <S sid="360" ssid="4">The winning submissions for the ranking subtask are SDLLW&#8217;s M5PbestDeltaAvg and SVM entries, which have DeltaAvg scores of 0.63 and 0.61, respectively.</S>
    <S sid="361" ssid="5">The difference with respect to all the other submissions is statistically significant at p = 0.05, using pairwise bootstrap resampling (Koehn, 2004).</S>
    <S sid="362" ssid="6">The state-of-the-art baseline system has a DeltaAvg score of 0.55 (Spearman rank correlation of 0.58).</S>
    <S sid="363" ssid="7">Five other submissions have performances that are not different from the baseline at a statistically-significant level (p = 0.05), as shown by the gray area in the middle of Table 12.</S>
    <S sid="364" ssid="8">Three submissions scored higher than the baseline system at p = 0.05 (systems above the middle gray area), which indicates that this shared-task succeeded in pushing the state-of-the-art performance to new levels.</S>
    <S sid="365" ssid="9">The range of performance for the submissions in the ranking task varies from a DeltaAvg of 0.65 down to a DeltaAvg of 0.15 (with Spearman values varying from 0.64 down to 0.19).</S>
    <S sid="366" ssid="10">In addition to the performance of the official submission, we report here results obtained by various oracle methods.</S>
    <S sid="367" ssid="11">The oracle methods make use of various metrics that are associated in a oracle manner to the test input: the gold-label Effort metric for &#8220;Oracle Effort&#8221;, the HTER metric computed against the post-edited translations as reference for &#8220;Oracle HTER&#8221;, and the BLEU metric computed against the same post-edited translations as reference for &#8220;Oracle (H)BLEU&#8221;.11 The &#8220;Oracle Effort&#8221; DeltaAvg score of 0.95 gives an upperbound in terms of DeltaAvg for the test set used in this evaluation.</S>
    <S sid="368" ssid="12">It basically indicates that, for this set, 11We use the (H)BLEU notation to underscore the use of Post-Edited translations as reference, as opposed to using references that are not the product of a Post-Editing process, as for the traditional BLEU metric. the difference in PE effort between the top-quality quantiles and the overall quality is 0.95 on average.</S>
    <S sid="369" ssid="13">We would like to emphasize here that the DeltaAvg metric does not have any a-priori range for its values.</S>
    <S sid="370" ssid="14">The upperbound, for instance, is test-dependent, and therefore an &#8220;Oracle Effort&#8221; score is useful for understanding the performance level of real systemsubmissions.</S>
    <S sid="371" ssid="15">The &#8220;Oracle HTER&#8221; DeltaAvg score of 0.77 is a more realistic upperbound for the current set.</S>
    <S sid="372" ssid="16">Since the HTER metric is considered a good approximation for the effort required in postediting, ranking the test set based on the HTER scores (from lowest HTER to highest HTER) provides a good oracle comparison point.</S>
    <S sid="373" ssid="17">The oracle based on (H)BLEU gives a lower DeltaAvg score, which can be interpreted to mean that the BLEU metric provides a lower correlation to post-editing effort compared to HTER.</S>
    <S sid="374" ssid="18">We also note here that there is room for improvement between the highestscoring submission (at DeltaAvg 0.63) and the &#8220;Oracle HTER&#8221; DeltaAvg score of 0.77.</S>
    <S sid="375" ssid="19">We are not sure if this difference can be bridged completely, but having measured a quantitative difference between the current best-performance and a realistic upperbound is an important achievement of this shared-task.</S>
    <S sid="376" ssid="20">The results for the scoring task are presented in Table 13, sorted from best to worse by using the MAE metric scores (Equation 16) as primary key and the RMSE metric scores (Equation 17) as secondary key.</S>
    <S sid="377" ssid="21">The winning submission is SDLLW&#8217;s M5PbestDeltaAvg, with an MAE of 0.61 and an RMSE of 0.75 (the difference with respect to all the other submissions is statistically significant at p = 0.05, using pairwise bootstrap resampling (Koehn, 2004)).</S>
    <S sid="378" ssid="22">The strong, state-of-the-art quality-estimation baseline system is measured to have an MAE of 0.69 and RMSE of 0.82, with six other submissions having performances that are not different from the baseline at a statisticallysignificant level (p = 0.05), as shown by the gray area in the middle of Table 13).</S>
    <S sid="379" ssid="23">Five submissions scored higher than the baseline system at p = 0.05 (systems above the middle gray area), which indicates that this shared-task also succeeded in pushing the state-of-the-art performance to new levels in terms of absolute scoring.</S>
    <S sid="380" ssid="24">The range of performance for the submissions in the scoring task varies from an MAE of 0.61 up to an MAE of 0.87 (the outlier MAE of 2.09 is reportedly due to bugs).</S>
    <S sid="381" ssid="25">We also calculate scoring Oracles using the methods used for the ranking Oracles.</S>
    <S sid="382" ssid="26">The difference is that the HTER and (H)BLEU oracles need a way of mapping their scores (which are usually in the [0,100] range) into the [1, 5] range.</S>
    <S sid="383" ssid="27">For the comparison here, we did the mapping by excluding the 5% top and bottom outlier scores, and then linearly mapping the remaining range into the [1.5, 5] range.</S>
    <S sid="384" ssid="28">The &#8220;Oracle Effort&#8221; scores are not very indicative in this case.</S>
    <S sid="385" ssid="29">However, the &#8220;Oracle HTER&#8221; MAE score of 0.56 is a somewhat realistic lowerbound for the current set (although the score could be decreased by a smarter mapping from the HTER range to the Effort range).</S>
    <S sid="386" ssid="30">We argue that since the HTER metric is considered a good approximation for the effort required in post-editing, effort-like scores derived from the HTER score provide a good way to compute oracle scores in a deterministic manner.</S>
    <S sid="387" ssid="31">Note that again the oracle based on (H)BLEU gives a worse MAE score at 0.61, which support the interpretation that the (H)BLEU metric provides a lower correlation to post-editing effort compared to (H)TER.</S>
    <S sid="388" ssid="32">Overall, we consider the MAE values for these HTER and (H)BLEU-based oracles to indicate high error margins.</S>
    <S sid="389" ssid="33">Most notably the performance of the best system gets the same MAE score as the (H)BLEU oracle, at 0.61 MAE.</S>
    <S sid="390" ssid="34">We take this to mean that the scoring task is more difficult compared to the ranking task, since even oracle-based solutions get high error scores.</S>
    <S sid="391" ssid="35">When looking back at the goals that we identified for this shared-task, most of them have been successfully accomplished.</S>
    <S sid="392" ssid="36">In addition, we have achieved additional ones that were not explicitly stated from the beginning.</S>
    <S sid="393" ssid="37">In this section, we discuss the accomplishments of this shared-task in more detail, starting from the defined goals and beyond.</S>
    <S sid="394" ssid="38">Identify new and effective quality indicators The vast majority of the participating systems use external resources in addition to those provided for the task, such as parsers, part-of-speech taggers, named entity recognizers, etc.</S>
    <S sid="395" ssid="39">This has resulted in a wide variety of features being used.</S>
    <S sid="396" ssid="40">Many of the novel features have tried to exploit linguisticallyoriented features.</S>
    <S sid="397" ssid="41">While some systems did not achieve improvements over the baseline while exploiting such features, others have (the &#8220;UU&#8221; submissions, for instance, exploiting both constituency and dependency trees).</S>
    <S sid="398" ssid="42">Another significant set of features that has been previously overlooked is the feature set of the MT decoder.</S>
    <S sid="399" ssid="43">Considering statistical engines, these features are immediately available for quality prediction from the internal trace of the MT decoder (in a glass-box prediction scenario), and its contribution is significant.</S>
    <S sid="400" ssid="44">These features, which reflect the &#8220;confidence&#8221; of the SMT system on the translations it produces, have been shown to be complementary to other, system-independent (black-box) features.</S>
    <S sid="401" ssid="45">For example, the &#8220;SDLLW&#8221; submissions incorporate these features, and their feature selection strategy consistently favored this feature set.</S>
    <S sid="402" ssid="46">The power of this set of features alone is enough to yield (when used with an M5P model) outputs that would have been placed 4th in the ranking task and 5th in the scoring task, a remarkable achievement.</S>
    <S sid="403" ssid="47">Another interesting feature used by the &#8220;SDLLW&#8221; submissions rely on pseudo-references, i.e., translations produced by other MT systems for the same input sentence.</S>
    <S sid="404" ssid="48">Identify alternative machine learning techniques Although SVM regression was used to compute the baseline performance, the baseline &#8220;system&#8221; provided for the task consisted solely of a software to extract features, as opposed to a model built using the regression algorithm.</S>
    <S sid="405" ssid="49">The rationale behind this decision was to encourage participants to experiment with alternative methods for combining different quality indicators.</S>
    <S sid="406" ssid="50">This was achieved to a large extent.</S>
    <S sid="407" ssid="51">The best-performing machine learning techniques were found to be the M5P Regression Trees and the SVM Regression (SVR) models.</S>
    <S sid="408" ssid="52">The merit of the M5P Regression Trees is that it provides compact models that are less prone to overfitting.</S>
    <S sid="409" ssid="53">In contrast, the SVR models can easily overfit given the small amount of training data available and the large numbers of features commonly used.</S>
    <S sid="410" ssid="54">Indeed, many of the submissions that fell below the baseline performance can blame overfitting for (part of) their suboptimal performance.</S>
    <S sid="411" ssid="55">However, SVR models can achieve high performance through the use of tuning and feature selection techniques to avoid overfitting.</S>
    <S sid="412" ssid="56">Structured learning techniques were successfully used by the &#8220;UU&#8221; submissions &#8211; the second best performing team &#8211; to represent parse trees.</S>
    <S sid="413" ssid="57">This seems an interesting direction to encode other sorts of linguistic information about source and translation texts.</S>
    <S sid="414" ssid="58">Other interesting learning techniques have been tried, such as Neural Networks, Partial Least Squares Regression, or multivariate adaptive regression splines, but their performance does not suggest they are strong candidates for learning highly-performing quality-estimation models.</S>
    <S sid="415" ssid="59">Test the suitability of evaluation metrics for quality estimation DeltaAvg, our proposed metric for measuring ranking performance, proved suitable for scoring the ranking subtask.</S>
    <S sid="416" ssid="60">Its high correlation with the Spearman ranking metric, coupled with its extrinsic interpretability, makes it a preferred choice for future measurements.</S>
    <S sid="417" ssid="61">It is also versatile, in the sense that the its valuation function V can change to reflect different extrinsic measures of quality.</S>
    <S sid="418" ssid="62">Establish the state of the art performance The results on both the ranking and the scoring subtasks established new state of the art levels on the test set used in this shared task.</S>
    <S sid="419" ssid="63">In addition to these levels, the oracle performance numbers also help understand the current performance level, and how much of a gap in performance there still exists.</S>
    <S sid="420" ssid="64">Additional data points regarding quality estimation performance are needed to establish how stable this measure of the performance gap is.</S>
    <S sid="421" ssid="65">Contrast the performance of regression and ranking techniques Most of the submissions in the ranking task used the results provided by a regression solution (submitted for the scoring task) to infer the rankings.</S>
    <S sid="422" ssid="66">Also, optimizing for ranking performance via a regression solution seems to result in regression models that perform very well, as in the case of the top-ranked submission.</S>
    <S sid="423" ssid="67">There appear to be significant differences between considering the quality estimation task as a ranking problem versus a scoring problem.</S>
    <S sid="424" ssid="68">The rankingbased approach appears to be somewhat simpler and more easily amenable to automatic solutions, and at the same time provides immediate benefits when integrated into larger applications (see, for instance, the post-editing application described in Specia (2011)).</S>
    <S sid="425" ssid="69">The scoring-based approach is more difficult, as the high error rate even of oracle-based solutions indicates.</S>
    <S sid="426" ssid="70">It is also well-known from human evaluations of MT outputs that human judges also have a difficult time agreeing on absolute-number judgements to translations.</S>
    <S sid="427" ssid="71">Our experience in creating the current datasets confirms that, even with highly-trained professionals, it is difficult to arrive at consistent judgements.</S>
    <S sid="428" ssid="72">We plan to have future investigations on how to achieve more consistent ways of generating absolute-number scores that reflect the quality of automated translations.</S>
  </SECTION>
  <SECTION title="7 Summary" number="8">
    <S sid="429" ssid="1">As in previous incarnations of this workshop we carried out an extensive manual and automatic evaluation of machine translation performance, and we used the human judgements that we collected to validate automatic metrics of translation quality.</S>
    <S sid="430" ssid="2">This year was also the debut of a new quality estimation task, which tries to predict the effort involved in having post editors correct MT output.</S>
    <S sid="431" ssid="3">The quality estimation task differs from the metrics task in that it does not involve reference translations.</S>
    <S sid="432" ssid="4">As in previous years, all data sets generated by this workshop, including the human judgments, system translations and automatic scores, are publicly available for other researchers to analyze.12</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="9">
    <S sid="433" ssid="1">This work was supported in parts by the EuroMatrixPlus project funded by the European Commission (7th Framework Programme), the GALE program of the US Defense Advanced Research Projects Agency, Contract No.</S>
    <S sid="434" ssid="2">HR0011-06-C-0022, the US National Science Foundation under grant IIS-0713448, and the CoSyne project FP7-ICT-4248531 funded by the European Commission.</S>
    <S sid="435" ssid="3">The views and findings are the authors&#8217; alone.</S>
    <S sid="436" ssid="4">Thanks for Adam Lopez for discussions about alternative ways of ranking the overall system scores.</S>
    <S sid="437" ssid="5">The Quality Estimation shared task organizers thank Wilker Aziz for his help with the SMT models and resources, and Mariano Felice for his help with the system for the extraction of baseline features.</S>
  </SECTION>
</PAPER>
