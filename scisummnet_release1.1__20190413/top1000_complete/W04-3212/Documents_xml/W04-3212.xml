<PAPER>
  <S sid="0">Calibrating Features For Semantic Role Labeling</S>
  <ABSTRACT>
    <S sid="1" ssid="1">This paper takes a critical look at the features used in the semantic role tagging literature and show that the information in the input, generally a syntactic parse tree, has yet to be fully exploited.</S>
    <S sid="2" ssid="2">We propose an additional set of features and our experiments show that these features lead to fairly significant improvements in the tasks we performed.</S>
    <S sid="3" ssid="3">We further show that different features are needed for different subtasks.</S>
    <S sid="4" ssid="4">Finally, we show that by using a Maximum Entropy classifier and fewer features, we achieved results comparable with the best previously reported results obtained with SVM models.</S>
    <S sid="5" ssid="5">We believe this is a clear indication that developing features that capture the right kind of information is crucial to advancing the stateof-the-art in semantic analysis.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">There has been growing interest in domainindependent semantic analysis, fed off recent efforts in semantic annotation.</S>
    <S sid="7" ssid="2">The availability of semantically annotated corpora such as the Proposition Banks (Kingsbury and Palmer, 2002; Xue and Palmer, 2003) and FrameNet (Baker et al., 1998) have enabled the development of a rapidly growing list of statistical semantic analyzers (Giidea and Jurafsky, 2002; Giidea and Palmer, 2002; Chen and Rambow, 2003; Pradhan et al., 2003; Pradhan et al., 2004; Sun and Jurafsky, 2004; Palmer et al., submitted).</S>
    <S sid="8" ssid="3">The shared task of the CoNLL-2004 is devoted to semantic role labeling (Carreras and Marquez, 2004).</S>
    <S sid="9" ssid="4">Most of these systems generally take as input a syntactic parse tree and use the syntactic information as features to tag the syntactic constituents with semantic role labels.</S>
    <S sid="10" ssid="5">Although these systems have shown great promise, we demonstrate that the features used in previous work have not fully exploited the information that a parse tree provides.</S>
    <S sid="11" ssid="6">In this paper we prepose an additional set of features and show that these features lead to fairly significant improvements in the tasks we performed.</S>
    <S sid="12" ssid="7">This paper is organized as follows.</S>
    <S sid="13" ssid="8">In the next section, we briefly describe the annotation of the Proposition Bank, the data for our automatic semantic role labeling experiments.</S>
    <S sid="14" ssid="9">Section 3 describes the architecture of our system.</S>
    <S sid="15" ssid="10">We take a critical look at the previously used features against each subtask and propose a new set of features in Section 4.</S>
    <S sid="16" ssid="11">Section 5 presents experimental results that show the effectiveness of these new features and a comparison with previous results.</S>
    <S sid="17" ssid="12">We conclude in Section 6.</S>
    <S sid="18" ssid="13">2 The PropBank and Semantic Role Labeling The PropBank adds a layer of semantic annotation to the Treebank II (Marcus et al., 1993; Marcus et al., 1994) to capture generalizations that are not adequately represented in the treebank parse trees.</S>
    <S sid="19" ssid="14">For example, in both John broke the window into a million pieces yesterday and The window broke into a million pieces yesterday, the window plays the same role with regard to the verb break in both sentences even though they occur in different syntactic positions.</S>
    <S sid="20" ssid="15">The PropBank annotation captures this regularity by assigning a semantic role label to each argument of the verb independently of its syntactic position.</S>
    <S sid="21" ssid="16">This means a fixed set of roles are specified for each verb and a different label is assigned to each role.</S>
    <S sid="22" ssid="17">In PropBank annotations, these roles are labeled with a sequence of integers, starting with 01 and prefixed with ARG.</S>
    <S sid="23" ssid="18">For example, the verb break, has four such numbered arguments: ARGO: the breaker, AR Cl: thing broken, ARC?</S>
    <S sid="24" ssid="19">: instrument and ARCS: pieces.</S>
    <S sid="25" ssid="20">It is worth pointing out that even though the same numbers (0-5) are used to label the semantic roles of all verbs, these roles can only be interpreted in a verb-specific 'There are some exceptions. manner.</S>
    <S sid="26" ssid="21">That is, an argument marked with the same number, e.g.</S>
    <S sid="27" ssid="22">ARG, may not share any semantic similarities for different verbs.</S>
    <S sid="28" ssid="23">In addition to the numbered arguments, which are considered to be core to a verb, there are also elements that are less closely related to the verb.</S>
    <S sid="29" ssid="24">This roughly parallels the argument/adjunct dichotomy but the distinction may not be drawn along the same lines as in the theoretic linguistics literature.</S>
    <S sid="30" ssid="25">These adjunct-like elements are labeled AR GM, followed by a secondary tag indicating the type of adjunct.</S>
    <S sid="31" ssid="26">For example, yesterday in those abovementioned sentences is not specific to the verb break and instead it applies to a wide variety of verbs.</S>
    <S sid="32" ssid="27">Therefore it will be marked as AR GM, followed by a secondary tag - TMP, indicating the temporal nature of this constituent.</S>
    <S sid="33" ssid="28">The secondary tags are effectively a global classification of adjunct-like elements.</S>
    <S sid="34" ssid="29">There are 12 secondary tags for ARCMs in the Proposition Bank: DIR, LOC, MNR, TMP, EXT, REC, PRD, PRP, DIS, ADV, MOD, NE.</S>
    <S sid="35" ssid="30">Some verbs require different sets of arguments for different senses, and accurately characterizing the semantic roles of their arguments necessitates first distinguishing these senses.</S>
    <S sid="36" ssid="31">For example, the verb &amp;quot;pass&amp;quot; takes three arguments, legislative body, bill and law when it means &amp;quot;vote and pass&amp;quot;, while it takes only two arguments entity moving ahead and entity falling behind when it means &amp;quot;overtake&amp;quot;.</S>
    <S sid="37" ssid="32">Each sense of this verb is likely to be realized in a set of distinct subcategorization frames and is therefore called a frameset.</S>
    <S sid="38" ssid="33">Semantic role tagging There are different ways to formulate the semantic role tagging task based on the annotation of the PropBank, depending on what type information one wants to learn automatically.</S>
    <S sid="39" ssid="34">For comparison purposes we ignore the frameset information for now, following the practice of Gildea and Palmer (Gildea and Jurafsky, 2002; Pradhan et al., 2003) and others.</S>
    <S sid="40" ssid="35">For each verb, we will predict the core arguments ARG/O-5], as well as the secondary tags for ARCMs.</S>
    <S sid="41" ssid="36">The total tagset will 2Modals (MOD) and negation markers (NEG) are clearly not adjuncts.</S>
    <S sid="42" ssid="37">They are included because they are critical to the interpretation of the events be ARG/O-5], ARGa3 ARGM x secondary tags.</S>
    <S sid="43" ssid="38">There are also constituents that are not semantic arguments (by semantic arguments we mean both numbered arguments and ARCMs) to a given verb and we will label such constituents NULL.</S>
    <S sid="44" ssid="39">Semantic role tagging is thus an one of N classification task.</S>
  </SECTION>
  <SECTION title="3 System architecture" number="2">
    <S sid="45" ssid="1">Although it is conceivable that one can simply treat this as a multi-category classification problem, there are at least two reasons why such a simple approach will not work effectively.</S>
    <S sid="46" ssid="2">One is that for a given verb, the majority of the constituents in a syntactic tree are not its semantic arguments.</S>
    <S sid="47" ssid="3">When negative samples (constituents marked NULL) overwhelm positive samples, the current machine-learning algorithms will not be effective.</S>
    <S sid="48" ssid="4">The second reason, which is more subtle, is that information that is effective in separating arguments from NULL elements may not be as effective in distinguishing different types of arguments and vice versa, as we will show in our experiments.</S>
    <S sid="49" ssid="5">Based on these considerations, we will adopt a three-stage architecture: Stage 1: To save training time, we use a simple algorithm to filter out constituents that are clearly not semantic arguments to the predicate in question.</S>
    <S sid="50" ssid="6">Stage 2: We then classify the candidates derived from the first stage as either semantic arguments or non-arguments.</S>
    <S sid="51" ssid="7">Stage 3: Finally we run a multi-category classifier to classify the constituents that are labeled as arguments into one of the classes plus NULL.</S>
    <S sid="52" ssid="8">Step 1: Designate the predicate as the current node and collect its sisters (constituents attached at the same level as the predicate) unless its sisters are coordinated with the predicate.</S>
    <S sid="53" ssid="9">If a sister is a PP, also collect its immediate children. each argument of the verb.</S>
    <S sid="54" ssid="10">There are again two experiment conditions.</S>
    <S sid="55" ssid="11">In the first experiment, the constituents that are arguments to a verb is already known, and the task is only to assign the correct semantic role label to the constituents.</S>
    <S sid="56" ssid="12">In the second experiment, this same task is performed on the output of the argument identification task presented in Table 1.</S>
    <S sid="57" ssid="13">The same experiments are repeated using automatic parses produced by the Collins parser.</S>
    <S sid="58" ssid="14">The results are presented in Table 2.</S>
    <S sid="59" ssid="15">Row 1 presents results of all arguments when functional tags of the ArgMs are predicted, while Row 2 presents results of all arguments when functional tags are ignored.</S>
    <S sid="60" ssid="16">Finally Row 3 presents results when only the core arguments (numbered arguments) are calculated.</S>
    <S sid="61" ssid="17">Standard accuracy, CS (f) = Cold Standard fscore, CP = Collins Parser Feature performance Table 3 shows the performance of the new features.</S>
    <S sid="62" ssid="18">The baseline system uses the original features proposed in (Giidea and Palmer, 2002) and each row shows the improvement over the baseline when that feature is added to the baseline features.</S>
    <S sid="63" ssid="19">The results are on known (when constituents that are semantic arguments are given) and unknown (when constituents that are arguments have to be identified first before being classified) constituents respectively using Cold Standard Treebank parses.</S>
    <S sid="64" ssid="20">It is clear that the syntactic frame feature results in the most improvement (more than 1.7%) over the baseline, with the head of the PP parent feature being a close second.</S>
    <S sid="65" ssid="21">It is also worth noting that although the feature combining position and voice results in an improvement when the constituents are known, it actually results in a small loss when the constituents are unknown.</S>
    <S sid="66" ssid="22">This indicates that the slight change in the classification task (for classification of unknown constituents, an additional category NULL is added) could change the feature performance.</S>
    <S sid="67" ssid="23">The last three features are from (Pradhan et al., 2004), and they also result in an improvement in performance.</S>
    <S sid="68" ssid="24">Rapid progress has been made in semantic role labeling since the Propbank annotation became first available in 2002.</S>
    <S sid="69" ssid="25">The progress can be attributed to better modeling techniques, more relevant features and in a small measure, cleaner annotation.</S>
    <S sid="70" ssid="26">The first system trained on the Propbank is by Giidea and Palmer (2002), who reported 82.8% in accuracy on Cold Standard parses when the constituents that are semantic arguments are given, 67.6% and 53.6% (fmeasure) using Cold Standard and automatic parses respectively when the constituents for the arguments have to be first identified.</S>
    <S sid="71" ssid="27">Since then, various degrees of improvement have been reported (Giidea and Hockenmaier, 2003; Pradhan et al., 2003; Chen and Rambow, 2003).</S>
    <S sid="72" ssid="28">As far as we know the best results so far are reported by (Pradhan et al., 2004), where a wide range of features, including features extracted from named entities, verb clusters and verb senses, temporal cue words, dynamic context, are tested with an SVM classifier.</S>
    <S sid="73" ssid="29">Their system achieved an accuracy of 93.0% on known constituents and 89.4% (f-measure) on unknown constituents using Cold Standard parses.</S>
    <S sid="74" ssid="30">They did not report results that use automatic parses with this version of the data, but using a previous version of the data, they reported an fscore of 79.4% using automatic parses (Charniak, 2001).</S>
    <S sid="75" ssid="31">By carefully designing features that can all be directly extracted from the treebank parse trees, our system achieved very comparable results using a Maxent classifier and a much smaller feature set: 92.95% on known constituents, 88.51% on unknown constituents and 76.21% when the Collins parser is used.</S>
    <S sid="76" ssid="32">The results on known constituents are almost identical and the larger difference when automatic parses are used could be attributed to the different parsers, as we used output from an earlier version of the Collins parser.</S>
  </SECTION>
  <SECTION title="6 Conclusions and Future work" number="3">
    <S sid="77" ssid="1">This paper takes a critical look at the features used in the semantic role tagging literature and show that the information in the input, generally a syntactic parse tree, has yet to be fully exploited.</S>
    <S sid="78" ssid="2">We propose an additional set of features and our experiments show that these features lead to fairly significant improvements in the tasks we performed.</S>
    <S sid="79" ssid="3">We further show that different features are needed for different subtasks.</S>
    <S sid="80" ssid="4">Finally, we show that using a maximum entropy classifier and fewer features, we achieved results that are comparable to the best previously reported results obtained with SVM models.</S>
    <S sid="81" ssid="5">We believe this is a clear indication that developing features that capture the right kind of information is crucial to advancing the state-of-the-art in semantic analysis.</S>
    <S sid="82" ssid="6">We also believe that the features we proposed here are to a large extent complementary to those proposed in a recent work by Pradhan et al (2004) and we intend to incorporate them in our system.</S>
  </SECTION>
  <SECTION title="7 Acknowledgements" number="4">
    <S sid="83" ssid="1">We would like to thank Scott Cotton for providing the PropBank API 6 which greatly simplifies the implementation of our system.</S>
    <S sid="84" ssid="2">This work is funded in part by the DOD via grant MDA904-02-C-0412, and in part by the NSF ITR via grant 130-1303-4-541984-XXXX-20001070.</S>
    <S sid="85" ssid="3">.</S>
  </SECTION>
</PAPER>
