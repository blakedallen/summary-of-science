<PAPER>
  <S sid="0">A Tree Sequence Alignment-based Tree-to-Tree Translation Model</S>
  <ABSTRACT>
    <S sid="1" ssid="1">mzhang@i2r.a-star.edu.sg hfjiang@mtlab.hit.edu.cn tancl@comp.nus.edu.sg aaiti@i2r.a-star.edu.sg lisheng@hit.edu.cn hli@i2r.a-star.edu.sg Abstract This paper presents a translation model that is based on tree sequence alignment, where a tree sequence refers to a single sequence of subtrees that covers a phrase.</S>
    <S sid="2" ssid="2">The model leverages on the strengths of both phrase-based and linguistically syntax-based method.</S>
    <S sid="3" ssid="3">It automatically learns aligned tree sequence pairs with mapping probabilities from word-aligned biparsed parallel texts.</S>
    <S sid="4" ssid="4">Compared with previous models, it not only captures non-syntactic phrases and discontinuous phrases with linguistically structured features, but also supports multi-level structure reordering of tree typology with larger span.</S>
    <S sid="5" ssid="5">This gives our model stronger expressive power than other reported models.</S>
    <S sid="6" ssid="6">Experimental results on the NIST MT-2005 Chinese-English translation task show that our method statistically significantly outperforms the baseline systems.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="7" ssid="1">Phrase-based modeling method (Koehn et al., 2003; Och and Ney, 2004a) is a simple, but powerful mechanism to machine translation since it can model local reorderings and translations of multiword expressions well.</S>
    <S sid="8" ssid="2">However, it cannot handle long-distance reorderings properly and does not exploit discontinuous phrases and linguistically syntactic structure features (Quirk and Menezes, 2006).</S>
    <S sid="9" ssid="3">Recently, many syntax-based models have been proposed to address the above deficiencies 2003).</S>
    <S sid="10" ssid="4">Although good progress has been reported, the fundamental issues in applying linguistic syntax to SMT, such as non-isomorphic tree alignment, structure reordering and non-syntactic phrase modeling, are still worth well studying.</S>
    <S sid="11" ssid="5">In this paper, we propose a tree-to-tree translation model that is based on tree sequence alignment.</S>
    <S sid="12" ssid="6">It is designed to combine the strengths of phrase-based and syntax-based methods.</S>
    <S sid="13" ssid="7">The proposed model adopts tree sequence1 as the basic translation unit and utilizes tree sequence alignments to model the translation process.</S>
    <S sid="14" ssid="8">Therefore, it not only describes non-syntactic phrases with syntactic structure information, but also supports multi-level tree structure reordering in larger span.</S>
    <S sid="15" ssid="9">These give our model much more expressive power and flexibility than those previous models.</S>
    <S sid="16" ssid="10">Experiment results on the NIST MT-2005 ChineseEnglish translation task show that our method significantly outperforms Moses (Koehn et al., 2007), a state-of-the-art phrase-based SMT system, and other linguistically syntax-based methods, such as SCFG-based and STSG-based methods (Zhang et al., 2007).</S>
    <S sid="17" ssid="11">In addition, our study further demonstrates that 1) structure reordering rules in our model are very useful for performance improvement while discontinuous phrase rules have less contribution and 2) tree sequence rules are able to model non-syntactic phrases with syntactic structure information, and thus contribute much to the performance improvement, but those rules consisting of more than three sub-trees have almost no contribution.</S>
    <S sid="18" ssid="12">The rest of this paper is organized as follows: Section 2 reviews previous work.</S>
    <S sid="19" ssid="13">Section 3 elaborates the modelling process while Sections 4 and 5 discuss the training and decoding algorithms.</S>
    <S sid="20" ssid="14">The experimental results are reported in Section 6.</S>
    <S sid="21" ssid="15">Finally, we conclude our work in Section 7.</S>
  </SECTION>
  <SECTION title="2 Related Work" number="2">
    <S sid="22" ssid="1">Many techniques on linguistically syntax-based SMT have been proposed in literature.</S>
    <S sid="23" ssid="2">Yamada and Knight (2001) use noisy-channel model to transfer a target parse tree into a source sentence.</S>
    <S sid="24" ssid="3">Eisner (2003) studies how to learn non-isomorphic tree-to-tree/string mappings using a STSG.</S>
    <S sid="25" ssid="4">Ding and Palmer (2005) propose a syntax-based translation model based on a probabilistic synchronous dependency insertion grammar.</S>
    <S sid="26" ssid="5">Quirk et al. (2005) propose a dependency treelet-based translation model.</S>
    <S sid="27" ssid="6">Cowan et al. (2006) propose a featurebased discriminative model for target language syntactic structures prediction, given a source parse tree.</S>
    <S sid="28" ssid="7">Huang et al. (2006) study a TSG-based tree-to-string alignment model.</S>
    <S sid="29" ssid="8">Liu et al. (2006) propose a tree-to-string model.</S>
    <S sid="30" ssid="9">Zhang et al. (2007b) present a STSG-based tree-to-tree translation model.</S>
    <S sid="31" ssid="10">Bod (2007) reports that the unsupervised STSG-based translation model performs much better than the supervised one.</S>
    <S sid="32" ssid="11">The motivation behind all these work is to exploit linguistically syntactic structure features to model the translation process.</S>
    <S sid="33" ssid="12">However, most of them fail to utilize non-syntactic phrases well that are proven useful in the phrase-based methods (Koehn et al., 2003).</S>
    <S sid="34" ssid="13">The formally syntax-based model for SMT was first advocated by Wu (1997).</S>
    <S sid="35" ssid="14">Xiong et al. (2006) propose a MaxEnt-based reordering model for BTG (Wu, 1997) while Setiawan et al.</S>
    <S sid="36" ssid="15">(2007) propose a function word-based reordering model for BTG.</S>
    <S sid="37" ssid="16">Chiang (2005)&#8217;s hierarchal phrase-based model achieves significant performance improvement.</S>
    <S sid="38" ssid="17">However, no further significant improvement is achieved when the model is made sensitive to syntactic structures by adding a constituent feature (Chiang, 2005).</S>
    <S sid="39" ssid="18">In the last two years, many research efforts were devoted to integrating the strengths of phrasebased and syntax-based methods.</S>
    <S sid="40" ssid="19">In the following, we review four representatives of them.</S>
    <S sid="41" ssid="20">1) Hassan et al. (2007) integrate supertags (a kind of lexicalized syntactic description) into the target side of translation model and language model under the phrase-based translation framework, resulting in good performance improvement.</S>
    <S sid="42" ssid="21">However, neither source side syntactic knowledge nor reordering model is further explored. the solution shows effective empirically, it only utilizes the source side syntactic phrases of the input parse tree during decoding.</S>
    <S sid="43" ssid="22">Furthermore, the translation probabilities of the bilingual phrases and other tree-to-string rules are not compatible since they are estimated independently, thus having different parameter spaces.</S>
    <S sid="44" ssid="23">To address the above problems, Liu et al. (2007) propose to use forest-to-string rules to enhance the expressive power of their tree-to-string model.</S>
    <S sid="45" ssid="24">As is inherent in a tree-to-string framework, Liu et al.&#8217;s method defines a kind of auxiliary rules to integrate forestto-string rules into tree-to-string models.</S>
    <S sid="46" ssid="25">One problem of this method is that the auxiliary rules are not described by probabilities since they are constructed during decoding, rather than learned from the training corpus.</S>
    <S sid="47" ssid="26">So, to balance the usage of different kinds of rules, they use a very simple feature counting the number of auxiliary rules used in a derivation for penalizing the use of forest-to-string and auxiliary rules.</S>
    <S sid="48" ssid="27">In this paper, an alternative solution is presented to combine the strengths of phrase-based and syntax-based methods.</S>
    <S sid="49" ssid="28">Unlike previous work, our solution neither requires larger applicability contexts (Galley et al., 2006), nor depends on pseudo nodes (Marcu et al., 2006) or auxiliary rules (Liu et al., 2007).</S>
    <S sid="50" ssid="29">We go beyond the single sub-tree mapping model to propose a tree sequence alignment-based translation model.</S>
    <S sid="51" ssid="30">To the best of our knowledge, this is the first attempt to empirically explore the tree sequence alignment based model in SMT.</S>
    <S sid="52" ssid="31">The leaf nodes of a sub-tree in a tree sequence can be either non-terminal symbols (grammar tags) or terminal symbols (lexical words).</S>
    <S sid="53" ssid="32">Given a pair of source and target parse trees (1 ) Fig.</S>
    <S sid="54" ssid="33">1, Fig.</S>
    <S sid="55" ssid="34">2 illustrates two examples of tree sequences derived from the two parse trees.</S>
    <S sid="56" ssid="35">A tree sequence translation rule r is a pair of aligned tree sequences r =&lt; TS f j , two tree sequences, satisfying the following condition: `d (i, j) E A : i1 &lt; i &lt; i2 H j1 &lt; j &lt; j2 .</S>
    <S sid="57" ssid="36">Fig.</S>
    <S sid="58" ssid="37">3 shows two rules extracted from the tree pair shown in Fig.</S>
    <S sid="59" ssid="38">1, where r1 is a tree-to-tree rule and r2 is a tree sequence-to-tree sequence rule.</S>
    <S sid="60" ssid="39">Obviously, tree sequence rules are more powerful than phrases or tree rules as they can capture all phrases (including both syntactic and non-syntactic phrases) with syntactic structure information and allow any tree node operations in a longer span.</S>
    <S sid="61" ssid="40">We expect that these properties can well address the issues of non-isomorphic structure alignments, structure reordering, non-syntactic phrases and discontinuous phrases translations.</S>
    <S sid="62" ssid="41">Given the source and target sentences f1J and e; and their parse trees (1 ) sequence-to-tree sequence translation model is formulated as: In our implementation, we have: By Eq.</S>
    <S sid="63" ssid="42">(2), translation becomes a tree structure mapping issue.</S>
    <S sid="64" ssid="43">We model it using our tree sequence-based translation rules.</S>
    <S sid="65" ssid="44">Given the source parse tree (1 ) that could lead to the same target tree T(e;) , the mapping probability Pr (T (e;)  |T (f J )) is obtained by summing over the probabilities of all derivations.</S>
    <S sid="66" ssid="45">The probability of each derivation&#952; is given as the product of the probabilities of all the rules p(ri ) used in the derivation (here we assume that Eq.</S>
    <S sid="67" ssid="46">(3) formulates the tree sequence alignmentbased translation model.</S>
    <S sid="68" ssid="47">Figs.</S>
    <S sid="69" ssid="48">1 and 3 show how the proposed model works.</S>
    <S sid="70" ssid="49">First, the source sentence is parsed into a source parse tree.</S>
    <S sid="71" ssid="50">Next, the source parse tree is detached into two source tree sequences (the left hand side of rules in Fig.</S>
    <S sid="72" ssid="51">3).</S>
    <S sid="73" ssid="52">Then the two rules in Fig.</S>
    <S sid="74" ssid="53">3 are used to map the two source tree sequences to two target tree sequences, which are then combined to generate a target parse tree.</S>
    <S sid="75" ssid="54">Finally, a target translation is yielded from the target tree.</S>
    <S sid="76" ssid="55">Our model is implemented under log-linear framework (Och and Ney, 2002).</S>
    <S sid="77" ssid="56">We use seven basic features that are analogous to the commonly used features in phrase-based systems (Koehn, 2004): 1) bidirectional rule mapping probabilities; 2) bidirectional lexical rule translation probabilities; 3) the target language model; 4) the number of rules used and 5) the number of target words.</S>
    <S sid="78" ssid="57">In addition, we define two new features: 1) the number of lexical words in a rule to control the model&#8217;s preference for lexicalized rules over un-lexicalized rules and 2) the average tree depth in a rule to balance the usage of hierarchical rules and flat rules.</S>
    <S sid="79" ssid="58">Note that we do not distinguish between larger (taller) and shorter source side tree sequences, i.e. we let these rules compete directly with each other.</S>
  </SECTION>
  <SECTION title="4 Rule Extraction" number="3">
    <S sid="80" ssid="1">Rules are extracted from word-aligned, bi-parsed sentence pairs &lt; T (fJ ), T (e; ), A &gt; , which are classified into two categories: 2) Extracting abstract rules from extracted initial rules with the help of sub initial rules.</S>
    <S sid="81" ssid="2">It is straightforward to extract initial rules.</S>
    <S sid="82" ssid="3">We first generate all fully lexicalized source and target tree sequences using a dynamic programming algorithm and then iterate over all generated source and target tree sequence pairs &lt; TS f j TS e i &gt; .</S>
    <S sid="83" ssid="4">If leaf nodes of TS(f jj2 ) and TS(e1) .</S>
    <S sid="84" ssid="5">We then derive abstract rules from initial rules by removing one or more of its sub initial rules.</S>
    <S sid="85" ssid="6">The abstract rule extraction algorithm presented next is implemented using dynamic programming.</S>
    <S sid="86" ssid="7">Due to space limitation, we skip the details here.</S>
    <S sid="87" ssid="8">In order to control the number of rules, we set three constraints for both finally extracted initial and abstract rules: 1) The depth of a tree in a rule is not greater than h .</S>
    <S sid="88" ssid="9">2) The number of non-terminals as leaf nodes is not greater than c .</S>
    <S sid="89" ssid="10">3) The tree number in a rule is not greater than d. In addition, we limit initial rules to have at most seven lexical words as leaf nodes on either side.</S>
    <S sid="90" ssid="11">However, in order to extract long-distance reordering rules, we also generate those initial rules with more than seven lexical words for abstract rules extraction only (not used in decoding).</S>
    <S sid="91" ssid="12">This makes our abstract rules more powerful in handling global structure reordering.</S>
    <S sid="92" ssid="13">Moreover, by configuring these parameters we can implement other translation models easily: 1) STSG-based model when d =1 ; 2) SCFG-based model when d =1 and h = 2 ; 3) phrase-based translation model only (no reordering model) when c = 0 and h =1. co-indexing the pairs of non-terminals that rooting the removed source and target parts</S>
  </SECTION>
  <SECTION title="5 Decoding" number="4">
    <S sid="93" ssid="1">13: output the hypothesis with the highest score in h[1, J] as the final best translation The decoder is a span-based beam search together with a function for mapping the source derivations to the target ones.</S>
    <S sid="94" ssid="2">Algorithm 2 illustrates the decoding algorithm.</S>
    <S sid="95" ssid="3">It translates each span iteratively from small one to large one (lines 1-2).</S>
    <S sid="96" ssid="4">This strategy can guarantee that when translating the current span, all spans smaller than the current one have already been translated before if they are translatable (line 7).</S>
    <S sid="97" ssid="5">When translating a span, if the usable rule is an initial rule, then the tree sequence on the target side of the rule is a candidate translation (lines 4-5).</S>
    <S sid="98" ssid="6">Otherwise, we replace the nonterminal leaf nodes of the current abstract rule with their corresponding spans&#8217; translations that are already translated in previous steps (line 7).</S>
    <S sid="99" ssid="7">To speed up the decoder, we use several thresholds to limit search beams for each span: It is worth noting that the decoder does not force a complete target parse tree to be generated.</S>
    <S sid="100" ssid="8">If no rules can be used to generate a complete target parse tree, the decoder just outputs whatever have phrase rules2.</S>
    <S sid="101" ssid="9">Finally, we investigate the impact of maximal sub-tree number and sub-tree depth in our model.</S>
    <S sid="102" ssid="10">All of the following discussions are held on the training and test data. been translated so far monotonically as one hypothesis.</S>
  </SECTION>
  <SECTION title="6 Experiments" number="5">
    <S sid="103" ssid="1">We conducted Chinese-to-English translation experiments.</S>
    <S sid="104" ssid="2">We trained the translation model on the FBIS corpus (7.2M+9.2M words) and trained a 4gram language model on the Xinhua portion of the English Gigaword corpus (181M words) using the SRILM Toolkits (Stolcke, 2002) with modified Kneser-Ney smoothing.</S>
    <S sid="105" ssid="3">We used sentences with less than 50 characters from the NIST MT-2002 test set as our development set and the NIST MT2005 test set as our test set.</S>
    <S sid="106" ssid="4">We used the Stanford parser (Klein and Manning, 2003) to parse bilingual sentences on the training set and Chinese sentences on the development and test sets.</S>
    <S sid="107" ssid="5">The evaluation metric is case-sensitive BLEU-4 (Papineni et al., 2002).</S>
    <S sid="108" ssid="6">We used GIZA++ (Och and Ney, 2004) and the heuristics &#8220;grow-diag-final&#8221; to generate m-to-n word alignments.</S>
    <S sid="109" ssid="7">For the MER training (Och, 2003), we modified Koehn&#8217;s MER trainer (Koehn, 2004) for our tree sequence-based system.</S>
    <S sid="110" ssid="8">For significance test, we used Zhang et al&#8217;s implementation (Zhang et al, 2004).</S>
    <S sid="111" ssid="9">We set three baseline systems: Moses (Koehn et al., 2007), and SCFG-based and STSG-based treeto-tree translation models (Zhang et al., 2007).</S>
    <S sid="112" ssid="10">For Moses, we used its default settings.</S>
    <S sid="113" ssid="11">For the SCFG/STSG and our proposed model, we used the same settings except for the parameters d and h (d =1 and h = 2 for the SCFG; d =1 and h = 6 for the STSG; d = 4 and h = 6 for our model).</S>
    <S sid="114" ssid="12">We optimized these parameters on the training and development sets: c =3, &#945; =20, &#946; =-100 and y =100.</S>
    <S sid="115" ssid="13">We carried out a number of experiments to examine the proposed tree sequence alignment-based translation model.</S>
    <S sid="116" ssid="14">In this subsection, we first report the rule distributions and compare our model with the three baseline systems.</S>
    <S sid="117" ssid="15">Then we study the model&#8217;s expressive ability by comparing the contributions made by different kinds of rules, including strict tree sequence rules, non-syntactic phrase rules, structure reordering rules and discontinuous tured by the two syntax-based models through tree node operations.</S>
    <S sid="118" ssid="16">&#8226; Our model is much more effective in utilizing linguistic structures than STSG since it uses tree sequence as basic translation unit.</S>
    <S sid="119" ssid="17">This allows our model not only to handle structure reordering by tree node operations in a larger span, but also to capture non-syntactic phrases, which circumvents previous syntactic constraints, thus giving our model more expressive power.</S>
    <S sid="120" ssid="18">3) The linguistically motivated SCFG shows much lower performance.</S>
    <S sid="121" ssid="19">This is largely because SCFG only allows sibling nodes reordering and fails to utilize both non-syntactic phrases and those syntactic phrases that cannot be covered by a single CFG rule.</S>
    <S sid="122" ssid="20">It thereby suggests that SCFG is less effective in modelling parse tree structure transfer between Chinese and English when using Penn Treebank style linguistic grammar and under wordalignment constraints.</S>
    <S sid="123" ssid="21">However, formal SCFG show much better performance in the formally syntax-based translation framework (Chiang, 2005).</S>
    <S sid="124" ssid="22">This is because the formal syntax is learned from phrases directly without relying on any linguistic theory (Chiang, 2005).</S>
    <S sid="125" ssid="23">As a result, it is more robust to the issue of non-syntactic phrase usage and non-isomorphic structure alignment.</S>
    <S sid="126" ssid="24">26.07 further improves the performance.</S>
    <S sid="127" ssid="25">It suggests that they are complementary to each other since the lexicalized TSRs are used to model non-syntactic phrases while the other two kinds of TSRs can generalize the lexicalized rules to unseen phrases.</S>
    <S sid="128" ssid="26">2) The lexicalized TSRs make the major contribution since they can capture non-syntactic phrases with syntactic structure features. refers to the structure reordering rules that have at least two non-terminal leaf nodes with inverted order in the source and target sides, which are usually not captured by phrase-based models.</S>
    <S sid="129" ssid="27">Note that the reordering between lexical words and non-terminal leaf nodes is not considered here) and Discontinuous Phrase Rules (DPR: refers to these rules having at least one non-terminal leaf node between two lexicalized leaf nodes) in our tree sequence-based model (d = 4 and h = 6 ) Table 3 shows the contributions of SRR and DPR.</S>
    <S sid="130" ssid="28">It clearly indicates that SRRs are very effective in reordering structures, which improve performance by 1.45 (26.07-24.62) BLEU score.</S>
    <S sid="131" ssid="29">However, DPRs have less impact on performance in our tree sequence-based model.</S>
    <S sid="132" ssid="30">This seems in contradiction to the previous observations3 in literature.</S>
    <S sid="133" ssid="31">However, it is not surprising simply because we use tree sequences as the basic translation units.</S>
    <S sid="134" ssid="32">Thereby, our model can capture all phrases.</S>
    <S sid="135" ssid="33">In this sense, our model behaves like a phrasebased model, less sensitive to discontinuous phrases (Wellington et al., 2006).</S>
    <S sid="136" ssid="34">Our additional experiments also verify that discontinuous phrase rules are complementary to syntactic phrase rules (Bod, 2007) while non-syntactic phrase rules may compromise the contribution of discontinuous phrase rules.</S>
    <S sid="137" ssid="35">Table 4 reports the numbers of these two kinds of rules.</S>
    <S sid="138" ssid="36">It shows that around 30% rules are shared by the two kinds of rule sets.</S>
    <S sid="139" ssid="37">These overlapped rules contain at least two non-terminal leaf nodes plus two terminal leaf nodes, which implies that longer rules do not affect performance too much.</S>
    <S sid="140" ssid="38">Fig.</S>
    <S sid="141" ssid="39">5 studies the impact when setting different maximal tree depth ( h ) in a rule on the performance.</S>
    <S sid="142" ssid="40">It demonstrates that: 1) Significant performance improvement is achieved when the value of h is increased from 1 to 2.</S>
    <S sid="143" ssid="41">This can be easily explained by the fact that when h = 1, only monotonic search is conducted, while h =2 allows non-terminals to be leaf nodes, thus introducing preliminary structure features to the search and allowing non-monotonic search.</S>
    <S sid="144" ssid="42">2) Internal structures and large span (due to h increasing) are also useful as attested by the gain of 0.86 (26.14-25.28) Blue score when the value of h increases from 2 to 4.</S>
    <S sid="145" ssid="43">Fig.</S>
    <S sid="146" ssid="44">6 studies the impact on performance by setting different maximal tree number (d) in a rule.</S>
    <S sid="147" ssid="45">It further indicates that: 1) Tree sequence rules (d &gt;1) are useful and even more helpful if we limit the tree depth to no more than two (lower line, h=2).</S>
    <S sid="148" ssid="46">However, tree sequence rules consisting of more than three subtrees have almost no contribution to the performance improvement.</S>
    <S sid="149" ssid="47">This is mainly due to data sparseness issue when d &gt;3.</S>
    <S sid="150" ssid="48">2) Even if only two-layer sub-trees (lower line) are allowed, our method still outperforms STSG and Moses when d&gt;1.</S>
    <S sid="151" ssid="49">This further validates the effectiveness of our design philosophy of using multi-sub-trees as basic translation unit in SMT.</S>
  </SECTION>
  <SECTION title="7 Conclusions and Future Work" number="6">
    <S sid="152" ssid="1">In this paper, we present a tree sequence alignment-based translation model to combine the strengths of phrase-based and syntax-based methods.</S>
    <S sid="153" ssid="2">The experimental results on the NIST MT2005 Chinese-English translation task demonstrate the effectiveness of the proposed model.</S>
    <S sid="154" ssid="3">Our study also finds that in our model the tree sequence rules are very useful since they can model non-syntactic phrases and reorderings with rich linguistic structure features while discontinuous phrases and tree sequence rules with more than three sub-trees have less impact on performance.</S>
    <S sid="155" ssid="4">There are many interesting research topics on the tree sequence-based translation model worth exploring in the future.</S>
    <S sid="156" ssid="5">The current method extracts large amount of rules.</S>
    <S sid="157" ssid="6">Many of them are redundant, which make decoding very slow.</S>
    <S sid="158" ssid="7">Thus, effective rule optimization and pruning algorithms are highly desirable.</S>
    <S sid="159" ssid="8">Ideally, a linguistically and empirically motivated theory can be worked out, suggesting what kinds of rules should be extracted given an input phrase pair.</S>
    <S sid="160" ssid="9">For example, most function words and headwords can be kept in abstract rules as features.</S>
    <S sid="161" ssid="10">In addition, word alignment is a hard constraint in our rule extraction.</S>
    <S sid="162" ssid="11">We will study direct structure alignments to reduce the impact of word alignment errors.</S>
    <S sid="163" ssid="12">We are also interested in comparing our method with the forestto-string model (Liu et al., 2007).</S>
    <S sid="164" ssid="13">Finally, we would also like to study unsupervised learningbased bilingual parsing for SMT.</S>
  </SECTION>
</PAPER>
