<PAPER>
  <S sid="0">Three Heads Are Better Than One</S>
  <ABSTRACT/>
  <SECTION title="" number="1">
    <S sid="1" ssid="1">machine-readable dictionary (the Collins Spanish/English), the lexicons used by the KBMT modules, a large set of user-generated bilingual glossaries as well as a gazetteer and a list of proper and organization names.</S>
    <S sid="2" ssid="2">The outputs from these engines (target language words and phrases) are recorded in a chart whose positions correspond to words in the source language input.</S>
    <S sid="3" ssid="3">As a result of the operation of each of the MT engines, new edges are added to the chart, each labeled with the translation of a region of the input string and indexed by this region's beginning and end positions.</S>
    <S sid="4" ssid="4">We will refer to all of these edges as components (as in &amp;quot;components of the translation&amp;quot;) for the remainder of this article.</S>
    <S sid="5" ssid="5">The KBMT and EBMT engines also carry a quality score for each output element.</S>
    <S sid="6" ssid="6">The KBMT scores are produced based on whether any questionable heuristics were used in the source analysis or target generation.</S>
    <S sid="7" ssid="7">The EBMT scores are produced using a technique based on human judgements, as described in (Nirenburg et al., 1994a), submitted.</S>
    <S sid="8" ssid="8">Figure 1 presents a general view of the operation of our multi-engine MT system.</S>
    <S sid="9" ssid="9">The chart manager selects the overall best cover from the collection of candidate partial translations by normalizing each component's quality score (positive, with larger being better), and then selecting the best combination of components with the help of the chart walk algorithm.</S>
    <S sid="10" ssid="10">Figure 2 illustrates the result of this process on the example Spanish sentence: Al momenta de su yenta a Iberia, VIASA contaba con ocho aviones, que tenzan en promedio 13 anos de vuelo which can be translated into English as At the moment of its sale to Iberia, VIASA had eight airplanes, which had on average thirteen years of flight (time).</S>
    <S sid="11" ssid="11">This is a sentence from one of the 1993 ARPA MT evaluation texts.</S>
    <S sid="12" ssid="12">For each component, the starting and ending positions in the chart, the corresponding source language words, and alternative translations are shown, as well as the engine and the engine-internal quality scores.</S>
    <S sid="13" ssid="13">Inspection of these translations shows numerous problems; for example, at position 12, &amp;quot;aviones&amp;quot; is translated, among other things, as &amp;quot;aircrafts&amp;quot;.</S>
    <S sid="14" ssid="14">It must be remembered that these were generated automatically from an on-line dictionary, without any lexical feature marking or other human intervention.</S>
    <S sid="15" ssid="15">It is well known that such automatic methods are at the moment less than perfect, to say the least.</S>
    <S sid="16" ssid="16">In our current system, this is not a major problem, since the results go through a mandatory editing step, as described below.</S>
    <S sid="17" ssid="17">The chart manager normalizes the internal scores to make them directly comparable.</S>
    <S sid="18" ssid="18">In the case of KBMT and EBMT, the pre-existing scores are modified, while lexical transfer results are scored based on the estimated reliability of individual databases, from 0.5 up to 15.</S>
    <S sid="19" ssid="19">Currently the KBMT scores are reduced by a constant, except for known erroneous output, which has its score set to zero.</S>
    <S sid="20" ssid="20">The internal EBMT scores range from 0 being perfect to 10,000 being worthless; but the scores are nonlinear.</S>
    <S sid="21" ssid="21">So a region selected by a threshold is converted linearly into scores ranging from zero to a normalized maximum EBMT score.</S>
    <S sid="22" ssid="22">The normalization levels were empirically determined in the initial experiment by having several individuals judge the comparative average quality of the outputs in an actual translation run.</S>
    <S sid="23" ssid="23">In every case, the base score produced by the scoring functions is currently multiplied by the length of the candidate in words, on the assumption that longer items are better.</S>
    <S sid="24" ssid="24">We intend to test a variety of functions in order to find the right contribution of the length factor.</S>
    <S sid="25" ssid="25">Figure 3 presents the chart walk algorithm used to produce a single, best, non-overlapping, contiguous combination (cover) of the available component translations, assuming correct component quality scores.</S>
    <S sid="26" ssid="26">The code is organized as a recursive divideand-conquer procedure: to calculate the cover of a region of the input, it is repeatedly split into two parts, at each possible position.</S>
    <S sid="27" ssid="27">Each time, the best possible cover for each part is recursively found, and the two scores are combined to give a score for the chart walk containing the two best subwalks.</S>
    <S sid="28" ssid="28">These different splits are then compared with each other and with components from the chart spanning the whole region (if any), and the overall best result is Without dynamic programming, this would have a D 2 combinatorial time complexity.</S>
    <S sid="29" ssid="29">Dynamic programL 2.5 ming utilizes a large array to store partial results, so that the best cover of any given subsequence is only computed once; the second time that a recursive call would compute the same result, it is retrieved from the array instead.</S>
    <S sid="30" ssid="30">This reduces the time complexity to 0(n3), and in practice it uses an insignificant part of total processing time.</S>
    <S sid="31" ssid="31">G 5 All possible combinations of components are cornD 2 pared: this is not a heuristic method, but an efficient exhaustive one.</S>
    <S sid="32" ssid="32">This is what assures that the choG 5 sen cover is optimal.</S>
    <S sid="33" ssid="33">This assumes, in addition to the scores actually being correct, that the scores are compositional, in the sense that the combined score for a set of components really represents their quality as a group.</S>
    <S sid="34" ssid="34">This might not be the case, for example, if gaps or overlaps are allowed in some cases (perhaps where they contain the same words in the same positions).</S>
    <S sid="35" ssid="35">We calculate the combined score for a sequence of D 2 components as the weighted average of their individual scores.</S>
    <S sid="36" ssid="36">Weighting by length is necessary so that G 5 the same components, when combined in a different order, produce the same combined scores.</S>
    <S sid="37" ssid="37">Otherwise the algorithm can produce inconsistent results.</S>
    <S sid="38" ssid="38">E 8.8 The chart walk algorithm can also be thought of as filling in the two-dimensional dynamic-programming arrayl .</S>
    <S sid="39" ssid="39">Figure 4 shows an intermediate point in the filling of the array.</S>
    <S sid="40" ssid="40">In this figure, each element (i,j) is initially the best score of any single chart compoD 2 nent covering the input region from word i to word j. Dashes indicate that no one component covers exNote that this array is a different data structure from the chart. actly that region.</S>
    <S sid="41" ssid="41">(In rows 1 through 7, the array has not yet been operated on, so it still shows its initial state.)</S>
    <S sid="42" ssid="42">After processing (see rows 9 through 22), each element is the score for the best set of components covering the input from word i to word j (the best cover for this substring)2.</S>
    <S sid="43" ssid="43">(Only a truncated score is shown for each element in the figure, for readability.</S>
    <S sid="44" ssid="44">There is also a list of best components associated with each element.)</S>
    <S sid="45" ssid="45">The array is upper triangular since the starting position of a component i must be less than or equal to its ending position j.</S>
    <S sid="46" ssid="46">For any position, the score is calculated based on a combination of scores in the row to its left and in the column below it, versus the previous contents of the array cell for its position.</S>
    <S sid="47" ssid="47">So the array must be filled from the bottom-up, and left to right.</S>
    <S sid="48" ssid="48">Intuitively, this is because larger regions must be built up from smaller regions within them.</S>
    <S sid="49" ssid="49">For example, to calculate element (8,10), we compute the length-weighted averages of the scores of the best walks over the pair of elements (8,8) and (9,10) versus the pair (8,9) and (10,10), and compare them with the scores of any single chart components going from 8 to 10 (there were none), and take the maximum.</S>
    <S sid="50" ssid="50">Referring to Figure 2 again, this corresponds to a choice between combining the translations of (8,8) VIASA and (9,10) contaba con versus combining the (not shown) translations of (8,9) VIASA contaba and (10,10) con.</S>
    <S sid="51" ssid="51">(This (8,9) element was itself previously built up from single word components.)</S>
    <S sid="52" ssid="52">Thus, we compare (2*1+ 10*2)/3 = 7.33 with (3.5*2+2*1)/3 = 3.0 and select the first, 7.33.</S>
    <S sid="53" ssid="53">The first wins because contaba con has a high score as an idiom from the glossary.</S>
    <S sid="54" ssid="54">Figure 5 shows the final array.</S>
    <S sid="55" ssid="55">When the element in the top-right corner is produced (5.78), the algorithm is finished, and the associated set of components is the final chart walk result shown in Figure 2.</S>
    <S sid="56" ssid="56">It may seem that the scores should increase towards the top-right corner.</S>
    <S sid="57" ssid="57">This has not generally been the case.</S>
    <S sid="58" ssid="58">While the system produces a number of high-scoring short components, many lowscoring components have to be included to span the entire input.</S>
    <S sid="59" ssid="59">Since the score is a weighted average, these low-scoring components pull the combined score down.</S>
    <S sid="60" ssid="60">A clear example can be seen at position (18,18), which has a score of 15.</S>
    <S sid="61" ssid="61">The scores above and to its right each average this 15 with a 5, for total values of 10.0 (all the lengths happen to be 1), and the score continues to decrease with distance from this point as one moves towards the final score, which does include the component for (18,18) in the cover.</S>
    <S sid="62" ssid="62">The chart-oriented integration of MT engines does not easily support deviations from the linear order of the source text elements, as when discontinuous constituents translate contiguous strings or in the case of cross-component substring order differences.</S>
    <S sid="63" ssid="63">We use a language pair-dependent set of postprocessing rules to alleviate this (for example, by switching the order of adjacent single-word adjective and noun components).</S>
  </SECTION>
  <SECTION title="3 TRANSLATION DELIVERY SYSTEM" number="2">
    <S sid="64" ssid="1">Results of multi-engine MT were fed in our experiment into a translator's workstation (TWS) (Cohen et al., 1993), through which a translator either approved the system's output or modified it.</S>
    <S sid="65" ssid="2">The main option for human interaction in TWS currently is the Component Machine-Aided Translation (CMAT) editor (Frederking et al., 1993a).</S>
    <S sid="66" ssid="3">The user sees the original source language text in one editor window, and phrases marked by double angle brackets in another, each of which is the first translation from a candidate chosen by the chart walk.</S>
    <S sid="67" ssid="4">Menus, function keys and mouse clicks are used to perform both regular and enhanced editing actions.</S>
    <S sid="68" ssid="5">The most important enhancement provided is the ability to select an alternate translation with a popup menu, and instantly replace the system's initially chosen candidate translation string, which becomes the first alternative in this menu if it is used again.</S>
    <S sid="69" ssid="6">The alternate translations are the other translations from the chosen component3.</S>
    <S sid="70" ssid="7">As mentioned above, Figure 2 shows the sets of candidates in the best chart walk that are presented as choices to the human user through the CMAT editor in our example.</S>
  </SECTION>
  <SECTION title="4 TESTING AND EVALUATING MULTI-ENGINE PERFORMANCE" number="3">
    <S sid="71" ssid="1">Automatically assessing the utility of the multiengine system relative to the engines taken separately would be a useful development tool.</S>
    <S sid="72" ssid="2">The best method we could find was counting the number of keystrokes in the TWS to convert the outputs of individual engines and the multi-engine configuration to a &amp;quot;canonical&amp;quot; human translation.</S>
    <S sid="73" ssid="3">A sample test on a passage of 2060 characters from the June 1993 evaluation of Pangloss is shown in figure 6.</S>
    <S sid="74" ssid="4">The difference in keystrokes was calculated as follows: one keystroke for deleting a character; two 'The CMAT editor may also include translations from other candidates, lower in the menu, if they have the same boundaries as the chosen candidate and the menu is not too long. keystrokes for inserting a character; three keystrokes for deleting a word (in an editor with mouse action); three keystrokes plus the number of characters in the word being inserted for inserting a word.</S>
    <S sid="75" ssid="5">It is clear from the above table that the multi-engine configuration works better than any of our available individual engines, though it still does not reach the quality of a Level 2 translator.</S>
    <S sid="76" ssid="6">It is also clear that using keystrokes as a measure is not very satisfactory.</S>
    <S sid="77" ssid="7">It would be much better to make the comparison against the closest member of a set of equivalent paraphrastic translations, since there are many &amp;quot;correct&amp;quot; ways of translating a given input.</S>
    <S sid="78" ssid="8">However, this is predicated on the availability of a &amp;quot;paraphraser&amp;quot; system, developing which is not a trivial task.</S>
  </SECTION>
  <SECTION title="5 CURRENT AND FUTURE WORK" number="4">
    <S sid="79" ssid="1">Ultimately, a multi-engine system depends on the quality of each particular engine.</S>
    <S sid="80" ssid="2">We expect the performance of KBMT and EBMT to grow.</S>
    <S sid="81" ssid="3">We plan to use a standard regression mechanism to modify the scoring system based on feedback from having humans select the best covers for test texts.</S>
    <S sid="82" ssid="4">The current system is human-aided.</S>
    <S sid="83" ssid="5">We have begun an experiment with a fully-automated mode, with the understanding that the quality will drop.</S>
    <S sid="84" ssid="6">The most important effect of this change is that accurate quality scores become much more important, since the first choice becomes the only choice.</S>
    <S sid="85" ssid="7">Besides improving the KBMT and EBMT scoring mechanisms, we need to provide finer distinctions for the lexical transfer engine's output.</S>
    <S sid="86" ssid="8">As the databases for this are quite large (all together, over 400,000 entries), adding scores to individual entries is, in the short run, prohibitive.</S>
    <S sid="87" ssid="9">We have not as yet discovered any feasible automatic technique for generating such scores.</S>
    <S sid="88" ssid="10">Instead, we are planning to use an English language model on the output, in a manner similar to that done by speech and statistical translation systems (Brown et al., 1990).</S>
    <S sid="89" ssid="11">Statistically generating such a model is feasible, since it does not rely on knowing correspondences between source and target languages.</S>
    <S sid="90" ssid="12">It is a weaker approach, but should go some distance in selecting between otherwise indistinguishable outputs.</S>
    <S sid="91" ssid="13">Another possible direction for future development would be to employ ideas from the area of heuristic search, and only run the highest-quality-score engine on each unit of source text.</S>
    <S sid="92" ssid="14">This assumes that we can reliably estimate scores in advance (not currently true for the expensive engines), and that the engines can be run on fragments.</S>
    <S sid="93" ssid="15">A less ambitious version of this idea would be to run the low-scoring engines only where there are gaps in the normally high-scoring engines.</S>
  </SECTION>
</PAPER>
