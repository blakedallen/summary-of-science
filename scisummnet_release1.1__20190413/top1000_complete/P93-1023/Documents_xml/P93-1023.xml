<PAPER>
  <S sid="0">Towards The Automatic Identification Of Adjectival Scales: Clustering Adjectives According To Meaning</S>
  <ABSTRACT>
    <S sid="1" ssid="1">In this paper we present a method to group adjectives according to their meaning, as a first step towards the automatic identification of adjectival scales.</S>
    <S sid="2" ssid="2">We discuss the properties of adjectival scales and of groups of semantically related adjectives and how they imply sources of linguistic knowledge in text corpora.</S>
    <S sid="3" ssid="3">We describe how our system exploits this linguistic knowledge to compute a measure of similarity between two adjectives, using statistical techniques and without having access to any semantic information about the adjectives.</S>
    <S sid="4" ssid="4">We also show how a clustering algorithm can use these similarities to produce the groups of adjectives, and we present results produced by our system for a sample set of adjectives.</S>
    <S sid="5" ssid="5">We conclude by presenting evaluation methods for the task at hand, and analyzing the significance of the results obtained.</S>
  </ABSTRACT>
  <SECTION title="1." number="1">
    <S sid="6" ssid="1">As natural language processing systems become more oriented towards solving real-world problems like machine translation or spoken language understanding in a limited domain, their need for access to vast amounts of knowledge increases.</S>
    <S sid="7" ssid="2">While a model of the general rules of the language at various levels (morphological, syntactic, etc.) can be hand-encoded, knowledge which pertains to each specific word is harder to encode manually, if only because of the size of the lexicon.</S>
    <S sid="8" ssid="3">Most systems currently rely on human linguists or lexicographers who compile lexicon entries by hand.</S>
    <S sid="9" ssid="4">This approach requires significant amounts of time and effort for expanding the system's lexicon.</S>
    <S sid="10" ssid="5">Furthermore, if the compiled information depends in any way on the domain of the application, the acquisition of lexical knowledge must be repeated whenever the system is transported to another domain.</S>
    <S sid="11" ssid="6">For systems which need access to large lexicons, some form of at least partial automation of the lexical knowledge acquisition phase is needed.</S>
    <S sid="12" ssid="7">One type of lexical knowledge which is useful for many natural language (NL) tasks is the semantic relatedness between words of the same or different syntactic categories.</S>
    <S sid="13" ssid="8">Semantic relatedness subsumes hyponymy, synonymy, and antonymyincompatibility.</S>
    <S sid="14" ssid="9">Special forms of relatedness are represented in the lexical entries of the WordNet lexical database (Miller et al., 1990).</S>
    <S sid="15" ssid="10">Paradigmatic semantic relations in WordNet have been used for diverse NL problems, including disambiguation of syntactic structure (Resnik, 1993) and semiautomatic construction of a large-scale ontology for machine translation (Knight, 1993).</S>
    <S sid="16" ssid="11">In this paper, we focus on a particular case of semantic relatedness: relatedness between adjectives which describe the same property.</S>
    <S sid="17" ssid="12">We describe a technique for automatically grouping adjectives according to their meaning based on a given text corpus, so that all adjectives placed in one group describe different values of the same property.</S>
    <S sid="18" ssid="13">Our method is based on statistical techniques, augmented with linguistic information derived from the corpus, and is completely domain independent.</S>
    <S sid="19" ssid="14">It demonstrates how high-level semantic knowledge can be computed from large amounts of low-level knowledge (essentially plain text, part-of-speech rules, and optionally syntactic relations).</S>
    <S sid="20" ssid="15">The problem of identifying semantically related words has received considerable attention, both in computational linguistics (e.g. in connection with thesaurus or dictionary construction (Sparck-Jones, 1986)) and in psychology (Osgood et al., 1957).</S>
    <S sid="21" ssid="16">However, only recently has work been done on the automatic computation of such relationships from text, quantifying similarity between words and clustering them ( (Brown et al., 1992), (Pereira et al., 1993)).</S>
    <S sid="22" ssid="17">In comparison, our work emphasizes the use of shallow linguistic knowledge in addition to a statistical model and is original in the use of negative knowledge to constrain the search space.</S>
    <S sid="23" ssid="18">Furthermore, we use a flexible architecture which will allow us to easily incorporate additional knowledge sources for computing similarity.</S>
    <S sid="24" ssid="19">While our current system does not distinguish between scalar and non-scalar adjectives, it is a first step in the automatic identification of adjectival scales, since the scales can be subsequently ordered and the non-scalar adjectives filtered on the basis of independent tests, done in part automatically and in part by hand in a post-editing phase.</S>
    <S sid="25" ssid="20">The result is a semi-automated system for the compilation of adjectival scales.</S>
    <S sid="26" ssid="21">In the following sections, we first provide background on scales, then describe our algorithm in detail, present the results obtained, and finally provide a formal evaluation of the results.</S>
  </SECTION>
  <SECTION title="2." number="2">
    <S sid="27" ssid="1">A linguistic scale is a set of words, of the same grammatical category, which can be ordered by their semantic strength or degree of informativeness (Levinson, 1983).</S>
    <S sid="28" ssid="2">For example, lukewarm, warm, and hot fall along a single adjectival scale since they indicate a variation in the intensity of temperature of the modified noun (at least when used in their nonmetaphorical senses; metaphorical usage of scalar words normally also follows the order of the scale by analogy).</S>
    <S sid="29" ssid="3">Scales are not limited to adjectives; for example, (may, should, must) and (sometimes, often, always) (Horn, 1972) are linguistic scales consisting of auxiliary verbs expressing obligation and of adverbs expressing frequency respectively.</S>
    <S sid="30" ssid="4">In the case of adjectives, the above definition is commonly relaxed to replace the total order among the elements of the scale by a partial one, so that the elements of the scale may be partitioned into two groups (sub-scales), within each of which the order is total.</S>
    <S sid="31" ssid="5">The two sub-groups correspond to positive and negative degrees of the common property that the scale describes.</S>
    <S sid="32" ssid="6">For example, the set of adjectives (cold, lukewarm, warm, hot) are normally considered part of one scale, even though no direct ordering of semantic strength exists between cold and hot.</S>
    <S sid="33" ssid="7">Linguistic scales are known to possess interesting properties, derived from conventional logical entailment on the linear ordering of their elements and from Gricean scalar implicature (Levinson, 1983).</S>
    <S sid="34" ssid="8">Despite these properties and their potential usefulness in both understanding and generating natural language text, dictionary entries are largely incomplete for adjectives in this regard.</S>
    <S sid="35" ssid="9">Yet, if systems are to use the information encoded in adjectival scales for generation or interpretation (e.g. for selecting an adjective with a particular degree of semantic strength (Elhadad, 1991, Elhadad, 1993), or for handling negation), they must have access to the sets of words comprising a scale.</S>
    <S sid="36" ssid="10">Linguists have presented various tests for accepting or rejecting a particular scalar relationship between any two adjectives.</S>
    <S sid="37" ssid="11">For example, Horn (1969) proposed a test using the phrase &amp;quot;x even y&amp;quot; for two elements x and y of a totally ordered scale.</S>
    <S sid="38" ssid="12">More refined tests locate the position of an adjective in a scale relative to the neutral element or to the extremes of the scale (Bolinger, 1977).</S>
    <S sid="39" ssid="13">The common problem with these methods is that they are designed to be applied by a human who incorporates the two adjectives in specific sentential frames (e.g.</S>
    <S sid="40" ssid="14">&amp;quot;X is warm, even hot&amp;quot;) and assesses the semantic validity of the resulting sentences.</S>
    <S sid="41" ssid="15">Such tests cannot be used computationally to identify scales in a domain, since the specific sentences do not occur frequently enough in a corpus to produce an adequate description of the adjectival scales in the domain (Smadja, 1991).</S>
    <S sid="42" ssid="16">As scales vary across domains, the task of compiling such information is compounded.</S>
  </SECTION>
  <SECTION title="3." number="3">
    <S sid="43" ssid="1">Our algorithm, whose overall architecture is depicted in Figure 1, operates in four stages.</S>
    <S sid="44" ssid="2">First, we extract linguistic data from the parsed corpus in the form of syntactically related word pairs, or, more generally, sequences of syntactically related words; this co-occurrence information is processed by a morphology component and tabulated.</S>
    <S sid="45" ssid="3">In the second stage, the various types of co-occurrence relations which have been identified in the text are forwarded to a set of independent similarity modules, which operate in parallel.</S>
    <S sid="46" ssid="4">Each similarity module uses some linguistic criterion to judge the similarity or dissimilarity between any two adjectives, producing a real number between 0 and 1; a module may also refrain from making any judgement.</S>
    <S sid="47" ssid="5">The third stage combines the opinions of the various similarity modules in a single dissimilarity measure for any pair of adjectives.</S>
    <S sid="48" ssid="6">Finally, the fourth stage clusters the adjectives into groups according to the dissimilarity measure, so that adjectives with a high degree of pairwise similarity fall in the same cluster (and, consequently, adjectives with a low degree of similarity fall in different clusters).</S>
    <S sid="49" ssid="7">The algorithm currently uses two similarity modules based on two sources of linguistic data: data that help establish that two adjectives are related, and data that indicate that two adjectives are unrelated.</S>
    <S sid="50" ssid="8">First, we extract adjective-noun pairs that occur in a modification relation in order to identify the distribution of nouns an adjective modifies and, ultimately, determine which adjectives it is related to.</S>
    <S sid="51" ssid="9">This is based on the expectation that adjectives describing the same property tend to modify approximately the same set of nouns.</S>
    <S sid="52" ssid="10">For example, temperature is normally defined for physical objects and we can expect to find that adjectives conveying different values of temperature will all modify physical objects.</S>
    <S sid="53" ssid="11">Therefore, our algorithm finds the distribution of nouns that each adjective modifies and categorizes adjectives as similar if they have similar distributions.</S>
    <S sid="54" ssid="12">Second, we use adjective-adjective pairs occurring as pre-modifiers within the same NP as a strong indication that the two adjectives do not belong in the same group.</S>
    <S sid="55" ssid="13">There are three cases: The use of multiple types of linguistic data, in Note that sequences such as blue-green are usually hyphenated and thus better considered as a compound. addition to statistical measures, is a unique property of our work and significantly improves the accuracy of our results.</S>
    <S sid="56" ssid="14">One other published model for grouping semantically related words (Brown et al., 1992), is based on a statistical model of bigrams and trigrams and produces word groups using no linguistic knowledge, but no evaluation of the results is reported.</S>
    <S sid="57" ssid="15">During the first stage, the system extracts adjective-noun and adjective-adjective pairs from the corpus.</S>
    <S sid="58" ssid="16">To determine the syntactic category of each word, and identify the NP boundaries and the syntactic relations among the words, we used the Fidditch parser (Hindle, 1989).</S>
    <S sid="59" ssid="17">For each NP, we then determine its minimal NP, that part of an NP consisting of the head noun and its adjectival pre-modifiers2.</S>
    <S sid="60" ssid="18">We match a set of regular expressions, consisting of syntactic categories and representing the different forms a minimal NP can take, against the NPs.</S>
    <S sid="61" ssid="19">From the minimal NP, we produce the different pairs of adjectives and nouns, assuming that all adjectives modify the head noun3.</S>
    <S sid="62" ssid="20">This assumption is rarely invalid, because a minimal NP with multiple adjectives all modifying the head noun is far more common than a minimal NP with multiple adjectives where one of them modifies another.</S>
    <S sid="63" ssid="21">Furthermore, minimal NPs with multiple adjectives are relatively rare in the first place; most minimal NPs consist simply of a noun or an adjective and a noun.</S>
    <S sid="64" ssid="22">The resulting adjective-adjective and adjectivenoun pairs are filtered by a morphology component, which removes pairs that contain erroneous information (such as mistyped words, proper names, and closed-class words which may be mistakenly classified as adjectives (e.g. possessive pronouns)).</S>
    <S sid="65" ssid="23">This component also reduces the number of different pairs without losing information by transforming words to an equivalent, base form (e.g. plural nouns are converted to singular) so that the expected and actual frequencies of each pair are higher.</S>
    <S sid="66" ssid="24">Stage one then produces as output a simple list of adjective-adjective pairs that occurred within the same minimal NP and a table with the observed frequencies of every adjective-noun combination.</S>
    <S sid="67" ssid="25">Each row in the table contains the frequencies of modified nouns for a given adjective.</S>
    <S sid="68" ssid="26">This stage currently employs two similarity modules, each of which processes a part of the output of stage one and produces a measure of similarity for each possible pair of adjectives.</S>
    <S sid="69" ssid="27">The first module processes the adjective-noun frequency table; for each possible pair in the table we compare the two distributions of nouns.</S>
    <S sid="70" ssid="28">We use a robust non-parametric method to compute the similarity between the modified noun distributions for any two adjectives, namely Kendall's coefficient (Kendall, 1938) for two random variables with paired observations.</S>
    <S sid="71" ssid="29">In our case, the two random variables are the two adjectives we are comparing, and each paired observation is their frequency of cooccurrence with a given noun.</S>
    <S sid="72" ssid="30">Kendall's T coefficient compares the two variables by repeatedly comparing two pairs of their corresponding observations.</S>
    <S sid="73" ssid="31">Formally, if (Xi,Yi) and (XJ,Yi) are two pairs of observations for the adjectives X' and Y on the nouns i and j respectively, we call these pairs concordant if Xi&gt;XJ. and Y.&gt;Y. or if X&lt;X. and Y t &lt;11, otherwise these pairs are discordant.</S>
    <S sid="74" ssid="32">We discard ties, that is pairs of observations where Xi=Xf or Y/.YJ.'</S>
    <S sid="75" ssid="33">For example, Table 1 shows the frequencies observed for the co-occurrences of the nouns coordination and market and the adjectives global and international in the test corpus which is described in Section 4.</S>
    <S sid="76" ssid="34">From the table we observe that for i=coordination, j=market, X=global, and Y=intemational, we have Xi=16 &lt; 24=Xi and Y1=19 &lt;33=Y so this particular pair of paired' observations is concordant and contributes positively to the similarity between global and international.</S>
    <S sid="77" ssid="35">In general, if the distributions for the two adjectives are similar, we expect a large number of concordances, and a small number of discordances.</S>
    <S sid="78" ssid="36">Kendall's T is defined as where pc and pd are the probabilities of observing a concordance or discordance respectively.</S>
    <S sid="79" ssid="37">T ranges from -1 to +1, with +1 indicating complete concordance, -1 complete discordance, and 0 no correlation between X and Y.</S>
    <S sid="80" ssid="38">An unbiased estimator oft is the statistic where n is the number of paired observations in the sample and C and Q are the numbers of observed concordances and discordances respectively (Wayne, 1990).</S>
    <S sid="81" ssid="39">We compute T for each pair of adjectives, adjusting for possible ties in the values of each variable, so that our statistic remains an unbiased estimator of T. We determine concordances and discordances by sorting the pairs of observations (noun frequencies) on one of the variables (adjectives), and computing how many of the (3) pairs of paired observations agree or disagree with the expected order on the other adjective.</S>
    <S sid="82" ssid="40">We normalize the result to the range 0 to 1 using a simple linear transformation.</S>
    <S sid="83" ssid="41">The second similarity module utilizes the knowledge offered by the observed adjectiveadjective pairs.</S>
    <S sid="84" ssid="42">We know that the adjectives which appear in any such pair cannot be part of the same group, so the module produces zero similarity for all such pairs.</S>
    <S sid="85" ssid="43">The module does not output any similarity value for pairs of adjectives which have not been observed together in the same minimal NP.</S>
    <S sid="86" ssid="44">The two modules produce results of a significantly different character.</S>
    <S sid="87" ssid="45">The adjective-noun module always outputs a similarity value for any pair of adjectives, but these values tend to be around the middle of the range of possible values; rarely will the pattern of similarity or dissimilarity be strong enough to produce a value which has a large deviation from 0.5.</S>
    <S sid="88" ssid="46">This compression of the range of the similarity values can be attributed to the existence of many ties and many adjective-noun pairs with low frequencies, as would be expected by Zipf s law (Zipf, 1949).</S>
    <S sid="89" ssid="47">However, the expected number of concordances and discordances which can be attributed to chance will be the same (a random pair can produce a concordance or discordance with probability 0.5 for each), so the effect of chance fluctuations on T is not very significant.</S>
    <S sid="90" ssid="48">Furthermore, the robustness of the method guarantees that it will not be significantly influenced by any outliers (this is true for all rank based methods).</S>
    <S sid="91" ssid="49">Therefore, although we cannot have complete confidence in a statistical estimate like T, we expect the module to produce useful estimates of similarity.</S>
    <S sid="92" ssid="50">On the other hand, the adjective-adjective module produces similarity values with absolute certainty, since once two adjectives have been seen in the same NP even once, we can deduce that they do not belong in the same group.</S>
    <S sid="93" ssid="51">However, this negative knowledge is computed only for a few of the possible pairs of adjectives, and it cannot be propagated to more pairs as dissimilarity is not a transitive relation.</S>
    <S sid="94" ssid="52">As a result we can make some inferences with very high confidence, but we cannot make very many of them.</S>
    <S sid="95" ssid="53">In stage three we combine the values produced by the various similarity modules in stage two using a pre-specified algorithm.</S>
    <S sid="96" ssid="54">The output of this stage is a single table of dissimilarity values (as required by the next stage) having one entry for each adjective pair.</S>
    <S sid="97" ssid="55">Currently we have only the two similarity modules described in the previous subsection, so we employ the following simple algorithm: for any pair of adjectives (x,y) do if the adjective-adjective module has no opinion on (x,y) then dissimilarity = 1 - (the similarity reported by the adjective-noun module) else dissimilarity = some constant As can be easily seen, the algorithm has complete confidence in the results of the adjective-adjective module whenever that module has an opinion; when it does not, the algorithm uses the similarity value produced by the adjective-noun module, after a simple linear transformation is applied to convert it to a dissimilarity.</S>
    <S sid="98" ssid="56">The choice of the constant k reflects how undesirable it is to place in the same group two adjectives which have been observed in the same minimal NP.</S>
    <S sid="99" ssid="57">Since we consider the results of the adjective-adjective module more reliable than the adjective-noun module, we use a high value for k, k=10; this practically guarantees that a suggestion by the adjective-adjective module will be respected by the clustering algorithm unless the evidence for the contrary is overwhelming.</S>
    <S sid="100" ssid="58">Note that by placing complete confidence in the output of the adjective-adjective module, the algorithm of stage three is sensitive to small errors that this module may perform.</S>
    <S sid="101" ssid="59">An incorrect suggestion would make possibly related adjectives be kept separate.</S>
    <S sid="102" ssid="60">However, this problem looks more severe than it really is.</S>
    <S sid="103" ssid="61">An erroneous opinion produced by that module must correspond to a violation of one of the three linguistic principles listed at the start of this section; such violations do not occur in carefully written English (as is our test corpus of Associated Press news reports).</S>
    <S sid="104" ssid="62">In fact, during the analysis of the corpus for our test set of adjectives we found no erroneously identified pairs of adjectives; however, if the system is used with a less well written, or even spoken, corpus, the complete confidence in the adjective-adjective module may need to be reduced.</S>
    <S sid="105" ssid="63">This can be accomplished by taking into account the frequency of an adjective-adjective pair, and making our confidence an increasing function of this frequency.</S>
    <S sid="106" ssid="64">When new similarity modules, such as the ones discussed in Section 6, are added to the system, the above algorithm will be inadequate for combining their suggestions.</S>
    <S sid="107" ssid="65">We plan to extend the algorithm to compute an extended weighted average of the similarities and/or dissimilarities produced by these modules, and add a separate training component which will determine the appropriate value for the weight of each module.</S>
    <S sid="108" ssid="66">In stage four we form groups of adjectives (a partition) according to the combined dissimilarity values computed in the previous stage.</S>
    <S sid="109" ssid="67">We want to find a partition which is optimal, in the sense that adjectives with high dissimilarity are placed in different groups.</S>
    <S sid="110" ssid="68">We use a non-hierarchical clustering algorithm, since such algorithms are in general stronger than hierarchical methods (Kaufman and Rousseeuw, 1990).</S>
    <S sid="111" ssid="69">The number of clusters produced is an input parameter.</S>
    <S sid="112" ssid="70">The algorithm uses the exchange method (Spath, 1985) since the more commonly used Kmeans method (Kaufman and Rousseeuw, 1990) is not applicable; the K-means method, like all centroid methods, requires the measure d between the clustered objects to be a distance; this means, among other conditions, that for any three objects x, y, and z the triangle inequality applies.</S>
    <S sid="113" ssid="71">However, this inequality does not necessarily hold for our dissimilarity measure.</S>
    <S sid="114" ssid="72">If the adjectives x and y were observed in the same minimal NP, their dissimilarity is quite large.</S>
    <S sid="115" ssid="73">If neither z and x nor z and y were found in the same minimal NP, then it is quite possible that the sum of their dissimilarities could be less than the dissimilarity between x and y.</S>
    <S sid="116" ssid="74">The algorithm tries to produce a partition of the set of adjectives as close as possible to the optimal one.</S>
    <S sid="117" ssid="75">This is accomplished by minimizing an objective function (Ico which scores a partition P. The objective function we use is The algorithm starts by producing a random partition of the adjectives, computing its 0:1) value and then for each adjective computing the improvement in (1) for every cluster where it can be moved; the adjective is moved to the cluster that yields the best improvement of (13 if there is such a cluster and the next adjective is considered.</S>
    <S sid="118" ssid="76">This procedure is repeated until no more moves lead to an improvement of O.</S>
    <S sid="119" ssid="77">This is a hill-climbing method and therefore is guaranteed to converge, but it may lead to a local minimum of (1), inferior to the global minimum that corresponds to the optimal solution.</S>
    <S sid="120" ssid="78">To alleviate this problem, the partitioning algorithm is called repeatedly with different random starting partitions and the best solution in these runs is kept.</S>
    <S sid="121" ssid="79">As with many practical optimization problems, computing the optimal solution is NP-complete (Brucker, 1978).</S>
    <S sid="122" ssid="80">Note that if the problem's search space had been relatively small, then we could have computed the optimal partition by enumerating all possible solutions and keeping the best one.</S>
    <S sid="123" ssid="81">However, again as with many other practical optimization problems, the search space turns out to be intractably large.</S>
    <S sid="124" ssid="82">The number of possible partitions of n objects to m nonempty subsets with mtt is equal to the corresponding Stirling number of the second kind (Knuth, 1973), and this number grows exponentially with n for all but trivial values of m. For example, for our test set of adjectives presented in the next section, we have n=21 and m=9; the corresponding number of possible partitions is roughly 1.23 x 1014.</S>
  </SECTION>
  <SECTION title="4." number="4">
    <S sid="125" ssid="1">We tested our system on a 8.2 million word corpus of stock market reports from the Associated Press news wire.</S>
    <S sid="126" ssid="2">A subset of 21 of the adjectives in the corpus (Figure 2) was selected for practical reasons (mainly for keeping the evaluation task tractable).</S>
    <S sid="127" ssid="3">We selected adjectives that have one modified noun in common (problem) to ensure some semantic relatedness, and we included only adjectives that occurred frequently so that our similarity measure would be meaningful.</S>
    <S sid="128" ssid="4">The partition produced by the system for 9 clusters appears in Figure 3.</S>
    <S sid="129" ssid="5">Before presenting a formal evaluation of the results, we note that this partition contains interesting data.</S>
    <S sid="130" ssid="6">First, the results contain two clusters of gradable adjectives which fall in the same scale.</S>
    <S sid="131" ssid="7">Groups 5 and 8 contain adjectives that indicate the size, or scope, of a problem; by augmenting the system with tests to identify when an adjective is gradable, we could separate out these two groups from other potential scales, and perhaps consider combining them.</S>
    <S sid="132" ssid="8">Second, groups 1 and 6 clearly identify separate sets of non-gradable adjectives.</S>
    <S sid="133" ssid="9">The first contains adjectives that describe the geographical scope of the problem.</S>
    <S sid="134" ssid="10">Although at first sight we would classify these adjectives as non-scalar, we observed that the phrase international, even global, problem is acceptable while the phrase *global, even international, problem is not.</S>
    <S sid="135" ssid="11">These patterns seem to suggest at least some degree of scalability.</S>
    <S sid="136" ssid="12">On the other hand, group 6 contains non-scalar relational adjectives that specify the nature of the problem.</S>
    <S sid="137" ssid="13">It is interesting to note here that the clustering algorithm discourages long groups, with the expected number of adjectives per cluster being -&#167;- ---- 2.33; nevertheless, the evidence for the adjectives in group 6 is strong enough to allow the creation of a group with more than twice the expected number of members.</S>
    <S sid="138" ssid="14">Finally, note that even in group 4 which is the weakest group produced, there is a positive semantic correlation between the adjectives new and unexpected.</S>
    <S sid="139" ssid="15">To summarize, the system seems to be able to identify many of the existent semantic relationships among the adjectives, while its mistakes are limited to creating singleton groups containing adjectives that are related to other adjectives in the test set (e.g., missing the semantic associations between new-old and potential-real) and &amp;quot;recognizing&amp;quot; a non-significant relationship between real and new-unexpected in group 4.</S>
    <S sid="140" ssid="16">We produced good results with a relatively small corpus of 8.2 million words4, out of which only 34,359 total / 3,073 distinct adjective-noun pairs involving 1,509 distinct nouns were relevant to our test set of 21 adjectives (Figure 2).</S>
    <S sid="141" ssid="17">The accuracy of the results can be improved if a larger, homogeneous corpus is used to provide the raw data.</S>
    <S sid="142" ssid="18">Also, we can increase the size of the adjective-noun and adjectiveadjective data that we are using if we introduce more syntactic patterns in stage one to extract more complex cases of pairs.</S>
    <S sid="143" ssid="19">Furthermore, some of the associations between adjectives that the system reports appear to be more stable than others; these associations remain in the same group when we vary the number of clusters in the partition.</S>
    <S sid="144" ssid="20">We have noticed that adjectives with a higher degree of semantic content (e.g. international or severe) appear to form more stable associations than relatively semantically empty adjectives (e.g. little or real).</S>
    <S sid="145" ssid="21">This observation can be used to filter out adjectives which are too general to be meaningfully clustered in groups.</S>
  </SECTION>
  <SECTION title="5." number="5">
    <S sid="146" ssid="1">To evaluate the performance of our system we compared its output to a model solution for the problem designed by humans.</S>
    <S sid="147" ssid="2">Nine human judges were presented with the set of adjectives to be partitioned, a description of the domain, and a simple example.</S>
    <S sid="148" ssid="3">They were told that clusters should not overlap but they could select any number of clusters (the judges used from 6 to 11 clusters, with an average of 8.565 and a sample standard deviation of 1.74).</S>
    <S sid="149" ssid="4">Note that this evaluation method differs significantly from the alternative method of asking the humans to directly estimate the goodness of the system's results (e.g.</S>
    <S sid="150" ssid="5">(Matsukawa, 1993)).</S>
    <S sid="151" ssid="6">It requires an explicit construction of a model from the human judge and places the burden of the comparison between the model and the system's output on the system instead of the judge.</S>
    <S sid="152" ssid="7">It has been repeatedly demonstrated that in complex evaluation tasks humans can easily find arguments to support observed data, leading to biased results and to an inflation of the evaluation scores.</S>
    <S sid="153" ssid="8">To score our results, we converted the comparison of two partitions to a series of yes-no questions, each of which has a correct answer (as dictated by the model) and an answer assigned by the system.</S>
    <S sid="154" ssid="9">For each pair of adjectives, we asked if they fell in the same cluster (&amp;quot;yes&amp;quot;) or not (&amp;quot;no&amp;quot;).</S>
    <S sid="155" ssid="10">Since human judges did not always agree, we used fractional values for the correctness of each answer instead of 0 (&amp;quot;incorrect&amp;quot;) and 1 (&amp;quot;correct&amp;quot;).</S>
    <S sid="156" ssid="11">We defined the correctness of each answer as the relative frequency of the association between the two adjectives among the human models and the incorrectness of each answer as 1 - correctness; in this way, associations receive a correctness value proportional to their popularity among the human judges.</S>
    <S sid="157" ssid="12">For example, in the sample set of adjectives discussed in the previous section, the association (foreign, international) received a correctness value of 1, since all the humans placed these two adjectives in the same group, while the association (legal, severe) received a correctness value of 0.</S>
    <S sid="158" ssid="13">The pair (economic, political) on the other hand received a correctness value of 0.67, since two thirds of the judges placed the two adjectives in the same group.</S>
    <S sid="159" ssid="14">Once correctness and incorrectness values have been defined, we can generalize measures such as &amp;quot;the number of correct associations retrieved by the system&amp;quot; by using summation of those values instead of counting.</S>
    <S sid="160" ssid="15">Then the contingency table model (Swets, 1969), widely used in Information Retrieval and Psychology, is applicable.</S>
    <S sid="161" ssid="16">Referring to the classification of the yes-no answers in Table 2, the following measures are defined: a 7&#8212; i.d In other words, recall is the percentage of correct &amp;quot;yes&amp;quot; answers that the system found among the model &amp;quot;yes&amp;quot; answers, precision is the percentage of correct &amp;quot;yes&amp;quot; answers among the total of &amp;quot;yes&amp;quot; answers that the system reported, and fallout is the percentage of incorrect &amp;quot;yes&amp;quot; answers relative to the total number of &amp;quot;no&amp;quot; answers6.</S>
    <S sid="162" ssid="17">Note that in our generalized contingency table model, the symbols a, b, c, and d do not represent numbers of observed associations but rather sums of correctness or incorrectness values.</S>
    <S sid="163" ssid="18">These sums use correctness values for the quantities in the first column of Table 2 and incorrectness values for the quantities in the second column of Table 2.</S>
    <S sid="164" ssid="19">Furthermore, the summation is performed over all pairs reported or not reported by the system for quantities in the first or second row of Table 2 respectively.</S>
    <S sid="165" ssid="20">Consequently, the information theoretic measures represent the generalized counterparts of their original definitions.</S>
    <S sid="166" ssid="21">In the case of perfect agreement between the models, or of only one model, the generalized measures reduce to their original definitions.</S>
    <S sid="167" ssid="22">We also compute a combined measure for recall and precision, the F-measure (Van Rijsbergen, 1979), which always takes a value between the values of recall and precision, and is higher when recall and precision are closer; it is defined as where 3 is the weight of recall relative to precision; we use 13.1.0, which corresponds to equal weighting of the two measures.</S>
    <S sid="168" ssid="23">The results of applying our evaluation method to the system output (Figure 3) are shown in Table 3, which also includes the scores obtained for several other sub-optimal choices of the number of clusters.</S>
    <S sid="169" ssid="24">We have made these observations related to the evaluation mechanism: there has been increasing concern that the scoring methods used for evaluating the goodness of parsers are producing values which seem extremely good (in the &gt;90% range), while in fact the parse trees produced are not so satisfactory; the blame for this inflation of the scores can be assigned to an inadequate comparison technique, which essentially considers a tree fragment correct when it is a part of (although not exactly matching) the corresponding fragment in the model.</S>
    <S sid="170" ssid="25">For other tasks, such as part-of-speech assignment to free text, the comparison techniques are sound, but very high levels of performance (e.g.</S>
    <S sid="171" ssid="26">90%) can be obtained by a zeroparameter model which operates at random; clearly this makes the assessment of the significance of an improvement over the base line of the random algorithm much harder.</S>
    <S sid="172" ssid="27">As a consequence of point (3) made above, we need to understand the significance of the scores produced by our evaluation methods (for example, the limits of their ranges) before trying to interpret them.</S>
    <S sid="173" ssid="28">There are theoretical principles which indicate that the evaluation metrics will produce lower values much more easily than higher ones.</S>
    <S sid="174" ssid="29">Because of the multiple models used, perfect scores are not attainable.</S>
    <S sid="175" ssid="30">Also, because each pair of adjectives in a cluster is considered an observed association, the relationship between the number of associations produced by a cluster and the number of adjectives in the cluster is not linear (a cluster with k adjectives will produce () k 0(k2) associations).</S>
    <S sid="176" ssid="31">This leads to lower values 2/ of recall, since moving a single adjective out of a cluster with k elements in the model will cause the system to miss k-1 associations.</S>
    <S sid="177" ssid="32">As an example of this phenomenon, consider the hypothetical (single) model and partition of Figure 4; while the partition differs from the model only in that the first cluster has been split into two, the recall score abruptly falls to 50%.</S>
    <S sid="178" ssid="33">In order to provide empirical evidence in addition to the theoretical discussion above, and be able to estimate an upper bound on the values of the evaluation metrics, we evaluated each human model against all the other human models, using the same evaluation method which was used for the system; the results ranged from 38 to 72% for recall, 1 to 12% for fallout, 38 to 81% for precision, and, covering a remarkably short range, 49 to 59% for F-measure7, indicating that the performance of the system is not far behind human performance.</S>
    <S sid="179" ssid="34">In order to provide a lower bound for the evaluation metrics and thus show that the system's scores are not close to the scores of the human judges simply by chance, we performed a Monte Carlo analysis (Rubinstein, 1981) for the evaluation metrics, by repeatedly creating random partitions of the sample adjectives and evaluating the results.</S>
    <S sid="180" ssid="35">Then we estimated a smoothed probability density function for each metric from the resulting histograms; the results obtained are shown in Figure 5 for F-measure and fallout using 9 clusters.</S>
    <S sid="181" ssid="36">We observed that the system's performance (indicated by a square in the diagrams) was significantly better than what we would expect under the null hypothesis of random performance; the probability of getting a better partition than the system's is extremely small for all metrics (no occurrence in 20,000 trials) except for fallout, for which a random system may be better 4.9% of the time.</S>
    <S sid="182" ssid="37">The estimated density functions also show that the metrics are severely constrained by the structure imposed by the clustering as they tend to peak at some point and then fall rapidly.</S>
    <S sid="183" ssid="38">Finally, we performed another study to quantify the impact of using negative knowledge obtained from adjective-adjective pairs.</S>
    <S sid="184" ssid="39">We ran our system in a mode where the suggestions of the adjectiveadjective module were ignored (i.e. stage three simply passed to the output the similarities computed by the adjective-noun module, after converting them to dissimilarities), and evaluated the results produced.</S>
    <S sid="185" ssid="40">The values of the metrics for the partition with 9 clusters appear in Table 4, alongside the corresponding values produced when the system uses both modules.</S>
    <S sid="186" ssid="41">When both modules are used, we can see a significant improvement of about 15 points, which is a 43% to 50% improvement for all metrics (except for fallout where the improvement is about 17%).</S>
    <S sid="187" ssid="42">This represents a definite improvement even though for our test set of 21 adjectives (Figure 2) we observed in our corpus only 41 distinct adjectiveadjective pairs, out of a possible (221)=210 pairs.</S>
    <S sid="188" ssid="43">Al7Thus indicating that human models which fared well on the precision metric tended to perform badly on recall, and vice versa; remember that the values of the metrics are related to the number of clusters used, and that the human judges were allowed to select the number of clusters they considered most appropriate; consequently, the models with high recall/low precision are the ones with a small number of clusters, while the opposite pattern of scores characterizes the models with a large number of clusters. though the observed pairs represent only 19.52% of the possible pairs, their importance is considerable.</S>
    <S sid="189" ssid="44">Note that the sparsity of the adjective-adjective pairs does not allow us to perform a comparable study for the partition produced using the adjectiveadjective module alone, since such a partition would be largely determined by chance.</S>
  </SECTION>
  <SECTION title="6." number="6">
    <S sid="190" ssid="1">We have described a system for extracting groups of semantically related adjectives from large text corpora, with a flexible architecture which allows for multiple knowledge sources influencing similarity to be easily incorporated into the system.</S>
    <S sid="191" ssid="2">Our evaluation reveals that it has significantly high performance levels, comparable to humans, using only a relatively small amount of input data; in addition, it shows the usefulness of negative knowledge, an original feature of our approach.</S>
    <S sid="192" ssid="3">The system's results can be filtered to produce scalar adjectives that are applicable in any given domain.</S>
    <S sid="193" ssid="4">Furthermore, while we have demonstrated the algorithm on adjectives, it can be directly applied to other word classes once sources of linguistic information for judging their similarity have been identified.</S>
    <S sid="194" ssid="5">Our immediate plans are to incorporate more similarity modules into stage two of the system and add a training component to stage three so that the relative weights of the various modules can be estimated.</S>
    <S sid="195" ssid="6">We have identified several additional sources of linguistic knowledge which look promising, namely pairs of adjectives separated by connectives and adverb-adjective pairs.</S>
    <S sid="196" ssid="7">We also plan to extend the adjective-noun module to cover adjectives in predicative positions, in addition to our current use of attributive adjectives.</S>
    <S sid="197" ssid="8">These extensions not only will provide us with a better way of exploiting the information in the corpus but may also help us categorize the adjectives as relational or attributive (Levi, 1978); such a categorization may be useful in classifying them as either scalar or non-scalar.</S>
    <S sid="198" ssid="9">For determining whether a group of adjectives is scalar, we also plan to use the gradability of the adjectives as observed in the corpus.</S>
    <S sid="199" ssid="10">In addition, we are exploring tests for determining whether two adjectives are antonymous, essentially in the opposite direction of the work by Justeson and Katz (1991) , and tests for comparing the relative semantic strength of two adjectives.</S>
    <S sid="200" ssid="11">Furthermore, we plan to consider alternative evaluation methods and test our system on a much larger set of adjectives.</S>
    <S sid="201" ssid="12">That was not done for the current evaluation because of the difficulty for humans of constructing large models.</S>
    <S sid="202" ssid="13">We are considering an evaluation method which would use a thesaurus to judge similarity, as well as a supplementary method based on mathematical properties of the clustering.</S>
    <S sid="203" ssid="14">Neither of these methods would access any human models.</S>
    <S sid="204" ssid="15">The mathematical method, which uses cluster silhouettes and the silhouette coefficient (Kaufman and Rousseeuw, 1990), can also be used to automatically determine the proper number of clusters, one of the hardest problems in cluster analysis.</S>
    <S sid="205" ssid="16">We also plan a formal study to evaluate the appropriateness of the clustering method used, by computing and evaluating the results when a hierarchical algorithm is employed instead in stage four.</S>
    <S sid="206" ssid="17">Eventually, we plan to evaluate the system's output by using it to augment adjective entries in a lexicon and test the augmented lexicon in an application such as language generation.</S>
  </SECTION>
  <SECTION title="ACKNOWLEDGEMENTS" number="7">
    <S sid="207" ssid="1">This work was supported jointly by DARPA and ONR under contract N00014-894-1782, by NSF GER-90-24069, and by New York State Center for Advanced Technology Contract NYSSTFCAT(91)-053.</S>
    <S sid="208" ssid="2">We wish to thank Diane Litman and Donald Hindle for providing us with access to the Fidditch parser at AT&amp;T Bell Labs, and Karen Kulcich and Frank Smadja for providing us with access to the Associated Press news wire corpus.</S>
    <S sid="209" ssid="3">Finally, we thank Rebecca Passonneau and the anonymous reviewers for providing us with useful comments on earlier versions of the paper.</S>
  </SECTION>
</PAPER>
