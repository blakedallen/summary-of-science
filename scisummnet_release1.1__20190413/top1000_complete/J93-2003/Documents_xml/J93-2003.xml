<PAPER>
  <S sid="0">The Mathematics Of Statistical Machine Translation: Parameter Estimation</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We describe a series of five statistical models of the translation process and give algorithms for estimating the parameters of these models given a set of pairs of sentences that are translations of one another.</S>
    <S sid="2" ssid="2">We define a concept of word-by-word alignment between such pairs of sentences.</S>
    <S sid="3" ssid="3">For any given pair of such sentences each of our models assigns a probability to each of the possible word-by-word alignments.</S>
    <S sid="4" ssid="4">We give an algorithm for seeking the most probable of these alignments.</S>
    <S sid="5" ssid="5">Although the algorithm is suboptimal, the alignment thus obtained accounts well for the word-by-word relationships in the pair of sentences.</S>
    <S sid="6" ssid="6">We have a great deal of data in French and English from the proceedings of the Canadian Parliament.</S>
    <S sid="7" ssid="7">Accordingly, we have restricted our work to these two languages; but we feel that because our algorithms have minimal linguistic content they would work well on other pairs of languages.</S>
    <S sid="8" ssid="8">We also feel, again because of the minimal linguistic content of our algorithms, that it is reasonable to argue that word-by-word alignments are inherent in any sufficiently large bilingual corpus.</S>
  </ABSTRACT>
  <SECTION title="" number="1">
    <S sid="9" ssid="1">We describe a series of five statistical models of the translation process and give algorithms for estimating the parameters of these models given a set of pairs of sentences that are translations of one another.</S>
    <S sid="10" ssid="2">We define a concept of word-by-word alignment between such pairs of sentences.</S>
    <S sid="11" ssid="3">For any given pair of such sentences each of our models assigns a probability to each of the possible word-by-word alignments.</S>
    <S sid="12" ssid="4">We give an algorithm for seeking the most probable of these alignments.</S>
    <S sid="13" ssid="5">Although the algorithm is suboptimal, the alignment thus obtained accounts well for the word-by-word relationships in the pair of sentences.</S>
    <S sid="14" ssid="6">We have a great deal of data in French and English from the proceedings of the Canadian Parliament.</S>
    <S sid="15" ssid="7">Accordingly, we have restricted our work to these two languages; but we feel that because our algorithms have minimal linguistic content they would work well on other pairs of languages.</S>
    <S sid="16" ssid="8">We also feel, again because of the minimal linguistic content of our algorithms, that it is reasonable to argue that word-by-word alignments are inherent in any sufficiently large bilingual corpus.</S>
  </SECTION>
  <SECTION title="1." number="2">
    <S sid="17" ssid="1">The growing availability of bilingual, machine-readable texts has stimulated interest in methods for extracting linguistically valuable information from such texts.</S>
    <S sid="18" ssid="2">For example, a number of recent papers deal with the problem of automatically obtaining pairs of aligned sentences from parallel corpora (Warwick and Russell 1990; Brown, Lai, and Mercer 1991; Gale and Church 1991b; Kay 1991).</S>
    <S sid="19" ssid="3">Brown et al. (1990) assert, and Brown, Lai, and Mercer (1991) and Gale and Church (1991b) both show, that it is possible to obtain such aligned pairs of sentences without inspecting the words that the sentences contain.</S>
    <S sid="20" ssid="4">Brown, Lai, and Mercer base their algorithm on the number of words that the sentences contain, while Gale and Church base a similar algorithm on the number of characters that the sentences contain.</S>
    <S sid="21" ssid="5">The lesson to be learned from these two efforts is that simple, statistical methods can be surprisingly successful in achieving linguistically interesting goals.</S>
    <S sid="22" ssid="6">Here, we address a natural extension of that work: matching up the words within pairs of aligned sentences.</S>
    <S sid="23" ssid="7">In recent papers, Brown et al. (1988, 1990) propose a statistical approach to machine translation from French to English.</S>
    <S sid="24" ssid="8">In the latter of these papers, they sketch an algorithm for estimating the probability that an English word will be translated into any particular French word and show that such probabilities, once estimated, can be used together with a statistical model of the translation process to align the words in an English sentence with the words in its French translation (see their Figure 3).</S>
    <S sid="25" ssid="9">Pairs of sentences with words aligned in this way offer a valuable resource for work in bilingual lexicography and machine translation.</S>
    <S sid="26" ssid="10">Section 2 is a synopsis of our statistical approach to machine translation.</S>
    <S sid="27" ssid="11">Following this synopsis, we develop some terminology and notation for describing the word-byword alignment of pairs of sentences.</S>
    <S sid="28" ssid="12">In Section 4 we describe our series of models of the translation process and give an informal discussion of the algorithms by which we estimate their parameters from data.</S>
    <S sid="29" ssid="13">We have written Section 4 with two aims in mind: first, to provide the interested reader with sufficient detail to reproduce our results, and second, to hold the mathematics at the level of college calculus.</S>
    <S sid="30" ssid="14">A few more difficult parts of the discussion have been postponed to the Appendix.</S>
    <S sid="31" ssid="15">In Section 5, we present results obtained by estimating the parameters for these models from a large collection of aligned pairs of sentences from the Canadian Hansard data (Brown, Lai, and Mercer 1991).</S>
    <S sid="32" ssid="16">For a number of English words, we show translation probabilities that give convincing evidence of the power of statistical methods to extract linguistically interesting correlations from large corpora.</S>
    <S sid="33" ssid="17">We also show automatically derived word-by-word alignments for several sentences.</S>
    <S sid="34" ssid="18">In Section 6, we discuss some shortcomings of our models and propose modifications to address some of them.</S>
    <S sid="35" ssid="19">In the final section, we discuss the significance of our work and the possibility of extending it to other pairs of languages.</S>
    <S sid="36" ssid="20">Finally, we include two appendices: one to summarize notation and one to collect the formulae for the various models that we describe and to fill an occasional gap in our development.</S>
  </SECTION>
  <SECTION title="2." number="3">
    <S sid="37" ssid="1">In 1949, Warren Weaver suggested applying the statistical and cryptanalytic techniques then emerging from the nascent field of communication theory to the problem of using computers to translate text from one natural language to another (published in Weaver 1955).</S>
    <S sid="38" ssid="2">Efforts in this direction were soon abandoned for various philosophical and theoretical reasons, but at a time when the most advanced computers were of a piece with today's digital watch, any such approach was surely doomed to computational starvation.</S>
    <S sid="39" ssid="3">Today, the fruitful application of statistical methods to the study of machine translation is within the computational grasp of anyone with a well-equipped workstation.</S>
    <S sid="40" ssid="4">A string of English words, e, can be translated into a string of French words in many different ways.</S>
    <S sid="41" ssid="5">Often, knowing the broader context in which e occurs may serve to winnow the field of acceptable French translations, but even so, many acceptable translations will remain; the choice among them is largely a matter of taste.</S>
    <S sid="42" ssid="6">In statistical translation, we take the view that every French string, f, is a possible translation of e. We assign to every pair of strings (e, f) a number Pr (f le), which we interpret as the probability that a translator, when presented with e, will produce f as his translation.</S>
    <S sid="43" ssid="7">We further take the view that when a native speaker of French produces a string of French words, he has actually conceived of a string of English words, which he translated mentally.</S>
    <S sid="44" ssid="8">Given a French string f, the job of our translation system is to find the string e that the native speaker had in mind when he produced f. We minimize our chance of error by choosing that English string e for which Pr (e If ) is greatest.</S>
    <S sid="45" ssid="9">Using Bayes' theorem, we can write Since the denominator here is independent of e, finding &#234; is the same as finding e so as to make the product Pr(e) Pr(fl e) as large as possible.</S>
    <S sid="46" ssid="10">We arrive, then, at the Fundamental Equation of Machine Translation: As a representation of the process by which a human being translates a passage from French to English, this equation is fanciful at best.</S>
    <S sid="47" ssid="11">One can hardly imagine someone rifling mentally through the list of all English passages computing the product of the a priori probability of the passage, Pr(e), and the conditional probability of the French passage given the English passage, POI e).</S>
    <S sid="48" ssid="12">Instead, there is an overwhelming intuitive appeal to the idea that a translator proceeds by first understanding the French, and then expressing in English the meaning that he has thus grasped.</S>
    <S sid="49" ssid="13">Many people have been guided by this intuitive picture when building machine translation systems.</S>
    <S sid="50" ssid="14">From a purely formal point of view, on the other hand, Equation (2) is completely adequate.</S>
    <S sid="51" ssid="15">The conditional distribution POI e) is just an enormous table that associates a real number between zero and one with every possible pairing of a French passage and an English passage.</S>
    <S sid="52" ssid="16">With the proper choice for this distribution, translations of arbitrarily high quality can be achieved.</S>
    <S sid="53" ssid="17">Of course, to construct Pr(f le) by examining individual pairs of French and English passages one by one is out of the question.</S>
    <S sid="54" ssid="18">Even if we restrict our attention to passages no longer than a typical novel, there are just too many such pairs.</S>
    <S sid="55" ssid="19">But this is only a problem in practice, not in principle.</S>
    <S sid="56" ssid="20">The essential question for statistical translation, then, is not a philosophical one, but an empirical one: Can one construct approximations to the distributions Pr(e) and Pr(f le) that are good enough to achieve an acceptable quality of translation?</S>
    <S sid="57" ssid="21">Equation (2) summarizes the three computational challenges presented by the practice of statistical translation: estimating the language model probability, Pr(e); estimating the translation model probability, Pr(f le); and devising an effective and efficient suboptimal search for the English string that maximizes their product.</S>
    <S sid="58" ssid="22">We call these the language modeling problem, the translation modeling problem, and the search problem.</S>
    <S sid="59" ssid="23">The language modeling problem for machine translation is essentially the same as that for speech recognition and has been dealt with elsewhere in that context (see, for example, the recent paper by Maltese and Mancini [1992] and references therein).</S>
    <S sid="60" ssid="24">We hope to deal with the search problem in a later paper.</S>
    <S sid="61" ssid="25">In this paper, we focus on the translation modeling problem.</S>
    <S sid="62" ssid="26">Before we turn to this problem, however, we should address an issue that may be a concern to some readers: Why do we estimate Pr(e) and POI e) rather than estimate Pr(e If) directly?</S>
    <S sid="63" ssid="27">We are really interested in this latter probability.</S>
    <S sid="64" ssid="28">Wouldn't we reduce our problems from three to two by this direct approach?</S>
    <S sid="65" ssid="29">If we can estimate POI e) adequately, why can't we just turn the whole process around to estimate Pr (el f)?</S>
    <S sid="66" ssid="30">To understand this, imagine that we divide French and English strings into those that are well-formed and those that are ill-formed.</S>
    <S sid="67" ssid="31">This is not a precise notion.</S>
    <S sid="68" ssid="32">We have in mind that strings like Il va a la bibliotheque, or I live in a house, or even Colorless green ideas sleep furiously are well-formed, but that strings like a la va Il bibliotheque or a I in live house are not.</S>
    <S sid="69" ssid="33">When we translate a French string into English, we can think of ourselves as springing from a well-formed French string into the sea of well-formed English strings with the hope of landing on a good one.</S>
    <S sid="70" ssid="34">It is important, therefore, that our model for Pr(elf) concentrate its probability as much as possible on wellformed English strings.</S>
    <S sid="71" ssid="35">But it is not important that our model for POI e) concentrate its probability on well-formed French strings.</S>
    <S sid="72" ssid="36">If we were to reduce the probability of all well-formed French strings by the same factor, spreading the probability thus liberated over ill-formed French strings, there would be no effect on our translations: the argument that maximizes some function f(x) also maximizes cf(x) for any positive constant c. As we shall see below, our translation models are prodigal, spraying probability all over the place, most of it on ill-formed French strings.</S>
    <S sid="73" ssid="37">In fact, as we discuss in Section 4.5, two of our models waste much of their probability on things that are not strings at all, having, for example, several different second words but no first word.</S>
    <S sid="74" ssid="38">If we were to turn one of these models around to model Pr(elf) directly, the result would be a model with so little probability concentrated on well-formed English strings as to confound any scheme to discover one.</S>
    <S sid="75" ssid="39">The two factors in Equation (2) cooperate.</S>
    <S sid="76" ssid="40">The translation model probability is large for English strings, whether well- or ill-formed, that have the necessary words in them in roughly the right places to explain the French.</S>
    <S sid="77" ssid="41">The language model probability is large for well-formed English strings regardless of their connection to the French.</S>
    <S sid="78" ssid="42">Together, they produce a large probability for well-formed English strings that account well for the French.</S>
    <S sid="79" ssid="43">We cannot achieve this simply by reversing our translation models.</S>
  </SECTION>
  <SECTION title="3." number="4">
    <S sid="80" ssid="1">We say that a pair of strings that are translations of one another form a translation, and we show this by enclosing the strings in parentheses and separating them by a vertical bar.</S>
    <S sid="81" ssid="2">Thus, we write the translation (Qu'aurions-nous Pu faire?</S>
    <S sid="82" ssid="3">I What could we have done?) to show that What could we have done? is a translation of Qu'aurions-nous pu faire?</S>
    <S sid="83" ssid="4">When the strings end in sentences, we usually omit the final stop unless it is a question mark or an exclamation point.</S>
    <S sid="84" ssid="5">Brown et al. (1990) introduce the idea of an alignment between a pair of strings as an object indicating for each word in the French string that word in the English string from which it arose.</S>
    <S sid="85" ssid="6">Alignments are shown graphically, as in Figure 1, by drawing lines, which we call connections, from some of the English words to some of the French words.</S>
    <S sid="86" ssid="7">The alignment in Figure 1 has seven connections: (the, Le), (program, programme), and so on.</S>
    <S sid="87" ssid="8">Following the notation of Brown et al., we write this alignment as (Le programme a ete mis en application I And the(1) program(2) has(3) been(4) implemented(5,6,7)).</S>
    <S sid="88" ssid="9">The list of numbers following an English word shows the positions in the French string of the words to which it is connected.</S>
    <S sid="89" ssid="10">Because And is not connected to any French words here, there is no list of numbers after it.</S>
    <S sid="90" ssid="11">We consider every alignment to be correct with some probability, and so we find (Le programme a ete mis en application I And(1,2,3,4,5,6,7) the program has been implemented) perfectly acceptable.</S>
    <S sid="91" ssid="12">Of course, we expect it to be much less probable than the alignment shown in Figure 1.</S>
    <S sid="92" ssid="13">In Figure 1 each French word is connected to exactly one English word, but more general alignments are possible and may be appropriate for some translations.</S>
    <S sid="93" ssid="14">For example, we may have a French word connected to several English words as in Figure 2, which we write as (Le reste appartenait aux autoch tones I The(1) balance(2) was(3) the(3) territory(3) of(4) the(4) aboriginal(5) people(5)).</S>
    <S sid="94" ssid="15">More generally still, we may have several French words connected to several English words as in Figure 3, which we write as (Les pauvres sont demunis I The(1) poor(2) don't(3,4) have(3,4) any(3,4) money(3,4)).</S>
    <S sid="95" ssid="16">Here, the four English words don't have any money work together to generate the two French words sont demunis.</S>
    <S sid="96" ssid="17">In a figurative sense, an English passage is a web of concepts woven together according to the rules of English grammar.</S>
    <S sid="97" ssid="18">When we look at a passage, we cannot see the concepts directly but only the words that they leave behind.</S>
    <S sid="98" ssid="19">To show that these words are related to a concept but are not quite the whole story, we say that they form a cept.</S>
    <S sid="99" ssid="20">Some of the words in a passage may participate in more than one cept, while others may participate in none, serving only as a sort of syntactic glue to bind the whole together.</S>
    <S sid="100" ssid="21">When a passage is translated into French, each of its cepts contributes some French words to the translation.</S>
    <S sid="101" ssid="22">We formalize this use of the term cept and relate it to the idea of an alignment as follows.</S>
    <S sid="102" ssid="23">We call the set of English words connected to a French word in a particular alignment the cept that generates the French word.</S>
    <S sid="103" ssid="24">Thus, an alignment resolves an English string into a set of possibly overlapping cepts that we call the ceptual scheme of the English string with respect to the alignment.</S>
    <S sid="104" ssid="25">The alignment in Figure 3 contains the three cepts The, poor, and don't have any money.</S>
    <S sid="105" ssid="26">When one or more of the French words is connected to no English words, we say that the ceptual scheme includes the empty cept and that each of these words has been generated by this empty cept.</S>
    <S sid="106" ssid="27">Formally, a cept is a subset of the positions in the English string together with the words occupying those positions.</S>
    <S sid="107" ssid="28">When we write the words that make up a cept, we sometimes affix a subscript to each one showing its position.</S>
    <S sid="108" ssid="29">The alignment in Figure 2 includes the cepts thei and 016 the7, but not the cepts of6 thei or the7.</S>
    <S sid="109" ssid="30">In (J'applaudis a la decision I 1(1) applaud(2) the(4) decision(5)), a is generated by the empty cept.</S>
    <S sid="110" ssid="31">Although the empty cept has no position, we place it by convention in position zero, and write it as eo.</S>
    <S sid="111" ssid="32">Thus, we may also write the previous alignment as (J'applaudis a la decision e0(3) 1(1) applaud(2) the(4) decision(5)).</S>
    <S sid="112" ssid="33">We denote the set of alignments of (fl e) by .,4(e, f).</S>
    <S sid="113" ssid="34">If e has length 1 and f has length in, there are /m different connections that can be drawn between them because each of the m French words can be connected to any of the 1 English words.</S>
    <S sid="114" ssid="35">Since an alignment is determined by the connections that it contains, and since a subset of the possible connections can be chosen in 2&amp;quot; ways, there are 2&amp;quot; alignments in A(e, f).</S>
  </SECTION>
  <SECTION title="4." number="5">
    <S sid="115" ssid="1">In this section, we develop a series of five translation models together with the algorithms necessary to estimate their parameters.</S>
    <S sid="116" ssid="2">Each model gives a prescription for computing the conditional probability Pr(f le), which we call the likelihood of the translation (f, e).</S>
    <S sid="117" ssid="3">This likelihood is a function of a large number of free parameters that we must estimate in a process that we call training.</S>
    <S sid="118" ssid="4">The likelihood of a set of translations is the product of the likelihoods of its members.</S>
    <S sid="119" ssid="5">In broad outline, our plan is to guess values for these parameters and then to apply the EM algorithm (Baum 1972; Dempster, Laird, and Rubin 1977) iteratively so as to approach a local maximum of the likelihood of a particular set of translations that we call the training data.</S>
    <S sid="120" ssid="6">When the likelihood of the training data has more than one local maximum, the one that we approach will depend on our initial guess.</S>
    <S sid="121" ssid="7">In Models 1 and 2, we first choose a length for the French string, assuming all reasonable lengths to be equally likely.</S>
    <S sid="122" ssid="8">Then, for each position in the French string, we decide how to connect it to the English string and what French word to place there.</S>
    <S sid="123" ssid="9">In Model 1 we assume all connections for each French position to be equally likely.</S>
    <S sid="124" ssid="10">Therefore, the order of the words in e and f does not affect Pr(fl e).</S>
    <S sid="125" ssid="11">In Model 2 we make the more realistic assumption that the probability of a connection depends on the positions it connects and on the lengths of the two strings.</S>
    <S sid="126" ssid="12">Therefore, for Model 2, Pr (f I e) does depend on the order of the words in e and f. Although it is possible to obtain interesting correlations between some pairs of frequent words in the two languages using Models 1 and 2, as we will see later (in Figure 5), these models often lead to unsatisfactory alignments.</S>
    <S sid="127" ssid="13">In Models 3, 4, and 5, we develop the French string by choosing, for each word in the English string, first the number of words in the French string that will be connected to it, then the identity of these French words, and finally the actual positions in the French string that these words will occupy.</S>
    <S sid="128" ssid="14">It is this last step that determines the connections between the English string and the French string and it is here that these three models differ.</S>
    <S sid="129" ssid="15">In Model 3, as in Model 2, the probability of a connection depends on the positions that it connects and on the lengths of the English and French strings.</S>
    <S sid="130" ssid="16">In Model 4 the probability of a connection depends in addition on the identities of the French and English words connected and on the positions of any other French words that are connected to the same English word.</S>
    <S sid="131" ssid="17">Models 3 and 4 are deficient, a technical concept defined and discussed in Section 4.5.</S>
    <S sid="132" ssid="18">Briefly, this means that they waste some of their probability on objects that are not French strings at all.</S>
    <S sid="133" ssid="19">Model 5 is very much like Model 4, except that it is not deficient.</S>
    <S sid="134" ssid="20">Models 1-4 serve as stepping stones to the training of Model 5.</S>
    <S sid="135" ssid="21">Models 1 and 2 have an especially simple mathematical form so that iterations of the EM algorithm can be computed exactly.</S>
    <S sid="136" ssid="22">That is, we can explicitly perform sums over all possible alignments for these two models.</S>
    <S sid="137" ssid="23">In addition, Model 1 has a unique local maximum so that parameters derived for it in a series of EM iterations do not depend on the starting point for the iterations.</S>
    <S sid="138" ssid="24">As explained below, we use Model 1 to provide initial estimates for the parameters of Model 2.</S>
    <S sid="139" ssid="25">In Model 2 and subsequent models, the likelihood function does not have a unique local maximum, but by initializing each model from the parameters of the model before it, we arrive at estimates of the parameters of the final model that do not depend on our initial estimates of the parameters for Model 1.</S>
    <S sid="140" ssid="26">In Models 3 and 4, we must be content with approximate EM iterations because it is not feasible to carry out sums over all possible alignments for these models.</S>
    <S sid="141" ssid="27">But, while approaching more closely the complexity of Model 5, they retain enough simplicity to allow an efficient investigation of the neighborhood of probable alignments and therefore allow us to include what we hope are all of the important alignments in each EM iteration.</S>
    <S sid="142" ssid="28">In the remainder of this section, we give an informal but reasonably precise description of each of the five models and an intuitive account of the EM algorithm as applied to them.</S>
    <S sid="143" ssid="29">We assume the reader to be comfortable with Lagrange multipliers, partial differentiation, and constrained optimization as they are presented in a typical college calculus text, and to have a nodding acquaintance with random variables.</S>
    <S sid="144" ssid="30">On the first time through, the reader may wish to jump from here directly to Section 5, returning to this Section when and if he should desire to understand more deeply how the results reported later are achieved.</S>
    <S sid="145" ssid="31">The basic mathematical object with which we deal here is the joint probability distribution Pr(F = f, A = a, E = e), where the random variables F and E are a French string and an English string making up a translation, and the random variable A is an alignment between them.</S>
    <S sid="146" ssid="32">We also consider various marginal and conditional probability distributions that can be constructed from Pr(F = f, A = a, E = e), especially the distribution Pr(F = fl E = e).</S>
    <S sid="147" ssid="33">We generally follow the common convention of using uppercase letters to denote random variables and the corresponding lowercase letters to denote specific values that the random variables may take.</S>
    <S sid="148" ssid="34">We have already used 1 and in to represent the lengths of the strings e and f, and so we use L and M to denote the corresponding random variables.</S>
    <S sid="149" ssid="35">When there is no possibility for confusion, or, more properly, when the probability of confusion is not thereby materially increased, we write Pr (f, a, e) for Pr(F f, A = a, E = e), and use similar shorthands throughout.</S>
    <S sid="150" ssid="36">We can write the likelihood of (f le) in terms of the conditional probability Pr(f, ale) as The sum here, like all subsequent sums over a, is over the elements of A(e, f).</S>
    <S sid="151" ssid="37">We restrict ourselves in this section to alignments like the one shown in Figure 1 where each French word has exactly one connection.</S>
    <S sid="152" ssid="38">In this kind of alignment, each cept is either a single English word or it is empty.</S>
    <S sid="153" ssid="39">Therefore, we can assign cepts to positions in the English string, reserving position zero .for the empty cept.</S>
    <S sid="154" ssid="40">If the English string, e = e1e2... e1, has 1 words, and the French string, f = firn 1112 &#8226; fm, has m words, then the alignment, a, can be represented by a series, ay' a1a2 ...am, of m values, each between 0 and 1 such that if the word in position j of the French string is connected to the word in position i of the English string, then al = i, and if it is not connected to any English word, then a] = 0.</S>
    <S sid="155" ssid="41">Without loss of generality, we can write This is only one of many ways in which Pr(f, ale) can be written as the product of a series of conditional probabilities.</S>
    <S sid="156" ssid="42">It is important to realize that Equation (4) is not an approximation.</S>
    <S sid="157" ssid="43">Regardless of the form of Pr(f, ale), it can always be analyzed into a product of terms in this way.</S>
    <S sid="158" ssid="44">We are simply asserting in this equation that when we generate a French string together with an alignment from an English string, we can first choose the length of the French string given our knowledge of the English string.</S>
    <S sid="159" ssid="45">Then we can choose where to connect the first position in the French string given our knowledge of the English string and the length of the French string.</S>
    <S sid="160" ssid="46">Then we can choose the identity of the first word in the French string given our knowledge of the English string, the length of the French string, and the position in the English string to which the first position in the French string is connected, and so on.</S>
    <S sid="161" ssid="47">As we step through the French string, at each point we make our next choice given our complete knowledge of the English string and of all our previous choices as to the details of the French string and its alignment.</S>
    <S sid="162" ssid="48">The conditional probabilities on the right-hand side of Equation (4) cannot all be taken as independent parameters because there are too many of them.</S>
    <S sid="163" ssid="49">In Model 1, we assume that Pr(mle) is independent of e and m; that Pr(ajlail-1,fil-17 rrt,e), depends only on 1,.the length of the English string, and therefore must be (1 + 1)-1; and that Pr(fin, e) depends only on f and eaj.</S>
    <S sid="164" ssid="50">The parameters, then, are &#8364; Pr(m le), I and t(le) E Pr(fi e) , which we call the translation probability of fl given ea,.</S>
    <S sid="165" ssid="51">We think of E as some small, fixed number.</S>
    <S sid="166" ssid="52">The distribution of M, the length of the French string, is unnormalized but this is a minor technical issue of no significance to our computations.</S>
    <S sid="167" ssid="53">If we wish, we can think of M as having some finite range.</S>
    <S sid="168" ssid="54">As long as this range encompasses everything that actually occurs in training data, no problems arise.</S>
    <S sid="169" ssid="55">We turn now to the problem of estimating the translation probabilities for Model 1.</S>
    <S sid="170" ssid="56">The joint likelihood of a French string and an alignment given an English string is We wish to adjust the translation probabilities so as to maximize Pr(fle) subject to the constraints that for each e, Following standard practice for constrained maximization, we introduce Lagrange multipliers A&#8222; and seek an unconstrained extremum of the auxiliary function An extremum occurs when all of the partial derivatives of h with respect to the components of t and A are zero.</S>
    <S sid="171" ssid="57">That the partial derivatives with respect to the components of A be zero is simply a restatement of the constraints on the translation probabilities.</S>
    <S sid="172" ssid="58">The partial derivative of h with respect to VI e) is where is the Kronecker delta function, equal to one when both of its arguments are the same and equal to zero otherwise.</S>
    <S sid="173" ssid="59">This partial derivative will be zero provided that Superficially, Equation (10) looks like a solution to the extremum problem, but it is not because the translation probabilities appear on both sides of the equal sign.</S>
    <S sid="174" ssid="60">Nonetheless, it suggests an iterative procedure for finding a solution: given an initial guess for the translation probabilities, we can evaluate the right-hand side of Equation (10) and use the result as a new estimate for t(f le).</S>
    <S sid="175" ssid="61">(Here and elsewhere, the Lagrange multipliers simply serve as a reminder that we need to normalize the translation probabilities so that they satisfy Equation (7).)</S>
    <S sid="176" ssid="62">This process, when applied repeatedly, is called the EM algorithm.</S>
    <S sid="177" ssid="63">That it converges to a stationary point of h in situations like this was first shown by Baum (1972) and later by others (Dempster, Laird, and Rubin 1977).</S>
    <S sid="178" ssid="64">With the aid of Equation (5), we can reexpress Equation (10) as number of times e connects to f in a We call the expected number of times that e connects to f in the translation (fle) the count off given e for (fle) and denote it by c(f le; f, e).</S>
    <S sid="179" ssid="65">By definition, where Pr(aje, f) = Pr(f, ale)/ Pr(fle).</S>
    <S sid="180" ssid="66">If we replace A, by A, Pr(fle), then Equation (11) can be written very compactly as In practice, our training data consists of a set of translations, (f (i)ie (1) ), (f (2)le (2) ) (f(s)ie(s)), so this equation becomes Here, A, serves only as a reminder that the translation probabilities must be normalized.</S>
    <S sid="181" ssid="67">Usually, it is not feasible to evaluate the expectation in Equation (12) exactly.</S>
    <S sid="182" ssid="68">Even when we exclude multi-word cepts, there are still (1 + 1)m alignments possible for (fie).</S>
    <S sid="183" ssid="69">Model 1, however, is special because by recasting Equation (6), we arrive at an expression that can be evaluated efficiently.</S>
    <S sid="184" ssid="70">The right-hand side of Equation (6) is a sum of terms each of which is a monomial in the translation probabilities.</S>
    <S sid="185" ssid="71">Each monomial contains in translation probabilities, one for each of the words in I.</S>
    <S sid="186" ssid="72">Different monomials correspond to different ways of connecting words in f to cepts in e with every way appearing exactly once.</S>
    <S sid="187" ssid="73">By direct evaluation, we see that An example may help to clarify this.</S>
    <S sid="188" ssid="74">Suppose that m = 3 and 1 = 1, and that we write as a shorthand for t(fii et).</S>
    <S sid="189" ssid="75">Then the left-hand side of Equation (15) is t10 tzo t30 t10 t20 t31 +&amp;quot; +41 t21 t30 tll t21 t31, and the right-hand side is (tip +t11)(t20 &#177;t21)(t30 +t31)&#8226; It is routine to verify that these are the same.</S>
    <S sid="190" ssid="76">Therefore, we can interchange the sums in Equation (6) with the product to obtain If we use this expression in place of Equation (6) when we write the auxiliary function in Equation (8), we find that count of e in e Thus, the number of operations necessary to calculate a count is proportional to 1+ m rather than to (1 + 1)rn as Equation (12) might suggest.</S>
    <S sid="191" ssid="77">Using Equations (14) and (17), we can estimate the parameters t(f le) as follows.</S>
    <S sid="192" ssid="78">The details of our initial guesses for t(f le) are unimportant because Pr(fle) has a unique local maximum for Model 1, as is shown in Appendix B.</S>
    <S sid="193" ssid="79">We start with all of the t(f le) equal, but any other choice that avoids zeros would lead to the same final solution.</S>
    <S sid="194" ssid="80">In Model 1, we take no cognizance of where words appear in either string.</S>
    <S sid="195" ssid="81">The first word in the French string is just as likely to be connected to a word at the end of the English string as to one at the beginning.</S>
    <S sid="196" ssid="82">In Model 2 we make the same assumptions as in Model 1 except that we assume that Pr(aj lali-17A-17m7 e) depends on j, al, and in, as well as on 1.</S>
    <S sid="197" ssid="83">We introduce a set of alignment probabilities, Therefore, we seek an unconstrained extremum of the auxiliary function The reader will easily verify that Equations (11), (13), and (14) carry over from Model 1 to Model 2 unchanged.</S>
    <S sid="198" ssid="84">We need a new count, c(iIj, m, f, e), the expected number of times that the word in position j of f is connected to the word in position i of e. Clearly, Notice that if f(s) does not have length m or if e(') does not have length /, then the corresponding count is zero.</S>
    <S sid="199" ssid="85">As with the As in earlier equations, the Its here serve simply to remind us that the alignment probabilities must be normalized.</S>
    <S sid="200" ssid="86">Model 2 shares with Model 1 the important property that the sums in Equations (12) and (23) can be obtained efficiently.</S>
    <S sid="201" ssid="87">We can rewrite Equation (21) as Equation (27) has a double sum rather than the product of two single sums, as in Equation (17), because in Equation (27) i and j are tied together through the alignment probabilities.</S>
    <S sid="202" ssid="88">Model 1 is the special case of Model 2 in which a(ilj , m, 1) is held fixed at (1+ 1)-1.</S>
    <S sid="203" ssid="89">Therefore, any set of parameters for Model 1 can be reinterpreted as a set of parameters for Model 2.</S>
    <S sid="204" ssid="90">Taking as our initial estimates of the parameters for Model 2 the parameter values that result from training Model 1 is equivalent to computing the probabilities of all alignments as if we were dealing with Model 1, but then collecting the counts as if we were dealing with Model 2.</S>
    <S sid="205" ssid="91">The idea of computing the probabilities of the alignments using one model, but collecting the counts in a way appropriate to a second model is very general and can always be used to transfer a set of parameters from one model to another.</S>
    <S sid="206" ssid="92">We created Models 1 and 2 by making various assumptions about the conditional probabilities that appear in Equation (4).</S>
    <S sid="207" ssid="93">As we have mentioned, Equation (4) is an exact statement, but it is only one of many ways in which the joint likelihood of f and a can be written as a product of conditional probabilities.</S>
    <S sid="208" ssid="94">Each such product corresponds in a natural way to a generative process for developing f and a from e. In the process corresponding to Equation (4), we first choose a length for f. Next, we decide which position in e is connected to fi and what the identity of fi is.</S>
    <S sid="209" ssid="95">Then, we decide which position in e is connected to 12, and so on.</S>
    <S sid="210" ssid="96">For Models 3, 4, and 5, we write the joint likelihood as a product of conditional probabilities in a different way.</S>
    <S sid="211" ssid="97">Casual inspection of some translations quickly establishes that the is usually translated into a single word (le, la, or 1), but is sometimes omitted; or that only is often translated into one word (for example, seulement), but sometimes into two (for example, ne .</S>
    <S sid="212" ssid="98">.</S>
    <S sid="213" ssid="99">. que), and sometimes into none.</S>
    <S sid="214" ssid="100">The number of French words to which e is connected in a randomly selected alignment is a random variable, (13&#8222; that we call the fertility of e. Each choice of the parameters in Model 1 or Model 2 determines a distribution, Pr(cl)e = 0), for this random variable.</S>
    <S sid="215" ssid="101">But the relationship is remote: just what change will be wrought in the distribution of 43the if, say, we adjust a(112, 8,9) is not immediately clear.</S>
    <S sid="216" ssid="102">In Models 3, 4, and 5, we parameterize fertilities directly.</S>
    <S sid="217" ssid="103">As a prolegomenon to a detailed discussion of Models 3, 4, and 5, we describe the generative process upon which they are based.</S>
    <S sid="218" ssid="104">Given an English string, e, we first decide the fertility of each word and a list of French words to connect to it.</S>
    <S sid="219" ssid="105">We call this list, which may be empty, a tablet.</S>
    <S sid="220" ssid="106">The collection of tablets is a random variable, T, that we call the tableau of e; the tablet for the ith English word is a random variable, Ti; and the kth French word in the ith tablet is a random variable, Tjk.</S>
    <S sid="221" ssid="107">After choosing the tableau, we permute its words to produce f. This permutation is a random variable, H. The position in f of the kth word in the ith tablet is yet another a random variable, ilzk&#8226; The joint likelihood for a tableau, T, and a permutation, 7r, is In this equation, r1c-1 represents the series of values , 7-,; 7r,ik-1 represents the series of values 7ri1, ,7rik_i; and 0, is shorthand for Knowing T and 7r determines a French string and an alignment, but in general several different pairs r, may lead to the same pair f, a.</S>
    <S sid="222" ssid="108">We denote the set of such pairs by (f, a).</S>
    <S sid="223" ssid="109">Clearly, then Two tableaux for one alignment.</S>
    <S sid="224" ssid="110">The number of elements in (f, a) is 1-11=0 Oi! because for each 7-, there are Oz! arrangements that lead to the pair f, a.</S>
    <S sid="225" ssid="111">Figure 4 shows the two tableaux for (bon marche cheap(1,2)).</S>
    <S sid="226" ssid="112">Except for degenerate cases, there is one alignment in .4(e, f) for which Pr(ale, f) is greatest.</S>
    <S sid="227" ssid="113">We call this the Viterbi alignment for (f le) and denote it by V(f le).</S>
    <S sid="228" ssid="114">We know of no practical algorithm for finding V(f le) for a general model.</S>
    <S sid="229" ssid="115">Indeed, if someone were to claim that he had found V(f le), we know of no practical algorithm for demonstrating that he is correct.</S>
    <S sid="230" ssid="116">But for Model 2 (and, thus, also for Model 1), finding V(fle) is straightforward.</S>
    <S sid="231" ssid="117">For each j, we simply choose aj so as to make the product t(fjI ec,i)a(ailj , m, 1) as large as possible.</S>
    <S sid="232" ssid="118">The Viterbi alignment depends on the model with respect to which it is computed.</S>
    <S sid="233" ssid="119">When we need to distinguish between the Viterbi alignments for different models, we write V(f le; 1), V(fle; 2), and so on.</S>
    <S sid="234" ssid="120">We denote by &#8222;4,___1(e, f) the set of alignments for which al = i.</S>
    <S sid="235" ssid="121">We say that ij is pegged in these alignments.</S>
    <S sid="236" ssid="122">By the pegged Viterbi alignment for ij, which we write Vi.._1(f le), we mean that element of Ai._1(e, f) for which Pr(aie, f) is greatest.</S>
    <S sid="237" ssid="123">Obviously, we can find V&#8222;_)(fle; 1) and 17,,_1(f le; 2) quickly with a straightforward modification of the algorithm described above for finding V(f le; 1) and V(f le; 2).</S>
    <S sid="238" ssid="124">Model 3 is based on Equation (29).</S>
    <S sid="239" ssid="125">Earlier, we were unable to treat each of the conditional probabilities on the right-hand side of Equation (4) as a separate parameter.</S>
    <S sid="240" ssid="126">With Equation (29) we are no better off and must again make assumptions to reduce the number of independent parameters.</S>
    <S sid="241" ssid="127">There are many different sets of assumptions that we might make, each leading to a different model for the translation process.</S>
    <S sid="242" ssid="128">In Model 3, we assume that, for i between 1 and /, Pr(Oi 1011.-1, e) depends only on Oi and ei; that, for all i, Pr(rikirit-1, 7-1, 4, e) depends only on rik and ei; and that, for i between 1 and /, Pr(7rik 14-1, T(1, e) depends only on 7rik, i, m, and /.</S>
    <S sid="243" ssid="129">The parameters of Model 3 are thus a set of fertility probabilities, n(cbl ei) E Pr(01011.-1, e); a set of translation probabilities, t(f ei) = Pr(Tik e); and a set of distortion probabilities, d(jli, m, 1) a- Pr (111k = jk1 74-1, 7-(1, 10(1), e).</S>
    <S sid="244" ssid="130">We treat the distortion and fertility probabilities for e0 differently.</S>
    <S sid="245" ssid="131">The empty cept conventionally occupies position 0, but actually has no position.</S>
    <S sid="246" ssid="132">Its purpose is to account for those words in the French string that cannot readily be accounted for by other cepts in the English string.</S>
    <S sid="247" ssid="133">Because we expect these words to be spread uniformly throughout the French string, and because they are placed only after all of the other Peter F. Brown et al. The Mathematics of Statistical Machine Translation words in the string have been placed, we assume that Pr(110k+1 = jlir, 71, TO, e) equals 0 unless position j is vacant in which case it equals (00 - k)-1.</S>
    <S sid="248" ssid="134">Therefore, the contribution of the distortion probabilities for all of the words in To is 1/00!.</S>
    <S sid="249" ssid="135">We expect q50 to depend on the length of the French string because longer strings should have more extraneous words.</S>
    <S sid="250" ssid="136">Therefore, we assume that for some pair of auxiliary parameters po and pi.</S>
    <S sid="251" ssid="137">The expression on the left-hand side of this equation depends on 01 only through the sum 01 + &#8226; &#8226; &#8226; + 0/ and defines a probability distribution over o whenever po and pi are nonnegative and sum to 1.</S>
    <S sid="252" ssid="138">We can interpret Pr(00101, e) as follows.</S>
    <S sid="253" ssid="139">We imagine that each of the words from TI requires an extraneous word with probability pi and that this extraneous word must be connected to the empty cept.</S>
    <S sid="254" ssid="140">The probability that exactly cbo of the words from TI will require an extraneous word is just the expression given in Equation (31).</S>
    <S sid="255" ssid="141">As with Models 1 and 2, an alignment of (fle) is determined by specifying al for each position in the French string.</S>
    <S sid="256" ssid="142">The fertilities, 00 through 0/, are functions of the ais: 0, is equal to the number of js for which aj equals i Therefore, with Ef t(f le) = 1/ E1 d(jii m/ 1) = 1, E0 n (01 e) = 1, and po +pi = 1.</S>
    <S sid="257" ssid="143">The assumptions that we make for Model 3 are such that each of the pairs (T, 7r) in (f, a) makes an identical contribution to the sum in Equation (30).</S>
    <S sid="258" ssid="144">The factorials in Equation (32) come from carrying out this sum explicitly.</S>
    <S sid="259" ssid="145">There is no factorial for the empty cept because it is exactly canceled by the contribution from the distortion probabilities.</S>
    <S sid="260" ssid="146">By now, the reader will be able to provide his or her own auxiliary function for seeking a constrained minimum of the likelihood of a translation with Model 3, but for completeness and to establish notation, we write h(t,d,n,p, A, tt, v, Pr(fle) - E A, (f. t(f 1 e) - 1) - Eitina(Ed(j1i, m, 1) - 1) _Eve( n(01 e) - 1) - (po + pi -1).</S>
    <S sid="261" ssid="147">(33) Following the trail blazed with Models 1 and 2, we define the counts The counts in these last two equations correspond to the parameters po and p1 that determine the fertility of the empty cept in the English string.</S>
    <S sid="262" ssid="148">The reestimation formulae for Model 3 are Equations (34) and (39) are identical to Equations (12) and (14) and are repeated here only for convenience.</S>
    <S sid="263" ssid="149">Equations (35) and (40) are similar to Equations (23) and (25), but a(iIj, m, 1) differs from d(jii, m, 1) in that the former sums to unity over all i for fixed j while the latter sums to unity over all j for fixed i. Equations (36), (37), (38), (41), and (42), for the fertility parameters, are new.</S>
    <S sid="264" ssid="150">The trick that allows us to evaluate the right-hand sides of Equations (12) and (23) efficiently for Model 2 does not work for Model 3.</S>
    <S sid="265" ssid="151">Because of the fertility parameters, we cannot exchange the sums over al through am with the product over j in Equation (32) as we were able to for Equations (6) and (21).</S>
    <S sid="266" ssid="152">We are not, however, entirely bereft of hope.</S>
    <S sid="267" ssid="153">The alignment is a useful device precisely because some alignments are much more probable than others.</S>
    <S sid="268" ssid="154">Our strategy is to carry out the sums in Equations (32) and (34)-(38) only over some of the more probable alignments, ignoring the vast sea of much less probable ones.</S>
    <S sid="269" ssid="155">Specifically, we begin with the most probable alignment that we can find and then include all alignments that can be obtained from it by small changes.</S>
    <S sid="270" ssid="156">To define unambiguously the subset, S, of the elements of A(fle) over which we evaluate the sums, we need yet more terminology.</S>
    <S sid="271" ssid="157">We say that two alignments, a and a', differ by a move if there is exactly one value of j for which ai 0 .</S>
    <S sid="272" ssid="158">We say that they differ by a swap if aj = ai' except at two values, Ii and j2, for which (111 = al,' and = a111.</S>
    <S sid="273" ssid="159">We say that two alignments are neighbors if they are identical or differ by a move or by a swap.</S>
    <S sid="274" ssid="160">We denote the set of all neighbors of a by .Ai(a).</S>
    <S sid="275" ssid="161">Let b(a) be that neighbor of a for which the likelihood Pr(b(a)lf, e) is greatest.</S>
    <S sid="276" ssid="162">Suppose that ij is pegged for a.</S>
    <S sid="277" ssid="163">Among the neighbors of a for which ij is also pegged, let b,+_1(a) be that for which the likelihood is greatest.</S>
    <S sid="278" ssid="164">The sequence of alignments a, b(a), b2(a) b(b(a)), .</S>
    <S sid="279" ssid="165">.</S>
    <S sid="280" ssid="166">., converges in a finite number of steps to an alignment that we write as bc&#176; (a).</S>
    <S sid="281" ssid="167">Similarly, if ij is pegged for a, the sequence of alignments a, Notice that Op is the fertility of the word in position i' for alignment a.</S>
    <S sid="282" ssid="168">The fertility of this word in alignment a' is 0,, + 1.</S>
    <S sid="283" ssid="169">Similar equations can be easily derived when either i or i' is zero, or when a and a' differ by a swap.</S>
    <S sid="284" ssid="170">We leave the details to the reader.</S>
    <S sid="285" ssid="171">With these preliminaries, we define S by S = Ar(r)(V(fl e; 2))) U V (fle; 2))).</S>
    <S sid="286" ssid="172">(44) In this equation, we use b&#176;&#176;(V(f le; 2)) and lf&#176; j(V,-1 (f le; 2)) as handy approximations to V(f le; 3) and Vi&#8212;j(f le; 3), neither of which we are able to compute efficiently.</S>
    <S sid="287" ssid="173">In one iteration of the EM algorithm for Model 3, we compute the counts in Equations (34)&#8212;(38), summing only over elements of S, and then use these counts in Equations (39)&#8212;(42) to obtain a new set of parameters.</S>
    <S sid="288" ssid="174">If the error made by including only some of the elements of &#8222;4(e, f) is not too great, this iteration will lead to values of the parameters for which the likelihood of the training data is at least as large as for the first set of parameters.</S>
    <S sid="289" ssid="175">We make no initial guess of the parameters for Model 3, but instead adapt the parameters from the final iteration of the EM algorithm for Model 2.</S>
    <S sid="290" ssid="176">That is, we compute the counts in Equations (34)&#8212;(38) using Model 2 to evaluate Pr(ai e, f).</S>
    <S sid="291" ssid="177">The simple form of Model 2 again makes exact calculation feasible.</S>
    <S sid="292" ssid="178">We can readily adapt Equations (27) and (28) to compute counts for the translation and distortion probabilities; efficient calculation of the fertility counts is more involved, and we defer a discussion of it to Appendix B.</S>
    <S sid="293" ssid="179">The reader will have noticed a problem with our parameterization of the distortion probabilities in Model 3: whereas we can see by inspection that the sum over all pairs y, 7 of the expression on the right-hand side of Equation (29) is unity, it is equally clear that this can no longer be the case if we assume that Pr(llik = e) depends only on], i, m, and 1 for i &gt; 0.</S>
    <S sid="294" ssid="180">Because the distortion probabilities for assigning positions to later words do not depend on the positions assigned to earlier words, Model 3 wastes some of its probability on what we might call generalized strings, i.e., strings that have some positions with several words and others with none.</S>
    <S sid="295" ssid="181">When a model has this property of not concentrating all of its probability on events of interest, we say that it is deficient.</S>
    <S sid="296" ssid="182">Deficiency is the price that we pay for the simplicity that allows us to write Equation (43).</S>
    <S sid="297" ssid="183">Deficiency poses no serious problem here.</S>
    <S sid="298" ssid="184">Although Models 1 and 2 are not technically deficient, they are surely spiritually deficient.</S>
    <S sid="299" ssid="185">Each assigns the same probability to the alignments (Je n'ai pas de stylo 1 I(1) do not(2,4) have(3) a(5) pen(6)) and (Je pas ai ne de stylo 1 I(1) do not(2,4) have(3) a(5) pen(6)), and, therefore, essentially the same probability to the translations (Je n'ai pas de stylo 1 I do not have a pen) and (Je pas ai ne de stylo 11 do not have a pen).</S>
    <S sid="300" ssid="186">In each case, not produces two words, ne and pas, and in each case, one of these words ends up in the second position of the French string and the other in the fourth position.</S>
    <S sid="301" ssid="187">The first translation should be much more probable than the second, but this defect is of little concern because while we might have to translate the first string someday, we will never have to translate the second.</S>
    <S sid="302" ssid="188">We do not use our translation models to predict French given English but rather as a component of a system designed to predict English given French.</S>
    <S sid="303" ssid="189">They need only be accurate to within a constant factor over well-formed strings of French words.</S>
    <S sid="304" ssid="190">Often the words in an English string constitute phrases that are translated as units into French.</S>
    <S sid="305" ssid="191">Sometimes, a translated phrase may appear at a spot in the French string different from that at which the corresponding English phrase appears in the English string.</S>
    <S sid="306" ssid="192">The distortion probabilities of Model 3 do not account well for this tendency of phrases to move around as units.</S>
    <S sid="307" ssid="193">Movement of a long phrase will be much less likely than movement of a short phrase because each word must be moved independently.</S>
    <S sid="308" ssid="194">In Model 4, we modify our treatment of Pr (II,k = 74-1, 0(1) e) so as to alleviate this problem.</S>
    <S sid="309" ssid="195">Words that are connected to the empty cept do not usually form phrases, and so we continue to assume that these words are spread uniformly throughout the French string.</S>
    <S sid="310" ssid="196">As we have described, an alignment resolves an English string into a ceptual scheme consisting of a set of possibly overlapping cepts.</S>
    <S sid="311" ssid="197">Each of these cepts then accounts for one or more French words.</S>
    <S sid="312" ssid="198">In Model 3 the ceptual scheme for an alignment is determined by the fertilities of the words: a word is a cept if its fertility is greater than zero.</S>
    <S sid="313" ssid="199">The empty cept is a part of the ceptual scheme if 00 is greater than zero.</S>
    <S sid="314" ssid="200">As before we exclude multi-word cepts.</S>
    <S sid="315" ssid="201">Among the one-word cepts, there is a natural order corresponding to the order in which they appear in the English string.</S>
    <S sid="316" ssid="202">Let [ii denote the position in the English string of the ith one-word cept.</S>
    <S sid="317" ssid="203">We define the center of this cept, 0&#8222; to be the ceiling of the average value of the positions in the French string of the words from its tablet.</S>
    <S sid="318" ssid="204">We define its head to be that word in its tablet for which the position in the French string is smallest.</S>
    <S sid="319" ssid="205">In Model 4, we replace rn, 1) by two sets of parameters: one for placing the head of each cept, and one for placing any remaining words.</S>
    <S sid="320" ssid="206">For [i] &gt; 0, we require that the head for cept i be r[]i and we assume that Pr (II[]i = /1741-1,71, Of), e) = - Oi-i IA(e[i-i]), 8(4)).</S>
    <S sid="321" ssid="207">(45) Here, A and 8 are functions of the English and French words that take on a small number of different values as their arguments range over their respective vocabularies.</S>
    <S sid="322" ssid="208">Brown et al. (1990) describe an algorithm for dividing a vocabulary into classes so as to preserve mutual information between adjacent classes in running text.</S>
    <S sid="323" ssid="209">We construct A and B as functions with 50 distinct values by dividing the English and French vocabularies each into 50 classes according to this algorithm.</S>
    <S sid="324" ssid="210">By assuming that the probability depends on the previous cept and on the identity of the French word being placed, we can account for such facts as the appearance of adjectives before nouns in English but after them in French.</S>
    <S sid="325" ssid="211">We call j - 01-1 the displacement for the head of cept i.</S>
    <S sid="326" ssid="212">It may be either positive or negative.</S>
    <S sid="327" ssid="213">We expect di (-1 IA(e), BM) to be larger than d1(+ 11A(e),8(f)) when e is an adjective and f is a noun.</S>
    <S sid="328" ssid="214">Indeed, this is borne out in the trained distortion probabilities for Model 4, where we find that di (-1 IA(government' s), (developpement)) is 0.7986, while d1(-i- 1 IA(government' s), B(developpement)) is 0.0168.</S>
    <S sid="329" ssid="215">Suppose, now, that we wish to place the kth word of cept i for [i] &gt; 0, k&gt; 1.</S>
    <S sid="330" ssid="216">We assume that We require that 'irk'', be greater than r[]k_i.</S>
    <S sid="331" ssid="217">Some English words tend to produce a series of French words that belong together, while others tend to produce a series of words that should be separate.</S>
    <S sid="332" ssid="218">For example, implemented can produce mis en application, which usually occurs as a unit, but not can produce ne pas, which often occurs with an intervening verb.</S>
    <S sid="333" ssid="219">We expect d&gt;1(2IB(pas)) to be relatively large compared with d&gt;i (218( en)).</S>
    <S sid="334" ssid="220">After training, we find that d&gt;i(2I13(pas)) is 0.6847 and d&gt;1(215( en)) is 0.1533.</S>
    <S sid="335" ssid="221">Whereas we assume that 7-Ni can be placed either before or after any previously positioned words, we require subsequent words from TN to be placed in order.</S>
    <S sid="336" ssid="222">This does not mean that they must occupy consecutive positions but only that the second word from TN must lie to the right of the first, the third to the right of the second, and so on.</S>
    <S sid="337" ssid="223">Because of this, only one of the Om! arrangements of r[t] is possible.</S>
    <S sid="338" ssid="224">We leave the routine details of deriving the count and reestimation formulae for Model 4 to the reader.</S>
    <S sid="339" ssid="225">He may find the general formulae in Appendix B helpful.</S>
    <S sid="340" ssid="226">Once again, the several counts for a translation are expectations of various quantities over the possible alignments with the probability of each alignment computed from an earlier estimate of the parameters.</S>
    <S sid="341" ssid="227">As with Model 3, we know of no trick for evaluating these expectations and must rely on sampling some small set, S, of alignments.</S>
    <S sid="342" ssid="228">As described above, the simple form that we assume for the distortion probabilities in Model 3 makes it possible for us to find Pc' (a) rapidly for any a.</S>
    <S sid="343" ssid="229">The analog of Equation (43) for Model 4 is complicated by the fact that when we move a French word from cept to cept we change the centers of two cepts and may affect the contribution of several words.</S>
    <S sid="344" ssid="230">It is nonetheless possible to evaluate the adjusted likelihood incrementally, although it is substantially more time-consuming.</S>
    <S sid="345" ssid="231">Faced with this unpleasant situation, we proceed as follows.</S>
    <S sid="346" ssid="232">Let the neighbors of a be ranked so that the first is the neighbor for which Pr(ale, f; 3) is greatest, the second the one for which Pr(ale, f; 3) is next greatest, and so on.</S>
    <S sid="347" ssid="233">We define b(a) to be the highest-ranking neighbor of a for which Pr(b-(a) le, f; 4) is at least as large as Pr(ale, f; 4).</S>
    <S sid="348" ssid="234">We define -6&#8222;_1(a) analogously.</S>
    <S sid="349" ssid="235">Here, Pr(ale, f; 3) means Pr(ale, f) as computed with Model 3, and Pr(ale, f;4) means Pr(ale, f) as computed with Model 4.</S>
    <S sid="350" ssid="236">We define S for Model 4 by N-(b&amp;quot; ( V(f le; 2))) U (fie; 2))).</S>
    <S sid="351" ssid="237">(47) This equation is identical to Equation (47) except that b has been replaced by b.</S>
    <S sid="352" ssid="238">Models 3 and 4 are both deficient.</S>
    <S sid="353" ssid="239">In Model 4, not only can several words lie on top of one another, but words can be placed before the first position or beyond the last position in the French string.</S>
    <S sid="354" ssid="240">We remove this deficiency in Model 5.</S>
    <S sid="355" ssid="241">After we have placed the words for 41-1 and r[i]ik-1 there will remain some vacant positions in the French string.</S>
    <S sid="356" ssid="242">Obviously, T[i]k should be placed in one of these vacancies.</S>
    <S sid="357" ssid="243">Models 3 and 4 are deficient precisely because we fail to enforce this constraint for the one-word cepts.</S>
    <S sid="358" ssid="244">Let v(j, 41-1, T[]l&amp;quot;) be the number of vacancies up to and including position j just before we place Ttipc.</S>
    <S sid="359" ssid="245">In the interest of notational brevity, a noble but elusive goal, we write this simply as v1.</S>
    <S sid="360" ssid="246">We retain two sets of distortion parameters, as in Model 4, and continue to refer to them as d1 and d&gt;1.</S>
    <S sid="361" ssid="247">We assume that, for [ii &gt; 0, = 7-(!,, 0(1), e) = (vilB(.6), voi_i, vin - + 1)(1 - 6(v1, vj-i))&#8226; (48) The number of vacancies up to j is the same as the number of vacancies up to j - 1 only when j is not itself vacant.</S>
    <S sid="362" ssid="248">The last factor, therefore, is 1 when j is vacant and 0 otherwise.</S>
    <S sid="363" ssid="249">In the final parameter of d1, um is the number of vacancies remaining in the French string.</S>
    <S sid="364" ssid="250">If ON = 1, then rto may be placed in any of these vacancies; if Oki = 2, 7-Ni may be placed in any but the last of these vacancies; in general, r[i]i may be placed in any but the rightmost ON - 1 of the remaining vacancies.</S>
    <S sid="365" ssid="251">Because rto must occupy the leftmost place of any of the words from TN, we must take care to leave room at the end of the string for the remaining words from this tablet.</S>
    <S sid="366" ssid="252">As with Model 4, we allow d1 to depend on the center of the previous cept and on fj, but we suppress the dependence on eu_ii since we should otherwise have too many parameters.</S>
    <S sid="367" ssid="253">For [ii &gt; 0 and k&gt; 1, we assume Again, the final factor enforces the constraint that Ttipc land in a vacant position, and, again, we assume that the probability depends on 4 only through its class.</S>
    <S sid="368" ssid="254">Model 5 is described in more detail in Appendix B.</S>
    <S sid="369" ssid="255">As with Model 4, we leave the details of the count and reestimation formulae to the reader.</S>
    <S sid="370" ssid="256">No incremental evaluation of the likelihood of neighbors is possible with Model 5 because a move or swap may require wholesale recomputation of the likelihood of an alignment.</S>
    <S sid="371" ssid="257">Therefore, when we evaluate expectations for Model 5, we include only the alignments in S as defined in Equation (47).</S>
    <S sid="372" ssid="258">We further trim these alignments by removing any alignment a, for which Pr(a le, f; 4) is too much smaller than Pr (b.'</S>
    <S sid="373" ssid="259">( V(f I e; 2) le, f; 4).</S>
    <S sid="374" ssid="260">Model 5 is a powerful but unwieldy ally in the battle to align translations.</S>
    <S sid="375" ssid="261">It must be led to the battlefield by its weaker but more agile brethren Models 2, 3, and 4.</S>
    <S sid="376" ssid="262">In fact, this is the raison d'&#234;tre of these models.</S>
    <S sid="377" ssid="263">To keep them aware of the lay of the land, we adjust their parameters as we carry out iterations of the EM algorithm for Model 5.</S>
    <S sid="378" ssid="264">That is, we collect counts for Models 2, 3, and 4 by summing over alignments as determined by the abbreviated S described above, using Model 5 to compute Pr(a I e, f).</S>
    <S sid="379" ssid="265">Although this appears to increase the storage necessary for maintaining counts as we proceed through the training data, the extra burden is small because the overwhelming majority of the storage is devoted to counts for t(f I e), and these are the same for Models 2, 3, 4, and 5.</S>
  </SECTION>
  <SECTION title="5." number="6">
    <S sid="380" ssid="1">We have used a large collection of training data to estimate the parameters of the models described above.</S>
    <S sid="381" ssid="2">Brown, Lai, and Mercer (1991) have described an algorithm with which one can reliably extract French and English sentences that are translations of one another from parallel corpora.</S>
    <S sid="382" ssid="3">They used the algorithm to extract a large number of translations from several years of the proceedings of the Canadian parliament.</S>
    <S sid="383" ssid="4">From these translations, we have chosen as our training data those for which both the English sentence and the French sentence are 30 or fewer words in length.</S>
    <S sid="384" ssid="5">This is a collection of 1,778,620 translations.</S>
    <S sid="385" ssid="6">In an effort to eliminate some of the typographical errors that abound in the text, we have chosen as our English vocabulary all of those words that appear at least twice in English sentences in our data, and as our French vocabulary all of those words that appear at least twice in French sentences in our data.</S>
    <S sid="386" ssid="7">All other words we replace with a special unknown English word or unknown French word accordingly as they appear in an English sentence or a French sentence.</S>
    <S sid="387" ssid="8">We arrive in this way at an English vocabulary of 42,005 words and a French vocabulary of 58,016 words.</S>
    <S sid="388" ssid="9">Some typographical errors are quite frequent, for example, momento for memento, and so our vocabularies are not completely free of them.</S>
    <S sid="389" ssid="10">At the same time, some words are truly rare, and so we have, in some cases, snubbed legitimate words.</S>
    <S sid="390" ssid="11">Adding eo to the English vocabulary brings it to 42,006 words.</S>
    <S sid="391" ssid="12">We have carried out 12 iterations of the EM algorithm for this data.</S>
    <S sid="392" ssid="13">We initialized the process by setting each of the 2, 437, 020, 096 translation probabilities, t(f I e), to 1/58,016.</S>
    <S sid="393" ssid="14">That is, we assume each of the 58,016 words in the French vocabulary to be equally likely as a translation for each of the 42,006 words in the English vocabulary.</S>
    <S sid="394" ssid="15">For t(f le) to be greater than zero at the maximum likelihood solution for one of our models, f and e must occur together in at least one of the translations in our training data.</S>
    <S sid="395" ssid="16">This is the case for only 25, 427, 016 pairs, or about one percent of all translation probabilities.</S>
    <S sid="396" ssid="17">On the average, then, each English word appears with about 605 French words.</S>
    <S sid="397" ssid="18">Table 1 summarizes our training computation.</S>
    <S sid="398" ssid="19">At each iteration, we compute the probabilities of the various alignments of each translation using one model, and collect counts using a second (possibly different) model.</S>
    <S sid="399" ssid="20">These are referred to in the table as the In model and the Out model, respectively.</S>
    <S sid="400" ssid="21">After each iteration, we retain individual values only for those translation probabilities that surpass a threshold; the remainder we set to a small value (10-12).</S>
    <S sid="401" ssid="22">This value is so small that it does not affect the normalization conditions, but is large enough that translation probabilities can be resurrected during later iterations.</S>
    <S sid="402" ssid="23">We see in columns 4 and 5 that even though we lower the threshold as iterations progress, fewer and fewer probabilities survive.</S>
    <S sid="403" ssid="24">By the final iteration, only 1, 658, 364 probabilities survive, an average of about 39 French words for each English word.</S>
    <S sid="404" ssid="25">Although the entire t array has 2, 437, 020, 096 entries, and we need to store it twice, once as probabilities and once as counts, it is clear from the preceeding remarks that we need never deal with more than about 25 million counts or about 12 million probabilities.</S>
    <S sid="405" ssid="26">We store these two arrays using standard sparse matrix techniques.</S>
    <S sid="406" ssid="27">We keep counts as pairs of bytes, but allow for overflow into 4 bytes if necessary.</S>
    <S sid="407" ssid="28">In this way, it is possible to run the training program in less than 100 megabytes of memory.</S>
    <S sid="408" ssid="29">While this number would have seemed extravagant a few years ago, today it is available at modest cost in a personal workstation.</S>
    <S sid="409" ssid="30">As we have described, when the In model is neither Model 1 nor Model 2, we evaluate the count sums over only some of the possible alignments.</S>
    <S sid="410" ssid="31">Many of these alignments have a probability much smaller than that of the Viterbi alignment.</S>
    <S sid="411" ssid="32">The column headed Alignments in Table 1 shows the average number of alignments for which the probability is within a factor of 25 of the probability of the Viterbi alignment in each iteration.</S>
    <S sid="412" ssid="33">As this number drops, the model concentrates more and more probability onto fewer and fewer alignments so that the Viterbi alignment becomes ever more dominant.</S>
    <S sid="413" ssid="34">The last column in the table shows the perplexity of the French text given the English text for the In model of the iteration.</S>
    <S sid="414" ssid="35">We expect the likelihood of the training data to increase with each iteration.</S>
    <S sid="415" ssid="36">We can think of this likelihood as arising from a product of factors, one for each French word in the training data.</S>
    <S sid="416" ssid="37">We have 28,850, 104 French words in our training data, so the 28,850, 104th root of the likelihood is the average factor by which the likelihood is reduced for each additional French word.</S>
    <S sid="417" ssid="38">The reciprocal of this root is the perplexity shown in the table.</S>
    <S sid="418" ssid="39">As the likelihood increases, the perplexity decreases.</S>
    <S sid="419" ssid="40">We see a steady decrease in perplexity as the iterations progress except when we switch from Model 2 as the In model to Model 3.</S>
    <S sid="420" ssid="41">This sudden jump is not because Model 3 is a poorer model than Model 2, but because Model 3 is deficient: the great majority of its probability is squandered on objects that are not strings of French words.</S>
    <S sid="421" ssid="42">As we have argued, deficiency is not a problem.</S>
    <S sid="422" ssid="43">In our description of Model 1, we left Pr(m I e) unspecified.</S>
    <S sid="423" ssid="44">In quoting perplexities for Models 1 and 2, we have assumed that the length of the French string is Poisson with a mean that is a linear function of the length of the English string.</S>
    <S sid="424" ssid="45">Specifically, we have assumed that Pr(M = m le) = (A Oine-Al I M!, with A equal to 1.09.</S>
    <S sid="425" ssid="46">It is interesting to see how the Viterbi alignments change as the iterations progress.</S>
    <S sid="426" ssid="47">In Figure 5, we show for several sentences the Viterbi alignment after iterations 1, 6, 7, and 12.</S>
    <S sid="427" ssid="48">Iteration 1 is the first iteration for Model 2, and iterations 6, 7, and 12 are the final iterations for Models 2, 3, and 5, respectively.</S>
    <S sid="428" ssid="49">In each example, we show the French sentence with a subscript affixed to each word to ease the reader's task in interpreting the list of numbers after each English word.</S>
    <S sid="429" ssid="50">In the first example, al me semble faire signe que oui I It seems to me that he is nodding), two interesting changes evolve over the course of the iterations.</S>
    <S sid="430" ssid="51">In the alignment for Model 1, II is correctly connected to he, but in all later alignments Il is incorrectly connected to It.</S>
    <S sid="431" ssid="52">Models 2, 3, and 5 discount a connection of he to Il because it is quite far away.</S>
    <S sid="432" ssid="53">We do not yet have a model with sufficient linguistic sophistication to make this connection properly.</S>
    <S sid="433" ssid="54">On the other hand, we see that nodding, which in Models 1, 2, and 3 is connected only to signe and oui, is correctly connected to the entire phrase faire signe que oui in Model 5.</S>
    <S sid="434" ssid="55">In the second example, (Voyez les profits que ils ont realises I Look at the profits they have made), Models 1, 2, and 3 incorrectly connect profits4 to both profits3 and realises7, but with Model 5, profits4 is correctly connected only to profits3, and made7 is connected to rea/ises7.</S>
    <S sid="435" ssid="56">Finally, in (De les promesses, de les promesses!</S>
    <S sid="436" ssid="57">I Promises, promises.</S>
    <S sid="437" ssid="58">), Promisesi is connected to both instances of promesses with Model 1; promises3 is connected to most of the French sentence with Model 2; the final punctuation of the English sentence is connected to both the exclamation point and, curiously, to de5 with Model 3; and only with Model 5 do we have a satisfying alignment of the two sentences.</S>
    <S sid="438" ssid="59">The orthography for the French sentence in the second example is Voyez les profits qu'ils ont realises and in the third example is Des promesses, des promesses!</S>
    <S sid="439" ssid="60">We have restored the e to the end Figure 5 The progress of alignments with iteration. of qu' and have twice analyzed des into its constituents, de and les.</S>
    <S sid="440" ssid="61">We commit these and other petty pseudographic improprieties in the interest of regularizing the French text.</S>
    <S sid="441" ssid="62">In all cases, orthographic French can be recovered by rule from our corrupted versions.</S>
    <S sid="442" ssid="63">Figures 6-15 show the translation probabilities and fertilities after the final iteration of training for a number of English words.</S>
    <S sid="443" ssid="64">We show all and only those probabilities that are greater than 0.01.</S>
    <S sid="444" ssid="65">Some words, like nodding, in Figure 6, do not slip gracefully into French.</S>
    <S sid="445" ssid="66">Thus, we have translations like (II fait signe que oui I He is nodding), (11 fait un signe de la tete I He is nodding), (II fait un signe de tete affirmatif I He is nodding), or (II hoche la tete affirmativement I He is nodding).</S>
    <S sid="446" ssid="67">As a result, nodding frequently has a large fertility and spreads its translation probability over a variety of words.</S>
    <S sid="447" ssid="68">In French, what is worth saying is worth saying in many different ways.</S>
    <S sid="448" ssid="69">We see another facet of this with words like should, in Figure 7, which rarely has a fertility greater than one but still produces many different words, among them devrait, devraient, devrions, doit, doivent, devons, and devrais.</S>
    <S sid="449" ssid="70">These are (just a fraction of the many) forms of the French verb devoir.</S>
    <S sid="450" ssid="71">Adjectives fare a little better: national, in Figure 8, almost never produces more than one word and confines itself to one of nationale, national, nationaux, and nationales, respectively the feminine, the masculine, the masculine plural, and the feminine plural of the corresponding French adjective.</S>
    <S sid="451" ssid="72">It is clear that our models would benefit from some kind of morphological processing to rein in the lexical exuberance of French.</S>
    <S sid="452" ssid="73">We see from the data for the, in Figure 9, that it produces le, la, les, and l' as we would expect.</S>
    <S sid="453" ssid="74">Its fertility is usually 1, but in some situations English prefers an article where French does not and so about 14% of the time its fertility is 0.</S>
    <S sid="454" ssid="75">Sometimes, as with farmers, in Figure 10, it is French that prefers the article.</S>
    <S sid="455" ssid="76">When this happens, the English noun trains to produce its translation together with an article.</S>
    <S sid="456" ssid="77">Thus, farmers Translation and fertility probabilities for nodding. typically has a fertility 2 and usually produces either agriculteurs or les.</S>
    <S sid="457" ssid="78">We include additional examples in Figures 11 through 15, which show the translation and fertility probabilities for external, answer, oil, former, and not.</S>
    <S sid="458" ssid="79">Although we show the various probabilities to three decimal places, one must realize that the specific numbers that appear are peculiar to the training data that we used in obtaining them.</S>
    <S sid="459" ssid="80">They are not constants of nature relating the Platonic ideals of eternal English and eternal French.</S>
    <S sid="460" ssid="81">Had we used different sentences as training data, we might well have arrived at different numbers.</S>
    <S sid="461" ssid="82">For example, in Figure 9, we see that t(lelthe) = 0.497 while the corresponding number from Figure 4 of Brown et al. (1990) is 0.610.</S>
    <S sid="462" ssid="83">The difference arises not from some instability in the training algorithms or some subtle shift in the languages in recent years, but from the fact that we have used 1,778,620 pairs of sentences covering virtually the complete vocabulary of the Hansard data for training, while they used only 40,000 pairs of sentences and restricted their attention to the 9,000 most common words in each of the two vocabularies.</S>
    <S sid="463" ssid="84">Figures 16, 17, and 18 show automatically derived alignments for three translations.</S>
    <S sid="464" ssid="85">In the terminology of Section 4.6, each alignment is b&amp;quot;(v(fle; 2)).</S>
    <S sid="465" ssid="86">We stress that these alignments have been found by an algorithm that involves no explicit knowledge of either French or English.</S>
    <S sid="466" ssid="87">Every fact adduced to support them has been discovered algorithmically from the 1, 778, 620 translations that constitute our training data.</S>
    <S sid="467" ssid="88">This data, in turn, is the product of an algorithm the sole linguistic input of which is a set of rules explaining how to find sentence boundaries in the two languages.</S>
    <S sid="468" ssid="89">We may justifiably claim, therefore, that these alignments are inherent in the Canadian Hansard data itself.</S>
    <S sid="469" ssid="90">In the alignment shown in Figure 16, all but one of the English words has fertility 1.</S>
    <S sid="470" ssid="91">The final prepositional phrase has been moved to the front of the French sentence, but otherwise the translation is almost verbatim.</S>
    <S sid="471" ssid="92">Notice, however, that the new proposal has been translated into les nouvelles propositions, demonstrating that number is not an invariant under translation.</S>
    <S sid="472" ssid="93">The empty cept has fertility 5 here.</S>
    <S sid="473" ssid="94">It generates eni, de3, the comma, de16, and dela. f t(f I e) 0 n(0 I e) le 0.497 1 0.746 la 0.207 0 0.254 les 0.155 l' 0.086 ce 0.018 cette 0.011 Translation and fertility probabilities for the. f t(f l e) 0 n(0 I e) agriculteurs 0.442 2 0.731 les 0.418 1 0.228 cultivateurs 0.046 0 0.039 producteurs 0.021 Translation and fertility probabilities for farmers.</S>
    <S sid="474" ssid="95">Translation and fertility probabilities for oil.</S>
    <S sid="475" ssid="96">Translation and fertility probabilities for not.</S>
    <S sid="476" ssid="97">In Figure 17, two of the English words have fertility 0, one has fertility 2, and one, embattled, has fertility 5.</S>
    <S sid="477" ssid="98">Embattled is another word, like nodding, that eludes the French grasp and comes with a panoply of multi-word translations.</S>
    <S sid="478" ssid="99">The final example, in Figure 18, has several features that bear comment.</S>
    <S sid="479" ssid="100">The second word, Speaker, is connected to the sequence l'Orateur.</S>
    <S sid="480" ssid="101">Like farmers above, it has trained to produce both the word that we naturally think of as its translation and the associated article.</S>
    <S sid="481" ssid="102">In our data, Speaker always has fertility 2 and produces equally often l'Orateur and le president.</S>
    <S sid="482" ssid="103">Later in the sentence, starred is connected to the phrase marquees de un asterisque.</S>
    <S sid="483" ssid="104">From an initial situation in which each French word is equally probable as a translation of starred, we have arrived, through training, at a situation where it is possible to connect starred to just the right string of four words.</S>
    <S sid="484" ssid="105">Near the end of the sentence, give is connected to donnerai, the first person singular future of donner, which means to give.</S>
    <S sid="485" ssid="106">We should be more comfortable if both will and give were connected to donnerai, but by limiting cepts to no more than one word, we have precluded this possibility.</S>
    <S sid="486" ssid="107">Finally, the last 12 words of the English sentence, I now have the answer and will give it to the House, clearly correspond to the last 7 words of the French sentence, je donnerai la reponse a la Chambre, but, literally, the French is I will give the answer to the House.</S>
    <S sid="487" ssid="108">There is nothing about now, have, and, or it, and each of these words has fertility 0.</S>
    <S sid="488" ssid="109">Translations that are as far as this from the literal are rather more the rule than the exception in our training data.</S>
    <S sid="489" ssid="110">One might cavil at the connection of la reponse to the answer rather than to it.</S>
    <S sid="490" ssid="111">We do not.</S>
  </SECTION>
  <SECTION title="6." number="7">
    <S sid="491" ssid="1">Models 1-5 provide an effective means for obtaining word-by-word alignments of translations, but as a means to achieve our real goal, which is translation, there is The best of 1.9 x 1025 alignments.</S>
    <S sid="492" ssid="2">The best of 8.4 x 1029 alignments.</S>
    <S sid="493" ssid="3">The best of 5.6 x 1031 alignments. room for improvement.</S>
    <S sid="494" ssid="4">We have seen that by ignoring the morphological structure of the two languages we dilute the strength of our statistical model, explaining, for example, each of the several tens of forms of each French verb independently.</S>
    <S sid="495" ssid="5">We have seen that by ignoring multi-word cepts, we are forced to give a false, or at least an unsatisfactory, account of some features in many translations.</S>
    <S sid="496" ssid="6">And finally, we have seen that our models are deficient, either in fact, as with Models 3 and 4, or in spirit, as with Models 1, 2, and 5.</S>
    <S sid="497" ssid="7">We have argued in Section 2 that neither spiritual nor actual deficiency poses a serious problem, but this is not entirely true.</S>
    <S sid="498" ssid="8">Let w(e) be the sum of Pr(f I e) over well-formed French strings and let i(e) be the sum over ill-formed French strings. lit a deficient model, w(e) + i(e) &lt; 1.</S>
    <S sid="499" ssid="9">We say that the remainder of the probability is concentrated on the event failure and we write w(e) + i(e) + Pr(failureje) = 1.</S>
    <S sid="500" ssid="10">Clearly, a model is deficient precisely when Pr(failurele) &gt; 0.</S>
    <S sid="501" ssid="11">If Pr(failurele) 0, but i(e) &gt; 0, then the model is spiritually deficient.</S>
    <S sid="502" ssid="12">If w(e) were independent of e, neither form of deficiency would pose a problem, but because our models have no long-term constraints, w(e) decreases exponentially with 1.</S>
    <S sid="503" ssid="13">When computing alignments, even this creates no problem because e and f are known.</S>
    <S sid="504" ssid="14">If, however, we are given f and asked to discover e, then we will find that the product Pr(e) e) is too small for long English strings as compared with short ones.</S>
    <S sid="505" ssid="15">As a result, we will improperly favor short English strings.</S>
    <S sid="506" ssid="16">We can counteract this tendency in part by replacing Pr(fle) with c/ POI e) for some empirically chosen constant c. This is treatment of the symptom rather than treatment of the disease itself, but it offers some temporary relief.</S>
    <S sid="507" ssid="17">The cure lies in better modeling.</S>
    <S sid="508" ssid="18">As we progress from Model 1 to Model 5, evaluating the expectations that give us counts becomes increasingly difficult.</S>
    <S sid="509" ssid="19">For Models 1 and 2, we are able to include the contribution of each of the (1 + 1)rn possible alignments exactly.</S>
    <S sid="510" ssid="20">For later models, we include the contributions of fewer and fewer alignments.</S>
    <S sid="511" ssid="21">Because most of the probability for each translation is concentrated by these models on a small number of alignments, this suboptimal procedure, mandated by the complexity of the models, yields acceptable results.</S>
    <S sid="512" ssid="22">In the limit, we can contemplate evaluating the expectations using only a single, probable alignment for each translation.</S>
    <S sid="513" ssid="23">When that alignment is the Viterbi alignment, we call this Viterbi training.</S>
    <S sid="514" ssid="24">It is easy to see that Viterbi training converges: at each step, we reestimate parameters so as to make the current set of Viterbi alignments as probable as possible; when we use these parameters to compute a new set of Viterbi alignments, we find either the old set or a set that is yet more probable.</S>
    <S sid="515" ssid="25">Since the probability can never be greater than one, this process must converge.</S>
    <S sid="516" ssid="26">In fact, unlike the EM algorithm in general, it must converge in a finite, though impractically large, number of steps because each translation has only a finite number of alignments.</S>
    <S sid="517" ssid="27">In practice, we are never sure that we have found the Viterbi alignment.</S>
    <S sid="518" ssid="28">If we reinterpret the Viterbi alignment to mean the most probable alignment that we can find rather than the most probable alignment that exists, then a similarly reinterpreted Viterbi training algorithm still converges.</S>
    <S sid="519" ssid="29">We have already used this algorithm successfully as a part of a system to assign senses to English and French words on the basis of the context in which they appear (Brown et al. 1991a, 1991b).</S>
    <S sid="520" ssid="30">We expect to use it in models that we develop beyond Model 5.</S>
    <S sid="521" ssid="31">In Models 1-5, we restrict our attention to alignments with cepts containing no more than one word each.</S>
    <S sid="522" ssid="32">Except in Models 4 and 5, cepts play little role in our development.</S>
    <S sid="523" ssid="33">Even in these models, cepts are determined implicitly by the fertilities of the words in the alignment: words for which the fertility is greater than zero make up one-word cepts; those for which it is zero do not.</S>
    <S sid="524" ssid="34">We can easily extend the generative process upon which Models 3, 4, and 5 are based to encompass multi-word cepts.</S>
    <S sid="525" ssid="35">We need only include a step for selecting the ceptual scheme and ascribe fertilities to cepts rather than to words, requiring that the fertility of each cept be greater than zero.</S>
    <S sid="526" ssid="36">Then, in Equation (29), we can replace the products over words in an English string with products over cepts in the ceptual scheme.</S>
    <S sid="527" ssid="37">When we venture beyond one-word cepts, however, we must tread lightly.</S>
    <S sid="528" ssid="38">An English string can contain any of 42,005 one-word cepts, but there are more than 1.7 billion possible two-word cepts, more than 74 trillion three-word cepts, and so on.</S>
    <S sid="529" ssid="39">Clearly, one must be discriminating in choosing potential multi-word cepts.</S>
    <S sid="530" ssid="40">The caution that we have displayed thus far in limiting ourselves to cepts with fewer than two words was motivated primarily by our respect for the featureless desert that multi-word cepts offer a priori.</S>
    <S sid="531" ssid="41">The Viterbi alignments that we have computed with Model 5 give us a frame of reference from which to expand our horizons to multi-word cepts.</S>
    <S sid="532" ssid="42">By inspecting them, we can find translations for a given multi-word sequence.</S>
    <S sid="533" ssid="43">We need only promote a multi-word sequence to cepthood when these translations differ substantially from what we might expect on the basis of the individual words that it contains.</S>
    <S sid="534" ssid="44">In English, either a boat or a person can be left high and dry, but in French, un bateau is not left haut et sec, nor une personne haute et seche.</S>
    <S sid="535" ssid="45">Rather, a boat is left echoue and a person en plan.</S>
    <S sid="536" ssid="46">High and dry, therefore, is a promising three-word cept because its translation is not compositional.</S>
    <S sid="537" ssid="47">We treat each distinct sequence of letters as a distinct word.</S>
    <S sid="538" ssid="48">In English, for example, we recognize no kinship among the several forms of the verb to eat (eat, ate, eaten, eats, and eating).</S>
    <S sid="539" ssid="49">In French, irregular verbs have many forms.</S>
    <S sid="540" ssid="50">In Figure 7, we have already seen 7 forms of devoir.</S>
    <S sid="541" ssid="51">Altogether, it has 41 different forms.</S>
    <S sid="542" ssid="52">And there would be 42 if the French did not inexplicably drop the circumflex from the masculine plural past participle (dus), thereby causing it to collide with the first and second person singular in the pass&#233; simple, no doubt a source of endless confusion for the beleaguered francophone.</S>
    <S sid="543" ssid="53">The French make do with fewer forms for the multitude of regular verbs that are the staple diet of everyday speech.</S>
    <S sid="544" ssid="54">Thus, manger (to eat), has only 39 forms (manger, mange, manges,.</S>
    <S sid="545" ssid="55">. mangeassent).</S>
    <S sid="546" ssid="56">Models 1-5 must learn to connect the 5 forms of to eat to the 39 forms of manger.</S>
    <S sid="547" ssid="57">In the 28,850, 104 French words that make up our training data, only 13 of the 39 forms of manger actually appear.</S>
    <S sid="548" ssid="58">Of course, it is only natural that in the proceedings of a parliament, forms of manger are less numerous than forms of parler (to speak), but even for parler, only 28 of the 39 forms occur in our data.</S>
    <S sid="549" ssid="59">If we were to encounter a rare form of one of these words, say, parlass ions or mangeassent, we would have no inkling of its relationship to speak or eat.</S>
    <S sid="550" ssid="60">A similar predicament besets nouns and adjectives as well.</S>
    <S sid="551" ssid="61">For example, composition is the among the most common words in our English vocabulary, but compositions is among the least common words.</S>
    <S sid="552" ssid="62">We plan to ameliorate these problems with a simple inflectional analysis of verbs, nouns, adjectives, and adverbs, so that the relatedness of the several forms of the same word is manifest in our representation of the data.</S>
    <S sid="553" ssid="63">For example, we wish to make evident the common pedigree of the different conjugations of a verb in French and in English; of the singular and plural, and singular possessive and plural possessive forms of a noun in English; of the singular, plural, masculine, and feminine forms of a noun or adjective in French; and of the positive, comparative, and superlative forms of an adjective or adverb in English.</S>
    <S sid="554" ssid="64">Thus, our intention is to transform (je mange la peche I I eat the peach) into, e.g., (je manger, 13spres la peche I I eat,x3spres the peach).</S>
    <S sid="555" ssid="65">Here, eat is analyzed into a root, eat, and an ending, x3spres, that indicates the present tense form used except in the third person singular.</S>
    <S sid="556" ssid="66">Similarly, mange is analyzed into a root, manger, and an ending, 13spres, that indicates the present tense form used for the first and third persons singular.</S>
    <S sid="557" ssid="67">These transformations are invertible and should reduce the French vocabulary by about 50% and the English vocabulary by about 20%.</S>
    <S sid="558" ssid="68">We hope that this will significantly improve the statistics in our models.</S>
  </SECTION>
  <SECTION title="7." number="8">
    <S sid="559" ssid="1">That interesting bilingual lexical correlations can be extracted automatically from a large bilingual corpus was pointed out by Brown et al. (1988).</S>
    <S sid="560" ssid="2">The algorithm that they describe is, roughly speaking, equivalent to carrying out the first iteration of the EM algorithm for our Model 1 starting from an initial guess in which each French word is equally probable as a translation for each English word.</S>
    <S sid="561" ssid="3">They were unaware of a connection to the EM algorithm, but they did realize that their method is not entirely satisfactory.</S>
    <S sid="562" ssid="4">For example, once it is clearly established that in (La porte est rouge I The door is red), it is red that produces rouge, one is uncomfortable using this sentence as support for red producing porte or door producing rouge.</S>
    <S sid="563" ssid="5">They suggest removing words once a correlation between them has been clearly established and then reprocessing the resulting impoverished translations hoping to recover less obvious correlations now revealed by the departure of their more prominent relatives.</S>
    <S sid="564" ssid="6">From our present perspective, we see that the proper way to proceed is simply to carry out more iterations of the EM algorithm.</S>
    <S sid="565" ssid="7">The likelihood for Model 1 has a unique local maximum for any set of training data.</S>
    <S sid="566" ssid="8">As iterations proceed, the count for porte as a translation of red will dwindle away.</S>
    <S sid="567" ssid="9">In a later paper, Brown et al. (1990) describe a model that is essentially the same as our Model 3.</S>
    <S sid="568" ssid="10">They sketch the EM algorithm and show that, once trained, their model can be used to extract word-by-word alignments for pairs of sentences.</S>
    <S sid="569" ssid="11">They did not realize that the logarithm of the likelihood for Model 1 is concave and, hence, has a unique local maximum.</S>
    <S sid="570" ssid="12">They were also unaware of the trick by which we are able to sum over all alignments when evaluating the counts for Models 1 and 2, and of the trick by which we are able to sum over all alignments when transferring parameters from Model 2 to Model 3.</S>
    <S sid="571" ssid="13">As a result, they were unable to handle large vocabularies and so restricted themselves to vocabularies of only 9,000 words.</S>
    <S sid="572" ssid="14">Nonetheless, they were able to align phrases in French with the English words that produce them as illustrated in their Figure 3.</S>
    <S sid="573" ssid="15">More recently, Gale and Church (1991a) describe an algorithm similar to the one described in Brown et al. (1988).</S>
    <S sid="574" ssid="16">Like Brown et al., they consider only the simultaneous appearance of words in pairs of sentences that are translations of one another.</S>
    <S sid="575" ssid="17">Although algorithms like these are extremely simple, many of the correlations between English and French words are so pronounced as to fall prey to almost any effort to expose them.</S>
    <S sid="576" ssid="18">Thus, the correlation of pairs like (eau I water), (lait I milk), (pourquoi I why), (chambre I house), and many others, simply cannot be missed.</S>
    <S sid="577" ssid="19">They shout from the data, and any method that is not stone deaf will hear them.</S>
    <S sid="578" ssid="20">But many of the correlations speak in a softer voice: to hear them clearly, we must model the translation process, as Brown et al. (1988) suggest and as Brown et al.</S>
    <S sid="579" ssid="21">(1990) and the current paper actually do.</S>
    <S sid="580" ssid="22">Only in this way can one hope to hear the quiet call of (marquees d'un asterisque starred) or the whisper of (qui s'est fait bousculer I embattled).</S>
    <S sid="581" ssid="23">The series of models that we have described constitutes a mathematical embodiment of the powerfully compelling intuitive feeling that a word in one language can be translated into a word or phrase in another language.</S>
    <S sid="582" ssid="24">In some cases, there may be several or even several tens of translations depending on the context in which the word appears, but we should be quite surprised to find a word with hundreds of mutually exclusive translations.</S>
    <S sid="583" ssid="25">Although we use these models as part of an automatic system for translating French into English, they provide, as a byproduct, very satisfying accounts of the word-by-word alignment of pairs of French and English strings.</S>
    <S sid="584" ssid="26">Our work has been confined to French and English, but we believe that this is purely adventitious: had the early Canadian trappers been Manchurians later to be outnumbered by swarms of conquistadores, and had the two cultures clung stubbornly each to its native tongue, we should now be aligning Spanish and Chinese.</S>
    <S sid="585" ssid="27">We conjecture that local alignment of the component parts of any corpus of parallel texts is inherent in the corpus itself, provided only that it be large enough.</S>
    <S sid="586" ssid="28">Between any pair of languages where mutual translation is important enough that the rate of accumulation of translated examples sufficiently exceeds the rate of mutation of the languages involved, there must eventually arise such a corpus.</S>
    <S sid="587" ssid="29">The linguistic content of our program thus far is scant indeed.</S>
    <S sid="588" ssid="30">It is limited to one set of rules for analyzing a string of characters into a string of words, and another set of rules for analyzing a string of words into a string of sentences.</S>
    <S sid="589" ssid="31">Doubtless even these can be recast in terms of some information theoretic objective function.</S>
    <S sid="590" ssid="32">But it is not our intention to ignore linguistics, neither to replace it.</S>
    <S sid="591" ssid="33">Rather, we hope to enfold it in the embrace of a secure probabilistic framework so that the two together may draw strength from one another and guide us to better natural language processing systems in general and to better machine translation systems in particular.</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="9">
    <S sid="592" ssid="1">We would like to thank many of our colleagues who read and commented on early versions of the manuscript, especially John Lafferty.</S>
    <S sid="593" ssid="2">We would also like to thank the reviewers, who made a number of invaluable suggestions about the organization of the paper and pointed out many weaknesses in our original manuscript.</S>
    <S sid="594" ssid="3">If any weaknesses remain, it is not because of their failure to point them out, but because of our ineptness at responding adequately to their criticisms.</S>
  </SECTION>
  <SECTION title="References" number="10">
    <S sid="595" ssid="1">English vocabulary English word English string random English string length of e random length of E position in e, i= 0, 1, ... ,1 word i of e the empty cept French vocabulary French word French string random French string length of f random length of F position in f, j= 1, 2, ... ,m word j of f alignment cb length of Ti position within a tablet, k =1, 2, ... , Tik word k of Ti Ir a permutation of the positions of a tableau ik position in f for word k of Ti for permutation 7r N-(a) neighboring alignments of a neighboring alignments of a with ij pegged b(a) alignment in JV(a) with greatest probability b&#176;&#176; (a) alignment obtained by applying b repeatedly to a bi_1(a) alignment in .Mi (a) with greatest probability bi&amp;quot;.&#176; i(a) alignment obtained by applying bi-1 repeatedly to a A(e) class of English word e B(f) class of French word f A] displacement of a word in f vacancies in f Pt first position in e to the left of i that has non-zero fertility C, average position in f of the words connected to position i of e [i] position in e of the ith one word cept C[i] Po translation model P with parameter values string length probabilities (Models 1 and 2) fertility probabilities (Models 3, 4, and 5) fertility probabilities for eo (Models 3, 4, and 5) alignment probabilities (Model 2) distortion probabilities (Model 3) distortion probabilities for the first word of a tablet (Model 4) distortion probabilities for the other words of a tablet (Model 4) distortion probabilities for the first word of a tablet (Model 5) distortion probabilities for the other words of a tablet (Model 5)</S>
  </SECTION>
  <SECTION title="Appendix B: Summary of Models" number="11">
    <S sid="596" ssid="1">We collect here brief descriptions of our various translation models and the formulae needed for training them.</S>
    <S sid="597" ssid="2">An English-to-French translation model P with parameters 9 is a formula for calculating a conditional probability, or likelihood, P0 (f I e), for any string f of French words and any string e of English words.</S>
    <S sid="598" ssid="3">These probabilities satisfy where the sum ranges over all French strings f, and failure is a special symbol not in the French vocabulary.</S>
    <S sid="599" ssid="4">We interpret Po (f e) as the probability that a translator will produce f when given e, and P0 (failure I e) as the probability that he will produce no translation when given e. We call a model deficient if P (failure I e) is greater than zero for some e. Log-Likelihood Objective Function.</S>
    <S sid="600" ssid="5">The log-likelihood of a sample of translations (f(s), e(s)), s = 1, 2, ... , S, is Here C(f, e) is the empirical distribution of the sample, so that C(f,e) is 1/S times the number of times (usually 0 or 1) that the pair (f, e) occurs in the sample.</S>
    <S sid="601" ssid="6">We determine values for the parameters 9 so as to maximize this log-likelihood for a large training sample of translations.</S>
    <S sid="602" ssid="7">For our models, the only alignments that have positive probability are those for which each word of f is connected to at most one word of e. Relative Objective Function.</S>
    <S sid="603" ssid="8">We can compare hidden alignment models Po and Po using the relative objective function where P -0(a I f, e) = (a, f I e)/P0(f I e).</S>
    <S sid="604" ssid="9">Note that R(P6, Po) = 0.</S>
    <S sid="605" ssid="10">R is related to by Jensen's inequality Summing over e and f and using the Definitions (51) and (54) we arrive at Equation (55).</S>
    <S sid="606" ssid="11">We cannot create a good model or find good parameter values at a stroke.</S>
    <S sid="607" ssid="12">Rather we employ a process of iterative improvement.</S>
    <S sid="608" ssid="13">For a given model we use current parameter values to find better ones, and in this way, from initial values we find locally optimal ones.</S>
    <S sid="609" ssid="14">Then, given good parameter values for one model, we use them to find initial parameter values for another model.</S>
    <S sid="610" ssid="15">By alternating between these two steps we proceed through a sequence of gradually more sophisticated models.</S>
    <S sid="611" ssid="16">Improving Parameter Values.</S>
    <S sid="612" ssid="17">From Jensen's inequality (55), we see that 0(Po) is greater than 0(P0) if R(P0-, Po) is positive.</S>
    <S sid="613" ssid="18">With P= P. this suggests the following between probability distributions p and q.</S>
    <S sid="614" ssid="19">However, whereas the relative entropy is never negative, R can take any value.</S>
    <S sid="615" ssid="20">The inequality (55) for R is the analog of the inequality D &gt; 0 for D. iterative procedure, known as the EM Algorithm (Baum 1972; Dempster, Laird, and Rubin 1977), for finding locally optimal parameter values 0 for a model P: Note that for any a, R(Po, Po) is non-negative at its maximum in 0, since it is zero for = O.</S>
    <S sid="616" ssid="21">Thus 0(P0) will not decrease from one iteration to the next.</S>
    <S sid="617" ssid="22">Going From One Model to Another.</S>
    <S sid="618" ssid="23">Jensen's inequality also suggests a method for using parameter values 0 for one model I' to find initial parameter values 0 for another model P: In contrast to the case where f' = P, there may not be any 0 for which R(P0, Po) is non-negative.</S>
    <S sid="619" ssid="24">Thus, it could be that, even for the best 0, 11)(130) &lt; 0(1)0).</S>
    <S sid="620" ssid="25">Parameter Reestimation Formulae.</S>
    <S sid="621" ssid="26">In order to apply these algorithms, we need to solve the maximization problems of Steps 2 and 4.</S>
    <S sid="622" ssid="27">For the models that we consider, we can do this explicitly.</S>
    <S sid="623" ssid="28">To exhibit the basic form of the solution, we suppose Po is a model given by where the OM, w E Q, are real-valued parameters satisfying the constraints and for each w and (a, f, e), c(w ; a, f, e) is a non-negative integer.'</S>
    <S sid="624" ssid="29">We interpret 0(w) as the probability of the event w and c(w; a, f, e) as the number of times that this event occurs in (a, f, e).</S>
    <S sid="625" ssid="30">Note that The values for 0 that maximize the relative objective function R(I50, Po) subject to the contraints (59) are determined by the Kuhn-Tucker conditions where A is a Lagrange multiplier, the value of which is determined by the equality constraint in Equation (59).</S>
    <S sid="626" ssid="31">These conditions are both necessary and sufficient for a maximum since R(P6, Po) is a concave function of the 0(w).</S>
    <S sid="627" ssid="32">By multiplying Equation (61) by 0(w) and using Equation (60) and Definition (54) of R, we obtain the parameter reestimation formulae We interpret E o(w ;f , e) as the expected number of times, as computed by the model PO, that the event w occurs in the translation of e to f. Thus 0(w) is the (normalized) expected number of times, as computed by model PO, that w occurs in the translations of the training sample.</S>
    <S sid="628" ssid="33">We can easily generalize these formulae to allow models of the form (58) for which the single equality constraint in Equation (59) is replaced by multiple constraints where the subsets Sti, p --= 1, 2, ... form a partition of Q.</S>
    <S sid="629" ssid="34">We need only modify Equation E(m I 1) string length probabilities t(f I e) translation probabilities Here f E ,F; e E E or e = eo; 1 =- ...; and m = 1,2, .... Pe(f, a I e) = Po(m I e)Po(a I m, e)Po(f I a, m, e) (67) Assumptions.</S>
    <S sid="630" ssid="35">This model is not deficient.</S>
    <S sid="631" ssid="36">Generation.</S>
    <S sid="632" ssid="37">Equations (67)-(70) describe the following process for producing f from e: Useful Formulae.</S>
    <S sid="633" ssid="38">Because of the independence assumptions (68)-(70), we can calculate the sum over alignments (52) in closed form: Equation (73) is useful in computations since it involves only 0(/m) arithmetic operations, whereas the original sum over alignments (72) involves 0(/m) operations.</S>
    <S sid="634" ssid="39">Concavity.</S>
    <S sid="635" ssid="40">The objective function (51) for this model is a strictly concave function of the parameters.</S>
    <S sid="636" ssid="41">In fact, from Equations (51) and (73), which is clearly concave in E(m I 1) and t(f I e) since the logarithm of a sum is concave, and the sum of concave functions is concave.</S>
    <S sid="637" ssid="42">Because ';/) is concave, it has a unique local maximum.</S>
    <S sid="638" ssid="43">Moreover, we will find this maximum using the EM algorithm, provided that none of our initial parameter values is zero.</S>
    <S sid="639" ssid="44">E(m I 1) string length probabilities t(f I e) translation probabilities a(i I j,l,m) alignment probabilities Here i= 0, .</S>
    <S sid="640" ssid="45">,1; and j = 1,. , m. General Formula.</S>
    <S sid="641" ssid="46">This model is not deficient.</S>
    <S sid="642" ssid="47">Model 1 is the special case of this model in which the alignment probabilities are uniform: a(i = (I + 1)-1 for all i.</S>
    <S sid="643" ssid="48">Generation.</S>
    <S sid="644" ssid="49">Equations (75)-(78) describe the following process for producing f from e: Useful Formulae.</S>
    <S sid="645" ssid="50">Just as for Model 1, the independence assumptions allow us to calculate the sum over alignments (52) in closed form: By assumption (77) the connections of a are independent given the length m of f. Using Equation (81) we find that they are also independent given f: where Viterbi Alignment.</S>
    <S sid="646" ssid="51">For this model, and thus also for Model 1, we can express in closed form the Viterbi alignment V(f I e) between a pair of strings (f, e): Parameter Reestimation Formulae.</S>
    <S sid="647" ssid="52">We can find the parameter values 0 that maximize the relative objective function R(Po, Po) by applying the considerations of Section B.2.</S>
    <S sid="648" ssid="53">The counts c(w; a, f, e) of Equation (58) are We obtain the parameter reestimation formulae for t(f I e) and a(i I j,l,m) by using these counts in Equations (62)&#8212;(66).</S>
    <S sid="649" ssid="54">Equation (64) requires a sum over alignments.</S>
    <S sid="650" ssid="55">If PO satisfies as is the case for Models 1 and 2 (see Equation (82)), then this sum can be calculated explicitly: Equations (85)&#8212;(89) involve only 0(/m) arithmetic operations, whereas the sum over alignments involves 0(/m) operations. t(f e) translation probabilities n(cb e) fertility probabilities Po, pi fertility probabilities for eo d(jl id,m) distortion probabilities Here cA&#8226; = 0,1,2, &#8226; &#8226; .</S>
    <S sid="651" ssid="56">General Formulae. where In Equation (99), the product runs over all] = 1,2, ... , m except those for which a&#8226; 0.</S>
    <S sid="652" ssid="57">By summing over all pairs (r, ir) consistent with (f, a) we find The factors of 0,! in Equation (101) arise because there are ft=o cbi! equally probable terms in the sum (100).</S>
    <S sid="653" ssid="58">Parameter Reestimation Formulae.</S>
    <S sid="654" ssid="59">We can find the parameter values U that maximize the relative objective function R(PO, Po) by applying the considerations of Section B.2.</S>
    <S sid="655" ssid="60">The counts c(o.</S>
    <S sid="656" ssid="61">); a, f, e) of Equation (58) are We obtain the parameter reestimation formulae for t(f I e), a(j I i,1, m), and t(q5 I e) by using these counts in Equations (62)&#8212;(66).</S>
    <S sid="657" ssid="62">Equation (64) requires a sum over alignments.</S>
    <S sid="658" ssid="63">If Pti satisfies ti(a If,e)=14 ( a; I , e), (105) j=1 as is the case for Models 1 and 2 (see Equation (82)), then this sum can be calculated explicitly for 'et-,(f e;f,e) and Eo(jI i;f,e): -ea(f I e;f,e) m E-6(j i;f,e) EEpo(i I], f, e)5(e, ei)6(f Jj), i=o 1=1 ijo(i Unfortunately, there is no analogous formula for Eo(0 I e; f, e).</S>
    <S sid="659" ssid="64">Instead we must be content with In Equation (108), r denotes the set of all partitions of cb.</S>
    <S sid="660" ssid="65">Recall that a partition of 0 is a decomposition of 0 as a sum of positive integers.</S>
    <S sid="661" ssid="66">For example, 0 = 5 has 7 partitions since 1 + 1 + 1 + 1 + 1 = 1 + 1 + 1 + 2 = 1 + 1 + 3 = 1 + 2 + 2 = 1 + 4 = 2 + 3 = 5.</S>
    <S sid="662" ssid="67">For a partition y, we let -yk be the number of times that k appears in the sum, so that 0 = k-y.</S>
    <S sid="663" ssid="68">If -y is the partition corresponding to 1 + 1 + 3, then = 2, 'y3 = 1, and -yk = 0 for k other than 1 or 3.</S>
    <S sid="664" ssid="69">We adopt the convention that ro consists of the single element -y with -yk = 0 for all k. Equation (108) allows us to compute the counts -4(0 I e; f, e) in 0(//n + 0g) operations, where g is the number of partitions of 0.</S>
    <S sid="665" ssid="70">Although g grows with 0 like (400)-1 exp 7A/20/3 [11], it is manageably small for small 0.</S>
    <S sid="666" ssid="71">For example, 0 = 10 has 42 partitions.</S>
    <S sid="667" ssid="72">Proof of Formula (108).</S>
    <S sid="668" ssid="73">Introduce the generating functional where x is an indeterminant.</S>
    <S sid="669" ssid="74">Then To obtain Equation (113), rearrange the order of summation and sum over 0 to eliminate the 6-function of 0.</S>
    <S sid="670" ssid="75">To obtain Equation (114), note that 0, = Em1 6(i, a) and so i= x4).' flr X6(j'al).</S>
    <S sid="671" ssid="76">To obtain Equation (115), interchange the order of the sums on a] /-=-1 and the product on j.</S>
    <S sid="672" ssid="77">To obtain Equation (116), note that in the sum on a, the only term for which the power of x is nonzero is the one for which a = i.</S>
    <S sid="673" ssid="78">Now note that for any indeterminants x, yl, y2, , where zk = (-1) This follows from the calculation The reader will notice that the left-hand side of Equation (120) involves only powers of x up to m, while Equations (121)&#8212;(122) involve all powers of x.</S>
    <S sid="674" ssid="79">This is because the zk are not algebraically independent.</S>
    <S sid="675" ssid="80">In fact, for &gt; m, the coefficient of x0 on the right-hand side of Equation (122) must be zero.</S>
    <S sid="676" ssid="81">It follows that we can express z&#8216;k as a polynomial in zk, k =- 1,2, &#8226; &#8226; &#8226; , m&#8226; Using Equation (118) we can identify the coefficient of x4' in Equation (117).</S>
    <S sid="677" ssid="82">We obtain Equation (108) by combining Equations (117), (118), and the definitions (109)&#8212; (111) and (119).</S>
    <S sid="678" ssid="83">B.6 Model 4 translation probabilities Parameters. fertility probabilities qt. e) fertility probabilities for e0 n(0 e) distortion probabilities for the first word of a tablet Po, P1 distortion probabilities for the other words of a tablet cli(64 I A,13) d&gt;i(Aj B) Here 64 is an integer; A is an English class; and B is a French class.</S>
  </SECTION>
  <SECTION title="General Formulae." number="12">
    <S sid="679" ssid="1">where In Equation (129), p, is the first position to the left of i for which c/;&#8226;i &gt; 0, and cp is the ceiling of the average position of the words of rp: Note that Equations (125), (126), and (128) are identical to the corresponding formulae (93), (94), and (96) for Model 3.</S>
    <S sid="680" ssid="2">Generation.</S>
    <S sid="681" ssid="3">Equations (123)-(127) describe the following process for producing f or failure from e: 1-4.</S>
    <S sid="682" ssid="4">Choose a tableau T by following Steps 1-4 for Model 3, 5.</S>
    <S sid="683" ssid="5">For each i =- 1,2,... ,l and each k = 1,2,... , Oi choose a position &amp;quot;ffik as follows.</S>
    <S sid="684" ssid="6">If k 1 then choose 7r1 according to the distribution A(e p,), B(m)).</S>
    <S sid="685" ssid="7">If k&gt; 1 then choose 7rik greater than rk1 according to the distribution 6-8.</S>
    <S sid="686" ssid="8">Finish generating f by following Steps 6-8 for Model 3.</S>
    <S sid="687" ssid="9">B.7 Model 5 translation probabilities Parameters. fertility probabilities t(f I e) fertility probabilities for e0 n(0 e) distortion probabilities for the first word of a tablet po,pi distortion probabilities for the other words of a tablet di(64I B v) d&gt;1(64 I B, v) Here v = 1,2, &#8226; &#8226; , m.</S>
  </SECTION>
</PAPER>
