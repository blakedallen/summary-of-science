[
  {
    "citance_No": 1, 
    "citing_paper_id": "P13-1083", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Akihiro, Tamura | Taro, Watanabe | Eiichiro, Sumita | Hiroya, Takamura | Manabu, Okumura", 
    "raw_text": "9We could use other word-based dependency trees such as trees by the infinite PCFG model (Liang et al, 2007) and syntactic-head or semantic-head dependency trees in Nakazawa and Kurohashi (2012), although it is not our major focus", 
    "clean_text": "We could use other word-based dependency trees such as trees by the infinite PCFG model (Liang et al, 2007) and syntactic-head or semantic-head dependency trees in Nakazawa and Kurohashi (2012), although it is not our major focus.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "P11-1145", 
    "citing_paper_authority": 13, 
    "citing_paper_authors": "Ivan, Titov | Alexandre, Klementiev", 
    "raw_text": "However, in all these cases the effective size of the state space (i.e., the number of sub-symbols in the infinite PCFG (Liang et al, 2007), or the number of adapted productions in the adaptor grammar (Johnson et al, 2007)) was not very large", 
    "clean_text": "However, in all these cases the effective size of the state space (i.e., the number of sub-symbols in the infinite PCFG (Liang et al, 2007), or the number of adapted productions in the adaptor grammar (Johnson et al, 2007)) was not very large.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "P10-2034", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Tomoharu, Iwata | Daichi, Mochihashi | Hiroshi, Sawada", 
    "raw_text": "For ex ample, we can infer the number of nonterminals with a nonparametric Bayesian model (Liang et al., 2007), infer the model more robustly base don a Markov chain Monte Carlo inference (John son et al, 2007), and use probabilistic grammar models other than PCFGs", 
    "clean_text": "For example, we can infer the number of nonterminals with a nonparametric Bayesian model (Liang et al., 2007), infer the model more robustly based on a Markov chain Monte Carlo inference (Johnson et al, 2007), and use probabilistic grammar models other than PCFGs.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "P10-2036", 
    "citing_paper_authority": 14, 
    "citing_paper_authors": "Jennifer, Gillenwater | Kuzman, Ganchev | Jo&atilde;o, Gra&ccedil;a | Fernando, Pereira | Ben, Taskar", 
    "raw_text": "Thus, the realized dependency types should be a sparse subset of all possible types. Previous work in unsupervised grammar induction has tried to achieve sparsity through priors. Liang et al (2007), Finkel et al (2007) and John son et al (2007) proposed hierarchical Dirichlet process priors", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "D10-1120", 
    "citing_paper_authority": 29, 
    "citing_paper_authors": "Tahira, Naseem | Harr, Chen | Regina, Barzilay | Mark, Johnson", 
    "raw_text": "While Liang et al (2007) demonstrated empirical gains ona synthetic corpus, our experiments focus on unsupervised category refinement on real language data", 
    "clean_text": "While Liang et al (2007) demonstrated empirical gains on a synthetic corpus, our experiments focus on unsupervised category refinement on real language data.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "N09-1019", 
    "citing_paper_authority": 10, 
    "citing_paper_authors": "Micha, Elsner | Eugene, Charniak | Mark, Johnson", 
    "raw_text": "(General grammars with infinite numbers of nonterminals were studied by (Liang et al, 2007b))", 
    "clean_text": "(General grammars with infinite numbers of nonterminals were studied by (Liang et al, 2007b)).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "N09-1019", 
    "citing_paper_authority": 10, 
    "citing_paper_authors": "Micha, Elsner | Eugene, Charniak | Mark, Johnson", 
    "raw_text": "In addition to the block sampler used by Bhattacharya and Getoor (2006), we are investigating general-purpose split merge samplers (Jain and Neal, 2000) and the permutation sampler (Liang et al, 2007a)", 
    "clean_text": "In addition to the block sampler used by Bhattacharya and Getoor (2006), we are investigating general-purpose split merge samplers (Jain and Neal, 2000) and the permutation sampler (Liang et al, 2007a).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "D10-1002", 
    "citing_paper_authority": 7, 
    "citing_paper_authors": "Zhongqiang, Huang | Mary P., Harper | Slav, Petrov", 
    "raw_text": "However, because the latent variable grammars are not explicitly regularized, EM keeps fitting the training data and eventually begins over fitting (Liang et al, 2007)", 
    "clean_text": "However, because the latent variable grammars are not explicitly regularized, EM keeps fitting the training data and eventually begins over fitting (Liang et al, 2007).", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "P08-1046", 
    "citing_paper_authority": 21, 
    "citing_paper_authors": "Mark, Johnson", 
    "raw_text": "(Liang et al., 2007)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "P08-1046", 
    "citing_paper_authority": 21, 
    "citing_paper_authors": "Mark, Johnson", 
    "raw_text": "We? d like to learn the number of paradigm classes from the data, but doing this would probably require extending adaptorgrammars to incorporate the kind of adaptive state splitting found in the iHMM and iPCFG (Liang et al., 2007)", 
    "clean_text": "We'd like to learn the number of paradigm classes from the data, but doing this would probably require extending adaptor grammars to incorporate the kind of adaptive state splitting found in the iHMM and iPCFG (Liang et al., 2007).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "N10-1081", 
    "citing_paper_authority": 7, 
    "citing_paper_authors": "Shay B., Cohen | David M., Blei | Noah A., Smith", 
    "raw_text": "It was introduced for Dirich let process mixtures by Blei and Jordan (2005) and applied to infinite grammars by Liang et al (2007)", 
    "clean_text": "It was introduced for Dirichlet process mixtures by Blei and Jordan (2005) and applied to infinite grammars by Liang et al (2007).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "W08-0704", 
    "citing_paper_authority": 10, 
    "citing_paper_authors": "Mark, Johnson", 
    "raw_text": "First, we can let the number of nonterminals grow unboundedly, as in the Infinite PCFG, where the nonterminals of the gram mar can be indefinitely refined versions of a base PCFG (Liang et al, 2007)", 
    "clean_text": "First, we can let the number of nonterminals grow unboundedly, as in the Infinite PCFG, where the nonterminals of the grammar can be indefinitely refined versions of a base PCFG (Liang et al, 2007).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "D12-1064", 
    "citing_paper_authority": 10, 
    "citing_paper_authors": "Sze-Meng Jojo, Wong | Mark, Dras | Mark, Johnson", 
    "raw_text": "Future work will involve a broader exploration of the parameter space of the adaptor grammars, in particular the number of topics and the value of?; a look at other non-parametric extensions of PCFGs, such as infinite PCFGs (Liang et al2007) for finding a set of non-terminals permitting more fine-grained topics; and an investigation of how the approach can be extended to semi-supervised learning to take advantage of the vast quantity of texts with errors available on the Web", 
    "clean_text": "Future work will involve a broader exploration of the parameter space of the adaptor grammars, in particular the number of topics and the value of alpha; a look at other non-parametric extensions of PCFGs, such as infinite PCFGs (Liang et al2007) for finding a set of non-terminals permitting more fine-grained topics.", 
    "keep_for_gold": 0
  }
]
