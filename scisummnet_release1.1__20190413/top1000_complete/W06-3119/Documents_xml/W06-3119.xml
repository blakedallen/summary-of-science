<PAPER>
  <S sid="0">Syntax Augmented Machine Translation Via Chart Parsing</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We present translation results on the shared task &#8221;Exploiting Parallel Texts for Statistical Machine Translation&#8221; generated by a chart parsing decoder operating on phrase tables augmented and generalized with target language syntactic categories.</S>
    <S sid="2" ssid="2">We use a target language parser to generate parse trees for each sentence on the target side of the bilingual training corpus, matching them with phrase table lattices built for the corresponding source sentence.</S>
    <S sid="3" ssid="3">Considering phrases that correspond to syntactic categories in the parse trees we develop techniques to augment (declare a syntactically motivated category for a phrase pair) and generalize (form mixed terminal and nonterminal phrases) the phrase table into a synchronous bilingual grammar.</S>
    <S sid="4" ssid="4">We present results on the French-to-English task for this workshop, representing significant improvements over the workshop&#8217;s baseline system.</S>
    <S sid="5" ssid="5">Our translation system is available open-source under the GNU General</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">Recent work in machine translation has evolved from the traditional word (Brown et al., 1993) and phrase based (Koehn et al., 2003a) models to include hierarchical phrase models (Chiang, 2005) and bilingual synchronous grammars (Melamed, 2004).</S>
    <S sid="7" ssid="2">These advances are motivated by the desire to integrate richer knowledge sources within the translation process with the explicit goal of producing more fluent translations in the target language.</S>
    <S sid="8" ssid="3">The hierarchical translation operations introduced in these methods call for extensions to the traditional beam decoder (Koehn et al., 2003a).</S>
    <S sid="9" ssid="4">In this work we introduce techniques to generate syntactically motivated generalized phrases and discuss issues in chart parser based decoding in the statistical machine translation environment.</S>
    <S sid="10" ssid="5">(Chiang, 2005) generates synchronous contextfree grammar (SynCFG) rules from an existing phrase translation table.</S>
    <S sid="11" ssid="6">These rules can be viewed as phrase pairs with mixed lexical and non-terminal entries, where non-terminal entries (occurring as pairs in the source and target side) represent placeholders for inserting additional phrases pairs (which again may contain nonterminals) at decoding time.</S>
    <S sid="12" ssid="7">While (Chiang, 2005) uses only two nonterminal symbols in his grammar, we introduce multiple syntactic categories, taking advantage of a target language parser for this information.</S>
    <S sid="13" ssid="8">While (Yamada and Knight, 2002) represent syntactical information in the decoding process through a series of transformation operations, we operate directly at the phrase level.</S>
    <S sid="14" ssid="9">In addition to the benefits that come from a more structured hierarchical rule set, we believe that these restrictions serve as a syntax driven language model that can guide the decoding process, as n-gram context based language models do in traditional decoding.</S>
    <S sid="15" ssid="10">In the following sections, we describe our phrase annotation and generalization process followed by the design and pruning decisions in our chart parser.</S>
    <S sid="16" ssid="11">We give results on the French-English Europarl data and conclude with prospects for future work.</S>
  </SECTION>
  <SECTION title="2 Rule Generation" number="2">
    <S sid="17" ssid="1">We start with phrase translations on the parallel training data using the techniques and implementation described in (Koehn et al., 2003a).</S>
    <S sid="18" ssid="2">This phrase table provides the purely lexical entries in the final hierarchical rule set that will be used in decoding.</S>
    <S sid="19" ssid="3">We then use Charniak&#8217;s parser (Charniak, 2000) to generate the most likely parse tree for each English target sentence in the training corpus.</S>
    <S sid="20" ssid="4">Next, we determine all phrase pairs in the phrase table whose source and target side occur in each respective source and target sentence pair defining the scope of the initial rules in our SynCFG.</S>
    <S sid="21" ssid="5">Annotation If the target side of any of these initial rules correspond to a syntactic category C of the target side parse tree, we label the phrase pair with that syntactic category.</S>
    <S sid="22" ssid="6">This label corresponds to the left-hand side of our synchronous grammar.</S>
    <S sid="23" ssid="7">Phrase pairs that do not correspond to a span in the parse tree are given a default category 'X', and can still play a role in the decoding process.</S>
    <S sid="24" ssid="8">In work done after submission to the 2006 data track, we assign such phrases an extended category of the form C1 + C2, C1/C2, or C2\C1, indicating that the phrase pair&#8217;s target side spans two adjacent syntactic categories (e.g., she went: NP+V), a partial syntactic category C1 missing a C2 to the right (e.g., the great: NP/NN), or a partial C1 missing a C2 to the left (e.g., great wall: DT\NP), respectively.</S>
    <S sid="25" ssid="9">Generalization In order to mitigate the effects of sparse data when working with phrase and ngram models we would like to generate generalized phrases, which include non-terminal symbols that can be filled with other phrases.</S>
    <S sid="26" ssid="10">Therefore, after annotating the initial rules from the current training sentence pair, we adhere to (Chiang, 2005) to recursively generalize each existing rule; however, we abstract on a per-sentence basis.</S>
    <S sid="27" ssid="11">The grammar extracted from this evaluation&#8217;s training data contains 75 nonterminals in our standard system, and 4000 nonterminals in the extended-category system.</S>
    <S sid="28" ssid="12">Figure 1 illustrates the annotation and generalization process.</S>
  </SECTION>
  <SECTION title="3 Scoring" number="3">
    <S sid="29" ssid="1">We employ a log-linear model to assign costs to the SynCFG.</S>
    <S sid="30" ssid="2">Given a source sentence f, the preferred translation output is determined by computing the lowest-cost derivation (combination of hierarchical and glue rules) yielding f as its source side, where the cost of a derivation R1 o &#183; &#183; &#183; o Rn with respective feature vectors v1, ... , vn E Rm is given by Here, &#955;1, ... , &#955;m are the parameters of the loglinear model, which we optimize on a held-out portion of the training set (2005 development data) using minimum-error-rate training (Och, 2003).</S>
    <S sid="31" ssid="3">We use the following features for our rules:</S>
  </SECTION>
  <SECTION title="4 Parsing" number="4">
    <S sid="32" ssid="1">Our SynCFG rules are equivalent to a probabilistic context-free grammar and decoding is therefore an application of chart parsing.</S>
    <S sid="33" ssid="2">Instead of the common method of converting the CFG grammar into Chomsky Normal Form and applying a CKY algorithm to produce the most likely parse for a given source sentence, we avoided the explosion of the rule set caused by the introduction of new non-terminals in the conversion process and implemented a variant of the CKY+ algorithm as described in (J.Earley, 1970).</S>
    <S sid="34" ssid="3">Each cell of the parsing process in (J.Earley, 1970) contains a set of hypergraph nodes (Huang and Chiang, 2005).</S>
    <S sid="35" ssid="4">A hypergraph node is an equivalence class of complete hypotheses (derivations) with identical production results (left-hand sides of the corresponding applied rules).</S>
    <S sid="36" ssid="5">Complete hypotheses point directly to nodes in their backwards star, and the cost of the complete hypothesis is calculated with respect to each back pointer node&#8217;s best cost.</S>
    <S sid="37" ssid="6">This structure affords efficient parsing with minimal pruning (we use a single parameter to restrict the number of hierarchical rules applied), but sacrifices effective management of unique language model states contributing to significant search errors during parsing.</S>
    <S sid="38" ssid="7">At initial submission time we simply re-scored a K-Best list extracted after first best parsing using the lazy retrieval process in (Huang and Chiang, 2005).</S>
    <S sid="39" ssid="8">Post-submission After our workshop submission, we modified the K-Best list extraction process to integrate an n-gram language model during K-Best extraction.</S>
    <S sid="40" ssid="9">Instead of expanding each derivation (complete hypothesis) in a breadth-first fashion, we expand only a single back pointer, and score this new derivation with its translation model scores and a language model cost estimate, consisting of an accurate component, based on the words translated so far, and an estimate based on each remaining (not expanded) back pointer&#8217;s top scoring hypothesis.</S>
    <S sid="41" ssid="10">To improve the diversity of the final K-Best list, we keep track of partially expanded hypotheses that have generated identical target words and refer to the same hypergraph nodes.</S>
    <S sid="42" ssid="11">Any arising twin hypothesis is immediately removed from the K-Best extraction beam during the expansion process.</S>
  </SECTION>
  <SECTION title="5 Results" number="5">
    <S sid="43" ssid="1">We present results that compare our system against the baseline Pharaoh implementation (Koehn et al., 2003a) and MER training scripts provided for this workshop.</S>
    <S sid="44" ssid="2">Our results represent work done before the submission due date as well as after with the following generalized phrase systems. extended-category scheme, but with rules only containing up to 2 nonterminal abstraction sites.</S>
    <S sid="45" ssid="3">We also explored the impact of longer initial phrases by training another phrase table with phrases up to length 12.</S>
    <S sid="46" ssid="4">Our results are presented in Table 1.</S>
    <S sid="47" ssid="5">While our submission time system (Syn using LM for rescoring only) shows no improvement over the baseline, we clearly see the impact of integrating the language model into the K-Best list extraction process.</S>
    <S sid="48" ssid="6">Our final system shows at statistically significant improvement over the baseline (0.78 BLEU points is the 95 confidence level).</S>
    <S sid="49" ssid="7">We also see a trend towards improving translation quality as we employ richer extraction techniques.</S>
    <S sid="50" ssid="8">The relatively poor performance of Lex with LM in K-Best compared to the baseline shows that we are still making search errors during parsing despite tighter integration of the language model.</S>
    <S sid="51" ssid="9">We also ran an experiment with CMU&#8217;s phrasebased decoder (Vogel et al., 2003) using the length7 phrase table.</S>
    <S sid="52" ssid="10">While its development-set score was only 31.01, the decoder achieved 31.42 on the test set, placing it at the same level as our extendedcategory system for that phrase table.</S>
  </SECTION>
  <SECTION title="6 Conclusions" number="6">
    <S sid="53" ssid="1">In this work we applied syntax based resources (the target language parser) to annotate and generalize phrase translation tables extracted via existing phrase extraction techniques.</S>
    <S sid="54" ssid="2">Our work reaffirms the feasibility of parsing approaches to machine translation in a large data setting, and illustrates the impact of adding syntactic categories to drive and constrain the structured search space.</S>
    <S sid="55" ssid="3">While no improvements were available at submission time, our subsequent performance highlights the importance of tight integration of n-gram language modeling within the syntax driven parsing environment.</S>
    <S sid="56" ssid="4">Our translation system is available opensource under the GNU General Public License at: www.cs.cmu.edu/&#732;zollmann/samt</S>
  </SECTION>
</PAPER>
