<PAPER>
  <S sid="0">First-Order Probabilistic Models for Coreference Resolution</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Traditional noun phrase coreference resolution systems represent features only of pairs of noun phrases.</S>
    <S sid="2" ssid="2">In this paper, we propose a machine learning method enables features over noun phrases, resulting in a first-order probabilistic model for coreference.</S>
    <S sid="3" ssid="3">We outline a set of approximations that make this approach practical, and apply our method to the ACE coreference dataset, achieving a 45% error reduction over a comparable method that only considers features of pairs of noun phrases.</S>
    <S sid="4" ssid="4">This result demonstrates an example of how a firstorder logic representation can be incorporated into a probabilistic model and scaled efficiently.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">Noun phrase coreference resolution is the problem of clustering noun phrases into anaphoric sets.</S>
    <S sid="6" ssid="2">A standard machine learning approach is to perform a set of independent binary classifications of the form &#8220;Is mention a coreferent with mention b?&#8221; This approach of decomposing the problem into pairwise decisions presents at least two related difficulties.</S>
    <S sid="7" ssid="3">First, it is not clear how best to convert the set of pairwise classifications into a disjoint clustering of noun phrases.</S>
    <S sid="8" ssid="4">The problem stems from the transitivity constraints of coreference: If a and b are coreferent, and b and c are coreferent, then a and c must be coreferent.</S>
    <S sid="9" ssid="5">This problem has recently been addressed by a number of researchers.</S>
    <S sid="10" ssid="6">A simple approach is to perform the transitive closure of the pairwise decisions.</S>
    <S sid="11" ssid="7">However, as shown in recent work (McCallum and Wellner, 2003; Singla and Domingos, 2005), better performance can be obtained by performing relational inference to directly consider the dependence among a set of predictions.</S>
    <S sid="12" ssid="8">For example, McCallum and Wellner (2005) apply a graph partitioning algorithm on a weighted, undirected graph in which vertices are noun phrases and edges are weighted by the pairwise score between noun phrases.</S>
    <S sid="13" ssid="9">A second and less studied difficulty is that the pairwise decomposition restricts the feature set to evidence about pairs of noun phrases only.</S>
    <S sid="14" ssid="10">This restriction can be detrimental if there exist features of sets of noun phrases that cannot be captured by a combination of pairwise features.</S>
    <S sid="15" ssid="11">As a simple example, consider prohibiting coreferent sets that consist only of pronouns.</S>
    <S sid="16" ssid="12">That is, we would like to require that there be at least one antecedent for a set of pronouns.</S>
    <S sid="17" ssid="13">The pairwise decomposition does not make it possible to capture this constraint.</S>
    <S sid="18" ssid="14">In general, we would like to construct arbitrary features over a cluster of noun phrases using the full expressivity of first-order logic.</S>
    <S sid="19" ssid="15">Enabling this sort of flexible representation within a statistical model has been the subject of a long line of research on first-order probabilistic models (Gaifman, 1964; Halpern, 1990; Paskin, 2002; Poole, 2003; Richardson and Domingos, 2006).</S>
    <S sid="20" ssid="16">Conceptually, a first-order probabilistic model can be described quite compactly.</S>
    <S sid="21" ssid="17">A configuration of the world is represented by a set of prediChoosing the closest preceding phrase is common because nearby phrases are a priori more likely to be coreferent.</S>
    <S sid="22" ssid="18">We refer to the training and inference methods described in this section as the Pairwise Model.</S>
  </SECTION>
  <SECTION title="3 First-Order Logic Model" number="2">
    <S sid="23" ssid="1">where ZX; is a normalizer that sums over the two settings of yj.</S>
    <S sid="24" ssid="2">Note that this model gives us the representational power of recently proposed Markov logic networks (Richardson and Domingos, 2006); that is, we can construct arbitrary formulae in first-order logic to characterize the noun coreference task, and can learn weights for instantiations of these formulae.</S>
    <S sid="25" ssid="3">However, naively grounding the corresponding Markov logic network results in a combinatorial explosion of variables.</S>
    <S sid="26" ssid="4">Below we outline methods to scale training and prediction with this representation.</S>
    <S sid="27" ssid="5">As in the Pairwise Model, we must decide how to sample training examples and how to combine independent classifications at testing time.</S>
    <S sid="28" ssid="6">It is important to note that by moving to the First-Order Logic Model, the number of possible predictions has increased exponentially.</S>
    <S sid="29" ssid="7">In the Pairwise Model, the number of possible y variables is O(|x|2), where x is the set of noun phrases.</S>
    <S sid="30" ssid="8">In the First-Order Logic Model, the number of possible y variables is O(21&amp;quot;l): There is a y variable for each possible element of the powerset of x.</S>
    <S sid="31" ssid="9">Of course, we do not enumerate this set; rather, we incrementally instantiate y variables as needed during prediction.</S>
    <S sid="32" ssid="10">A simple method to generate training examples is to sample positive and negative cluster examples uniformly at random from the training data.</S>
    <S sid="33" ssid="11">Positive examples are generated by first sampling a true cluster, then sampling a subset of that cluster.</S>
    <S sid="34" ssid="12">Negative examples are generated by sampling two positive examples and merging them into the same cluster.</S>
    <S sid="35" ssid="13">At testing time, we perform standard greedy agglomerative clustering, where the score for each merger is proportional to the probability of the newly formed clustering according to the model.</S>
    <S sid="36" ssid="14">Clustering terminates when there exists no additional merge that improves the probability of the clustering.</S>
    <S sid="37" ssid="15">We refer to the system described in this section as First-Order Uniform.</S>
  </SECTION>
  <SECTION title="4 Error-driven and Rank-based training" number="3">
    <S sid="38" ssid="1">In this section we propose two enhancements to the training procedure for the First-Order Uniform model.</S>
    <S sid="39" ssid="2">First, because each training example consists of a subset of noun phrases, the number of possible training examples we can generate is exponential in the number of noun phrases.</S>
    <S sid="40" ssid="3">We propose an errordriven sampling method that generates training examples from errors the model makes on the training data.</S>
    <S sid="41" ssid="4">The algorithm is as follows: Given initial parameters A, perform greedy agglomerative clustering on training document i until an incorrect cluster is formed.</S>
    <S sid="42" ssid="5">Update the parameter vector according to this mistake, then repeat for the next training document.</S>
    <S sid="43" ssid="6">This process is repeated for a fixed number of iterations.</S>
    <S sid="44" ssid="7">Exactly how to update the parameter vector is addressed by the second enhancement.</S>
    <S sid="45" ssid="8">We propose modifying the optimization criterion of training to perform ranking rather than classification of clusters.</S>
    <S sid="46" ssid="9">Consider a training example cluster with a negative label, indicating that not all of the noun phrases it contains are coreferent.</S>
    <S sid="47" ssid="10">A classification training algorithm will &#8220;penalize&#8221; all the features associated with this cluster, since they correspond to a negative example.</S>
    <S sid="48" ssid="11">However, because there may exists subsets of the cluster that are coreferent, features representing these positive subsets may be unjustly penalized.</S>
    <S sid="49" ssid="12">To address this problem, we propose constructing training examples consisting of one negative examWe propose augmenting the Pairwise Model to enable classification decisions over sets of noun phrases.</S>
    <S sid="50" ssid="13">Given a set of noun phrases xj = {xi}, let the binary random variable yj be 1 if all the noun phrases xi E xj are coreferent.</S>
    <S sid="51" ssid="14">The features fk and weights Ak are defined as before, but now the features can represent arbitrary attributes over the entire set xj.</S>
    <S sid="52" ssid="15">This allows us to use the full flexibility of first-order logic to construct features about sets of nouns.</S>
    <S sid="53" ssid="16">The First-Order Logic Model is ple and one &#8220;nearby&#8221; positive example.</S>
    <S sid="54" ssid="17">In particular, when agglomerative clustering incorrectly merges two clusters, we select the resulting cluster as the negative example, and select as the positive example a cluster that can be created by merging other existing clusters.1 We then update the weight vector so that the positive example is assigned a higher score than the negative example.</S>
    <S sid="55" ssid="18">This approach allows the update to only penalize the difference between the two features of examples, thereby not penalizing features representing any overlapping coreferent clusters.</S>
    <S sid="56" ssid="19">To implement this update, we use MIRA (Margin Infused Relaxed Algorithm), a relaxed, online maximum margin training algorithm (Crammer and Singer, 2003).</S>
    <S sid="57" ssid="20">It updates the parameter vector with two constraints: (1) the positive example must have a higher score by a given margin, and (2) the change to A should be minimal.</S>
    <S sid="58" ssid="21">This second constraint is to reduce fluctuations in A.</S>
    <S sid="59" ssid="22">Let s+(A, xj) be the unnormalized score for the positive example and s&#8722;(A,xk) be the unnormalized score of the negative example.</S>
    <S sid="60" ssid="23">Each update solves the following 1Of the possible positive examples, we choose the one with the highest probability under the current model to guard against large fluctuations in parameter updates fc Figure 3: An example noun coreference factor graph for the First-Order Model in which factors f, model the coreference between sets of nouns, and ft enforce the transitivity among related decisions.</S>
    <S sid="61" ssid="24">Here, the additional node y123 indicates whether nouns {x1, x2, x3} are all coreferent.</S>
    <S sid="62" ssid="25">The number of y variables increases exponentially in the number of x variables.</S>
    <S sid="63" ssid="26">In this case, MIRA with a single constraint can be efficiently solved in one iteration of the Hildreth and D&#8217;Esopo method (Censor and Zenios, 1997).</S>
    <S sid="64" ssid="27">Additionally, we average the parameters calculated at each iteration to improve convergence.</S>
    <S sid="65" ssid="28">We refer to the system described in this section as First-Order MIRA.</S>
  </SECTION>
  <SECTION title="5 Probabilistic Interpretation" number="4">
    <S sid="66" ssid="1">In this section, we describe the Pairwise and FirstOrder models in terms of the factor graphs they approximate.</S>
    <S sid="67" ssid="2">For the Pairwise Model, a corresponding undirected graphical model can be defined as where Zx is the input-dependent normalizer and factor fc parameterizes the pairwise noun phrase compatibility as fc(yij, xij) = exp(Ek &#955;kfk(yij, xij)).</S>
    <S sid="68" ssid="3">Factor ft enforces the transitivity constraints by ft(&#183;) = &#8722;oc if transitivity is not satisfied, 1 otherwise.</S>
    <S sid="69" ssid="4">This is similar to the model presented in McCallum and Wellner (2005).</S>
    <S sid="70" ssid="5">A factor graph for the Pairwise Model is presented in Figure 2 for three noun phrases.</S>
    <S sid="71" ssid="6">For the First-Order model, an undirected graphical model can be defined as where Zx is the input-dependent normalizer and factor fc parameterizes the cluster-wise noun phrase compatibility as fc(yj, xj) = exp(Ek &#955;kfk(yj, xj)).</S>
    <S sid="72" ssid="7">Again, factor ft enforces the transitivity constraints by ft(&#183;) = &#8722;oc if transitivity is not satisfied, 1 otherwise.</S>
    <S sid="73" ssid="8">Here, transitivity is a bit more complicated, since it also requires that if yj = 1, then for any subset xk C_ xj, yk = 1.</S>
    <S sid="74" ssid="9">A factor graph for the First-Order Model is presented in Figure 3 for three noun phrases.</S>
    <S sid="75" ssid="10">The methods described in Sections 2, 3 and 4 can be viewed as estimating the parameters of each factor fc independently.</S>
    <S sid="76" ssid="11">This approach can therefore be viewed as a type of piecewise approximation of exact parameter estimation in these models (Sutton and McCallum, 2005).</S>
    <S sid="77" ssid="12">Here, each fc is a &#8220;piece&#8221; of the model trained independently.</S>
    <S sid="78" ssid="13">These pieces are combined at prediction time using clustering algorithms to enforce transitivity.</S>
    <S sid="79" ssid="14">Sutton and McCallum (2005) show that such a piecewise approximation can be theoretically justified as minimizing an upper bound of the exact loss function.</S>
  </SECTION>
  <SECTION title="6 Experiments" number="5">
    <S sid="80" ssid="1">We apply our approach to the noun coreference ACE 2004 data, containing 443 news documents with 28,135 noun phrases to be coreferenced.</S>
    <S sid="81" ssid="2">336 documents are used for training, and the remainder for testing.</S>
    <S sid="82" ssid="3">All entity types are candidates for coreference (pronouns, named entities, and nominal entities).</S>
    <S sid="83" ssid="4">We use the true entity segmentation, and parse each sentence in the corpus using a phrase-structure grammar, as is common for this task.</S>
    <S sid="84" ssid="5">We follow Soon et al. (2001) and Ng and Cardie (2002) to generate most of our features for the Pairwise Model.</S>
    <S sid="85" ssid="6">These include: The First-Order Model includes the following features: &#8226; Enumerate each pair of noun phrases and compute the features listed above.</S>
    <S sid="86" ssid="7">All-X is true if all pairs share a feature X, Most-True-X is true if the majority of pairs share a feature X, and Most-False-X is true if most of the pairs do not share feature X.</S>
    <S sid="87" ssid="8">In addition to the listed features, we also include conjunctions of size 2, for example &#8220;Genders match AND numbers match&#8221;.</S>
    <S sid="88" ssid="9">We use the B3 algorithm to evaluate the predicted coreferent clusters (Amit and Baldwin, 1998).</S>
    <S sid="89" ssid="10">B3 is common in coreference evaluation and is similar to the precision and recall of coreferent links, except that systems are rewarded for singleton clusters.</S>
    <S sid="90" ssid="11">For each noun phrase xi, let ci be the number of mentions in xi&#8217;s predicted cluster that are in fact coreferent with xi (including xi itself).</S>
    <S sid="91" ssid="12">Precision for xi is defined as ci divided by the number of noun phrases in xi&#8217;s cluster.</S>
    <S sid="92" ssid="13">Recall for xi is defined as the ci divided by the number of mentions in the gold standard cluster for xi.</S>
    <S sid="93" ssid="14">F1 is the harmonic mean of recall and precision.</S>
    <S sid="94" ssid="15">In addition to Pairwise, First-Order Uniform, and First-Order MIRA, we also compare against Pairwise MIRA, which differs from First-Order MIRA only by the fact that it is restricted to pairwise features. ence.</S>
    <S sid="95" ssid="16">FIRST-ORDER MIRA is our proposed model that takes advantage of first-order features of the data and is trained with error-driven and rank-based methods.</S>
    <S sid="96" ssid="17">We see that both the first-order features and the training enhancements improve performance consistently. wise Model in F1 measure for both standard training and error-driven training.</S>
    <S sid="97" ssid="18">We attribute some of this improvement to the capability of the First-Order model to capture features of entire clusters that may indicate some phrases are not coreferent.</S>
    <S sid="98" ssid="19">Also, we attribute the gains from error-driven training to the fact that training examples are generated based on errors made on the training data.</S>
    <S sid="99" ssid="20">(However, we should note that there are also small differences in the feature sets used for error-driven and standard training results.)</S>
    <S sid="100" ssid="21">Error analysis indicates that often noun xi is correctly not merged with a cluster xj when xj has a strong internal coherence.</S>
    <S sid="101" ssid="22">For example, if all 5 mentions of France in a document are string identical, then the system will be extremely cautious of merging a noun that is not equivalent to France into xj, since this will turn off the &#8220;All-String-Match&#8221; feature for cluster xj.</S>
    <S sid="102" ssid="23">To our knowledge, the best results on this dataset were obtained by the meta-classification scheme of Ng (2005).</S>
    <S sid="103" ssid="24">Although our train-test splits may differ slightly, the best B-Cubed F1 score reported in Ng (2005) is 69.3%, which is considerably lower than the 79.3% obtained with our method.</S>
    <S sid="104" ssid="25">Also note that the Pairwise baseline obtains results similar to those in Ng and Cardie (2002).</S>
  </SECTION>
  <SECTION title="7 Related Work" number="6">
    <S sid="105" ssid="1">There has been a recent interest in training methods that enable the use of first-order features (Paskin, 2002; Daum&#180;e III and Marcu, 2005b; Richardson and Domingos, 2006).</S>
    <S sid="106" ssid="2">Perhaps the most related is &#8220;learning as search optimization&#8221; (LASO) (Daum&#180;e III and Marcu, 2005b; Daum&#180;e III and Marcu, 2005a).</S>
    <S sid="107" ssid="3">Like the current paper, LASO is also an error-driven training method that integrates prediction and training.</S>
    <S sid="108" ssid="4">However, whereas we explicitly use a ranking-based loss function, LASO uses a binary classification loss function that labels each candidate structure as correct or incorrect.</S>
    <S sid="109" ssid="5">Thus, each LASO training example contains all candidate predictions, whereas our training examples contain only the highest scoring incorrect prediction and the highest scoring correct prediction.</S>
    <S sid="110" ssid="6">Our experiments show the advantages of this ranking-based loss function.</S>
    <S sid="111" ssid="7">Additionally, we provide an empirical study to quantify the effects of different example generation and loss function decisions.</S>
    <S sid="112" ssid="8">Collins and Roark (2004) present an incremental perceptron algorithm for parsing that uses &#8220;early update&#8221; to update the parameters when an error is encountered.</S>
    <S sid="113" ssid="9">Our method uses a similar &#8220;early update&#8221; in that training examples are only generated for the first mistake made during prediction.</S>
    <S sid="114" ssid="10">However, they do not investigate rank-based loss functions.</S>
    <S sid="115" ssid="11">Others have attempted to train global scoring functions using Gibbs sampling (Finkel et al., 2005), message propagation, (Bunescu and Mooney, 2004; Sutton and McCallum, 2004), and integer linear programming (Roth and Yih, 2004).</S>
    <S sid="116" ssid="12">The main distinctions of our approach are that it is simple to implement, not computationally intensive, and adaptable to arbitrary loss functions.</S>
    <S sid="117" ssid="13">There have been a number of machine learning approaches to coreference resolution, traditionally factored into classification decisions over pairs of nouns (Soon et al., 2001; Ng and Cardie, 2002).</S>
    <S sid="118" ssid="14">Nicolae and Nicolae (2006) combine pairwise classification with graph-cut algorithms.</S>
    <S sid="119" ssid="15">Luo et al. (2004) do enable features between mention-cluster pairs, but do not perform the error-driven and ranking enhancements proposed in our work.</S>
    <S sid="120" ssid="16">Denis and Baldridge (2007) use a ranking loss function for pronoun coreference; however the examples are still pairs of pronouns, and the example generation is not error driven.</S>
    <S sid="121" ssid="17">Ng (2005) learns a meta-classifier to choose the best prediction from the output of several coreference systems.</S>
    <S sid="122" ssid="18">While in theory a metaclassifier can flexibly represent features, they do not explore features using the full flexibility of firstorder logic.</S>
    <S sid="123" ssid="19">Also, their method is neither errordriven nor rank-based.</S>
    <S sid="124" ssid="20">McCallum and Wellner (2003) use a conditional random field that factors into a product of pairwise decisions about pairs of nouns.</S>
    <S sid="125" ssid="21">These pairwise decisions are made collectively using relational inference; however, as pointed out in Milch et al. (2004), this model has limited representational power since it does not capture features of entities, only of pairs of mention.</S>
    <S sid="126" ssid="22">Milch et al. (2005) address these issues by constructing a generative probabilistic model, where noun clusters are sampled from a generative process.</S>
    <S sid="127" ssid="23">Our current work has similar representational flexibility as Milch et al. (2005) but is discriminatively trained.</S>
  </SECTION>
  <SECTION title="8 Conclusions and Future Work" number="7">
    <S sid="128" ssid="1">We have presented learning and inference procedures for coreference models using first-order features.</S>
    <S sid="129" ssid="2">By relying on sampling methods at training time and approximate inference methods at testing time, this approach can be made scalable.</S>
    <S sid="130" ssid="3">This results in a coreference model that can capture features over sets of noun phrases, rather than simply pairs of noun phrases.</S>
    <S sid="131" ssid="4">This is an example of a model with extremely flexible representational power, but for which exact inference is intractable.</S>
    <S sid="132" ssid="5">The simple approximations we have described here have enabled this more flexible model to outperform a model that is simplified for tractability.</S>
    <S sid="133" ssid="6">A short-term extension would be to consider features over entire clusterings, such as the number of clusters.</S>
    <S sid="134" ssid="7">This could be incorporated in a ranking scheme, as in Ng (2005).</S>
    <S sid="135" ssid="8">Future work will extend our approach to a wider variety of tasks.</S>
    <S sid="136" ssid="9">The model we have described here is specific to clustering tasks; however a similar formulation could be used to approach a number of language processing tasks, such as parsing and relation extraction.</S>
    <S sid="137" ssid="10">These tasks could benefit from first-order features, and the present work can guide the approximations required in those domains.</S>
    <S sid="138" ssid="11">Additionally, we are investigating more sophisticated inference algorithms that will reduce the greediness of the search procedures described here.</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="8">
    <S sid="139" ssid="1">We thank Robert Hall for helpful contributions.</S>
    <S sid="140" ssid="2">This work was supported in part by the Defense Advanced Research Projects Agency (DARPA), through the Department of the Interior, NBC, Acquisition Services Division, under contract #NBCHD030010, in part by U.S. Government contract #NBCH040171 through a subcontract with BBNT Solutions LLC, in part by The Central Intelligence Agency, the National Security Agency and National Science Foundation under NSF grant #IIS-0326249, in part by Microsoft Live Labs, and in part by the Defense Advanced Research Projects Agency (DARPA) under contract #HR0011-06-C-0023.</S>
    <S sid="141" ssid="3">Any opinions, findings and conclusions or recommendations expressed in this material are the author(s)&#8217; and do not necessarily reflect those of the sponsor.</S>
  </SECTION>
</PAPER>
