<PAPER>
  <S sid="0">Combining Lexical Syntactic And Semantic Features With Maximum Entropy Models For Information Extraction</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Extracting semantic relationships between entities is challenging because of a paucity of annotated data and the errors induced by entity detection modules.</S>
    <S sid="2" ssid="2">We employ Maximum Entropy models to combine diverse lexical, syntactic and semantic features derived from the text.</S>
    <S sid="3" ssid="3">Our system obtained competitive results in the Automatic Content Extraction (ACE) evaluation.</S>
    <S sid="4" ssid="4">Here we present our general approach and describe our ACE results.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">Extraction of semantic relationships between entities can be very useful for applications such as biography extraction and question answering, e.g. to answer queries such as &#8220;Where is the Taj Mahal?&#8221;.</S>
    <S sid="6" ssid="2">Several prior approaches to relation extraction have focused on using syntactic parse trees.</S>
    <S sid="7" ssid="3">For the Template Relations task of MUC-7, BBN researchers (Miller et al., 2000) augmented syntactic parse trees with semantic information corresponding to entities and relations and built generative models for the augmented trees.</S>
    <S sid="8" ssid="4">More recently, (Zelenko et al., 2003) have proposed extracting relations by computing kernel functions between parse trees and (Culotta and Sorensen, 2004) have extended this work to estimate kernel functions between augmented dependency trees.</S>
    <S sid="9" ssid="5">We build Maximum Entropy models for extracting relations that combine diverse lexical, syntactic and semantic features.</S>
    <S sid="10" ssid="6">Our results indicate that using a variety of information sources can result in improved recall and overall F measure.</S>
    <S sid="11" ssid="7">Our approach can easily scale to include more features from a multitude of sources&#8211;e.g.</S>
    <S sid="12" ssid="8">WordNet, gazatteers, output of other semantic taggers etc.&#8211;that can be brought to bear on this task.</S>
    <S sid="13" ssid="9">In this paper, we present our general approach, describe the features we currently use and show the results of our participation in the ACE evaluation.</S>
    <S sid="14" ssid="10">Automatic Content Extraction (ACE, 2004) is an evaluation conducted by NIST to measure Entity Detection and Tracking (EDT) and relation detection and characterization (RDC).</S>
    <S sid="15" ssid="11">The EDT task entails the detection of mentions of entities and chaining them together by identifying their coreference.</S>
    <S sid="16" ssid="12">In ACE vocabulary, entities are objects, mentions are references to them, and relations are explicitly or implicitly stated relationships among entities.</S>
    <S sid="17" ssid="13">Entities can be of five types: persons, organizations, locations, facilities, and geo-political entities (geographically defined regions that define a political boundary, e.g. countries, cities, etc.).</S>
    <S sid="18" ssid="14">Mentions have levels: they can be names, nominal expressions or pronouns.</S>
    <S sid="19" ssid="15">The RDC task detects implicit and explicit relations' between entities identified by the EDT task.</S>
    <S sid="20" ssid="16">Here is an example: The American Medical Association voted yesterday to install the heir apparent as its president-elect, rejecting a strong, upstart challenge by a District doctor who argued that the nation&#8217;s largest physicians&#8217; group needs stronger ethics and new leadership.</S>
    <S sid="21" ssid="17">In electing Thomas R. Reardon, an Oregon general practitioner who had been the chairman of its board, ...</S>
    <S sid="22" ssid="18">In this fragment, all the underlined phrases are mentions referring to the American Medical Association, or to Thomas R. Reardon or the board (an organization) of the American Medical Association.</S>
    <S sid="23" ssid="19">Moreover, there is an explicit management relation between chairman and board, which are references to Thomas R. Reardon and the board of the American Medical Association respectively.</S>
    <S sid="24" ssid="20">Relation extraction is hard, since successful extraction implies correctly detecting both the argument mentions, correctly chaining these mentions to their rein the ACE 2003 evaluation. spective entities, and correctly determining the type of relation that holds between them.</S>
    <S sid="25" ssid="21">This paper focuses on the relation extraction component of our ACE system.</S>
    <S sid="26" ssid="22">The reader is referred to (Florian et al., 2004; Ittycheriah et al., 2003; Luo et al., 2004) for more details of our mention detection and mention chaining modules.</S>
    <S sid="27" ssid="23">In the next section, we describe our extraction system.</S>
    <S sid="28" ssid="24">We present results in section 3, and we conclude after making some general observations in section 4.</S>
  </SECTION>
  <SECTION title="2 Maximum Entropy models for extracting relations" number="2">
    <S sid="29" ssid="1">We built Maximum Entropy models for predicting the type of relation (if any) between every pair of mentions within each sentence.</S>
    <S sid="30" ssid="2">We only model explicit relations, because of poor inter-annotator agreement in the annotation of implicit relations.</S>
    <S sid="31" ssid="3">Table 1 lists the types and subtypes of relations for the ACE RDC task, along with their frequency of occurence in the ACE training data2.</S>
    <S sid="32" ssid="4">Note that only 6 of these 24 relation types are symmetric: &#8220;relative-location&#8221;, &#8220;associate&#8221;, &#8220;other-relative&#8221;, &#8220;other-professional&#8221;, &#8220;sibling&#8221;, and &#8220;spouse&#8221;.</S>
    <S sid="33" ssid="5">We only model the relation subtypes, after making them unique by concatenating the type where appropriate (e.g.</S>
    <S sid="34" ssid="6">&#8220;OTHER&#8221; became &#8220;OTHER-PART&#8221; and &#8220;OTHER-ROLE&#8221;).</S>
    <S sid="35" ssid="7">We explicitly model the argument order of mentions.</S>
    <S sid="36" ssid="8">Thus, when comparing mentions and , we distinguish between the case where -citizen-Of- and -citizen-Of- .</S>
    <S sid="37" ssid="9">We thus model the extraction as a classification problem with 49 classes, two for each relation subtype and a &#8220;NONE&#8221; class for the case where the two mentions are not related.</S>
    <S sid="38" ssid="10">For each pair of mentions, we compute several feature streams shown below.</S>
    <S sid="39" ssid="11">All the syntactic features are derived from the syntactic parse tree and the dependency tree that we compute using a statistical parser trained on the PennTree Bank using the Maximum Entropy framework (Ratnaparkhi, 1999).</S>
    <S sid="40" ssid="12">The feature streams are: Words The words of both the mentions and all the words in between.</S>
    <S sid="41" ssid="13">Entity Type The entity type (one of PERSON, ORGANIZATION, LOCATION, FACILITY, Geo-Political Entity or GPE) of both the mentions.</S>
    <S sid="42" ssid="14">Mention Level The mention level (one of NAME, NOMINAL, PRONOUN) of both the mentions.</S>
    <S sid="43" ssid="15">Overlap The number of words (if any) separating the two mentions, the number of other mentions in between, flags indicating whether the two mentions are in the same noun phrase, verb phrase or prepositional phrase.</S>
    <S sid="44" ssid="16">Dependency The words and part-of-speech and chunk labels of the words on which the mentions are dependent in the dependency tree derived from the syntactic parse tree.</S>
    <S sid="45" ssid="17">Parse Tree The path of non-terminals (removing duplicates) connecting the two mentions in the parse tree, and the path annotated with head words.</S>
    <S sid="46" ssid="18">Here is an example.</S>
    <S sid="47" ssid="19">For the sentence fragment, been the chairman of its board ... the corresponding syntactic parse tree is shown in Figure 1 and the dependency tree is shown in Figure 2.</S>
    <S sid="48" ssid="20">For the pair of mentions chairman and board, the feature streams are shown below.</S>
    <S sid="49" ssid="21">Words , , , .</S>
    <S sid="50" ssid="22">Overlap one-mention-in-between (the word &#8220;its&#8221;), two-words-apart, in-same-noun-phrase.</S>
    <S sid="51" ssid="23">Dependency (word on which is depedent), (POS of word on which is dependent), (chunk label of word on which is dependent), Parse Tree PERSON-NP-PP-ORGANIZATION, PERSON-NP-PP:of-ORGANIZATION (both derived from the path shown in bold in Figure 1).</S>
    <S sid="52" ssid="24">We trained Maximum Entropy models using features derived from the feature streams described above.</S>
  </SECTION>
  <SECTION title="3 Experimental results" number="3">
    <S sid="53" ssid="1">We divided the ACE training data provided by LDC into separate training and development sets.</S>
    <S sid="54" ssid="2">The training set contained around 300K words, and 9752 instances of relations and the development set contained around 46K words, and 1679 instances of relations.</S>
    <S sid="55" ssid="3">We report results in two ways.</S>
    <S sid="56" ssid="4">To isolate the perfomance of relation extraction, we measure the performance of relation extraction models on &#8220;true&#8221; mentions with &#8220;true&#8221; chaining (i.e. as annotated by LDC annotators).</S>
    <S sid="57" ssid="5">We also measured performance of models run on the deficient output of mention detection and mention chaining modules.</S>
    <S sid="58" ssid="6">We report both the F-measure' and the ACE value of relation extraction.</S>
    <S sid="59" ssid="7">The ACE value is a NIST metric that assigns 0% value for a system which produces no output and 100% value for a system that extracts all the relations and produces no false alarms.</S>
    <S sid="60" ssid="8">We count the misses; the true relations not extracted by the system, and the false alarms; the spurious relations extracted by the system, and obtain the ACE value by subtracting from 1.0, the normalized weighted cost of the misses and false alarms.</S>
    <S sid="61" ssid="9">The ACE value counts each relation only once, even if it was expressed many times in a document in different ways.</S>
    <S sid="62" ssid="10">The reader is referred to the ACE web site (ACE, 2004) for more details.</S>
    <S sid="63" ssid="11">We built several models to compare the relative utility of the feature streams described in the previous section.</S>
    <S sid="64" ssid="12">Table 2 shows the results we obtained when running on &#8220;truth&#8221; for the development set and Table 3 shows the results we obtained when running on the output of mention detection and mention chaining modules.</S>
    <S sid="65" ssid="13">Note that a model trained with only words as features obtains a very high precision and a very low recall.</S>
    <S sid="66" ssid="14">For example, for the mention pair his and wife with no words in between, the lexical features together with the fact that there are no words in between is sufficient (though not necessary) to extract the relationship between the two entities.</S>
    <S sid="67" ssid="15">The addition of entity types, mention levels and especially, the word proximity features (&#8220;overlap&#8221;) boosts the recall at the expense of the very sets with true (T) and system output (S) mentions and entities. high precision.</S>
    <S sid="68" ssid="16">Adding the parse tree and dependency tree based features gives us our best result by exploiting the consistent syntactic patterns exhibited between mentions for some relations.</S>
    <S sid="69" ssid="17">Note that the trends of contributions from different feature streams is consistent for the &#8220;truth&#8221; and system output runs.</S>
    <S sid="70" ssid="18">As expected, the numbers are significantly lower for the system output runs due to errors made by the mention detection and mention chaining modules.</S>
    <S sid="71" ssid="19">We ran the best model on the official ACE Feb&#8217;2002 and ACE Sept&#8217;2003 evaluation sets.</S>
    <S sid="72" ssid="20">We obtained competitive results shown in Table 4.</S>
    <S sid="73" ssid="21">The rules of the ACE evaluation prohibit us from disclosing our final ranking and the results of other participants.</S>
  </SECTION>
  <SECTION title="4 Discussion" number="4">
    <S sid="74" ssid="1">We have presented a statistical approach for extracting relations where we combine diverse lexical, syntactic, and semantic features.</S>
    <S sid="75" ssid="2">We obtained competitive results on the ACE RDC task.</S>
    <S sid="76" ssid="3">Several previous relation extraction systems have focused almost exclusively on syntactic parse trees.</S>
    <S sid="77" ssid="4">We believe our approach of combining many kinds of evidence can potentially scale better to problems (like ACE), where we have a lot of relation types with relatively small amounts of annotated data.</S>
    <S sid="78" ssid="5">Our system certainly benefits from features derived from parse trees, but it is not inextricably linked to them.</S>
    <S sid="79" ssid="6">Even using very simple lexical features, we obtained high precision extractors that can potentially be used to annotate large amounts of unlabeled data for semi-supervised or unsupervised learning, without having to parse the entire data.</S>
    <S sid="80" ssid="7">We obtained our best results when we combined a variety of features.</S>
  </SECTION>
  <SECTION title="Acknowledgements" number="5">
    <S sid="81" ssid="1">We thank Salim Roukos for several invaluable suggestions and the entire ACE team at IBM for help with various components, feature suggestions and guidance.</S>
  </SECTION>
</PAPER>
