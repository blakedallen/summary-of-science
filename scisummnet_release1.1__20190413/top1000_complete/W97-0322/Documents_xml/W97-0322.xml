<PAPER>
  <S sid="0">Distinguishing Word Senses In Untagged Text</S>
  <ABSTRACT>
    <S sid="1" ssid="1">This paper describes an experimental comparison of three unsupervised learning algorithms that distinguish the sense of an ambiguous word in untagged text.</S>
    <S sid="2" ssid="2">The methods described in this paper, McQuitty's similarity analysis, Ward's minimum&#8212;variance method, and the EM algorithm, assign each instance of an ambiguous word to a known sense definition based solely on the values of automatically identifiable features in text.</S>
    <S sid="3" ssid="3">These methods and feature sets are found to be more successful in disambiguating nouns rather than adjectives or verbs.</S>
    <S sid="4" ssid="4">Overall, the most accurate of these procedures is McQuitty's similarity analysis in combination with a high dimensional feature set.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">Statistical methods for natural language processing are often dependent on the availability of costly knowledge sources such as manually annotated text or semantic networks.</S>
    <S sid="6" ssid="2">This limits the applicability of such approaches to domains where this hard to acquire knowledge is already available.</S>
    <S sid="7" ssid="3">This paper presents three unsupervised learning algorithms that are able to distinguish among the known senses (i.e., as defined in some dictionary) of a word, based only on features that can be automatically extracted from untagged text.</S>
    <S sid="8" ssid="4">The object of unsupervised learning is to determine the class membership of each observation (i.e. each object to be classified), in a sample without using training examples of correct classifications.</S>
    <S sid="9" ssid="5">We discuss three algorithms, McQuitty's similarity analysis (McQuitty, 1966), Ward's minimum&#8212;variance method (Ward, 1963) and the EM algorithm (Dempster, Laird, and Rubin, 1977), that can be used to distinguish among the known senses of an ambiguous word without the aid of disambiguated examples.</S>
    <S sid="10" ssid="6">The EM algorithm produces maximum likelihood estimates of the parameters of a probabilistic model, where that model has been specified in advance.</S>
    <S sid="11" ssid="7">Both Ward's and McQuitty's methods are agglomerative clustering algorithms that form classes of unlabeled observations that minimize their respective distance measures between class members.</S>
    <S sid="12" ssid="8">The rest of this paper is organized as follows.</S>
    <S sid="13" ssid="9">First, we present introductions to Ward's and McQuitty's methods (Section 2) and the EM algorithm (Section 3).</S>
    <S sid="14" ssid="10">We discuss the thirteen words (Section 4) and the three feature sets (Section 5) used in our experiments.</S>
    <S sid="15" ssid="11">We present our experimental results (Section 6) and close with a discussion of related work (Section 7).</S>
  </SECTION>
  <SECTION title="2 Agglomerative Clustering" number="2">
    <S sid="16" ssid="1">In general, clustering methods rely on the assumption that classes occupy distinct regions in the feature space.</S>
    <S sid="17" ssid="2">The distance between two points in a multi&#8212;dimensional space can be measured using any of a wide variety of metrics (see, e.g.</S>
    <S sid="18" ssid="3">(Devijver and Kittler, 1982)).</S>
    <S sid="19" ssid="4">Observations are grouped in the manner that minimizes the distance between the members of each class.</S>
    <S sid="20" ssid="5">Ward's and McQuitty's method are agglomerative clustering algorithms that differ primarily in how they compute the distance between clusters.</S>
    <S sid="21" ssid="6">All such algorithms begin by placing each observation in a unique cluster, i.e. a cluster of one.</S>
    <S sid="22" ssid="7">The two closest clusters are merged to form a new cluster that replaces the two merged clusters.</S>
    <S sid="23" ssid="8">Merging of the two closest clusters continues until only some specified number of clusters remain.</S>
    <S sid="24" ssid="9">However, our data does not immediately lend itself to a distance&#8212;based interpretation.</S>
    <S sid="25" ssid="10">Our features represent part&#8212;of&#8212;speech (POS) tags, morphological characteristics, and word co-occurrence; such features are nominal and their values do not have scale.</S>
    <S sid="26" ssid="11">Given a POS feature, for example, we could choose noun = 1, verb = 2, adjective = 3, and adverb = 4.</S>
    <S sid="27" ssid="12">That adverb is represented by a larger number than noun is purely coincidental and implies nothing about the relationship between nouns and adverbs.</S>
    <S sid="28" ssid="13">Thus, before we employ either clustering algorithm, we represent our data sample in terms of a dissimilarity matrix.</S>
    <S sid="29" ssid="14">Suppose that we have N observations in a sample where each observation has q features.</S>
    <S sid="30" ssid="15">This data is represented in a N xN dissimilarity matrix such that the value in cell (i, j), where i represents the row number and j represents the column, is equal to the number of features in observations i and j that do not match.</S>
    <S sid="31" ssid="16">For example, in Figure 1 we have four observations.</S>
    <S sid="32" ssid="17">We record the values of three nominal features for each observation.</S>
    <S sid="33" ssid="18">This sample can be represented by the 4 x 4 dissimilarity matrix shown in Figure 2.</S>
    <S sid="34" ssid="19">In the dissimilarity matrix, cells (1,2) and (2,1) have the value 2, indicating that the first and second observations in Figure 1 have different values for two of the three features.</S>
    <S sid="35" ssid="20">A value of 0 indicates that observations i and j are identical.</S>
    <S sid="36" ssid="21">When clustering our data, each observation is represented by its corresponding row (or column) in the dissimilarity matrix.</S>
    <S sid="37" ssid="22">Using this representation, observations that fall close together in feature space are likely to belong to the same class and are grouped together into clusters.</S>
    <S sid="38" ssid="23">In this paper, we use Ward's and McQuitty's methods to form clusters of observations, where each observation is represented by a row in a dissimilarity matrix.</S>
    <S sid="39" ssid="24">In Ward's method, the internal variance of a cluster is the sum of squared distances between each observation in the cluster and the mean observation for that cluster (i.e., the average of all the observations in the cluster).</S>
    <S sid="40" ssid="25">At each step in Ward's method, a new cluster, CKL, with the smallest possible internal variance, is created by merging the two clusters, CK and CL, that have the minimum variance between them.</S>
    <S sid="41" ssid="26">The variance between CK and CL is computed as follows: where TK is the mean observation for cluster CK) NK is the number of observations in CK, and Tr, and NL are defined similarly for CL.</S>
    <S sid="42" ssid="27">Implicit in Ward's method is the assumption that the sample comes from a mixture of normal distributions.</S>
    <S sid="43" ssid="28">While NLP data is typically not well characterized by a normal distribution (see, e.g.</S>
    <S sid="44" ssid="29">(Zipf, 1935), (Pedersen, Kayaalp, and Bruce, 1996)), there is evidence that our data, when represented by a dissimilarity matrix, can be adequately characterized by a normal distribution.</S>
    <S sid="45" ssid="30">However, we will continue to investigate the appropriateness of this assumption.</S>
    <S sid="46" ssid="31">In McQuitty's method, clusters are based on a simple averaging of the feature mismatch counts found in the dissimilarity matrix.</S>
    <S sid="47" ssid="32">At each step in McQuitty's method, a new cluster, CKL, is formed by merging the clusters CK and CL that have the fewest number of dissimilar features between them.</S>
    <S sid="48" ssid="33">The clusters to be merged, CK and CL, are identified by finding the cell (1,k) (or (k,1)), where k 1, that has the minimum value in the dissimilarity matrix.</S>
    <S sid="49" ssid="34">Once the new cluster CKL is created, the dissimilarity matrix is updated to reflect the number of dissimilar features between CKL and all other existing clusters.</S>
    <S sid="50" ssid="35">The dissimilarity between any existing cluster Cr and CKL is computed as: where DKI is the number of dissimilar features between clusters CK and C1 and DLI is similarly defined for clusters CL and C1.</S>
    <S sid="51" ssid="36">This is simply the average number of mismatches between each component of the new cluster and the existing cluster.</S>
    <S sid="52" ssid="37">Unlike Ward's method, McQuitty's method makes no assumptions concerning the distribution of the data sample.</S>
  </SECTION>
  <SECTION title="3 EM Algorithm" number="3">
    <S sid="53" ssid="1">The expectation maximization algorithm (Dempster, Laird, and Rubin, 1977), commonly known as the EM algorithm, is an iterative estimation procedure in which a problem with missing data is recast to make use of complete data estimation techniques.</S>
    <S sid="54" ssid="2">In our work, the sense of an ambiguous word is represented by a feature whose value is missing.</S>
    <S sid="55" ssid="3">In order to use the EM algorithm, the parametric form of the model representing the data must be known.</S>
    <S sid="56" ssid="4">In these experiments, we assume that the model form is the Naive Bayes (Duda and Hart, 1973).</S>
    <S sid="57" ssid="5">In this model, all features are conditionally independent given the value of the classification feature, i.e., the sense of the ambiguous word.</S>
    <S sid="58" ssid="6">This assumption is based on the success of the Naive Bayes model when applied to supervised word&#8212;sense disambiguation (e.g.</S>
    <S sid="59" ssid="7">(Gale, Church, and Yarowsky, 1992), (Leacock, Towel!, and Voorhees, 1993), (Mooney, 1996), (Pedersen, Bruce, and Wiebe, 1997), (Pedersen and Bruce, 1997a)).</S>
    <S sid="60" ssid="8">There are two potential problems when using the EM algorithm.</S>
    <S sid="61" ssid="9">First, it is computationally expensive and convergence can be slow for problems with large numbers of model parameters.</S>
    <S sid="62" ssid="10">Unfortunately there is little to be done in this case other than reducing the dimensionality of the problem so that fewer parameters are estimated.</S>
    <S sid="63" ssid="11">Second, if the likelihood function is very irregular it may always converge to a local maxima and not find the global maximum.</S>
    <S sid="64" ssid="12">In this case, an alternative is to use the more computationally expensive method of Gibbs Sampling (Geman and Geman, 1984).</S>
    <S sid="65" ssid="13">At the heart of the EM Algorithm lies the Qfunction.</S>
    <S sid="66" ssid="14">This is the expected value of the loglikelihood function for the complete data D = (Y, 8), where Y is the observed data and S is the missing sense value: Here, C is the current value of the maximum likelihood estimates of the model parameters and 02 is the improved estimate that we are seeking; p(Y, 510i) is the likelihood of observing the complete data given the improved estimate of the model parameters.</S>
    <S sid="67" ssid="15">When approximating the maximum of the likelihood function, the EM algorithm starts from a randomly generated initial estimate of C and then replaces 0 by the 0i which maximizes Q(0110).</S>
    <S sid="68" ssid="16">This process is broken down into two steps: expectation (the E-step), and maximization (the M-step).</S>
    <S sid="69" ssid="17">The E-step finds the expected values of the sufficient statistics of the complete model using the current estimates of the model parameters.</S>
    <S sid="70" ssid="18">The M-step makes maximum likelihood estimates of the model parameters using the sufficient statistics from the E-step.</S>
    <S sid="71" ssid="19">These, steps iterate until the parameter estimates 0 and 0i converge.</S>
    <S sid="72" ssid="20">The M-step is usually easy, assuming it is easy for the complete data problem; the E-step is not necessarily so.</S>
    <S sid="73" ssid="21">However, for decomposable models, such as the Naive Bayes, the E-step simplifies to the calculation of the expected counts in the marginal distributions of interdependent features, where the expectation is with respect to 0.</S>
    <S sid="74" ssid="22">The M-step simplifies to the calculation of new parameter estimates from these counts.</S>
    <S sid="75" ssid="23">Further, these expected counts can be calculated by multiplying the sample size N by the probability of the complete data within each marginal distribution given 0 and the observed data within each marginal Yrn.</S>
    <S sid="76" ssid="24">This simplifies to: where count i is the current estimate of the expected count and P(Sm1Y,n) is formulated using 0.</S>
    <S sid="77" ssid="25">For the Naive Bayes model with 3 observable features A, B, C and an unobservable classification feature 5, where 0 = {P(a, s), P(b, s), P(c, s), P(s)} , the E and M-steps are: where s, a, b, and c denote specific values of S, A, B, and C respectively, and P(s1b) and P(s1c) are defined analogously to P(sla).</S>
  </SECTION>
  <SECTION title="4 Experimental Procedure" number="4">
    <S sid="78" ssid="1">Experiments were conducted to disambiguate 13 different words using 3 different feature sets.</S>
    <S sid="79" ssid="2">In these experiments, each of the 3 unsupervised disambiguation methods is applied to each of the 13 words using each of the 3 feature sets; this defines a total of 117 different experiments.</S>
    <S sid="80" ssid="3">In addition, each experiment was repeated 25 times in order to study the variance introduced by randomly selecting initial parameter estimates, in the case of the EM algorithm, and randomly selecting among equally distant groups when clustering using Ward's and McQuitty's methods.</S>
    <S sid="81" ssid="4">In order to evaluate the unsupervised learning algorithms we use sense&#8212;tagged text in these experiments.</S>
    <S sid="82" ssid="5">However, this text is only used to evaluate the accuracy of our methods.</S>
    <S sid="83" ssid="6">The classes discovered by the unsupervised learning algorithms are mapped to dictionary senses in a manner that maximizes their agreement with the sense&#8212;tagged text.</S>
    <S sid="84" ssid="7">If the sense&#8212;tagged text were not available, as would often be the case in an unsupervised experiment, this mapping would have to be performed manually.</S>
    <S sid="85" ssid="8">The words disambiguated and their sense distributions are shown in Figure 3.</S>
    <S sid="86" ssid="9">All data, with the exception of the data for line, come from the ACL/DCI Wall Street Journal corpus (Marcus, Santorini, and Marcinkiewicz, 1993).</S>
    <S sid="87" ssid="10">With the exception of line, each ambiguous word is tagged with a single sense defined in the Longman Dictionary of Contemporary English (LDOCE) (Procter, 1978).</S>
    <S sid="88" ssid="11">The data for the 12 words tagged using LDOCE senses are described in more detail in (Bruce, Wiebe, and Pedersen, 1996).</S>
    <S sid="89" ssid="12">The line data comes from both the ACL/DCI WSJ corpus and the American Printing House for the Blind corpus.</S>
    <S sid="90" ssid="13">Each occurrence of line is tagged with a single sense defined in WordNet (Miller, 1995).</S>
    <S sid="91" ssid="14">This data is described in more detail in (Leacock, Towell, and Voorhees, 1993).</S>
    <S sid="92" ssid="15">Every experiment utilizes all of the sentences available for each word.</S>
    <S sid="93" ssid="16">The number of sentences available per word is shown as &amp;quot;total count&amp;quot; in Figure 3.</S>
    <S sid="94" ssid="17">We have reduced the sense inventory of these words so that only the two or three most frequent senses are included in the text being disambiguated.</S>
    <S sid="95" ssid="18">For several of the words, there are minority senses that form a very small percentage (i.e., &lt; 5%) of the total sample.</S>
    <S sid="96" ssid="19">Such minority classes are not yet well handled by unsupervised techniques; therefore we do not consider them in this study.</S>
  </SECTION>
  <SECTION title="5 Feature Sets" number="5">
    <S sid="97" ssid="1">We define three different feature sets for use in these experiments.</S>
    <S sid="98" ssid="2">Our objective is to evaluate the effect that different types of features have on the accuracy of unsupervised learning algorithms such as those discussed here.</S>
    <S sid="99" ssid="3">We are particularly interested in the impact of the overall dimensionality of the feature space, and in determining how indicative different feature types are of word senses.</S>
    <S sid="100" ssid="4">Our feature sets are composed of various combinations of the following five types of features.</S>
    <S sid="101" ssid="5">Morphology The feature M represents the morphology of the ambiguous word.</S>
    <S sid="102" ssid="6">For nouns, M is binary indicating singular or plural.</S>
    <S sid="103" ssid="7">For verbs, the value of M indicates the tense of the verb and can have up to 7 possible values.</S>
    <S sid="104" ssid="8">This feature is not used for adjectives.</S>
    <S sid="105" ssid="9">Adjective Senses chief (total count: 1048) highest in rank: 86% most important; main: 14% common: (total count: 1060) 84% as in the phrase 'common stock': belonging to or shared by 2 or more: 8% happening often; usual: 8% last: (total count: 3004) 94% on the occasion nearest in the past: after all others: 6% public: (total count: 715) 68% concerning people in general: concerning the government and people: 19% not secret or private: 13% Noun Senses bill: (total count: 1341) 68% a proposed law under consideration: a piece of paper money or treasury bill: 22% a list of things bought and their price: 10% concern: (total count: 1235) 64% a business; firm: worry; anxiety: 36% drug: (total count: 1127) 57% a medicine; used to make medicine: a habit-forming substance: 43% interest: (total count: 2113) 59% money paid for the use of money: a share in a company or business: 24% readiness to give attention: 17% line: (total count: 1149) 37% a wire connecting telephones: a cord; cable: 32% an orderly series: 30% Verb Senses agree: (total count: 1109) 74% to concede after disagreement: to share the same opinion: 26% close: (total count: 1354) 77% to (cause to) end: to (cause to) stop operation: 23% help: (total count: 1267) 78% to enhance - inanimate object: to assist - human object: 22% include: (total count: 1526) 91% to contain in addition to other parts: to be a part of- human subject: 9% Part&#8212;of&#8212;Speech Features of the form P Li represent the part&#8212;of&#8212;speech (POS) of the word i positions to the left of the ambiguous word.</S>
    <S sid="106" ssid="10">PR, represents the POS of the word i positions to the right.</S>
    <S sid="107" ssid="11">In these experiments, we used 4 POS features, PLi PL2, PRI, and PR2 to record the POS of the words 1 and 2 positions to the left and right of the ambiguous word.</S>
    <S sid="108" ssid="12">Each POS feature can have one of 5 possible values: noun, verb, adjective, adverb or other.</S>
    <S sid="109" ssid="13">Co&#8212;occurrences Features of the form Ci are binary co-occurrence features.</S>
    <S sid="110" ssid="14">They indicate the presences or absences of a particular content word in the same sentence as the ambiguous word.</S>
    <S sid="111" ssid="15">We use 3 binary co-occurrence features, C1, C2 and C3 to represent the presences or absences of each of the three most frequent content words, C1 being the most frequent content word, C2 the second most frequent and C3 the third.</S>
    <S sid="112" ssid="16">Only sentences containing the ambiguous word were used to establish word frequencies.</S>
    <S sid="113" ssid="17">Frequency based features like this one contain little information about low frequency classes.</S>
    <S sid="114" ssid="18">For words with skewed sense distribution, it is likely that the most frequent content words will be associated only with the dominate sense.</S>
    <S sid="115" ssid="19">As an example, consider the 3 most frequent content words occurring in the sentences that contain chief officer, executive and president.</S>
    <S sid="116" ssid="20">Chief has a majority class distribution of 86% and, not surprisingly, these three content words are all indicative of the dominate sense which is &amp;quot;highest in rank&amp;quot;.</S>
    <S sid="117" ssid="21">The set of content words used in formulating the co&#8212;occurrence features are shown in Figure 4.</S>
    <S sid="118" ssid="22">Note that million and company occur frequently.</S>
    <S sid="119" ssid="23">These are not likely to be indicative of a particular sense but more reflect the general nature of the Wall Street Journal corpus.</S>
    <S sid="120" ssid="24">Unrestricted Collocations Features of the form UL; and URi indicate the word occurring in the position i places to the left or right, respectively, of the ambiguous word.</S>
    <S sid="121" ssid="25">All features of this form have 21 possible values.</S>
    <S sid="122" ssid="26">Nineteen correspond to the 19 most frequent words that occur in that fixed position in all of the sentences that contain the particular ambiguous word.</S>
    <S sid="123" ssid="27">There is also a value, (none), that indicates when the position i to the left or right is occupied by a word that is not among the 19 most frequent, and a value, (null), indicating that the position i to the left or right falls outside of the sentence boundary.</S>
    <S sid="124" ssid="28">In these experiments we use 4 unrestricted collocation features, UL2, ULi, URI, and UR2.</S>
    <S sid="125" ssid="29">As an example, the values of these features for concern are as follows: Content Collocations Features of the form CLi and CR1 indicate the content word occurring in the position 1 place to the left or right, respectively, of the ambiguous word.</S>
    <S sid="126" ssid="30">The values of these features are defined much like the unrestricted collocations above, except that these are restricted to the 19 most frequent content words that occur only one position to the left or right of the ambiguous word.</S>
    <S sid="127" ssid="31">To contrast this set of features with the unrestricted collocations, consider concern again.</S>
    <S sid="128" ssid="32">The values of the features representing the 19 most frequent content words 1 position to the left and right are as follows: Feature Sets A, B and C The 3 feature sets used in these experiments are designated A, B and C and are formulated as follows: The dimensionality is the number of possible combinations of feature values and thus the size of the feature space.</S>
    <S sid="129" ssid="33">These values vary since the number of possible values for M varies with the part&#8212;of&#8212;speech of the ambiguous word.</S>
    <S sid="130" ssid="34">The lower number is associated with adjectives and the higher with verbs.</S>
    <S sid="131" ssid="35">To get a feeling for the adequacy of these feature sets, we performed supervised learning experiments with the interest data using the Naive Bayes model.</S>
    <S sid="132" ssid="36">We disambiguated 3 senses using a 10:1 training&#8212;to&#8212; test ratio.</S>
    <S sid="133" ssid="37">The average accuracies for each feature set over 100 random trials were as follows: A 80.9%, B 87.7%, and C 82.7%.</S>
    <S sid="134" ssid="38">The window size, the number of values for the POS features, and the number of words considered in the collocation features are kept deliberately small in order to control the dimensionality of the problem.</S>
    <S sid="135" ssid="39">In future work, we will expand all of the above types of features and employ techniques to reduce dimensionality along the lines suggested in (Duda and Hart, 1973) and (Gale, Church, and Yarowsky, 1995).</S>
  </SECTION>
  <SECTION title="6 Experimental Results" number="6">
    <S sid="136" ssid="1">Figure 5 shows the average accuracy and standard deviation of disambiguation over 25 random trials for each combination of word, feature set and learning algorithm.</S>
    <S sid="137" ssid="2">Those cases where the average accuracy of one algorithm for a particular feature set is significantly higher than another algorithm, as judged by the t-test (p=.01), are shown in bold face.</S>
    <S sid="138" ssid="3">For each word, the most accurate overall experiment (i.e., algorithm/feature set combination), and those that are not significantly less accurate are underlined.</S>
    <S sid="139" ssid="4">Also included in Figure 5 is the percentage of each sample that is composed of the majority sense.</S>
    <S sid="140" ssid="5">This is the accuracy that can be obtained by a majority classifier; a simple classifier that assigns each ambiguous word to the most frequent sense in a sample.</S>
    <S sid="141" ssid="6">However, bear in mind that in unsupervised experiments the distribution of senses is not generally known.</S>
    <S sid="142" ssid="7">Perhaps the most striking aspect of these results is that, across all experiments, only the nouns are disambiguated with accuracy greater than that of the majority classifier.</S>
    <S sid="143" ssid="8">This is at least partially explained by the fact that, as a class, the nouns have the most uniform distribution of senses.</S>
    <S sid="144" ssid="9">This point will be elaborated on in Section 6.1.</S>
    <S sid="145" ssid="10">While the choice of feature set impacts accuracy, overall it is only to a small degree.</S>
    <S sid="146" ssid="11">We return to this point in Section 6.2.</S>
    <S sid="147" ssid="12">The final result, to be discussed in Section 6.3, is that the differences in the accuracy of these three algorithms are statistically significant both on average and for individual words.</S>
    <S sid="148" ssid="13">Extremely skewed distributions pose a challenging learning problem since the sample contains precious little information regarding minority classes.</S>
    <S sid="149" ssid="14">This makes it difficult to learn their distributions without prior knowledge.</S>
    <S sid="150" ssid="15">For unsupervised approaches, this problem is exacerbated by the difficultly in distinguishing the characteristics of the minority classes from noise.</S>
    <S sid="151" ssid="16">In this study, the accuracy of the unsupervised algorithms was less than that of the majority classifier in every case where the percentage of the majority sense exceeded 68%.</S>
    <S sid="152" ssid="17">However, in the cases where the performance of these algorithms was less than that of the majority classifier, they were often still providing high accuracy disambiguation (e.g., 91% accuracy for last).</S>
    <S sid="153" ssid="18">Clearly, the distribution of classes is not the only factor affecting disambiguation accuracy; compare the performance of these algorithms on bill and public which have roughly the same class distributions.</S>
    <S sid="154" ssid="19">It is difficult to quantify the effect of the distribution of classes on a learning algorithm particularly when using naturally occurring data.</S>
    <S sid="155" ssid="20">In previous unsupervised experiments with interest, using a modified version of Feature Set A, we were able to achieve an increase of 36 percentage points over the accuracy of the majority classifier when the 3 classes were evenly distributed in the sample (Pedersen and Bruce, 1997b).</S>
    <S sid="156" ssid="21">Here, our best performance using a larger sample with a natural distribution of senses is only an increase of 20 percentage points over the accuracy of the majority classifier.</S>
    <S sid="157" ssid="22">Because skewed distributions are common in lexical work (Zipf, 1935), they are an important consideration in formulating disambiguation experiments.</S>
    <S sid="158" ssid="23">In future work, we will investigate procedures for feature selection that are more sensitive to minority classes.</S>
    <S sid="159" ssid="24">Reliance on frequency based features, as used in this work, means that the more skewed the sample is, the more likely it is that the features will be indicative of only the majority class.</S>
    <S sid="160" ssid="25">Despite varying the feature sets, the relative accuracy of the three algorithms remains rather consistent.</S>
    <S sid="161" ssid="26">For 6 of the 13 words there was a single algorithm that was always significantly more accurate than the other two across all features.</S>
    <S sid="162" ssid="27">The EM algorithm was most accurate for last and line with all three feature sets.</S>
    <S sid="163" ssid="28">McQuitty's method was significantly more accurate for chief, common, public, and help regardless of the feature set.</S>
    <S sid="164" ssid="29">Despite this consistency, there were some observable trends associated with changes in feature set.</S>
    <S sid="165" ssid="30">For example, McQuitty's method was significantly more accurate overall in combination with feature set C while the EM algorithm was more accurate with Feature Set A, and the accuracy of Ward's method was the least favorable with Feature Set B.</S>
    <S sid="166" ssid="31">For the nouns, there was no significant difference between Feature Sets A and B when using the EM algorithm.</S>
    <S sid="167" ssid="32">For the verbs there was no significant difference between the three feature sets when using McQuitty's method.</S>
    <S sid="168" ssid="33">The adjectives were significantly more accurate when using McQuitty's method and Feature Set C. One possible explanation for the consistency of results as feature sets varied is that perhaps the features most indicative of word senses are included in all the sets due to the selection methods and the commonality of feature types.</S>
    <S sid="169" ssid="34">These common features may be sufficient for the level of disambiguation achieved here.</S>
    <S sid="170" ssid="35">This explanation seems more plausible for the EM algorithm, where features are weighted, but less so for McQuitty's and Ward's which use a representation that does not allow feature weighting.</S>
    <S sid="171" ssid="36">Based on the average accuracy over part&#8212;of&#8212;speech categories, the EM algorithm performs with the highest accuracy for nouns while McQuitty's method performs most accurately for verbs and adjectives.</S>
    <S sid="172" ssid="37">This is true regardless of the feature set employed.</S>
    <S sid="173" ssid="38">The standard deviations give an indication of the effect of ties on the clustering algorithms and the effect of the random initialization on the the EM algorithm.</S>
    <S sid="174" ssid="39">In few cases is the standard deviation very small.</S>
    <S sid="175" ssid="40">For the clustering algorithms, a high standard deviation indicates that ties are having some effect on the cluster analysis.</S>
    <S sid="176" ssid="41">This is undesirable and may point to a need to expand the feature set in order to reduce ties.</S>
    <S sid="177" ssid="42">For the EM algorithm, a high standard deviation means that the algorithm is not settling on any particular maxima.</S>
    <S sid="178" ssid="43">Results may become more consistent if the number of parameters that must be estimated was reduced.</S>
    <S sid="179" ssid="44">Figures 6, 7 and 8 show the confusion matrices associated with the disambiguation of concern, inleresi, and help, using Feature Sets A, B, and C, respectively.</S>
    <S sid="180" ssid="45">A confusion matrix shows the number of cases where the sense discovered by the algorithm agrees with the manually assigned sense along the main diagonal; disagreements are shown in the rest of the matrix.</S>
    <S sid="181" ssid="46">In general, these matrices reveal that both the EM algorithm and Ward's method are more biased toward balanced distributions of senses than is McQuitty's method.</S>
    <S sid="182" ssid="47">This may explain the better performance of McQuitty's method in disambiguating those words with the most skewed sense distributions, the adjectives and adverbs.</S>
    <S sid="183" ssid="48">It is possible to adjust the EM algorithm away from this tendency towards discovering balanced distributions by providing prior knowledge of the expected sense distribution.</S>
    <S sid="184" ssid="49">This will be explored in future work.</S>
  </SECTION>
  <SECTION title="7 Related Work" number="7">
    <S sid="185" ssid="1">Bruce, 1997a)).</S>
    <S sid="186" ssid="2">However, all of these methods require that manually sense tagged text be available to train the algorithm.</S>
    <S sid="187" ssid="3">For most domains such text is not available and is expensive to create.</S>
    <S sid="188" ssid="4">It seems more reasonable to assume that such text will not Bootstrapping approaches require a small amount of disambiguated text in order to initialize the unsupervised learning algorithm.</S>
    <S sid="189" ssid="5">An early example of such an approach is described in (Hearst, 1991).</S>
    <S sid="190" ssid="6">A supervised learning algorithm is trained with a small amount of manually sense tagged text and applied to a held out test set.</S>
    <S sid="191" ssid="7">Those examples in the test set that are most confidently disambiguated are added to the training sample.</S>
    <S sid="192" ssid="8">A more recent bootstrapping approach is described in (Yarowsky, 1995).</S>
    <S sid="193" ssid="9">This algorithm requires a small number of training examples to serve as a seed.</S>
    <S sid="194" ssid="10">There are a variety of options discussed for automatically selecting seeds; one is to identify collocations that uniquely distinguish between senses.</S>
    <S sid="195" ssid="11">For plant, the collocations manufacturing plant and living plant make such a distinction.</S>
    <S sid="196" ssid="12">Based on 106 examples of manufacturing plant and 82 examples of living plant this algorithm is able to distinguish between two senses of plant for 7,350 examples with 97 percent accuracy.</S>
    <S sid="197" ssid="13">Experiments with 11 other words using collocation seeds result in an average accuracy of 96 percent.</S>
    <S sid="198" ssid="14">While (Yarowsky, 1995) does not discuss distinguishing more than 2 senses of a word, there is no immediate reason to doubt that the &amp;quot;one sense per collocation&amp;quot; rule (Yarowsky, 1993) would still hold for a larger number of senses.</S>
    <S sid="199" ssid="15">In future work we will evaluate using the &amp;quot;one sense per collocation&amp;quot; rule to seed our various methods.</S>
    <S sid="200" ssid="16">This may help in dealing with very skewed distributions of senses since we currently select collocations based simply on frequency.</S>
    <S sid="201" ssid="17">Clustering has most often been applied in natural language processing as a method for inducing syntactic or semantically related groupings of words (e.g., (Rosenfeld, Huang, and Schneider, 1969), (Kiss, 1973), (Ritter and Kohonen, 1989), (Pereira, Tishby, and Lee, 1993), (Schiitze, 1993), (Resnik, 1995a)).</S>
    <S sid="202" ssid="18">An early application of clustering to word&#8212;sense disambiguation is described in (Schiitze, 1992).</S>
    <S sid="203" ssid="19">There words are represented in terms of the cooccurrence statistics of four letter sequences.</S>
    <S sid="204" ssid="20">This representation uses 97 features to characterize a word, where each feature is a linear combination of letter four-grams formulated by a singular value decomposition of a 5000 by 5000 matrix of letter fourgram co-occurrence frequencies.</S>
    <S sid="205" ssid="21">The weight associated with each feature reflects all usages of the word in the sample.</S>
    <S sid="206" ssid="22">A context vector is formed for each occurrence of an ambiguous word by summing the vectors of the contextual words (the number of contextual words considered in the sum is unspecified).</S>
    <S sid="207" ssid="23">The set of context vectors for the word to be disambiguated are then clustered, and the clusters are manually sense tagged.</S>
    <S sid="208" ssid="24">The features used in this work are complex and difficult to interpret and it isn't clear that this complexity is required.</S>
    <S sid="209" ssid="25">(Yarowsky, 1995) compares his method to (Schiitze, 1992) and shows that for four words the former performs significantly better in distinguishing between two senses.</S>
    <S sid="210" ssid="26">Other clustering approaches to word&#8212;sense disambiguation have been based on measures of semantic distance defined with respect to a semantic network such as WordNet.</S>
    <S sid="211" ssid="27">Measures of semantic distance are based on the path length between concepts in a network and are used to group semantically similar concepts (e.g.</S>
    <S sid="212" ssid="28">(Li, Szpakowicz, and Matwin, 1995)).</S>
    <S sid="213" ssid="29">(Resnik, 1995b) provides an information theoretic definition of semantic distance based on WordNet.</S>
    <S sid="214" ssid="30">(McDonald et al., 1990) apply another clustering approach to word&#8212;sense disambiguation (also see (Wilks et al., 1990)).</S>
    <S sid="215" ssid="31">They use co-occurrence data gathered from the machine-readable version of LDOCE to define neighborhoods of related words.</S>
    <S sid="216" ssid="32">Conceptually, the neighborhood of a word is a type of equivalence class.</S>
    <S sid="217" ssid="33">It is composed of all other words that co-occur with the designated word a significant number of times in the LDOCE sense definitions.</S>
    <S sid="218" ssid="34">These neighborhoods are used to increase the number of words in the LDOCE sense definitions, while still maintaining some measure of lexical cohesion.</S>
    <S sid="219" ssid="35">The &amp;quot;expanded&amp;quot; sense definitions are then compared to the context of an ambiguous word, and the sensedefinition with the greatest number of word overlaps with the context is selected as correct.</S>
    <S sid="220" ssid="36">(Guthrie et al., 1991) propose that neighborhoods be subject dependent.</S>
    <S sid="221" ssid="37">They suggest that a word should potentially have different neighborhoods corresponding to the different LDOCE subject code.</S>
    <S sid="222" ssid="38">Subjectspecific neighborhoods are composed of words having at least one sense marked with that subject code.</S>
    <S sid="223" ssid="39">The only other application of the EM algorithm to word&#8212;sense disambiguation is described in (Gale, Church, and Yarowsky, 1995).</S>
    <S sid="224" ssid="40">There the EM algorithm is used as part of a supervised learning algorithm to distinguish city names from people's names.</S>
    <S sid="225" ssid="41">A narrow window of context, one or two words to either side, was found to perform better than wider windows.</S>
    <S sid="226" ssid="42">The results presented are preliminary but show an accuracy percentage in the mid-nineties when applied to Dixon, a name found to be quite ambiguous.</S>
    <S sid="227" ssid="43">It should be noted that the EM algorithm relates to a large body of work in speech processing.</S>
    <S sid="228" ssid="44">The Baum&#8212;Welch forward&#8212;backward algorithm (Baum, 1972) is a specialized form of the EM algorithm that assumes the underlying parametric model is a hidden Markov model.</S>
    <S sid="229" ssid="45">The Baum&#8212;Welch forward&#8212; backward algorithm has been used extensively in speech recognition (e.g.</S>
    <S sid="230" ssid="46">(Levinson, Rabiner, and Sondhi, 1983), (Kupiec, 1992)), (Jelinek, 1990)).</S>
  </SECTION>
  <SECTION title="8 Conclusions" number="8">
    <S sid="231" ssid="1">Supervised learning approaches to word&#8212;sense disambiguation fall victim to the knowledge acquisition bottleneck.</S>
    <S sid="232" ssid="2">The creation of sense tagged text sufficient to serve as a training sample is expensive and time consuming.</S>
    <S sid="233" ssid="3">This bottleneck is eliminated through the use of unsupervised learning approaches which distinguish the sense of a word based only on features that can be automatically identified.</S>
    <S sid="234" ssid="4">In this study, we evaluated the performance of three unsupervised learning algorithms on the disambiguation of 13 words in naturally occurring text.</S>
    <S sid="235" ssid="5">The algorithms are McQuitty's similarity analysis, Ward's minimum-variance method, and the EM algorithm.</S>
    <S sid="236" ssid="6">Our findings show that each of these algorithms is negatively impacted by highly skewed sense distributions.</S>
    <S sid="237" ssid="7">Our methods and feature sets were found to be most successful in disambiguating nouns rather than adjectives or verbs.</S>
    <S sid="238" ssid="8">Overall, the most successful of our procedures was McQuitty's similarity analysis in combination with a high dimensional feature set.</S>
    <S sid="239" ssid="9">In future work, we will investigate modifications of these algorithms and feature set selection that are more effective on highly skewed sense distributions.</S>
  </SECTION>
</PAPER>
