<PAPER>
  <S sid="0">Exploiting Semantic Role Labeling WordNet And Wikipedia For Coreference Resolution</S>
  <ABSTRACT>
    <S sid="1" ssid="1">In this paper we present an extension of a machine learning based coreference resolution system which uses features induced from different semantic knowledge sources.</S>
    <S sid="2" ssid="2">These features represent knowledge mined from WordNet and Wikipedia, as well as information about semantic role labels.</S>
    <S sid="3" ssid="3">We show that semantic features indeed improve the performance on different referring expression types such as pronouns and common nouns.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="4" ssid="1">The last years have seen a boost of work devoted to the development of machine learning based coreference resolution systems (Soon et al., 2001; Ng &amp; Cardie, 2002; Yang et al., 2003; Luo et al., 2004, inter alia).</S>
    <S sid="5" ssid="2">While machine learning has proved to yield performance rates fully competitive with rule based systems, current coreference resolution systems are mostly relying on rather shallow features, such as the distance between the coreferent expressions, string matching, and linguistic form.</S>
    <S sid="6" ssid="3">However, the literature emphasizes since the very beginning the relevance of world knowledge and inference for coreference resolution (Charniak, 1973).</S>
    <S sid="7" ssid="4">This paper explores whether coreference resolution can benefit from semantic knowledge sources.</S>
    <S sid="8" ssid="5">More specifically, whether a machine learning based approach to coreference resolution can be improved and which phenomena are affected by such information.</S>
    <S sid="9" ssid="6">We investigate the use of the WordNet and Wikipedia taxonomies for extracting semantic similarity and relatedness measures, as well as semantic parsing information in terms of semantic role labeling (Gildea &amp; Jurafsky, 2002, SRL henceforth).</S>
    <S sid="10" ssid="7">We believe that the lack of semantics in the current systems leads to a performance bottleneck.</S>
    <S sid="11" ssid="8">In order to correctly identify the discourse entities which are referred to in a text, it seems essential to reason over the lexical semantic relations, as well as the event representations embedded in the text.</S>
    <S sid="12" ssid="9">As an example, consider a fragment from the Automatic Content Extraction (ACE) 2003 data.</S>
    <S sid="13" ssid="10">In order to correctly resolve the anaphoric expressions highlighted in bold, it seems that some kind of lexical semantic and encyclopedic knowledge is required.</S>
    <S sid="14" ssid="11">This includes that North Korea is a country, that countries consist of people and are societies.</S>
    <S sid="15" ssid="12">The resolution requires an encyclopedia (i.e.</S>
    <S sid="16" ssid="13">Wikipedia) look-up and reasoning on the content relatedness holding between the different expressions (i.e. as a path measure along the links of the WordNet and Wikipedia taxonomies).</S>
    <S sid="17" ssid="14">Event representations seem also to be important for coreference resolution, as shown below: In this example, knowing that the Interfax news agency is the AGENT of the report predicate and It being the AGENT of say could trigger the (semantic parallelism based) inference required to correctly link the two expressions, in contrast to anchoring the pronoun to Moscow.</S>
    <S sid="18" ssid="15">SRL provides the semantic relationships that constituents have with predicates, thus allowing us to include such documentlevel event descriptive information into the relations holding between referring expressions (REs).</S>
    <S sid="19" ssid="16">Instead of exploring different kinds of data representations, task definitions or machine learning techniques (Ng &amp; Cardie, 2002; Yang et al., 2003; Luo et al., 2004) we focus on a few promising semantic features which we evaluate in a controlled environment.</S>
    <S sid="20" ssid="17">That way we try to overcome the plateauing in performance in coreference resolution observed by Kehler et al. (2004).</S>
  </SECTION>
  <SECTION title="2 Related Work" number="2">
    <S sid="21" ssid="1">Vieira &amp; Poesio (2000), Harabagiu et al. (2001), and Markert &amp; Nissim (2005) explore the use of WordNet for different coreference resolution subtasks, such as resolving bridging reference, otherand definite NP anaphora, and MUC-style coreference resolution.</S>
    <S sid="22" ssid="2">All of them present systems which infer coreference relations from a set of potential antecedents by means of a WordNet search.</S>
    <S sid="23" ssid="3">Our approach to WordNet here is to cast the search results in terms of semantic similarity measures.</S>
    <S sid="24" ssid="4">Their output can be used as features for a learner.</S>
    <S sid="25" ssid="5">These measures are not specifically developed for coreference resolution but simply taken &#8216;off-the-shelf&#8217; and applied to our task without any specific tuning &#8212; i.e.</S>
    <S sid="26" ssid="6">in contrast to Harabagiu et al. (2001), who weight WordNet relations differently in order to compute the confidence measure of the path.</S>
    <S sid="27" ssid="7">To the best of our knowledge, we do not know of any previous work using Wikipedia or SRL for coreference resolution.</S>
    <S sid="28" ssid="8">In the case of SRL, this layer of semantic context abstracts from the specific lexical expressions used, and therefore represents a higher level of abstraction than (still related) work involving predicate argument statistics.</S>
    <S sid="29" ssid="9">Kehler et al. (2004) observe no significant improvement due to predicate argument statistics.</S>
    <S sid="30" ssid="10">The improvement reported by Yang et al. (2005) is rather caused by their twin-candidate model than by the semantic knowledge.</S>
    <S sid="31" ssid="11">Employing SRL is closer in spirit to Ji et al. (2005), who explore the employment of the ACE 2004 relation ontology as a semantic filter.</S>
  </SECTION>
  <SECTION title="3 Coreference Resolution Using Semantic Knowledge Sources" number="3">
    <S sid="32" ssid="1">To establish a competitive coreference resolver, the system was initially prototyped using the MUC-6 and MUC-7 data sets (Chinchor &amp; Sundheim, 2003; Chinchor, 2001), using the standard partitioning of 30 texts for training and 20-30 texts for testing.</S>
    <S sid="33" ssid="2">Then, we moved on and developed and tested the system with the ACE 2003 Training Data corpus (Mitchell et al., 2003)1.</S>
    <S sid="34" ssid="3">Both the Newswire (NWIRE) and Broadcast News (BNEWS) sections where split into 60-20-20% document-based partitions for training, development, and testing, and later per-partition merged (MERGED) for system evaluation.</S>
    <S sid="35" ssid="4">The distribution of coreference chains and referring expressions is given in Table 1.</S>
    <S sid="36" ssid="5">For learning coreference decisions, we used a Maximum Entropy (Berger et al., 1996) model.</S>
    <S sid="37" ssid="6">This was implemented using the MALLET library (McCallum, 2002).</S>
    <S sid="38" ssid="7">To prevent the model from overfitting, we employed a tunable Gaussian prior as a smoothing method.</S>
    <S sid="39" ssid="8">The best parameter value is found by searching in the [0,10] interval with step value of 0.5 for the variance parameter yielding the highest MUC score F-measure on the development data.</S>
    <S sid="40" ssid="9">Coreference resolution is viewed as a binary classification task: given a pair of REs, the classifier has to decide whether they are coreferent or not.</S>
    <S sid="41" ssid="10">The MaxEnt model produces a probability for each category y (coreferent or not) of a candidate pair, conditioned on the context x in which the candidate occurs.</S>
    <S sid="42" ssid="11">The conditional probability is calculated by: where fi(x, y) is the value of feature i on outcome y in context x, and Ai is the weight associated with i in the model.</S>
    <S sid="43" ssid="12">Zx is a normalization constant.</S>
    <S sid="44" ssid="13">The features used in our model are all binary-valued feature functions (or indicator functions), e.g.</S>
    <S sid="45" ssid="14">In our system, a set of pre-processing components including a POS tagger (Gim&#180;enez &amp; M`arquez, 2004), NP chunker (Kudoh &amp; Matsumoto, 2000) and the Alias-I LingPipe Named Entity Recognizer2 is applied to the text in order to identify the noun phrases, which are further taken as referring expressions (REs) to be used for instance generation.</S>
    <S sid="46" ssid="15">Therefore, we use automatically extracted noun phrases, rather than assuming perfect NP chunking.</S>
    <S sid="47" ssid="16">This is in contrast to other related works in coreference resolution (e.g.</S>
    <S sid="48" ssid="17">Luo et al. (2004), Kehler et al.</S>
    <S sid="49" ssid="18">(2004)).</S>
    <S sid="50" ssid="19">Instances are created following Soon et al. (2001).</S>
    <S sid="51" ssid="20">We create a positive training instance from each pair of adjacent coreferent REs.</S>
    <S sid="52" ssid="21">Negative instances are obtained by pairing the anaphoric REs with any RE occurring between the anaphor and the antecedent.</S>
    <S sid="53" ssid="22">During testing each text is processed from left to right: each RE is paired with any preceding RE from right to left, until a pair labeled as coreferent is output, or the beginning of the document is reached.</S>
    <S sid="54" ssid="23">The classifier imposes a partitioning on the available REs by clustering each set of expressions labeled as coreferent into the same coreference chain.</S>
    <S sid="55" ssid="24">Following Ng &amp; Cardie (2002), our baseline system reimplements the Soon et al. (2001) system.</S>
    <S sid="56" ssid="25">The system uses 12 features.</S>
    <S sid="57" ssid="26">Given a potential antecedent REi and a potential anaphor REQ the features are computed as follows3. those; else F. NUMBER T if both REi and REQ agree in number; else F. GENDER U if either REi or REQ have an undefined gender.</S>
    <S sid="58" ssid="27">Else if they are both defined and agree T; else F. PROPER NAME T if both REi and REQ are proper names; else F. APPOSITIVE T if REQ is in apposition with REi; else F. In the baseline system semantic information is limited to WordNet semantic class matching.</S>
    <S sid="59" ssid="28">Unfortunately, a WordNet semantic class lookup exhibits problems such as coverage, sense proliferation and ambiguity4, which make the WN CLASS feature very noisy.</S>
    <S sid="60" ssid="29">We enrich the semantic information available to the classifier by using semantic similarity measures based on the WordNet taxonomy (Pedersen et al., 2004).</S>
    <S sid="61" ssid="30">The measures we use include path length based measures (Rada et al., 1989; Wu &amp; Palmer, 1994; Leacock &amp; Chodorow, 1998), as well as ones based on information content (Resnik, 1995; Jiang &amp; Conrath, 1997; Lin, 1998).</S>
    <S sid="62" ssid="31">In our case, the measures are obtained by computing the similarity scores between the head lemmata of each potential antecedent-anaphor pair.</S>
    <S sid="63" ssid="32">In order to overcome the sense disambiguation problem, we factorise over all possible sense pairs: given a candidate pair, we take the cross product of each antecedent and anaphor sense to form pairs of synsets.</S>
    <S sid="64" ssid="33">For each measure WN SIMILARITY, we compute the similarity score for all synset pairs, and create the following features.</S>
    <S sid="65" ssid="34">WN SIMILARITY BEST the highest similarity score from all (SENSEREi&#65533;ry,,, SENSEREj&#65533;m) synset pairs.</S>
    <S sid="66" ssid="35">WN SIMILARITY AVG the average similarity score from all (SENSEREi&#65533;ry,,, SENSEREj&#65533;m) synset pairs.</S>
    <S sid="67" ssid="36">Pairs containing REs which cannot be mapped to WordNet synsets are assumed to have a null similarity measure.</S>
    <S sid="68" ssid="37">Wikipedia is a multilingual Web-based free-content encyclopedia5.</S>
    <S sid="69" ssid="38">The English version, as of 14 February 2006, contains 971,518 articles with 16.8 million internal hyperlinks thus providing a large coverage available knowledge resource.</S>
    <S sid="70" ssid="39">In addition, since May 2004 it provides also a taxonomy by means of the category feature: articles can be placed in one or more categories, which are further categorized to provide a category tree.</S>
    <S sid="71" ssid="40">In practice, the taxonomy is not designed as a strict hierarchy or tree of categories, but allows multiple categorisation schemes to co-exist simultaneously.</S>
    <S sid="72" ssid="41">Because each article can appear in more than one category, and each category can appear in more than one parent category, the categories do not form a tree structure, but a more general directed graph.</S>
    <S sid="73" ssid="42">As of December 2005, 78% of the articles have been categorized into 87,000 different categories.</S>
    <S sid="74" ssid="43">Wikipedia mining works as follows (for an indepth description of the methods for computing semantic relatedness in Wikipedia see Strube &amp; Ponzetto (2006)): given the candidate referring expressions REZ and REj we first pull the pages they refer to.</S>
    <S sid="75" ssid="44">This is accomplished by querying the page titled as the head lemma or, in the case of NEs, the full NP.</S>
    <S sid="76" ssid="45">We follow all redirects and check for disambiguation pages, i.e. pages for ambiguous entries which contain links only (e.g.</S>
    <S sid="77" ssid="46">Lincoln).</S>
    <S sid="78" ssid="47">If a disambiguation page is hit, we first get all the hyperlinks in the page.</S>
    <S sid="79" ssid="48">If a link containing the other queried RE is found (i.e. a link containing president in the Lincoln page), the linked page (President of the United States) is returned, else we return the first article linked in the disambiguation page.</S>
    <S sid="80" ssid="49">Given a candidate coreference pair REZ/j and the Wikipedia pages PREi/j they point to, obtained by querying pages titled as TREi/j, we extract the following features: I/J GLOSS CONTAINS U if no Wikipedia page titled TREi/j is available.</S>
    <S sid="81" ssid="50">Else T if the first paragraph of text of PREi/j contains TREj/i; else F. I/J RELATED CONTAINS U if no Wikipedia page titled as TREi/j is available.</S>
    <S sid="82" ssid="51">Else T if at least one Wikipedia hyperlink of PREi/j contains TREj/i; else F. I/J CATEGORIES CONTAINS U if no Wikipedia page titled as TREi/j is available.</S>
    <S sid="83" ssid="52">Else T if the list of categories PREi/j belongs to contains TREj/i; else F. GLOSS OVERLAP the overlap score between the first paragraph of text of PREi and PREj.</S>
    <S sid="84" ssid="53">Following Banerjee &amp; Pedersen (2003) we compute the score as &amp; m2 for n phrasal m-word overlaps.</S>
    <S sid="85" ssid="54">Additionally, we use the Wikipedia category graph.</S>
    <S sid="86" ssid="55">We ported the WordNet similarity path length based measures to the Wikipedia category graph.</S>
    <S sid="87" ssid="56">However, the category relations in Wikipedia cannot only be interpreted as corresponding to is-a links in a taxonomy since they denote meronymic relations as well.</S>
    <S sid="88" ssid="57">Therefore, the Wikipedia-based measures are to be taken as semantic relatedness measures.</S>
    <S sid="89" ssid="58">The measures from Rada et al. (1989), Leacock &amp; Chodorow (1998) and Wu &amp; Palmer (1994) are computed in the same way as for WordNet.</S>
    <S sid="90" ssid="59">Path search takes place as a depth-limited search of maximum depth of 4 for a least common subsumer.</S>
    <S sid="91" ssid="60">We noticed that limiting the search improves the results as it yields a better correlation of the relatedness scores with human judgements (Strube &amp; Ponzetto, 2006).</S>
    <S sid="92" ssid="61">This is due to the high regions of the Wikipedia category tree being too strongly connected.</S>
    <S sid="93" ssid="62">In addition, we use the measure from Resnik (1995), which is computed using an intrinsic information content measure relying on the hierarchical structure of the category tree (Seco et al., 2004).</S>
    <S sid="94" ssid="63">Given PREi/j and the lists of categories CREi/j they belong to, we factorise over all possible category pairs.</S>
    <S sid="95" ssid="64">That is, we take the cross product of each antecedent and anaphor category to form pairs of &#8216;Wikipedia synsets&#8217;.</S>
    <S sid="96" ssid="65">For each measure WIKI RELATEDNESS, we compute the relatedness score for all category pairs, and create the following features.</S>
    <S sid="97" ssid="66">WIKI RELATEDNESS BEST the highest relatedness score from all (CREi,n, CREj,m) category pairs.</S>
    <S sid="98" ssid="67">WIKI RELATEDNESS AVG the average relatedness score from all (CREi,n, CREj,m) category pairs.</S>
    <S sid="99" ssid="68">The last semantic knowledge enhancement for the baseline system uses SRL information.</S>
    <S sid="100" ssid="69">In our experiments we use the ASSERT parser (Pradhan et al., 2004), an SVM based semantic role tagger which uses a full syntactic analysis to automatically identify all verb predicates in a sentence together with their semantic arguments, which are output as PropBank arguments (Palmer et al., 2005).</S>
    <S sid="101" ssid="70">It is often the case that the semantic arguments output by the parser do not align with any of the previously identified noun phrases.</S>
    <S sid="102" ssid="71">In this case, we pass a semantic role label to a RE only when the two phrases share the same head.</S>
    <S sid="103" ssid="72">Labels have the form &#8220;ARG1 pred1 ... ARGn predn&#8221; for n semantic roles filled by a constituent, where each semantic argument label is always defined with respect to a predicate.</S>
    <S sid="104" ssid="73">Given such level of semantic information available at the RE level, we introduce two new features6.</S>
    <S sid="105" ssid="74">I SEMROLE the semantic role argumentpredicate pairs of REi.</S>
    <S sid="106" ssid="75">J SEMROLE the semantic role argumentpredicate pairs of REQ.</S>
    <S sid="107" ssid="76">For the ACE 2003 data, 11,406 of 32,502 automatically extracted noun phrases were tagged with 2,801 different argument-predicate pairs.</S>
  </SECTION>
  <SECTION title="4 Experiments" number="4">
    <S sid="108" ssid="1">We report in the following tables the MUC score (Vilain et al., 1995).</S>
    <S sid="109" ssid="2">Scores in Table 2 are computed for all noun phrases appearing in either the key or the system response, whereas Tables 3 and 4 refer to scoring only those phrases which appear in both the key and the response.</S>
    <S sid="110" ssid="3">We therefore discard those responses not present in the key, as we are interested in establishing the upper limit of the improvements given by our semantic features.</S>
    <S sid="111" ssid="4">That is, we want to define a baseline against which to establish the contribution of the semantic information sources explored here for coreference resolution.</S>
    <S sid="112" ssid="5">In addition, we report the accuracy score for all three types of ACE mentions, namely pronouns, common nouns and proper names.</S>
    <S sid="113" ssid="6">Accuracy is the percentage of REs of a given mention type correctly resolved divided by the total number of REs of the same type given in the key.</S>
    <S sid="114" ssid="7">A RE is said to be correctly resolved when both it and its direct antecedent are placed by the key in the same coreference class.</S>
    <S sid="115" ssid="8">6During prototyping we experimented unpairing the arguments from the predicates, which yielded worse results.</S>
    <S sid="116" ssid="9">This is supported by the PropBank arguments always being defined with respect to a target predicate.</S>
    <S sid="117" ssid="10">Binarizing the features &#8212; i.e. do REi and REj have the same argument or predicate label with respect to their closest predicate?</S>
    <S sid="118" ssid="11">&#8212; also gave worse results.</S>
    <S sid="119" ssid="12">For determining the relevant feature sets we follow an iterative procedure similar to the wrapper approach for feature selection (Kohavi &amp; John, 1997) using the development data.</S>
    <S sid="120" ssid="13">The feature subset selection algorithm performs a hill-climbing search along the feature space.</S>
    <S sid="121" ssid="14">We start with a model based on all available features.</S>
    <S sid="122" ssid="15">Then we train models obtained by removing one feature at a time.</S>
    <S sid="123" ssid="16">We choose the worst performing feature, namely the one whose removal gives the largest improvement based on the MUC score F-measure, and remove it from the model.</S>
    <S sid="124" ssid="17">We then train classifiers removing each of the remaining features separately from the enhanced model.</S>
    <S sid="125" ssid="18">The process is iteratively run as long as significant improvement is observed.</S>
    <S sid="126" ssid="19">Table 2 compares the results between our duplicated Soon baseline and the original system.</S>
    <S sid="127" ssid="20">We assume that the slight improvements of our system are due to the use of current pre-processing components and another classifier.</S>
    <S sid="128" ssid="21">Tables 3 and 4 show a comparison of the performance between our baseline system and the ones incremented with semantic features.</S>
    <S sid="129" ssid="22">Performance improvements are highlighted in bold7.</S>
    <S sid="130" ssid="23">The tables show that semantic features improve system recall, rather than acting as a &#8216;semantic filter&#8217; improving precision.</S>
    <S sid="131" ssid="24">Semantics therefore seems to trigger a response in cases where more shallow features do not seem to suffice (see examples (1-2)).</S>
    <S sid="132" ssid="25">Different feature sources account for different RE type improvements.</S>
    <S sid="133" ssid="26">WordNet and Wikipedia features tend to increase performance on common 7All changes in F-measure are statistically significant at the 0.05 level or higher.</S>
    <S sid="134" ssid="27">We follow Soon et al. (2001) in performing a simple one-tailed, paired sample t-test between the baseline system&#8217;s MUC score F-measure and each of the other systems&#8217; F-measure scores on the test documents. nouns, whereas SRL improves pronouns.</S>
    <S sid="135" ssid="28">WordNet features are able to improve by 14.3% and 7.7% the accuracy rate for common nouns on the BNEWS and NWIRE datasets (+34 and +37 correctly resolved common nouns out of 238 and 484 respectively), whereas employing Wikipedia yields slightly smaller improvements (+13.0% and +6.6% accuracy increase on the same datasets).</S>
    <S sid="136" ssid="29">Similarly, when SRL features are added to the baseline system, we register an increase in the accuracy rate for pronouns, ranging from 0.7% in BNEWS and NWIRE up to 4.2% in the MERGED dataset (+26 correctly resolved pronouns out of 620).</S>
    <S sid="137" ssid="30">If semantics helps for pronouns and common nouns, it does not affect performance on proper names, where features such as string matching and alias suffice.</S>
    <S sid="138" ssid="31">This suggests that semantics plays a role in pronoun and common noun resolution, where surface features cannot account for complex preferences and semantic knowledge is required.</S>
    <S sid="139" ssid="32">The best accuracy improvement on pronoun resolution is obtained on the MERGED dataset.</S>
    <S sid="140" ssid="33">This is due to making more data available to the classifier, as the SRL features are very sparse and inherently suffer from data fragmentation.</S>
    <S sid="141" ssid="34">Using a larger dataset highlights the importance of SRL, whose features are never removed in any feature selection process8.</S>
    <S sid="142" ssid="35">The accuracy on common nouns shows that features induced from Wikipedia are competitive with the ones from WordNet.</S>
    <S sid="143" ssid="36">The performance gap on all three datasets is quite small, which indicates the usefulness of using an encyclopedic knowledge base as a replacement for a lexical taxonomy.</S>
    <S sid="144" ssid="37">As a consequence of having different knowledge sources accounting for the resolution of different RE types, the best results are obtained by (1) combining features generated from different sources; (2) performing feature selection.</S>
    <S sid="145" ssid="38">When combining different feature sources, we register an accuracy improvement on pronouns and common nouns, as well as an increase in F-measure due to a higher recall.</S>
    <S sid="146" ssid="39">Feature selection always improves results.</S>
    <S sid="147" ssid="40">This is due to the fact that our full feature set is extremely redundant: in order to explore the usefulness of the knowledge sources we included overlapping features (i.e. using best and average similarity/relatedness measures at the same time), as well as features capturing the same phenomenon from different point of views (i.e. using multiple measures at the same time).</S>
    <S sid="148" ssid="41">In order to yield the desired performance improvements, it turns out to be essential to filter out irrelevant features.</S>
    <S sid="149" ssid="42">Table 5 shows the relevance of the best performing features on the BNEWS section.</S>
    <S sid="150" ssid="43">As our feature selection mechanism chooses the best set of features by removing them (see Section 4.2), we evaluate the contributions of the remaining features as follows.</S>
    <S sid="151" ssid="44">We start with a baseline system using all the features from Soon et al. (2001) that were not removed in the feature selection process (i.e.</S>
    <S sid="152" ssid="45">DISTANCE).</S>
    <S sid="153" ssid="46">We then train classifiers combining the current feature set with each feature in turn.</S>
    <S sid="154" ssid="47">We then choose the best performing feature based on the MUC score F-measure and add it to the model.</S>
    <S sid="155" ssid="48">We iterate the process until all features are added to the baseline system.</S>
    <S sid="156" ssid="49">The table indicates that all knowledge sources are relevant for coreference resolution, as it includes SRL, WordNet and Wikipedia features.</S>
    <S sid="157" ssid="50">The Wikipedia features rank high, indicating again that it provides a valid knowledge base.</S>
  </SECTION>
  <SECTION title="5 Conclusions and Future Work" number="5">
    <S sid="158" ssid="1">The results are somehow surprising, as one would not expect a community-generated categorization to be almost as informative as a well structured lexical taxonomy such as WordNet.</S>
    <S sid="159" ssid="2">Nevertheless Wikipedia offers promising results, which we expect to improve as well as the encyclopedia goes under further development.</S>
    <S sid="160" ssid="3">In this paper we investigated the effects of using different semantic knowledge sources within a machine learning based coreference resolution system.</S>
    <S sid="161" ssid="4">This involved mining the WordNet taxonomy and the Wikipedia encyclopedic knowledge base, as well as including semantic parsing information, in order to induce semantic features for coreference learning.</S>
    <S sid="162" ssid="5">Empirical results show that coreference resolution benefits from semantics.</S>
    <S sid="163" ssid="6">The generated model is able to learn selectional preferences in cases where surface morpho-syntactic features do not suffice, i.e. pronoun and common name resolution.</S>
    <S sid="164" ssid="7">While the results given by using &#8216;the free encyclopedia that anyone can edit&#8217; are satisfactory, major improvements can come from developing efficient query strategies &#8211; i.e. a more refined disambiguation technique taking advantage of the context in which the queries (e.g. referring expressions) occur.</S>
    <S sid="165" ssid="8">Future work will include turning Wikipedia into an ontology with well defined taxonomic relations, as well as exploring its usefulness of for other NLP applications.</S>
    <S sid="166" ssid="9">We believe that an interesting aspect of Wikipedia is that it offers large coverage resources for many languages, thus making it a natural choice for multilingual NLP systems.</S>
    <S sid="167" ssid="10">Semantics plays indeed a role in coreference resolution.</S>
    <S sid="168" ssid="11">But semantic features are expensive to compute and the development of efficient methods is required to embed them into large scale systems.</S>
    <S sid="169" ssid="12">Nevertheless, we believe that exploiting semantic knowledge in the manner we described will assist the research on coreference resolution to overcome the plateauing in performance observed by Kehler et al. (2004).</S>
    <S sid="170" ssid="13">Acknowledgements: This work has been funded by the Klaus Tschira Foundation, Heidelberg, Germany.</S>
    <S sid="171" ssid="14">The first author has been supported by a KTF grant (09.003.2004).</S>
    <S sid="172" ssid="15">We thank Katja Filippova, Margot Mieskes and the three anonymous reviewers for their useful comments.</S>
  </SECTION>
</PAPER>
