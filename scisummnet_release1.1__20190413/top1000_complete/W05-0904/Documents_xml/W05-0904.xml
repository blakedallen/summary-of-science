<PAPER>
  <S sid="0">Syntactic Features For Evaluation Of Machine Translation</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Automatic evaluation of machine translabased on computing similarity between system output and human reference translations, has revolutionized the development of MT systems.</S>
    <S sid="2" ssid="2">We explore the use of syntactic information, including constituent labels and head-modifier dependencies, in computing similarity between output and reference.</S>
    <S sid="3" ssid="3">Our results show that adding syntactic information to the evaluation metric improves both sentence-level and corpus-level correlation with human judgments.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="4" ssid="1">Evaluation has long been a stumbling block in the development of machine translation systems, due to the simple fact that there are many correct translations for a given sentence.</S>
    <S sid="5" ssid="2">Human evaluation of system output is costly in both time and money, leading to the rise of automatic evaluation metrics in recent years.</S>
    <S sid="6" ssid="3">The most commonly used automatic evaluation metrics, BLEU (Papineni et al., 2002) and NIST (Doddington, 2002), are based on the assumption that &#8220;The closer a machine translation is to a professional human translation, the better it is&#8221; (Papineni et al., 2002).</S>
    <S sid="7" ssid="4">For every hypothesis, BLEU computes the fraction of n-grams which also appear in the reference sentences, as well as a brevity penalty.</S>
    <S sid="8" ssid="5">NIST uses a similar strategy to BLEU but further considers that n-grams with different frequency should be treated differently in the evaluation.</S>
    <S sid="9" ssid="6">It introduces the notion of information weights, which indicate that rarely occurring n-grams count more than those frequently occurring ones in the evaluation (Doddington, 2002).</S>
    <S sid="10" ssid="7">BLEU and NIST have been shown to correlate closely with human judgments in ranking MT systems with different qualities (Papineni et al., 2002; Doddington, 2002).</S>
    <S sid="11" ssid="8">In the 2003 Johns Hopkins Workshop on Speech and Language Engineering, experiments on MT evaluation showed that BLEU and NIST do not correlate well with human judgments at the sentence level, even when they correlate well over large test sets (Blatz et al., 2003).</S>
    <S sid="12" ssid="9">Kulesza and Shieber (2004) use a machine learning approach to improve the correlation at the sentence level.</S>
    <S sid="13" ssid="10">Their method, based on the assumption that higher classification accuracy in discriminating human- from machine-generated translations will yield closer correlation with human judgments, uses support vector machine (SVM) based learning to weight multiple metrics such as BLEU, NIST, and WER (minimal word error rate).</S>
    <S sid="14" ssid="11">The SVM is trained for differentiating the MT hypothesis and the professional human translations, and then the distance from the hypothesis&#8217;s metric vector to the hyper-plane of the trained SVM is taken as the final score for the hypothesis.</S>
    <S sid="15" ssid="12">While the machine learning approach improves correlation with human judgments, all the metrics discussed are based on the same type of information: n-gram subsequences of the hypothesis translations.</S>
    <S sid="16" ssid="13">This type of feature cannot capture the grammaticality of the sentence, in part because they do not take into account sentence-level information.</S>
    <S sid="17" ssid="14">For example, a sentence can achieve an excellent BLEU score without containing a verb.</S>
    <S sid="18" ssid="15">As MT systems improve, the shortcomings of n-gram based evaluation are becoming more apparent.</S>
    <S sid="19" ssid="16">State-of-the-art MT output often contains roughly the correct words and concepts, but does not form a coherent sentence.</S>
    <S sid="20" ssid="17">Often the intended meaning can be inferred; often it cannot.</S>
    <S sid="21" ssid="18">Evidence that we are reaching the limits of ngram based evaluation was provided by Charniak et al. (2003), who found that a syntax-based language model improved the fluency and semantic accuracy of their system, but lowered their BLEU score.</S>
    <S sid="22" ssid="19">With the progress of MT research in recent years, we are not satisfied with the getting correct words in the translations; we also expect them to be wellformed and more readable.</S>
    <S sid="23" ssid="20">This presents new challenges to MT evaluation.</S>
    <S sid="24" ssid="21">As discussed above, the existing word-based metrics can not give a clear evaluation for the hypothesis&#8217; fluency.</S>
    <S sid="25" ssid="22">For example, in the BLEU metric, the overlapping fractions of n-grams with more than one word are considered as a kind of metric for the fluency of the hypothesis.</S>
    <S sid="26" ssid="23">Consider the following simple example:</S>
  </SECTION>
  <SECTION title="Reference: I had a dog." number="2">
    <S sid="27" ssid="1">If we use BLEU to evaluate the two sentences, hypothesis 2 has two bigrams a dog and I had which are also found in the reference, and hypothesis 1 has no bigrams in common with the reference.</S>
    <S sid="28" ssid="2">Thus hypothesis 2 will get a higher score than hypothesis 1.</S>
    <S sid="29" ssid="3">The result is obviously incorrect.</S>
    <S sid="30" ssid="4">However, if we evaluate their fluency based on the syntactic similarity with the reference, we will get our desired results.</S>
    <S sid="31" ssid="5">Figure 1 shows syntactic trees for the example sentences, from which we can see that hypothesis 1 has exactly the same syntactic structure with the reference, while hypothesis 2 has a very different one.</S>
    <S sid="32" ssid="6">Thus the evaluation of fluency can be transformed as computing the syntactic similarity of the hypothesis and the references.</S>
    <S sid="33" ssid="7">This paper develops a number of syntactically motivated evaluation metrics computed by automatically parsing both reference and hypothesis sentences.</S>
    <S sid="34" ssid="8">Our experiments measure how well these metrics correlate with human judgments, both for individual sentences and over a large test set translated by MT systems of varying quality.</S>
  </SECTION>
  <SECTION title="2 Evaluating Machine Translation with Syntactic Features" number="3">
    <S sid="35" ssid="1">In order to give a clear and direct evaluation for the fluency of a sentence, syntax trees are used to generate metrics based on the similarity of the MT hypothesis&#8217;s tree and those of the references.</S>
    <S sid="36" ssid="2">We can&#8217;t expect that the whole syntax tree of the hypothesis can always be found in the references, thus our approach is to be based on the fractions of the subtrees which also appear in the reference syntax trees.</S>
    <S sid="37" ssid="3">This idea is intuitively derived from BLEU, but with the consideration of the sparse subtrees which lead to zero fractions, we average the fractions in the arithmetic mean, instead of the geometric mean used in BLEU.</S>
    <S sid="38" ssid="4">Then for each hypothesis, the fractions of subtrees with different depths are calculated and their arithmetic mean is computed as the syntax tree based metric, which we denote as &#8220;subtree metric&#8221; STM: where D is the maximum depth of subtrees considered, count(t) denotes the number of times subtree t appears in the candidate&#8217;s syntax tree, and countclip(t) denotes the clipped number of times t appears in the references&#8217; syntax trees.</S>
    <S sid="39" ssid="5">Clipped here means that, for a given subtree, the count computed from the hypothesis syntax tree can not exceed the maximum number of times the subtree occurs in any single reference&#8217;s syntax tree.</S>
    <S sid="40" ssid="6">A simple example with one hypothesis and one reference is shown in Figure 2.</S>
    <S sid="41" ssid="7">Setting the maximum depth to 3, we go through the hypothesis syntax tree and compute the fraction of subtrees with different depths.</S>
    <S sid="42" ssid="8">For the 1-depth subtrees, we get S, NP, VP, PRON, V, NP which also appear in the reference syntax tree.</S>
    <S sid="43" ssid="9">Since PRON only occurs once in the reference, its clipped count should be 1 rather than 2.</S>
    <S sid="44" ssid="10">Then we get 6 out of 7 for the 1-depth subtrees.</S>
    <S sid="45" ssid="11">For the 2depth subtrees, we get S&#8594;NP VP, NP&#8594;PRON, and VP&#8594;V NP which also appear in the reference syntax tree.</S>
    <S sid="46" ssid="12">For the same reason, the subtree NP&#8594;PRON can only be counted once.</S>
    <S sid="47" ssid="13">Then we get 3 out of 4 for the 2-depth subtree.</S>
    <S sid="48" ssid="14">Similarly, the fraction of 3-depth subtrees is 1 out of 2.</S>
    <S sid="49" ssid="15">Therefore, the final score of STM is (6/7+3/4+1/2)/3=0.702.</S>
    <S sid="50" ssid="16">While the subtree overlap metric defined above considers only subtrees of a fixed depth, subtrees of other configurations may be important for discriminating good hypotheses.</S>
    <S sid="51" ssid="17">For example, we may want to look for the subtree: to find sentences with transitive verbs, while ignoring the internal structure of the subject noun phrase.</S>
    <S sid="52" ssid="18">In order to include subtrees of all configurations in our metric, we turn to convolution kernels on our trees.</S>
    <S sid="53" ssid="19">Using H(x) to denote the vector of counts of all subtrees found in tree x, for two trees T1 and T2, the inner product H(T1) &#183; H(T2) counts the number of matching pairs of subtrees of T1 and T2.</S>
    <S sid="54" ssid="20">Collins and Duffy (2001) describe a method for efficiently computing this dot product without explicitly computing the vectors H, which have dimensionality exponential in the size of the original tree.</S>
    <S sid="55" ssid="21">In order to derive a similarity measure ranging from zero to one, we use the cosine of the vectors H: we can compute the cosine similarity using the kernel method, without ever computing the entire of vector of counts H. Our kernel-based subtree metric TKM is then defined as the maximum of the cosine measure over the references: The advantage of using the tree kernel is that it can capture the similarity of subtrees of different shapes; the weak point is that it can only use the reference trees one by one, while STM can use them simultaneously.</S>
    <S sid="56" ssid="22">The dot product also weights individual features differently than our other measures, which compute overlap in the same way as does BLEU.</S>
    <S sid="57" ssid="23">For example, if the same subtree occurs 10 times in both the hypothesis and the reference, this contributes a term of 100 to the dot product, rather than 10 in the clipped count used by BLEU and by our subtree metric STM.</S>
    <S sid="58" ssid="24">Dependency trees consist of trees of head-modifier relations with a word at each node, rather than just at the leaves.</S>
    <S sid="59" ssid="25">Dependency trees were found to correspond better across translation pairs than constituent trees by Fox (2002), and form the basis of the machine translation systems of Alshawi et al. (2000) and Lin (2004).</S>
    <S sid="60" ssid="26">We derived dependency trees from the constituent trees by applying the deterministic headword extraction rules used by the parser of Collins (1999).</S>
    <S sid="61" ssid="27">For the example of the reference syntax tree in Figure 2, the whole tree with the root S represents a sentence; and the subtree NP&#8212;*ART N represents a noun phrase.</S>
    <S sid="62" ssid="28">Then for every node in the syntax tree, we can determine its headword by its syntactic structure; from the subtree NP&#8212;*ART N, for example, the headword selection rules chose the headword of NP to be word corresponding to the POS N in the subtree, and the other child, which corresponds to ART, is the modifier for the headword.</S>
    <S sid="63" ssid="29">The dependency tree then is a kind of structure constituted by headwords and every subtree represents the modifier information for its root headword.</S>
    <S sid="64" ssid="30">For example, the dependency tree of the sentence I have a red pen is shown as below.</S>
    <S sid="65" ssid="31">The dependency tree contains both the lexical and syntactic information, which inspires us to use it for the MT evaluation.</S>
    <S sid="66" ssid="32">Noticing that in a dependent tree the child nodes are the modifier of its parent, we propose a dependency-tree based metric by extracting the headwords chains from both the hypothesis and the reference dependency trees.</S>
    <S sid="67" ssid="33">A headword chain is a sequence of words which corresponds to a path in the dependency tree.</S>
    <S sid="68" ssid="34">Take the dependency tree in Figure 2 as the example, the 2-word headword chains include have I, have pen, pen a, and pen red.</S>
    <S sid="69" ssid="35">Before using the headword chains, we need to extract them out of the dependency trees.</S>
    <S sid="70" ssid="36">Figure 3 gives an algorithm which recursively extracts the headword chains in a dependency tree from short to long.</S>
    <S sid="71" ssid="37">Having the headword chains, the headword chain based metric is computed in a manner similar to BLEU, but using n-grams of dependency chains rather than n-grams in the linear order of the sentence.</S>
    <S sid="72" ssid="38">For every hypothesis, the fractions of headword chains which also appear in the reference dependency trees are averaged as the final score.</S>
    <S sid="73" ssid="39">Using HWCM to denote the headword chain based metric, it is computed as follows: where D is chosen as the maximum length chain considered.</S>
    <S sid="74" ssid="40">We may also wish to consider dependency relations over more than two words that are contiguous but not in a single ancestor chain in the dependency tree.</S>
    <S sid="75" ssid="41">For this reason, the two methods described in section 3.1 are used to compute the similarity of dependency trees between the MT hypothesis and its references, and the corresponding metrics are denoted DSTM for dependency subtree metric and DTKM for dependency tree kernel metric.</S>
  </SECTION>
  <SECTION title="3 Experiments" number="4">
    <S sid="76" ssid="1">Our testing data contains two parts.</S>
    <S sid="77" ssid="2">One part is a set of 665 English sentences generated by a ChineseEnglish MT system.</S>
    <S sid="78" ssid="3">And for each MT hypothesis, three reference translations are associated with it.</S>
    <S sid="79" ssid="4">Input: dependency tree T, maximum length N of the headword chain Output: headword chains from length 1 to N The human judgments, on a scale of 1 to 5, were collected at the 2003 Johns Hopkins Speech and Language Summer Workshop, which tells the overall quality of the MT hypotheses.</S>
    <S sid="80" ssid="5">The translations were generated by the alignment template system of Och (2003).</S>
    <S sid="81" ssid="6">This testing set is called JHU testing set in this paper.</S>
    <S sid="82" ssid="7">The other set of testing data is from MT evaluation workshop at ACL05.</S>
    <S sid="83" ssid="8">Three sets of human translations (E01, E03, E04) are selected as the references, and the outputs of seven MT systems (E9 E11 E12 E14 E15 E17 E22) are used for testing the performance of our syntactic metrics.</S>
    <S sid="84" ssid="9">Each set of MT translations contains 929 English sentences, each of which is associated with human judgments for its fluency and adequacy.</S>
    <S sid="85" ssid="10">The fluency and adequacy scores both range from 1 to 5.</S>
    <S sid="86" ssid="11">Our syntactic metrics are motivated by a desire to better capture grammaticality in MT evaluation, and thus we are most interested in how well they correlate with human judgments of sentences&#8217; fluency, rather than the adequacy of the translation.</S>
    <S sid="87" ssid="12">To do this, the syntactic metrics (computed with the Collins (1999) parser) as well as BLEU were used to evaluate hypotheses in the test set from ACL05 MT workshop, which provides both fluency and adequacy scores for each sentence, and their Pearson coefficients of correlation with the human fluency scores were computed.</S>
    <S sid="88" ssid="13">For BLEU and HWCM, in order to avoid assigning zero scores to individual sentences, when precision for n-grams of a particular length is zero we replace it with an epsilon value of 10&#8722;3.</S>
    <S sid="89" ssid="14">We choose E14 and E15 as two representative MT systems in the ACL05 MT workshop data set, which have relatively high human scores and low human scores respectively.</S>
    <S sid="90" ssid="15">The results are shown in Table 1 and Table 2, with every metric indexed by the maximum n-gram length or subtree depth.</S>
    <S sid="91" ssid="16">The last row of the each table shows the treekernel-based measures, which have no depth parameter to adjust, but implicitly consider all depths.</S>
    <S sid="92" ssid="17">The results show that in both systems our syntactic metrics all achieve a better performance in the correlation with human judgments of fluency.</S>
    <S sid="93" ssid="18">We also notice that with the increasing of the maximum length of n-grams, the correlation of BLEU with human judgments does not necessarily increase, but decreases in most cases.</S>
    <S sid="94" ssid="19">This is contrary to the argument in BLEU which says that longer n-grams better represent the sentences&#8217; fluency than the shorter ones.</S>
    <S sid="95" ssid="20">The problem can be explained by the limitation of the reference translations.</S>
    <S sid="96" ssid="21">In our experiments, every hypothesis is evaluated by referring to three human translations.</S>
    <S sid="97" ssid="22">Since the three human translations can only cover a small set of possible translations, with the increasing of n-gram length, more and more correct n-grams might not be found in the references, so that the fraction of longer ngrams turns to be less reliable than the short ones and hurts the final scores.</S>
    <S sid="98" ssid="23">In the the corpus-level evaluation of a MT system, the sparse data problem will be less serious than in the sentence-level evaluation, since the overlapping n-grams of all the sentences and their references will be summed up.</S>
    <S sid="99" ssid="24">So in the traditional BLEU algorithm used for corpuslevel evaluation, a maximum n-gram of length 4 or 5 is usually used.</S>
    <S sid="100" ssid="25">A similar trend can be found in syntax tree and dependency tree based metrics, but the decreasing ratios are much lower than BLEU, which indicates that the syntactic metrics are less affected by the sparse data problem.</S>
    <S sid="101" ssid="26">The poor performance of tree-kernel based metrics also confirms our arguments on the sparse data problem, since the kernel measures implicitly consider the overlapping ratios of the sub-trees of all shapes, and thus will be very much affected by the sparse data problem.</S>
    <S sid="102" ssid="27">Though our syntactic metrics are proposed for evaluating the sentences&#8217; fluency, we are curious how well they do in the overall evaluation of sentences.</S>
    <S sid="103" ssid="28">Thus we also computed each metric&#8217;s correlation with human overall judgments in E14, E15 and JHU testing set.</S>
    <S sid="104" ssid="29">The overall human score for each sentence in E14 and E15 is computed by summing up its fluency score and adequacy score.</S>
    <S sid="105" ssid="30">The results are shown in Table 3, Table 4, and Table 5.</S>
    <S sid="106" ssid="31">We can see that the syntactic metrics achieve competitive correlations in the test, among which HWCM, based on headword chains, gives better performances in evaluation of E14 and E15, and a slightly worse performance in JHU testing set than BLEU.</S>
    <S sid="107" ssid="32">Just as with the fluency evaluation, HWCM and other syntactic metrics present more stable performance as the n-gram&#8217;s length (subtree&#8217;s depth) increases.</S>
    <S sid="108" ssid="33">While sentence-level evaluation is useful if we are interested in a confidence measure on MT outputs, corpus level evaluation is more useful for comparing MT systems and guiding their development.</S>
    <S sid="109" ssid="34">Does higher sentence-level correlation necessarily indicate higher correlation in corpus-level evaluation?</S>
    <S sid="110" ssid="35">To answer this question, we used our syntactic metrics and BLEU to evaluate all the human-scored MT systems (E9 E11 E12 E14 E15 E17 E22) in the ACL05 MT workshop test set, and computed the correlation with human overall judgments.</S>
    <S sid="111" ssid="36">The human judgments for an MT system are estimated by summing up each sentence&#8217;s human overall score.</S>
    <S sid="112" ssid="37">Table 6 shows the results indexed by different ngrams and tree depths.</S>
    <S sid="113" ssid="38">We can see that the corpus-level correlation and the sentence-level correlation don&#8217;t always correspond.</S>
    <S sid="114" ssid="39">For example, the kernel dependency subtree metric achieves a very good performance in corpuslevel evaluation, but it has a poor performance in sentence-level evaluation.</S>
    <S sid="115" ssid="40">Sentence-level correlation reflects the relative qualities of different hypotheses in a MT system, which does not indicate any information for the relative qualities of different systems.</S>
    <S sid="116" ssid="41">If we uniformly decrease or increase every hypothesis&#8217;s automatic score in a MT system, the sentence-level correlation with human judgments will remain the same, but the corpus-level correlation will be changed.</S>
    <S sid="117" ssid="42">So we might possibly get inconsistent corpus-level and sentence-level correlations.</S>
    <S sid="118" ssid="43">From the results, we can see that with the increase of n-grams length, the performance of BLEU and HWCM will first increase up to length 5, and then starts decreasing, where the optimal n-gram length of 5 corresponds to our usual setting for BLEU algorithm.</S>
    <S sid="119" ssid="44">This shows that corpus-level evaluation, compared with the sentence-level evaluation, is much less sensitive to the sparse data problem and thus leaves more space for making use of comprehensive evaluation metrics.</S>
    <S sid="120" ssid="45">We speculate this is why the kernel dependency subtree metric achieves the best performance among all the metrics.</S>
    <S sid="121" ssid="46">We can also see that HWCM and DSTM beat BLEU in most cases and exhibit more stable performance.</S>
    <S sid="122" ssid="47">An example hypothesis which was assigned a high score by HWCM but a low score by BLEU is shown in Table 7.</S>
    <S sid="123" ssid="48">In this particular sentence, the common head-modifier relations &#8220;aboard +&#8211; plane&#8221; and &#8220;plane +&#8211; the&#8221; caused a high headword chain overlap, but did not appear as common n-grams counted by BLEU.</S>
    <S sid="124" ssid="49">The hypothesis is missing the word &#8220;fifth&#8221;, but was nonetheless assigned a high score by human judges.</S>
    <S sid="125" ssid="50">This is probably due to its fluency, which HWCM seems to capture better than BLEU.</S>
  </SECTION>
  <SECTION title="4 Conclusion" number="5">
    <S sid="126" ssid="1">This paper introduces several syntax-based metrics for the evaluation of MT, which we find to be particularly useful for predicting a hypothesis&#8217;s fluency.</S>
    <S sid="127" ssid="2">The syntactic metrics, except the kernel based ones, all outperform BLEU in sentence-level fluency evaluation.</S>
    <S sid="128" ssid="3">For the overall evaluation of sentences for fluency and adequacy, the metric based on headword chain performs better than BLEU in both sentencelevel and corpus-level correlation with human judgments.</S>
    <S sid="129" ssid="4">The kernel based metrics, though poor in sentence-level evaluation, achieve the best results in corpus-level evaluation, where sparse data are less of a barrier.</S>
    <S sid="130" ssid="5">Our syntax-based measures require the existence of a parser for the language in question, however it is worth noting that a parser is required for the target language only, as all our measures of similarity are defined across hypotheses and references in the same language.</S>
    <S sid="131" ssid="6">Our results, in particular for the primarily structural STM, may be surprising in light of the fact that the parser is not designed to handle ill-formed or ungrammatical sentences such as those produced by machine translation systems.</S>
    <S sid="132" ssid="7">Modern statistical parsers have been tuned to discriminate good structures from bad rather than good sentences from bad.</S>
    <S sid="133" ssid="8">Indeed, in some recent work on re-ranking machine translation hypotheses (Och et al., 2004), parserproduced structures were not found to provide helpful information, as a parser is likely to assign a goodlooking structure to even a lousy input hypothesis.</S>
    <S sid="134" ssid="9">However, there is an important distinction between the use of parsers in re-ranking and evaluation &#8211; in the present work we are looking for similarities between pairs of parse trees rather than at features of a single tree.</S>
    <S sid="135" ssid="10">This means that the syntax-based evaluation measures can succeed even when the tree structure for a poor hypothesis looks reasonable on its own, as long as it is sufficiently distinct from the structures used in the references.</S>
    <S sid="136" ssid="11">We speculate that by discriminatively training weights for the individual subtrees and headword chains used by the syntax-based metrics, further improvements in evaluation accuracy are possible.</S>
    <S sid="137" ssid="12">Acknowledgments We are very grateful to Alex Kulesza for assistance with the JHU data.</S>
    <S sid="138" ssid="13">This work was partially supported by NSF ITR IIS-09325646 and NSF ITR IIS-0428020.</S>
  </SECTION>
</PAPER>
