[
  {
    "citance_No": 1, 
    "citing_paper_id": "P09-2035", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Hao, Xiong | Wenwen, Xu | Haitao, Mi | Yang, Liu | Qun, Liu", 
    "raw_text": "Forest-based rule extractor (Mi and Huang 2008) is used with a pruning thresh old p=3", 
    "clean_text": "Forest-based rule extractor (Mi and Huang 2008) is used with a pruning thresh old p=3.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "P13-1083", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Akihiro, Tamura | Taro, Watanabe | Eiichiro, Sumita | Hiroya, Takamura | Manabu, Okumura", 
    "raw_text": "Finally, a forest-to-string MTmodelis learned with Zhang et al, (2011), which ex tracts translation rules by a forest-based variant of 11http: //triplet.cc/software/corbit/ IND REF BS 27.54 Mono 27.66 26.83 Joint [s] 28.00 28.00 Joint [P] 26.36 26.72 Joint [s+P] 27.99 27.82 Ind [s] 28.00 27.93 Ind [P] 28.11 28.63 Ind [s+P] 28.13 28.62 Table 1: Performance on Japanese-to-English Translation Measured by BLEU (%) the GHKM algorithm (Mi and Huang, 2008 )after each parse tree is restructured into a binarizedpacked forest", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "P12-3022", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Xianchao, Wu | Takuya, Matsuzaki | Jun'ichi, Tsujii", 
    "raw_text": "In Table 1, note that tree-to-string rules are generic and applicable to many syntax-based models such as tree/forest-to 1This classification is inspired by and extends the Table 1 in (Mi and Huang, 2008)", 
    "clean_text": "This classification is inspired by and extends the Table 1 in (Mi and Huang, 2008).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "P12-3022", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Xianchao, Wu | Takuya, Matsuzaki | Jun'ichi, Tsujii", 
    "raw_text": "In addition, we also implemented the algorithms proposed by Mi and Huang (2008) and Wu et al (2010) for extracting rules from word-aligned PCFG/HPSG forest-string pairs", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "C10-1123", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Zhaopeng, Tu | Yang, Liu | Young-Sook, Hwang | Qun, Liu | Shouxun, Lin", 
    "raw_text": "Recent studies have shown that SMT systems can benefit from widening the annotation pipeline: using packed forests instead of 1-best trees (Mi and Huang,2008), word lattices instead of 1-bestsegmentations (Dyer et al, 2008), and weighted alignment matrices instead of 1-best alignments (Liu et al, 2009) .Along the same direction, we propose a structure called dependency forest, which encodes exponentially many dependency trees compactly, for dependency-based translation systems", 
    "clean_text": "Recent studies have shown that SMT systems can benefit from widening the annotation pipeline: using packed forests instead of 1-best trees (Mi and Huang,2008), word lattices instead of 1-best segmentations (Dyer et al, 2008), and weighted alignment matrices instead of 1-best alignments (Liu et al, 2009).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "C10-1123", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Zhaopeng, Tu | Yang, Liu | Young-Sook, Hwang | Qun, Liu | Shouxun, Lin", 
    "raw_text": "The GHKM algorithm (Galley et al, 2004), which is originally developed for extracting treeto-string rules from 1-best trees, has been successfully extended to packed forests recently (Mi and Huang, 2008)", 
    "clean_text": "The GHKM algorithm (Galley et al, 2004), which is originally developed for extracting tree-to-string rules from 1-best trees, has been successfully extended to packed forests recently (Mi and Huang, 2008).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "C10-1123", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Zhaopeng, Tu | Yang, Liu | Young-Sook, Hwang | Qun, Liu | Shouxun, Lin", 
    "raw_text": "We follow Mi and Huang (2008) to assign a fractional count to each well-formed structure", 
    "clean_text": "We follow Mi and Huang (2008) to assign a fractional count to each well-formed structure.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "C10-1123", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Zhaopeng, Tu | Yang, Liu | Young-Sook, Hwang | Qun, Liu | Shouxun, Lin", 
    "raw_text": "While Mi and Huang (2008) and we both use forests for rule extraction, there remain two major differences", 
    "clean_text": "While Mi and Huang (2008) and we both use forests for rule extraction, there remain two major differences.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "C10-1123", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Zhaopeng, Tu | Yang, Liu | Young-Sook, Hwang | Qun, Liu | Shouxun, Lin", 
    "raw_text": "Firstly, Mi and Huang (2008) use a packed forest, while we use a dependency forest", 
    "clean_text": "Firstly, Mi and Huang (2008) use a packed forest, while we use a dependency forest.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "C10-1123", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Zhaopeng, Tu | Yang, Liu | Young-Sook, Hwang | Qun, Liu | Shouxun, Lin", 
    "raw_text": "Secondly, The GHKM algorithm (Galley et al, 2004), which is originally developed for extracting tree-to-string rules from 1-best trees, has been successfully extended to packed forests recently (Mi and Huang, 2008)", 
    "clean_text": "Secondly, the GHKM algorithm (Galley et al, 2004), which is originally developed for extracting tree-to-string rules from 1-best trees, has been successfully extended to packed forests recently (Mi and Huang, 2008).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "D09-1108", 
    "citing_paper_authority": 4, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Chew Lim, Tan", 
    "raw_text": "To overcome parse error for SMT, Mi and Huang (2008) propose forest-based translation by using a packed forest instead of a single syntax tree as the translation input", 
    "clean_text": "To overcome parse error for SMT, Mi and Huang (2008) propose forest-based translation by using a packed forest instead of a single syntax tree as the translation input.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "D09-1108", 
    "citing_paper_authority": 4, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Chew Lim, Tan", 
    "raw_text": "Instead, it does top-down recursive matching from each node one-by-one with each translation rule in the rule set (Mi and Huang 2008)", 
    "clean_text": "Instead, it does top-down recursive matching from each node one-by-one with each translation rule in the rule set (Mi and Huang 2008).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "D09-1108", 
    "citing_paper_authority": 4, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Chew Lim, Tan", 
    "raw_text": "Following (Mi and Huang 2008), we use viterbi algorithm to prune the forest", 
    "clean_text": "Following (Mi and Huang 2008), we use viterbi algorithm to prune the forest.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "D09-1108", 
    "citing_paper_authority": 4, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Chew Lim, Tan", 
    "raw_text": "Instead of using a static pruning threshold (Mi and Huang 2008), we set the threshold as the distance of the probabilities of the nth best tree and the 1st best tree", 
    "clean_text": "Instead of using a static pruning threshold (Mi and Huang 2008), we set the threshold as the distance of the probabilities of the nth best tree and the 1st best tree.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "P09-1020", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Aiti, Aw | Chew Lim, Tan", 
    "raw_text": "Mi and Huang (2008) propose a for est-based rule extraction algorithm, which learn tree to string rules from source forest and target string", 
    "clean_text": "Mi and Huang (2008) propose a forest-based rule extraction algorithm, which learn tree to string rules from source forest and target string.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "P09-1020", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Aiti, Aw | Chew Lim, Tan", 
    "raw_text": "using the algorithm of Mi and Huang (2008) 2", 
    "clean_text": "As we know, the traditional tree-to-string rules can be easily extracted from ? using the algorithm of Mi and Huang (2008).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "P09-1020", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Aiti, Aw | Chew Lim, Tan", 
    "raw_text": "We would like 2 Mi and Huang (2008) extend the tree-based rule extraction", 
    "clean_text": "Mi and Huang (2008) extend the tree-based rule extraction.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "P09-1020", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Aiti, Aw | Chew Lim, Tan", 
    "raw_text": "2) Employ the forest-based tree rule extraction algorithm (Mi and Huang, 2008) to extract our rules from the non-complete forest", 
    "clean_text": "Employ the forest-based tree rule extraction algorithm (Mi and Huang, 2008) to extract our rules from the non-complete forest.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "P09-1020", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Aiti, Aw | Chew Lim, Tan", 
    "raw_text": "Then we can easily ex tract our rules from the CF using the tree rule extraction algorithm (Mi and Huang, 2008)", 
    "clean_text": "Then we can easily extract our rules from the CF using the tree rule extraction algorithm (Mi and Huang, 2008).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "P09-1020", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Hui, Zhang | Min, Zhang | Haizhou, Li | Aiti, Aw | Chew Lim, Tan", 
    "raw_text": "Finally, to calculate rule feature probabilities for our model, we need to calculate the fractional counts (it is a kind of probability defined in Mi and Huang, 2008) of each translation rule in a parse forest", 
    "clean_text": "Finally, to calculate rule feature probabilities for our model, we need to calculate the fractional counts (it is a kind of probability defined in Mi and Huang, 2008) of each translation rule in a parse forest.", 
    "keep_for_gold": 0
  }
]
