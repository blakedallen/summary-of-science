[
  {
    "citance_No": 1, 
    "citing_paper_id": "E95-1028", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "David M., Carter", 
    "raw_text": "In compilation, one may compose any or all of (a) the two-level rule set, (b) the set of affixes and their allowed combinations, and (c) the lexicon; see Kaplan and Kay (1994/ for an exposition of the mathematical basis", 
    "clean_text": "see Kaplan and Kay (1994) for an exposition of the mathematical basis.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "P99-1033", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Kemal, Oflazer", 
    "raw_text": "We assume that the reader is familiar with the basic concepts of finite state transducers (FST hereafter), finite state devices that map between two regular languages U and L (Kaplan and Kay, 1994)", 
    "clean_text": "We assume that the reader is familiar with the basic concepts of finite state transducers (FST hereafter), finite state devices that map between two regular languages U and L (Kaplan and Kay, 1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "C96-1077", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Edmund, Grimley-Evans | George Anton, Kiraz | Stephen G., Pulman", 
    "raw_text": "Two-levelformalisins based on that introduced by (Koskenniemi, 1983) (see also (Ritchie et al, 1992) and (Kaplan and Kay, 1994)) are widely used in practical NLP systems, and are deservedly regarded as something of a standard", 
    "clean_text": "Two-level formal lists based on that introduced by (Koskenniemi, 1983) (see also (Ritchie et al, 1992) and (Kaplan and Kay, 1994)) are widely used in practical NLP systems, and are deservedly regarded as something of a standard.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "C96-1077", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Edmund, Grimley-Evans | George Anton, Kiraz | Stephen G., Pulman", 
    "raw_text": "Unlike arbitrary regulm &apos; n-relations, same-length regular relations m &apos; e closed under intersection and complementation ,be.cause a theorem tells us that they correspond to regular languages over (e-free )ntuplcs of symbols (Kaplan and Kay, 1994, p. 342)", 
    "clean_text": "Unlike arbitrary regularization, same-length regular n-relations are closed under intersection and complementation , because a theorem tells us that they correspond to regular languages over of symbols (Kaplan and Kay, 1994, p. 342).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "C96-1077", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Edmund, Grimley-Evans | George Anton, Kiraz | Stephen G., Pulman", 
    "raw_text": "(Kaplan and Kay, 1994) express CR rules by the relation, 1 Restrict (c, l r): 7r*lc~r* N ~c*crlr* (15) This expression &apos; does not allow for the possibility that the context substring of one application might overlap with the centre and context portions of a preceding one &apos; (p. 371)", 
    "clean_text": "(Kaplan and Kay, 1994) express CR rules by the relation.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "C96-1077", 
    "citing_paper_authority": 9, 
    "citing_paper_authors": "Edmund, Grimley-Evans | George Anton, Kiraz | Stephen G., Pulman", 
    "raw_text": "1This expression is an expansion of Restrict in (Kaplan and Kay, 1994, p. 371)", 
    "clean_text": "This expression is an expansion of Restrict in (Kaplan and Kay, 1994, p. 371).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "W02-1506", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Ronald M., Kaplan | Tracy Holloway, King | John T., Maxwell III", 
    "raw_text": "XLEtokenizing transducers are compiled from specifications expressed in the sophisticated Xerox finite state calculus (Beesley and Karttunen, 2002) .The Xerox calculus includes the composition ,ignore, and substitution operator discussed by Kaplan and Kay (1994) and the priority-union operator of Kaplan and Newman (1997)", 
    "clean_text": "The Xerox calculus includes the composition, ignore, and substitution operator discussed by Kaplan and Kay (1994) and the priority-union operator of Kaplan and Newman (1997).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "A00-2039", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Markus, Walther", 
    "raw_text": "The 2This can be seen as an application fthe ignore operator of Kaplan and Kay (1994), where E* is being ignored", 
    "clean_text": "This can be seen as an application of the ignore operator of Kaplan and Kay (1994), where E* is being ignored.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "P07-1117", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Fran&ccedil;ois, Barth&eacute;lemy", 
    "raw_text": "Rules are com piled into finite-state transducers and merged using transducer composition (Kaplan and Kay, 1994) .The other important trend of Finite-State Morphology is Two-Level Morphology (Koskenniemi, 1983)", 
    "clean_text": "Rules are compiled into finite-state transducers and merged using transducer composition (Kaplan and Kay, 1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "P07-1117", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Fran&ccedil;ois, Barth&eacute;lemy", 
    "raw_text": "Describing a rule 2Two other compilation algorithm also work on the rules of this example (Kaplan and Kay, 1994), (Grimley-Evans et al, 1996)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "P12-3011", 
    "citing_paper_authority": 4, 
    "citing_paper_authors": "Terry, Tai | Richard W., Sproat | Jeffrey S., Sorensen | Brian, Roark | Michael D., Riley | Cyril, Allauzen", 
    "raw_text": "The context-dependent rewrite algorithm used is that of Mohri and Sproat (1996), and 63see also Kaplan and Kay (1994)", 
    "clean_text": "The context-dependent rewrite algorithm used is that of Mohri and Sproat (1996), and see also Kaplan and Kay (1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "W12-6202", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Dale, Gerdemann | Mans, Hulden", 
    "raw_text": "In particular, constructing an OT grammar step-by-step as the composition of a set of transducers, akin to rewrite rule com position in (Kaplan and Kay, 1994), has offered the attractive possibility of simultaneously modeling OT parsing and generation as a natural consequence of the bi directionality of finite-state transducers", 
    "clean_text": "In particular, constructing an OT grammar step-by-step as the composition of a set of transducers, akin to rewrite rule com position in (Kaplan and Kay, 1994), has offered the attractive possibility of simultaneously modeling OT parsing and generation as a natural consequence of the bi-directionality of finite-state transducers.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "E99-1017", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Dale, Gerdemann | Gertjan, van Noord", 
    "raw_text": "An algorithm for compilation into transducers was provided by Kaplan and Kay (1994)", 
    "clean_text": "An algorithm for compilation into transducers was provided by Kaplan and Kay (1994).", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "E99-1017", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Dale, Gerdemann | Gertjan, van Noord", 
    "raw_text": "Backreferencing has been implicit in previous research, such as in the& quot; batch rules& quot; of Kaplan and Kay (1994), bracketing transducers for finite-state parsing (Karttunen, 1996), and the& quot; LocalExtension& quot; operation of Roche and Schabes (1995)", 
    "clean_text": "Back referencing has been implicit in previous research, such as in the batch rules of Kaplan and Kay (1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "E99-1017", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Dale, Gerdemann | Gertjan, van Noord", 
    "raw_text": "2.1.2 Treatment of Markers Previous algorithms for compiling rewrite rules into transducers have followed Kaplan and Kay (1994) by introducing special marker symbols (markers) into strings in order to mark off candidate regions for replacement", 
    "clean_text": "Previous algorithms for compiling rewrite rules into transducers have followed Kaplan and Kay (1994) by introducing special marker symbols (markers) into strings in order to mark off candidate regions for replacement.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "E99-1017", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Dale, Gerdemann | Gertjan, van Noord", 
    "raw_text": "For example, the sequence [i,0] represents a non-marker use of the symbol I. 2.1.3 Uti l i ties Before describing the algorithm, it will be helpful to have at our disposal a few general tools, most of which were described already in Kaplan and Kay (1994)", 
    "clean_text": "it will be helpful to have at our disposal a few general tools, most of which were described already in Kaplan and Kay (1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "N10-1139", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Cyril, Allauzen | Shankar, Kumar | Wolfgang, Macherey | Mehryar, Mohri | Michael D., Riley", 
    "raw_text": "For batch context-dependent rules, the context of the application for all rules is determined at once before their application (Kaplan and Kay, 1994)", 
    "clean_text": "For batch context-dependent rules, the context of the application for all rules is determined at once before their application (Kaplan and Kay, 1994).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "C96-2105", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Andre, Kempe | Lauri, Karttunen", 
    "raw_text": "Phonological rewrite-rules (Kaplan and Kay, 1994), two-level rules (Koskenniemi 1983), syntactic disarnbiguation rules (Kar ]sson et al1994, Koskenniemi, Tapanainen, and Voutilainen 1992), and part-of-speech assignment rules (Brill 1992, Roche and Schabes 1995) are examples of replacement in context of finite-state grammars", 
    "clean_text": "Phonological rewrite-rules (Kaplan and Kay, 1994), two-level rules (Koskenniemi 1983), syntactic disarnbiguation rules (Karlsson et al 1994, Koskenniemi, Tapanainen, and Voutilainen 1992), and part-of-speech assignment rules (Brill 1992, Roche and Schabes 1995) are examples of replacement in context of finite-state grammars.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "C96-2105", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Andre, Kempe | Lauri, Karttunen", 
    "raw_text": "Kaplan and Kay (1994) describe a general method representing a replacement procedure as finite-state transduction", 
    "clean_text": "Kaplan and Kay (1994) describe a general method representing a replacement procedure as finite-state transduction.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "C96-2105", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Andre, Kempe | Lauri, Karttunen", 
    "raw_text": "(Kaplan and Kay, 1994, p. 349)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }
]
