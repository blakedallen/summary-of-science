[
  {
    "citance_No": 1, 
    "citing_paper_id": "C96-2155", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Hadar, Shemtov", 
    "raw_text": "The method is an extension of the chart based generation algorithm described in Kay (1996)", 
    "clean_text": "The method is an extension of the chart based generation algorithm described in Kay (1996).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "C96-2155", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Hadar, Shemtov", 
    "raw_text": "Kay (1996) provides a mole general view of the chart structure which is designed to provide for generation advantages comparable to those it provides for parsing", 
    "clean_text": "Kay (1996) provides a more general view of the chart structure which is designed to provide for generation advantages comparable to those it provides for parsing.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "C96-2155", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Hadar, Shemtov", 
    "raw_text": "We will concentrate on a detailed escription of these annotations as they are a crucial component of our method and they are the major difference between the current proposal and the one described in Kay (1996)", 
    "clean_text": "We will concentrate on a detailed description of these annotations as they are a crucial component of our method and they are the major difference between the current proposal and the one described in Kay (1996).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "P14-1040", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Bikash, Gyawali | Claire, Gardent", 
    "raw_text": "(Wang, 1980) uses handwritten rules to generate sentences from an extended predicate logic formalism; (Shieber et al., 1990) introduces a head-driven algorithm for generating from logical forms; (Kay, 1996) defines a chart based algorithm which enhances efficiency by minimising the number of semantically incomplete phrases being built; and (Shemtov,1996) presents an extension of the chart based generation algorithm presented in (Kay, 1996) which supports the generation of multiple paraphrases from underspecified semantic input", 
    "clean_text": "(Wang, 1980) uses handwritten rules to generate sentences from an extended predicate logic formalism; (Shieber et al., 1990) introduces a head-driven algorithm for generating from logical forms; (Kay, 1996) defines a chart based algorithm which enhances efficiency by minimising the number of semantically incomplete phrases being built; and (Shemtov, 1996) presents an extension of the chart based generation algorithm presented in (Kay, 1996) which supports the generation of multiple paraphrases from underspecified semantic input.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "W08-1112", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Yuqing, Guo | Haifeng, Wang | Josef, van Genabith", 
    "raw_text": "The PCFG-based generation algorithms are implemented in terms of a chart generator (Kay, 1996)", 
    "clean_text": "The PCFG-based generation algorithms are implemented in terms of a chart generator (Kay, 1996).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "N07-1022", 
    "citing_paper_authority": 15, 
    "citing_paper_authors": "Yuk Wah, Wong | Raymond J., Mooney", 
    "raw_text": "Kay (1996) identified parsing charts as such an architecture, which led to the development of various chart generation algorithms: Car roll et al (1999) for HPSG, Bangalore et al (2000) for LTAG, Moore (2002) for unification grammars, 178White and Baldridge (2003) for CCG", 
    "clean_text": "Kay (1996) identified parsing charts as such an architecture, which led to the development of various chart generation algorithms: Carroll et al (1999) for HPSG, Bangalore et al (2000) for LTAG, Moore (2002) for unification grammars, White and Baldridge (2003) for CCG.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "W11-1609", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Scott, Martin | Michael, White", 
    "raw_text": "In the chart realization tradition (Kay, 1996), the OpenCCG realizer takes logical forms as input and produces strings by combining signs for lexical items", 
    "clean_text": "In the chart realization tradition (Kay, 1996), the OpenCCG realizer takes logical forms as input and produces strings by combining signs for lexical items.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "W05-1510", 
    "citing_paper_authority": 20, 
    "citing_paper_authors": "Hiroko, Nakanishi | Yusuke, Miyao | Jun'ichi, Tsujii", 
    "raw_text": "We followed two partial solutions to this problem by Kay (1996) .The one is indexing edges with the semantic variables (e.g., circled$ in Figure 2)", 
    "clean_text": "We followed two partial solutions to this problem by Kay (1996).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "D07-1028", 
    "citing_paper_authority": 12, 
    "citing_paper_authors": "Deirdre, Hogan | Conor, Cafferkey | Aoife, Cahill | Josef, van Genabith", 
    "raw_text": "The baseline generation algorithm, following Kay (1996)? s work on chart generation, already contains the hard constraint that when combining two chart edges they must cover disjoint sets of words", 
    "clean_text": "The baseline generation algorithm, following Kay (1996)'s work on chart generation, already contains the hard constraint that when combining two chart edges they must cover disjoint sets of words.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "W05-1605", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Claire, Gardent | Eric, Kow", 
    "raw_text": "It is a bottom up, tabular algorithm [Kay, 1996 ]optimised for TAGs", 
    "clean_text": "It is a bottom up, tabular algorithm [Kay, 1996] optimised for TAGs.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "P02-1003", 
    "citing_paper_authority": 15, 
    "citing_paper_authors": "Alexander, Koller | Kristina, Striegnitz", 
    "raw_text": "Following Stone and Doran (1997) and Kay (1996), we enhance this TAG grammar with a syntax-semantics interface in which nonterminal nodes of the elementary trees are equipped with index variables, which can be bound to individuals in the semantic input", 
    "clean_text": "Following Stone and Doran (1997) and Kay (1996), we enhance this TAG grammar with a syntax-semantics interface in which nonterminal nodes of the elementary trees are equipped with index variables, which can be bound to individuals in the semantic input.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "W06-1404", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Sebastian, Varges", 
    "raw_text": "We follow a bottom-up chart generation approach (Kay, 1996) for production systems similar to (Varges, 2005)", 
    "clean_text": "We follow a bottom-up chart generation approach (Kay, 1996) for production systems similar to (Varges, 2005).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "C10-1042", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Claire, Gardent | Laura, Perez-Beltrachini", 
    "raw_text": "Forinstance, (Kay, 1996) proposes to reduce the number of constituents built during realisation by only considering for combination constituents with non overlapping semantics and compatible indices", 
    "clean_text": "For instance, (Kay, 1996) proposes to reduce the number of constituents built during realisation by only considering for combination constituents with non overlapping semantics and compatible indices.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "C10-1042", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Claire, Gardent | Laura, Perez-Beltrachini", 
    "raw_text": "The tree combining algorithm used after filtering has taken place, is a bottom-up tabular algorithm (Kay, 1996 )optimised for TAGs", 
    "clean_text": "The tree combining algorithm used after filtering has taken place, is a bottom-up tabular algorithm (Kay, 1996) optimised for TAGs.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "P01-1028", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Claire, Gardent | Stefan, Thater", 
    "raw_text": "(Kay, 1996)) is to index edges with semantic indices (for instance, the edge with category N/x: dog (x) will be indexed with x) and to restrict edge combination to these edges which have compatible indices", 
    "clean_text": "The standard solution to this problem (cf. (Kay, 1996)) is to index edges with semantic indices (for instance, the edge with category N/x: dog (x) will be indexed with x) and to restrict edge combination to these edges which have compatible indices.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "C10-2039", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Claire, Gardent | Benjamin, Gottesman | Laura, Perez-Beltrachini", 
    "raw_text": "More recently, Carroll and Oepen (2005) present a perfor 1As first noted by Brew (1992) and Kay (1996), given aset of n modifiers all modifying the same structure, all possible intermediate structures will be constructed ,i.e., 2n+1", 
    "clean_text": "More recently, Carroll and Oepen (2005) present a perfor 1As first noted by Brew (1992) and Kay (1996), given a set of n modifiers all modifying the same structure, all possible intermediate structures will be constructed, i.e., 2n+1.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "P98-1060", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Martin C., Emele | Michael, Dorna", 
    "raw_text": "The work in Kay (1996) and the extension to ambiguous input in Shemtov (1996) and Shemtov (1997) describes a chart based generation process which takes packed representations a input and generates all paraphrases without expanding first into disjunctive normal form", 
    "clean_text": "The work in Kay (1996) and the extension to ambiguous input in Shemtov (1996) and Shemtov (1997) describes a chart based generation process which takes packed representations as input and generates all paraphrases without expanding first into disjunctive normal form.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "P07-1042", 
    "citing_paper_authority": 6, 
    "citing_paper_authors": "Claire, Gardent | Eric, Kow", 
    "raw_text": "The basic surface realisation algorithm used is a bot tom up, tabular realisation algorithm (Kay, 1996 )optimised for TAGs", 
    "clean_text": "The basic surface realisation algorithm used is a bot tom up, tabular realisation algorithm (Kay, 1996) optimised for TAGs.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "P06-1130", 
    "citing_paper_authority": 16, 
    "citing_paper_authors": "Aoife, Cahill | Josef, van Genabith", 
    "raw_text": "The generation algorithm is based on chart generation as first introduced by Kay (1996) with Viterbi-pruning", 
    "clean_text": "The generation algorithm is based on chart generation as first introduced by Kay (1996) with Viterbi-pruning.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "P06-1130", 
    "citing_paper_authority": 16, 
    "citing_paper_authors": "Aoife, Cahill | Josef, van Genabith", 
    "raw_text": "This results in efficiently treating the well known problem originally described in Kay (1996), where one unnecessarily retains sub-optimal strings", 
    "clean_text": "This results in efficiently treating the well known problem originally described in Kay (1996), where one unnecessarily retains sub-optimal strings.", 
    "keep_for_gold": 0
  }
]
