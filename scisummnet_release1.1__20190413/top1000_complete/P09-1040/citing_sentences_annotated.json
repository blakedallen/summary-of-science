[
  {
    "citance_No": 1, 
    "citing_paper_id": "C10-1094", 
    "citing_paper_authority": 7, 
    "citing_paper_authors": "Joakim, Nivre | Laura, Rimell | Ryan, McDonald | Carlos, G&oacute;mez-Rodr&iacute;guez", 
    "raw_text": "For MaltParser we used the projective Stack algorithm (Nivre, 2009) with default settings and a slightly enriched feature model", 
    "clean_text": "For MaltParser we used the projective Stack algorithm (Nivre, 2009) with default settings and a slightly enriched feature model.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "P14-1042", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Weiwei, Sun | Yantao, Du | Xin, Kou | Shuoyang, Ding | Xiaojun, Wan", 
    "raw_text": "To deal with crossing arcs, Titov et al (2009) and Nivre (2009) designed a SWAP transition that switches the position of the two topmost nodes on the stack", 
    "clean_text": "To deal with crossing arcs, Titov et al (2009) and Nivre (2009) designed a SWAP transition that switches the position of the two topmost nodes on the stack.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "C10-1102", 
    "citing_paper_authority": 0, 
    "citing_paper_authors": "Xian, Qian | Qi, Zhang | Xuangjing, Huang | Lide, Wu", 
    "raw_text": "Recent works on dependency parsing speedup mainly focus on inference, such as expected linear time non-projective dependency parsing (Nivre, 2009), integer linear programming (ILP) for higher order non-projective parsing (Martinset al, 2009)", 
    "clean_text": "Recent works on dependency parsing speedup mainly focus on inference, such as expected linear time non-projective dependency parsing (Nivre, 2009), integer linear programming (ILP) for higher order non-projective parsing (Martinset al, 2009).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "W10-1411", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Bharat Ram, Ambati | Samar, Husain | Joakim, Nivre | Rajeev, Sangal", 
    "raw_text": "Both the best performing system (Ambati et al, 2009a) and the system in second place (Nivre, 2009b) used a transition-based approach to dependency parsing, as implemented in MaltParser (Nivre et al, 2007b)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "W10-1411", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Bharat Ram, Ambati | Samar, Husain | Joakim, Nivre | Rajeev, Sangal", 
    "raw_text": "(2009a) and Nivre (2009b) and exploring the common pool of features used by those systems", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "W10-1411", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Bharat Ram, Ambati | Samar, Husain | Joakim, Nivre | Rajeev, Sangal", 
    "raw_text": "Feature pool based on selection from Ambati et al (2009a) and Nivre (2009b)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "W10-1411", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Bharat Ram, Ambati | Samar, Husain | Joakim, Nivre | Rajeev, Sangal", 
    "raw_text": "Like Ambati et al (2009a) and Nivre (2009b), we use MaltParser, an open-source implementation of transition based dependency parsing with a variety of transition systems and customizable classifiers.3 3.1 Transition System", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "W10-1411", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Bharat Ram, Ambati | Samar, Husain | Joakim, Nivre | Rajeev, Sangal", 
    "raw_text": "Previous work has shown that the arc-eager projective transition system first described in Nivre (2003) works well for Hindi (Ambati et al, 2009a; Nivre, 2009b)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "W10-1411", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Bharat Ram, Ambati | Samar, Husain | Joakim, Nivre | Rajeev, Sangal", 
    "raw_text": "Starting from the union of the feature sets used by Ambati et al (2009a and by Nivre (2009b), we first used 5-fold cross-validation on the combined training and development sets from the ICON09 tools contest to select the pool of features depicted in Table 1, keeping all features that had a positive effect on both labeled and unlabeled accuracy", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "W10-1411", 
    "citing_paper_authority": 5, 
    "citing_paper_authors": "Bharat Ram, Ambati | Samar, Husain | Joakim, Nivre | Rajeev, Sangal", 
    "raw_text": "System LAS UAS Ambati et al (2009a) 74.5 90.1 Nivre (2009b) 73.4 89.8 Our system 76.5 91.1 Table 2", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "P11-2121", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Jinho D., Choi | Martha, Palmer", 
    "raw_text": "Despite this fact, it is possible to perform non-projective parsing in linear time in practice (Nivre, 2009)", 
    "clean_text": "Despite this fact, it is possible to perform non-projective parsing in linear time in practice (Nivre, 2009).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "P11-2121", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Jinho D., Choi | Martha, Palmer", 
    "raw_text": "By adding this transition, an oracle can now choose either projective or non-projective parsing depending on parsing states.1 1We also tried adding the RIGHT-ARC transition from Nivre? s projective algorithm, which did not improve parsing performance for our experiments. Note that Nivre (2009) has a similar idea of performing projective and non-projective parsing selectively", 
    "clean_text": "Note that Nivre (2009) has a similar idea of performing projective and non-projective parsing selectively.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "P11-2121", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Jinho D., Choi | Martha, Palmer", 
    "raw_text": "is Nivre? s swap algorithm (Nivre, 2009), of which we use the implementation from MaltParser (malt parser", 
    "clean_text": "'Nivre' is Nivre's swap algorithm (Nivre, 2009), of which we use the implementation from MaltParser (maltparser.org).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "D12-1133", 
    "citing_paper_authority": 33, 
    "citing_paper_authors": "Bernd, Bohnet | Joakim, Nivre", 
    "raw_text": "In this section, we start by defining a transition system for joint tagging and parsing based on the non-projective transition system proposed in Nivre (2009)", 
    "clean_text": "In this section, we start by defining a transition system for joint tagging and parsing based on the non-projective transition system proposed in Nivre (2009).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "D12-1133", 
    "citing_paper_authority": 33, 
    "citing_paper_authors": "Bernd, Bohnet | Joakim, Nivre", 
    "raw_text": "([? |j], [i|?], A, pi,?) 0 &lt; i &lt; j Figure 1: Transitions for joint tagging and dependency parsing extending the system of Nivre (2009)", 
    "clean_text": "Figure 1: Transitions for joint tagging and dependency parsing extending the system of Nivre (2009).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "D12-1133", 
    "citing_paper_authority": 33, 
    "citing_paper_authors": "Bernd, Bohnet | Joakim, Nivre", 
    "raw_text": "Except for the addition of a tag parameter p tothe SHIFT transition, this is equivalent to the system described in Nivre (2009), which thanks to the SWAP transition can handle arbitrary non-projective trees", 
    "clean_text": "Except for the addition of a tag parameter p to the SHIFT transition, this is equivalent to the system described in Nivre (2009), which thanks to the SWAP transition can handle arbitrary non-projective trees.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "W11-1109", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Anders, S&oslash;gaard", 
    "raw_text": "(2005) and Nivre (2009)", 
    "clean_text": "Non-projective parsing algorithms for supervised dependency parsing have, for example, been presented in McDonald et al. (2005) and Nivre (2009).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "D12-1029", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Daniel, Fern&Atilde;&iexcl;ndez-Gonz&Atilde;&iexcl;lez | Carlos, G&oacute;mez-Rodr&iacute;guez", 
    "raw_text": "Thereader should be aware that the purpose of this table is only to provide a broad idea of how our approach performs with respect to a well-known reference point, and not to make a detailed comparison, since the two parsers have not been tuned in homogeneous conditions: on the one hand, we had access to the CoNLL-X test sets which were unavailable 313 System Arabic Danish Nivre et al2006) 66.71 84.77 McDonald et al2006) 66.91 84.79 Nivre (2009) 67.3 84.7 Go ?mez-Rodr? ?guez and Nivre (2010) N/A 83.81 NE+LBA/RBA 67.78 85.21Table 5: Comparison of the Arabic and Danish LAS obtained by the arc-eager parser with projective buffer transitions in comparison to other parsers in the literature that report results on these datasets", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "D12-1029", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Daniel, Fern&Atilde;&iexcl;ndez-Gonz&Atilde;&iexcl;lez | Carlos, G&oacute;mez-Rodr&iacute;guez", 
    "raw_text": "However, the goal of that transition is different from ours (selecting between projective and non projective parsing, rather than building some arcs in advance) and the approach is specific to one algorithm while ours is generic? for example, the LEFT ARC transition can not be added to the arc-standard and arc-eager parsers, or to extensions of those like the ones by Attardi (2006) or Nivre (2009), because these already have it", 
    "clean_text": "However, the goal of that transition is different from ours (selecting between projective and non-projective parsing, rather than building some arcs in advance) and the approach is specific to one algorithm while ours is generic for example, the LEFT ARC transition cannot be added to the arc-standard and arc-eager parsers, or to extensions of those like the ones by Attardi (2006) or Nivre (2009), because these already have it.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "C10-2129", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Wolfgang, Seeker | Bernd, Bohnet | Lilja, &Oslash;vrelid | Jonas, Kuhn", 
    "raw_text": "Transition based parsers typically have a linear or quadratic complexity (Attardi, 2006) .Nivre (2009) introduced a transition based non projective parsing algorithm that has a worst case quadratic complexity and an expected linear parsing time", 
    "clean_text": "Nivre (2009) introduced a transition based non projective parsing algorithm that has a worst case quadratic complexity and an expected linear parsing time.", 
    "keep_for_gold": 0
  }
]
