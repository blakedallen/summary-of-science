<PAPER>
  <S sid="0">Unsupervised Word Sense Disambiguation Rivaling Supervised Methods</S>
  <ABSTRACT>
    <S sid="1" ssid="1">This paper presents an unsupervised learning algorithm for sense disambiguation that, when trained on unannotated English text, rivals the performance of supervised techniques that require time-consuming hand annotations.</S>
    <S sid="2" ssid="2">The algorithm is based on two powerful constraints &#8212; that words tend to have one sense per discourse and one sense per collocation &#8212; exploited in an iterative bootstrapping procedure.</S>
    <S sid="3" ssid="3">Tested accuracy exceeds 96%.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="4" ssid="1">This paper presents an unsupervised algorithm that can accurately disambiguate word senses in a large, completely untagged corpus.1 The algorithm avoids the need for costly hand-tagged training data by exploiting two powerful properties of human language: Moreover, language is highly redundant, so that the sense of a word is effectively overdetermined by (1) and (2) above.</S>
    <S sid="5" ssid="2">The algorithm uses these properties to incrementally identify collocations for target senses of a word, given a few seed collocations 'Note that the problem here is sense disambiguation: assigning each instance of a word to established sense definitions (such as in a dictionary).</S>
    <S sid="6" ssid="3">This differs from sense induction: using distributional similarity to partition word instances into clusters that may have no relation to standard sense partitions.</S>
    <S sid="7" ssid="4">'Here I use the traditional dictionary definition of collocation &#8212; &amp;quot;appearing in the same location; a juxtaposition of words&amp;quot;.</S>
    <S sid="8" ssid="5">No idiomatic or non-compositional interpretation is implied. for each sense, This procedure is robust and selfcorrecting, and exhibits many strengths of supervised approaches, including sensitivity to word-order information lost in earlier unsupervised algorithms.</S>
  </SECTION>
  <SECTION title="2 One Sense Per Discourse" number="2">
    <S sid="9" ssid="1">The observation that words strongly tend to exhibit only one sense in a given discourse or document was stated and quantified in Gale, Church and Yarowsky (1992).</S>
    <S sid="10" ssid="2">Yet to date, the full power of this property has not been exploited for sense disambiguation.</S>
    <S sid="11" ssid="3">The work reported here is the first to take advantage of this regularity in conjunction with separate models of local context for each word.</S>
    <S sid="12" ssid="4">Importantly, I do not use one-sense-per-discourse as a hard constraint; it affects the classification probabilistically and can be overridden when local evidence is strong.</S>
    <S sid="13" ssid="5">In this current work, the one-sense-per-discourse hypothesis was tested on a set of 37,232 examples (hand-tagged over a period of 3 years), the same data studied in the disambiguation experiments.</S>
    <S sid="14" ssid="6">For these words, the table below measures the claim's accuracy (when the word occurs more than once in a discourse, how often it takes on the majority sense for the discourse) and applicability (how often the word does occur more than once in a discourse).</S>
    <S sid="15" ssid="7">Clearly, the claim holds with very high reliability for these words, and may be confidently exploited as another source of evidence in sense tagging.'</S>
  </SECTION>
  <SECTION title="3 One Sense Per Collocation" number="3">
    <S sid="16" ssid="1">The strong tendency for words to exhibit only one sense in a given collocation was observed and quantified in (Yarowsky, 1993).</S>
    <S sid="17" ssid="2">This effect varies depending on the type of collocation.</S>
    <S sid="18" ssid="3">It is strongest for immediately adjacent collocations, and weakens with distance.</S>
    <S sid="19" ssid="4">It is much stronger for words in a predicate-argument relationship than for arbitrary associations at equivalent distance.</S>
    <S sid="20" ssid="5">It is very much stronger for collocations with content words than those with function words.'</S>
    <S sid="21" ssid="6">In general, the high reliability of this behavior (in excess of 97% for adjacent content words, for example) makes it an extremely useful property for sense disambiguation.</S>
    <S sid="22" ssid="7">A supervised algorithm based on this property is given in (Yarowsky, 1994).</S>
    <S sid="23" ssid="8">Using a decision list control structure based on (Rivest, 1987), this algorithm integrates a wide diversity of potential evidence sources (lemmas, inflected forms, parts of speech and arbitrary word classes) in a wide diversity of positional relationships (including local and distant collocations, trigram sequences, and predicate-argument association).</S>
    <S sid="24" ssid="9">The training procedure computes the word-sense probability distributions for all such collocations, and orders them by the log-likelihood ratio Log( r4S enseAlCollocation,)\ 5 Sensealeollocatton,)), with optional steps for interpolation and pruning.</S>
    <S sid="25" ssid="10">New data are classified by using the single most predictive piece of disambiguating evidence that appears in the target context.</S>
    <S sid="26" ssid="11">By not combining probabilities, this decision-list approach avoids the problematic complex modeling of statistical dependencies 'It is interesting to speculate on the reasons for this phenomenon.</S>
    <S sid="27" ssid="12">Most of the tendency is statistical: two distinct arbitrary terms of moderate corpus frequency are quite unlikely to co-occur in the same discourse whether they are homographs or not.</S>
    <S sid="28" ssid="13">This is particularly true for content words, which exhibit a &amp;quot;bursty&amp;quot; distribution.</S>
    <S sid="29" ssid="14">However, it appears that human writers also have some active tendency to avoid mixing senses within a discourse.</S>
    <S sid="30" ssid="15">In a small study, homograph pairs were observed to co-occur roughly 5 times less often than arbitrary word pairs of comparable frequency.</S>
    <S sid="31" ssid="16">Regardless of origin, this phenomenon is strong enough to be of significant practical use as an additional probabilistic disambiguation constraint.</S>
    <S sid="32" ssid="17">4This latter effect is actually a continuous function conditional on the burstiness of the word (the tendency of a word to deviate from a constant Poisson distribution in a corpus).</S>
    <S sid="33" ssid="18">'As most ratios involve a 0 for some observed value, smoothing is crucial.</S>
    <S sid="34" ssid="19">The process employed here is sensitive to variables including the type of collocation (adjacent bigrams or wider context), collocational distance, type of word (content word vs. function word) and the expected amount of noise in the training data.</S>
    <S sid="35" ssid="20">Details are provided in (Yarowsky, to appear). encountered in other frameworks.</S>
    <S sid="36" ssid="21">The algorithm is especially well suited for utilizing a large set of highly non-independent evidence such as found here.</S>
    <S sid="37" ssid="22">In general, the decision-list algorithm is well suited for the task of sense disambiguation and will be used as a component of the unsupervised algorithm below.</S>
  </SECTION>
  <SECTION title="4 Unsupervised Learning Algorithm" number="4">
    <S sid="38" ssid="1">Words not only tend to occur in collocations that reliably indicate their sense, they tend to occur in multiple such collocations.</S>
    <S sid="39" ssid="2">This provides a mechanism for bootstrapping a sense tagger.</S>
    <S sid="40" ssid="3">If one begins with a small set of seed examples representative of two senses of a word, one can incrementally augment these seed examples with additional examples of each sense, using a combination of the one-senseper-collocation and one-sense-per-discourse tendencies.</S>
    <S sid="41" ssid="4">Although several algorithms can accomplish similar ends,6 the following approach has the advantages of simplicity and the ability to build on an existing supervised classification algorithm without modification.'</S>
    <S sid="42" ssid="5">As shown empirically, it also exhibits considerable effectiveness.</S>
    <S sid="43" ssid="6">The algorithm will be illustrated by the disambiguation of 7538 instances of the polysemous word plant in a previously untagged corpus.</S>
  </SECTION>
  <SECTION title="STEP 1:" number="5">
    <S sid="44" ssid="1">In a large corpus, identify all examples of the given polysemous word, storing their contexts as lines in an initially untagged training set.</S>
    <S sid="45" ssid="2">For example: TIndeed, any supervised classification algorithm that returns probabilities with its classifications may potentially be used here.</S>
    <S sid="46" ssid="3">These include Bayesian classifiers (Mosteller and Wallace, 1964) and some implementations of neural nets, but not Brill rules (Brill, 1993).</S>
    <S sid="47" ssid="4">For each possible sense of the word, identify a relatively small number of training examples representative of that sense.'</S>
    <S sid="48" ssid="5">This could be accomplished by hand tagging a subset of the training sentences.</S>
    <S sid="49" ssid="6">However, I avoid this laborious procedure by identifying a small number of seed collocations representative of each sense and then tagging all training examples containing the seed collocates with the seed's sense label.</S>
    <S sid="50" ssid="7">The remainder of the examples (typically 85-98%) constitute an untagged residual.</S>
    <S sid="51" ssid="8">Several strategies for identifying seeds that require minimal or no human participation are discussed in Section 5.</S>
    <S sid="52" ssid="9">In the example below, the words life and manufacturing are used as seed collocations for the two major senses of plant (labeled A and B respectively).</S>
    <S sid="53" ssid="10">This partitions the training set into 82 examples of living plants (1%), 106 examples of manufacturing plants (1%), and 7350 residual examples (98%).</S>
    <S sid="54" ssid="11">Sense Training Examples (Keyword in Context) A A... A used to strain microscopic plant life from the ... A ... zonal distribution of plant life .</S>
    <S sid="55" ssid="12">... A close-up studies of plant life and natural ... A too rapid growth of aquatic plant life in water ... A ... the proliferation of plant and animal life ... A establishment phase of the plant virus life cycle ... A ... that divide life into plant and animal kingdom A ... many dangers to plant and animal life ... A mammals .</S>
    <S sid="56" ssid="13">Animal and plant life are delicately A beds too salty to support plant life .</S>
    <S sid="57" ssid="14">River ... heavy seas, damage , and plant life growing on ... ... ?</S>
    <S sid="58" ssid="15">... vinyl chloride monomer plant, which is ... ?</S>
    <S sid="59" ssid="16">... molecules found in plant and animal tissue ?</S>
    <S sid="60" ssid="17">... Nissan car and truck plant in Japan is ... ?</S>
    <S sid="61" ssid="18">... and Golgi apparatus of plant and animal cells ... ?</S>
    <S sid="62" ssid="19">... union responses to plant closures .</S>
    <S sid="63" ssid="20">... ?</S>
    <S sid="64" ssid="21">... ... ?</S>
    <S sid="65" ssid="22">... ... ?</S>
    <S sid="66" ssid="23">... cell types found in the plant kingdom are ... ?</S>
    <S sid="67" ssid="24">... company said the plant is still operating ... ?</S>
    <S sid="68" ssid="25">...</S>
    <S sid="69" ssid="26">Although thousands of plant and animal species ?</S>
    <S sid="70" ssid="27">... animal rather than plant tissues can be ... ?</S>
    <S sid="71" ssid="28">... computer disk drive plant located in ... polystyrene manufacturing plant at its Dow ... company manufacturing plant is in Orlando ...</S>
    <S sid="72" ssid="29">It is useful to visualize the process of seed development graphically.</S>
    <S sid="73" ssid="30">The following figure illustrates this sample initial state.</S>
    <S sid="74" ssid="31">Circled regions are the training examples that contain either an A or B seed collocate.</S>
    <S sid="75" ssid="32">The bulk of the sample points &amp;quot;?&amp;quot; constitute the untagged residual.</S>
    <S sid="76" ssid="33">8 For the purposes of exposition, I will assume a binary sense partition.</S>
    <S sid="77" ssid="34">It is straightforward to extend this to k senses using k sets of seeds.</S>
    <S sid="78" ssid="35">= Set of training examples containing the collocation &amp;quot;life&amp;quot;.</S>
  </SECTION>
  <SECTION title="STEP 3a:" number="6">
    <S sid="79" ssid="1">Train the supervised classification algorithm on the SENSE-A/SENSE-B seed sets.</S>
    <S sid="80" ssid="2">The decision-list algorithm used here (Yarowsky, 1994) identifies other collocations that reliably partition the seed training data, ranked by the purity of the distribution.</S>
    <S sid="81" ssid="3">Below is an abbreviated example of the decision list trained on the plant seed data.9 STEP 3h: Apply the resulting classifier to the entire sample set.</S>
    <S sid="82" ssid="4">Take those members in the residual that are tagged as SENSE-A or SENSE-B with probability above a certain threshold, and add those examples to the growing seed sets.</S>
    <S sid="83" ssid="5">Using the decision-list algorithm, these additions will contain newly-learned collocations that are reliably indicative of the previously-trained seed sets.</S>
    <S sid="84" ssid="6">The acquisition of additional partitioning collocations from cooccurrence with previously-identified ones is illustrated in the lower portion of Figure 2.</S>
    <S sid="85" ssid="7">STEP 3c: Optionally, the one-sense-per-discourse constraint is then used both to filter and augment this addition.</S>
    <S sid="86" ssid="8">The details of this process are discussed in Section 7.</S>
    <S sid="87" ssid="9">In brief, if several instances of the polysemous word in a discourse have already been assigned SENSE-A, this sense tag may be extended to all examples in the discourse, conditional on the relative numbers and the probabilities associated with the tagged examples.</S>
    <S sid="88" ssid="10">This augmentation of the training data can often form a bridge to new collocations that may not otherwise co-occur in the same nearby context with previously identified collocations.</S>
    <S sid="89" ssid="11">Such a bridge to the SENSE-A collocate &amp;quot;cell&amp;quot; is illustrated graphically in the upper half of Figure 2.</S>
    <S sid="90" ssid="12">Similarly, the one-sense-per-discourse constraint may also be used to correct erroneously labeled examples.</S>
    <S sid="91" ssid="13">For example:</S>
  </SECTION>
  <SECTION title="STEP 3d:" number="7">
    <S sid="92" ssid="1">Repeat Step 3 iteratively.</S>
    <S sid="93" ssid="2">The training sets (e.g.</S>
    <S sid="94" ssid="3">SENSE-A seeds plus newly added examples) will tend to grow, while the residual will tend to shrink.</S>
    <S sid="95" ssid="4">Additional details aimed at correcting and avoiding misclassifications will be discussed in Section 6.</S>
  </SECTION>
  <SECTION title="STEP 4:" number="8">
    <S sid="96" ssid="1">Stop.</S>
    <S sid="97" ssid="2">When the training parameters are held constant, the algorithm will converge on a stable residual set.</S>
    <S sid="98" ssid="3">Note that most training examples will exhibit multiple collocations indicative of the same sense (as illustrated in Figure 3).</S>
    <S sid="99" ssid="4">The decision list algorithm resolves any conflicts by using only the single most reliable piece of evidence, not a combination of all matching collocations.</S>
    <S sid="100" ssid="5">This circumvents many of the problems associated with non-independent evidence sources.</S>
    <S sid="101" ssid="6">STEP 5: The classification procedure learned from the final supervised training step may now be applied to new data, and used to annotate the original untagged corpus with sense tags and probabilities.</S>
    <S sid="102" ssid="7">An abbreviated sample of the final decision list for plant is given below.</S>
    <S sid="103" ssid="8">Note that the original seed words are no longer at the top of the list.</S>
    <S sid="104" ssid="9">They have been displaced by more broadly applicable collocations that better partition the newly learned classes.</S>
    <S sid="105" ssid="10">In cases where there are multiple seeds, it is even possible for an original seed for SENSE-A to become an indicator for SENSE-B if the collocate is more compatible with this second class.</S>
    <S sid="106" ssid="11">Thus the noise introduced by a few irrelevant or misleading seed words is not fatal.</S>
    <S sid="107" ssid="12">It may be corrected if the majority of the seeds forms a coherent collocation space.</S>
    <S sid="108" ssid="13">When this decision list is applied to a new test sentence, ... the loss of animal and plant species through extinction ... , the highest ranking collocation found in the target context (species) is used to classify the example as SENSE-A (a living plant).</S>
    <S sid="109" ssid="14">If available, information from other occurrences of &amp;quot;plant&amp;quot; in the discourse may override this classification, as described in Section 7.</S>
  </SECTION>
  <SECTION title="5 Options for Training Seeds" number="9">
    <S sid="110" ssid="1">The algorithm should begin with seed words that accurately and productively distinguish the possible senses.</S>
    <S sid="111" ssid="2">Such seed words can be selected by any of the following strategies: Extract seed words from a dictionary's entry for the target sense.</S>
    <S sid="112" ssid="3">This can be done automatically, using words that occur with significantly greater frequency in the entry relative to the entire dictionary.</S>
    <S sid="113" ssid="4">Words in the entry appearing in the most reliable collocational relationships with the target word are given the most weight, based on the criteria given in Yarowsky (1993).</S>
    <S sid="114" ssid="5">Remarkably good performance may be achieved by identifying a single defining collocate for each class (e.g. bird and machine for the word crane), and using for seeds only those contexts containing one of these words.</S>
    <S sid="115" ssid="6">WordNet (Miller, 1990) is an automatic source for such defining terms.</S>
    <S sid="116" ssid="7">Words that co-occur with the target word in unusually great frequency, especially in certain collocational relationships, will tend to be reliable indicators of one of the target word's senses (e.g. flock and bulldozer for &amp;quot;crane&amp;quot;).</S>
    <S sid="117" ssid="8">A human judge must decide which one, but this can be done very quickly (typically under 2 minutes for a full list of 30-60 such words).</S>
    <S sid="118" ssid="9">Co-occurrence analysis selects collocates that span the space with minimal overlap, optimizing the efforts of the human assistant.</S>
    <S sid="119" ssid="10">While not fully automatic, this approach yields rich and highly reliable seed sets with minimal work.</S>
  </SECTION>
  <SECTION title="6 Escaping from Initial Misclassifications" number="10">
    <S sid="120" ssid="1">Unlike many previous bootstrapping approaches, the present algorithm can escape from initial misclassification.</S>
    <S sid="121" ssid="2">Examples added to the the growing seed sets remain there only as long as the probability of the classification stays above the threshold.</S>
    <S sid="122" ssid="3">IIf their classification begins to waver because new examples have discredited the crucial collocate, they are returned to the residual and may later be classified differently.</S>
    <S sid="123" ssid="4">Thus contexts that are added to the wrong seed set because of a misleading word in a dictionary definition may be (and typically are) correctly reclassified as iterative training proceeds.</S>
    <S sid="124" ssid="5">The redundancy of language with respect to collocation makes the process primarily self-correcting.</S>
    <S sid="125" ssid="6">However, certain strong collocates may become entrenched as indicators for the wrong class.</S>
    <S sid="126" ssid="7">We discourage such behavior in the training algorithm by two techniques: 1) incrementally increasing the width of the context window after intermediate convergence (which periodically adds new feature values to shake up the system) and 2) randomly perturbing the class-inclusion threshold, similar to simulated annealing.</S>
  </SECTION>
  <SECTION title="7 Using the One-sense-per-discourse Property" number="11">
    <S sid="127" ssid="1">The algorithm performs well using only local collocational information, treating each token of the target word independently.</S>
    <S sid="128" ssid="2">However, accuracy can be improved by also exploiting the fact that all occurrences of a word in the discourse are likely to exhibit the same sense.</S>
    <S sid="129" ssid="3">This property may be utilized in two places, either once at the end of Step 4 after the algorithm has converged, or in Step 3c after each iteration.</S>
    <S sid="130" ssid="4">At the end of Step 4, this property is used for error correction.</S>
    <S sid="131" ssid="5">When a polysemous word such as plant occurs multiple times in a discourse, tokens that were tagged by the algorithm with low confidence using local collocation information may be overridden by the dominant tag for the discourse.</S>
    <S sid="132" ssid="6">The probability differentials necessary for such a reclassification were determined empirically in an early pilot study.</S>
    <S sid="133" ssid="7">The variables in this decision are the total number of occurrences of plant in the discourse (n), the number of occurrences assigned to the majority and minor senses for the discourse, and the cumulative scores for both (a sum of log-likelihood ratios).</S>
    <S sid="134" ssid="8">If cumulative evidence for the majority sense exceeds that of the minority by a threshold (conditional on n), the minority cases are relabeled.</S>
    <S sid="135" ssid="9">The case n = 2 does not admit much reclassification because it is unclear which sense is dominant.</S>
    <S sid="136" ssid="10">But for n &gt; 4, all but the most confident local classifications tend to be overridden by the dominant tag, because of the overwhelming strength of the one-sense-perdiscourse tendency.</S>
    <S sid="137" ssid="11">The use of this property after each iteration is similar to the final post-hoc application, but helps prevent initially mistagged collocates from gaining a foothold.</S>
    <S sid="138" ssid="12">The major difference is that in discourses where there is substantial disagreement concerning which is the dominant sense, all instances in the discourse are returned to the residual rather than merely leaving their current tags unchanged.</S>
    <S sid="139" ssid="13">This helps improve the purity of the training data.</S>
    <S sid="140" ssid="14">The fundamental limitation of this property is coverage.</S>
    <S sid="141" ssid="15">As noted in Section 2, half of the examples occur in a discourse where there are no other instances of the same word to provide corroborating evidence for a sense or to protect against misclassification.</S>
    <S sid="142" ssid="16">There is additional hope for these cases, however, as such isolated tokens tend to strongly favor a particular sense (the less &amp;quot;bursty&amp;quot; one).</S>
    <S sid="143" ssid="17">We have yet to use this additional information.</S>
  </SECTION>
  <SECTION title="8 Evaluation" number="12">
    <S sid="144" ssid="1">The words used in this evaluation were randomly selected from those previously studied in the literature.</S>
    <S sid="145" ssid="2">They include words where sense differences are realized as differences in French translation (drug drogue/medicament, and duty .&amp;quot;-P devoir/droit), a verb (poach) and words used in Schiitze's 1992 disambiguation experiments (tank, space, motion, plant).1&#176; The data were extracted from a 460 million word corpus containing news articles, scientific abstracts, spoken transcripts, and novels, and almost certainly constitute the largest training/testing sets used in the sense-disambiguation literature.</S>
    <S sid="146" ssid="3">Columns 6-8 illustrate differences in seed training options.</S>
    <S sid="147" ssid="4">Using only two words as seeds does surprisingly well (90.6 %).</S>
    <S sid="148" ssid="5">This approach is least successful for senses with a complex concept space, which cannot be adequately represented by single words.</S>
    <S sid="149" ssid="6">Using the salient words of a dictionary definition as seeds increases the coverage of the concept space, improving accuracy (94.8%).</S>
    <S sid="150" ssid="7">However, spurious words in example sentences can be a source of noise.</S>
    <S sid="151" ssid="8">Quick hand tagging of a list of algorithmically-identified salient collocates appears to be worth the effort, due to the increased accuracy (95.5%) and minimal cost.</S>
    <S sid="152" ssid="9">Columns 9 and 10 illustrate the effect of adding the probabilistic one-sense-per-discourse constraint to collocation-based models using dictionary entries as training seeds.</S>
    <S sid="153" ssid="10">Column 9 shows its effectiveness as a post-hoc constraint.</S>
    <S sid="154" ssid="11">Although apparently small in absolute terms, on average this represents a 27% reduction in error rate.11 When applied at each iteration, this process reduces the training noise, yielding the optimal observed accuracy in column 10.</S>
    <S sid="155" ssid="12">Comparative performance: Column 5 shows the relative performance of supervised training using the decision list algorithm, applied to the same data and not using any discourse information.</S>
    <S sid="156" ssid="13">Unsupervised training using the additional one-sense-per-discourse constraint frequently exceeds this value.</S>
    <S sid="157" ssid="14">Column 11 shows the performance of Schiitze's unsupervised algorithm applied to some of these words, trained on a New York Times News Service corpus.</S>
    <S sid="158" ssid="15">Our algorithm exceeds this accuracy on each word, with an average relative performance of 97% vs. 92%.12</S>
  </SECTION>
  <SECTION title="9 Comparison with Previous Work" number="13">
    <S sid="159" ssid="1">This algorithm exhibits a fundamental advantage over supervised learning algorithms (including Black (1988), Hearst (1991), Gale et al. (1992), Yarowsky (1993, 1994), Leacock et al.</S>
    <S sid="160" ssid="2">(1993), Bruce and Wiebe (1994), and Lehman (1994)), as it does not require costly hand-tagged training sets.</S>
    <S sid="161" ssid="3">It thrives on raw, unannotated monolingual corpora &#8212; the more the merrier.</S>
    <S sid="162" ssid="4">Although there is some hope from using aligned bilingual corpora as training data for supervised algorithms (Brown et al., 1991), this approach suffers from both the limited availability of such corpora, and the frequent failure of bilingual translation differences to model monolingual sense differences.</S>
    <S sid="163" ssid="5">The use of dictionary definitions as an optional seed for the unsupervised algorithm stems from a long history of dictionary-based approaches, including Lesk (1986), Guthrie et al. (1991), Veronis and Ide (1990), and Slator (1991).</S>
    <S sid="164" ssid="6">Although these earlier approaches have used often sophisticated measures of overlap with dictionary definitions, they have not realized the potential for combining the relatively limited seed information in such definitions with the nearly unlimited co-occurrence information extractable from text corpora.</S>
    <S sid="165" ssid="7">Other unsupervised methods have shown great promise.</S>
    <S sid="166" ssid="8">Dagan and Itai (1994) have proposed a method using co-occurrence statistics in independent monolingual corpora of two languages to guide lexical choice in machine translation.</S>
    <S sid="167" ssid="9">Translation of a Hebrew verb-object pair such as lahtom (sign or seal) and hoze (contract or treaty) is determined using the most probable combination of words in an English monolingual corpus.</S>
    <S sid="168" ssid="10">This work shows &amp;quot;The maximum possible error rate reduction is 50.1%, or the mean applicability discussed in Section 2.</S>
    <S sid="169" ssid="11">'This difference is even more striking given that Schiitze's data exhibit a higher baseline probability (65% vs. 55%) for these words, and hence constitute an easier task. that leveraging bilingual lexicons and monolingual language models can overcome the need for aligned bilingual corpora.</S>
    <S sid="170" ssid="12">Hearst (1991) proposed an early application of bootstrapping to augment training sets for a supervised sense tagger.</S>
    <S sid="171" ssid="13">She trained her fully supervised algorithm on hand-labelled sentences, applied the result to new data and added the most confidently tagged examples to the training set.</S>
    <S sid="172" ssid="14">Regrettably, this algorithm was only described in two sentences and was not developed further.</S>
    <S sid="173" ssid="15">Our current work differs by eliminating the need for handlabelled training data entirely and by the joint use of collocation and discourse constraints to accomplish this.</S>
    <S sid="174" ssid="16">Schiitze (1992) has pioneered work in the hierarchical clustering of word senses.</S>
    <S sid="175" ssid="17">In his disambiguation experiments, Schiitze used post-hoc alignment of clusters to word senses.</S>
    <S sid="176" ssid="18">Because the toplevel cluster partitions based purely on distributional information do not necessarily align with standard sense distinctions, he generated up to 10 sense clusters and manually assigned each to a fixed sense label (based on the hand-inspection of 10-20 sentences per cluster).</S>
    <S sid="177" ssid="19">In contrast, our algorithm uses automatically acquired seeds to tie the sense partitions to the desired standard at the beginning, where it can be most useful as an anchor and guide.</S>
    <S sid="178" ssid="20">In addition, Schiitze performs his classifications by treating documents as a large unordered bag of words.</S>
    <S sid="179" ssid="21">By doing so he loses many important distinctions, such as collocational distance, word sequence and the existence of predicate-argument relationships between words.</S>
    <S sid="180" ssid="22">In contrast, our algorithm models these properties carefully, adding considerable discriminating power lost in other relatively impoverished models of language.</S>
  </SECTION>
  <SECTION title="10 Conclusion" number="14">
    <S sid="181" ssid="1">In essence, our algorithm works by harnessing several powerful, empirically-observed properties of language, namely the strong tendency for words to exhibit only one sense per collocation and per discourse.</S>
    <S sid="182" ssid="2">It attempts to derive maximal leverage from these properties by modeling a rich diversity of collocational relationships.</S>
    <S sid="183" ssid="3">It thus uses more discriminating information than available to algorithms treating documents as bags of words, ignoring relative position and sequence.</S>
    <S sid="184" ssid="4">Indeed, one of the strengths of this work is that it is sensitive to a wider range of language detail than typically captured in statistical sense-disambiguation algorithms.</S>
    <S sid="185" ssid="5">Also, for an unsupervised algorithm it works surprisingly well, directly outperforming Schiitze's unsupervised algorithm 96.7 % to 92.2 %, on a test of the same 4 words.</S>
    <S sid="186" ssid="6">More impressively, it achieves nearly the same performance as the supervised algorithm given identical training contexts (95.5 % vs. 96.1 %) , and in some cases actually achieves superior performance when using the one-sense-perdiscourse constraint (96.5 % vs. 96.1%).</S>
    <S sid="187" ssid="7">This would indicate that the cost of a large sense-tagged training corpus may not be necessary to achieve accurate word-sense disambiguation.</S>
  </SECTION>
</PAPER>
