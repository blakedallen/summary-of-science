<PAPER>
  <S sid="0">Exploring Various Knowledge In Relation Extraction</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Extracting semantic relationships between entities is challenging.</S>
    <S sid="2" ssid="2">This paper investigates the incorporation of diverse lexical, syntactic and semantic knowledge in feature-based relation extraction using SVM.</S>
    <S sid="3" ssid="3">Our study illustrates that the base phrase chunking information is very effective for relation extraction and contributes to most of the performance improvement from syntactic aspect while additional information from full parsing gives limited further enhancement.</S>
    <S sid="4" ssid="4">This suggests that most of useful information in full parse trees for relation extraction is shallow and can be captured by chunking.</S>
    <S sid="5" ssid="5">We also demonstrate how semantic information such as WordNet and Name List, can be used in feature-based relation extraction to further improve the performance.</S>
    <S sid="6" ssid="6">Evaluation on the ACE corpus shows that effective incorporation of diverse features enables our system outperform previously best-reported systems on the 24 ACE relation subtypes and significantly outperforms tree kernel-based systems by over 20 in F-measure on the 5 ACE relation types.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="7" ssid="1">With the dramatic increase in the amount of textual information available in digital archives and the WWW, there has been growing interest in techniques for automatically extracting information from text.</S>
    <S sid="8" ssid="2">Information Extraction (IE) systems are expected to identify relevant information (usually of pre-defined types) from text documents in a certain domain and put them in a structured format.</S>
    <S sid="9" ssid="3">According to the scope of the NIST Automatic Content Extraction (ACE) program, current research in IE has three main objectives: Entity Detection and Tracking (EDT), Relation Detection and Characterization (RDC), and Event Detection and Characterization (EDC).</S>
    <S sid="10" ssid="4">The EDT task entails the detection of entity mentions and chaining them together by identifying their coreference.</S>
    <S sid="11" ssid="5">In ACE vocabulary, entities are objects, mentions are references to them, and relations are semantic relationships between entities.</S>
    <S sid="12" ssid="6">Entities can be of five types: persons, organizations, locations, facilities and geo-political entities (GPE: geographically defined regions that indicate a political boundary, e.g. countries, states, cities, etc.).</S>
    <S sid="13" ssid="7">Mentions have three levels: names, nomial expressions or pronouns.</S>
    <S sid="14" ssid="8">The RDC task detects and classifies implicit and explicit relations1 between entities identified by the EDT task.</S>
    <S sid="15" ssid="9">For example, we want to determine whether a person is at a location, based on the evidence in the context.</S>
    <S sid="16" ssid="10">Extraction of semantic relationships between entities can be very useful for applications such as question answering, e.g. to answer the query &#8220;Who is the president of the United States?&#8221;.</S>
    <S sid="17" ssid="11">This paper focuses on the ACE RDC task and employs diverse lexical, syntactic and semantic knowledge in feature-based relation extraction using Support Vector Machines (SVMs).</S>
    <S sid="18" ssid="12">Our study illustrates that the base phrase chunking information contributes to most of the performance inprovement from syntactic aspect while additional full parsing information does not contribute much, largely due to the fact that most of relations defined in ACE corpus are within a very short distance.</S>
    <S sid="19" ssid="13">We also demonstrate how semantic information such as WordNet (Miller 1990) and Name List can be used in the feature-based framework.</S>
    <S sid="20" ssid="14">Evaluation shows that the incorporation of diverse features enables our system achieve best reported performance.</S>
    <S sid="21" ssid="15">It also shows that our feature-based approach outperforms tree kernel-based approaches by 11 F-measure in relation detection and more than 20 F-measure in relation detection and classification on the 5 ACE relation types.</S>
    <S sid="22" ssid="16">The rest of this paper is organized as follows.</S>
    <S sid="23" ssid="17">Section 2 presents related work.</S>
    <S sid="24" ssid="18">Section 3 and Section 4 describe our approach and various features employed respectively.</S>
    <S sid="25" ssid="19">Finally, we present experimental setting and results in Section 5 and conclude with some general observations in relation extraction in Section 6.</S>
  </SECTION>
  <SECTION title="2 Related Work" number="2">
    <S sid="26" ssid="1">The relation extraction task was formulated at the 7th Message Understanding Conference (MUC-7 1998) and is starting to be addressed more and more within the natural language processing and machine learning communities.</S>
    <S sid="27" ssid="2">Miller et al (2000) augmented syntactic full parse trees with semantic information corresponding to entities and relations, and built generative models for the augmented trees.</S>
    <S sid="28" ssid="3">Zelenko et al (2003) proposed extracting relations by computing kernel functions between parse trees.</S>
    <S sid="29" ssid="4">Culotta et al (2004) extended this work to estimate kernel functions between augmented dependency trees and achieved 63.2 F-measure in relation detection and 45.8 F-measure in relation detection and classification on the 5 ACE relation types.</S>
    <S sid="30" ssid="5">Kambhatla (2004) employed Maximum Entropy models for relation extraction with features derived from word, entity type, mention level, overlap, dependency tree and parse tree.</S>
    <S sid="31" ssid="6">It achieves 52.8 Fmeasure on the 24 ACE relation subtypes.</S>
    <S sid="32" ssid="7">Zhang (2004) approached relation classification by combining various lexical and syntactic features with bootstrapping on top of Support Vector Machines.</S>
    <S sid="33" ssid="8">Tree kernel-based approaches proposed by Zelenko et al (2003) and Culotta et al (2004) are able to explore the implicit feature space without much feature engineering.</S>
    <S sid="34" ssid="9">Yet further research work is still expected to make it effective with complicated relation extraction tasks such as the one defined in ACE.</S>
    <S sid="35" ssid="10">Complicated relation extraction tasks may also impose a big challenge to the modeling approach used by Miller et al (2000) which integrates various tasks such as part-of-speech tagging, named entity recognition, template element extraction and relation extraction, in a single model.</S>
    <S sid="36" ssid="11">This paper will further explore the feature-based approach with a systematic study on the extensive incorporation of diverse lexical, syntactic and semantic information.</S>
    <S sid="37" ssid="12">Compared with Kambhatla (2004), we separately incorporate the base phrase chunking information, which contributes to most of the performance improvement from syntactic aspect.</S>
    <S sid="38" ssid="13">We also show how semantic information like WordNet and Name List can be equipped to further improve the performance.</S>
    <S sid="39" ssid="14">Evaluation on the ACE corpus shows that our system outperforms Kambhatla (2004) by about 3 F-measure on extracting 24 ACE relation subtypes.</S>
    <S sid="40" ssid="15">It also shows that our system outperforms tree kernel-based systems (Culotta et al 2004) by over 20 F-measure on extracting 5 ACE relation types.</S>
  </SECTION>
  <SECTION title="3 Support Vector Machines" number="3">
    <S sid="41" ssid="1">Support Vector Machines (SVMs) are a supervised machine learning technique motivated by the statistical learning theory (Vapnik 1998).</S>
    <S sid="42" ssid="2">Based on the structural risk minimization of the statistical learning theory, SVMs seek an optimal separating hyper-plane to divide the training examples into two classes and make decisions based on support vectors which are selected as the only effective instances in the training set.</S>
    <S sid="43" ssid="3">Basically, SVMs are binary classifiers.</S>
    <S sid="44" ssid="4">Therefore, we must extend SVMs to multi-class (e.g.</S>
    <S sid="45" ssid="5">K) such as the ACE RDC task.</S>
    <S sid="46" ssid="6">For efficiency, we apply the one vs. others strategy, which builds K classifiers so as to separate one class from all others, instead of the pairwise strategy, which builds K*(K-1)/2 classifiers considering all pairs of classes.</S>
    <S sid="47" ssid="7">The final decision of an instance in the multiple binary classification is determined by the class which has the maximal SVM output.</S>
    <S sid="48" ssid="8">Moreover, we only apply the simple linear kernel, although other kernels can peform better.</S>
    <S sid="49" ssid="9">The reason why we choose SVMs for this purpose is that SVMs represent the state-of&#8211;the-art in the machine learning research community, and there are good implementations of the algorithm available.</S>
    <S sid="50" ssid="10">In this paper, we use the binary-class SVMLight2 deleveloped by Joachims (1998).</S>
  </SECTION>
  <SECTION title="4 Features" number="4">
    <S sid="51" ssid="1">The semantic relation is determined between two mentions.</S>
    <S sid="52" ssid="2">In addition, we distinguish the argument order of the two mentions (M1 for the first mention and M2 for the second mention), e.g.</S>
    <S sid="53" ssid="3">M1-ParentOf-M2 vs. M2-Parent-Of-M1.</S>
    <S sid="54" ssid="4">For each pair of mentions3, we compute various lexical, syntactic and semantic features.</S>
    <S sid="55" ssid="5">According to their positions, four categories of words are considered: 1) the words of both the mentions, 2) the words between the two mentions, 3) the words before M1, and 4) the words after M2.</S>
    <S sid="56" ssid="6">For the words of both the mentions, we also differentiate the head word4 of a mention from other words since the head word is generally much more important.</S>
    <S sid="57" ssid="7">The words between the two mentions are classified into three bins: the first word in between, the last word in between and other words in between.</S>
    <S sid="58" ssid="8">Both the words before M1 and after M2 are classified into two bins: the first word next to the mention and the second word next to the mention.</S>
    <S sid="59" ssid="9">Since a pronominal mention (especially neutral pronoun such as &#8216;it&#8217; and &#8216;its&#8217;) contains little information about the sense of the mention, the coreference chain is used to decide its sense.</S>
    <S sid="60" ssid="10">This is done by replacing the pronominal mention with the most recent non-pronominal antecedent when determining the word features, which include: 3 In ACE, each mention has a head annotation and an extent annotation.</S>
    <S sid="61" ssid="11">In all our experimentation, we only consider the word string between the beginning point of the extent annotation and the end point of the head annotation.</S>
    <S sid="62" ssid="12">This has an effect of choosing the base phrase contained in the extent annotation.</S>
    <S sid="63" ssid="13">In addition, this also can reduce noises without losing much of information in the mention.</S>
    <S sid="64" ssid="14">For example, in the case where the noun phrase &#8220;the former CEO of McDonald&#8221; has the head annotation of &#8220;CEO&#8221; and the extent annotation of &#8220;the former CEO of McDonald&#8221;, we only consider &#8220;the former CEO&#8221; in this paper.</S>
    <S sid="65" ssid="15">4 In this paper, the head word of a mention is normally set as the last word of the mention.</S>
    <S sid="66" ssid="16">However, when a preposition exists in the mention, its head word is set as the last word before the preposition.</S>
    <S sid="67" ssid="17">For example, the head word of the name mention &#8220;University of Michigan&#8221; is &#8220;University&#8221;.</S>
    <S sid="68" ssid="18">This feature concerns about the entity type of both the mentions, which can be PERSON, ORGANIZATION, FACILITY, LOCATION and Geo-Political Entity or GPE: This feature considers the entity level of both the mentions, which can be NAME, NOMIAL and PRONOUN: This category of features includes: Normally, the above overlap features are too general to be effective alone.</S>
    <S sid="69" ssid="19">Therefore, they are also combined with other features: 1) ET12+M1&gt;M2; 2) ET12+M1&lt;M2; 3) HM12+M1&gt;M2; 4) HM12+M1&lt;M2.</S>
    <S sid="70" ssid="20">It is well known that chunking plays a critical role in the Template Relation task of the 7th Message Understanding Conference (MUC-7 1998).</S>
    <S sid="71" ssid="21">The related work mentioned in Section 2 extended to explore the information embedded in the full parse trees.</S>
    <S sid="72" ssid="22">In this paper, we separate the features of base phrase chunking from those of full parsing.</S>
    <S sid="73" ssid="23">In this way, we can separately evaluate the contributions of base phrase chunking and full parsing.</S>
    <S sid="74" ssid="24">Here, the base phrase chunks are derived from full parse trees using the Perl script5 written by Sabine Buchholz from Tilburg University and the Collins&#8217; parser (Collins 1999) is employed for full parsing.</S>
    <S sid="75" ssid="25">Most of the chunking features concern about the head words of the phrases between the two mentions.</S>
    <S sid="76" ssid="26">Similar to word features, three categories of phrase heads are considered: 1) the phrase heads in between are also classified into three bins: the first phrase head in between, the last phrase head in between and other phrase heads in between; 2) the phrase heads before M1 are classified into two bins: the first phrase head before and the second phrase head before; 3) the phrase heads after M2 are classified into two bins: the first phrase head after and the second phrase head after.</S>
    <S sid="77" ssid="27">Moreover, we also consider the phrase path in between.</S>
    <S sid="78" ssid="28">This category of features includes information about the words, part-of-speeches and phrase labels of the words on which the mentions are dependent in the dependency tree derived from the syntactic full parse tree.</S>
    <S sid="79" ssid="29">The dependency tree is built by using the phrase head information returned by the Collins&#8217; parser and linking all the other fragments in a phrase to its head.</S>
    <S sid="80" ssid="30">It also includes flags indicating whether the two mentions are in the same NP/PP/VP.</S>
    <S sid="81" ssid="31">This category of features concerns about the information inherent only in the full parse tree.</S>
    <S sid="82" ssid="32">Semantic information from various resources, such as WordNet, is used to classify important words into different semantic lists according to their indicating relationships.</S>
  </SECTION>
  <SECTION title="Country Name List" number="5">
    <S sid="83" ssid="1">This is to differentiate the relation subtype &#8220;ROLE.Citizen-Of&#8221;, which defines the relationship between a person and the country of the person&#8217;s citizenship, from other subtypes, especially &#8220;ROLE.Residence&#8221;, where defines the relationship between a person and the location in which the person lives.</S>
    <S sid="84" ssid="2">Two features are defined to include this information: This is used to differentiate the six personal social relation subtypes in ACE: Parent, Grandparent, Spouse, Sibling, Other-Relative and OtherPersonal.</S>
    <S sid="85" ssid="3">This trigger word list is first gathered from WordNet by checking whether a word has the semantic class &#8220;person|...|relative&#8221;.</S>
    <S sid="86" ssid="4">Then, all the trigger words are semi-automatically6 classified into different categories according to their related personal social relation subtypes.</S>
    <S sid="87" ssid="5">We also extend the list by collecting the trigger words from the head words of the mentions in the training data according to their indicating relationships.</S>
    <S sid="88" ssid="6">Two features are defined to include this information:</S>
  </SECTION>
  <SECTION title="5 Experimentation" number="6">
    <S sid="89" ssid="1">This paper uses the ACE corpus provided by LDC to train and evaluate our feature-based relation extraction system.</S>
    <S sid="90" ssid="2">The ACE corpus is gathered from various newspapers, newswire and broadcasts.</S>
    <S sid="91" ssid="3">In this paper, we only model explicit relations because of poor inter-annotator agreement in the annotation of implicit relations and their limited number.</S>
    <S sid="92" ssid="4">We use the official ACE corpus from LDC.</S>
    <S sid="93" ssid="5">The training set consists of 674 annotated text documents (~300k words) and 9683 instances of relations.</S>
    <S sid="94" ssid="6">During development, 155 of 674 documents in the training set are set aside for fine-tuning the system.</S>
    <S sid="95" ssid="7">The testing set is held out only for final evaluation.</S>
    <S sid="96" ssid="8">It consists of 97 documents (~50k words) and 1386 instances of relations.</S>
    <S sid="97" ssid="9">Table 1 lists the types and subtypes of relations for the ACE Relation Detection and Characterization (RDC) task, along with their frequency of occurrence in the ACE training set.</S>
    <S sid="98" ssid="10">It shows that the 6 Those words that have the semantic classes &#8220;Parent&#8221;, &#8220;GrandParent&#8221;, &#8220;Spouse&#8221; and &#8220;Sibling&#8221; are automatically set with the same classes without change.</S>
    <S sid="99" ssid="11">However, The remaining words that do not have above four classes are manually classified.</S>
    <S sid="100" ssid="12">ACE corpus suffers from a small amount of annotated data for a few subtypes such as the subtype &#8220;Founder&#8221; under the type &#8220;ROLE&#8221;.</S>
    <S sid="101" ssid="13">It also shows that the ACE RDC task defines some difficult subtypes such as the subtypes &#8220;Based-In&#8221;, &#8220;Located&#8221; and &#8220;Residence&#8221; under the type &#8220;AT&#8221;, which are difficult even for human experts to differentiate.</S>
    <S sid="102" ssid="14">In this paper, we explicitly model the argument order of the two mentions involved.</S>
    <S sid="103" ssid="15">For example, when comparing mentions m1 and m2, we distinguish between m1-ROLE.Citizen-Of-m2 and m2ROLE.Citizen-Of-m1.</S>
    <S sid="104" ssid="16">Note that only 6 of these 24 relation subtypes are symmetric: &#8220;RelativeLocation&#8221;, &#8220;Associate&#8221;, &#8220;Other-Relative&#8221;, &#8220;OtherProfessional&#8221;, &#8220;Sibling&#8221;, and &#8220;Spouse&#8221;.</S>
    <S sid="105" ssid="17">In this way, we model relation extraction as a multi-class classification problem with 43 classes, two for each relation subtype (except the above 6 symmetric subtypes) and a &#8220;NONE&#8221; class for the case where the two mentions are not related.</S>
    <S sid="106" ssid="18">In this paper, we only measure the performance of relation extraction on &#8220;true&#8221; mentions with &#8220;true&#8221; chaining of coreference (i.e. as annotated by the corpus annotators) in the ACE corpus.</S>
    <S sid="107" ssid="19">Table 2 measures the performance of our relation extraction system over the 43 ACE relation subtypes on the testing set.</S>
    <S sid="108" ssid="20">It shows that our system achieves best performance of 63.1%/49.5%/ 55.5 in precision/recall/F-measure when combining diverse lexical, syntactic and semantic features.</S>
    <S sid="109" ssid="21">Table 2 also measures the contributions of different features by gradually increasing the feature set.</S>
    <S sid="110" ssid="22">It shows that: country name list and the personal relative trigger word list further increases the F-measure by 1.5 largely due to the differentiation of the relation subtype &#8220;ROLE.Citizen-Of&#8221; from &#8220;ROLE.</S>
    <S sid="111" ssid="23">Residence&#8221; by distinguishing country GPEs from other GPEs.</S>
    <S sid="112" ssid="24">The effect of personal relative trigger words is very limited due to the limited number of testing instances over personal social relation subtypes.</S>
    <S sid="113" ssid="25">Table 4 separately measures the performance of different relation types and major subtypes.</S>
    <S sid="114" ssid="26">It also indicates the number of testing instances, the number of correctly classified instances and the number of wrongly classified instances for each type or subtype.</S>
    <S sid="115" ssid="27">It is not surprising that the performance on the relation type &#8220;NEAR&#8221; is low because it occurs rarely in both the training and testing data.</S>
    <S sid="116" ssid="28">Others like &#8220;PART.Subsidary&#8221; and &#8220;SOCIAL.</S>
    <S sid="117" ssid="29">Other-Professional&#8221; also suffer from their low occurrences.</S>
    <S sid="118" ssid="30">It also shows that our system performs best on the subtype &#8220;SOCIAL.Parent&#8221; and &#8220;ROLE.</S>
    <S sid="119" ssid="31">Citizen-Of&#8221;.</S>
    <S sid="120" ssid="32">This is largely due to incorporation of two semantic resources, i.e. the country name list and the personal relative trigger word list.</S>
    <S sid="121" ssid="33">Table 4 also indicates the low performance on the relation type &#8220;AT&#8221; although it frequently occurs in both the training and testing data.</S>
    <S sid="122" ssid="34">This suggests the difficulty of detecting and classifying the relation type &#8220;AT&#8221; and its subtypes.</S>
    <S sid="123" ssid="35">Table 5 separates the performance of relation detection from overall performance on the testing set.</S>
    <S sid="124" ssid="36">It shows that our system achieves the performance of 84.8%/66.7%/74.7 in precision/recall/Fmeasure on relation detection.</S>
    <S sid="125" ssid="37">It also shows that our system achieves overall performance of 77.2%/60.7%/68.0 and 63.1%/49.5%/55.5 in precision/recall/F-measure on the 5 ACE relation types and the best-reported systems on the ACE corpus.</S>
    <S sid="126" ssid="38">It shows that our system achieves better performance by ~3 F-measure largely due to its gain in recall.</S>
    <S sid="127" ssid="39">It also shows that feature-based methods dramatically outperform kernel methods.</S>
    <S sid="128" ssid="40">This suggests that feature-based methods can effectively combine different features from a variety of sources (e.g.</S>
    <S sid="129" ssid="41">WordNet and gazetteers) that can be brought to bear on relation extraction.</S>
    <S sid="130" ssid="42">The tree kernels developed in Culotta et al (2004) are yet to be effective on the ACE RDC task.</S>
    <S sid="131" ssid="43">Finally, Table 6 shows the distributions of errors.</S>
    <S sid="132" ssid="44">It shows that 73% (627/864) of errors results from relation detection and 27% (237/864) of errors results from relation characterization, among which 17.8% (154/864) of errors are from misclassification across relation types and 9.6% (83/864) of errors are from misclassification of relation subtypes inside the same relation types.</S>
    <S sid="133" ssid="45">This suggests that relation detection is critical for relation extraction.</S>
  </SECTION>
  <SECTION title="6 Discussion and Conclusion" number="7">
    <S sid="134" ssid="1">In this paper, we have presented a feature-based approach for relation extraction where diverse lexical, syntactic and semantic knowledge are employed.</S>
    <S sid="135" ssid="2">Instead of exploring the full parse tree information directly as previous related work, we incorporate the base phrase chunking information first.</S>
    <S sid="136" ssid="3">Evaluation on the ACE corpus shows that base phrase chunking contributes to most of the performance improvement from syntactic aspect while further incorporation of the parse tree and dependence tree information only slightly improves the performance.</S>
    <S sid="137" ssid="4">This may be due to three reasons: First, most of relations defined in ACE have two mentions being close to each other.</S>
    <S sid="138" ssid="5">While short-distance relations dominate and can be resolved by simple features such as word and chunking features, the further dependency tree and parse tree features can only take effect in the remaining much less and more difficult long-distance relations.</S>
    <S sid="139" ssid="6">Second, it is well known that full parsing is always prone to long-distance parsing errors although the Collins&#8217; parser used in our system achieves the state-of-the-art performance.</S>
    <S sid="140" ssid="7">Therefore, the state-of-art full parsing still needs to be further enhanced to provide accurate enough information, especially PP (Preposition Phrase) attachment.</S>
    <S sid="141" ssid="8">Last, effective ways need to be explored to incorporate information embedded in the full parse trees.</S>
    <S sid="142" ssid="9">Besides, we also demonstrate how semantic information such as WordNet and Name List, can be used in feature-based relation extraction to further improve the performance.</S>
    <S sid="143" ssid="10">The effective incorporation of diverse features enables our system outperform previously bestreported systems on the ACE corpus.</S>
    <S sid="144" ssid="11">Although tree kernel-based approaches facilitate the exploration of the implicit feature space with the parse tree structure, yet the current technologies are expected to be further advanced to be effective for relatively complicated relation extraction tasks such as the one defined in ACE where 5 types and 24 subtypes need to be extracted.</S>
    <S sid="145" ssid="12">Evaluation on the ACE RDC task shows that our approach of combining various kinds of evidence can scale better to problems, where we have a lot of relation types with a relatively small amount of annotated data.</S>
    <S sid="146" ssid="13">The experiment result also shows that our feature-based approach outperforms the tree kernel-based approaches by more than 20 F-measure on the extraction of 5 ACE relation types.</S>
    <S sid="147" ssid="14">In the future work, we will focus on exploring more semantic knowledge in relation extraction, which has not been covered by current research.</S>
    <S sid="148" ssid="15">Moreover, our current work is done when the Entity Detection and Tracking (EDT) has been perfectly done.</S>
    <S sid="149" ssid="16">Therefore, it would be interesting to see how imperfect EDT affects the performance in relation extraction.</S>
  </SECTION>
</PAPER>
