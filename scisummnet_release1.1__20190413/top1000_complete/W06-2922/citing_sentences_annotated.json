[
  {
    "citance_No": 1, 
    "citing_paper_id": "W06-2920", 
    "citing_paper_authority": 228, 
    "citing_paper_authors": "Sabine, Buchholz | Erwin, Marsi", 
    "raw_text": "Bick (2006) used the lowercased FORM if the LEMMA is not available, Corston-Oliver and Aue (2006) a prefix and Attardi (2006) a stem derived by a rule-based system for Danish, German and Swedish", 
    "clean_text": "Bick (2006) used the lowercased FORM if the LEMMA is not available, Corston-Oliver and Aue (2006) a prefix and Attardi (2006) a stem derived by a rule-based system for Danish, German and Swedish.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 2, 
    "citing_paper_id": "W06-2920", 
    "citing_paper_authority": 228, 
    "citing_paper_authors": "Sabine, Buchholz | Erwin, Marsi", 
    "raw_text": "Use only some components ,e.g. Bick (2006) uses only case, mood and pronoun subclass andAttardi (2006) uses only gender, number, per son and case", 
    "clean_text": "Use only some components, e.g. Bick (2006) uses only case, mood and pronoun subclass and Attardi (2006) uses only gender, number, person and case.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 3, 
    "citing_paper_id": "P13-1014", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Francesco, Sartorio | Giorgio, Satta | Joakim, Nivre", 
    "raw_text": "The most efficient parsers are greedy transition-based parsers, which only explore a single derivation for each input and relies on a locally trained classifier for predicting the next parser action given a compact representation of the derivation history, as pioneered by Yamada and Matsumoto (2003), Nivre (2003), Attardi (2006), and others", 
    "clean_text": "The most efficient parsers are greedy transition-based parsers, which only explore a single derivation for each input and relies on a locally trained classifier for predicting the next parser action given a compact representation of the derivation history, as pioneered by Yamada and Matsumoto (2003), Nivre (2003), Attardi (2006), and others.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 4, 
    "citing_paper_id": "W11-2308", 
    "citing_paper_authority": 8, 
    "citing_paper_authors": "Felice, Dell'Orletta | Simonetta, Montemagni | Giulia, Venturi", 
    "raw_text": "Speech tagger described in Dell? Orletta (2009) and dependency? parsed by the DeSR parser (Attardi,2006) using Support Vector Machine as learning algorithm", 
    "clean_text": "Speech tagger described in Dell Orletta (2009) and dependency parsed by the DeSR parser (Attardi,2006) using Support Vector Machine as learning algorithm.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 5, 
    "citing_paper_id": "W08-2138", 
    "citing_paper_authority": 4, 
    "citing_paper_authors": "Massimiliano, Ciaramita | Giuseppe, Attardi | Felice, Dell'Orletta | Mihai, Surdeanu", 
    "raw_text": "left? to? right This model is a version of DeSR (Attardi, 2006), a deterministic classifier-based Shift/Reduceparser", 
    "clean_text": "This model is a version of DeSR (Attardi, 2006), a deterministic classifier-based Shift/Reduce parser.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 6, 
    "citing_paper_id": "C10-2129", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Wolfgang, Seeker | Bernd, Bohnet | Lilja, &Oslash;vrelid | Jonas, Kuhn", 
    "raw_text": "Transition based parsers typically have a linear or quadratic complexity (Attardi, 2006) .Nivre (2009) introduced a transition based non projective parsing algorithm that has a worst case quadratic complexity and an expected linear parsing time", 
    "clean_text": "Transition based parsers typically have a linear or quadratic complexity (Attardi, 2006) .Nivre (2009) introduced a transition based non projective parsing algorithm that has a worst case quadratic complexity and an expected linear parsing time.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 7, 
    "citing_paper_id": "P08-1108", 
    "citing_paper_authority": 67, 
    "citing_paper_authors": "Joakim, Nivre | Ryan, McDonald", 
    "raw_text": "(2004), and Attardi (2006)", 
    "clean_text": "", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 8, 
    "citing_paper_id": "P08-1110", 
    "citing_paper_authority": 4, 
    "citing_paper_authors": "Carlos, G&oacute;mez-Rodr&iacute;guez | John, Carroll | David, Weir", 
    "raw_text": "How ever, other non projective parsers such as (Attardi, 2006) follow a constructive approach and can be analysed deductively", 
    "clean_text": "However, other non-projective parsers such as (Attardi, 2006) follow a constructive approach and can be analysed deductively.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 9, 
    "citing_paper_id": "D12-1029", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Daniel, Fern&Atilde;&iexcl;ndez-Gonz&Atilde;&iexcl;lez | Carlos, G&oacute;mez-Rodr&iacute;guez", 
    "raw_text": "However, the goal of that transition is different from ours (selecting between projective and non projective parsing, rather than building some arcs in advance) and the approach is specific to one algorithm while ours is generic? for example, the LEFT ARC transition can not be added to the arc-standard and arc-eager parsers, or to extensions of those like the ones by Attardi (2006) or Nivre (2009), because these already have it", 
    "clean_text": "However, the goal of that transition is different from ours (selecting between projective and non projective parsing, rather than building some arcs in advance) and the approach is specific to one algorithm while ours is generic for example, the LEFT ARC transition can not be added to the arc-standard and arc-eager parsers, or to extensions of those like the ones by Attardi (2006) or Nivre (2009), because these already have it.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 10, 
    "citing_paper_id": "D12-1029", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Daniel, Fern&Atilde;&iexcl;ndez-Gonz&Atilde;&iexcl;lez | Carlos, G&oacute;mez-Rodr&iacute;guez", 
    "raw_text": "Non-projective transitions that create dependency arcs between non-contiguous nodes have been used in the transition-based parser by Attardi (2006)", 
    "clean_text": "Non-projective transitions that create dependency arcs between non-contiguous nodes have been used in the transition-based parser by Attardi (2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 11, 
    "citing_paper_id": "D07-1119", 
    "citing_paper_authority": 13, 
    "citing_paper_authors": "Giuseppe, Attardi | Felice, Dell'Orletta | Maria, Simi | Atanas, Chanev | Massimiliano, Ciaramita", 
    "raw_text": "DeSR (Attardi, 2006) is an incremental deterministic classifier-based parser", 
    "clean_text": "DeSR (Attardi, 2006) is an incremental deterministic classifier-based parser.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 12, 
    "citing_paper_id": "D11-1114", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Shay B., Cohen | Carlos, G&oacute;mez-Rodr&iacute;guez | Giorgio, Satta", 
    "raw_text": "This idea is demonstrated by Attardi (2006), who proposes a transition system whose individual trans it ions can deal with non-projective dependencies only to a limited extent, depending on the distance in the stack of the nodes involved in the newly constructed dependency", 
    "clean_text": "This idea is demonstrated by Attardi (2006), who proposes a transition system whose individual transitions can deal with non-projective dependencies only to a limited extent, depending on the distance in the stack of the nodes involved in the newly constructed dependency.", 
    "keep_for_gold": 1
  }, 
  {
    "citance_No": 13, 
    "citing_paper_id": "D11-1114", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Shay B., Cohen | Carlos, G&oacute;mez-Rodr&iacute;guez | Giorgio, Satta", 
    "raw_text": "Thereported coverage in Attardi (2006) is already very high when the system is restricted to transitions of degree two or three", 
    "clean_text": "The reported coverage in Attardi (2006) is already very high when the system is restricted to transitions of degree two or three.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 14, 
    "citing_paper_id": "D11-1114", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Shay B., Cohen | Carlos, G&oacute;mez-Rodr&iacute;guez | Giorgio, Satta", 
    "raw_text": "Table 1 gives additional statistics for tree banks from the CoNLL-X shared task (Buchholz and Marsi, 2006) .We now turn to describe our variant of the transition system of Attardi (2006), which is equivalent to the original system restricted to transitions of degree two", 
    "clean_text": "Table 1 gives additional statistics for treebanks from the CoNLL-X shared task (Buchholz and Marsi, 2006). We now turn to describe our variant of the transition system of Attardi (2006), which is equivalent to the original system restricted to transitions of degree two.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 15, 
    "citing_paper_id": "D11-1114", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Shay B., Cohen | Carlos, G&oacute;mez-Rodr&iacute;guez | Giorgio, Satta", 
    "raw_text": "4 Arabic 180 21 7 Bulgarian 961 41 10 Czech 27181 1668 85 Danish 876 136 53 Dutch 9072 2119 171 German 15827 2274 466 Japanese 1484 143 9 Portuguese 3104 424 37 Slovene 601 48 13 Spanish 66 7 0 Swedish 1566 226 79 Turkish 579 185 8Table 1: The number of non-projective relations of various degrees for several tree banks (training sets), as reported by the parser of Attardi (2006)", 
    "clean_text": "Table 1: The number of non-projective relations of various degrees for several treebanks (training sets), as reported by the parser of Attardi (2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 16, 
    "citing_paper_id": "D11-1114", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Shay B., Cohen | Carlos, G&oacute;mez-Rodr&iacute;guez | Giorgio, Satta", 
    "raw_text": "We turn next to describe the equivalence between our system and the system in Attardi (2006)", 
    "clean_text": "We turn next to describe the equivalence between our system and the system in Attardi (2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 17, 
    "citing_paper_id": "D11-1114", 
    "citing_paper_authority": 2, 
    "citing_paper_authors": "Shay B., Cohen | Carlos, G&oacute;mez-Rodr&iacute;guez | Giorgio, Satta", 
    "raw_text": "While in the previous sections we have described a tabular method for the transition system of Attardi (2006) restricted to transitions of degree up to two ,itis possible to generalize the model to include higher degree transitions", 
    "clean_text": "While in the previous sections we have described a tabular method for the transition system of Attardi (2006) restricted to transitions of degree up to two, it is possible to generalize the model to include higher degree transitions.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 18, 
    "citing_paper_id": "W07-2217", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Massimiliano, Ciaramita | Giuseppe, Attardi", 
    "raw_text": "We build upon DeSR, the shift-reduce parser described in (Attardi, 2006)", 
    "clean_text": "We build upon DeSR, the shift-reduce parser described in (Attardi, 2006).", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 19, 
    "citing_paper_id": "W07-2217", 
    "citing_paper_authority": 3, 
    "citing_paper_authors": "Massimiliano, Ciaramita | Giuseppe, Attardi", 
    "raw_text": "(Attardi, 2006)) have been introduced for handling non-projective dependency trees :i.e., trees that can not be drawn in the plane without crossing edges", 
    "clean_text": "(Attardi, 2006)) have been introduced for handling non-projective dependency trees: i.e., trees that can not be drawn in the plane without crossing edges.", 
    "keep_for_gold": 0
  }, 
  {
    "citance_No": 20, 
    "citing_paper_id": "W11-0314", 
    "citing_paper_authority": 1, 
    "citing_paper_authors": "Felice, Dell'Orletta | Giulia, Venturi | Simonetta, Montemagni", 
    "raw_text": "ULISSE was tested against the output of two really different data? driven parsers: the first? order Maximum Spanning Tree (MST) parser (McDonald et al., 2006) and the DeSR parser (Attardi, 2006) using Support Vector Machine as learning algorithm", 
    "clean_text": "ULISSE was tested against the output of two really different data-driven parsers: the first order Maximum Spanning Tree (MST) parser (McDonald et al., 2006) and the DeSR parser (Attardi, 2006) using Support Vector Machine as learning algorithm.", 
    "keep_for_gold": 0
  }
]
