<PAPER>
  <S sid="0">A Stochastic Parts Program And Noun Phrase Parser For Unrestricted Text</S>
  <ABSTRACT>
    <S sid="1" ssid="1">There are five missing brackets which are indicated as &amp;quot;*[&amp;quot; or &amp;quot;1&amp;quot;.</S>
    <S sid="2" ssid="2">Words with a second NP tag were identified as proper nouns in a prepass.</S>
    <S sid="3" ssid="3">[A/AT former/AP top/NN aide/NN] to/IN [At-torney/NP/NP General/NP/NP Edwin/NP/NP Meese/NP/NP] interceded/VBD to/TO extend/VB [an/AT aircraftNN company/NN 's/$ govern-ment/NN contract/NN] ,/, then/RB went/VBD into/IN [business/NM] with/IN [a/AT lobby-ist/NN1 [who/WPS] worked/VBD for/IN [the/AT defense/NN contractor/NN] ,/, according/IN to/IN [a/AT published/VBN report/NN] ./.</S>
    <S sid="4" ssid="4">[James/NP/NP E/NP./NP Jenkins/NP/NP] ,/, [a/AT one-time/JJ senior/JJ deputy/NN] to/IN [Meese/NP/NP] joined/VBD [the/AT board/NN] of/IN [directors/NNS] of/IN [Transworld/NP/NP Group/NP/NP Ltd/NP./NP] on/IN [April/NP/NP 28/CD] ,/, [1984/CD] ,/, [the/AT Chicago/NP/NP Tribune/NP/NP] reporteci/VBD in/IN [its/PP$ Tuesday/NR editions/NNS] ./.</S>
    <S sid="5" ssid="5">[The/AT principal/JJ figure/NN] in/IN [Trans-world/NP/NP] was/BEDZ [Richard/NP/NP Mill-man/NP/NP] ,/, [a/AT lobbyist/NN] for/IN [Fair-child/NP/NP Industries/NP/NP Inc/NP./NP] ,/, Virginia/NP/NP de fense/NN con- 142 tractor/NN] I, [the/AT Tribune/NP/NP] said/VBD .1.</S>
    <S sid="6" ssid="6">[A/AT federal/JJ grand/JJ jury/NN] is/BEZ in- [the/AT Fairchild/NP/NP transaction/NN] and/CC [other/AP actions/NNS] of/IN [Meese/NP/NP] and/CC [former/AP White/NP/NP House/NP/NP aide/NN Nofziger/NP/NP] in/IN [connection/NN] with/IN [Wedtech/NP/NP New/NP/NP York/NP/NP defense/NN company/NN] [that/WPS] received/VBD [$250/CD million/CD] in/IN [govemment/NN contracts/NNS] issued/VBN without/EN [competitive/JJ bidding/NN] during/IN [the/AT Reagan/NP/NP administration/NN] ./.</S>
    <S sid="7" ssid="7">[Jenkins/NP/NP] left/VBD [the/AT White/NP/NP House/NP/NP] in/IN [1984/CD] 1, and/CC joined/VBD [Wedtech/NP/NP] as/CS [its/PP$ director/NN] of/IN [marketing/NN *]*[ two/CD years/NNS] later/RBR .1.</S>
    <S sid="8" ssid="8">[Deborah/NP/NP Tucker/NP/NP] ,/, [a/AT spokeswoman/NN] for/IN [Fairchild/NP/NP] ,/, said/VBD [Friday/NR] that/CS [the/AT cornpany/NN] had/HVD been/BEN contacted/VBN by/IN [the/AT office/NN] of/IN [independent/JJ counsel/NN James/NP/NP McKay/NP/NP] and/CC [subpoenas/NNS] had/HVD been/BEN served/VBN on/IN [Fairchild/NP/NP] ./.</S>
    <S sid="9" ssid="9">[Tucker/NP/NP] said/VBD [the/AT investigation/NN] involving/IN [Fairchild/NP/NP] had/HVD been/BEN going/VBG on/IN [a/AT number/NN] of/IN [weeks/NNS] and/CC predates/VBZ [last/AP week/NN 's/$ exof/1N [McKay/NP/NP 's/$ investigation/NN] to/TO include/VB [Meese/NP/NP] ./.</S>
    <S sid="10" ssid="10">[The/AT company/NN] is/BEZ cooperating/VBG in/1N [the/AT investigation/NN] ,/, [Tucker/NP/NP] said/VBD ./.</S>
    <S sid="11" ssid="11">[A/AT source/NN *] close/NN***] to/IN [McKay/NP/NP] said/VBD [last/AP week/NN&amp;quot; that/CS [Meese/NP/NP] isn't/BEZ* under/IN [cruninalaJ investigation/NN] in/IN [the/AT Fairchild/NP/NP matter/NN] ,/, but/RB is/BEZ [a/AT witness/NN] ./.</S>
    <S sid="12" ssid="12">[The/NP Tribune/NP/NP] said/VBD [Mill- ,/, acting/VBG as/CS [a/AT lobbyist/NN] for/1N [the/AT Chantilly/NP/NP] ,/, [Va/NP.-based/NP company/NN] ,/, went/VBD to/TO see/VB [Jenkins/NP/NP] in/IN [1982/CD] and/CC urged/VBD [him/PPO] and/CC [Meese/NP/NPI to/TO encourage/VB [the/AT Air/NP/NP Force/NP/NP] to/E0 extend/VB [the/AT production/NN] of/1/&#8226;1 [Fairchild/NP/NP 's/$ A-10/NP bomber/NN] for/IN [a/AT year/NN] ./.</S>
    <S sid="13" ssid="13">[Millman/NP/NP] said/VBD there/RB was/BEDZ [a/AT lucrative/JJ market/NN] in/IN [Third/NP/NP World/NP/NP countries/NNS] ,/, but/CC that/CS [Fairchild/NP/NP 's/$ chances/NNS] would/MD be/BE limited/VBN if/CS [the/AT Air/NP/NP Force/NP/NP] was/BEDZ not/* producing/VBG [the/AT plane/NN] ./.</S>
    <S sid="14" ssid="14">[The/AT Air/NP/NP Force/NP/NP] had/HVD decided/VBN to/TO discontinue/VB [production/NN] of/IN [the/AT A-10/NP] ,/, [a/AT 1960s-era/CD ground-support/NN attack/NN bomber/NN] at/IN [the/AT time/NN *]*[ Fairchild/NP/NP] was/BEDZ hoping/VBG to/TO sell/VB [A-10s/NP] abroad/RB j, [the/AT Tribune/NP/NP] said/VBD ./.</S>
    <S sid="15" ssid="15">[The/AT newspaper/NN] said/VBD [one/CD source/NN] reported/VBD that/CS after/CS [Millman/NP/NP] made/VBD [his/PPS pitch/NN] J, [Meese/NP/NP] ordered/VBD [Jenlcins/NP/NP] to/TO prepare/VB [a/AT memo/NN] on/IN [behalf/NN] of/IN [Fairchild/NP/NP] ./.</S>
    <S sid="16" ssid="16">[Memos/NP***] signed/VBD by/IN [Meese/NP/NP] ,/, stressing/VBG [the/AT importance/NN] of/IN [Fairchild/NP/NP 's/$ arranging/VBG sales/NNS] in/IN [Third/NP/NP World/NP/NP countries/NNS] j, were/BED sent/VBN to/IN [the/AT State/NP/NP Department/NP/NP] and/CC [the/AT Air/NP/NP Force/NP/NP] ./.</S>
    <S sid="17" ssid="17">[Millman/NP/NP] did/DOD not/* return/VB [telephone/NN calls/NNS] to/EN [his/PP$ office/NN1 and/CC [referral/NN numbers/NNS] [Monday/NR] ,I, [the/AT Tribune/NP/NP] said/VBD ./.</S>
  </ABSTRACT>
  <SECTION title="" number="1">
    <S sid="18" ssid="1">It is well-known that part of speech depends on context.</S>
    <S sid="19" ssid="2">The word &amp;quot;table,&amp;quot; for example, can be a verb in some contexts (e.g., &amp;quot;He will table the motion&amp;quot;) and a noun in others (e.g., &amp;quot;The table is ready&amp;quot;).</S>
    <S sid="20" ssid="3">A program has been written which tags each word in an input sentence with the most likely part of speech.</S>
    <S sid="21" ssid="4">The program produces the following output for the two &amp;quot;table&amp;quot; sentences just mentioned: (PPS = subject pronoun; MD = modal; VB = verb (no inflection); AT = article; NN = noun; BEZ = present 3rd sg form of &amp;quot;to be&amp;quot;; JJ = adjective; notation is borrowed from [Francis and Kucera, pp.</S>
    <S sid="22" ssid="5">6-8]) Part of speech tagging is an important practical problem with potential applications in many areas including speech synthesis, speech recognition, spelling correction, proof-reading, query answering, machine translation and searching large text data bases (e.g., patents, newspapers).</S>
    <S sid="23" ssid="6">The author is particularly interested in speech synthesis applications, where it is clear that pronunciation sometimes depends on part of speech.</S>
    <S sid="24" ssid="7">Consider the following three examples where pronunciation depends on part of speech.</S>
    <S sid="25" ssid="8">First, there are words like &amp;quot;wind&amp;quot; where the noun has a different vowel than the verb.</S>
    <S sid="26" ssid="9">That is, the noun &amp;quot;wind&amp;quot; has a short vowel as in &amp;quot;the wind is strong,&amp;quot; whereas the verb &amp;quot;wind&amp;quot; has a long vowel as in &amp;quot;Don't forget to wind your watch.&amp;quot; Secondly, the pronoun &amp;quot;that&amp;quot; is stressed as in &amp;quot;Did you see THAT?&amp;quot; unlike the complementizer &amp;quot;that,&amp;quot; as in &amp;quot;It is a shame that he's leaving.&amp;quot; Thirdly, note the difference between &amp;quot;oily FLUID&amp;quot; and &amp;quot;TRANSMISSION fluid&amp;quot;; as a general rule, an adjective-noun sequence such as &amp;quot;oily FLUID&amp;quot; is typically stressed on the right whereas a noun-noun sequence such as &amp;quot;TRANSMISSION fluid&amp;quot; is typically stressed on the left.</S>
    <S sid="27" ssid="10">These are but three of the many constructions which would sound more natural if the synthesizer had access to accurate part of speech information.</S>
    <S sid="28" ssid="11">Perhaps the most important application of tagging programs is as a tool for future research.</S>
    <S sid="29" ssid="12">A number of large projects such as [Cobuild] have recently been collecting large corpora (101000 million words) in order to better describe how language is actually used in practice: &amp;quot;For the first time, a dictionary has been compiled by the thorough examination of representative group of English texts, spoken and written, running to many millions of words.</S>
    <S sid="30" ssid="13">This means that in addition to all the tools of the conventional dictionary makers... the dictionary is based on hard, measureable evidence.&amp;quot; [Cobuild, p. xv] It is likely that there will be more and more research projects collecting larger and larger corpora.</S>
    <S sid="31" ssid="14">A reliable parts program might greatly enhance the value of these corpora to many of these researchers.</S>
    <S sid="32" ssid="15">The program uses a linear time dynamic programming algorithm to find an assignment of parts of speech to words that optimizes the product of (a) lexical probabilities (probability of observing part of speech i given word j), and (b) contextual probabilities (probability of observing part of speech i given k previous parts of speech).</S>
    <S sid="33" ssid="16">Probability estimates were obtained by training on the Tagged Brown Corpus [Francis and Kucera], a corpus of approximately 1,000,000 words with part of speech tags assigned laboriously by hand over many years.</S>
    <S sid="34" ssid="17">Program performance is encouraging (95-99% &amp;quot;correct&amp;quot;, depending on the definition of &amp;quot;correct&amp;quot;).</S>
    <S sid="35" ssid="18">A small 400 word sample is presented in the Appendix, and is judged to be 99.5% correct.</S>
    <S sid="36" ssid="19">It is surprising that a local &amp;quot;bottom-up&amp;quot; approach can perform so well.</S>
    <S sid="37" ssid="20">Most errors are attributable to defects in the lexicon; remarkably few errors are related to the inadequacies of the extremely over-simplified grammar (a trigram model).</S>
    <S sid="38" ssid="21">Apparently, &amp;quot;long distance&amp;quot; dependences are not very important, at least most of the time.</S>
    <S sid="39" ssid="22">One might have thought that ngram models weren't adequate for the task since it is wellknown that they are inadequate for determining grammaticality: &amp;quot;We find that no finite-state Markov process that produces symbols with transition from state to state can serve as an English grammar.</S>
    <S sid="40" ssid="23">Furthermore, the particular subclass of such processes that produce norder statistical approximations to English do not come closer, with increasing n, to matching the output of an English grammar.&amp;quot; [Chomsky, p. 113] Chomslcy's conclusion was based on the observation that constructions such as: have long distance dependencies that span across any fixed length window n. Thus, ngram models are clearly inadequate for many natural language applications.</S>
    <S sid="41" ssid="24">However, for the tagging application, the ngram approximation may be acceptable since long distance dependencies do not seem to be very important.</S>
    <S sid="42" ssid="25">Statistical ngram models were quite popular in the 1950s, and have been regaining popularity over the past few years.</S>
    <S sid="43" ssid="26">The IBM speech group is perhaps the strongest advocate of ngram methods, especially in other applications such as speech recognition.</S>
    <S sid="44" ssid="27">Robert Mercer (private communication, 1982) has experimented with the tagging application, using a restricted corpus (laser patents) and small vocabulary (1000 words).</S>
    <S sid="45" ssid="28">Another group of researchers working in Lancaster around the same time, Leech, Garside and Atwell, also found ngram models highly effective; they report 96.7% success in automatically tagging the LOB Corpus, using a bigram model modified with heuristics to cope with more important trigrams.</S>
    <S sid="46" ssid="29">The present work developed independently from the LOB project.</S>
    <S sid="47" ssid="30">Many people who have not worked in computational linguistics have a strong intuition that lexical ambiguity is usually not much of a problem.</S>
    <S sid="48" ssid="31">It is commonly believed that most words have just one part of speech, and that the few exceptions such as &amp;quot;table&amp;quot; are easily disambiguated by context in most cases.</S>
    <S sid="49" ssid="32">In contrast, most experts in computational linguists have found lexical ambiguity to be a major issue; it is said that practically any content word can be used as a noun, verb or adjective,I and that local context is not always adequate to disambiguate.</S>
    <S sid="50" ssid="33">Introductory texts are full of ambiguous sentences such as where no amount of syntactic parsing will help.</S>
    <S sid="51" ssid="34">These examples are generally taken to indicate that the parser must allow for multiple possibilities and that grammar formalisms such as LR(k) are inadequate for natural language since these formalisms cannot cope with ambiguity.</S>
    <S sid="52" ssid="35">This argument was behind a large set of objections to Marcus' &amp;quot;LR(k)-like&amp;quot; Deterministic Parser.</S>
    <S sid="53" ssid="36">Although it is clear that an expert in computational linguistics can dream up arbitrarily hard sentences, it may be, as Marcus suggested, that most texts are not very hard in practice.</S>
    <S sid="54" ssid="37">Recall that Marcus hypothesized most decisions can be resolved by the parser within a small window (i.e., three buffer cells), and there are only a few problematic cases where the parser becomes confused.</S>
    <S sid="55" ssid="38">He called these confusing cases &amp;quot;garden paths,&amp;quot; by analogy with the famous example: &#8226; The horse raced past the barn fell.</S>
    <S sid="56" ssid="39">With just a few exceptions such as these &amp;quot;garden paths,&amp;quot; Marcus assumes, there is almost always a unique &amp;quot;best&amp;quot; interpretation which Can be found with very limited resources.</S>
    <S sid="57" ssid="40">The proposed stochastic approach is largely compatible with this; the proposed approach 1.</S>
    <S sid="58" ssid="41">From an information theory point of view, one can quantity ambiguity in bits.</S>
    <S sid="59" ssid="42">In the case of the Brown Tagged Corpus, the lexical entropy, the conditional entropy of the part of speech given the word is about 0.25 bits per part of speech.</S>
    <S sid="60" ssid="43">This is considerably smaller than the contextual entropy, the conditional entropy of the part of speech given the next two parts of speech.</S>
    <S sid="61" ssid="44">This entropy is estimated to be about 2 bits per part of speech. assumes that it is almost always sufficient to assign each word a unique &amp;quot;best&amp;quot; part of speech (and this can be accomplished with a very efficient linear time dynamic programming algorithm).</S>
    <S sid="62" ssid="45">After reading introductory discussions of &amp;quot;Flying planes can be dangerous,&amp;quot; one might have expected that lexical ambiguity was so pervasive that it would be hopeless to try to assign just one part of speech to each word and in just one linear time pass over the input words.</S>
  </SECTION>
  <SECTION title="2." number="2">
    <S sid="63" ssid="1">However, the proposed stochastic method is considerably simpler than what Marcus had in mind.</S>
    <S sid="64" ssid="2">His thesis parser used considerably more syntax than the proposed stochastic method.</S>
    <S sid="65" ssid="3">Consider the following pair described in [Marcus]: where it appears that the parser needs to look past an arbitrarily long noun phrase in order to correctly analyze &amp;quot;have,&amp;quot; which could be either a tenseless main verb (imperative) or a tensed auxiliary verb (question).</S>
    <S sid="66" ssid="4">Marcus' rather unusual example can no longer be handled by Fidditch, a more recent Marcus-style parser with very large coverage.</S>
    <S sid="67" ssid="5">In order to obtain such large coverage, Fidditch has had to take a more robust/modest view of lexical disambiguation.</S>
    <S sid="68" ssid="6">Whereas Marcus' Parsifal program distinguished patterns such as &amp;quot;have NP tenseless&amp;quot; and &amp;quot;have NP past-participle,&amp;quot; most of Fidditch's diagnostic rules are less ambitious and look only for the start of a noun phrase and do not attempt to look past an arbitrarily long noun phrase.</S>
    <S sid="69" ssid="7">For example, Fidditch has the following lexical disambiguation rule: which says that a preposition is more likely than a noun before a noun phrase.</S>
    <S sid="70" ssid="8">More precisely, the rule says that if a noun/preposition ambiguous word (e.g., &amp;quot;out&amp;quot;) is followed by something that starts a noun phrase (e.g., a determiner), then rule out the noun possibility.</S>
    <S sid="71" ssid="9">This type of lexical diagnostic rule can be captured with bigram and trigram statistics; it turns out that the sequence ...preposition determiner.., is much more common in the Brown Corpus (43924 observations) than the sequence ...noun determiner... (1135 observations).</S>
    <S sid="72" ssid="10">Most lexical disambiguation rules in Fidditch can be reformulated in terms of bigram and trigram statistics in this way.</S>
    <S sid="73" ssid="11">Moreover, it is worth doing so, because bigram and trigram statistics are much easier to obtain than Fidditch-type disambiguation rules, which are extremely tedious to program, test and debug.</S>
    <S sid="74" ssid="12">In addition, the proposed stochastic approach can naturally take advantage of lexical probabilities in a way that is not easy to capture with parsers that do not make use of frequency information.</S>
    <S sid="75" ssid="13">Consider, for example, the word &amp;quot;see,&amp;quot; which is almost always a verb, but does have an archaic nominal usage as in &amp;quot;the Holy See.&amp;quot; For practical purposes, &amp;quot;see&amp;quot; should not be considered noun/verb ambiguous in the same sense as truly ambiguous words like &amp;quot;program,&amp;quot; &amp;quot;house&amp;quot; and &amp;quot;wind&amp;quot;; the nominal usage of &amp;quot;see&amp;quot; is possible, but not likely.</S>
    <S sid="76" ssid="14">If every possibility in the dictionary must be given equal weight, parsing is very difficult.</S>
    <S sid="77" ssid="15">Dictionaries tend to focus on what is possible, not on what is likely.</S>
    <S sid="78" ssid="16">Consider the trivial sentence, &amp;quot;I see a bird.&amp;quot; For all practical purposes, every word in the sentence is unambiguous.</S>
    <S sid="79" ssid="17">According to [Francis and Kucera], the word &amp;quot;I&amp;quot; appears as a pronoun (PPLS) in 5837 out of 5838 observations (-100%), &amp;quot;see&amp;quot; appears as a verb in 771 out of 772 observations (-100%), &amp;quot;a&amp;quot; appears as an article in 23013 out of 23019 observations C100%) and &amp;quot;bird&amp;quot; appears as a noun in 26 out of 26 observations (-100%).</S>
    <S sid="80" ssid="18">However, according to Webster's Seventh New Collegiate Dictionary, every word is ambiguous.</S>
    <S sid="81" ssid="19">In addition to the desired assignments of tags, the first three words are listed as nouns and the last as an intransitive verb.</S>
    <S sid="82" ssid="20">One might hope that these spurious assignments could be ruled out by the parser as syntactically ill-formed.</S>
    <S sid="83" ssid="21">Unfortunately, this is unlikely to work.</S>
    <S sid="84" ssid="22">If the parser is going to accept noun phrases of the form: Similarly, the parser probably also has to accept &amp;quot;bird&amp;quot; as an intransitive verb, since there is nothing syntactically wrong with: These part of speech assignments aren't wrong; they are just extremely improbable.</S>
  </SECTION>
  <SECTION title="3." number="3">
    <S sid="85" ssid="1">Consider once again the sentence, &amp;quot;I see a bird.&amp;quot; The problem is to find an assignment of parts of speech to words that optimizes both lexical and contextual probabilities, both of which are estimated from the Tagged Brown Corpus.</S>
    <S sid="86" ssid="2">The lexical probabilities are estimated from the following frequencies: (PPSS = pronoun; NP = proper noun; VB = verb; U11 = intellection; IN = preposition; AT = article; NN = noun) The lexical probabilities are estimated in the obvious way.</S>
    <S sid="87" ssid="3">For example, the probability that &amp;quot;I&amp;quot; is a pronoun, Prob(PPSS I &amp;quot;I&amp;quot;), is estimated as the freq(PPSS I &amp;quot;I&amp;quot;)/freq(&amp;quot;I&amp;quot;) or 5837/5838.</S>
    <S sid="88" ssid="4">The probability that &amp;quot;see&amp;quot; is a verb is estimated to be 771/772.</S>
    <S sid="89" ssid="5">The other lexical probability estimates follow the same pattern.</S>
    <S sid="90" ssid="6">The contextual probability, the probability of observing part of speech X given the following two parts of speech Y and Z, is estimated by dividing the trigram frequency XYZ by the bigram frequency YZ.</S>
    <S sid="91" ssid="7">Thus, for example, the probability of observing a verb before an article and a noun is estimated to be the ratio of the freq(VB, AT, NN) over the freq(AT, NN) or 3412/53091 = 0.064.</S>
    <S sid="92" ssid="8">The probability of observing a noun in the same context is estimated as the ratio of freq(NN, AT, NN) over 53091 or 629/53091 = 0.01.</S>
    <S sid="93" ssid="9">The other contextual probability estimates follow the same pattern.</S>
    <S sid="94" ssid="10">A search is performed in order to find the assignment of part of speech tags to words that optimizes the product of the lexical and contextual probabilities.</S>
    <S sid="95" ssid="11">Conceptually, the search enumerates all possible assignments of parts of speech to input words.</S>
    <S sid="96" ssid="12">In this case, there are four input words, three of which are two ways ambiguous, producing a set of 2*2*2*1=8 possible assignments of parts of Each of the eight sequences are then scored by the product of the lexical probabilities and the contextual probabilities, and the best sequence is selected.</S>
    <S sid="97" ssid="13">In this case, the first sequence is by far the best.</S>
    <S sid="98" ssid="14">In fact, it is not necessary to enumerate all possible assignments because the scoring function cannot see more than two words away.</S>
    <S sid="99" ssid="15">In other words, in the process of enumerating part of speech sequences, it is possible in some cases to know that some sequence cannot possibly compete with another and can therefore be abandoned.</S>
    <S sid="100" ssid="16">Because of this fact, only 0(n) paths will be enumerated.</S>
    <S sid="101" ssid="17">Let us illustrate this optimization with an example: Find all assignments of parts of speech to &amp;quot;bird&amp;quot; and score the partial sequence.</S>
    <S sid="102" ssid="18">Henceforth, all scores are to be interpreted as log probabilities.</S>
  </SECTION>
  <SECTION title="(-4.848072 &amp;quot;NN&amp;quot;)" number="4">
    <S sid="103" ssid="1">Find all assignments of parts of speech to &amp;quot;a&amp;quot; and score.</S>
    <S sid="104" ssid="2">At this point, there are two paths: (-7.4453945 &amp;quot;AT&amp;quot; &amp;quot;NN&amp;quot;) (-15.01957 &amp;quot;IN&amp;quot; &amp;quot;NN&amp;quot;) Now, find assignments of &amp;quot;see&amp;quot; and score.</S>
    <S sid="105" ssid="3">At this point, the number of paths seem to be growing exponentially.</S>
    <S sid="106" ssid="4">Now, find assignments of &amp;quot;I&amp;quot; and score.</S>
    <S sid="107" ssid="5">Note, however, that it is no longer necessary to hypothesize that &amp;quot;a&amp;quot; might be a French preposition IN because all four paths, PPSS VB IN NN, NN VB IN NN, PPSS UH IN NN and NP UH AT NN score less well than some other path and there is no way that any additional input could make any difference.</S>
    <S sid="108" ssid="6">In particular, the path, PPSS VB IN NN scores less well than the path PPSS VB AT NN, and additional input will not help PPSS VB IN NN because the contextual scoring function has a limited window of three parts of speech, and that is not enough to see past the existing PPSS and VB.</S>
    <S sid="109" ssid="7">Similar stochastic methods have been applied to locate simple noun phrases with very high accuracy.</S>
    <S sid="110" ssid="8">The program inserts brackets into a sequence of parts of speech, producing output such as: The proposed method is a stochastic analog of precedence parsing.</S>
    <S sid="111" ssid="9">Recall that precedence parsing makes use of a table that says whether to insert an open or close bracket between any two categories (terminal or nonterminal).</S>
    <S sid="112" ssid="10">The proposed method makes use of a table that givvs the probabilities of an open and close bracket between all pairs of parts of speech.</S>
    <S sid="113" ssid="11">A sample is shown below for the five parts of speech: AT (article), NN (singular noun), NNS (non-singular noun), VB (uninflected verb), IN (preposition).</S>
    <S sid="114" ssid="12">The table says, for example, that there is no chance of starting a noun phrases after an article (all five entries on the AT row are 0) and that there is a large probability of starting a noun phrase between a verb and an noun (the entry in These probabilities were estimated from about 40,000 words (11,000 noun phrases) of training material selected from the Brown Corpus.</S>
    <S sid="115" ssid="13">The training material was parsed into noun phrases by laborious semi-automatic means (with considerable help from Eva Ejerhed).</S>
    <S sid="116" ssid="14">It took about a man-week to prepare the training material.</S>
    <S sid="117" ssid="15">The stochastic parser is given a sequence of parts of speech as input and is asked to insert brackets corresponding to the beginning and end of noun phrases.</S>
    <S sid="118" ssid="16">Conceptually, the parser enumerates all possible parsings of the input and scores each of them by the precedence probabilities.</S>
    <S sid="119" ssid="17">Consider, for example, the input sequence: NN VB.</S>
    <S sid="120" ssid="18">There are 5 possible ways to bracket this sequence (assuming no recursion): Each of these parsings is scored by multiplying 6 precedence probabilities, the probability of an open/close bracket appearing (or not appearing) in any one of the three positions (before the NN, after the NN or after the VB).</S>
    <S sid="121" ssid="19">The parsing with the highest score is returned as output.</S>
    <S sid="122" ssid="20">A small sample of the output is given in the appendix.</S>
    <S sid="123" ssid="21">The method works remarkably well considering how simple it is.</S>
    <S sid="124" ssid="22">There is some tendency to underestimate the number of brackets and run two noun phrases together as in [NP the time Fairchild].</S>
    <S sid="125" ssid="23">The proposed method omitted only 5 of 243 noun phrase brackets in the appendix.</S>
  </SECTION>
</PAPER>
