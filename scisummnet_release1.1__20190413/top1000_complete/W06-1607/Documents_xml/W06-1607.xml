<PAPER>
  <S sid="0">Phrasetable Smoothing For Statistical Machine Translation</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We discuss different strategies for smoothing the phrasetable in Statistical MT, and give results over a range of translation settings.</S>
    <S sid="2" ssid="2">We show that any type of smoothing is a better idea than the relativefrequency estimates that are often used.</S>
    <S sid="3" ssid="3">The best smoothing techniques yield consistent gains of approximately 1% (absolute) according to the BLEU metric.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="4" ssid="1">Smoothing is an important technique in statistical NLP, used to deal with perennial data sparseness and empirical distributions that overfit the training corpus.</S>
    <S sid="5" ssid="2">Surprisingly, however, it is rarely mentioned in statistical Machine Translation.</S>
    <S sid="6" ssid="3">In particular, state-of-the-art phrase-based SMT relies on a phrasetable&#8212;a large set of ngram pairs over the source and target languages, along with their translation probabilities.</S>
    <S sid="7" ssid="4">This table, which may contain tens of millions of entries, and phrases of up to ten words or more, is an excellent candidate for smoothing.</S>
    <S sid="8" ssid="5">Yet very few publications describe phrasetable smoothing techniques in detail.</S>
    <S sid="9" ssid="6">In this paper, we provide the first systematic study of smoothing methods for phrase-based SMT.</S>
    <S sid="10" ssid="7">Although we introduce a few new ideas, most methods described here were devised by others; the main purpose of this paper is not to invent new methods, but to compare methods.</S>
    <S sid="11" ssid="8">In experiments over many language pairs, we show that smoothing yields small but consistent gains in translation performance.</S>
    <S sid="12" ssid="9">We feel that this paper only scratches the surface: many other combinations of phrasetable smoothing techniques remain to be tested.</S>
    <S sid="13" ssid="10">We define a phrasetable as a set of source phrases (ngrams) s&#732; and their translations &#732;t, along with associated translation probabilities p(&#732;s|&#732;t) and &#732;t|&#732;s).</S>
    <S sid="14" ssid="11">These conditional distributions are derived from the joint frequencies c(&#732;s, &#732;t) of source/target phrase pairs observed in a word-aligned parallel corpus.</S>
    <S sid="15" ssid="12">Traditionally, maximum-likelihood estimation from relative frequencies is used to obtain conditional probabilities (Koehn et al., 2003), eg, p(&#732;s|&#732;t) = c(&#732;s, &#732;t)/ Es&#732; c(&#732;s, &#732;t) (since the estimation problems for p(&#732;s|&#732;t) and p(&#732;t|&#732;s) are symmetrical, we will usually refer only to p(&#732;s|&#732;t) for brevity).</S>
    <S sid="16" ssid="13">The most obvious example of the overfitting this causes can be seen in phrase pairs whose constituent phrases occur only once in the corpus.</S>
    <S sid="17" ssid="14">These are assigned conditional probabilities of 1, higher than the estimated probabilities of pairs for which much more evidence exists, in the typical case where the latter have constituents that cooccur occasionally with other phrases.</S>
    <S sid="18" ssid="15">During decoding, overlapping phrase pairs are in direct competition, so estimation biases such as this one in favour of infrequent pairs have the potential to significantly degrade translation quality.</S>
    <S sid="19" ssid="16">An excellent discussion of smoothing techniques developed for ngram language models (LMs) may be found in (Chen and Goodman, 1998; Goodman, 2001).</S>
    <S sid="20" ssid="17">Phrasetable smoothing differs from ngram LM smoothing in the following ways: Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing (EMNLP 2006), pages 53&#8211;61, Sydney, July 2006. c&#65533;2006 Association for Computational Linguistics c(&#732;s, &#732;t) = 0.1 However, probability mass is To model p(t, a|s), we use a standard loglinear reserved for the set of unseen translations, implying that probability mass is subtracted from the seen translations.</S>
    <S sid="21" ssid="18">We propose various ways of dealing with these special features of the phrasetable smoothing problem, and give evaluations of their performance within a phrase-based SMT system.</S>
    <S sid="22" ssid="19">The paper is structured as follows: section 2 gives a brief description of our phrase-based SMT system; section 3 presents the smoothing techniques used; section 4 reviews previous work; section 5 gives experimental results; and section 6 concludes and discusses future work.</S>
  </SECTION>
  <SECTION title="2 Phrase-based Statistical MT" number="2">
    <S sid="23" ssid="1">Given a source sentence s, our phrase-based SMT system tries to find the target sentence t&#710; that is the most likely translation of s. To make search more efficient, we use the Viterbi approximation and seek the most likely combination of t and its alignment a with s, rather than just the most likely t: where a = (&#732;s1, &#732;t1, j1), ..., (&#732;sK, &#732;tK, jK); &#732;tk are target phrases such that t = &#732;t1 ... &#732;tK; &#732;sk are source phrases such that s = &#732;sj1 ... &#732;sjK; and &#732;sk is the translation of the kth target phrase &#732;tk. where each fi(s, t, a) is a feature function, and weights Ai are set using Och&#8217;s algorithm (Och, 2003) to maximize the system&#8217;s BLEU score (Papineni et al., 2001) on a development corpus.</S>
    <S sid="24" ssid="2">The features used in this study are: the length of t; a single-parameter distortion penalty on phrase reordering in a, as described in (Koehn et al., 2003); phrase translation model probabilities; and trigram language model probabilities log p(t), using Kneser-Ney smoothing as implemented in the SRILM toolkit (Stolcke, 2002).</S>
    <S sid="25" ssid="3">Phrase translation model probabilities are features of the form: ie, we assume that the phrases &#732;sk specified by a are conditionally independent, and depend only on their aligned phrases &#732;tk.</S>
    <S sid="26" ssid="4">The &#8220;forward&#8221; phrase probabilities p(&#732;t|&#732;s) are not used as features, but only as a filter on the set of possible translations: for each source phrase s&#732; that matches some ngram in s, only the 30 top-ranked translations t&#732; according to p(&#732;t|&#732;s) are retained.</S>
    <S sid="27" ssid="5">To derive the joint counts c(&#732;s, &#732;t) from which p(&#732;s|&#732;t) and p(&#732;t|&#732;s) are estimated, we use the phrase induction algorithm described in (Koehn et al., 2003), with symmetrized word alignments generated using IBM model 2 (Brown et al., 1993).</S>
  </SECTION>
  <SECTION title="3 Smoothing Techniques" number="3">
    <S sid="28" ssid="1">Smoothing involves some recipe for modifying conditional distributions away from pure relativefrequency estimates made from joint counts, in order to compensate for data sparsity.</S>
    <S sid="29" ssid="2">In the spirit of ((Hastie et al., 2001), figure 2.11, pg.</S>
    <S sid="30" ssid="3">38) smoothing can be seen as a way of combining the relativefrequency estimate, which is a model with high complexity, high variance, and low bias, with another model with lower complexity, lower variance, and high bias, in the hope of obtaining better performance on new data.</S>
    <S sid="31" ssid="4">There are two main ingredients in all such recipes: some probability distribution that is smoother than relative frequencies (ie, that has fewer parameters and is thus less complex) and some technique for combining that distribution with relative frequency estimates.</S>
    <S sid="32" ssid="5">We will now discuss both these choices: the distribution for carrying out smoothing and the combination technique.</S>
    <S sid="33" ssid="6">In this discussion, we use &#732;p() to denote relative frequency distributions.</S>
    <S sid="34" ssid="7">One can distinguish between two approaches to smoothing phrase tables.</S>
    <S sid="35" ssid="8">Black-box techniques do not look inside phrases but instead treat them as atomic objects: that is, both the s&#732; and the t&#732; in the expression p(&#732;s|&#732;t) are treated as units about which nothing is known except their counts.</S>
    <S sid="36" ssid="9">In contrast, glass-box methods break phrases down into their component words.</S>
    <S sid="37" ssid="10">The black-box approach, which is the simpler of the two, has received little attention in the SMT literature.</S>
    <S sid="38" ssid="11">An interesting aspect of this approach is that it allows one to implement phrasetable smoothing techniques that are analogous to LM smoothing techniques, by treating the problem of estimating p(&#732;s|&#732;t) as if it were the problem of estimating a bigram conditional probability.</S>
    <S sid="39" ssid="12">In this paper, we give experimental results for phrasetable smoothing techniques analogous to Good-Turing, Fixed-Discount, Kneser-Ney, and Modified Kneser-Ney LM smoothing.</S>
    <S sid="40" ssid="13">Glass-box methods for phrasetable smoothing have been described by other authors: see section 3.3.</S>
    <S sid="41" ssid="14">These authors decompose p(&#732;s|&#732;t) into a set of lexical distributions p(s|&#732;t) by making independence assumptions about the words s in &#732;s.</S>
    <S sid="42" ssid="15">The other possibility, which is similar in spirit to ngram LM lower-order estimates, is to combine estimates made by replacing words in t&#732; with wildcards, as proposed in section 3.4.</S>
    <S sid="43" ssid="16">Although we explored a variety of black-box and glass-box smoothing distributions, we only tried two combination techniques: linear interpolation, which we used for black-box smoothing, and loglinear interpolation, which we used for glass-box smoothing.</S>
    <S sid="44" ssid="17">For black-box smoothing, we could have used a backoff scheme or an interpolation scheme.</S>
    <S sid="45" ssid="18">Backoff schemes have the form: pb(&#732;s |&#732;t) is a smooth backoff distribution, and &#964; is a threshold above which counts are considered reliable.</S>
    <S sid="46" ssid="19">Typically, &#964; = 1 and ph(&#732;s |&#732;t) is version of &#732;p(&#732;s|&#732;t) modified to reserve some probability mass for unseen events.</S>
    <S sid="47" ssid="20">Interpolation schemes have the general form: where &#945; and &#946; are combining coefficients.</S>
    <S sid="48" ssid="21">As noted in (Chen and Goodman, 1998), a key difference between interpolation and backoff is that the former approach uses information from the smoothing distribution to modify &#732;p(&#732;s|&#732;t) for higher-frequency events, whereas the latter uses it only for low-frequency events (most often 0frequency events).</S>
    <S sid="49" ssid="22">Since for phrasetable smoothing, better prediction of unseen (zero-count) events has no direct impact&#8212;only seen events are represented in the phrasetable, and thus hypothesized during decoding&#8212;interpolation seemed a more suitable approach.</S>
    <S sid="50" ssid="23">For combining relative-frequency estimates with glass-box smoothing distributions, we employed loglinear interpolation.</S>
    <S sid="51" ssid="24">This is the traditional approach for glass-box smoothing (Koehn et al., 2003; Zens and Ney, 2004).</S>
    <S sid="52" ssid="25">To illustrate the difference between linear and loglinear interpolation, consider combining two Bernoulli distributions p1(x) and p2(x) using each method: where qi(x) = 1 &#8722; pi(x).</S>
    <S sid="53" ssid="26">Setting p2(x) = 0.5 to simulate uniform smoothing gives ploglin(x) = p1(x)&#945;/(p1(x)&#945; + q1(x)&#945;).</S>
    <S sid="54" ssid="27">This is actually less smooth than the original distribution p1(x): it preserves extreme values 0 and 1, and makes intermediate values more extreme.</S>
    <S sid="55" ssid="28">On the other hand, plinear(x) = &#945;p1(x) + (1 &#8722; &#945;)/2, which has the opposite properties: it moderates extreme values and tends to preserve intermediate values.</S>
    <S sid="56" ssid="29">An advantage of loglinear interpolation is that we can tune loglinear weights so as to maximize the true objective function, for instance BLEU; recall that our translation model is itself loglinear, with weights set to minimize errors.</S>
    <S sid="57" ssid="30">In fact, a limitation of the experiments described in this paper is that the loglinear weights for the glass-box techniques were optimized for BLEU using Och&#8217;s algorithm (Och, 2003), while the linear weights for black-box techniques were set heuristically.</S>
    <S sid="58" ssid="31">Obviously, this gives the glass-box techniques an advantage when the different smoothing techniques are compared using BLEU!</S>
    <S sid="59" ssid="32">Implementing an algorithm for optimizing linear weights according to BLEU is high on our list of priorities.</S>
    <S sid="60" ssid="33">The preceding discussion implicitly assumes a single set of counts c(&#732;s, &#732;t) from which conditional distributions are derived.</S>
    <S sid="61" ssid="34">But, as phrases of different lengths are likely to have different statistical properties, it might be worthwhile to break down the global phrasetable into separate phrasetables for each value of |&#732;t |for the purposes of smoothing.</S>
    <S sid="62" ssid="35">Any similar strategy that does not split up 1&#732;s|c(&#732;s, &#732;t) &gt; 01 for any fixed t&#732; can be applied to any smoothing scheme.</S>
    <S sid="63" ssid="36">This is another idea we are eager to try soon.</S>
    <S sid="64" ssid="37">We now describe the individual smoothing schemes we have implemented.</S>
    <S sid="65" ssid="38">Four of them are black-box techniques: Good-Turing and three fixed-discount techniques (fixed-discount interpolated with unigram distribution, Kneser-Ney fixed-discount, and modified Kneser-Ney fixeddiscount).</S>
    <S sid="66" ssid="39">Two of them are glass-box techniques: Zens-Ney &#8220;noisy-or&#8221; and Koehn-Och-Marcu IBM smoothing.</S>
    <S sid="67" ssid="40">Our experiments tested not only these individual schemes, but also some loglinear combinations of a black-box technique with a glassbox technique.</S>
    <S sid="68" ssid="41">Good-Turing smoothing is a well-known technique (Church and Gale, 1991) in which observed counts c are modified according to the formula: and Gale, 1991).</S>
    <S sid="69" ssid="42">We first take the log of the observed (c, nc) values, and then use a linear least squares fit to log nc as a function of log c. To ensure that the result stays close to the reliable values of nc for large c, error terms are weighted by c, ie: c(log nc &#8722; log n')2, where n' are the fitted values.</S>
    <S sid="70" ssid="43">Our implementation pools all counts c(&#732;s, &#732;t) together to obtain n' (we have not yet tried separate counts based on length of t&#732; as discussed above).</S>
    <S sid="71" ssid="44">It follows directly from (2) that the total count mass assigned to unseen phrase pairs is cg(0)n0 = n1, which we approximate by ni.</S>
    <S sid="72" ssid="45">This mass is distributed among contexts t&#732; in proportion to c(&#732;t), giving final estimates: where p(&#732;t) = c(&#732;t)/ Et&#65533; c(&#732;t).</S>
  </SECTION>
  <SECTION title="3.2 Fixed-Discount Methods" number="4">
    <S sid="73" ssid="1">Fixed-discount methods subtract a fixed discount D from all non-zero counts, and distribute the resulting probability mass according to a smoothing distribution (Kneser and Ney, 1995).</S>
    <S sid="74" ssid="2">We use an interpolated version of fixed-discount proposed by (Chen and Goodman, 1998) rather than the original backoff version.</S>
    <S sid="75" ssid="3">For phrase pairs with nonzero counts, this distribution has the general form: where pb(&#732;s|&#732;t) is the smoothing distribution.</S>
    <S sid="76" ssid="4">Normalization constraints fix the value of &#945;(&#732;t): where cg is a modified count value used to replace c in subsequent relative-frequency estimates, and nc is the number of events having count c. An intuitive motivation for this formula is that it approximates relative-frequency estimates made by successively leaving out each event in the corpus, and then averaging the results (N&#180;adas, 1985).</S>
    <S sid="77" ssid="5">A practical difficulty in implementing GoodTuring smoothing is that the nc are noisy for large c. For instance, there may be only one phrase pair that occurs exactly c = 347,623 times in a large corpus, and no pair that occurs c = 347,624 times, leading to cg(347, 623) = 0, clearly not what is intended.</S>
    <S sid="78" ssid="6">Our solution to this problem is based on the technique described in (Church s&#65533; where n1+(*, &#732;t) is the number of phrases s&#732; for which c(&#732;s, &#732;t) &gt; 0.</S>
    <S sid="79" ssid="7">We experimented with two choices for the smoothing distribution pb(&#732;s|&#732;t).</S>
    <S sid="80" ssid="8">The first is a plain unigram p(&#732;s), and the second is the Kneser-Ney lower-order distribution: ie, the proportion of unique target phrases that s&#732; is associated with, where n1+(&#732;s, *) is defined analogously to n1+(*, &#732;t).</S>
    <S sid="81" ssid="9">Intuitively, the idea is that source phrases that co-occur with many different target phrases are more likely to appear in new contexts.</S>
    <S sid="82" ssid="10">For both unigram and Kneser-Ney smoothing distributions, we used a discounting coefficient derived by (Ney et al., 1994) on the basis of a leaveone-out analysis: D = n1/(n1 + 2n2).</S>
    <S sid="83" ssid="11">For the Kneser-Ney smoothing distribution, we also tested the &#8220;Modified Kneser-Ney&#8221; extension suggested in (Chen and Goodman, 1998), in which specific coefficients Dc are used for small count values c up to a maximum of three (ie D3 is used for c &#8805; 3).</S>
    <S sid="84" ssid="12">For c = 2 and c = 3, we used formulas given in that paper.</S>
    <S sid="85" ssid="13">The two glass-box techniques that we considered involve decomposing source phrases with independence assumptions.</S>
    <S sid="86" ssid="14">The simplest approach assumes that all source words are conditionally independent, so that: We implemented two variants for p(sj|&#732;t) that are described in previous work.</S>
    <S sid="87" ssid="15">(Zens and Ney, 2004) describe a &#8220;noisy-or&#8221; combination: where &#175;sj is the probability that sj is not in the translation of &#732;t, and p(sj|ti) is a lexical probability.</S>
    <S sid="88" ssid="16">(Zens and Ney, 2004) obtain p(sj|ti) from smoothed relative-frequency estimates in a wordaligned corpus.</S>
    <S sid="89" ssid="17">Our implementation simply uses IBM1 probabilities, which obviate further smoothing.</S>
    <S sid="90" ssid="18">The noisy-or combination stipulates that sj should not appear in s&#732; if it is not the translation of any of the words in &#732;t.</S>
    <S sid="91" ssid="19">The complement of this, proposed in (Koehn et al., 2005), to say that sj should appear in s&#732; if it is the translation of at least one of the words in &#732;t: where Aj is a set of likely alignment connections for sj.</S>
    <S sid="92" ssid="20">In our implementation of this method, we assumed that Aj = {1, ... , &#732;I}, ie the set of all connections, and used IBM1 probabilities for p(s|t).</S>
    <S sid="93" ssid="21">We mentioned earlier that LM ngrams have a naturally-ordered sequence of smoothing distributions, obtained by successively dropping the last word in the context.</S>
    <S sid="94" ssid="22">For phrasetable smoothing, because no word in t&#732; is a priori less informative than any others, there is no exact parallel to this technique.</S>
    <S sid="95" ssid="23">However, it is clear that estimates made by replacing particular target (conditioning) words with wildcards will be smoother than the original relative frequencies.</S>
    <S sid="96" ssid="24">A simple scheme for combining them is just to average: One might also consider progressively replacing the least informative remaining word in the target phrase (using tf-idf or a similar measure).</S>
    <S sid="97" ssid="25">The same idea could be applied in reverse, by replacing particular source (conditioned) words with wildcards.</S>
    <S sid="98" ssid="26">We have not yet implemented this new glass-box smoothing technique, but it has considerable appeal.</S>
    <S sid="99" ssid="27">The idea is similar in spirit to Collins&#8217; backoff method for prepositional phrase attachment (Collins and Brooks, 1995).</S>
  </SECTION>
  <SECTION title="4 Related Work" number="5">
    <S sid="100" ssid="1">As mentioned previously, (Chen and Goodman, 1998) give a comprehensive survey and evaluation of smoothing techniques for language modeling.</S>
    <S sid="101" ssid="2">As also mentioned previously, there is relatively little published work on smoothing for statistical MT.</S>
    <S sid="102" ssid="3">For the IBM models, alignment probabilities need to be smoothed for combinations of sentence lengths and positions not encountered in training data (Garcia-Varea et al., 1998).</S>
    <S sid="103" ssid="4">Moore (2004) has found that smoothing to correct overestimated IBM1 lexical probabilities for rare words can improve word-alignment performance.</S>
    <S sid="104" ssid="5">Langlais (2005) reports negative results for synonym-based smoothing of IBM2 lexical probabilities prior to extracting phrases for phrasebased SMT.</S>
    <S sid="105" ssid="6">For phrase-based SMT, the use of smoothing to avoid zero probabilities during phrase induction is reported in (Marcu and Wong, 2002), but no details are given.</S>
    <S sid="106" ssid="7">As described above, (Zens and Ney, 2004) and (Koehn et al., 2005) use two different variants of glass-box smoothing (which they call &#8220;lexical smoothing&#8221;) over the phrasetable, and combine the resulting estimates with pure relativefrequency ones in a loglinear model.</S>
    <S sid="107" ssid="8">Finally, (Cettollo et al., 2005) describes the use of Witten-Bell smoothing (a black-box technique) for phrasetable counts, but does not give a comparison to other methods.</S>
    <S sid="108" ssid="9">As Witten-Bell is reported by (Chen and Goodman, 1998) to be significantly worse than Kneser-Ney smoothing, we have not yet tested this method.</S>
  </SECTION>
  <SECTION title="5 Experiments" number="6">
    <S sid="109" ssid="1">We carried out experiments in two different settings: broad-coverage ones across six European language pairs using selected smoothing techniques and relatively small training corpora; and Chinese to English experiments using all implemented smoothing techniques and large training corpora.</S>
    <S sid="110" ssid="2">For the black-box techniques, the smoothed phrase table replaced the original relative-frequency (RF) phrase table.</S>
    <S sid="111" ssid="3">For the glass-box techniques, a phrase table (either the original RF phrase table or its replacement after black-box smoothing) was interpolated in loglinear fashion with the smoothing glass-box distribution, with weights set to maximize BLEU on a development corpus.</S>
    <S sid="112" ssid="4">To estimate the significance of the results across different methods, we used 1000-fold pairwise bootstrap resampling at the 95% confidence level.</S>
    <S sid="113" ssid="5">In order to measure the benefit of phrasetable smoothing for relatively small corpora, we used the data made available for the WMT06 shared task (WMT, 2006).</S>
    <S sid="114" ssid="6">This exercise is conducted openly with access to all needed resources and is thus ideal for benchmarking statistical phrasebased translation systems on a number of language pairs.</S>
    <S sid="115" ssid="7">The WMT06 corpus is based on sentences extracted from the proceedings of the European Parliament.</S>
    <S sid="116" ssid="8">Separate sentence-aligned parallel corpora of about 700,000 sentences (about 150MB) are provided for the three language pairs having one of French, Spanish and German with English.</S>
    <S sid="117" ssid="9">SRILM language models based on the same source are also provided for each of the four languages.</S>
    <S sid="118" ssid="10">We used the provided 2000-sentence devsets for tuning loglinear parameters, and tested on the 3064-sentence test sets.</S>
    <S sid="119" ssid="11">Results are shown in table 1 for relativefrequency (RF), Good-Turing (GT), Kneser-Ney with 1 (KN1) and 3 (KN3) discount coefficients; and loglinear combinations of both RF and KN3 phrasetables with Zens-Ney-IBM1 (ZN-IBM1) smoothed phrasetables (these combinations are denoted RF+ZN-IBM1 and KN3+ZN-IBM1).</S>
    <S sid="120" ssid="12">It is apparent from table 1 that any kind of phrase table smoothing is better than using none; the minimum improvement is 0.45 BLEU, and the difference between RF and all other methods is statistically significant.</S>
    <S sid="121" ssid="13">Also, KneserNey smoothing gives a statistically significant improvement over GT smoothing, with a minimum gain of 0.30 BLEU.</S>
    <S sid="122" ssid="14">Using more discounting coefficients does not appear to help.</S>
    <S sid="123" ssid="15">Smoothing relative frequencies with an additional Zens-Ney phrasetable gives about the same gain as KneserNey smoothing on its own.</S>
    <S sid="124" ssid="16">However, combining Kneser-Ney with Zens-Ney gives a clear gain over any other method (statistically significant for all language pairs except en&#8594;es and en&#8594;de) demonstrating that these approaches are complementary.</S>
    <S sid="125" ssid="17">To test the effects of smoothing with larger corpora, we ran a set of experiments for Chinese-English translation using the corpora distributed for the NIST MT05 evaluation (www.nist.gov/speech/tests/mt).</S>
    <S sid="126" ssid="18">These are summarized in table 2.</S>
    <S sid="127" ssid="19">Due to the large size of the out-of-domain UN corpus, we trained one phrasetable on it, and another on all other parallel corpora (smoothing was applied to both).</S>
    <S sid="128" ssid="20">We also used a subset of the English Gigaword corpus to augment the LM training material.</S>
    <S sid="129" ssid="21">Table 3 contains results for the Chinese-English experiments, including fixed-discount with unigram smoothing (FDU), and Koehn-Och-Marcu smoothing with the IBM1 model (KOM-IBM1) as described in section 3.3.</S>
    <S sid="130" ssid="22">As with the broad-coverage experiments, all of the black-box smoothing techniques do significantly better than the RF baseline.</S>
    <S sid="131" ssid="23">However, GT appears to work better in the large-corpus setting: it is statistically indistinguishable from KN3, and both these methods are significantly better than all other fixeddiscount variants, among which there is little difference.</S>
    <S sid="132" ssid="24">Not surprisingly, the two glass-box methods, ZN-IBM1 and KOM-IBM1, do poorly when used on their own.</S>
    <S sid="133" ssid="25">However, in combination with another phrasetable, they yield the best results, obtained by RF+ZN-IBM1 and GT+KOM-IBM1, which are statistically indistinguishable.</S>
    <S sid="134" ssid="26">In constrast to the situation in the broad-coverage setting, these are not significantly better than the best black-box method (GT) on its own, although RF+ZN-IBM1 is better than all other glass-box combinations.</S>
    <S sid="135" ssid="27">A striking difference between the broadcoverage setting and the Chinese-English setting is that in the former it appears to be beneficial to apply KN3 smoothing to the phrasetable that gets combined with the best glass-box phrasetable (ZN), whereas in the latter setting it does not.</S>
    <S sid="136" ssid="28">To test whether this was due to corpus size (as the broad-coverage corpora are around 10% of those for Chinese-English), we calculated ChineseEnglish learning curves for the RF+ZN-IBM1 and KN3-ZN-IBM1 methods, shown in figure 1.</S>
    <S sid="137" ssid="29">The results are somewhat inconclusive: although the KN3+ZN-IBM1 curve is perhaps slightly flatter, the most obvious characteristic is that this method appears to be highly sensitive to the particular corpus sample used.</S>
  </SECTION>
  <SECTION title="6 Conclusion and Future Work" number="7">
    <S sid="138" ssid="1">We tested different phrasetable smoothing techniques in two different translation settings: European language pairs with relatively small corpora, and Chinese to English translation with large corpora.</S>
    <S sid="139" ssid="2">The smoothing techniques fall into two categories: black-box methods that work only on phrase-pair counts; and glass-box methods that decompose phrase probabilities into lexical probabilities.</S>
    <S sid="140" ssid="3">In our implementation, black-box techniques use linear interpolation to combine relative frequency estimates with smoothing distributions, while glass-box techniques are combined in loglinear fashion with either relative-frequencies or black-box estimates.</S>
    <S sid="141" ssid="4">All smoothing techniques tested gave statistically significant gains over pure relative-frequency estimates.</S>
    <S sid="142" ssid="5">In the small-corpus setting, the best technique is a loglinear combination of KneserNey count smoothing with Zens-Ney glass-box smoothing; this yields an average gain of 1.6 BLEU points over relative frequencies.</S>
    <S sid="143" ssid="6">In the large-corpus setting, the best technique is a loglinear combination of relative-frequency estimates with Zens-Ney smoothing, with a gain of 1.1 BLEU points.</S>
    <S sid="144" ssid="7">Of the two glass-box smoothing methods tested, Zens-Ney appears to have a slight advantage over Koehn-Och-Marcu.</S>
    <S sid="145" ssid="8">Of the blackbox methods tested, Kneser-Ney is clearly better for small corpora, but is equivalent to GoodTuring for larger corpora.</S>
    <S sid="146" ssid="9">The paper describes several smoothing alternatives which we intend to test in future work:</S>
  </SECTION>
  <SECTION title="7 Acknowledgements" number="8">
    <S sid="147" ssid="1">The authors would like to thank their colleague Michel Simard for stimulating discussions.</S>
    <S sid="148" ssid="2">The first author would like to thank all his colleagues for encouraging him to taste a delicacy that was new to him (shredded paper with maple syrup).</S>
    <S sid="149" ssid="3">This material is based upon work supported by the Defense Advanced Research Projects Agency (DARPA) under Contract No.</S>
    <S sid="150" ssid="4">HR0011-06-C0023.</S>
    <S sid="151" ssid="5">Any opinions, findings and conclusions or recommendations expressed in this material are those of the author(s) and do not necessarily reflect the views of the Defense Advanced Research Projects Agency (DARPA).</S>
  </SECTION>
</PAPER>
