<PAPER>
	<S sid="0">Sentence Compression Beyond Word Deletion</S><ABSTRACT>
		<S sid="1" ssid="1">In this paper we generalise the sentence compression task.</S>
		<S sid="2" ssid="2">Rather than sim ply shorten a sentence by deleting words or constituents, as in previous work, we rewrite it using additional operations such as substitution, reordering, and insertion.</S>
		<S sid="3" ssid="3">We present a new corpus that is suitedto our task and a discriminative tree-to tree transduction model that can naturallyaccount for structural and lexical mis matches.</S>
		<S sid="4" ssid="4">The model incorporates a novelgrammar extraction method, uses a lan guage model for coherent output, and canbe easily tuned to a wide range of compres sion specific loss functions.</S>
	</ABSTRACT>
	<SECTION title="Introduction" number="1">
			<S sid="5" ssid="5">Automatic sentence compression can be broadly described as the task of creating a grammaticalsummary of a single sentence with minimal information loss.</S>
			<S sid="6" ssid="6">It has recently attracted much attention, in part because of its relevance to applications.</S>
			<S sid="7" ssid="7">Examples include the generation of sub titles from spoken transcripts (Vandeghinste and Pan, 2004), the display of text on small screens such as mobile phones or PDAs (Corston-Oliver, 2001), and, notably, summarisation (Jing, 2000; Lin, 2003).</S>
			<S sid="8" ssid="8">Most prior work has focused on a specific instantiation of sentence compression, namely word deletion.</S>
			<S sid="9" ssid="9">Given an input sentence of words, w 1 , w 2 . . .</S>
			<S sid="10" ssid="10">w n , a compression is formed by dropping any subset of these words (Knight c ? 2008.</S>
			<S sid="11" ssid="11">Licensed under the Creative CommonsAttribution-Noncommercial-Share Alike 3.0 Unported li cense (http://creativecommons.org/licenses/by-nc-sa/3.0/).</S>
			<S sid="12" ssid="12">Some rights reserved.</S>
			<S sid="13" ssid="13">and Marcu, 2002).</S>
			<S sid="14" ssid="14">The simplification renders the task computationally feasible, allowing efficient decoding using a dynamic program (Knight andMarcu, 2002; Turner and Charniak, 2005; McDon ald, 2006).</S>
			<S sid="15" ssid="15">Furthermore, constraining the problemto word deletion affords substantial modeling flexibility.</S>
			<S sid="16" ssid="16">Indeed, a variety of models have been successfully developed for this task ranging from in stantiations of the noisy-channel model (Knight and Marcu, 2002; Galley and McKeown, 2007;Turner and Charniak, 2005), to large-margin learn ing (McDonald, 2006; Cohn and Lapata, 2007), and Integer Linear Programming (Clarke, 2008).</S>
			<S sid="17" ssid="17">However, the simplification also renders the tasksomewhat artificial.</S>
			<S sid="18" ssid="18">There are many rewrite operations that could compress a sentence, besides deletion, including reordering, substitution, and inser tion.</S>
			<S sid="19" ssid="19">In fact, professional abstractors tend to use these operations to transform selected sentences from an article into the corresponding summary sentences (Jing, 2000).</S>
			<S sid="20" ssid="20">Therefore, in this paper we consider sentence compression from a more general perspective and generate abstracts rather than extracts.</S>
			<S sid="21" ssid="21">In this framework, the goal is to find a summary of theoriginal sentence which is grammatical and conveys the most important information without necessarily using the same words in the same or der.</S>
			<S sid="22" ssid="22">Our task is related to, but different from, paraphrase extraction (Barzilay, 2003).</S>
			<S sid="23" ssid="23">We must not only have access to paraphrases (i.e., rewrite rules), but also be able to combine them in order to generate new text, while attempting to produce a shorter resulting string.</S>
			<S sid="24" ssid="24">Quirk et al (2004) present an end-to-end paraphrasing system inspired byphrase-based machine translation that can both ac quire paraphrases and use them to generate new strings.</S>
			<S sid="25" ssid="25">However, their model is limited to lexical substitution ? no reordering takes place ? and is 137 lacking the compression objective.Once we move away from extractive compres sion we are faced with two problems.</S>
			<S sid="26" ssid="26">First, wemust find an appropriate training set for our abstractive task.</S>
			<S sid="27" ssid="27">Compression corpora are not natu rally available and existing paraphrase corpora do not normally contain compressions.</S>
			<S sid="28" ssid="28">Our second problem concerns the modeling task itself.</S>
			<S sid="29" ssid="29">Ideally, our learning framework should handle structural mismatches and complex rewriting operations.In what follows, we first present a new cor pus for abstractive compression which we created by having annotators compress sentences while rewriting them.</S>
			<S sid="30" ssid="30">Besides obtaining useful data formodeling purposes, we also demonstrate that ab stractive compression is a meaningful task.</S>
			<S sid="31" ssid="31">We then present a tree-to-tree transducer capable of transforming an input parse tree into a compressed parse tree.</S>
			<S sid="32" ssid="32">Our approach is based on synchronous tree substitution grammar (STSG, Eisner (2003)),a formalism that can account for structural mismatches, and is trained discriminatively.</S>
			<S sid="33" ssid="33">Specifi cally, we generalise the model of Cohn and Lapata (2007) to our abstractive task.</S>
			<S sid="34" ssid="34">We present a noveltree-to-tree grammar extraction method which acquires paraphrases from bilingual corpora and ensure coherent output by including a ngram language model as a feature.</S>
			<S sid="35" ssid="35">We also develop a number of loss functions suited to the abstractive compression task.</S>
			<S sid="36" ssid="36">We hope that some of the work described here might be of relevance to other gen eration tasks such as machine translation (Eisner, 2003), multi-document summarisation (Barzilay, 2003), and text simplification (Carroll et al, 1999).</S>
	</SECTION>
	<SECTION title="Abstractive Compression Corpus. " number="2">
			<S sid="37" ssid="1">A stumbling block to studying abstractive sentence compression is the lack of widely available corpora for training and testing.</S>
			<S sid="38" ssid="2">Previous work has beenconducted almost exclusively on Ziff-Davis, a cor pus derived automatically from document abstractpairs (Knight and Marcu, 2002), or on human authored corpora (Clarke, 2008).</S>
			<S sid="39" ssid="3">Unfortunately,none of these data sources are suited to our problem since they have been produced with a single rewriting operation, namely word deletion.</S>
			<S sid="40" ssid="4">Al though there is a greater supply of paraphrasing corpora, such as the Multiple-Translation Chinese (MTC) corpus 1 and theMicrosoft Research (MSR) Paraphrase Corpus (Quirk et al, 2004), they are also not ideal, since they have not been created 1 Available by the LDC, Catalog Number LDC2002T01, ISBN 1-58563-217-1.</S>
			<S sid="41" ssid="5">with compression in mind.</S>
			<S sid="42" ssid="6">They contain amplerewriting operations, however they do not explic itly target information loss.</S>
			<S sid="43" ssid="7">For the reasons just described, we created our own corpus.</S>
			<S sid="44" ssid="8">We collected 30 newspaper articles (575 sentences) from the British National Corpus (BNC) and the American News Text corpus, forwhich we obtained manual compressions.</S>
			<S sid="45" ssid="9">In or der to confirm that the task was feasible, five of these documents were initially compressed by two annotators (not the authors).</S>
			<S sid="46" ssid="10">The annotators weregiven instructions that explained the task and defined sentence compression with the aid of examples.</S>
			<S sid="47" ssid="11">They were asked to paraphrase while preserv ing the most important information and ensuring the compressed sentences remained grammatical.They were encouraged to use any rewriting opera tions that seemed appropriate, e.g., to delete words, add new words, substitute them or reorder them.Assessing inter-annotator agreement is notori ously difficult for paraphrasing tasks (Barzilay, 2003) since there can be many valid outputs for a given input.</S>
			<S sid="48" ssid="12">Also our task is doubly subjective in deciding which information to remove from the sentence and how to rewrite it.</S>
			<S sid="49" ssid="13">In default of an agreement measure that is well suited to the task and takes both decisions into account, we assessedthem separately.</S>
			<S sid="50" ssid="14">We first examined whether the annotators compressed at a similar level.</S>
			<S sid="51" ssid="15">The com pression rate was 56% for one annotator and 54% for the other.</S>
			<S sid="52" ssid="16">2 We also assessed whether theyagreed in their rewrites by measuring BLEU (Pap ineni et al, 2002).</S>
			<S sid="53" ssid="17">The inter-annotator BLEU score was 23.79%, compared with the source agreement BLEU of only 13.22%.</S>
			<S sid="54" ssid="18">Both the compression rateand BLEU score indicate that the task is welldefined and the compressions valid.</S>
			<S sid="55" ssid="19">The remaining 25 documents were compressed by a single an notator to ensure consistency.</S>
			<S sid="56" ssid="20">All our experiments used the data from this annotator.</S>
			<S sid="57" ssid="21">3Table 1 illustrates some examples from our corpus.</S>
			<S sid="58" ssid="22">As can be seen, some sentences contain a single rewrite operation.</S>
			<S sid="59" ssid="23">For instance, a PP is para phrased with a genitive (see (1)), a subordinate clause with a present participle (see (2)), a passive sentence with an active one (see (3)).</S>
			<S sid="60" ssid="24">However, in most cases many rewrite decisions take place allat once.</S>
			<S sid="61" ssid="25">Consider sentence (4).</S>
			<S sid="62" ssid="26">Here, the conjunc tion high winds and snowfalls is abbreviated to 2 The term ?compression rate?</S>
			<S sid="63" ssid="27">refers to the percentage of words retained in the compression.</S>
			<S sid="64" ssid="28">3 Available from http://homepages.inf.ed.ac.uk/ tcohn/paraphrase.</S>
			<S sid="65" ssid="29">138 1a.</S>
			<S sid="66" ssid="30">The future of the nation is in your hands.</S>
			<S sid="67" ssid="31">1b.</S>
			<S sid="68" ssid="32">The nation?s future is in your hands.</S>
			<S sid="69" ssid="33">2a.</S>
			<S sid="70" ssid="34">As he entered a polling booth in Katutura, he said.</S>
			<S sid="71" ssid="35">2b.</S>
			<S sid="72" ssid="36">Entering a polling booth in Katutura, he said.</S>
			<S sid="73" ssid="37">3a.</S>
			<S sid="74" ssid="38">Mr Usta was examined by Dr Raymond Crockett, a Harley Street physician specialising in kidney disease.3b.</S>
			<S sid="75" ssid="39">Dr Raymond Crockett, a Harley Street physician, ex amined Mr Usta.</S>
			<S sid="76" ssid="40">4a.</S>
			<S sid="77" ssid="41">High winds and snowfalls have, however, grounded at a lower level the powerful US Navy Sea Stallion helicopters used to transport the slabs.</S>
			<S sid="78" ssid="42">4b.</S>
			<S sid="79" ssid="43">Bad weather, however, has grounded the helicopters transporting the slabs.</S>
			<S sid="80" ssid="44">5a.</S>
			<S sid="81" ssid="45">To experts in international law and relations, the USaction demonstrates a breach by a major power of in ternational conventions.5b.</S>
			<S sid="82" ssid="46">Experts say the US are in breach of international con ventions.Table 1: Compression examples from our corpus; (a) sen tences are the source, (b) sentences the target.</S>
			<S sid="83" ssid="47">bad weather and the infinitive clause to transport to the present participle transporting.</S>
			<S sid="84" ssid="48">Note that the prenominal modifiers US Navy Sea Stallion and the verb used have been removed.</S>
			<S sid="85" ssid="49">In sentence (5), the verb say is added and the NP a breach by amajor power of international conventions is para phrased by the sentence the US are in breach of international conventions.</S>
	</SECTION>
	<SECTION title="Basic Model. " number="3">
			<S sid="86" ssid="1">Our work builds on the model developed by Cohnand Lapata (2007).</S>
			<S sid="87" ssid="2">They formulate sentence compression as a tree-to-tree rewriting task.</S>
			<S sid="88" ssid="3">A syn chronous tree substitution grammar (STSG, Eisner (2003)) licenses the space of all possible rewrites.</S>
			<S sid="89" ssid="4">Each grammar rule is assigned a weight, and these weights are learnt in discriminative training.</S>
			<S sid="90" ssid="5">For prediction, a specialised generation algorithmfinds the best scoring compression using the grammar rules.</S>
			<S sid="91" ssid="6">Cohn and Lapata apply this model to ex tractive compression with state-of-the-art results.</S>
			<S sid="92" ssid="7">This model is appealing for our task for severalreasons.</S>
			<S sid="93" ssid="8">Firstly, the synchronous grammar provides expressive power to model consistent syntactic effects such as reordering, changes in nonterminal categories and lexical substitution.</S>
			<S sid="94" ssid="9">Sec ondly, it is discriminatively trained, which allowsfor the incorporation of all manner of powerful features.</S>
			<S sid="95" ssid="10">Thirdly, the learning framework can be tai lored to the task by choosing an appropriate loss function.</S>
			<S sid="96" ssid="11">In the following we describe their model in more detail with emphasis on the synchronous grammar, the model structure, and the predictionand training algorithms.</S>
			<S sid="97" ssid="12">Section 4 presents our ex tensions and modifications.</S>
			<S sid="98" ssid="13">Grammar The grammar defines a space oftree pairs over uncompressed and compressed sen Grammar rules: ?S, S?</S>
			<S sid="99" ssid="14">?NP 1 VBD 2 NP 3 , NP 1 VBD 2 NP 3 ? ?S, S?</S>
			<S sid="100" ssid="15">?NP 1 VBD 2 NP 3 , NP 3 was VBN 2 by NP 1 ? ?NP, NP?</S>
			<S sid="101" ssid="16">?he, him?</S>
			<S sid="102" ssid="17">?NP, NP?</S>
			<S sid="103" ssid="18">?he, he?</S>
			<S sid="104" ssid="19">?NP, NP?</S>
			<S sid="105" ssid="20">?he, Peter?</S>
			<S sid="106" ssid="21">?VBD, VBN?</S>
			<S sid="107" ssid="22">?sang, sung?</S>
			<S sid="108" ssid="23">?NP, NP?</S>
			<S sid="109" ssid="24">?a song, a song?</S>
			<S sid="110" ssid="25">Input tree: [S [NP He NP [VP sang VBD [NP a DT song NN ]]] Output trees: [S [NP He] [VP sang [NP a song]]] [S [NP Him] [VP sang [NP a song]]] [S [NP Peter] [VP sang [NP a song]]] [S [NP A song] [VP was [VP sung [PP by he]]]] [S [NP A song] [VP was [VP sung [PP by him]]]] [S [NP A song] [VP was [VP sung [PP by Peter]]]] Figure 1: Example grammar and the output trees it licences for an input tree.</S>
			<S sid="111" ssid="26">The numbered boxes in the rules denote linked variables.</S>
			<S sid="112" ssid="27">Pre-terminal categories are not shown for the output trees for the sake of brevity.</S>
			<S sid="113" ssid="28">tences, which we refer to henceforth as the source and target.</S>
			<S sid="114" ssid="29">We use the grammar to find the set of sister target sentences for a given source sentence.Figure 1 shows a toy grammar and the set of possi ble target (output) trees for the given source (input)tree.</S>
			<S sid="115" ssid="30">Each output tree is created by applying a se ries of grammar rules, where each rule matches a fragment of the source and creates a fragment of the target tree.</S>
			<S sid="116" ssid="31">A rule in the grammar consists of a pair of elementary trees and a mapping between the variables (frontier non-terminals) in both trees.</S>
			<S sid="117" ssid="32">A derivation is a sequence of rules yielding a target tree with no remaining variables.</S>
			<S sid="118" ssid="33">Cohn and Lapata (2007) extract a STSG froma parsed, word-aligned corpus of source and target sentences.</S>
			<S sid="119" ssid="34">Specifically, they extract the mini mal set of synchronous rules which can describe each tree pair.</S>
			<S sid="120" ssid="35">These rules are minimal in the sensethat they cannot be made smaller (e.g., by replac ing a subtree with a variable) while still honouring the word-alignment.</S>
			<S sid="121" ssid="36">Decoding The grammar allows us to search for all sister trees for a given tree.</S>
			<S sid="122" ssid="37">The decoder maximises over this space: y ? =argmax y:S(y)=x ?(y) (1) where ?(y) = ? r?y ??(r, S(y)), ??</S>
			<S sid="123" ssid="38">(2) Here x is the source (uncompressed) tree, y is a derivation which produces the source tree, S(y) = x, and a target tree, T (y), 4and r is a gram mar rule.</S>
			<S sid="124" ssid="39">The ? function scores the derivation and 4 Equation 1 optimises over derivations rather than target trees to allow tractable inference.</S>
			<S sid="125" ssid="40">139 is defined in (2) as a linear function over the rules used.</S>
			<S sid="126" ssid="41">Each rule?s score is an inner product between its feature vector, ?(r,y S), and the model parame ters, ?.</S>
			<S sid="127" ssid="42">The feature functions are set by hand, while the model parameters are learned in training.</S>
			<S sid="128" ssid="43">The maximisation problem in (1) can be solved efficiently using a dynamic program.</S>
			<S sid="129" ssid="44">Derivations will have common sub-structures whenever they transduce the same source sub-tree into a target sub-tree.</S>
			<S sid="130" ssid="45">This is captured in a chart, leading to an efficient bottom-up algorithm.</S>
			<S sid="131" ssid="46">The asymptotic time complexity of this search is O(SR) where S is the number of source nodes andR is the number of rules matching a given node.</S>
			<S sid="132" ssid="47">Training The model is trained using SVM struct , a large margin method for structured output problems (Joachims, 2005; Tsochantaridis et al, 2005).</S>
			<S sid="133" ssid="48">This training method allows the use of a configurable loss function, ?(y ? ,y), whichmeasures the extent to which the model?s predic tion, y, differs from the reference, y ? .</S>
			<S sid="134" ssid="49">Central.</S>
			<S sid="135" ssid="50">to training is the search for a derivation which is both high scoring and has high loss compared to the gold standard.</S>
			<S sid="136" ssid="51">5 This requires finding the maximiser of H(y) in one of: H s = (1?</S>
			<S sid="137" ssid="52">??(y ? )??(y), ??)?(y ? ,y) H m = ?(y ? ,y)?</S>
			<S sid="138" ssid="53">??(y ? )??(y), ??</S>
			<S sid="139" ssid="54">(3) where the subscripts s and m denote slack and margin rescaling, which are different formulations of the training problem (see Tsochantaridis et al (2005) and Taskar et al (2003) for details).</S>
			<S sid="140" ssid="55">The search for the maximiser of H(y) in (3) requires the tracking of the loss value.</S>
			<S sid="141" ssid="56">This can be achieved by extending the decoding algorithmsuch that the chart cells also store the loss param eters (e.g., for precision, the number of true and false positives (Joachims, 2005)).</S>
			<S sid="142" ssid="57">Consequently, this extension leads to a considerably higher time and space complexity compared to decoding.</S>
			<S sid="143" ssid="58">For example, with precision loss the time complexity is O(S 3 R) as each step must consider O(S 2) pos sible loss parameter values.</S>
	</SECTION>
	<SECTION title="Extensions. " number="4">
			<S sid="144" ssid="1">In this section we present our extensions of Cohnand Lapata?s (2007) model.</S>
			<S sid="145" ssid="2">The latter was de signed with the simpler extractive compression in mind and cannot be readily applied to our task.</S>
			<S sid="146" ssid="3">5 Spurious ambiguity in the grammar means that there areoften many derivations linking the source and target.</S>
			<S sid="147" ssid="4">We fol low Cohn and Lapata (2007) by choosing the derivation with the most rules, which should provide good generalisation.</S>
			<S sid="148" ssid="5">Grammar It is relatively straightforward to extract a grammar from our corpus.</S>
			<S sid="149" ssid="6">This grammar will contain many rules encoding deletions and structural transformations but there will be many unobserved paraphrases, no matter how good the extraction method (recall that our corpus consistssolely of 565 sentences).</S>
			<S sid="150" ssid="7">For this reason, we ex tract a grammar from our abstractive corpus in the manner of Cohn and Lapata (2007) (see Section 5for details) and augment it with a larger grammar obtained from a parallel bilingual corpus.</S>
			<S sid="151" ssid="8">Crucially, our second grammar will not contain com pression rules, just paraphrasing ones.</S>
			<S sid="152" ssid="9">We leave itto the model to learn which rules serve the com pression objective.</S>
			<S sid="153" ssid="10">Our paraphrase grammar extraction method uses bilingual pivoting to learn paraphrases over syntax tree fragments, i.e., STSG rules.</S>
			<S sid="154" ssid="11">Pivoting treats the paraphrasing problem as a two-stage translation process.</S>
			<S sid="155" ssid="12">Some English text is translated to a foreign language, and then translated back into English (Bannard and Callison-Burch, 2005): p(e ? |e) = ? f p(e ? |f)p(f |e) (4) where p(f |e) is the probability of translating an English string e into a foreign string f and p(e ?|f) the probability of translating the same for eign string into some other English string e ? .</S>
			<S sid="156" ssid="13">We.</S>
			<S sid="157" ssid="14">thus obtain English-English translation probabili ties p(e ? |e) by marginalizing out the foreign text.Instead of using strings (Bannard and CallisonBurch, 2005), we use elementary trees on the En glish side, resulting in a monolingual STSG.</S>
			<S sid="158" ssid="15">Weobtain the elementary trees and foreign strings us ing the GKHM algorithm (Galley et al, 2004).</S>
			<S sid="159" ssid="16">This takes as input a bilingual word-aligned corpus with trees on one side, and finds the minimal set of tree fragments and their corresponding strings which is consistent with the word alignment.</S>
			<S sid="160" ssid="17">This process is illustrated in Figure 2 where the aligned pair on the left gives rise to the rules shown onthe right.</S>
			<S sid="161" ssid="18">Note that the English rules and for eign strings shown include variable indices where they have been generalised.</S>
			<S sid="162" ssid="19">We estimate p(f |e) and p(e ? |f) from the set of tree-to-string rules and then then pivot each tree fragment to produce STSG rules.</S>
			<S sid="163" ssid="20">Figure 3 illustrates the process for the [VP does not VP] fragment.</S>
			<S sid="164" ssid="21">Modeling and Decoding Our grammar is much larger and noisier than a grammar extractedsolely for deletion-based compression.</S>
			<S sid="165" ssid="22">So, in order to encourage coherence and inform lexical se 140 SNP VP VBZ does RB goHe not ne pasIl va PRP VP NP He Il PRP go vaVP VP VBZ does RB not ne pas VP S NP VP 1 2 1 1 1 2 Figure 2: Tree-to-string grammar extraction using the GHKM algorithm, showing the aligned sentence pair and the resulting rules as tree fragments and their matching strings.</S>
			<S sid="166" ssid="23">The boxed numbers denote variables.</S>
			<S sid="167" ssid="24">VP VBZ does RB not ne pas VP n ' ne ne peut ...</S>
			<S sid="168" ssid="25">VP MD will RB not VB VP VBP do RB not VB 1 1 1 1 1 1 1 Figure 3: Pivoting the [VP does not VP] fragment.</S>
			<S sid="169" ssid="26">lection we incorporate a ngram language model(LM) as a feature.</S>
			<S sid="170" ssid="27">This requires adapting the scor ing function, ?, in (2) to allow features over target ngrams: ?(y) = ? r?y ??(r, S(y)), ??+ ? m?T (y) ??(m,S(y)), ??</S>
			<S sid="171" ssid="28">(5)where m are the ngrams and ? is a new fea ture function over these ngrams (we use only one ngram feature: the trigram log-probability).</S>
			<S sid="172" ssid="29">Sadly, the scoring function in (5) renders the chart-based search used for training and decoding intractable.In order to provide sufficient context to the chart based algorithm, we must also store in each chart cell the n ? 1 target tokens at the left and right edges of its yield.</S>
			<S sid="173" ssid="30">This is equivalent to using as our grammar the intersection between the original grammar and the ngram LM (Chiang, 2007), and increases the decoding complexity to an infeasible O(SRL 2(n?1)V )whereL is the size of the lexicon.</S>
			<S sid="174" ssid="31">We adopt a popular approach in syntax-inspiredmachine translation to address this problem (Chi ang, 2007).</S>
			<S sid="175" ssid="32">The idea is to use a beam-search overthe intersection grammar coupled with the cube pruning heuristic.</S>
			<S sid="176" ssid="33">The beam limits the number ofitems in a given chart cell to a fixed constant, re gardless of the number of possible LM contexts and non-terminal categories.</S>
			<S sid="177" ssid="34">Cube-pruning furtherlimits the number of items considered for inclu sion in the beam, reducing the time complexity to a more manageable O(SRBV ) where B is the beam size.</S>
			<S sid="178" ssid="35">We refer the interested reader to Chiang (2007) for details.</S>
			<S sid="179" ssid="36">Training The extensions to the model in (5)also necessitate changes in the training proce dure.</S>
			<S sid="180" ssid="37">Recall that training the basic model of Cohn and Lapata (2007) requires finding the maximiserof H(y) in (3).</S>
			<S sid="181" ssid="38">Their model uses a chart-based al gorithm for this purpose.</S>
			<S sid="182" ssid="39">As in decoding we also use a beam search for training, thereby avoiding the exponential time complexity of exact search.The beam search requires an estimate of the qual ity for incomplete derivations.</S>
			<S sid="183" ssid="40">We use the margin rescaling objective, H m in (3), and approximatethe loss using the current (incomplete) loss param eter values in each chart cell.</S>
			<S sid="184" ssid="41">We use a wide beam of 200 unique items or 500 items in total to reduce the impact of the approximation.</S>
			<S sid="185" ssid="42">Our loss functions are tailored to the task anddraw inspiration from metrics developed for ex tractive compression but also for summarisation and machine translation.</S>
			<S sid="186" ssid="43">They are based on the Hamming distance over unordered bags of items.</S>
			<S sid="187" ssid="44">This measures the number of predicted items that did not appear in the reference, along with a penalty for short output: ? hamming (y ? ,y) = f+max (l ?</S>
			<S sid="188" ssid="45">(t+ f), 0) (6) where t and f are the number of true and falsepositives, respectively, when comparing the pre dicted target, y, with the reference, y ? , and l isthe length of the reference.</S>
			<S sid="189" ssid="46">The second term pe nalises short output, as predicting very little or nothing would otherwise be unpenalised.</S>
			<S sid="190" ssid="47">We have three Hamming loss functions over: 1) tokens, 2) ngrams (n ? 3), or 3) CFG productions.</S>
			<S sid="191" ssid="48">Theselosses all operate on unordered bags and therefore might reward erroneous predictions.</S>
			<S sid="192" ssid="49">For ex ample, a permutation of the reference tokens has zero token-loss.</S>
			<S sid="193" ssid="50">The CFG and ngram losses have overlapping items which encode a partial order, and therefore are less affected.In addition, we developed a fourth loss func tion to measure the edit distance between themodel?s prediction and the reference, both as bags of-tokens.</S>
			<S sid="194" ssid="51">This measures the number of insertionsand deletions.</S>
			<S sid="195" ssid="52">In contrast to the previous loss func tions, this requires the true positive counts to be clipped to the number of occurrences of each type in the reference.</S>
			<S sid="196" ssid="53">The edit distance is given by: ? edit (y ? ,y) = p+ q ? 2 ? i min(p i , q i ) (7) where p and q denote the number of target tokensin the predicted and reference derivation, respec tively, and p i and q i are the counts for type i. 141 ?ADJP,NP?</S>
			<S sid="197" ssid="54">?subject [PP to NP 1 ], part [PP of NP 1 ]?</S>
			<S sid="198" ssid="55">(T) ?ADVP,RB?</S>
			<S sid="199" ssid="56">?as well, also?</S>
			<S sid="200" ssid="57">(T) ?ADJP,JJ?</S>
			<S sid="201" ssid="58">?too little, insufficient?</S>
			<S sid="202" ssid="59">(P) ?S,S? ? ?S 1 and S 2 , S 2 and S 1 ?</S>
			<S sid="203" ssid="60">(P) ?NP,NP?</S>
			<S sid="204" ssid="61">?DT 1 NN 2 , DT 1 NN 2 ?</S>
			<S sid="205" ssid="62">(S) ?NP,NP?</S>
			<S sid="206" ssid="63">?DT 1 NN 2 , NN 2 ?</S>
			<S sid="207" ssid="64">(S) Table 2: Sample grammar rules extracted from the training set (T), pivoted set (P) or generated from the source (S).</S>
	</SECTION>
	<SECTION title="Experimental Design. " number="5">
			<S sid="208" ssid="1">In this section we present our experimental set up for assessing the performance of our model.</S>
			<S sid="209" ssid="2">We give details on the corpora and grammars we used, model parameters and features, 6 the baselineused for comparison with our approach, and ex plain how our system output was evaluated.</S>
			<S sid="210" ssid="3">Grammar Extraction Our grammar usedrules extracted directly from our compression cor pus (the training partition, 480 sentences) and a bilingual corpus (see Table 2 for examples).</S>
			<S sid="211" ssid="4">Theformer corpus was word-aligned using the Berke ley aligner (Liang et al, 2006) initialised with a lexicon of word identity mappings, and parsed with Bikel?s (2002) parser.</S>
			<S sid="212" ssid="5">From this we extracted grammar rules following the technique described in Cohn and Lapata (2007).</S>
			<S sid="213" ssid="6">For the pivot grammarwe use the French-English Europarl v2 which con tains approximately 688K sentences.</S>
			<S sid="214" ssid="7">Again, the corpus was aligned using the Berkeley aligner and the English side was parsed with Bikel?s parser.</S>
			<S sid="215" ssid="8">Weextracted tree-to-string rules using our implementation of the GHKM method.</S>
			<S sid="216" ssid="9">To ameliorate the effects of poor alignments on the grammar, we re moved singleton rules before pivoting.</S>
			<S sid="217" ssid="10">In addition to the two grammars described, wescanned the source trees in the compression cor pus and included STSG rules to copy each CFG production or delete up to two of its children.</S>
			<S sid="218" ssid="11">This is illustrated in Table 2 where the last two rules are derived from the CFG production NP?DT NN inthe source tree.</S>
			<S sid="219" ssid="12">All trees are rooted with a distinguished TOP non-terminal which allows the ex plicit modelling of sentence spanning sub-trees.</S>
			<S sid="220" ssid="13">These grammars each had 44,199 (pivot), 7,813 (train) and 22,555 (copy) rules.</S>
			<S sid="221" ssid="14">We took their union, resulting in 58,281 unique rules and 13,619 unique source elementary trees.</S>
			<S sid="222" ssid="15">Model Parameters Our model was trainedon 480 sentences, 36 sentences were used for de velopment and 59 for testing.</S>
			<S sid="223" ssid="16">We used a variety of syntax-based, lexical and compression-specific 6 The software and corpus can be downloaded from http://homepages.inf.ed.ac.uk/tcohn/paraphrase.</S>
			<S sid="224" ssid="17">For every rule: origin of rule for each origin, o: log p o (s, t), log p o (s|t), log p o (t|s) s R , t R , s R ? t R s, t, s ? t, s = t both s and t are pre-terminals and s = t or s 6= t number of terminals/variables/dropped variables ordering of variables as numbers/non-terminals non-terminal sequence of vars identical after reordering pre-terminal or terminal sequences are identical number/identity of common/inserted/dropped terminals source is shorter/longer than target target is a compression of the source using deletes For every ngram : log p(w i |w i?1 i?(n?1) ) Table 3: The feature set.</S>
			<S sid="225" ssid="18">Rules were drawn from the training set, bilingual pivoting and directly from the source trees.</S>
			<S sid="226" ssid="19">s andt are the source and target elementary trees in a rule, the sub script R references the root non-terminal, w are the terminals in the target tree.</S>
			<S sid="227" ssid="20">features (196,419 in total).</S>
			<S sid="228" ssid="21">These are summarised in Table 3.</S>
			<S sid="229" ssid="22">We also use a trigram language model trained on the BNC (100 million words) using the SRI Language Modeling toolkit (Stolcke, 2002), with modified Kneser-Ney smoothing.An important parameter in our modeling frame work is the choice of loss function.</S>
			<S sid="230" ssid="23">We evaluatedthe loss functions presented in Section 4 on the de velopment set.</S>
			<S sid="231" ssid="24">We ran our system for each of the four loss functions and asked two human judgesto rate the output on a scale of 1 to 5.</S>
			<S sid="232" ssid="25">The Ham ming loss over tokens performed best with a meanrating of 3.18, closely followed by the edit dis tance (3.17).</S>
			<S sid="233" ssid="26">We chose the former over the latter as it is less coarsely approximated during search.</S>
			<S sid="234" ssid="27">Baseline There are no existing models thatcan be readily trained on our abstractive com pression data.</S>
			<S sid="235" ssid="28">Instead, we use Cohn and Lapata?s (2007) extractive model as a baseline.</S>
			<S sid="236" ssid="29">The latter was trained on an extractive compression corpus drawn from the BNC (Clarke, 2008) and tunedto provide a similar compression rate to our sys tem.</S>
			<S sid="237" ssid="30">Note that their model is a strong baseline: it performed significantly better than competitive approaches (McDonald, 2006) across a variety of compression corpora.Evaluation Methodology Sentence compres sion output is commonly evaluated by eliciting human judgments.</S>
			<S sid="238" ssid="31">Following Knight and Marcu(2002), we asked participants to rate the grammati cality of the target compressions and howwell they preserved the most important information from the source.</S>
			<S sid="239" ssid="32">In both cases they used a five pointrating scale where a high number indicates better performance.</S>
			<S sid="240" ssid="33">We randomly selected 30 sen tences from the test portion of our corpus.</S>
			<S sid="241" ssid="34">These 142 Models Grammaticality Importance CompR Extract 3.10 ? 2.43 ? 82.5 Abstract 3.38 ? 2.85 ? ?</S>
			<S sid="242" ssid="35">79.2 Gold 4.51 4.02 58.4Table 4: Mean ratings on compression output elicited by hu mans; ? : significantly different from the gold standard; ?: sig nificantly different from the baseline.</S>
			<S sid="243" ssid="36">sentences were compressed automatically by our model and the baseline.</S>
			<S sid="244" ssid="37">We also included goldstandard compressions.</S>
			<S sid="245" ssid="38">Our materials thus con sisted of 90 (30 ? 3) source-target sentences.</S>
			<S sid="246" ssid="39">We collected ratings from 22 unpaid volunteers, all self reported native English speakers.</S>
			<S sid="247" ssid="40">Both studies were conducted over the Internet using a custom built web interface.</S>
	</SECTION>
	<SECTION title="Results. " number="6">
			<S sid="248" ssid="1">Our results are summarised in Table 4, where we show the mean ratings for our system (Abstract), the baseline (Extract), and the gold standard.</S>
			<S sid="249" ssid="2">We first performed an Analysis of Variance (ANOVA)to examine the effect of different system compres sions.</S>
			<S sid="250" ssid="3">The ANOVA revealed a reliable effect on both grammaticality and importance (significant over both subjects and items (p &lt; 0.01)).We next examined in more detail between system differences.</S>
			<S sid="251" ssid="4">Post-hoc Tukey tests revealed that our abstractive model received significantlyhigher ratings than the baseline in terms of impor tance (?</S>
			<S sid="252" ssid="5">&lt; 0.01).</S>
			<S sid="253" ssid="6">We conjecture that this is due to the synchronous grammar we employ which is larger and more expressive than the baseline.</S>
			<S sid="254" ssid="7">In the extractive case, a word sequence is eitherdeleted or retained.</S>
			<S sid="255" ssid="8">We may, however, want to re tain the meaning of the sequence while rendering the sentence shorter, and this is precisely what our model can achieve, e.g., by allowing substitutions.As far as grammaticality is concerned, our abstractive model is numerically better than the extrac tive baseline but the difference is not statistically significant.</S>
			<S sid="256" ssid="9">Note that our model has to work a lotharder than the baseline to preserve grammatical ity since we allow arbitrary rewrites which maylead to agreement or tense mismatches, and selec tional preference violations.</S>
			<S sid="257" ssid="10">The scope for errors is greatly reduced when performing solely deletions.Finally, both the abstractive and extractive out puts are perceived as significantly worse than the gold standard both in terms of grammaticalityand importance (?</S>
			<S sid="258" ssid="11">&lt; 0.01).</S>
			<S sid="259" ssid="12">This is not surpris ing: human-authored compressions are more fluentand tend to omit genuinely superfluous informa tion.</S>
			<S sid="260" ssid="13">This is also mirrored in the compression ratesshown in Table 4.</S>
			<S sid="261" ssid="14">When compressing, humans emO: Kurtz came from Missouri, and at the age of 14, hitch hiked to Los Angeles seeking top diving coaches.</S>
			<S sid="262" ssid="15">E: Kurtz came from Missouri, and at 14, hitch-hiked to Los Angeles seeking top diving coaches.</S>
			<S sid="263" ssid="16">A: Kurtz hitch-hiked to Los Angeles seeking top diving coaches.</S>
			<S sid="264" ssid="17">G: Kurtz came from Missouri, and at 14, hitch-hiked to Los Angeles seeking diving coaches.</S>
			<S sid="265" ssid="18">O: The scheme was intended for people of poor or moderate means.</S>
			<S sid="266" ssid="19">E: The scheme was intended for people of poor means.</S>
			<S sid="267" ssid="20">A: The scheme was planned for poor people.</S>
			<S sid="268" ssid="21">G: The scheme was intended for the poor.</S>
			<S sid="269" ssid="22">O: He died last Thursday at his home from complications following a fall, said his wife author Margo Kurtz.</S>
			<S sid="270" ssid="23">E: He died last at his home from complications following a fall, said wife, author Margo Kurtz.</S>
			<S sid="271" ssid="24">A: His wife author Margo Kurtz died from complications after a decline.</S>
			<S sid="272" ssid="25">G: He died from complications following a fall.O: But a month ago, she returned to Britain, taking the chil dren with her.</S>
			<S sid="273" ssid="26">E: She returned to Britain, taking the children.</S>
			<S sid="274" ssid="27">A: But she took the children with him.</S>
			<S sid="275" ssid="28">G: But she returned to Britain with the children.</S>
			<S sid="276" ssid="29">Table 5: Compression examples including human and systemoutput (O: original sentence, E: Extractive model, A: Abstrac tive model, G: gold standard) ploy not only linguistic but also world knowledge which is not accessible to our model.</S>
			<S sid="277" ssid="30">Although thesystem can be forced to match the human compression rate, the grammaticality and information con tent both suffer.</S>
			<S sid="278" ssid="31">More sophisticated features could allow the system to narrow this gap.</S>
			<S sid="279" ssid="32">We next examined the output of our system inmore detail by recording the number of substitu tions, deletions and insertions it performed on the test data.</S>
			<S sid="280" ssid="33">Deletions accounted for 67% of rewrite operations, substitutions for 27%, and insertions for 6%.</S>
			<S sid="281" ssid="34">Interestingly, we observe a similar ratio in the human compressions.</S>
			<S sid="282" ssid="35">Here, deletions arealso the most common rewrite operation (69%) fol lowed by substitutions (24%), and insertions (7%).</S>
			<S sid="283" ssid="36">The ability to perform substitutions and insertions increases the compression potential of our system, but can also result in drastic meaning changes.</S>
			<S sid="284" ssid="37">In most cases (63%) the compressions produced byour system did not distort the meaning of the orig inal.</S>
			<S sid="285" ssid="38">Humans are clearly better at this, 96.5% of their compressions were meaning preserving.</S>
			<S sid="286" ssid="39">We illustrate example output of our system in Table 5.</S>
			<S sid="287" ssid="40">For comparison we also present the gold standard compressions and baseline output.</S>
			<S sid="288" ssid="41">In thefirst sentence the system rendered Kurtz the sub ject of hitch-hiked.</S>
			<S sid="289" ssid="42">At the same time it deleted the verb and its adjunct from the first conjunct (camefrom Missouri ) as well as the temporal modi fier at the age of 14 from the second conjunct.</S>
			<S sid="290" ssid="43">The second sentence shows some paraphrasing: the verb intended is substituted with planned and 143 poor is now modifying people rather than means.In the third example, our system applies multi ple rewrites.</S>
			<S sid="291" ssid="44">It deletes last Thursday at his home,moves wife author Margo Kurtz to the subject position, and substitutes fall with decline.</S>
			<S sid="292" ssid="45">Unfortu nately, the compressed sentence expresses a rather different meaning from the original.</S>
			<S sid="293" ssid="46">It is not Margo Kurtz who died but her husband.</S>
			<S sid="294" ssid="47">Finally, our last sentence illustrates a counter-intuitive substitution, the pronoun her is rewritten as him.</S>
			<S sid="295" ssid="48">This is becausethey share the French translation lui and thus piv oting learns to replace the less common word (in legal corpora) her with him.</S>
			<S sid="296" ssid="49">This problem could be addressed by pivoting over multiple bitexts with different foreign languages.</S>
			<S sid="297" ssid="50">Possible extensions and improvements to the current model are many and varied.</S>
			<S sid="298" ssid="51">Firstly, ashinted at above, the model would benefit from extensive feature engineering, including source con ditioned features and ngram features besides theLM.</S>
			<S sid="299" ssid="52">A richer grammar would also boost perfor mance.</S>
			<S sid="300" ssid="53">This could be found by pivoting over more bitexts in many foreign languages or making use of existing or paraphrase corpora.</S>
			<S sid="301" ssid="54">Finally, we planto apply the model to other paraphrasing tasks in cluding fully abstractive document summarisation (Daum?e III and Marcu, 2002).</S>
			<S sid="302" ssid="55">Acknowledgements The authors acknowledge the support of EPSRC (grants GR/T04540/01 and GR/T04557/01).</S>
			<S sid="303" ssid="56">Special thanks to Phil Blunsom, James Clarke and Miles Osborne for their insightful suggestions.</S>
	</SECTION>
</PAPER>
