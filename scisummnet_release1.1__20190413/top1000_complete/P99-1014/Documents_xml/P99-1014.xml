<PAPER>
  <S sid="0">Inducing A Semantically Annotated Lexicon Via EM-Based Clustering</S>
  <ABSTRACT>
    <S sid="1" ssid="1">We present a technique for automatic induction of slot annotations for subcategorization frames, based on induction of hidden classes in the EM framework of statistical estimation.</S>
    <S sid="2" ssid="2">The models are empirically evalutated by a general decision test.</S>
    <S sid="3" ssid="3">Induction of slot labeling for subcategorization frames is accomplished by a further application of EM, and applied experimentally on frame observations derived from parsing large corpora.</S>
    <S sid="4" ssid="4">We outline an interpretation of the learned representations as theoretical-linguistic decompositional lexical entries.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">An important challenge in computational linguistics concerns the construction of large-scale computational lexicons for the numerous natural languages where very large samples of language use are now available.</S>
    <S sid="6" ssid="2">Resnik (1993) initiated research into the automatic acquisition of semantic selectional restrictions.</S>
    <S sid="7" ssid="3">Ribas (1994) presented an approach which takes into account the syntactic position of the elements whose semantic relation is to be acquired.</S>
    <S sid="8" ssid="4">However, those and most of the following approaches require as a prerequisite a fixed taxonomy of semantic relations.</S>
    <S sid="9" ssid="5">This is a problem because (i) entailment hierarchies are presently available for few languages, and (ii) we regard it as an open question whether and to what degree existing designs for lexical hierarchies are appropriate for representing lexical meaning.</S>
    <S sid="10" ssid="6">Both of these considerations suggest the relevance of inductive and experimental approaches to the construction of lexicons with semantic information.</S>
    <S sid="11" ssid="7">This paper presents a method for automatic induction of semantically annotated subcategorization frames from unannotated corpora.</S>
    <S sid="12" ssid="8">We use a statistical subcat-induction system which estimates probability distributions and corpus frequencies for pairs of a head and a subcat frame (Carroll and Rooth, 1998).</S>
    <S sid="13" ssid="9">The statistical parser can also collect frequencies for the nominal fillers of slots in a subcat frame.</S>
    <S sid="14" ssid="10">The induction of labels for slots in a frame is based upon estimation of a probability distribution over tuples consisting of a class label, a selecting head, a grammatical relation, and a filler head.</S>
    <S sid="15" ssid="11">The class label is treated as hidden data in the EMframework for statistical estimation.</S>
  </SECTION>
  <SECTION title="2 EM-Based Clustering" number="2">
    <S sid="16" ssid="1">In our clustering approach, classes are derived directly from distributional data&#8212;a sample of pairs of verbs and nouns, gathered by parsing an unannotated corpus and extracting the fillers of grammatical relations.</S>
    <S sid="17" ssid="2">Semantic classes corresponding to such pairs are viewed as hidden variables or unobserved data in the context of maximum likelihood estimation from incomplete data via the EM algorithm.</S>
    <S sid="18" ssid="3">This approach allows us to work in a mathematically welldefined framework of statistical inference, i.e., standard monotonicity and convergence results for the EM algorithm extend to our method.</S>
    <S sid="19" ssid="4">The two main tasks of EM-based clustering are i) the induction of a smooth probability model on the data, and ii) the automatic discovery of class-structure in the data.</S>
    <S sid="20" ssid="5">Both of these aspects are respected in our application of lexicon induction.</S>
    <S sid="21" ssid="6">The basic ideas of our EM-based clustering approach were presented in Rooth (Ms).</S>
    <S sid="22" ssid="7">Our approach constrasts with the merely heuristic and empirical justification of similarity-based approaches to clustering (Dagan et al., to appear) for which so far no clear probabilistic interpretation has been given.</S>
    <S sid="23" ssid="8">The probability model we use can be found earlier in Pereira et al. (1993).</S>
    <S sid="24" ssid="9">However, in contrast to this approach, our statistical inference method for clustering is formalized clearly as an EM-algorithm.</S>
    <S sid="25" ssid="10">Approaches to probabilistic clustering similar to ours were presented recently in Saul and Pereira (1997) and Hofmann and Puzicha (1998).</S>
    <S sid="26" ssid="11">There also EM-algorithms for similar probability models have been derived, but applied only to simpler tasks not involving a combination of EMbased clustering models as in our lexicon induction experiment.</S>
    <S sid="27" ssid="12">For further applications of our clustering model see Rooth et al. (1998).</S>
    <S sid="28" ssid="13">We seek to derive a joint distribution of verbnoun pairs from a large sample of pairs of verbs v E V and nouns n E N. The key idea is to view v and n as conditioned on a hidden class c e C, where the classes are given no prior interpretation.</S>
    <S sid="29" ssid="14">The semantically smoothed probability of a pair (v, n) is defined to be: The joint distribution p(c, v, n) is defined by p(c, v , n) = p(c)p(vic)p(nic).</S>
    <S sid="30" ssid="15">Note that by construction, conditioning of v and n on each other is solely made through the classes c. In the framework of the EM algorithm (Dempster et al., 1977), we can formalize clustering as an estimation problem for a latent class (LC) model as follows.</S>
    <S sid="31" ssid="16">We are given: (i) a sample space)) of observed, incomplete data, corresponding to pairs from V x N, (ii) a sample space X of unobserved, complete data, corresponding to triples from Cx V x N, (iii) a set X(y) = {x E X I x = (c, y), c E CI of complete data related to the observation y, (iv) a complete-data specification po(x), corresponding to the joint probability p(c, v, n) over Cx V x N, with parametervector 0 = (Oc,Ov,OncIc E C, v E V, n E N), (v) an incomplete data specification P0(Y) which is related to the complete-data specification as the marginal probability P0 (Y) = Ex(y)po(x). '</S>
    <S sid="32" ssid="17">The EM algorithm is directed at finding a value a of 0 that maximizes the incompletedata log-likelihood function L as a function of 0 for a given sample )), i.e., a = arg max L(0) where L(0) = ln Fly po (y).</S>
    <S sid="33" ssid="18">0 As prescribed by the EM algorithm, the parameters of L(0) are estimated indirectly by proceeding iteratively in terms of complete-data estimation for the auxiliary function Q(0; 9(0), which is the conditional expectation of the complete-data log-likelihood lnpo(x) given the observed data y and the current fit of the parameter values 0(0 (E-step).</S>
    <S sid="34" ssid="19">This auxiliary function is iteratively maximized as a function of 0 (M-step), where each iteration is defined by Note that our application is an instance of the EM-algorithm for context-free models (Baum et al., 1970), from which the following particularily simple reestimation formulae can be derived.</S>
    <S sid="35" ssid="20">Let x = (c, y) for fixed c and y.</S>
    <S sid="36" ssid="21">Then probabilistic context-free grammar of (Carroll and Rooth, 1998) gave for the British National Corpus (117 million words).</S>
    <S sid="37" ssid="22">Intuitively, the conditional expectation of the number of times a particular v, n, or c choice is made during the derivation is prorated by the conditionally expected total number of times a choice of the same kind is made.</S>
    <S sid="38" ssid="23">As shown by Baum et al. (1970), these expectations can be calculated efficiently using dynamic programming techniques.</S>
    <S sid="39" ssid="24">Every such maximization step increases the log-likelihood function L, and a sequence of re-estimates eventually converges to a (local) maximum of L. In the following, we will present some examples of induced clusters.</S>
    <S sid="40" ssid="25">Input to the clustering algorithm was a training corpus of 1280715 tokens (608850 types) of verb-noun pairs participating in the grammatical relations of intransitive and transitive verbs and their subject- and object-fillers.</S>
    <S sid="41" ssid="26">The data were gathered from the maximal-probability parses the head-lexicalized Fig.</S>
    <S sid="42" ssid="27">2 shows an induced semantic class out of a model with 35 classes.</S>
    <S sid="43" ssid="28">At the top are listed the 20 most probable nouns in the p(n5) distribution and their probabilities, and at left are the 30 most probable verbs in the p(v15) distribution.</S>
    <S sid="44" ssid="29">5 is the class index.</S>
    <S sid="45" ssid="30">Those verb-noun pairs which were seen in the training data appear with a dot in the class matrix.</S>
    <S sid="46" ssid="31">Verbs with suffix .as : s indicate the subject slot of an active intransitive.</S>
    <S sid="47" ssid="32">Similarily .aso: s denotes the subject slot of an active transitive, and .aso: o denotes the object slot of an active transitive.</S>
    <S sid="48" ssid="33">Thus v in the above discussion actually consists of a combination of a verb with a subcat frame slot as : s, aso : s, or aso : o.</S>
    <S sid="49" ssid="34">Induced classes often have a basis in lexical semantics; class 5 can be interpreted as clustering agents, denoted by proper names, &amp;quot;man&amp;quot;, and &amp;quot;woman&amp;quot;, together with verbs denoting communicative action.</S>
    <S sid="50" ssid="35">Fig.</S>
    <S sid="51" ssid="36">1 shows a cluster involving verbs of scalar change and things which can move along scales.</S>
    <S sid="52" ssid="37">Fig.</S>
    <S sid="53" ssid="38">5 can be interpreted as involving different dispositions and modes of their execution.</S>
    <S sid="54" ssid="39">60 100 160 200 260 300 nix*. el cleeee&#8226;</S>
  </SECTION>
  <SECTION title="3 Evaluation of Clustering Models" number="3">
    <S sid="55" ssid="1">We evaluated our clustering models on a pseudodisambiguation task similar to that performed in Pereira et al. (1993), but differing in detail.</S>
    <S sid="56" ssid="2">The task is to judge which of two verbs v and v' is more likely to take a given noun n as its argument where the pair (v, n) has been cut out of the original corpus and the pair (v', n) is constructed by pairing 71 with a randomly chosen verb v' such that the combination (v', n) is completely unseen.</S>
    <S sid="57" ssid="3">Thus this test evaluates how well the models generalize over unseen verbs.</S>
    <S sid="58" ssid="4">The data for this test were built as follows.</S>
    <S sid="59" ssid="5">We constructed an evaluation corpus of (v, n, v') triples by randomly cutting a test corpus of 3000 (v, n) pairs out of the original corpus of 1280712 tokens, leaving a training corpus of 1178698 tokens.</S>
    <S sid="60" ssid="6">Each noun n in the test corpus was combined with a verb v' which was randomly chosen according to its frequency such that the pair (v', n) did appear neither in the training nor in the test corpus.</S>
    <S sid="61" ssid="7">However, the elements v, v', and n were required to be part of the training corpus.</S>
    <S sid="62" ssid="8">Furthermore, we restricted the verbs and nouns in the evalutation corpus to the ones which occured at least 30 times and at most 3000 times with some verb-functor v in the training corpus.</S>
    <S sid="63" ssid="9">The resulting 1337 evaluation triples were used to evaluate a sequence of clustering models trained from the training corpus.</S>
    <S sid="64" ssid="10">The clustering models we evaluated were parametrized in starting values of the training algorithm, in the number of classes of the model, and in the number of iteration steps, resulting in a sequence of 3 x 10 x 6 models.</S>
    <S sid="65" ssid="11">Starting from a lower bound of 50 % random choice, accuracy was calculated as the number of times the model decided for p(nlv) &gt; p(n1v1) out of all choices made.</S>
    <S sid="66" ssid="12">Fig.</S>
    <S sid="67" ssid="13">3 shows the evaluation results for models trained with 50 iterations, averaged over starting values, and plotted against class cardinality.</S>
    <S sid="68" ssid="14">Different starting values had an effect of 2 % on the performance of the test.</S>
    <S sid="69" ssid="15">We obtained a value of about 80 % accuracy for models between 25 and 100 classes.</S>
    <S sid="70" ssid="16">Models with more than 100 classes show a small but stable overfitting effect.</S>
    <S sid="71" ssid="17">A second experiment addressed the smoothing power of the model by counting the number of (v, n) pairs in the set V xN of all possible combinations of verbs and nouns which received a positive joint probability by the model.</S>
    <S sid="72" ssid="18">The V x Nspace for the above clustering models included about 425 million (v, n) combinations; we approximated the smoothing size of a model by randomly sampling 1000 pairs from V x N and returning the percentage of positively assigned pairs in the random sample.</S>
    <S sid="73" ssid="19">Fig.</S>
    <S sid="74" ssid="20">4 plots the smoothing results for the above models against the number of classes.</S>
    <S sid="75" ssid="21">Starting values had an influence of &#177; 1 % on performance.</S>
    <S sid="76" ssid="22">Given the proportion of the number of types in the training corpus to the V x N-space, without clustering we have a smoothing power of 0.14 % whereas for example a model with 50 classes and 50 iterations has a smoothing power of about 93 %.</S>
    <S sid="77" ssid="23">Corresponding to the maximum likelihood paradigm, the number of training iterations had a decreasing effect on the smoothing performance whereas the accuracy of the pseudodisambiguation was increasing in the number of iterations.</S>
    <S sid="78" ssid="24">We found a number of 50 iterations to be a good compromise in this trade-off.</S>
  </SECTION>
  <SECTION title="4 Lexicon Induction Based on Latent Classes" number="4">
    <S sid="79" ssid="1">The goal of the following experiment was to derive a lexicon of several hundred intransitive and transitive verbs with subcat slots labeled with latent classes.</S>
    <S sid="80" ssid="2">To induce latent classes for the subject slot of a fixed intransitive verb the following statistical inference step was performed.</S>
    <S sid="81" ssid="3">Given a latent class model pLc(.) for verb-noun pairs, and a sample n1, , nm of subjects for a fixed intransitive verb, we calculate the probability of an arbitrary subject n E N by: The estimation of the parameter-vector 0 = (Ocic e C) can be formalized in the EM framework by viewing p(n) or p(c, n) as a function of 0 for fixed pLc(.).</S>
    <S sid="82" ssid="4">The re-estimation formulae resulting from the incomplete data estimation for these probability functions have the following form (1(n) is the frequency of n in the sample of subjects of the fixed verb): A similar EM induction process can be applied also to pairs of nouns, thus enabling induction of latent semantic annotations for transitive verb frames.</S>
    <S sid="83" ssid="5">Given a LC model NA.) for verb-noun pairs, and a sample (ni, n2)1, , (n, n) of noun arguments (ni subjects, and n2 direct objects) for a fixed transitive verb, we calculate the probability of its noun argument pairs by: in an EM framework by viewing p(ni, n2) or p(ci, c2, ni, n2) as a function of 0 for fixed pLc(.).</S>
    <S sid="84" ssid="6">The re-estimation formulae resulting from this incomplete data estimation problem have the following simple form (f(ni, n2) is the frequency of (ni, n2) in the sample of noun argument pairs of the fixed verb): Note that the class distributions p(c) and p(ci, c2) for intransitive and transitive models can be computed also for verbs unseen in the LC model. blush 5 0.982975 snarl 5 0.962094 constance 3 mandeyille 2 christina 3 jinkwa 2 willie 2.99737 man 1.99859 ronni 2 scott 1.99761 claudia 2 omalley 1.99755 gabriel 2 shamlou 1 maggie 2 angalo 1 bathsheba 2 corbett 1 sarah 2 southgate 1 girl 1.9977 ace 1 Experiments used a model with 35 classes.</S>
    <S sid="85" ssid="7">From maximal probability parses for the British National Corpus derived with a statistical parser (Carroll and Rooth, 1998), we extracted frequency tables for intransitve verb/subject pairs and transitive verb/subject/object triples.</S>
    <S sid="86" ssid="8">The 500 most frequent verbs were selected for slot labeling.</S>
    <S sid="87" ssid="9">Fig.</S>
    <S sid="88" ssid="10">6 shows two verbs v for which the most probable class label is 5, a class which we earlier described as communicative action, together with the estimated frequencies of f (n)pe(cln) for those ten nouns n for which this estimated frequency is highest.</S>
    <S sid="89" ssid="11">Fig.</S>
    <S sid="90" ssid="12">7 shows corresponding data for an intransitive scalar motion sense of increase.</S>
    <S sid="91" ssid="13">Fig.</S>
    <S sid="92" ssid="14">8 shows the intransitive verbs which take 17 as the most probable label.</S>
    <S sid="93" ssid="15">Intuitively, the verbs are semantically coherent.</S>
    <S sid="94" ssid="16">When compared to Levin (1993)'s 48 top-level verb classes, we found an agreement of our classification with her class of &amp;quot;verbs of changes of state&amp;quot; except for the last three verbs in the list in Fig.</S>
    <S sid="95" ssid="17">8 which is sorted by probability of the class label.</S>
    <S sid="96" ssid="18">Similar results for German intransitive scalar motion verbs are shown in Fig.</S>
    <S sid="97" ssid="19">9.</S>
    <S sid="98" ssid="20">The data for these experiments were extracted from the maximal-probability parses of a 4.1 million word corpus of German subordinate clauses, yielding 418290 tokens (318086 types) of pairs of verbs or adjectives and nouns.</S>
    <S sid="99" ssid="21">The lexicalized probabilistic grammar for German used is described in Beil et al. (1999).</S>
    <S sid="100" ssid="22">We compared the German example of scalar motion verbs to the linguistic classification of verbs given by Schuhmacher (1986) and found an agreement of our classification with the class of &amp;quot;einfache Anderungsverben&amp;quot; (simple verbs of change) except for the verbs anwachsen (increase) and stagnieren(stagnate) which were not classified there at all.</S>
    <S sid="101" ssid="23">Fig.</S>
    <S sid="102" ssid="24">10 shows the most probable pair of classes for increase as a transitive verb, together with estimated frequencies for the head filler pair.</S>
    <S sid="103" ssid="25">Note that the object label 17 is the class found with intransitive scalar motion verbs; this correspondence is exploited in the next section.</S>
  </SECTION>
  <SECTION title="5 Linguistic Interpretation" number="5">
    <S sid="104" ssid="1">In some linguistic accounts, multi-place verbs are decomposed into representations involving (at least) one predicate or relation per argument.</S>
    <S sid="105" ssid="2">For instance, the transitive causative/inchoative verb increase, is composed of an actor/causative verb combining with a one-place predicate in the structure on the left in Fig.</S>
    <S sid="106" ssid="3">11.</S>
    <S sid="107" ssid="4">Linguistically, such representations are motivated by argument alternations (diathesis), case linking and deep word order, language acquistion, scope ambiguity, by the desire to represent aspects of lexical meaning, and by the fact that in some languages, the postulated decomposed representations are overt, with each primitive predicate corresponding to a morpheme.</S>
    <S sid="108" ssid="5">For references and recent discussion of this kind of theory see Hale and Keyser (1993) and Kural (1996).</S>
    <S sid="109" ssid="6">We will sketch an understanding of the lexical representations induced by latent-class labeling in terms of the linguistic theories mentioned above, aiming at an interpretation which combines computational learnability, linguistic motivation, and denotational-semantic adequacy.</S>
    <S sid="110" ssid="7">The basic idea is that latent classes are computational models of the atomic relation symbols occurring in lexical-semantic representations.</S>
    <S sid="111" ssid="8">As a first implementation, consider replacing the relation symbols in the first tree in Fig.</S>
    <S sid="112" ssid="9">11 with relation symbols derived from the latent class labeling.</S>
    <S sid="113" ssid="10">In the second tree in Fig 11, R17 and R8 are relation symbols with indices derived from the labeling procedure of Sect.</S>
    <S sid="114" ssid="11">4.</S>
    <S sid="115" ssid="12">Such representations can be semantically interpreted in standard ways, for instance by interpreting relation symbols as denoting relations between events and individuals.</S>
    <S sid="116" ssid="13">Such representations are semantically inadequate for reasons given in philosophical critiques of decomposed linguistic representations; see Fodor (1998) for recent discussion.</S>
    <S sid="117" ssid="14">A lexicon estimated in the above way has as many primitive relations as there are latent classes.</S>
    <S sid="118" ssid="15">We guess there should be a few hundred classes in an approximately complete lexicon (which would have to be estimated from a corpus of hundreds of millions of words or more).</S>
    <S sid="119" ssid="16">Fodor's arguments, which are based on the very limited degree of genuine interdefinability of lexical items and on Putnam's arguments for contextual determination of lexical meaning, indicate that the number of basic concepts has the order of magnitude of the lexicon itself.</S>
    <S sid="120" ssid="17">More concretely, a lexicon constructed along the above principles would identify verbs which are labelled with the same latent classes; for instance it might identify the representations of grab and touch.</S>
    <S sid="121" ssid="18">For these reasons, a semantically adequate lexicon must include additional relational constants.</S>
    <S sid="122" ssid="19">We meet this requirement in a simple way, by including as a conjunct a unique constant derived from the open-class root, as in the third tree in Fig.</S>
    <S sid="123" ssid="20">11.</S>
    <S sid="124" ssid="21">We introduce indexing of the open class root (copied from the class index) in order that homophony of open class roots not result in common conjuncts in semantic representations&#8212;for instance, we don't want the two senses of decline exemplified in decline the proposal and decline five percent to have an common entailment represented by a common conjunct.</S>
    <S sid="125" ssid="22">This indexing method works as long as the labeling process produces different latent class labels for the different senses.</S>
    <S sid="126" ssid="23">The last tree in Fig.</S>
    <S sid="127" ssid="24">11 is the learned representation for the scalar motion sense of the intransitive verb increase.</S>
    <S sid="128" ssid="25">In our approach, learning the argument alternation (diathesis) relating the transitive increase (in its scalar motion sense) to the intransitive increase (in its scalar motion sense) amounts to learning representations with a common component Ri7 A increaser,.</S>
    <S sid="129" ssid="26">In this case, this is achieved.</S>
  </SECTION>
  <SECTION title="6 Conclusion" number="6">
    <S sid="130" ssid="1">We have proposed a procedure which maps observations of subcategorization frames with their complement fillers to structured lexical entries.</S>
    <S sid="131" ssid="2">We believe the method is scientifically interesting, practically useful, and flexible because: 1.</S>
    <S sid="132" ssid="3">The algorithms and implementation are efficient enough to map a corpus of a hundred million words to a lexicon.</S>
    <S sid="133" ssid="4">2.</S>
    <S sid="134" ssid="5">The model and induction algorithm have foundations in the theory of parameterized families of probability distributions and statistical estimation.</S>
    <S sid="135" ssid="6">As exemplified in the paper, learning, disambiguation, and evaluation can be given simple, motivated formulations.</S>
    <S sid="136" ssid="7">3.</S>
    <S sid="137" ssid="8">The derived lexical representations are linguistically interpretable.</S>
    <S sid="138" ssid="9">This suggests the possibility of large-scale modeling and observational experiments bearing on questions arising in linguistic theories of the lexicon.</S>
    <S sid="139" ssid="10">4.</S>
    <S sid="140" ssid="11">Because a simple probabilistic model is used, the induced lexical entries could be incorporated in lexicalized syntax-based probabilistic language models, in particular in head-lexicalized models.</S>
    <S sid="141" ssid="12">This provides for potential application in many areas.</S>
    <S sid="142" ssid="13">5.</S>
    <S sid="143" ssid="14">The method is applicable to any natural language where text samples of sufficient size, computational morphology, and a robust parser capable of extracting subcategorization frames with their fillers are available.</S>
  </SECTION>
</PAPER>
