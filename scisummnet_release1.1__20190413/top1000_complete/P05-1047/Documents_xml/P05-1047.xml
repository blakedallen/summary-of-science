<PAPER>
  <S sid="0">A Semantic Approach To IE Pattern Induction</S>
  <ABSTRACT>
    <S sid="1" ssid="1">This paper presents a novel algorithm for the acquisition of Information Extraction patterns.</S>
    <S sid="2" ssid="2">The approach makes the assumption that useful patterns will have similar meanings to those already identified as relevant.</S>
    <S sid="3" ssid="3">Patterns are compared using a variation of the standard vector space model in which information from an ontology is used to capture semantic similarity.</S>
    <S sid="4" ssid="4">Evaluation shows this algorithm performs well when compared with a previously reported document-centric approach.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="5" ssid="1">Developing systems which can be easily adapted to new domains with the minimum of human intervention is a major challenge in Information Extraction (IE).</S>
    <S sid="6" ssid="2">Early IE systems were based on knowledge engineering approaches but suffered from a knowledge acquisition bottleneck.</S>
    <S sid="7" ssid="3">For example, Lehnert et al. (1992) reported that their system required around 1,500 person-hours of expert labour to modify for a new extraction task.</S>
    <S sid="8" ssid="4">One approach to this problem is to use machine learning to automatically learn the domain-specific information required to port a system (Riloff, 1996).</S>
    <S sid="9" ssid="5">Yangarber et al. (2000) proposed an algorithm for learning extraction patterns for a small number of examples which greatly reduced the burden on the application developer and reduced the knowledge acquisition bottleneck.</S>
    <S sid="10" ssid="6">Weakly supervised algorithms, which bootstrap from a small number of examples, have the advantage of requiring only small amounts of annotated data, which is often difficult and time-consuming to produce.</S>
    <S sid="11" ssid="7">However, this also means that there are fewer examples of the patterns to be learned, making the learning task more challenging.</S>
    <S sid="12" ssid="8">Providing the learning algorithm with access to additional knowledge can compensate for the limited number of annotated examples.</S>
    <S sid="13" ssid="9">This paper presents a novel weakly supervised algorithm for IE pattern induction which makes use of the WordNet ontology (Fellbaum, 1998).</S>
    <S sid="14" ssid="10">Extraction patterns are potentially useful for many language processing tasks, including question answering and the identification of lexical relations (such as meronomy and hyponymy).</S>
    <S sid="15" ssid="11">In addition, IE patterns encode the different ways in which a piece of information can be expressed in text.</S>
    <S sid="16" ssid="12">For example, &#8220;Acme Inc. fired Jones&#8221;, &#8220;Acme Inc. let Jones go&#8221;, and &#8220;Jones was given notice by his employers, Acme Inc.&#8221; are all ways of expressing the same fact.</S>
    <S sid="17" ssid="13">Consequently the generation of extraction patterns is pertinent to paraphrase identification which is central to many language processing problems.</S>
    <S sid="18" ssid="14">We begin by describing the general process of pattern induction and an existing approach, based on the distribution of patterns in a corpus (Section 2).</S>
    <S sid="19" ssid="15">We then introduce a new algorithm which makes use of WordNet to generalise extraction patterns (Section 3) and describe an implementation (Section 4).</S>
    <S sid="20" ssid="16">Two evaluation regimes are described; one based on the identification of relevant documents and another which aims to identify sentences in a corpus which are relevant for a particular IE task (Section 5).</S>
    <S sid="21" ssid="17">Results on each of these evaluation regimes are then presented (Sections 6 and 7).</S>
  </SECTION>
  <SECTION title="2 Extraction Pattern Learning" number="2">
    <S sid="22" ssid="1">We begin by outlining the general process of learning extraction patterns, similar to one presented by (Yangarber, 2003). are currently in Sacc.</S>
    <S sid="23" ssid="2">This function assigns a real number to candidate patterns so V c E Scand, f(c, Sacc) H R. A set of high scoring patterns (based on absolute scores or ranks after the set of patterns has been ordered by scores) are chosen as being suitable for inclusion in the set of accepted patterns.</S>
    <S sid="24" ssid="3">These form the set Slearn.</S>
    <S sid="25" ssid="4">A key choice in the development of such an algorithm is step 4, the process of ranking the candidate patterns, which effectively determines which of the candidate patterns will be learned.</S>
    <S sid="26" ssid="5">Yangarber et al. (2000) chose an approach motivated by the assumption that documents containing a large number of patterns already identified as relevant to a particular IE scenario are likely to contain further relevant patterns.</S>
    <S sid="27" ssid="6">This approach, which can be viewed as being document-centric, operates by associating confidence scores with patterns and relevance scores with documents.</S>
    <S sid="28" ssid="7">Initially seed patterns are given a maximum confidence score of 1 and all others a 0 score.</S>
    <S sid="29" ssid="8">Each document is given a relevance score based on the patterns which occur within it.</S>
    <S sid="30" ssid="9">Candidate patterns are ranked according to the proportion of relevant and irrelevant documents in which they occur, those found in relevant documents far more than in irrelevant ones are ranked highly.</S>
    <S sid="31" ssid="10">After new patterns have been accepted all patterns&#8217; confidence scores are updated, based on the documents in which they occur, and documents&#8217; relevance according to the accepted patterns they contain.</S>
    <S sid="32" ssid="11">This approach has been shown to successfully acquire useful extraction patterns which, when added to an IE system, improved its performance (Yangarber et al., 2000).</S>
    <S sid="33" ssid="12">However, it relies on an assumption about the way in which relevant patterns are distributed in a document collection and may learn patterns which tend to occur in the same documents as relevant ones whether or not they are actually relevant.</S>
    <S sid="34" ssid="13">For example, we could imagine an IE scenario in which relevant documents contain a piece of information which is related to, but distinct from, the information we aim to extract.</S>
    <S sid="35" ssid="14">If patterns expressing this information were more likely to occur in relevant documents than irrelevant ones the documentcentric approach would also learn the irrelevant patterns.</S>
    <S sid="36" ssid="15">Rather than focusing on the documents matched by a pattern, an alternative approach is to rank patterns according to how similar their meanings are to those which are known to be relevant.</S>
    <S sid="37" ssid="16">This semantic-similarity approach avoids the problem which may be present in the document-centric approach since patterns which happen to co-occur in the same documents as relevant ones but have different meanings will not be ranked highly.</S>
    <S sid="38" ssid="17">We now go on to describe a new algorithm which implements this approach.</S>
  </SECTION>
  <SECTION title="3 Semantic IE Pattern Learning" number="3">
    <S sid="39" ssid="1">For these experiments extraction patterns consist of predicate-argument structures, as proposed by Yangarber (2003).</S>
    <S sid="40" ssid="2">Under this scheme patterns consist of triples representing the subject, verb and object (SVO) of a clause.</S>
    <S sid="41" ssid="3">The first element is the &#8220;semantic&#8221; subject (or agent), for example &#8220;John&#8221; is a clausal subject in each of these sentences &#8220;John hit Bill&#8221;, &#8220;Bill was hit by John&#8221;, &#8220;Mary saw John hit Bill&#8221;, and &#8220;John is a bully&#8221;.</S>
    <S sid="42" ssid="4">The second element is the verb in the clause and the third the object (patient) or predicate.</S>
    <S sid="43" ssid="5">&#8220;Bill&#8221; is a clausal object in the first three example sentences and &#8220;bully&#8221; in the final one.</S>
    <S sid="44" ssid="6">When a verb is being used intransitively, the pattern for that clause is restricted to only the first pair of elements.</S>
    <S sid="45" ssid="7">The filler of each pattern element can be either a lexical item or semantic category such as person name, country, currency values, numerical expressions etc.</S>
    <S sid="46" ssid="8">In this paper lexical items are represented in lower case and semantic categories are capitalised.</S>
    <S sid="47" ssid="9">For example, in the pattern COMPANY+fired+ceo, fired and ceo are lexical items and COMPANY a semantic category which could match any lexical item belonging to that type.</S>
    <S sid="48" ssid="10">The algorithm described here relies on identifying patterns with similar meanings.</S>
    <S sid="49" ssid="11">The approach we have developed to do this is inspired by the vector space model which is commonly used in Information Retrieval (Salton and McGill, 1983) and language processing in general (Pado and Lapata, 2003).</S>
    <S sid="50" ssid="12">Each pattern can be represented as a set of pattern element-filler pairs.</S>
    <S sid="51" ssid="13">For example, the pattern COMPANY+fired+ceo consists of three pairs: subject COMPANY, verb fired and object ceo.</S>
    <S sid="52" ssid="14">Each pair consists of either a lexical item or semantic category, and pattern element.</S>
    <S sid="53" ssid="15">Once an appropriate set of pairs has been established a pattern can be represented as a binary vector in which an element with value 1 denotes that the pattern contains a particular pair and 0 that it does not.</S>
    <S sid="54" ssid="16">The similarity of two pattern vectors can be compared using the measure shown in Equation 1.</S>
    <S sid="55" ssid="17">Here d andb are pattern vectors, bT &#65533; the transpose ofb and The semantic similarity matrix W contains information about the similarity of each pattern elementfiller pair stored as non-negative real numbers and is crucial for this measure.</S>
    <S sid="56" ssid="18">Assume that the set of patterns, P, consists of n element-filler pairs denoted by p1, p2, ...pn.</S>
    <S sid="57" ssid="19">Each row and column of W represents one of these pairs and they are consistently labelled.</S>
    <S sid="58" ssid="20">So, for any i such that 1 &#8804; i &#8804; n, row i and column i are both labelled with pair pi.</S>
    <S sid="59" ssid="21">If wij is the element of W in row i and column j then the value of wij represents the similarity between the pairs pi and pj.</S>
    <S sid="60" ssid="22">Note that we assume the similarity of two element-filler pairs is symmetric, so wij = wji and, consequently, W is a symmetric matrix.</S>
    <S sid="61" ssid="23">Pairs with different pattern elements (i.e. grammatical roles) are automatically given a similarity score of 0.</S>
    <S sid="62" ssid="24">Diagonal elements of W represent the self-similarity between pairs and have the greatest values.</S>
    <S sid="63" ssid="25">Figure 1 shows an example using three patterns, chairman+resign, ceo+quit and chairman+comment.</S>
    <S sid="64" ssid="26">This shows how these patterns are represented as vectors and gives a sample semantic similarity matrix.</S>
    <S sid="65" ssid="27">It can be seen that the first pair of patterns are the most similar using the proposed measure.</S>
    <S sid="66" ssid="28">The measure in Equation 1 is similar to the cosine metric, commonly used to determine the similarity of documents in the vector space model approach to Information Retrieval.</S>
    <S sid="67" ssid="29">However, the cosine metric will not perform well for our application since it does not take into account the similarity between elements of a vector and would assign equal similarity to each pair of patterns in the example shown in Figure 1.1 The semantic similarity matrix in Equation 1 provides a mechanism to capture semantic similarity between lexical items which allows us to identify chairman+resign and ceo+quit as the most similar pair of patterns.</S>
    <S sid="68" ssid="30">It is important to choose appropriate values for the elements of W. We chose to make use of the research that has concentrated on computing similarity between pairs of lexical items using the WordNet hierarchy (Resnik, 1995; Jiang and Conrath, 1997; Patwardhan et al., 2003).</S>
    <S sid="69" ssid="31">We experimented with several of the measures which have been reported in the literature and found that the one proposed by Jiang and Conrath (1997) to be the most effective.</S>
    <S sid="70" ssid="32">The similarity measure proposed by Jiang and Conrath (1997) relies on a technique developed by Resnik (1995) which assigns numerical values to each sense in the WordNet hierarchy based upon the amount of information it represents.</S>
    <S sid="71" ssid="33">These values are derived from corpus counts of the words in the synset, either directly or via the hyponym relation and are used to derive the Information Content (IC) of a synset c thus IC(c) = &#8722; log(Pr(c)).</S>
    <S sid="72" ssid="34">For two senses, s1 and s2, the lowest common subsumer, lcs(s1, s2), is defined as the sense with the highest information content (most specific) which subsumes both senses in the WordNet hierarchy.</S>
    <S sid="73" ssid="35">Jiang and Conrath used these elements to calculate the semantic distance between a pair or words, w1 and w2, according to this formula (where senses(w) is the set 'The cosine metric for a pair of vectors is given by the calculation &#65533;&#65533;&#65533; s&#65533;ss&#65533;s .</S>
    <S sid="74" ssid="36">Substituting the matrix multiplication in the numerator of Equation 1 for the dot product of vectors a and b would give the cosine metric.</S>
    <S sid="75" ssid="37">Note that taking the dot product of a pair of vectors is equivalent to multiplying by the identity matrix, i.e. a.b = aICT.</S>
    <S sid="76" ssid="38">Under our interpretation of the similarity matrix, W, this equates to each pattern element-filler pair being identical to itself but not similar to anything else.</S>
    <S sid="77" ssid="39">of all possible WordNet senses for word w): Patwardhan et al. (2003) convert this distance metric into a similarity measure by taking its multiplicative inverse.</S>
    <S sid="78" ssid="40">Their implementation was used in the experiments described later.</S>
    <S sid="79" ssid="41">As mentioned above, the second part of a pattern element-filler pair can be either a lexical item or a semantic category, such as company.</S>
    <S sid="80" ssid="42">The identifiers used to denote these categories, i.e.</S>
    <S sid="81" ssid="43">COMPANY, do not appear in WordNet and so it is not possible to directly compare their similarity with other lexical items.</S>
    <S sid="82" ssid="44">To avoid this problem these tokens are manually mapped onto the most appropriate node in the WordNet hierarchy which is then used for similarity calculations.</S>
    <S sid="83" ssid="45">This mapping process is not particularly time-consuming since the number of named entity types with which a corpus is annotated is usually quite small.</S>
    <S sid="84" ssid="46">For example, in the experiments described in this paper just seven semantic classes were sufficient to annotate the corpus.</S>
    <S sid="85" ssid="47">This pattern similarity measure can be used to create a weakly supervised approach to pattern acquisition following the general outline provided in Section 2.</S>
    <S sid="86" ssid="48">Each candidate pattern is compared against the set of currently accepted patterns using the measure described in Section 3.1.</S>
    <S sid="87" ssid="49">We experimented with several techniques for ranking candidate patterns based on these scores, including using the best and average score, and found that the best results were obtained when each candidate pattern was ranked according to its score when compared against the centroid vector of the set of currently accepted patterns.</S>
    <S sid="88" ssid="50">We also experimented with several schemes for deciding which of the scored patterns to accept (a full description would be too long for this paper) resulting in a scheme where the four highest scoring patterns whose score is within 0.95 of the best pattern are accepted.</S>
    <S sid="89" ssid="51">Our algorithm disregards any patterns whose corpus occurrences are below a set threshold, &#945;, since these may be due to noise.</S>
    <S sid="90" ssid="52">In addition, a second threshold, Q, is used to determine the maximum number of documents in which a pattern can occur since these very frequent patterns are often too general to be useful for IE.</S>
    <S sid="91" ssid="53">Patterns which occur in more than Q x C, where C is the number of documents in the collection, are not learned.</S>
    <S sid="92" ssid="54">For the experiments in this paper we set &#945; to 2 and Q to 0.3.</S>
  </SECTION>
  <SECTION title="4 Implementation" number="4">
    <S sid="93" ssid="1">A number of pre-processing stages have to be applied to documents in order for the set of patterns to be extracted before learning can take place.</S>
    <S sid="94" ssid="2">Firstly, items belonging to semantic categories are identified by running the text through the named entity identifier in the GATE system (Cunningham et al., 2002).</S>
    <S sid="95" ssid="3">The corpus is then parsed, using a version of MINIPAR (Lin, 1999) adapted to process text marked with named entities, to produce dependency trees from which SVO-patterns are extracted.</S>
    <S sid="96" ssid="4">Active and passive voice is taken into account in MINIPAR&#8217;s output so the sentences &#8220;COMPANY fired their C.E.O.&#8221; and &#8220;The C.E.O. was fired by COMPANY&#8221; would yield the same triple, COMPANY+fire+ceo.</S>
    <S sid="97" ssid="5">The indirect object of ditransitive verbs is not extracted; these verbs are treated like transitive verbs for the purposes of this analysis.</S>
    <S sid="98" ssid="6">An implementation of the algorithm described in Section 3 was completed in addition to an implementation of the document-centric algorithm described in Section 2.1.</S>
    <S sid="99" ssid="7">It is important to mention that this implementation is not identical to the one described by Yangarber et al. (2000).</S>
    <S sid="100" ssid="8">Their system makes some generalisations across pattern elements by grouping certain elements together.</S>
    <S sid="101" ssid="9">However, there is no difference between the expressiveness of the patterns learned by either approach and we do not believe this difference has any effect on the results of our experiments.</S>
  </SECTION>
  <SECTION title="5 Evaluation" number="5">
    <S sid="102" ssid="1">Various approaches have been suggested for the evaluation of automatic IE pattern acquisition.</S>
    <S sid="103" ssid="2">Riloff (1996) judged the precision of patterns learned by reviewing them manually.</S>
    <S sid="104" ssid="3">Yangarber et al. (2000) developed an indirect method which allowed automatic evaluation.</S>
    <S sid="105" ssid="4">In addition to learning a set of patterns, their system also notes the relevance of documents based on the current set of accepted patterns.</S>
    <S sid="106" ssid="5">Assuming the subset of documents relevant to a particular IE scenario is known, it is possible to use these relevance judgements to determine how accurately a given set of patterns can discriminate the relevant documents from the irrelevant.</S>
    <S sid="107" ssid="6">This evaluation is similar to the &#8220;text-filtering&#8221; sub-task used in the sixth Message Understanding Conference (MUC-6) (1995) in which systems were evaluated according to their ability to identify the documents relevant to the extraction task.</S>
    <S sid="108" ssid="7">The document filtering evaluation technique was used to allow comparison with previous studies.</S>
    <S sid="109" ssid="8">Identifying the document containing relevant information can be considered as a preliminary stage of an IE task.</S>
    <S sid="110" ssid="9">A further step is to identify the sentences within those documents which are relevant.</S>
    <S sid="111" ssid="10">This &#8220;sentence filtering&#8221; task is a more fine-grained evaluation and is likely to provide more information about how well a given set of patterns is likely to perform as part of an IE system.</S>
    <S sid="112" ssid="11">Soderland (1999) developed a version of the MUC-6 corpus in which events are marked at the sentence level.</S>
    <S sid="113" ssid="12">The set of patterns learned by the algorithm after each iteration can be compared against this corpus to determine how accurately they identify the relevant sentences for this extraction task.</S>
    <S sid="114" ssid="13">The evaluation corpus used for the experiments was compiled from the training and testing corpus used in MUC-6, where the task was to extract information about the movements of executives from newswire texts.</S>
    <S sid="115" ssid="14">A document is relevant if it has a filled template associated with it.</S>
    <S sid="116" ssid="15">590 documents from a version of the MUC-6 evaluation corpus described by Soderland (1999) were used.</S>
    <S sid="117" ssid="16">After the pre-processing stages described in Section 4, the MUC-6 corpus produced 15,407 pattern tokens from 11,294 different types.</S>
    <S sid="118" ssid="17">10,512 patterns appeared just once and these were effectively discarded since our learning algorithm only considers patterns which occur at least twice (see Section 3.3).</S>
    <S sid="119" ssid="18">The document-centric approach benefits from a large corpus containing a mixture of relevant and irrelevant documents.</S>
    <S sid="120" ssid="19">We provided this using a subset of the Reuters Corpus Volume I (Rose et al., 2002) which, like the MUC-6 corpus, consists of newswire texts.</S>
    <S sid="121" ssid="20">3000 documents relevant to the management succession task (identified using document metadata) and 3000 irrelevant documents were used to produce the supplementary corpus.</S>
    <S sid="122" ssid="21">This supplementary corpus yielded 126,942 pattern tokens and 79,473 types with 14,576 of these appearing more than once.</S>
    <S sid="123" ssid="22">Adding the supplementary corpus to the data set used by the document-centric approach led to an improvement of around 15% on the document filtering task and over 70% for sentence filtering.</S>
    <S sid="124" ssid="23">It was not used for the semantic similarity algorithm since there was no benefit.</S>
    <S sid="125" ssid="24">The set of seed patterns listed in Table 1 are indicative of the management succession extraction task and were used for these experiments.</S>
  </SECTION>
  <SECTION title="6 Results" number="6">
    <S sid="126" ssid="1">Results for both the document and sentence filtering experiments are reported in Table 2 which lists precision, recall and F-measure for each approach on both evaluations.</S>
    <S sid="127" ssid="2">Results from the document filtering experiment are shown on the left hand side of the table and continuous F-measure scores for the same experiment are also presented in graphical format in Figure 2.</S>
    <S sid="128" ssid="3">While the document-centric approach achieves the highest F-measure of either system (0.83 on the 33rd iteration compared against 0.81 after 48 iterations of the semantic similarity approach) it only outperforms the proposed approach for a few iterations.</S>
    <S sid="129" ssid="4">In addition the semantic similarity approach learns more quickly and does not exhibit as much of a drop in performance after it has reached its best value.</S>
    <S sid="130" ssid="5">Overall the semantic similarity approach was found to be significantly better than the document-centric approach (p &lt; 0.001, Wilcoxon Signed Ranks Test).</S>
    <S sid="131" ssid="6">Although it is an informative evaluation, the document filtering task is limited for evaluating IE pattern learning.</S>
    <S sid="132" ssid="7">This evaluation indicates whether the set of patterns being learned can identify documents containing descriptions of events but does not provide any information about whether it can find those events within the documents.</S>
    <S sid="133" ssid="8">In addition, the set of seed patterns used for these experiments have a high precision and low recall (Table 2).</S>
    <S sid="134" ssid="9">We have found that the distribution of patterns and documents in the corpus means that learning virtually any pattern will help improve the F-measure.</S>
    <S sid="135" ssid="10">Consequently, we believe the sentence filtering evaluation to be more useful for this problem.</S>
    <S sid="136" ssid="11">Results from the sentence filtering experiment are shown in tabular format in the right hand side of Table 22 and graphically in Figure 3.</S>
    <S sid="137" ssid="12">The semantic similarity algorithm can be seen to outperform the document-centric approach.</S>
    <S sid="138" ssid="13">This difference is also significant (p &lt; 0.001, Wilcoxon Signed Ranks Text).</S>
    <S sid="139" ssid="14">The clear difference between these results shows that the semantic similarity approach can indeed identify relevant sentences while the documentcentric method identifies patterns which match relevant documents, although not necessarily relevant sentences.</S>
    <S sid="140" ssid="15">The precision scores for the sentence filtering task in Table 2 show that the semantic similarity algorithm consistently learns more accurate patterns than the existing approach.</S>
    <S sid="141" ssid="16">At the same time it learns patterns with high recall much faster than the document-centric approach, by the 120th iteration the pattern set covers almost 95% of relevant sentences while the document-centric approach covers only 75%.</S>
  </SECTION>
  <SECTION title="7 Discussion" number="7">
    <S sid="142" ssid="1">The approach to IE pattern acquisition presented here is related to other techniques but uses different assumptions regarding which patterns are likely to be relevant to a particular extraction task.</S>
    <S sid="143" ssid="2">Evaluation has showed that the semantic generalisation approach presented here performs well when compared to a previously reported document-centric method.</S>
    <S sid="144" ssid="3">Differences between the two approaches are most obvious when the results of the sentence filtering task are considered and it seems that this is a more informative evaluation for this problem.</S>
    <S sid="145" ssid="4">The semantic similarity approach has the additional advantage of not requiring a large corpus containing a mixture of documents relevant and irrelevant to the extraction task.</S>
    <S sid="146" ssid="5">This corpus is unannotated, and so may not be difficult to obtain, but is nevertheless an additional requirement.</S>
    <S sid="147" ssid="6">The best score recorded by the proposed algorithm on the sentence filtering task is an F-measure of 0.58 (22nd iteration).</S>
    <S sid="148" ssid="7">While this result is lower than those reported for IE systems based on knowledge engineering approaches these results should be placed in the context of a weakly supervised learning algorithm which could be used to complement manual approaches.</S>
    <S sid="149" ssid="8">These results could be improved by manual filtering the patterns identified by the algorithm.</S>
    <S sid="150" ssid="9">The learning algorithm presented in Section 3 includes a mechanism for comparing two extraction patterns using information about lexical similarity derived from WordNet.</S>
    <S sid="151" ssid="10">This approach is not restricted to this application and could be applied to other language processing tasks such as question answering, paraphrase identification and generation or as a variant of the vector space model commonly used in Information Retrieval.</S>
    <S sid="152" ssid="11">In addition, Sudo et al. (2003) proposed representations for IE patterns which extends the SVO representation used here and, while they did not appear to significantly improve IE, it is expected that it will be straightforward to extend the vector space model to those pattern representations.</S>
    <S sid="153" ssid="12">One of the reasons for the success of the approach described here is the appropriateness of WordNet which is constructed on paradigmatic principles, listing the words which may be substituted for one another, and is consequently an excellent resource for this application.</S>
    <S sid="154" ssid="13">WordNet is also a generic resource not associated with a particular domain which means the learning algorithm can make use of that knowledge to acquire patterns for a diverse range of IE tasks.</S>
    <S sid="155" ssid="14">This work represents a step towards truly domain-independent IE systems.</S>
    <S sid="156" ssid="15">Employing a weakly supervised learning algorithm removes much of the requirement for a human annotator to provide example patterns.</S>
    <S sid="157" ssid="16">Such approaches are often hampered by a lack of information but the additional knowledge in WordNet helps to compensate.</S>
  </SECTION>
  <SECTION title="Acknowledgements" number="8">
    <S sid="158" ssid="1">This work was carried out as part of the RESuLT project funded by the EPSRC (GR/T06391).</S>
    <S sid="159" ssid="2">Roman Yangarber provided advice on the reimplementation of the document-centric algorithm.</S>
    <S sid="160" ssid="3">We are also grateful for the detailed comments provided by the anonymous reviewers of this paper.</S>
  </SECTION>
</PAPER>
