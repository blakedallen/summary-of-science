<PAPER>
  <S sid="0">Multi-Prototype Vector-Space Models of Word Meaning</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Current vector-space models of lexical semantics create a single &#8220;prototype&#8221; vector to represent the meaning of a word.</S>
    <S sid="2" ssid="2">However, due to lexical ambiguity, encoding word meaning with a single vector is problematic.</S>
    <S sid="3" ssid="3">This paper presents a method that uses clustering to produce multiple &#8220;sense-specific&#8221; vectors for each word.</S>
    <S sid="4" ssid="4">This approach provides a context-dependent vector representation of word meaning that naturally accommodates homonymy and polysemy.</S>
    <S sid="5" ssid="5">Experimental comparisons to human judgements of semantic similarity for both isolated words as well as words in sentential contexts demonstrate the superiority of this approach over both prototype and exemplar based vector-space models.</S>
  </ABSTRACT>
  <SECTION title="1 Introduction" number="1">
    <S sid="6" ssid="1">Automatically judging the degree of semantic similarity between words is an important task useful in text classification (Baker and McCallum, 1998), information retrieval (Sanderson, 1994), textual entailment, and other language processing tasks.</S>
    <S sid="7" ssid="2">The standard empirical approach to this task exploits the distributional hypothesis, i.e. that similar words appear in similar contexts (Curran and Moens, 2002; Lin and Pantel, 2002; Pereira et al., 1993).</S>
    <S sid="8" ssid="3">Traditionally, word types are represented by a single vector of contextual features derived from cooccurrence information, and semantic similarity is computed using some measure of vector distance (Lee, 1999; Lowe, 2001).</S>
    <S sid="9" ssid="4">However, due to homonymy and polysemy, capturing the semantics of a word with a single vector is problematic.</S>
    <S sid="10" ssid="5">For example, the word club is similar to both bat and association, which are not at all similar to each other.</S>
    <S sid="11" ssid="6">Word meaning violates the triangle inequality when viewed at the level of word types, posing a problem for vector-space models (Tversky and Gati, 1982).</S>
    <S sid="12" ssid="7">A single &#8220;prototype&#8221; vector is simply incapable of capturing phenomena such as homonymy and polysemy.</S>
    <S sid="13" ssid="8">Also, most vector-space models are context independent, while the meaning of a word clearly depends on context.</S>
    <S sid="14" ssid="9">The word club in &#8220;The caveman picked up the club&#8221; is similar to bat in &#8220;John hit the robber with a bat,&#8221; but not in &#8220;The bat flew out of the cave.&#8221; We present a new resource-lean vector-space model that represents a word&#8217;s meaning by a set of distinct &#8220;sense specific&#8221; vectors.</S>
    <S sid="15" ssid="10">The similarity of two isolated words A and B is defined as the minimum distance between one of A&#8217;s vectors and one of B&#8217;s vectors.</S>
    <S sid="16" ssid="11">In addition, a context-dependent meaning for a word is determined by choosing one of the vectors in its set based on minimizing the distance to the vector representing the current context.</S>
    <S sid="17" ssid="12">Consequently, the model supports judging the similarity of both words in isolation and words in context.</S>
    <S sid="18" ssid="13">The set of vectors for a word is determined by unsupervised word sense discovery (WSD) (Sch&#168;utze, 1998), which clusters the contexts in which a word appears.</S>
    <S sid="19" ssid="14">In previous work, vector-space lexical similarity and word sense discovery have been treated as two separate tasks.</S>
    <S sid="20" ssid="15">This paper shows how they can be combined to create an improved vector-space model of lexical semantics.</S>
    <S sid="21" ssid="16">First, a word&#8217;s contexts are clustered to produce groups of similar context vectors.</S>
    <S sid="22" ssid="17">An average &#8220;prototype&#8221; vector is then computed separately for each cluster, producing a set of vectors for each word.</S>
    <S sid="23" ssid="18">Finally, as described above, these cluster vectors can be used to determine the semantic similarity of both isolated words and words in context.</S>
    <S sid="24" ssid="19">The approach is completely modular, and can integrate any clustering method with any traditional vector-space model.</S>
    <S sid="25" ssid="20">We present experimental comparisons to human judgements of semantic similarity for both isolated words and words in sentential context.</S>
    <S sid="26" ssid="21">The results demonstrate the superiority of a clustered approach over both traditional prototype and exemplar-based vector-space models.</S>
    <S sid="27" ssid="22">For example, given the isolated target word singer our method produces the most similar word vocalist, while using a single prototype gives musician.</S>
    <S sid="28" ssid="23">Given the word cell in the context: &#8220;The book was published while Piasecki was still in prison, and a copy was delivered to his cell.&#8221; the standard approach produces protein while our method yields incarcerated.</S>
    <S sid="29" ssid="24">The remainder of the paper is organized as follows: Section 2 gives relevant background on prototype and exemplar methods for lexical semantics, Section 3 presents our multi-prototype method, Section 4 presents our experimental evaluations, Section 5 discusses future work, and Section 6 concludes.</S>
  </SECTION>
  <SECTION title="2 Background" number="2">
    <S sid="30" ssid="1">Psychological concept models can be roughly divided into two classes: crete set of observed instances, similar to nonparametric approaches to density estimation in statistics (Ashby and Alfonso-Reese, 1995).</S>
    <S sid="31" ssid="2">Tversky and Gati (1982) famously showed that conceptual similarity violates the triangle inequality, lending evidence for exemplar-based models in psychology.</S>
    <S sid="32" ssid="3">Exemplar models have been previously used for lexical semantics problems such as selectional preference (Erk, 2007) and thematic fit (Vandekerckhove et al., 2009).</S>
    <S sid="33" ssid="4">Individual exemplars can be quite noisy and the model can incur high computational overhead at prediction time since naively computing the similarity between two words using each occurrence in a textual corpus as an exemplar requires O(n2) comparisons.</S>
    <S sid="34" ssid="5">Instead, the standard ... chose Zbigniew Brzezinski for the position of ... ... thus the symbol s position on his clothing was ... ... writes call options against the stock position ... ... offered a position with ... ... a position he would hold until his retirement in ... to near-synonym discovery for a single target word independent of context.</S>
    <S sid="35" ssid="6">Occurrences are clustered and cluster centroids are used as prototype vectors.</S>
    <S sid="36" ssid="7">Note the &#8220;hurricane&#8221; sense of position (cluster 3) is not typically considered appropriate in WSD. approach is to compute a single prototype vector for each word from its occurrences.</S>
    <S sid="37" ssid="8">This paper presents a multi-prototype vector space model for lexical semantics with a single parameter K (the number of clusters) that generalizes both prototype (K = 1) and exemplar (K = N, the total number of instances) methods.</S>
    <S sid="38" ssid="9">Such models have been widely studied in the Psychology literature (Griffiths et al., 2007; Love et al., 2004; Rosseel, 2002).</S>
    <S sid="39" ssid="10">By employing multiple prototypes per word, vector space models can account for homonymy, polysemy and thematic variation in word usage.</S>
    <S sid="40" ssid="11">Furthermore, such approaches require only O(K2) comparisons for computing similarity, yielding potential computational savings over the exemplar approach when K &#171; N, while reaping many of the same benefits.</S>
    <S sid="41" ssid="12">Previous work on lexical semantic relatedness has focused on two approaches: (1) mining monolingual or bilingual dictionaries or other pre-existing resources to construct networks of related words (Agirre and Edmond, 2006; Ramage et al., 2009), and (2) using the distributional hypothesis to automatically infer a vector-space prototype of word meaning from large corpora (Agirre et al., 2009; Curran, 2004; Harris, 1954).</S>
    <S sid="42" ssid="13">The former approach tends to have greater precision, but depends on handcrafted dictionaries and cannot, in general, model sense frequency (Budanitsky and Hirst, 2006).</S>
    <S sid="43" ssid="14">The latter approach is fundamentally more scalable as it does not rely on specific resources and can model corpus-specific sense distributions.</S>
    <S sid="44" ssid="15">However, the distributional approach can suffer from poor precision, as thematically similar words (e.g., singer and actor) and antonyms often occur in similar contexts (Lin et al., 2003).</S>
    <S sid="45" ssid="16">Unsupervised word-sense discovery has been studied by number of researchers (Agirre and Edmond, 2006; Sch&#168;utze, 1998).</S>
    <S sid="46" ssid="17">Most work has also focused on corpus-based distributional approaches, varying the vector-space representation, e.g. by incorporating syntactic and co-occurrence information from the words surrounding the target term (Pereira et al., 1993; Pantel and Lin, 2002).</S>
  </SECTION>
  <SECTION title="3 Multi-Prototype Vector-Space Models" number="3">
    <S sid="47" ssid="1">Our approach is similar to standard vector-space models of word meaning, with the addition of a perword-type clustering step: Occurrences for a specific word type are collected from the corpus and clustered using any appropriate method (&#167;3.1).</S>
    <S sid="48" ssid="2">Similarity between two word types is then computed as a function of their cluster centroids (&#167;3.2), instead of the centroid of all the word&#8217;s occurrences.</S>
    <S sid="49" ssid="3">Figure 1 gives an overview of this process.</S>
    <S sid="50" ssid="4">Multiple prototypes for each word w are generated by clustering feature vectors v(c) derived from each occurrence c E C(w) in a large textual corpus and collecting the resulting cluster centroids 7rk(w), k E [1, K].</S>
    <S sid="51" ssid="5">This approach is commonly employed in unsupervised word sense discovery; however, we do not assume that clusters correspond to traditional word senses.</S>
    <S sid="52" ssid="6">Rather, we only rely on clusters to capture meaningful variation in word usage.</S>
    <S sid="53" ssid="7">Our experiments employ a mixture of von MisesFisher distributions (movMF) clustering method with first-order unigram contexts (Banerjee et al., 2005).</S>
    <S sid="54" ssid="8">Feature vectors v(c) are composed of individual features I(c, f), taken as all unigrams occurring f E F in a 10-word window around w. Like spherical k-means (Dhillon and Modha, 2001), movMF models semantic relatedness using cosine similarity, a standard measure of textual similarity.</S>
    <S sid="55" ssid="9">However, movMF introduces an additional per-cluster concentration parameter controlling its semantic breadth, allowing it to more accurately model non-uniformities in the distribution of cluster sizes.</S>
    <S sid="56" ssid="10">Based on preliminary experiments comparing various clustering methods, we found movMF gave the best results.</S>
    <S sid="57" ssid="11">The similarity between two words in a multiprototype model can be computed straightforwardly, requiring only simple modifications to standard distributional similarity methods such as those presented by Curran (2004).</S>
    <S sid="58" ssid="12">Given words w and w0, we define two noncontextual clustered similarity metrics to measure similarity of isolated words: where d(&#183;, &#183;) is a standard distributional similarity measure.</S>
    <S sid="59" ssid="13">In AvgSim, word similarity is computed as the average similarity of all pairs of prototype vectors; In MaxSim the similarity is the maximum over all pairwise prototype similarities.</S>
    <S sid="60" ssid="14">All results reported in this paper use cosine similarity, 1 We compare across two different feature functions tf-idf weighting and X2 weighting, chosen due to their ubiquity in the literature (Agirre et al., 2009; Curran, 2004).</S>
    <S sid="61" ssid="15">In AvgSim, all prototype pairs contribute equally to the similarity computation, thus two words are judged as similar if many of their senses are similar.</S>
    <S sid="62" ssid="16">MaxSim, on the other hand, only requires a single pair of prototypes to be close for the words to be judged similar.</S>
    <S sid="63" ssid="17">Thus, MaxSim models the similarity of words that share only a single sense (e.g. bat and club) at the cost of lower robustness to noisy clusters that might be introduced when K is large.</S>
    <S sid="64" ssid="18">When contextual information is available, AvgSim and MaxSim can be modified to produce more precise similarity computations: where d&#65533;,w,k = d(v(c), 7rk(w)) is the likelihood of context c belonging to cluster 7rk(w), and &#65533;r(w) def= 7rargmax1&lt;k&lt;K dc,w,k(w), the maximum likelihood cluster for w in context c. Thus, AvgSimC corresponds to soft cluster assignment, weighting each similarity term in AvgSim by the likelihood of the word contexts appearing in their respective clusters.</S>
    <S sid="65" ssid="19">MaxSimC corresponds to hard assignment, using only the most probable cluster assignment.</S>
    <S sid="66" ssid="20">Note that AvgSim and MaxSim can be thought of as special cases of AvgSimC and MaxSimC with uniform weight to each cluster; hence AvgSimC and MaxSimC can be used to compare words in context to isolated words as well.</S>
  </SECTION>
  <SECTION title="4 Experimental Evaluation" number="4">
    <S sid="67" ssid="1">We employed two corpora to train our models: 29th, 2009.</S>
    <S sid="68" ssid="2">Wikitext markup is removed, as are articles with fewer than 100 words, leaving 2.8M articles with a total of 2.0513 words.</S>
    <S sid="69" ssid="3">2.</S>
    <S sid="70" ssid="4">The third edition English Gigaword corpus, with articles containing fewer than 100 words removed, leaving 6.6M articles and 3.913 words (Graff, 2003).</S>
    <S sid="71" ssid="5">Wikipedia covers a wider range of sense distributions, whereas Gigaword contains only newswire text and tends to employ fewer senses of most ambiguous words.</S>
    <S sid="72" ssid="6">Our method outperforms baseline methods even on Gigaword, indicating its advantages even when the corpus covers few senses.</S>
    <S sid="73" ssid="7">To evaluate the quality of various models, we first compared their lexical similarity measurements to human similarity judgements from the WordSim353 data set (Finkelstein et al., 2001).</S>
    <S sid="74" ssid="8">This test corpus contains multiple human judgements on 353 word pairs, covering both monosemous and polysemous words, each rated on a 1&#8211;10 integer scale.</S>
    <S sid="75" ssid="9">Spearman&#8217;s rank correlation (p) with average human judgements (Agirre et al., 2009) was used to measure the quality of various models.</S>
    <S sid="76" ssid="10">Figure 2 plots Spearman&#8217;s p on WordSim-353 against the number of clusters (K) for Wikipedia and Gigaword corpora, using pruned tf-idf and k2 features.2 In general pruned tf-idf features yield higher correlation than k2 features.</S>
    <S sid="77" ssid="11">Using AvgSim, the multi-prototype approach (K &gt; 1) yields higher correlation than the single-prototype approach (K = 1) across all corpora and feature types, achieving state-of-the-art results with pruned tf-idf features.</S>
    <S sid="78" ssid="12">This result is statistically significant in all cases for tf-idf and for K E [2,10] on Wikipedia and K &gt; 4 on Gigaword for k2 features.3 MaxSim yields similar performance when K &lt; 10 but performance degrades as K increases.</S>
    <S sid="79" ssid="13">It is possible to circumvent the model-selection problem (choosing the best value of K) by simply combining the prototypes from clusterings of different sizes.</S>
    <S sid="80" ssid="14">This approach represents words using both semantically broad and semantically tight prototypes, similar to hierarchical clustering.</S>
    <S sid="81" ssid="15">Table 1 and Figure 2 (squares) show the result of such a combined approach, where the prototypes for clusterings of size 2-5, 10, 20, 50, and 100 are unioned to form a single large prototype set.</S>
    <S sid="82" ssid="16">In general, this approach works about as well as picking the optimal value of K, even outperforming the single best cluster size for Wikipedia.</S>
    <S sid="83" ssid="17">Finally, we also compared our method to a pure exemplar approach, averaging similarity across all occurrence pairs.4 Table 1 summarizes the results.</S>
    <S sid="84" ssid="18">The exemplar approach yields significantly higher correlation than the single prototype approach in all cases except Gigaword with tf-idf features (p &lt; 0.05).</S>
    <S sid="85" ssid="19">Furthermore, it performs significantly worse 2(Feature pruning) We find that results using tf-idf features are extremely sensitive to feature pruning while x2 features are more robust.</S>
    <S sid="86" ssid="20">In all experiments we prune tf-idf features by their overall weight, taking the top 5000.</S>
    <S sid="87" ssid="21">This setting was found to optimize the performance of the single-prototype approach. ber of clusters (log scale) for both the Wikipedia (left) and Gigaword (right) corpora.</S>
    <S sid="88" ssid="22">Horizontal bars show the performance of single-prototype.</S>
    <S sid="89" ssid="23">Squares indicate performance when combining across clusterings.</S>
    <S sid="90" ssid="24">Error bars depict 95% confidence intervals using the Spearman test.</S>
    <S sid="91" ssid="25">Squares indicate performance when combining across clusterings. than combined multi-prototype for tf-idf features, and does not differ significantly for x2 features.</S>
    <S sid="92" ssid="26">Overall this result indicates that multi-prototype performs at least as well as exemplar in the worst case, and significantly outperforms when using the best feature representation / corpus pair.</S>
    <S sid="93" ssid="27">We next evaluated the multi-prototype approach on its ability to determine the most closely related words for a given target word (using the Wikipedia corpus with tf-idf features).</S>
    <S sid="94" ssid="28">The top k most similar words were computed for each prototype of each target word.</S>
    <S sid="95" ssid="29">Using a forced-choice setup, human subjects were asked to evaluate the quality of these near synonyms relative to those produced by a sincarrier, crane, cell, company, issue, interest, match, media, nature, party, practice, plant, racket, recess, reservation, rock, space, value cause, chance, journal, market, network, policy, power, production, series, trading, train gle prototype.</S>
    <S sid="96" ssid="30">Participants on Amazon&#8217;s Mechanical Turk5 (Snow et al., 2008) were asked to choose between two possible alternatives (one from a prototype model and one from a multi-prototype model) as being most similar to a given target word.</S>
    <S sid="97" ssid="31">The target words were presented either in isolation or in a sentential context randomly selected from the corpus.</S>
    <S sid="98" ssid="32">Table 2 lists the ambiguous words used for this task.</S>
    <S sid="99" ssid="33">They are grouped into homonyms (words with very distinct senses) and polysemes (words with related senses).</S>
    <S sid="100" ssid="34">All words were chosen such that their usages occur within the same part of speech.</S>
    <S sid="101" ssid="35">In the non-contextual task, 79 unique raters completed 7,620 comparisons of which 72 were discarded due to poor performance on a known test set.6 In the contextual task, 127 raters completed 9,930 comparisons of which 87 were discarded.</S>
    <S sid="102" ssid="36">For the non-contextual case, Figure 3 left plots the fraction of raters preferring the multi-prototype prediction (using AvgSim) over that of a single prototype as the number of clusters is varied.</S>
    <S sid="103" ssid="37">When asked to choose between the single best word for each method (top word), the multi-prototype prediction is chosen significantly more frequently (i.e. the result is above 0.5) when the number of clusters is small, but the two methods perform similarly for larger numbers of clusters (Wald test, &#945; = 0.05.)</S>
    <S sid="104" ssid="38">Clustering more accurately identifies homonyms&#8217; clearly distinct senses and produces prototypes that better capture the different uses of these words.</S>
    <S sid="105" ssid="39">As a result, compared to using a single prototype, our approach produces better nearsynonyms for homonyms compared to polysemes.</S>
    <S sid="106" ssid="40">However, given the right number of clusters, it also produces better results for polysemous words.</S>
    <S sid="107" ssid="41">The near-synonym prediction task highlights one of the weaknesses of the multi-prototype approach: as the number of clusters increases, the number of occurrences assigned to each cluster decreases, increasing noise and resulting in some poor prototypes that mainly cover outliers.</S>
    <S sid="108" ssid="42">The word similarity task is somewhat robust to this phenomenon, but synonym prediction is more affected since only the top predicted choice is used.</S>
    <S sid="109" ssid="43">When raters are forced to chose between the top three predictions for each method (presented as top set in Figure 3 left), the effect of this noise is reduced and the multi-prototype approach remains dominant even for a large number of clusters.</S>
    <S sid="110" ssid="44">This indicates that although more clusters can capture finer-grained sense distinctions, they also can introduce noise.</S>
    <S sid="111" ssid="45">When presented with words in context (Figure 3 right),7 raters found no significant difference in the two methods for words used in their majority sense.8 However, when a minority sense is presented (e.g. the &#8220;prison&#8221; sense of cell), raters prefer the choice predicted by the multi-prototype approach.</S>
    <S sid="112" ssid="46">This result is to be expected since the single prototype mainly reflects the majority sense, preventing it from predicting appropriate synonyms for a minority sense.</S>
    <S sid="113" ssid="47">Also, once again, the performance of the multi-prototype approach is better for homonyms than polysemes.</S>
    <S sid="114" ssid="48">Variance in pairwise prototype distances can help explain the variance in human similarity judgements for a given word pair.</S>
    <S sid="115" ssid="49">We evaluate this hypothesis empirically on WordSim-353 by computing the Spearman correlation between the variance of the per-cluster similarity computations, V[D], D def = {d(7rk(w), 7rj(w')) : 1 &lt; k, j &lt; K}, and the variance of the human annotations for that pair.</S>
    <S sid="116" ssid="50">Correlations for each dataset are shown in Figure 4 left.</S>
    <S sid="117" ssid="51">In general, we find a statistically significant negative correlation between these values using x2 features, indicating that as the entropy of the pairwise cluster similarities increases (i.e., prototypes become more similar, and similarities become uniform), rater disagreement increases.</S>
    <S sid="118" ssid="52">This result is intuitive: if the occurrences of a particular word cannot be easily separated into coherent clusters (perhaps indicating high polysemy instead of homonymy), then human judgement will be naturally more difficult.</S>
    <S sid="119" ssid="53">Rater variance depends more directly on the actual word similarity: word pairs at the extreme ranges of similarity have significantly lower variance as raters are more certain.</S>
    <S sid="120" ssid="54">By removing word pairs with similarity judgements in the middle two quartile ranges (4.4 to 7.5) we find significantly higher variance correlation (Figure 4 right).</S>
    <S sid="121" ssid="55">This result indicates that multi-prototype similarity variance accounts for a secondary effect separate from the primary effect that variance is naturally lower for ratings in extreme ranges.</S>
    <S sid="122" ssid="56">Although the entropy of the prototypes correlates with the variance of the human ratings, we find that the individual senses captured by each prototype do not correspond to human intuition for a given word, e.g. the &#8220;hurricane&#8221; sense of position in Figure 1.</S>
    <S sid="123" ssid="57">This notion is evaluated empirically by computing the correlation between the predicted similarity using the contextual multi-prototype method and human similarity judgements for different usages of the same word.</S>
    <S sid="124" ssid="58">The Usage Similarity (USim) data set collected in Erk et al. (2009) provides such similarity scores from human raters.</S>
    <S sid="125" ssid="59">However, we find no evidence for correlation between USim scores and their corresponding prototype similarity scores (p = 0.04), indicating that prototype vectors may not correspond well to human senses.</S>
  </SECTION>
  <SECTION title="5 Discussion and Future Work" number="5">
    <S sid="126" ssid="1">Table 3 compares the inferred synonyms for several target words, generally demonstrating the ability of the multi-prototype model to improve the precision of inferred near-synonyms (e.g. in the case of singer or need) as well as its ability to include synonyms from less frequent senses (e.g., the experiment sense of research or the verify sense of prove).</S>
    <S sid="127" ssid="2">However, there are a number of ways it could be improved: Feature representations: Multiple prototypes improve Spearman correlation on WordSim-353 compared to previous methods using the same underlying representation (Agirre et al., 2009).</S>
    <S sid="128" ssid="3">However we have not yet evaluated its performance when using more powerful feature representations such those based on Latent or Explicit Semantic Analysis (Deerwester et al., 1990; Gabrilovich and Markovitch, 2007).</S>
    <S sid="129" ssid="4">Due to its modularity, the multiprototype approach can easily incorporate such advances in order to further improve its effectiveness. synonyms using the single- and multi-prototype approaches (with results merged).</S>
    <S sid="130" ssid="5">In general such clustering improves the precision and coverage of the inferred near-synonyms.</S>
    <S sid="131" ssid="6">Nonparametric clustering: The success of the combined approach indicates that the optimal number of clusters may vary per word.</S>
    <S sid="132" ssid="7">A more principled approach to selecting the number of prototypes per word is to employ a clustering model with infinite capacity, e.g. the Dirichlet Process Mixture Model (Rasmussen, 2000).</S>
    <S sid="133" ssid="8">Such a model would allow naturally more polysemous words to adopt more flexible representations.</S>
    <S sid="134" ssid="9">Cluster similarity metrics: Besides AvgSim and MaxSim, there are many similarity metrics over mixture models, e.g.</S>
    <S sid="135" ssid="10">KL-divergence, which may correlate better with human similarity judgements.</S>
    <S sid="136" ssid="11">Comparing to traditional senses: Compared to WordNet, our best-performing clusterings are significantly more fine-grained.</S>
    <S sid="137" ssid="12">Furthermore, they often do not correspond to agreed upon semantic distinctions (e.g., the &#8220;hurricane&#8221; sense of position in Fig.</S>
    <S sid="138" ssid="13">1).</S>
    <S sid="139" ssid="14">We posit that the finer-grained senses actually capture useful aspects of word meaning, leading to better correlation with WordSim-353.</S>
    <S sid="140" ssid="15">However, it would be good to compare prototypes learned from supervised sense inventories to prototypes produced by automatic clustering.</S>
    <S sid="141" ssid="16">Joint model: The current method independently clusters the contexts of each word, so the senses discovered for w cannot influence the senses discovered for w' 7&#65533; w. Sharing statistical strength across similar words could yield better results for rarer words.</S>
  </SECTION>
  <SECTION title="6 Conclusions" number="6">
    <S sid="142" ssid="1">We presented a resource-light model for vectorspace word meaning that represents words as collections of prototype vectors, naturally accounting for lexical ambiguity.</S>
    <S sid="143" ssid="2">The multi-prototype approach uses word sense discovery to partition a word&#8217;s contexts and construct &#8220;sense specific&#8221; prototypes for each cluster.</S>
    <S sid="144" ssid="3">Doing so significantly increases the accuracy of lexical-similarity computation as demonstrated by improved correlation with human similarity judgements and generation of better near synonyms according to human evaluators.</S>
    <S sid="145" ssid="4">Furthermore, we show that, although performance is sensitive to the number of prototypes, combining prototypes across a large range of clusterings performs nearly as well as the ex-post best clustering.</S>
    <S sid="146" ssid="5">Finally, variance in the prototype similarities is found to correlate with inter-annotator disagreement, suggesting psychological plausibility.</S>
  </SECTION>
  <SECTION title="Acknowledgements" number="7">
    <S sid="147" ssid="1">We would like to thank Katrin Erk for helpful discussions and making the USim data set available.</S>
    <S sid="148" ssid="2">This work was supported by an NSF Graduate Research Fellowship and a Google Research Award.</S>
    <S sid="149" ssid="3">Experiments were run on the Mastodon Cluster, provided by NSF Grant EIA-0303609.</S>
  </SECTION>
</PAPER>
