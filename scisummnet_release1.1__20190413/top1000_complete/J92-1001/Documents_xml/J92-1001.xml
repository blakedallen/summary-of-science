<PAPER>
  <S sid="0">Using Multiple Knowledge Sources For Word Sense Discrimination</S>
  <ABSTRACT>
    <S sid="1" ssid="1">This paper addresses the problem of how to identify the intended meaning of individual words in unrestricted texts, without necessarily having access to complete representations of sentences.</S>
    <S sid="2" ssid="2">To discriminate senses, an understander can consider a diversity of information, including syntactic tags, word frequencies, collocations, semantic context, role-related expectations, and syntactic restrictions.</S>
    <S sid="3" ssid="3">However, current approaches make use of only small subsets of this information.</S>
    <S sid="4" ssid="4">Here we will describe how to use the whole range of information.</S>
    <S sid="5" ssid="5">Our discussion will include how the preference cues relate to general lexical and conceptual knowledge and to more specialized knowledge of collocations and contexts.</S>
    <S sid="6" ssid="6">We will describe a method of combining cues on the basis their individual than a fixed ranking among cue-types.</S>
    <S sid="7" ssid="7">We will also discuss an application of the approach in a system that computes sense tags for arbitrary texts, even when it is unable to determine a single syntactic or semantic representation for some sentences.</S>
  </ABSTRACT>
  <SECTION title="Artificial Intelligence Program GE Research and Development Center" number="1">
    <S sid="8" ssid="1">This paper addresses the problem of how to identify the intended meaning of individual words in unrestricted texts, without necessarily having access to complete representations of sentences.</S>
    <S sid="9" ssid="2">To discriminate senses, an understander can consider a diversity of information, including syntactic tags, word frequencies, collocations, semantic context, role-related expectations, and syntactic restrictions.</S>
    <S sid="10" ssid="3">However, current approaches make use of only small subsets of this information.</S>
    <S sid="11" ssid="4">Here we will describe how to use the whole range of information.</S>
    <S sid="12" ssid="5">Our discussion will include how the preference cues relate to general lexical and conceptual knowledge and to more specialized knowledge of collocations and contexts.</S>
    <S sid="13" ssid="6">We will describe a method of combining cues on the basis of their individual specificity, rather than a fixed ranking among cue-types.</S>
    <S sid="14" ssid="7">We will also discuss an application of the approach in a system that computes sense tags for arbitrary texts, even when it is unable to determine a single syntactic or semantic representation for some sentences.</S>
  </SECTION>
  <SECTION title="1." number="2">
    <S sid="15" ssid="1">Many problems in applied natural language processing &#8212; including information retrieval, database generation from text, and machine translation &#8212; hinge on relating words to other words that are similar in meaning.</S>
    <S sid="16" ssid="2">Current approaches to these applications are often word-based &#8212; that is, they treat words in the input as strings, mapping them directly to other words.</S>
    <S sid="17" ssid="3">However, the fact that many words have multiple senses and different words often have similar meanings limits the accuracy of such systems.</S>
    <S sid="18" ssid="4">An alternative is to use a knowledge representation, or interlingua, to reflect text content, thereby separating text representation from the individual words.</S>
    <S sid="19" ssid="5">These approaches can, in principle, be more accurate than word-based approaches, but have not been sufficiently robust to perform any practical text processing task.</S>
    <S sid="20" ssid="6">Their lack of robustness is generally due to the difficulty in building knowledge bases that are sufficient for broad-scale processing.</S>
    <S sid="21" ssid="7">But a synthesis is possible.</S>
    <S sid="22" ssid="8">Applications can achieve greater accuracy by working at the level of word senses instead of word strings.</S>
    <S sid="23" ssid="9">That is, they would operate on text in which each word has been tagged with its sense.</S>
    <S sid="24" ssid="10">Robustness need not be sacrificed, however, because this tagging does not require a full-blown semantic analysis.</S>
    <S sid="25" ssid="11">Demonstrating this claim is one of the goals of this paper.</S>
    <S sid="26" ssid="12">Here is an example of the level of analysis a sense tagger would provide to an application program.</S>
    <S sid="27" ssid="13">Suppose that the input is (1): The agreement reached by the state and the EPA provides for the safe storage of the waste.</S>
    <S sid="28" ssid="14">The analysis would provide an application with the following information.</S>
    <S sid="29" ssid="15">Preliminary evidence suggests that having access to a sense tagging of the text improves the performance of information retrieval systems (Krovetz 1989).</S>
    <S sid="30" ssid="16">The primary goal of this paper, then, is to describe in detail methods and knowledge that will enable a language analyzer to tag each word with its sense.</S>
    <S sid="31" ssid="17">To demonstrate that the approach is sufficiently robust for practical tasks, the article will also discuss the incorporation of the approach into an existing system, TRUMP (Jacobs 1986, 1987, 1989), and the application of it to unrestricted texts.</S>
    <S sid="32" ssid="18">The principles that make up the approach are completely general, however, and not just specific to TRUMP.</S>
    <S sid="33" ssid="19">An analyzer whose tasks include word-sense tagging must be able to take an input text, determine the concept that each word or phrase denotes, and identify the role relationships that link these concepts.</S>
    <S sid="34" ssid="20">Because determining this information accurately is knowledge-intensive, the analyzer should be as flexible as possible, requiring a minimum amount of customization for different domains.</S>
    <S sid="35" ssid="21">One way to gain such flexibility is give the system enough generic information about word senses and semantic relations so that it will be able to handle texts spanning more than a single domain.</S>
    <S sid="36" ssid="22">While having an extensive grammar and lexicon is essential for any system's domain independence, this increased flexibility also introduces degrees of ambiguity not frequently addressed by current NLP work.</S>
    <S sid="37" ssid="23">Typically, the system will have to choose from several senses for each word.</S>
    <S sid="38" ssid="24">For example, we found that TRUMP's base of nearly 10,000 root senses and 10,000 derivations provides an average of approximately four senses for each word of a sentence taken from the Wall Street Journal.</S>
    <S sid="39" ssid="25">The potential for combinatoric explosion resulting from such ambiguity makes it critical to resolve ambiguities quickly and reliably.</S>
    <S sid="40" ssid="26">It is unrealistic to assume that word sense discrimination can be left until parsing is complete, as suggested, for example, by Dahlgren, McDowell, and Stabler (1989) and Janssen (1990).</S>
    <S sid="41" ssid="27">No simple recipe can resolve the general problem of lexical ambiguity.</S>
    <S sid="42" ssid="28">Although semantic context and selectional restrictions provide good cues to disambiguation, they are neither reliable enough, nor available quickly enough, to be used alone.</S>
    <S sid="43" ssid="29">The approach to disambiguation that we will take below combines many different, strong sources of information: syntactic tags, word frequencies, collocations, semantic context (clusters), selectional restrictions, and syntactic cues.</S>
    <S sid="44" ssid="30">The approach incorporates a number of innovations, including: Although improvements to our system are ongoing, it already interprets arbitrary text and makes coarse word sense selections reasonably well.</S>
    <S sid="45" ssid="31">(Section 6 will give some quantitative assessments.)</S>
    <S sid="46" ssid="32">No other system, to our knowledge, has been as successful.</S>
    <S sid="47" ssid="33">We will now review word sense discrimination and the determination of role relations.</S>
    <S sid="48" ssid="34">In Section 3, we discuss some sources of knowledge relevant to solving these problems, and, in Section 4, how TRUMP's semantic interpreter uses this knowledge to identify sense preferences.</S>
    <S sid="49" ssid="35">Section 5 describes how it combines the preference information to select senses.</S>
    <S sid="50" ssid="36">Afterward, we will discuss the results of our methods and the avenues for improvement that remain.</S>
  </SECTION>
  <SECTION title="2." number="3">
    <S sid="51" ssid="1">The problem of word sense discrimination is to choose, for a particular word in a particular context, which of its possible senses is the &amp;quot;correct&amp;quot; one for the context.</S>
    <S sid="52" ssid="2">Information about senses can come from a wide variety of sources: Of course, not all these cues will be equally useful.</S>
    <S sid="53" ssid="3">We have found that, in general, the most important sources of information for word sense discrimination are syntactic tags, morphology, collocations, and word associations.</S>
    <S sid="54" ssid="4">Role-related expectations are also important, but to a slightly lesser degree.</S>
    <S sid="55" ssid="5">Syntactic tags are very important, because knowing the intended part of speech is often enough to identify the correct sense.</S>
    <S sid="56" ssid="6">For example, according to our lexicon, when safe is used as an adjective (as in Example 1), it always denotes the sense related to security, whereas safe used as a noun always denotes a type of container for storing valuables.</S>
    <S sid="57" ssid="7">Morphology is also a strong cue to discrimination because certain sense&#8212;affix combinations are preferred, deprecated, or forbidden.</S>
    <S sid="58" ssid="8">Consider the word agreement.</S>
    <S sid="59" ssid="9">The verb agree can mean either 'concur,' 'benefit,' or 'be equivalent' and, in general, adding the affix -ment to a verb creates a noun corresponding either to an act, or to its result, its object, or its associated state.</S>
    <S sid="60" ssid="10">However, of the twelve possible combinations of root sense and affix sense, in practice only four occur: agreement can refer only to the act, object, or result in the case of the 'concur' sense of agree or the state in the case of the 'equivalence' sense of agree.</S>
    <S sid="61" ssid="11">Furthermore, the last of these combinations is deprecated.</S>
    <S sid="62" ssid="12">Collocations and word associations are also important sources of information because they are usually &amp;quot;dead giveaways,&amp;quot; that is, they make immediate and obvious sense selections.</S>
    <S sid="63" ssid="13">For example, when paired with increase, the preposition in clearly denotes a patient rather than a temporal or spatial location, or a direction.</S>
    <S sid="64" ssid="14">Word associations such as bank/ money similarly create a bias for the related senses.</S>
    <S sid="65" ssid="15">Despite their apparent strength, however, the preferences created by these cues are not absolute, as other cues may defeat them.</S>
    <S sid="66" ssid="16">For example, although normally the collocation wait on means 'serve' (Mary waited on John), the failure of a role-related expectation, such as that the BENEFICIARY be animate, can override this preference (Mary waited on the steps).</S>
    <S sid="67" ssid="17">Thus, collocations and word associations are strong sources of information that an understander must weigh against other cues, and not just treat as rules for sense-filtering (as in Hirst 1987 or Dahlgren, McDowell, and Stabler 1989).</S>
    <S sid="68" ssid="18">The selection of a role relationship can both influence and be influenced by the selection of word senses, because preferences partially constrain the various combinations of a role, its holder, and the filler.</S>
    <S sid="69" ssid="19">For example, the preposition from prefers referring to the SOURCE role; transfers, such as give, prefer to have a DESTINATION role; and instances of colors, such as red, prefer to fill a COLOR role.</S>
    <S sid="70" ssid="20">Approaches based on the word disambiguation model tend to apply constraint satisfaction techniques to combine these role preferences (Hirst 1987).</S>
    <S sid="71" ssid="21">Preferences based on role-related expectations are often only a weak cue because they are primarily for verbs and not normally very restrictive.</S>
    <S sid="72" ssid="22">Although generally a weak cue, role-related preferences are quite valuable for the disambiguation of prepositions.</S>
    <S sid="73" ssid="23">In our view, prepositions should be treated essentially the same as other words in the lexicon.</S>
    <S sid="74" ssid="24">The meaning of a preposition either names a relation directly, as one of its core senses (Hirst [1987] also allows this), or indirectly, as a specialized sense triggered, for example, by a collocation or concretion.</S>
    <S sid="75" ssid="25">Because the meaning of a preposition actually names a relation, relation-based cues are a good source of information for disambiguating them.</S>
    <S sid="76" ssid="26">(References to objects in the discourse focus can also be a strong cue for disambiguating prepositions, but this cue appears fairly infrequently [Whittemore, Ferrara, and Brunner 19901.)</S>
    <S sid="77" ssid="27">The problem of determining role relationships entangles word sense discrimination with the problem of syntactic attachment.</S>
    <S sid="78" ssid="28">The attachment problem is a direct result of the ambiguity in determining whether a concept is related to an adjacent object, or to some enveloping structure that incorporates the adjacent object.</S>
    <S sid="79" ssid="29">Most proposed solutions to this problem specify a fixed set of ordered rules that a system applies until a unique, satisfactory attachment is found (Fodor and Frazier 1980; Wilks, Huang, and Fass 1985; Shieber 1983; Hirst 1987; Dahlgren, McDowell, and Stabler 1989).</S>
    <S sid="80" ssid="30">Such rules can be either syntactic, semantic, or pragmatic.</S>
    <S sid="81" ssid="31">Syntactic rules attempt to solve the attachment problem independent of the sense discrimination problem.</S>
    <S sid="82" ssid="32">For example, a rule for Right Association (also known as Late Closure) says to prefer attaching a new word to the lowest nonterminal node on the rightmost branch of the current structure (i.e., in the same structure as the last word processed) (Kimball 1973).</S>
    <S sid="83" ssid="33">Semantic rules, by contrast, intertwine the problems of discrimination and attachment; one must examine all combinations of senses and attachments to locate the semantically best one.</S>
    <S sid="84" ssid="34">Such rules normally also collapse the attachment problem into the conceptual role filling problem.</S>
    <S sid="85" ssid="35">For example, a lexical preference rule specifies that the preference for a particular attachment depends on how strongly or weakly the verb of the clause prefers its possible arguments (Fodor 1978; Ford, Bresnan, and Kaplan 1982).</S>
    <S sid="86" ssid="36">Pragmatic rules also intermingle sense discrimination and attachment, but consider the context of the utterance.</S>
    <S sid="87" ssid="37">For example, one suggested rule says to prefer to build structures describing objects just mentioned (Crain and Steedman 1985; Altmann and Steedman 1988).</S>
    <S sid="88" ssid="38">The accuracy of systems with fixed-order rules is limited by the fact that it is not always possible to strictly order a set of rules independent of the context.</S>
    <S sid="89" ssid="39">For example, Dahlgren, McDowell, and Stabler (1989) propose the rule &amp;quot;If the object of the preposition is an expression of time, then S-attach the PP&amp;quot; to explain the preference for assuming that &amp;quot;in the afternoon&amp;quot; modifies adjourn in Example 2: The judge adjourned the hearing in the afternoon.</S>
    <S sid="90" ssid="40">Although they admit this rule would fail for a sentence like John described the meeting on January 20th, where the NP has a lexical preference for a time modifier, lexical preferences are not always the determining factor either.</S>
    <S sid="91" ssid="41">The existence of a conceptually similar object in the context (such as &amp;quot;the morning trial&amp;quot;) can also create an expectation for the grouping &amp;quot;hearing in the afternoon,&amp;quot; as in Example 3 below.</S>
    <S sid="92" ssid="42">The judge had to leave town for the day.</S>
    <S sid="93" ssid="43">He found a replacement to take over his morning trial, but couldn't find anyone else that was available.</S>
    <S sid="94" ssid="44">He called the courthouse and cancelled the hearing in the afternoon.</S>
    <S sid="95" ssid="45">Moreover, pragmatic effects are not always the determining factor either, leading many people to judge the following sentence as silly (Hirst 1987).</S>
    <S sid="96" ssid="46">The landlord painted all the walls with cracks (Rayner, Carlson, and Frazier 1983).</S>
    <S sid="97" ssid="47">The presence of different lexical items or different objects in the discourse focus may strengthen or weaken the information provided by an individual rule.</S>
    <S sid="98" ssid="48">Another possibility we will discuss in Section 5 is to weigh all preference information dynamically (cf.</S>
    <S sid="99" ssid="49">Schubert 1986; McRoy and Hirst 1990).</S>
    <S sid="100" ssid="50">The system we will be describing in Section 4 will use many of the cues described above, including syntactic tags, morphology, word associations, and role-related expectations.</S>
    <S sid="101" ssid="51">But first, we need to discuss the sources of knowledge that enable a system to identify these cues.</S>
    <S sid="102" ssid="52">To identify preference cues such as morphology, word frequency, collocations, semantic contexts, syntactic expectations, and conceptual relations in unrestricted texts, a system needs a large amount of knowledge in each category.</S>
    <S sid="103" ssid="53">In most cases, this just means that the understander's lexicon and conceptual hierarchy must include preference information, although processing concerns suggest moving some information out of these structures and into data modules specific to a particular process, such as identifying collocations.</S>
    <S sid="104" ssid="54">TRUMP obtains the necessary knowledge from a moderately sized lexicon (8,775 unique roots), specifically designed for use in language understanding, and a hierarchy of nearly 1,000 higher-level concepts, overlaid with approximately 40 concept-cluster definitions.</S>
    <S sid="105" ssid="55">It also uses a library of over 1,400 collocational patterns.</S>
    <S sid="106" ssid="56">We will consider each in turn.</S>
    <S sid="107" ssid="57">Development of TRUMP's current lexicon followed an experiment with a moderatelysized, commercially available lexicon (10,000 unique roots), which demonstrated many substantive problems in applying lexical resources to text processing.</S>
    <S sid="108" ssid="58">Although the lexicon had good morphological and grammatical coverage, as well as a thesaurus-based semantic representation of word meanings, it lacked reasonable information for discriminating senses.</S>
    <S sid="109" ssid="59">The current lexicon, although roughly the same size as the earlier one, has been designed to better meet the needs of producing semantic representations of text.</S>
    <S sid="110" ssid="60">The lexicon features a hierarchy of 1,000 parent concepts for encoding semantic preferences and restrictions, sense-based morphology and subcategorization, a distinction between primary and secondary senses and senses that require particular &amp;quot;triggers&amp;quot; or appear only in specific contexts, and a broad range of collocational information.</S>
    <S sid="111" ssid="61">(An alternative would have been to give up discriminating senses that the lexicon does not distinguish; cf.</S>
    <S sid="112" ssid="62">Janssen [1990].)</S>
    <S sid="113" ssid="63">At this time, the lexicon contains about 13,000 senses and 10,000 explicit derivations.</S>
    <S sid="114" ssid="64">Each lexical entry provides information about the morphological preferences, sense preferences, and syntactic cues associated with a root, its senses, and their possible derivations.</S>
    <S sid="115" ssid="65">An entry also links words to the conceptual hierarchy by naming the conceptual parent of each sense.</S>
    <S sid="116" ssid="66">If necessary, an entry can also specify the composition of common phrases, such as collocations, that have the root as their head.</S>
    <S sid="117" ssid="67">TRUMP's lexicon combines a core lexicon with dynamic lexicons linked to specialized conceptual domains, collocations, and concretions.</S>
    <S sid="118" ssid="68">The core lexicon contains the generic, or context-independent, senses of each word.</S>
    <S sid="119" ssid="69">The system considers these senses whenever a word appears in the input.</S>
    <S sid="120" ssid="70">The dynamic lexicons contain word senses that normally appear only within a particular context; these senses are considered only when that context is active.</S>
    <S sid="121" ssid="71">This distinction is a product of experience; it is conceivable that a formerly dynamic sense may become static, as when military terms creep into everyday language.</S>
    <S sid="122" ssid="72">The partitioning of the lexicon into static and dynamic components reduces the number of senses the system must consider in situations where the context does not trigger some dynamic sense.</S>
    <S sid="123" ssid="73">Although the idea of using dynamic lexicons is not new (see Schank and Abelson [19771, for example), our approach is much more flexible than previous ones because TRUMP's lexicon does not link all senses to a domain.</S>
    <S sid="124" ssid="74">As a result, the lexical retrieval mechanism never forces the system to use a sense just because the domain has preselected it.</S>
    <S sid="125" ssid="75">3.1.1 The Core Lexicon.</S>
    <S sid="126" ssid="76">The core lexicon, by design, includes only coarse distinctions between word senses.</S>
    <S sid="127" ssid="77">This means that, for a task such as generating databases from text, task-specific processing or inference must augment the core lexical knowledge, but problems of considering many nuances of meaning or low-frequency senses are avoided.</S>
    <S sid="128" ssid="78">For example, the financial sense of issue (e.g., a new security) falls under the same core sense as the latest issue of a magazine.</S>
    <S sid="129" ssid="79">The 'progeny' and 'exit' senses of issue are omitted from the lexicon.</S>
    <S sid="130" ssid="80">The idea is to preserve in the core lexicon only the common, coarse distinctions among senses (cf.</S>
    <S sid="131" ssid="81">Frazier and Rayner 1990).</S>
    <S sid="132" ssid="82">Figure 1 shows the lexical entries for the word issue.</S>
    <S sid="133" ssid="83">Each entry has a part of speech, : POS, and a set of core senses, : SENSES.</S>
    <S sid="134" ssid="84">Each sense has a : TYPE field that indicates *primary* for a preferred (primary) sense and *secondary* for a deprecated (secondary) sense.</S>
    <S sid="135" ssid="85">The general rule for determining the : TYPE of a sense is that secondary senses are those that the semantic interpreter should not select without specific contextual information, such as the failure of some selectional restriction pertaining to the primary sense.</S>
    <S sid="136" ssid="86">For example, the word yard can mean an enclosed area, a workplace, or a unit of measure, but in the empty context, the enclosed-area sense is assumed.</S>
    <S sid="137" ssid="87">This classification makes clear the relative frequency of the senses.</S>
    <S sid="138" ssid="88">This is in contrast to just listing them in historical order, the approach of many lexicons (such as the Longman Dictionary of Contemporary English [Procter 1978]) that have been used in computational applications.</S>
    <S sid="139" ssid="89">The :PAR field links each word sense to its immediate parent in the semantic hierarchy.</S>
    <S sid="140" ssid="90">(See Section 3.2.)</S>
    <S sid="141" ssid="91">The parents and siblings of the two noun senses of issue, which are listed in Figure 2, give an idea of the coverage of the lexicon.</S>
    <S sid="142" ssid="92">In the figure, word senses are given as a root followed by a sense number; conceptual categories are designated by atoms beginning with c-.</S>
    <S sid="143" ssid="93">Explicit derivations, such as &amp;quot;period-ic-al-x,&amp;quot; are indicated by roots followed by endings and additional type specifiers.</S>
    <S sid="144" ssid="94">These derivative lexical entries do &amp;quot;double duty&amp;quot; in the lexicon: an application program can use the derivation as well as the semantics of the derivative form.</S>
    <S sid="145" ssid="95">The : ASSOC field, not currently used in processing, includes the lexicographer's choice of synonym or closely related words for each sense.</S>
    <S sid="146" ssid="96">The : SYNTAX field encodes syntactic constraints and subcategorizations for each sense.</S>
    <S sid="147" ssid="97">When senses share constraints (not the case in this example), they can be encoded at the level of the word entry.</S>
    <S sid="148" ssid="98">When the syntactic constraints (such as io-rec, one-obj, and no-obj) influence semantic preferences, they are attached to the sense entry.</S>
    <S sid="149" ssid="99">For example, in this case, issue used as an intransitive verb (no-obj) would favor 'passive moving' even though it is a secondary sense.</S>
    <S sid="150" ssid="100">The lo-re c subcategorization in the first two senses means indirect object as recipient: the ditransitive form will fill the RECIPIENT role.</S>
    <S sid="151" ssid="101">The grammatical knowledge base of the system relates these subcategories to semantic roles.</S>
    <S sid="152" ssid="102">The : G-DERIV and :S-DERIV fields mark morphological derivations.</S>
    <S sid="153" ssid="103">The former, which is NIL in the case of issue to indicate no derivations, encodes the derivations at the word root level, while the latter encodes them at the sense preference level.</S>
    <S sid="154" ssid="104">For example, the : S-DERIV constraint allows issuance to derive from either of the first two senses of the verb, with issuer and issuable deriving only from the 'giving' sense.</S>
    <S sid="155" ssid="105">The lexical entries for issue.</S>
    <S sid="156" ssid="106">The derivation triples encode the form of each affix, the resulting syntactic category (usually redundant), and the &amp;quot;semantic transformation&amp;quot; that applies between the core sense and the resulting sense.</S>
    <S sid="157" ssid="107">For example, the triple (-er noun tr_act or) in the entry for issue says that an issuer plays the ACTOR role of the first sense of the verb issue.</S>
    <S sid="158" ssid="108">Because derivations often apply to multiple senses and often result in different semantic transformations (for example, the ending -ion can indicate the act of performing some action, the object of the action, or the result of the action), a lexical entry can mark certain interpretations of a morphological derivation as primary or secondary. month-ly-x magazinel guidel feature4 dissertationl copy2 column1 brochure1 bibliographyl anthologyl The parents and siblings of two senses of issue. situations, the dynamic lexicons contain senses that are active only in a particular context.</S>
    <S sid="159" ssid="109">Although these senses require triggers, a sense and its trigger may occur just as frequently as a core sense.</S>
    <S sid="160" ssid="110">Thus, the dynamic&#8212;static distinction is orthogonal to the distinction between primary and secondary senses made in the core lexicon.</S>
    <S sid="161" ssid="111">Currently, TRUMP has lexicons linked to domains, collocations, and concretions.</S>
    <S sid="162" ssid="112">For example, TRUMP's military lexicon contains a sense of engage that means 'attack.'</S>
    <S sid="163" ssid="113">However, the system does not consider this sense unless the military domain is active.</S>
    <S sid="164" ssid="114">Similarly, the collocational lexicon contains senses triggered by well-known patterns of words; for example, the sequence take effect activates a sense of take meaning 'transpire.'</S>
    <S sid="165" ssid="115">(Section 3.3 discusses collocations and their representation in more detail.)</S>
    <S sid="166" ssid="116">Concretions activate specializations of the abstract sense of a word when it occurs with an object of a specific type.</S>
    <S sid="167" ssid="117">For example, in the core lexicon, the verb project has the abstract sense 'transfer'; however, if its object is a sound, the system activates a sense corresponding to a 'communication event,' as in She projected her voice.</S>
    <S sid="168" ssid="118">Encoding these specializations in the core lexicon would be problematic, because then a system would be forced to resolve such nuances of meaning even when there was not enough information to do so.</S>
    <S sid="169" ssid="119">Dynamic lexicons can provide much finer distinctions among senses than the core lexicon, because they do not increase the amount of ambiguity when their triggering context is inactive.</S>
    <S sid="170" ssid="120">Together, the core and dynamic lexicons provide the information necessary to recognize morphological preferences, sense preferences, and syntactic cues.</S>
    <S sid="171" ssid="121">They also provide some of the information required to verify and interpret collocations.</S>
    <S sid="172" ssid="122">Sections 3.2, 3.3, and 3.4, below, describe sources of information that enable a system to recognize role-based preferences, collocations, and the semantic context.</S>
    <S sid="173" ssid="123">The concept hierarchy serves several purposes.</S>
    <S sid="174" ssid="124">First, it associates word senses that are siblings or otherwise closely related in the hierarchy, thus providing a thesaurus for information retrieval and other tasks (cf.</S>
    <S sid="175" ssid="125">Fox et al. 1988).</S>
    <S sid="176" ssid="126">In a sense tagging system, these associations can help determine the semantic context.</S>
    <S sid="177" ssid="127">Second, it supplies the basic ontology to which domain knowledge can be associated, so that each new domain requires only incremental knowledge engineering.</S>
    <S sid="178" ssid="128">Third, it allows role-based preferences, wherever possible, to apply to groups of word senses rather than just individual lexical entries.</S>
    <S sid="179" ssid="129">To see how the hierarchy's concept definitions establish the basic ontology, consider Figure 3, the definition of the concept c-recording. c-recording is the parent concept for activities involving the storage of information, namely, the following verb senses: book2 cataloguel clockl compilel date3 documentl enter3 indexl inputl keyl logl recordl In a concept definition, the :PAR fields link the concept to its immediate parents in the hierarchy.</S>
    <S sid="180" ssid="130">The :ASSOC field links the derived instances of the given concept to their places in the hierarchy.</S>
    <S sid="181" ssid="131">For example, according to Figure 3, the object form derived The conceptual definition of c-clothing.</S>
    <S sid="182" ssid="132">The conceptual definition of c-made-of -rel. from enter3 (i.e., entry) has the parent c-information.</S>
    <S sid="183" ssid="133">The :ROLE-PLAY fields mark specializations of a parent's roles (or introduce new roles).</S>
    <S sid="184" ssid="134">Each :ROLE-PLAY indicates the parent's name for a role along with the concept's specialization of it.</S>
    <S sid="185" ssid="135">For example, c-re cording specializes its inherited OBJECT role as PATIENT.</S>
    <S sid="186" ssid="136">The :RELS and : PREF fields identify which combinations of concept, role, and filler an understander should expect (and hence prefer).</S>
    <S sid="187" ssid="137">For example, the definition in Figure 4 expresses that fabric materials are common modifiers of clothing (e.g., wool suit) and fill the clothing's MADE-OF role.</S>
    <S sid="188" ssid="138">TRUMP's hierarchy also allows the specification of such preferences from the perspective of the filler, where they can be made more general.</S>
    <S sid="189" ssid="139">For example, although colors are also common modifiers of clothing (e.g., blue suit), it is better to associate this preference with the filler (c-color-qual) because colors prefer to fill the COLOR role of any physical object.</S>
    <S sid="190" ssid="140">(Figure 5 shows an encoding of this preference.)</S>
    <S sid="191" ssid="141">The hierarchy also permits the specification of such preferences from the perspective of the relation underlying a role.</S>
    <S sid="192" ssid="142">For example, the relation c-made-of in Figure 6 indicates (in its : RELS) that physical objects normally have a MADE-OF role and (in its : PREF) that the role is normally filled by some physical object.</S>
    <S sid="193" ssid="143">Figure 7 gives a complete account of the use of the : RELS and :PREF fields and how they permit the expression of role-related preferences from any perspective.</S>
    <S sid="194" ssid="144">Collocation is the relationship among any group of words that tend to co-occur in a predictable configuration.</S>
    <S sid="195" ssid="145">Although collocations seem to have a semantic basis, many collocations are best recognized by their syntactic form.</S>
    <S sid="196" ssid="146">Thus, for current purposes, we limit the use of the term &amp;quot;collocation&amp;quot; to sense preferences that result from these well-defined syntactic constructions.1 For example, the particle combination pick up 1 Traditionally many of these expressions have been categorized as idioms (see Cowie and Mackin 1975; Cowie, Mackin, and McCraig 1983), but as most are at least partly compositional and can be processed by normal parsing methods, we prefer to use the more general term &amp;quot;collocation.&amp;quot; This categorization thus happily encompasses both the obvious idioms and the compositional expressions whose status as idioms is highly debatable.</S>
    <S sid="197" ssid="147">Our use of the term is thus similar to that of Smadja and McKeown, who partition collocations into open compounds, predicative relations, and idiomatic expressions (Smadja and McKeown 1990).</S>
    <S sid="198" ssid="148">The use of :PREF and :RELS.</S>
    <S sid="199" ssid="149">The top ten co-occurences with take. and the verb-complement combination make the team are both collocation-inducing expressions.</S>
    <S sid="200" ssid="150">Excluded from this classification are unstructured associations among senses that establish the general semantic context, for example, courtroom/defendant.</S>
    <S sid="201" ssid="151">(We will discuss this type of association in the next section.)</S>
    <S sid="202" ssid="152">Collocations often introduce dynamic word senses, i.e., ones that behave compositionally, but occur only in the context of the expression, making it inappropriate for the system to consider them outside that context.</S>
    <S sid="203" ssid="153">For example, the collocation hang from triggers a sense of from that marks an INSTRUMENT.</S>
    <S sid="204" ssid="154">In other cases, a collocation simply creates preferences for selected core senses, as in the pairing of the 'opportunity' sense of break with the 'cause-to-have' sense of give in give her a break.</S>
    <S sid="205" ssid="155">There is also a class of collocations that introduce a noncompositional sense for the entire expression, for example, the collocation take place invokes a sense 'transpire.'</S>
    <S sid="206" ssid="156">To recognize collocations during preprocessing, TRUMP uses a set of patterns, each of which lists the root words or syntactic categories that make up the collocation.</S>
    <S sid="207" ssid="157">For example, the pattern (TAKE (A) (ADJ) BATH) matches the clauses take a hot bath and takes hot baths.</S>
    <S sid="208" ssid="158">In a pattern, parentheses indicate optionality; the system encodes the repeatability of a category, such as adjectives, procedurally.</S>
    <S sid="209" ssid="159">Currently, there are patterns for verb-particle, verb-preposition, and verb-object collocations, as well as compound nouns.</S>
    <S sid="210" ssid="160">Initially, we acquired patterns for verb-object collocations by analyzing lists of root word pairs that were weighted for relative co-occurrence in a corpus of articles from the Dow Jones News Service (cf.</S>
    <S sid="211" ssid="161">Church and Hanks 1990; Smadja and McKeown 1990).</S>
    <S sid="212" ssid="162">As an example of the kind of data that we derived, Figure 8 shows the ten most frequent co-occurrences involving the root &amp;quot;take.&amp;quot; Note that the collocation &amp;quot;take action&amp;quot; appears both in its active form (third in the list), as well as its passive, actions were taken (fifth in the list).</S>
    <S sid="213" ssid="163">From an examination of these lists and the contexts in which the pairs appeared in the corpus, we constructed the patterns used by TRUMP to identify collocations.</S>
    <S sid="214" ssid="164">Then, using the patterns as a guide, we added lexical entries for each collocation.</S>
    <S sid="215" ssid="165">(Figure 9 lists some of the entries for the compositional collocations associated with the verb take; the entries pair a dynamic sense of take with a sense occurring as its complement.)</S>
    <S sid="216" ssid="166">These entries link the collocations to the semantic hierarchy, and, where appropriate, provide syntactic constraints that the parser can use to verify the presence of a collocation.</S>
    <S sid="217" ssid="167">For example, Figure 10 shows the entry for the noncompositional collocation take place, which requires that the object (r ail*) be singular and determinerless.</S>
    <S sid="218" ssid="168">These entries differ from similar representations of collocations or idioms in Smadja and McKeown (1990) and Stock (1989), in that they are sense-based rather than wordbased.</S>
    <S sid="219" ssid="169">That is, instead of expressing collocations as word-templates, the lexicon groups together collocations that combine the same sense of the head verb with particular senses or higher-level concepts (cf.</S>
    <S sid="220" ssid="170">Dyer and Zernik 1986).</S>
    <S sid="221" ssid="171">This approach better addresses the fact that collocations do have a semantic basis, capturing general forms such as give him or her (some temporal object), which underlies the collocations give month, give minute, and give time.</S>
    <S sid="222" ssid="172">Currently, the system has entries for over 1700 such collocations.</S>
    <S sid="223" ssid="173">The last source of sense preferences we need to consider is the semantic context.</S>
    <S sid="224" ssid="174">Work on lexical cohesion suggests that people use words that repeat a conceptual category or that have a semantic association to each other to create unity in text (Morris 1988; Morris and Hirst 1991; Halliday and Hasan 1976).</S>
    <S sid="225" ssid="175">These associations can be thought of as a class of collocations that lack the predictable syntactic structure of, say, collocations arising from verb-particle or compound noun constructions.</S>
    <S sid="226" ssid="176">Since language producers select senses that group together semantically, a language analyzer should prefer senses that share a semantic association.</S>
    <S sid="227" ssid="177">However, it is unclear whether the benefit of knowing the exact nature of an association would justify the cost of determining it.</S>
    <S sid="228" ssid="178">Thus, our system provides a cluster mechanism for representing and identifying groups of senses that are associated in some unspecified way.</S>
    <S sid="229" ssid="179">A cluster is a set of the senses associated with some central concept.</S>
    <S sid="230" ssid="180">The definition of a cluster includes a name suggesting the central concept and a list of the cluster's members, as in Figure 11.</S>
    <S sid="231" ssid="181">A cluster may contain concepts or other clusters.</S>
    <S sid="232" ssid="182">TRUMP's knowledge base contains three types of clusters: categorial, functional, and situational.</S>
    <S sid="233" ssid="183">The simplest type of cluster is the categorial cluster.</S>
    <S sid="234" ssid="184">These clusters consist of the sets of all senses sharing a particular conceptual parent.</S>
    <S sid="235" ssid="185">Since the conceptual hierarchy already encodes these clusters implicitly, we need not write formal cluster definitions for them.</S>
    <S sid="236" ssid="186">Obviously, a sense will belong to a number of categorial clusters, one for each element of its parent chain.</S>
    <S sid="237" ssid="187">The second type of cluster is the functional cluster.</S>
    <S sid="238" ssid="188">These consist of the sets of all senses sharing a specified functional relationship.</S>
    <S sid="239" ssid="189">For example, our system has a small number of part-whole clusters that list the parts associated with the object named by the cluster.</S>
    <S sid="240" ssid="190">Figure 12 shows the part-whole cluster cl-egg for parts of an egg.</S>
    <S sid="241" ssid="191">The third type of cluster, the situational cluster, encodes general relationships among senses on the basis of their being associated with a common setting, event, The definition of the cluster cl-egg.</S>
    <S sid="242" ssid="192">The definition of the cluster cl-courtroom. or purpose.</S>
    <S sid="243" ssid="193">Since a cluster's usefulness is inversely proportional to its size, these clusters normally include only senses that do not occur outside the clustered context or that strongly suggest the clustered context when they occur with some other member of the cluster.</S>
    <S sid="244" ssid="194">Thus, situational clusters are centered upon fairly specific ideas and may correspondingly be very specific with respect to their elements.</S>
    <S sid="245" ssid="195">It is not unusual for a word to be contained in a cluster while its synonyms are not.</S>
    <S sid="246" ssid="196">For example, the cluster cl-courtroom shown in Figure 13 contains sense verb_testify1, but not verb_assert1.</S>
    <S sid="247" ssid="197">Situational clusters capture the associations found in generic descriptions (cf.</S>
    <S sid="248" ssid="198">Dahlgren, McDowell, and Stabler 1989) or dictionary examples (cf.</S>
    <S sid="249" ssid="199">Janssen 1990), but are more compact because clusters may include whole categories of objects (such as c-law-act ion) as members and need not specify relationships between the members.</S>
    <S sid="250" ssid="200">(As mentioned above, the conceptual hierarchy is the best place for encoding known role-related expectations.)</S>
    <S sid="251" ssid="201">The use of clusters for sense discrimination is also comparable to approaches that favor senses linked by marked paths in a semantic network (Hirst 1987).</S>
    <S sid="252" ssid="202">In fact, clusters capture most of the useful associations found in scripts or semantic networks, but lack many of the disadvantages of using networks.</S>
    <S sid="253" ssid="203">For example, because clusters do not specify what the exact nature of any association is, learning new clusters from previously processed sentences would be fairly straightforward, in contrast to learning new fragments of network.</S>
    <S sid="254" ssid="204">Using clusters also avoids the major problem associated with marker-passing approaches, namely how to prevent the production of stupid paths (or remove them from consideration after they have been produced) (Charniak 1983).</S>
    <S sid="255" ssid="205">The relevant difference is that a cluster is cautious because it must explicitly specify all its elements.</S>
    <S sid="256" ssid="206">A marker passer takes the opposite stance, however, considering all paths up, down, and across the network unless it is explicitly constrained.</S>
    <S sid="257" ssid="207">Thus a marker passer might find the following dubious path from the 'written object' sense of book to the 'part-of-a-plant' sense of leaf: [book made-of paper] [paper made-from wood] [tree made-of wood] [tree has-part leaf] whereas no cluster would link these entities, unless there had been some prior evidence of a connection.</S>
    <S sid="258" ssid="208">(The recommended solution to the production of such paths by a marker passer is to prevent the passing of marks through certain kinds of nodes [Hirst 1987; Hendler 19871.)</S>
    <S sid="259" ssid="209">From the lexical entries, the underlying concept hierarchy, and the specialized entries for collocation and clusters just described, a language analyzer can extract the information that establishes preferences among senses.</S>
    <S sid="260" ssid="210">In the next section, we will describe how a semantic interpreter can apply knowledge from such a wide variety of sources.</S>
  </SECTION>
  <SECTION title="4." number="4">
    <S sid="261" ssid="1">There is a wide variety of information about which sense is the correct one, and the challenge is to decide when and how to use this information.</S>
    <S sid="262" ssid="2">The danger of a combinatorial explosion of possibilities makes it advantageous to try to resolve ambiguities as early as possible.</S>
    <S sid="263" ssid="3">Indeed, efficient preprocessing of texts can elicit a number of cues for word senses, set up preferences, and help control the parse.</S>
    <S sid="264" ssid="4">Then, the parse and semantic interpretation of the text will provide the cues necessary to complete the task of resolution.</S>
    <S sid="265" ssid="5">Without actually parsing a text, a preprocessor can identify for each word its morphology,2 its syntactic tag or tags,3 and whether it is part of a collocation; for each sense, it can identify whether the sense is preferred or deprecated and whether it is supported by a cluster.</S>
    <S sid="266" ssid="6">These properties are all either retrievable directly from a knowledge base or computable from short sequences of words.</S>
    <S sid="267" ssid="7">To identify whether the input satisfies the expectations created by syntactic cues or whether it satisfies role-related expectations, the system must first perform some syntactic analysis of the input.</S>
    <S sid="268" ssid="8">Identifying these properties must come after parsing, because recognizing them requires both the structural cues provided by parsing and a semantic analysis of the text.</S>
    <S sid="269" ssid="9">In our system, processing occurs in three phases: morphology, preprocessing, and parsing and semantic interpretation.</S>
    <S sid="270" ssid="10">(See Figure 14.)</S>
    <S sid="271" ssid="11">Analysis of a text begins with the identification of the morphological features of each word and the retrieval of the (core) senses of each word.</S>
    <S sid="272" ssid="12">Then, the input passes through a special preprocessor that identifies parse-independent semantic preferences (i.e., syntactic tags, collocations, and clusters) and makes a preliminary selection of word senses.</S>
    <S sid="273" ssid="13">This selection process eliminates those core senses that are obviously inappropriate and triggers certain The system architecture. specialized senses.</S>
    <S sid="274" ssid="14">In the third phase, TRUMP attempts to parse the input and at the same time produce a &amp;quot;preferred&amp;quot; semantic interpretation for it.</S>
    <S sid="275" ssid="15">Since the preferred interpretation also fixes the preferred sense of each word, it is at this point that the text can be given semantic tags, thus allowing sense-based information retrieval.</S>
    <S sid="276" ssid="16">In the next few subsections we will describe in greater detail the processes that enable the system to identify semantic preferences: morphological analysis, tagging, collocation identification, cluster matching, and semantic interpretation.</S>
    <S sid="277" ssid="17">Afterward we will discuss how the system combines the preferences it identifies.</S>
    <S sid="278" ssid="18">The first step in processing an input text is to determine the root, syntactic features, and affixes of each word.</S>
    <S sid="279" ssid="19">This information is necessary both for retrieving the word's lexical entries and for the syntactic tagging of the text during preprocessing.</S>
    <S sid="280" ssid="20">Morphological analysis not only reduces the number of words and senses that must be in the lexicon, but it also enables a system to make reasonable guesses about the syntactic and semantic identity of unknown words so that they do not prevent parsing (see Rau, Jacobs, and Zernik 1989).</S>
    <S sid="281" ssid="21">Once morphological analysis of a word is complete, the system retrieves (or derives) the corresponding senses and establishes initial semantic preferences for the primary senses.</S>
    <S sid="282" ssid="22">For example, by default, the sense of agree meaning 'to concur' (agree 1) is preferred over its other senses.</S>
    <S sid="283" ssid="23">The lexical entry for agree marks this preference by giving it : TYPE *primary* (see Figure 15).</S>
    <S sid="284" ssid="24">The entry also says that derivations (listed in the :S-DERIV field) agree1+ment and agree2-1-able are preferred, derivations agreel&#177;able and agree3+ment are deprecated, and all other sense-affix combinations (excepting inflections) have been disallowed.</S>
    <S sid="285" ssid="25">During morphological analysis, the system retrieves only the most general senses.</S>
    <S sid="286" ssid="26">It waits until the preprocessor or the parser identifies supporting evidence before it retrieves word senses specific to a context, such as a domain, a situation, or a collocation.</S>
    <S sid="287" ssid="27">In most cases this approach helps reduce the amount of ambiguity.</S>
    <S sid="288" ssid="28">The approach is compatible with evidence discussed by Simpson and Burgess (1988) that The lexical entry for the verb agree.</S>
    <S sid="289" ssid="29">&amp;quot;multiple meanings are activated in frequency-coded order&amp;quot; and that low-frequency senses are handled by a second retrieval process that accumulates evidence for those senses and activates them as necessary.</S>
    <S sid="290" ssid="30">Once the system determines the morphological analysis of each word, the next step in preprocessing is to try to determine the correct part of speech for the word.</S>
    <S sid="291" ssid="31">Our system uses a tagging program, written by Uri Zernik (1990), that takes information about the root, affix, and possible syntactic category for each word and applies stochastic techniques to select a syntactic tag for each word.</S>
    <S sid="292" ssid="32">Stochastic taggers look at small groups of words and pick the most likely assignment of tags, determined by the frequency of alternative syntactic patterns in similar texts.</S>
    <S sid="293" ssid="33">Although it may not be possible to completely disambiguate all words prior to parsing, approaches based on stochastic information have been quite successful (Church 1988; Garside, Leech, and Sampson 1987; de Marcken 1990).4 To allow for the fact that the tagger may err, as part of the tagging process the system makes a second pass through the text to remove some systematic errors that result from biases common to statistical approaches.</S>
    <S sid="294" ssid="34">For example, they tend to prefer modifiers over nouns and nouns over verbs; for instance, in Example 5, the tagger erroneously marks the word need as a noun.</S>
    <S sid="295" ssid="35">You really need the Campbell Soups of the world to be interested in your magazine.</S>
    <S sid="296" ssid="36">In this second pass, the system applies a few rules derived from our grammar and resets the tags where necessary.</S>
    <S sid="297" ssid="37">For example, to correct for the noun versus verb overgeneralization, whenever a word that can be either a noun or a verb gets tagged as just a noun, the corrector lets it remain ambiguous unless it is immediately preceded by a determiner (a good clue for nouns), or it is immediately preceded by a plural noun or a preposition, or is immediately followed by a determiner (three clues that suggest a word may be a verb).</S>
    <S sid="298" ssid="38">The system is able to correct for all the systematic errors we have identified thus far using just nine rules of this sort.</S>
    <S sid="299" ssid="39">After tagging, the preprocessor eliminates all senses corresponding to unselected parts of speech.</S>
    <S sid="300" ssid="40">Following the syntactic filtering of senses, TRUMP's preprocessor identifies collocations and establishes semantic preferences for the senses associated with them.</S>
    <S sid="301" ssid="41">In this stage of preprocessing, the system recognizes the following types of collocations: To recognize a collocation, the preprocessor relies on a set of simple patterns, which match the general syntactic context in which the collocation occurs.</S>
    <S sid="302" ssid="42">For example, the system recognizes the collocation &amp;quot;take profit&amp;quot; found in Example 6 with the pattern (TAKE (DET) PROFIT).</S>
    <S sid="303" ssid="43">A number of stocks that have spearheaded the market's recent rally bore the brunt of isolated profit-taking Tuesday.</S>
    <S sid="304" ssid="44">The preprocessor's strategy for locating a collocation is to first scan the text for trigger words, and if it finds the necessary triggers, then to try to match the complete pattern.</S>
    <S sid="305" ssid="45">(Triggers typically correspond to the phrasal head of a collocation, but for more complex patterns, such as verb-complement clauses, both parts of the collocation must be present.)</S>
    <S sid="306" ssid="46">The system's matching procedures allow for punctuation and verb-complement inversion.</S>
    <S sid="307" ssid="47">If the triggers are found and the match is successful, the preprocessor has a choice of subsequent actions, depending on how cautious it is supposed to be.</S>
    <S sid="308" ssid="48">In its aggressive mode, it updates the representations of the matched words, adding any triggered senses and preferences for the collocated senses.</S>
    <S sid="309" ssid="49">It also deletes any unsupported, deprecated senses.</S>
    <S sid="310" ssid="50">In its cautious mode, it just adds the word senses associated with the pattern to a dynamic store.</S>
    <S sid="311" ssid="51">Once stored, these senses are then available for the parser to use after it verifies the syntactic constraints of the collocation; if it is successful, it will add preferences for the appropriate senses.</S>
    <S sid="312" ssid="52">Early identification of triggered senses enables the system to use them for cluster matching in the next stage.</S>
    <S sid="313" ssid="53">After the syntactic filtering of senses and the activation of senses triggered by collocations, the next step of preprocessing identifies preferences for senses that invoke currently active clusters (see Section 3.4).</S>
    <S sid="314" ssid="54">A cluster is active if it contains any of the senses under consideration for other words in the current paragraph.</S>
    <S sid="315" ssid="55">The system may also activate certain clusters to represent the general topic of the text.</S>
    <S sid="316" ssid="56">The preprocessor's strategy for assessing cluster-based preferences is to take the set of cluster names invoked by each sense of each content word in the sentence and locate all intersections between it and the names of other active clusters.</S>
    <S sid="317" ssid="57">(For purposes of cluster matching, the sense list for each word will include all the special and noncompositional senses activated during the previous stage of preprocessing, as well as any domain-specific senses that are not yet active.)</S>
    <S sid="318" ssid="58">For each intersection the preprocessor finds, it adds preferences for the senses that are supported by the cluster match.</S>
    <S sid="319" ssid="59">Then, the preprocessor activates any previously inactive senses it found to be supported by a cluster match.</S>
    <S sid="320" ssid="60">This triggering of senses on the basis of conceptual context forms the final step of the preprocessing phase.</S>
    <S sid="321" ssid="61">Once preprocessing is complete, the parsing phase begins.</S>
    <S sid="322" ssid="62">In this phase, TRUMP attempts to build syntactic structures, while calling on the semantic interpreter to build and rate alternative interpretations for each structure proposed.</S>
    <S sid="323" ssid="63">These semantic evaluations then guide the parser's evaluation of syntactic structures.</S>
    <S sid="324" ssid="64">They may also influence the actual progression of the parse.</S>
    <S sid="325" ssid="65">For example, if a structure is found to have incoherent semantics, the parser immediately eliminates it (and all structures that might contain it) from further consideration.</S>
    <S sid="326" ssid="66">Also, whenever the semantics of a parse becomes sufficiently better than that of its competitors, the system prunes the semantically inferior parses, reducing the number of ambiguities even further.'</S>
    <S sid="327" ssid="67">As suggested above, the system builds semantic interpretations incrementally.</S>
    <S sid="328" ssid="68">For each proposed combination of syntactic structures, there is a corresponding combination of semantic structures.</S>
    <S sid="329" ssid="69">It is the job of the semantic interpreter to identify the possible relations that link the structures being combined, identify the preferences associated with each possible combination of head, role (relation), and filler (the argument or modifier), and then rank competing semantic interpretations.</S>
    <S sid="330" ssid="70">5 A similar approach has been taken by Gibson (1990) and is supported by the psychological experiments of Kurtzman (1984).</S>
    <S sid="331" ssid="71">For each proposed combination, knowledge sources may contribute the following preferences: certain syntactic form.</S>
    <S sid="332" ssid="72">(For example, the sense meaning 'to care for,' in She tends plants or She tends to plants occurs with an NP or PP object, whereas the sense of tend meaning 'to have a tendency' as in She tends to lose things requires a clausal object.)</S>
    <S sid="333" ssid="73">&#8226; preferences associated with the semantic &amp;quot;fit&amp;quot; between any two of the head, the role, and the filler, for example: filler and role e.g., foods make good fillers for the PATIENT role of eating activities; filler and head e.g., colors make good modifiers of physical objects; head and role e.g., monetary objects expect to be qualified by some QUANTITY.</S>
    <S sid="334" ssid="74">The conceptual hierarchy and the lexicon contain the information that encodes these preferences.</S>
    <S sid="335" ssid="75">How the semantic interpreter combines these preferences is the subject of the next section.</S>
  </SECTION>
  <SECTION title="5." number="5">
    <S sid="336" ssid="1">Given the number of preference cues available for discriminating word senses, an understander must face the question of what to do if they conflict.</S>
    <S sid="337" ssid="2">For example, in the sentence Mary took a picture to Bob, the fact that photography does not normally have a destination (negative role-related information) should override the support for the 'photograph' interpretation of took a picture given by collocation analysis.</S>
    <S sid="338" ssid="3">A particular source of information may also support more than one possible interpretation, but to different degrees.</S>
    <S sid="339" ssid="4">For example, cigarette filter may correspond either to something that filters out cigarettes or to something that is part of a cigarette, but the latter relation is more likely.</S>
    <S sid="340" ssid="5">Our strategy for combining the preferences described in the preceding sections is to rate most highly the sense with the strongest combination of supporting cues.</S>
    <S sid="341" ssid="6">The system assigns each preference cue a strength, an integer value between +10 and -10, and then sums these strengths to find the sense with the highest rating.</S>
    <S sid="342" ssid="7">The strength of a particular cue depends on its type and on the degree to which the expectations underlying it are satisfied.</S>
    <S sid="343" ssid="8">For cues that are polar &#8212; for example, a sense is either low or high frequency &#8212; a value must be chosen experimentally, depending on the strength of the cue compared with others.</S>
    <S sid="344" ssid="9">For example, the system assigns frequency information (the primary-secondary distinction) a score close to zero because this information tends to be significant only when other preferences are inconclusive.</S>
    <S sid="345" ssid="10">For cues that have an inherent extent -- for example, the conceptual category specified by a role preference subsumes a set of elements that can be counted &#8212; the cue strength is a function of the magnitude of the extent, that is, its specificity.</S>
    <S sid="346" ssid="11">TRUMP's specificity function maps the number of elements subsumed by the concept onto the range 0 to +10.</S>
    <S sid="347" ssid="12">The function assigns concepts with few members a high value and concepts with many members a low value.</S>
    <S sid="348" ssid="13">For example, the concept c-object, which subsumes roughly half the knowledge base, has a low specificity value (1).</S>
    <S sid="349" ssid="14">In contrast, the concept noun_hammer 1, which subsumes only a single entity, has a high specificity value (10).</S>
    <S sid="350" ssid="15">Concept strength is inversely proportional to concept size because a preference for a very general (large) concept often indicates that either there is no strong expectation at all or there is a gap in the system's knowledge.</S>
    <S sid="351" ssid="16">In either case, a concept that subsumes only a few senses is stronger information than a concept that subsumes more.</S>
    <S sid="352" ssid="17">The preference score for a complex concept, formed by combining simpler concepts with the connectives AND, OR, and NOT, is a function of the number of senses subsumed by both, either, or neither concept, respectively.</S>
    <S sid="353" ssid="18">Similarly, the score for a cluster is the specificity of that cluster (as defined in Section 3.4).</S>
    <S sid="354" ssid="19">(If a sense belongs to more than one active cluster, then only the most specific one is considered.)</S>
    <S sid="355" ssid="20">The exact details of the function (i.e., the range of magnitudes corresponding to each specificity class) necessarily depend on the size and organization of one's concept hierarchy.</S>
    <S sid="356" ssid="21">For example, one would assign specificity value 1 to any concept with more members than any immediate specialization of the most abstract concept.</S>
    <S sid="357" ssid="22">When a preference cue matches the input, the cue strength is its specificity value; when a concept fails to match the input, the strength is a negative value whose magnitude is usually the specificity of the concept, but it is not always this straightforward.</S>
    <S sid="358" ssid="23">Rating the evidence associated with a preference failure is a subtle problem, because there are different types of preference failure to take into account.</S>
    <S sid="359" ssid="24">Failure to meet a general preference is always significant, whereas failure to meet a very specific preference is only strong information when a slight relaxation of the preference does not eliminate the failure.</S>
    <S sid="360" ssid="25">This presents a bit of a paradox: the greater the specificity of a concept, the more information there is about it, but the less information there may be about a corresponding preference.</S>
    <S sid="361" ssid="26">The paradox arises because the failure of a very specific preference introduces significant uncertainty as to why the preference failed.</S>
    <S sid="362" ssid="27">Failing to meet a very general preference is always strong information because, in practice, the purpose of such preferences is to eliminate the grossly inappropriate &#8212; such as trying to use a relation with a physical object when it should only be applied to events.</S>
    <S sid="363" ssid="28">The specificity function in this case returns a value whose magnitude is the same as the specificity of the complement of the concept (i.e., the positive specificity less the maximum specificity, 10.)</S>
    <S sid="364" ssid="29">The result is a negative number whose absolute value is greater than it would be by default.</S>
    <S sid="365" ssid="30">For example, if a preference is for the concept c-obj ect, which has a positive specificity of 1, and this concept fails to match the input, then the preference value for the cue will be &#8212;9.</S>
    <S sid="366" ssid="31">On the other hand, a very specific preference usually pinpoints the expected entity, i.e., the dead giveaway pairings of role and filler.</S>
    <S sid="367" ssid="32">Thus, it is quite common for these preferences to overspecify the underlying constraint; for example, cut may expect a tool as an INSTRUMENT, but almost any physical object will suffice.</S>
    <S sid="368" ssid="33">When a slight relaxation of the preference is satisfiable, a system should take the cautious route, and assume it has a case of overspecification and is at worst a weak failure.</S>
    <S sid="369" ssid="34">Again, the specificity function returns a negative value with magnitude equivalent to the specificity of the complement of the concept, but this time the result will be a negative number whose absolute value is less than it would be by default.</S>
    <S sid="370" ssid="35">When this approach fails, a system can safely assume that the entity under consideration is &amp;quot;obviously inappropriate&amp;quot; for a relatively strong expectation, and return the default value.</S>
    <S sid="371" ssid="36">The default value for a concept that is neither especially general nor specific and that fails to match the input is just &#8212;1 times the positive specificity of the concept.</S>
    <S sid="372" ssid="37">The strategy of favoring the most specific information has several advantages.</S>
    <S sid="373" ssid="38">This approach best addresses the concerns of an expanding knowledge base where one must be concerned not only with competition between preferences but also with the inevitable gaps in knowledge.</S>
    <S sid="374" ssid="39">Generally, the more specific information there is, the more complete, and hence more trustworthy, the information is.</S>
    <S sid="375" ssid="40">Thus, when there is a clear semantic distinction between the senses and the system has the information necessary to identify it, a clear distinction usually emerges in the ratings.</S>
    <S sid="376" ssid="41">When there is no strong semantic distinction, or there is very little information, preference scores are usually very close, so that the parser must fall back on syntactic preferences, such as Right Association.</S>
    <S sid="377" ssid="42">This result provides a simple, sensible means of balancing syntactic and semantic preferences.</S>
    <S sid="378" ssid="43">To see how the cue strengths of frequency information, morphological preferences, collocations, clusters, syntactic preferences, and role-related preferences interact with one another to produce the final ranking of senses, consider the problem of deciding the correct sense of reached in Example 1 (repeated below): Example 1 The agreement reached by the state and the EPA provides for the safe storage of the waste.</S>
    <S sid="379" ssid="44">According to the system's lexicon, reached has four possible verb senses: Figure 16 shows a tabulation of cue strengths for each of these interpretations of reach in Example 1, when just information in the VP reached by the state and the EPA is considered.</S>
    <S sid="380" ssid="45">The sense reach3 has the highest total score.</S>
    <S sid="381" ssid="46">From the table, we see that, at this point in the parse, the only strong source of preferences is the role information (line 6 of Figure 16).</S>
    <S sid="382" ssid="47">The derivation of these numbers is shown in Figures 17, 18, and 19, which list the role preferences associated with the possible interpretations of the preposition by for reach3, and its two nearest competitors, reachl and reach4.</S>
    <S sid="383" ssid="48">Together, the data in the tables reveal the following sources of preference strength: &#8226; The 'arrival' sense (reachl) gains support from the fact that there is a sense of by meaning AGENT, which is a role that arrivals expect (line 3 of column 3 of Figure 17), and the state and the EPA make reasonably good agents (line 5 of column 3 of Figure 17).</S>
    <S sid="384" ssid="49">Role-related preferences of reachl for the preposition by.</S>
    <S sid="385" ssid="50">&#8226; The 'communication' sense (reach3) gains support from the fact that there is a sense of by corresponding to the expected role COMMUNICATOR (line 3 of column 3 of Figure 18) and the state and the EPA make very good agents of communication events (communicators), in particular (line 1 of column 3 of Figure 18), as well as being good agents in general (line 5 of column 3 of Figure 18); however, reach3 is disfavored by frequency information (line 1 of column 3 of Figure 16).</S>
    <S sid="386" ssid="51">Although the system favors the 'communication' sense of reach in the VP, for the final result, it must balance this information with that provided by the relationship between agreement and the verb phrase.</S>
    <S sid="387" ssid="52">By the end of the parse, the 'event-change' sense comes to take precedence: Role-related preferences of reach4 for the preposition by.</S>
    <S sid="388" ssid="53">The main cause of this weakness is that (in our system) the role that agreement would fill, DESTINATION, has no special preference for being associated with a c-de st-event &#8212; many events allow a DESTINATION role.</S>
    <S sid="389" ssid="54">By summing the cue strengths of each possible interpretation in this way and selecting the one with the highest total score, the system decides which sense is the &amp;quot;correct&amp;quot; one for the context.</S>
    <S sid="390" ssid="55">The strengths of individual components of each interpretation contribute to, but do not determine, the strength of the final interpretation, because there are also strengths associated with how well the individual components fit together.</S>
    <S sid="391" ssid="56">No additional weights are necessary, because the specificity values the system uses are a direct measure of strength.</S>
  </SECTION>
  <SECTION title="6." number="6">
    <S sid="392" ssid="1">Our goal has been a natural language system that can effectively analyze an arbitrary input at least to the level of word sense tagging.</S>
    <S sid="393" ssid="2">Although we have not yet fully accomplished this goal, our results are quite encouraging.</S>
    <S sid="394" ssid="3">Using a lexicon of approximately 10,000 roots and 10,000 derivations, the system shows excellent lexical and morphological coverage.</S>
    <S sid="395" ssid="4">When tested on a sample of 25,000 words of text from the Wall Street Journal, the system covered 98% of non-proper noun, non-abbreviated word occurrences (and 91% of all words).</S>
    <S sid="396" ssid="5">Twelve percent of the senses the system selected were derivatives.</S>
    <S sid="397" ssid="6">The semantic interpreter is able to discriminate senses even when the parser cannot produce a single correct parse.</S>
    <S sid="398" ssid="7">Figure 20 gives an example of the sense tagging that the system gives to the following segment of Wall Street Journal text:</S>
  </SECTION>
  <SECTION title="Example 7" number="7">
    <S sid="399" ssid="1">The network also is changing its halftime show to include viewer participation, in an attempt to hold on to its audience through halftime and into the second halves of games.</S>
    <S sid="400" ssid="2">One show will ask viewers to vote on their favorite all-time players through telephone polls.</S>
    <S sid="401" ssid="3">Each word is tagged with its part of speech and sense number along with a parent concept.</S>
    <S sid="402" ssid="4">For example, the tag [changing verb_3 (c-replacing)] shows that the input word is changing, the preferred sense is number 3 of the verb, and this sense falls under the concept c-replacing in the hierarchy.</S>
    <S sid="403" ssid="5">This tagging was produced even though the parser was unable to construct a complete and correct syntactic representation of the text.</S>
    <S sid="404" ssid="6">In fact, when tested on the Wall Street Journal texts (for which there has been no adaptation or customization aside from processing by a company-name recognizer [Rau 19911), the system rarely produces a single correct parse; however, the partial parses produced generally cover most of the text at the clause level.</S>
    <S sid="405" ssid="7">Since most semantic preferences appear at this level (and those that do not, do not depend on syntactic analysis), the results of this tagging are encouraging.</S>
    <S sid="406" ssid="8">This example also shows some of the limitations of our system in practice.</S>
    <S sid="407" ssid="9">The system is unable to recognize the collocation &amp;quot;hold on to&amp;quot; in the first sentence, because it lacks a pattern for it.</S>
    <S sid="408" ssid="10">The system also lacks patterns for the collocations &amp;quot;vote on&amp;quot; and &amp;quot;all-time players&amp;quot; that occur in the second sentence, and as a result, mistakenly tags on as c-temporal-proximity-rel rather than something more appropriate, such as c-purpose-r el.</S>
    <S sid="409" ssid="11">These difficulties point out the need for even more knowledge.</S>
    <S sid="410" ssid="12">It is encouraging to note that, even if our encoding scheme is not entirely &amp;quot;correct&amp;quot; according to human intuition, as long as it is consistent, in theory it should lead to capabilities that are no worse, with zero customization, than word-based methods for information retrieval.</S>
    <S sid="411" ssid="13">However, having access to sense tags allows for easy improvement by more knowledge-intensive methods.</S>
    <S sid="412" ssid="14">Although this theory is still untested, there is some preliminary evidence that word sense tagging can improve information retrieval system performance (Krovetz 1989).</S>
    <S sid="413" ssid="15">To date we have been unable to get a meaningful quantitative assessment of the accuracy of the system's sense tagging.</S>
    <S sid="414" ssid="16">We made an unsuccessful attempt at evaluating the accuracy of sense-tagging over a corpus.</S>
    <S sid="415" ssid="17">First, we discovered that a human &amp;quot;expert&amp;quot; had great difficulty identifying each sense, and that this task was far more tedious than manual part-of-speech tagging or bracketing.</S>
    <S sid="416" ssid="18">Second, we questioned what we would learn from the evaluation of these partial results, and have since turned our attention back to evaluating the system with respect to some task, such as information retrieval.</S>
    <S sid="417" ssid="19">Improving the quality of our sense tagging requires a fair amount of straightforward but time-consuming work.</S>
    <S sid="418" ssid="20">This needed work includes filling a number of gaps in our knowledge sources.</S>
    <S sid="419" ssid="21">For example, the system needs much more information about role-related preferences and specialized semantic contexts.</S>
    <S sid="420" ssid="22">At present all this information is collected and coded by hand, although recent work by Ravin (1990) and Dahlgren, McDowell, and Stabler (1989) suggests that the collection of role-related information may be automatable.</S>
    <S sid="421" ssid="23">Our next step is to evaluate the effect of text coding on an information retrieval task, by applying traditional term-weighted statistical retrieval methods to the recoded text.</S>
    <S sid="422" ssid="24">One intriguing aspect of this approach is that errors in distinguishing sense preferences should not be too costly in this task, so long as the program is fairly consistent in its disambiguation of terms in both the source texts and the input queries.</S>
  </SECTION>
  <SECTION title="7." number="8">
    <S sid="423" ssid="1">Having access to a large amount of information and being able to use it effectively are essential for understanding unrestricted texts, such as newspaper articles.</S>
    <S sid="424" ssid="2">We have developed a substantial knowledge base for text processing, including a word sensebased lexicon that contains both core senses and dynamically triggered entries.</S>
    <S sid="425" ssid="3">We have also created a number of concept-cluster definitions describing common semantic contexts and a conceptual hierarchy that acts as a sense-disambiguated thesaurus.</S>
    <S sid="426" ssid="4">Our approach to word sense discrimination uses information drawn from the knowledge base and the structure of the text, combining the strongest, most obvious sense preferences created by syntactic tags, word frequencies, collocations, semantic context (clusters), selectional restrictions, and syntactic cues.</S>
    <S sid="427" ssid="5">To apply this information most efficiently, the approach introduces a preprocessing phase that uses preference information available prior to parsing to eliminate some of the lexical ambiguity and establish baseline preferences.</S>
    <S sid="428" ssid="6">Then, during parsing, the system combines the baseline preferences with preferences created by selectional restrictions and syntactic cues to identify preferred interpretations.</S>
    <S sid="429" ssid="7">The preference combination mechanism of the system uses dynamic measures of strength based on specificity, rather than relying on some fixed, ordered set of rules.</S>
    <S sid="430" ssid="8">There are some encouraging results from applying the system to sense tagging of arbitrary text.</S>
    <S sid="431" ssid="9">We expect to evaluate our approach on tasks in information retrieval, and, later, machine translation, to determine the likelihood of achieving substantive improvements through sense-based semantic analysis.</S>
  </SECTION>
  <SECTION title="Acknowledgments" number="9">
    <S sid="432" ssid="1">I am grateful to Paul Jacobs for his comments and his encouragement of my work on natural language processing at GE; to George Krupka for helping me integrate my work with TRUMP, and for continuing to improve the system; to Graeme Hirst for his many comments and suggestions on this article; and to Jan Wiebe and Evan Steeg for their comments on earlier drafts.</S>
    <S sid="433" ssid="2">I acknowledge the financial support of the General Electric Company, the University of Toronto, and the Natural Sciences and Engineering Research Council of Canada.</S>
  </SECTION>
</PAPER>
