<PAPER>
  <S sid="0">Corpus Statistics Meet The Noun Compound: Some Empirical Results</S>
  <ABSTRACT>
    <S sid="1" ssid="1">Tagged Dependency -.&#8212; Tagged Adjacency -e&#8212; L. Pattern 3 5 Training scheme (integers denote window widths) Figure 5: Accuracy using a tagged corpus for various training schemes data would make a difference, the freely available Brill tagger (Brill, 1993) was applied to the corpus.</S>
    <S sid="2" ssid="2">Since no manually tagged training data is available for our corpus, the tagger's default rules were used (these rules were produced by Brill by training on the Brown corpus).</S>
    <S sid="3" ssid="3">This results in rather poor tagging accuracy, so it is quite possible that a manually tagged corpus would produce better results.</S>
    <S sid="4" ssid="4">Three training schemes have been used and the tuned analysis procedures applied to the test set.</S>
    <S sid="5" ssid="5">Figure 5 shows the resulting accuracy, with accuracy values from figure 3 displayed with dotted lines.</S>
    <S sid="6" ssid="6">If anything, admitting additional training data based on the tagger introduces more noise, reducing the accuracy.</S>
    <S sid="7" ssid="7">However, for the pattern training scheme an improvement was made to the dependency model, producing the highest overall accuracy of 81%.</S>
    <S sid="8" ssid="8">4 Conclusion The experiments above demonstrate a number of important points.</S>
    <S sid="9" ssid="9">The most general of these is that even quite crude corpus statistics can provide information about the syntax of compound nouns.</S>
    <S sid="10" ssid="10">At the very least, this information can be applied in broad coverage parsing to assist in the control of search.</S>
    <S sid="11" ssid="11">I have also shown that with a corpus of moderate size it is possible to get reasonable results without using a tagger or parser by employing a customised training pattern.</S>
    <S sid="12" ssid="12">While using windowed co-occurrence did not help here, it is possible that under more data sparse conditions better performance could be achieved by this method.</S>
    <S sid="13" ssid="13">The significance of the use of conceptual association deserves some mention.</S>
    <S sid="14" ssid="14">I have argued that without it a broad coverage system would be impossible.</S>
    <S sid="15" ssid="15">This is in contrast to previous work on conceptual association where it resulted in little improvement on a task which could already be performed.</S>
    <S sid="16" ssid="16">In this study, not only has the technique proved its worth by supporting generality, but through generalisation of training information it outperforms the equivalent lexical association approach given the same information.</S>
    <S sid="17" ssid="17">Amongst all the comparisons performed in these experiments one stands out as exhibiting the greatest contrast.</S>
    <S sid="18" ssid="18">In all experiments the dependency model provides a substantial advantage over the adjacency model, even though the latter is more prevalent in proposals within the literature.</S>
    <S sid="19" ssid="19">This result is in accordance with the informal reasoning given in section 1.3.</S>
    <S sid="20" ssid="20">The model also has the further commendation that it predicts correctly the observed proportion of left-branching compounds found in two independently extracted test sets.</S>
    <S sid="21" ssid="21">In all, the most accurate technique achieved an accuracy of 81% as compared to the 67% achieved by guessing left-branching.</S>
    <S sid="22" ssid="22">Given the high frequency of occurrence of noun compounds in many texts, this suggests that the use of these techniques in probabilistic parsers will result in higher performance in broad coverage natural language processing.</S>
    <S sid="23" ssid="23">5 Acknowledgements This work has received valuable input from people too numerous to mention.</S>
    <S sid="24" ssid="24">The most significant contributions have been made by Richard Buckland, Robert Dale and Mark Dras.</S>
    <S sid="25" ssid="25">I am also indebted to Vance Gledhill, Mike Johnson, Philip Resnik, Richard Sproat, Wilco ter Stal, Lucy Vanderwende and Wobcke.</S>
    <S sid="26" ssid="26">Financial support is gratefully ack- 53 nowledged from the Microsoft Institute and the Australian Government.</S>
  </ABSTRACT>
  <SECTION title="1 Background" number="1">
    <S sid="27" ssid="1">If parsing is taken to be the first step in taming the natural language understanding task, then broad coverage NLP remains a jungle inhabited by wild beasts.</S>
    <S sid="28" ssid="2">For instance, parsing noun compounds appears to require detailed world knowledge that is unavailable outside a limited domain (Sparck Jones, 1983).</S>
    <S sid="29" ssid="3">Yet, far from being an obscure, endangered species, the noun compound is flourishing in modern language.</S>
    <S sid="30" ssid="4">It has already made five appearances in this paragraph and at least one diachronic study shows a veritable population explosion (Leonard, 1984).</S>
    <S sid="31" ssid="5">While substantial work on noun compounds exists in both linguistics (e.g.</S>
    <S sid="32" ssid="6">Levi, 1978; Ryder, 1994) and computational linguistics (Finin, 1980; McDonald, 1982; Isabelle, 1984), techniques suitable for broad coverage parsing remain unavailable.</S>
    <S sid="33" ssid="7">This paper explores the application of corpus statistics (Charniak, 1993) to noun compound parsing (other computational problems are addressed in Arens et al, 1987; Vanderwende, 1993 and Sproat, 1994).</S>
    <S sid="34" ssid="8">The task is illustrated in example 1: The parses assigned to these two compounds differ, even though the sequence of parts of speech are identical.</S>
    <S sid="35" ssid="9">The problem is analogous to the prepositional phrase attachment task explored in Hindle and Rooth (1993).</S>
    <S sid="36" ssid="10">The approach they propose involves computing lexical associations from a corpus and using these to select the correct parse.</S>
    <S sid="37" ssid="11">A similar architecture may be applied to noun compounds.</S>
    <S sid="38" ssid="12">In the experiments below the accuracy of such a system is measured.</S>
    <S sid="39" ssid="13">Comparisons are made across five dimensions: While Hindle and Rooth (1993) use a partial parser to acquire training data, such machinery appears unnecessary for noun compounds.</S>
    <S sid="40" ssid="14">Brent (1993) has proposed the use of simple word patterns for the acquisition of verb subcategorisation information.</S>
    <S sid="41" ssid="15">An analogous approach to compounds is used in Lauer (1994) and constitutes one scheme evaluated below.</S>
    <S sid="42" ssid="16">While such patterns produce false training examples, the resulting noise often only introduces minor distortions.</S>
    <S sid="43" ssid="17">A more I.beral alternative is the use of a cooccurrence window.</S>
    <S sid="44" ssid="18">Yarowsky (1992) uses a fixed 100 word window to collect information used for sense disambiguation.</S>
    <S sid="45" ssid="19">Similarly, Smadja (1993) uses a six content word window to extract significant collocations.</S>
    <S sid="46" ssid="20">A range of windowed training schemes are employed below.</S>
    <S sid="47" ssid="21">Importantly, the use of a window provides a natural means of trading off the amount of data against its quality.</S>
    <S sid="48" ssid="22">When data sparseness undermines the system accuracy, a wider window may admit a sufficient volume of extra accurate data to outweigh the additional noise.</S>
    <S sid="49" ssid="23">There are at least four existing corpus-based algorithms proposed for syntactically analysing noun compounds.</S>
    <S sid="50" ssid="24">Only two of these have been subjected to evaluation, and in each case, no comparison to any of the other three was performed.</S>
    <S sid="51" ssid="25">In fact all authors appear unaware of the other three proposals.</S>
    <S sid="52" ssid="26">I will therefore briefly describe these algorithms.</S>
    <S sid="53" ssid="27">Three of the algorithms use what I will call the ADJACENCY MODEL, an analysis procedure that goes back to Marcus (1980, p253).</S>
    <S sid="54" ssid="28">Therein, the procedure is stated in terms of calls to an oracle which can determine if a noun compound is acceptable.</S>
    <S sid="55" ssid="29">It is reproduced here for reference: Given three nouns n1, n2 and n3: Only more recently has it been suggested that corpus statistics might provide the oracle, and this idea is the basis of the three algorithms which use the adjacency model.</S>
    <S sid="56" ssid="30">The simplest of these is reported in Pustejovsky et al (1993).</S>
    <S sid="57" ssid="31">Given a three word compound, a search is conducted elsewhere in the corpus for each of the two possible subcomponents.</S>
    <S sid="58" ssid="32">Whichever is found is then chosen as the more closely bracketed pair.</S>
    <S sid="59" ssid="33">For example, when backup compiler disk is encountered, the analysis will be: The proposal of Liberman and Sproat (1992) is more sophisticated and allows for the frequency of the words in the compound.</S>
    <S sid="60" ssid="34">Their proposal involves comparing the mutual information between the two pairs of adjacent words and bracketing together whichever pair exhibits the highest.</S>
    <S sid="61" ssid="35">Again, there is no evaluation of the method other than a demonstration that four examples work correctly.</S>
    <S sid="62" ssid="36">The third proposal based on the adjacency model appears in Resnik (1993) and is rather more complex again.</S>
    <S sid="63" ssid="37">The SELECTIONAL ASSOCIATION between a predicate and a word is defined based on the contribution of the word to the conditional entropy of the predicate.</S>
    <S sid="64" ssid="38">The association between each pair of words in the compound is then computed by taking the maximum selectional association from all possible ways of regarding the pair as predicate and argument.</S>
    <S sid="65" ssid="39">Whilst this association metric is complicated, the decision procedure still follows the outline devised by Marcus (1980) above.</S>
    <S sid="66" ssid="40">Resnik (1993) used unambiguous noun compounds from the parsed Wall Street Journal (WSJ) corpus to estimate the association N alues and analysed a test set of around 160 compounds.</S>
    <S sid="67" ssid="41">After some tuning, the accuracy was about 73%, as compared with a baseline of 64% achieved by always bracketing the first two nouns together.</S>
    <S sid="68" ssid="42">The fourth algorithm, first described in Lauer (1994), differs in one striking manner from the other three.</S>
    <S sid="69" ssid="43">It uses what I will call the DEPENDENCY MODEL.</S>
    <S sid="70" ssid="44">This model utilises the following procedure when given three nouns ni, n2 and n3: Figure 1 shows a graphical comparison of the two analysis models.</S>
    <S sid="71" ssid="45">In Lauer (1994), the degree of acceptability is again provided by statistical measures over a corpus.</S>
    <S sid="72" ssid="46">The metric used is a mutual information-like measure based on probabilities of modification relationships.</S>
    <S sid="73" ssid="47">This is derived from the idea that parse trees capture the structure of semantic relationships within a noun compound.'</S>
    <S sid="74" ssid="48">The dependency model attempts to choose a parse which makes the resulting relationships as acceptable as possible.</S>
    <S sid="75" ssid="49">For example, when backup compiler disk is encountered, the analysis will be: I claim that the dependency model makes more intuitive sense for the following reason.</S>
    <S sid="76" ssid="50">Consider the compound calcium ion exchange, which is typically left-branching (that is, the first two words are bracketed together).</S>
    <S sid="77" ssid="51">There does not seem to be any reason why calcium ion should be any more frequent than ion exchange.</S>
    <S sid="78" ssid="52">Both are plausible compounds and regardless of the bracketing, ions are the object of an exchange.</S>
    <S sid="79" ssid="53">Instead, the correct parse depends on whether calcium characterises the ions or mediates the exchange.</S>
    <S sid="80" ssid="54">Another significant difference between the models is the predictions they make about the proportion 'Lauer and Dras (1994) give a formal construction motivating the algorithm given in Lauer (1994). of left and right-branching compounds.</S>
    <S sid="81" ssid="55">Lauer and Dras (1994) show that under a dependency model, left-branching compounds should occur twice as often as right-branching compounds (that is twothirds of the time).</S>
    <S sid="82" ssid="56">In the test set used here and in that of Resnik (1993), the proportion of leftbranching compounds is 67% and 64% respectively.</S>
    <S sid="83" ssid="57">In contrast, the adjacency model appears to predict a proportion of 50%.</S>
    <S sid="84" ssid="58">The dependency model has also been proposed by Kobayasi et al (1994) for analysing Japanese noun compounds, apparently independently.</S>
    <S sid="85" ssid="59">Using a corpus to acquire associations, they bracket sequences of Kanji with lengths four to six (roughly equivalent to two or three words).</S>
    <S sid="86" ssid="60">A simple calculation shows that using their own preprocessing hueristics to guess a bracketing provides a higher accuracy on their test set than their statistical model does.</S>
    <S sid="87" ssid="61">This renders their experiment inconclusive.</S>
  </SECTION>
  <SECTION title="2 Method" number="2">
    <S sid="88" ssid="1">A test set of syntactically ambiguous noun compounds was extracted from our 8 million word Grolier's encyclopedia corpus in the following way.2 Because the corpus is not tagged or parsed, a somewhat conservative strategy of looking for unambiguous sequences of nouns was used.</S>
    <S sid="89" ssid="2">To distinguish nouns from other words, the University of Pennsylvania morphological analyser (described in Karp et al, 1992) was used to generate the set of words that can only be used as nouns (I shall henceforth call this set A).</S>
    <S sid="90" ssid="3">All consecutive sequences of these words were extracted, and the three word sequences used to form the test set.</S>
    <S sid="91" ssid="4">For reasons made clear below, only sequences consisting entirely of words from Roget's thesaurus were retained, giving a total of 308 test triples.3 These triples were manually analysed using as context the entire article in which they appeared.</S>
    <S sid="92" ssid="5">In some cases, the sequence was not a noun compound (nouns can appear adjacent to one another across various constituent boundaries) and was marked as an error.</S>
    <S sid="93" ssid="6">Other compounds exhibited what Hindle and Rooth (1993) have termed SEMANTIC INDETERMINACY where the two possible bracketings cannot be distinguished in the context.</S>
    <S sid="94" ssid="7">The remaining compounds were assigned either a left-branching or right-branching analysis.</S>
    <S sid="95" ssid="8">Table 1 shows the number of each kind and an example of each.</S>
    <S sid="96" ssid="9">Accuracy figures in all the results reported below were computed using only those 244 compounds which received a parse.</S>
    <S sid="97" ssid="10">One problem with applying lexical association to noun compounds is the enormous number of parameters required, one for every possible pair of nouns.</S>
    <S sid="98" ssid="11">Not only does this require a vast amount of memory space, it creates a severe data sparseness problem since we require at least some data about each parameter.</S>
    <S sid="99" ssid="12">Resnik and Hearst (1993) coined the term CONCEPTUAL ASSOCIATION to refer to association values computed between groups of words.</S>
    <S sid="100" ssid="13">By assuming that all words within a group behave similarly, the parameter space can be built in terms of the groups rather than in terms of the words.</S>
    <S sid="101" ssid="14">In this study, conceptual association is used with groups consisting of all categories from the 1911 version of Roget's thesaurus.4 Given two thesaurus categories t1 and t2, there is a parameter which represents the degree of acceptability of the structure [n1n2j where ni is a noun appearing in t1 and n2 appears in t2.</S>
    <S sid="102" ssid="15">By the assumption that words within a group behave similarly, this is constant given the two categories.</S>
    <S sid="103" ssid="16">Following Lauer and Dras (1994) we can formally write this parameter as Pr(ti &#8212;.12) where the event ti t2 denotes the modification of a noun in t2 by a noun in t1.</S>
    <S sid="104" ssid="17">To ensure that the test set is disjoint from the training data, all occurrences of the test noun compounds have been removed from the training corpus.</S>
    <S sid="105" ssid="18">Two types of training scheme are explored in this study, both unsupervised.</S>
    <S sid="106" ssid="19">The first employs a pattern that follows Pustejovsky (1993) in counting the occurrences of subcomponents.</S>
    <S sid="107" ssid="20">A training instance is any sequence of four words w1w2w3w4 where tv1,1v4 Ar and w2, w3 E Ar.</S>
    <S sid="108" ssid="21">Let countp(ni, n2) be the number of times a sequence w1n1n2w4 occurs in the training corpus with wi, tv4 H. The second type uses a window to collect training instances by observing how often a pair of nouns cooccur within some fixed number of words.</S>
    <S sid="109" ssid="22">In this study, a variety of window sizes are used.</S>
    <S sid="110" ssid="23">For n &gt; 2, let countn(ni , n2) be the number of times a sequence niwi win2 occurs in the training corpus where i &lt; n &#8212; 2.</S>
    <S sid="111" ssid="24">Note that windowed counts are asymmetric.</S>
    <S sid="112" ssid="25">In the case of a window two words wide, this yields the mutual information metric proposed by Liberman and Sproat (1992).</S>
    <S sid="113" ssid="26">Using each of these different training schemes to arrive at appropriate counts it is then possible to estimate the parameters.</S>
    <S sid="114" ssid="27">Since these are expressed in terms of categories rather than words, it is necessary to combine the counts of words to arrive at estimates.</S>
    <S sid="115" ssid="28">In all cases the estimates used are: Here ambig(w) is the number of categories in which w appears.</S>
    <S sid="116" ssid="29">It has the effect of dividing the evidence from a training instance across all possible categories for the words.</S>
    <S sid="117" ssid="30">The normaliser ensures that all parameters for a head noun sum to unity.</S>
    <S sid="118" ssid="31">Given the high level descriptions in section 1.3 it remains only to formalise the decision process used to analyse a noun compound.</S>
    <S sid="119" ssid="32">Each test compound presents a set of possible analyses and the goal is to choose which analysis is most likely.</S>
    <S sid="120" ssid="33">For three word compounds it suffices to compute the ratio of two probabilities, that of a left-branching analysis and that of a right-branching one.</S>
    <S sid="121" ssid="34">If this ratio is greater than unity, then the left-branching analysis is chosen.</S>
    <S sid="122" ssid="35">When it is less than unity, a right-branching analysis is chosen.5 If the ratio is exactly unity, the analyser guesses left-branching, although this is fairly rare for conceptual association as shown by the experimental results below.</S>
    <S sid="123" ssid="36">For the adjacency model, when the given compound is w1w2w3, we can estimate this ratio as: In both cases, we sum over all possible categories for the words in the compound.</S>
    <S sid="124" ssid="37">Because the dependency model equations have two factors, they are affected more severely by data sparseness.</S>
    <S sid="125" ssid="38">If the probability estimate for Pr(t2 t9 is zero for all possible categories 12 and 13 then both the numerator and the denominator will be zero.</S>
    <S sid="126" ssid="39">This will conceal any preference given by the parameters involving 11.</S>
    <S sid="127" ssid="40">In such cases, we observe that the test instance itself provides the information that the event 12 t3 can occur and we recalculate the ratio using Pr(12 19 = Jr for all possible categories 12,13 where k is any non-zero constant.</S>
    <S sid="128" ssid="41">However, no correction is made to the probability estimates for Pr(ti t2) and Pr(ti 13) for unseen cases, thus putting the dependency model on an equal footing with the adjacency model above.</S>
    <S sid="129" ssid="42">The equations presented above for the dependency model differ from those developed in Lauer and Dras (1994) in one way.</S>
    <S sid="130" ssid="43">There, an additional weighting factor (of 2.0) is used to favour a left-branching analysis.</S>
    <S sid="131" ssid="44">This arises because their construction is based on the dependency model which predicts that left-branching analyses should occur twice as often.</S>
    <S sid="132" ssid="45">Also, the work reported in Lauer and Dras (1994) uses simplistic estimates of the probability of a word given its thesaurus category.</S>
    <S sid="133" ssid="46">The equations above assume these probabilities are uniformly constant.</S>
    <S sid="134" ssid="47">Section 3.2 below shows the result of making these two additions to the method.</S>
  </SECTION>
  <SECTION title="3 Results" number="3">
    <S sid="135" ssid="1">Eight different training schemes have been used to estimate the parameters and each set of estimates used to analyse the test set under both the adjacency and the dependency model.</S>
    <S sid="136" ssid="2">The schemes used are: The accuracy on the test set for all these experiments is shown in figure 2.</S>
    <S sid="137" ssid="3">As can be seen, the dependency model is more accurate than the adjacency model.</S>
    <S sid="138" ssid="4">This is true across the whole spectrum of training schemes.</S>
    <S sid="139" ssid="5">The proportion of cases in which the procedure was forced to guess, either because no data supported either analysis or because both were equally supported, is quite low.</S>
    <S sid="140" ssid="6">For the pattern and two-word window training schemes, the guess rate is less than 4% for both models.</S>
    <S sid="141" ssid="7">In the three-word window training scheme, the guess rates are less than 1%.</S>
    <S sid="142" ssid="8">For all larger windows, neither model is ever forced to guess.</S>
    <S sid="143" ssid="9">In the case of the pattern training scheme, the difference between 68.9% for adjacency and 77.5% for dependency is statistically significant at the 5% level (p = 0.0316), demonstrating the superiority of the dependency model, at least for the compounds within Grolier's encyclopedia.</S>
    <S sid="144" ssid="10">In no case do any of the windowed training schemes outperform the pattern scheme.</S>
    <S sid="145" ssid="11">It seems that additional instances admitted by the windowed schemes are too noisy to make an improvement.</S>
    <S sid="146" ssid="12">Initial results from applying these methods to the EMA corpus have been obtained by Wilco ter Stal (1995), and support the conclusion that the dependency model is superior to the adjacency model.</S>
    <S sid="147" ssid="13">Lauer and Dras (1994) suggest two improvements to the method used above.</S>
    <S sid="148" ssid="14">These are: tion in the probability of categories.</S>
    <S sid="149" ssid="15">While these changes are motivated by the dependency model, I have also applied them to the adjacency model for comparison.</S>
    <S sid="150" ssid="16">To implement them, equations 1 and 2 must be modified to incorporate a factor of in each term of the sum and the l 1 td1t2iissi entire ratio must be multiplied by two.</S>
    <S sid="151" ssid="17">Five training schemes have been applied with these extensions.</S>
    <S sid="152" ssid="18">The accuracy results are shown in figure 3.</S>
    <S sid="153" ssid="19">For comparison, the untuned accuracy figures are shown with dotted lines.</S>
    <S sid="154" ssid="20">A marked improvement is observed for the adjacency model, while the dependency model is only slightly improved.</S>
    <S sid="155" ssid="21">To determine the difference made by conceptual association, the pattern training scheme has been retrained using lexical counts for both the dependency and adjacency model, but only for the words in the test set.</S>
    <S sid="156" ssid="22">If the same system were to be applied across all of Ar (a total of 90,000 nouns), then around 8.1 billion parameters would be required.</S>
    <S sid="157" ssid="23">Left-branching is favoured by a factor of two as described in the previous section, but no estimates for the category probabilities are used (these being meaningless for the lexical association method).</S>
    <S sid="158" ssid="24">Accuracy and guess rates are shown in figure 4.</S>
    <S sid="159" ssid="25">Conceptual association outperforms lexical association, presumably because of its ability to generalise.</S>
    <S sid="160" ssid="26">One problem with the training methods given in section 2.3 is the restriction of training data to nouns in H. Many nouns, especially common ones, have verbal or adjectival usages that preclude them from being in N. Yet when they occur as nouns, they still provide useful training information that the current system ignores.</S>
    <S sid="161" ssid="27">To test whether using tagged data would make a difference, the freely available Brill tagger (Brill, 1993) was applied to the corpus.</S>
    <S sid="162" ssid="28">Since no manually tagged training data is available for our corpus, the tagger's default rules were used (these rules were produced by Brill by training on the Brown corpus).</S>
    <S sid="163" ssid="29">This results in rather poor tagging accuracy, so it is quite possible that a manually tagged corpus would produce better results.</S>
    <S sid="164" ssid="30">Three training schemes have been used and the tuned analysis procedures applied to the test set.</S>
    <S sid="165" ssid="31">Figure 5 shows the resulting accuracy, with accuracy values from figure 3 displayed with dotted lines.</S>
    <S sid="166" ssid="32">If anything, admitting additional training data based on the tagger introduces more noise, reducing the accuracy.</S>
    <S sid="167" ssid="33">However, for the pattern training scheme an improvement was made to the dependency model, producing the highest overall accuracy of 81%.</S>
  </SECTION>
  <SECTION title="4 Conclusion" number="4">
    <S sid="168" ssid="1">The experiments above demonstrate a number of important points.</S>
    <S sid="169" ssid="2">The most general of these is that even quite crude corpus statistics can provide information about the syntax of compound nouns.</S>
    <S sid="170" ssid="3">At the very least, this information can be applied in broad coverage parsing to assist in the control of search.</S>
    <S sid="171" ssid="4">I have also shown that with a corpus of moderate size it is possible to get reasonable results without using a tagger or parser by employing a customised training pattern.</S>
    <S sid="172" ssid="5">While using windowed co-occurrence did not help here, it is possible that under more data sparse conditions better performance could be achieved by this method.</S>
    <S sid="173" ssid="6">The significance of the use of conceptual association deserves some mention.</S>
    <S sid="174" ssid="7">I have argued that without it a broad coverage system would be impossible.</S>
    <S sid="175" ssid="8">This is in contrast to previous work on conceptual association where it resulted in little improvement on a task which could already be performed.</S>
    <S sid="176" ssid="9">In this study, not only has the technique proved its worth by supporting generality, but through generalisation of training information it outperforms the equivalent lexical association approach given the same information.</S>
    <S sid="177" ssid="10">Amongst all the comparisons performed in these experiments one stands out as exhibiting the greatest contrast.</S>
    <S sid="178" ssid="11">In all experiments the dependency model provides a substantial advantage over the adjacency model, even though the latter is more prevalent in proposals within the literature.</S>
    <S sid="179" ssid="12">This result is in accordance with the informal reasoning given in section 1.3.</S>
    <S sid="180" ssid="13">The model also has the further commendation that it predicts correctly the observed proportion of left-branching compounds found in two independently extracted test sets.</S>
    <S sid="181" ssid="14">In all, the most accurate technique achieved an accuracy of 81% as compared to the 67% achieved by guessing left-branching.</S>
    <S sid="182" ssid="15">Given the high frequency of occurrence of noun compounds in many texts, this suggests that the use of these techniques in probabilistic parsers will result in higher performance in broad coverage natural language processing.</S>
  </SECTION>
  <SECTION title="5 Acknowledgements" number="5">
    <S sid="183" ssid="1">This work has received valuable input from people too numerous to mention.</S>
    <S sid="184" ssid="2">The most significant contributions have been made by Richard Buckland, nowledged from the Microsoft Institute and the Australian Government.</S>
  </SECTION>
</PAPER>
