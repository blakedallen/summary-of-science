<PAPER>
  <S sid="0">Generating Phrasal and Sentential Paraphrases: A Survey of Data-Driven Methods</S>
  <ABSTRACT>
    <S sid="1" ssid="1">The task of paraphrasing is inherently familiar to speakers of all languages.</S>
    <S sid="2" ssid="2">Moreover, the task of automatically generating or extracting semantic equivalences for the various units of language&#8212; words, phrases, and sentences&#8212;is an important part of natural language processing (NLP) and is being increasingly employed to improve the performance of several NLP applications.</S>
    <S sid="3" ssid="3">In this article, we attempt to conduct a comprehensive and application-independent survey of data-driven phrasal and sentential paraphrase generation methods, while also conveying an appreciation for the importance and potential use of paraphrases in the field of NLP research.</S>
    <S sid="4" ssid="4">Recent work done in manual and automatic construction of paraphrase corpora is also examined.</S>
    <S sid="5" ssid="5">We also discuss the strategies used for evaluating paraphrase generation techniques and briefly explore some future trends in paraphrase generation.</S>
  </ABSTRACT>
  <SECTION title="" number="1">
    <S sid="6" ssid="1">The task of paraphrasing is inherently familiar to speakers of all languages.</S>
    <S sid="7" ssid="2">Moreover, the task of automatically generating or extracting semantic equivalences for the various units of language&#8212; words, phrases, and sentences&#8212;is an important part of natural language processing (NLP) and is being increasingly employed to improve the performance of several NLP applications.</S>
    <S sid="8" ssid="3">In this article, we attempt to conduct a comprehensive and application-independent survey of data-driven phrasal and sentential paraphrase generation methods, while also conveying an appreciation for the importance and potential use of paraphrases in the field of NLP research.</S>
    <S sid="9" ssid="4">Recent work done in manual and automatic construction of paraphrase corpora is also examined.</S>
    <S sid="10" ssid="5">We also discuss the strategies used for evaluating paraphrase generation techniques and briefly explore some future trends in paraphrase generation.</S>
  </SECTION>
  <SECTION title="1." number="2">
    <S sid="11" ssid="1">Although everyone may be familiar with the notion of paraphrase in its most fundamental sense, there is still room for elaboration on how paraphrases may be automatically generated or elicited for use in language processing applications.</S>
    <S sid="12" ssid="2">In this survey, we make an attempt at such an elaboration.</S>
    <S sid="13" ssid="3">An important outcome of this survey is the discovery that there are a large variety of paraphrase generation methods, each with widely differing sets of characteristics, in terms of performance as well as ease of deployment.</S>
    <S sid="14" ssid="4">We also find that although many paraphrase methods are developed with a particular application in mind, all methods share the potential for more general applicability.</S>
    <S sid="15" ssid="5">Finally, we observe that the choice of the most appropriate method for an application depends on proper matching of the characteristics of the produced paraphrases with an appropriate method.</S>
    <S sid="16" ssid="6">It could be argued that it is premature to survey an area of research that has shown promise but has not yet been tested for a long enough period (and in enough systems).</S>
    <S sid="17" ssid="7">However, we believe this argument actually strengthens the motivation for a survey that can encourage the community to use paraphrases by providing an applicationindependent, cohesive, and condensed discussion of data-driven paraphrase generation techniques.</S>
    <S sid="18" ssid="8">We should also acknowledge related work that has been done on furthering the community&#8217;s understanding of paraphrases.</S>
    <S sid="19" ssid="9">Hirst (2003) presents a comprehensive survey of paraphrasing focused on a deep analysis of the nature of a paraphrase.</S>
    <S sid="20" ssid="10">The current survey focuses instead on delineating the salient characteristics of the various paraphrase generation methods with an emphasis on describing how they could be used in several different NLP applications.</S>
    <S sid="21" ssid="11">Both these treatments provide different but valuable perspectives on paraphrasing.</S>
    <S sid="22" ssid="12">The remainder of this section formalizes the concept of a paraphrase, scopes out the coverage of this survey&#8217;s discussion, and provides broader context and motivation by discussing applications in which paraphrase generation has proven useful, along with examples.</S>
    <S sid="23" ssid="13">Section 2 briefly describes the tasks of paraphrase recognition and textual entailment and their relationship to paraphrase generation and extraction.</S>
    <S sid="24" ssid="14">Section 3 forms the major contribution of this survey by examining various corpora-based techniques for paraphrase generation, organized by corpus type.</S>
    <S sid="25" ssid="15">Section 4 examines recent work done to construct various types of paraphrase corpora and to elicit human judgments for such corpora.</S>
    <S sid="26" ssid="16">Section 5 considers the task of evaluating the performance of paraphrase generation and extraction techniques.</S>
    <S sid="27" ssid="17">Finally, Section 6 provides a brief glimpse of the future trends in paraphrase generation and Section 7 concludes the survey with a summary.</S>
    <S sid="28" ssid="18">The concept of paraphrasing is most generally defined on the basis of the principle of semantic equivalence: A paraphrase is an alternative surface form in the same language expressing the same semantic content as the original form.</S>
    <S sid="29" ssid="19">Paraphrases may occur at several levels.</S>
    <S sid="30" ssid="20">Individual lexical items having the same meaning are usually referred to as lexical paraphrases or, more commonly, synonyms, for example, (hot, warm) and (eat, consume).</S>
    <S sid="31" ssid="21">However, lexical paraphrasing cannot be restricted strictly to the concept of synonymy.</S>
    <S sid="32" ssid="22">There are several other forms such as hyperonymy, where one of the words in the paraphrastic relationship is either more general or more specific than the other, for example, (reply, say) and (landlady, hostess).</S>
    <S sid="33" ssid="23">The term phrasal paraphrase refers to phrasal fragments sharing the same semantic content.</S>
    <S sid="34" ssid="24">Although these fragments most commonly take the form of syntactic phrases ((work on, soften up) and (take over, assume control of)) they may also be patterns with linked variables, for example, (Y was built by X, X is the creator of Y).</S>
    <S sid="35" ssid="25">Two sentences that represent the same semantic content are termed sentential paraphrases, for example, (I finished my work, I completed my assignment).</S>
    <S sid="36" ssid="26">Although it is possible to generate very simple sentential paraphrases by simply substituting words and phrases in the original sentence with their respective semantic equivalents, it is significantly more difficult to generate more interesting ones such as (He needed to make a quick decision in that situation, The scenario required him to make a split-second judgment).</S>
    <S sid="37" ssid="27">Culicover (1968) describes some common forms of sentential paraphrases.</S>
    <S sid="38" ssid="28">The idea of paraphrasing has been explored in conjunction with, and employed in, a large number of natural language processing applications.</S>
    <S sid="39" ssid="29">Given the difficulty inherent in surveying such a diverse task, an unfortunate but necessary remedy is to impose certain limits on the scope of our discussion.</S>
    <S sid="40" ssid="30">In this survey, we will be restricting our discussion to only automatic acquisition of phrasal paraphrases (including paraphrastic patterns) and on generation of sentential paraphrases.</S>
    <S sid="41" ssid="31">More specifically, this entails the exclusion of certain categories of paraphrasing work.</S>
    <S sid="42" ssid="32">However, as a compromise for the interested reader, we do include a relatively comprehensive list of references in this section for the work that is excluded from the survey.</S>
    <S sid="43" ssid="33">For one, we do not discuss paraphrasing techniques that rely primarily on knowledge-based resources such as dictionaries (Wallis 1993; Fujita et al. 2004), handwritten rules (Fujita et al.</S>
    <S sid="44" ssid="34">2007), and formal grammars (McKeown 1979; Dras 1999; Gardent, Amoia, and Jacquey 2004; Gardent and Kow 2005).</S>
    <S sid="45" ssid="35">We also refrain from discussing work on purely lexical paraphrasing which usually comprises various ways to cluster words occurring in similar contexts (Inoue 1991; Crouch and Yang 1992; Pereira, Tishby, and Lee 1993; Grefenstette 1994; Lin 1998; Gasperin et al. 2001; Glickman and Dagan 2003; Shimohata and Sumita 2005).1 Exclusion of general lexical paraphrasing methods obviously implies that other lexical methods developed just for specific applications are also excluded (Bangalore and Rambow 2000; Duclaye, Yvon, and Collin 2003; Murakami and Nasukawa 2004; Kauchak and Barzilay 2006).</S>
    <S sid="46" ssid="36">Methods at the other end of the spectrum that paraphrase supra-sentential units such as paragraphs and entire documents are also omitted from discussion (Hovy 1988; Inui and Nogami 2001; Hallett and Scott 2005; Power and Scott 2005).</S>
    <S sid="47" ssid="37">Finally, we also do not discuss the notion of near-synonymy (Hirst 1995; Edmonds and Hirst 2002).</S>
    <S sid="48" ssid="38">Before describing the techniques used for paraphrasing, it is essential to examine the broader context of the application of paraphrases.</S>
    <S sid="49" ssid="39">For some of the applications we discuss subsequently, the use of paraphrases in the manner described may not yet be the norm.</S>
    <S sid="50" ssid="40">However, wherever applicable, we cite recent research that promises gains in performance by using paraphrases for these applications.</S>
    <S sid="51" ssid="41">Also note that we only discuss those paraphrasing techniques that can generate the types of paraphrases under examination in this survey: phrasal and sentential.</S>
    <S sid="52" ssid="42">1.3.1 Query and Pattern Expansion.</S>
    <S sid="53" ssid="43">One of the most common applications of paraphrasing is the automatic generation of query variants for submission to information retrieval systems or of patterns for submission to information extraction systems.</S>
    <S sid="54" ssid="44">Culicover (1968) describes one of the earliest theoretical frameworks for query keyword expansion using paraphrases.</S>
    <S sid="55" ssid="45">One of the earliest works to implement this approach (Sp&#168;arckJones and Tait 1984) generates several simple variants for compound nouns in queries submitted to a technical information retrieval system.</S>
    <S sid="56" ssid="46">For example: Original : circuit details Variant 1 : details about the circuit Variant 2 : the details of circuits 1 Inferring words to be similar based on similar contexts can be thought of as the most common instance of employing distributional similarity.</S>
    <S sid="57" ssid="47">The concept of distributional similarity also turns out to be quite important for phrasal paraphrase generation and is discussed in more detail in Section 3.1. these techniques is usually effected by utilizing the query log (a log containing the record of all queries submitted to the system) to determine semantic similarity.</S>
    <S sid="58" ssid="48">Jacquemin (1999) generates morphological, syntactic, and semantic variants for phrases in the agricultural domain.</S>
    <S sid="59" ssid="49">For example: Original: simultaneous measurements Variant: concurrent measures Original: development area Variant: area of growth Ravichandran and Hovy (2002) use semi-supervised learning to induce several paraphrastic patterns for each question type and use them in an open-domain question answering system.</S>
    <S sid="60" ssid="50">For example, for the INVENTOR question type, they generate: Riezler et al. (2007) expand a query by generating n-best paraphrases for the query (via a pivot-based sentential paraphrasing model employing bilingual parallel corpora, detailed in Section 3) and then using any new words introduced therein as additional query terms.</S>
    <S sid="61" ssid="51">For example, for the query how to live with cat allergies, they may generate the following two paraphrases.</S>
    <S sid="62" ssid="52">The novel words in the two paraphrases are highlighted in bold and are used to expand the original query: Finally, paraphrases have also been used to improve the task of relation extraction (Romano et al. 2006).</S>
    <S sid="63" ssid="53">Most recently, Bhagat and Ravichandran (2008) collect paraphrastic patterns for relation extraction by applying semi-supervised paraphrase induction to a very large monolingual corpus.</S>
    <S sid="64" ssid="54">For example, for the relation of &#8220;acquisition,&#8221; they collect: task for a given set of data and using the output so created as a reference against which to measure the performance of the system.</S>
    <S sid="65" ssid="55">The two applications where comparison against human-authored reference output has become the norm are machine translation and document summarization.</S>
    <S sid="66" ssid="56">In machine translation evaluation, the translation hypotheses output by a machine translation system are evaluated against reference translations created by human translators by measuring the n-gram overlap between the two (Papineni et al. 2002).</S>
    <S sid="67" ssid="57">However, it is impossible for a single reference translation to capture all possible verbalizations that can convey the same semantic content.</S>
    <S sid="68" ssid="58">This may unfairly penalize translation hypotheses that have the same meaning but use n-grams that are not present in the reference.</S>
    <S sid="69" ssid="59">For example, the given system output S will not have a high score against the reference R even though it conveys precisely the same semantic content: S: We must consider the entire community.</S>
    <S sid="70" ssid="60">R: We must bear in mind the community as a whole.</S>
    <S sid="71" ssid="61">One solution is to use multiple reference translations, which is expensive.</S>
    <S sid="72" ssid="62">An alternative solution, tried in a number of recent approaches, is to address this issue by allowing the evaluation process to take into account paraphrases of phrases in the reference translation so as to award credit to parts of the translation hypothesis that are semantically, even if not lexically, correct (Owczarzak et al. 2006; Zhou, Lin, and Hovy 2006).</S>
    <S sid="73" ssid="63">In evaluation of document summarization, automatically generated summaries (peers) are also evaluated against reference summaries created by human authors (models).</S>
    <S sid="74" ssid="64">Zhou et al. (2006) propose a new metric called ParaEval that leverages an automatically extracted database of phrasal paraphrases to inform the computation of n-gram overlap between peer summaries and multiple model summaries.</S>
    <S sid="75" ssid="65">1.3.3 Machine Translation.</S>
    <S sid="76" ssid="66">Besides being used in evaluation of machine translation systems, paraphrasing has also been applied to directly improve the translation process.</S>
    <S sid="77" ssid="67">Callison-Burch, Koehn, and Osborne (2006) use automatically induced paraphrases to improve a statistical phrase-based machine translation system.</S>
    <S sid="78" ssid="68">Such a system works by dividing the given sentence into phrases and translating each phrase individually by looking up its translation in a table.</S>
    <S sid="79" ssid="69">The coverage of the translation system is improved by allowing any source phrase that does not have a translation in the table to use the translation of one of its paraphrases.</S>
    <S sid="80" ssid="70">For example, if a given Spanish sentence contains the phrase presidente de Brazil but the system does not have a translation for it, another Spanish phrase such as presidente brasile&#732;no may be automatically detected as a paraphrase of presidente de Brazil; then if the translation table contains a translation for the paraphrase, the system can use the same translation for the given phrase.</S>
    <S sid="81" ssid="71">Therefore, paraphrasing allows the translation system to properly handle phrases that it does not otherwise know how to translate.</S>
    <S sid="82" ssid="72">Another important issue for statistical machine translation systems is that of reference sparsity.</S>
    <S sid="83" ssid="73">The fundamental problem that translation systems have to face is that there is no such thing as the correct translation for any sentence.</S>
    <S sid="84" ssid="74">In fact, any given source sentence can often be translated into the target language in many valid ways.</S>
    <S sid="85" ssid="75">Because there can be many &#8220;correct answers,&#8221; almost all models employed by SMT systems require, in addition to a large bitext, a held-out development set comprising multiple high-quality, human-authored reference translations in the target language in order to tune their parameters relative to a translation quality metric.</S>
    <S sid="86" ssid="76">However, given the time and cost implications of such a process, most such data sets usually have only a single reference translation.</S>
    <S sid="87" ssid="77">Madnani et al. (2007, 2008b) generate sentential paraphrases and use them to expand the available reference translations for such sets so that the machine translation system can learn a better set of system parameters.</S>
  </SECTION>
  <SECTION title="2." number="3">
    <S sid="88" ssid="1">A problem closely related to, and as important as, generating paraphrases is that of assigning a quantitative measurement to the semantic similarity of two phrases (Fujita and Sato 2008a) or even two given pieces of text (Corley and Mihalcea 2005; Uzuner and Katz 2005).</S>
    <S sid="89" ssid="2">A more complex formulation of the task would be to detect or recognize which sentences in the two texts are paraphrases of each other (Brockett and Dolan 2005; Marsi and Krahmer 2005a; Wu 2005; Jo`ao, Das, and Pavel 2007a, 2007b; Das and Smith 2009; Malakasiotis 2009).</S>
    <S sid="90" ssid="3">Both of these task formulations fall under the category of paraphrase detection or recognition.</S>
    <S sid="91" ssid="4">The latter formulation of the task has become popular in recent years (Dolan and Dagan 2005) and paraphrase generation techniques that require monolingual parallel or comparable corpora (discussed in Section 3) can benefit immensely from this task.</S>
    <S sid="92" ssid="5">In general, paraphrase recognition can be very helpful for several NLP applications.</S>
    <S sid="93" ssid="6">Two examples of such applications are text-to-text generation and information extraction.</S>
    <S sid="94" ssid="7">Text-to-text generation applications rely heavily on paraphrase recognition.</S>
    <S sid="95" ssid="8">For a multi-document summarization system, detecting redundancy is a very important concern because two sentences from different documents may convey the same semantic content and it is important not to repeat the same information in the summary.</S>
    <S sid="96" ssid="9">On this note, Barzilay and McKeown (2005) exploit the redundancy present in a given set of sentences by detecting paraphrastic parts and fusing them into a single coherent sentence.</S>
    <S sid="97" ssid="10">Recognizing similar semantic content is also critical for text simplification systems (Marsi and Krahmer 2005b).</S>
    <S sid="98" ssid="11">Information extraction enables the detection of regularities of information structure&#8212;events which are reported many times, about different individuals and in different forms&#8212;and making them explicit so that they can be processed and used in other ways.</S>
    <S sid="99" ssid="12">Sekine (2006) shows how to use paraphrase recognition to cluster together extraction patterns to improve the cohesion of the extracted information.</S>
    <S sid="100" ssid="13">Another recently proposed natural language processing task is that of recognizing textual entailment: A piece of text T is said to entail a hypothesis H if humans reading T will infer that H is most likely true.</S>
    <S sid="101" ssid="14">The observant reader will notice that, in this sense, the task of paraphrase recognition can simply be formulated as bidirectional entailment recognition.</S>
    <S sid="102" ssid="15">The task of recognizing entailment is an application-independent task and has important ramifications for almost all other language processing tasks that can derive benefit from some form of applied semantic inference.</S>
    <S sid="103" ssid="16">For this reason, the task has received noticeable attention in the research community and annual communitywide evaluations of entailment systems have been held in the form of the Recognizing Textual Entailment (RTE) Challenges (Dagan, Glickman, and Magnini 2006; Bar-Haim et al. 2007; Sekine et al.</S>
    <S sid="104" ssid="17">2007; Giampiccolo et al. 2008).</S>
    <S sid="105" ssid="18">Looking towards the future, Dagan (2008) suggests that the textual entailment task provides a comprehensive framework for semantic inference and argues for building a concrete inference engine that not only recognizes entailment but also searches for all entailing texts given an entailment hypothesis H and, conversely, generates all entailed statements given a text T. Given such an engine, Dagan claims that paraphrase generation is simply a matter of generating all entailed statements given any sentence.</S>
    <S sid="106" ssid="19">Although this is a very attractive proposition that defines both paraphrase generation and recognition in terms of textual entailment, there are some important caveats.</S>
    <S sid="107" ssid="20">For example, textual entailment cannot guarantee that the entailed hypothesis H captures all of the same meaning as the given text T. Consider the following example: Although both H1 and H2 are entailed by T, they are not strictly paraphrases of T because some of the semantic content has not been carried over.</S>
    <S sid="108" ssid="21">This must be an important consideration when building the proposed entailment engine.</S>
    <S sid="109" ssid="22">Of course, even these approximately semantically equivalent constructions may prove useful in an appropriate downstream application.</S>
    <S sid="110" ssid="23">The relationship between paraphrasing and entailment is more tightly entwined than it might appear.</S>
    <S sid="111" ssid="24">Entailment recognition systems sometimes rely on the use of paraphrastic templates or patterns as inputs (Iftene 2009) and might even use paraphrase recognition to improve their performance (Bosma and Callison-Burch 2007).</S>
    <S sid="112" ssid="25">In fact, examination of some RTE data sets in an attempt to quantitatively determine the presence of paraphrases has shown that a large percentage of the set consists of paraphrases rather than typical entailments (Bayer et al. 2005; Garoufi 2007).</S>
    <S sid="113" ssid="26">It has also been observed that, in the entailment challenges, it is relatively easy for submitted systems to recognize constructions that partially overlap in meaning (approximately paraphrastic) from those that are actually bound by an entailment relation.</S>
    <S sid="114" ssid="27">On the flip side, work has also been done to extend entailment recognition techniques for the purpose of paraphrase recognition (Rus, McCarthy, and Lintean 2008).</S>
    <S sid="115" ssid="28">Detection of semantic similarity and, to some extent, that of bidirectional entailment is usually an implicit part of paraphrase generation.</S>
    <S sid="116" ssid="29">However, given the interesting and diverse work that has been done in both these areas, we feel that any significant discussion beyond the treatment above merits a separate, detailed survey.</S>
  </SECTION>
  <SECTION title="3." number="4">
    <S sid="117" ssid="1">In this section, we explore in detail the data-driven paraphrase generation approaches that have emerged and have become extremely popular in the last decade or so.</S>
    <S sid="118" ssid="2">These corpus-based methods have the potential of covering a much wider range of paraphrasing phenomena and the advantage of widespread availability of corpora.</S>
    <S sid="119" ssid="3">We organize this section by the type of corpora used to generate the paraphrases: a single monolingual corpus, monolingual comparable corpora, monolingual parallel corpora, and bilingual parallel corpora.</S>
    <S sid="120" ssid="4">This form of organization, in our opinion, is the most instructive because most of the algorithmic decisions made for paraphrase generation will depend heavily on the type of corpus used.</S>
    <S sid="121" ssid="5">For instance, it is reasonable to assume that a different set of considerations will be paramount when using a large single monolingual corpus than when using bilingual parallel corpora.</S>
    <S sid="122" ssid="6">However, before delving into the actual paraphrasing methods, we believe that it would be very useful to explain the motivation behind distributional similarity, an extremely popular technique that can be used for paraphrase generation with several different types of corpora.</S>
    <S sid="123" ssid="7">We devote the following section to such an explanation.</S>
    <S sid="124" ssid="8">The idea that a language possesses distributional structure was first discussed at length by Harris (1954).</S>
    <S sid="125" ssid="9">The term represents the notion that one can describe a language in terms of relationships between the occurrences of its elements (words, morphemes, phonemes) relative to the occurrence of other elements.</S>
    <S sid="126" ssid="10">The name for the phenomenon is derived from an element&#8217;s distribution&#8212;sets of elements in particular positions that the element occurs with to produce an utterance or a sentence.</S>
    <S sid="127" ssid="11">More specifically, Harris presents several empirical observations to support the hypothesis that such a structure exists naturally for language.</S>
    <S sid="128" ssid="12">Here, we closely quote these observations: Given these observations, it is relatively easy to characterize the concept of distributional similarity: words or phrases that share the same distribution&#8212;the same set of words in the same context in a corpus&#8212;tend to have similar meanings.</S>
    <S sid="129" ssid="13">Figure 1 shows the basic idea behind phrasal paraphrase generation techniques that leverage distributional similarity.</S>
    <S sid="130" ssid="14">The input corpus is usually a single or set of monolingual corpora (parallel or non-parallel).</S>
    <S sid="131" ssid="15">After preprocessing&#8212;which may include tagging the parts of speech, generating parse trees, and other transformations&#8212;the next step is to extract pairs of words or phrases (or patterns) that occur in the same context in the corpora and hence may be considered (approximately) semantically equivalent.</S>
    <S sid="132" ssid="16">This extraction may be accomplished by several means (e.g., by using a classifier employing contextual features or by finding similar paths in dependency trees).</S>
    <S sid="133" ssid="17">Although it is possible to stop at this point and consider this list as the final output, the list usually contains a lot of noise and may require additional filtering based on other criteria, such as collocations counts from another corpus (or the Web).</S>
    <S sid="134" ssid="18">Finally, some techniques may go even further and attempt to generalize the filtered list of paraphrase pairs into templates or rules which may then be applied to other sentences to generate their paraphrases.</S>
    <S sid="135" ssid="19">Note that generalization as a post-processing step may not be necessary if the induction process can extract distributionally similar patterns directly.</S>
    <S sid="136" ssid="20">One potential disadvantage of relying on distributional similarity is that items that are distributionally similar may not necessarily end up being paraphrastic: Both A general architecture for paraphrasing approaches leveraging the distributional similarity hypothesis. elements of the pairs (boys, girls), (cats, dogs), (high, low) can occur in similar contexts but are not semantically equivalent.</S>
    <S sid="137" ssid="21">In this section, we concentrate on paraphrase generation methods that operate on a single monolingual corpus.</S>
    <S sid="138" ssid="22">Most, if not all, such methods usually perform paraphrase induction by employing the idea of distributional similarity as outlined in the previous section.</S>
    <S sid="139" ssid="23">Besides the obvious caveat discussed previously regarding distributional similarity, we find that the other most important factor affecting the performance of these methods is the choice of distributional ingredients&#8212;that is, the features used to formulate the distribution of the extracted units.</S>
    <S sid="140" ssid="24">We consider three commonly used techniques that generate phrasal paraphrases (or paraphrastic patterns) from a single monolingual corpus but use very different distributional features in terms of complexity.</S>
    <S sid="141" ssid="25">The first uses only surface-level features and the other two use features derived from additional semantic knowledge.</S>
    <S sid="142" ssid="26">Although the latter two methods are able to generate more sophisticated paraphrases by virtue of more specific and more informative ingredients, we find that doing so usually has an adverse effect on their coverage.</S>
    <S sid="143" ssid="27">Pas&#184;ca and Dienes (2005) use as their input corpus a very large collection of Web documents taken from the repository of documents crawled by Google.</S>
    <S sid="144" ssid="28">Although using Web documents as input data does require a non-trivial pre-processing phase since such documents tend to be noisier, there are certainly advantages to the use of Web documents as the input corpus: It does not require parallel (or even comparable) documents and can allow leveraging of even larger document collections.</S>
    <S sid="145" ssid="29">In addition, the extracted paraphrases are not tied to any specific domain and are suitable for general application.</S>
    <S sid="146" ssid="30">Algorithm 1 shows the details of the induction process.</S>
    <S sid="147" ssid="31">Steps 3&#8211;6 extract all n-grams of a specific kind from each sentence: Each n-gram has Lc words at the beginning, between M1 to M2 words in the middle, and another Lc words at the end.</S>
    <S sid="148" ssid="32">Steps 7&#8211;13 can intuitively be interpreted as constructing a textual anchor A&#8212;by concatenating a fixed number of words from the left and the right&#8212;for each candidate paraphrase C and storing the (anchor, candidate) tuple in H. These anchors are taken to constitute the distribution of the words and phrases under inspection.</S>
    <S sid="149" ssid="33">Finally, each occurrence of a pair of potential paraphrases, that is, a pair sharing one or more anchors, is counted.</S>
    <S sid="150" ssid="34">The final set of phrasal paraphrastic pairs is returned.</S>
    <S sid="151" ssid="35">This algorithm embodies the spirit of the hypothesis of distributional similarity: It considers all words and phrases that are distributionally similar&#8212;those that occur with the same sets of anchors (or distributions)&#8212;to be paraphrases of each other.</S>
    <S sid="152" ssid="36">Additionally, the larger the set of shared anchors for two candidate phrases, the stronger the likelihood that they are paraphrases of each other.</S>
    <S sid="153" ssid="37">After extracting the list of paraphrases, less likely phrasal paraphrases are filtered out by using an appropriate count threshold.</S>
    <S sid="154" ssid="38">Pas&#184;ca and Dienes (2005) attempt to make their anchors even more informative by attempting variants where they extract the n-grams only from sentences that include specific additional information to be added to the anchor.</S>
    <S sid="155" ssid="39">For example, in one variant, they only use sentences where the candidate phrase is surrounded by named entities Algorithm 1 (Pa&#184;sca and Dienes 2005).</S>
    <S sid="156" ssid="40">Induce a set of phrasal paraphrase pairs H with associated counts from a corpus of pre-processed Web documents.</S>
    <S sid="157" ssid="41">Summary.</S>
    <S sid="158" ssid="42">Extract all n-grams from the corpus longer than a pre-stipulated length.</S>
    <S sid="159" ssid="43">Compute a lexical anchor for each extracted n-gram.</S>
    <S sid="160" ssid="44">Pairs of n-grams that share lexical anchors are then construed to be paraphrases. on both sides and they attach the nearest pair of entities to the anchor.</S>
    <S sid="161" ssid="45">As expected, the paraphrases do improve in quality as the anchors become more specific.</S>
    <S sid="162" ssid="46">However, they also report that as anchors are made more specific by attaching additional information, the likelihood of finding a candidate pair with the same anchor is reduced.</S>
    <S sid="163" ssid="47">The ingredients for measuring distributional similarity in a single corpus can certainly be more complex than simple phrases used by Pas&#184;ca and Dienes.</S>
    <S sid="164" ssid="48">Lin and Pantel (2001) discuss how to measure distributional similarity over dependency tree paths in order to induce generalized paraphrase templates such as:2 Whereas single links between nodes in a dependency tree represent direct semantic relationships, a sequence of links, or a path, can be understood to represent an indirect relationship.</S>
    <S sid="165" ssid="49">Here, a path is named by concatenating the dependency relationships and lexical items along the way but excluding the lexical items at the end.</S>
    <S sid="166" ssid="50">In this way, a path can actually be thought of as a pattern with variables at either end.</S>
    <S sid="167" ssid="51">Consider the first dependency tree in Figure 2.</S>
    <S sid="168" ssid="52">One dependency path that we could extract would be between the node John and the node problem.</S>
    <S sid="169" ssid="53">We start at John and see that the first item in the tree is the dependency relation subject that connects a noun to a verb and so we append that information to the path.3 The next item in the tree is the word found and we append its lemma (find) to the path.</S>
    <S sid="170" ssid="54">Next is the semantic relation object connecting a verb to a noun and we append that.</S>
    <S sid="171" ssid="55">The process continues until we reach the other slot (the word problem) at which point we stop.4 The extracted path is shown below the tree.</S>
    <S sid="172" ssid="56">Similarly, we can extract a path for the second dependency tree.</S>
    <S sid="173" ssid="57">Let&#8217;s briefly mention the terminology associated with such paths: Intuitively, one can imagine a path to be a complex representation of the pattern X finds answer to Y, where X and Y are variables.</S>
    <S sid="174" ssid="58">This representation for a path is a perfect fit for an extended version of the distributional similarity hypothesis: If similar sets of words fill the same variables for two different patterns, then the patterns may be considered to have similar meaning, which is indeed the case for the paths in Figure 2.</S>
    <S sid="175" ssid="59">Lin and Pantel (2001) use newspaper text as their input corpus and create dependency parses for all the sentences in the corpus in the pre-processing step.</S>
    <S sid="176" ssid="60">Algorithm 2 provides the details of the rest of the process: Steps 1 and 2 extract the paths and compute their distributional properties, and Steps 3&#8211;14 extract pairs of paths which are Two different dependency tree paths (a and b) that are considered paraphrastic because the same words (John and problem) are used to fill the corresponding slots (shown co-indexed) in both the paths.</S>
    <S sid="177" ssid="61">The implied meaning of each dependency path is also shown. similar, insofar as such properties are concerned.5 At the end, we have sets of paths (or inference rules) that are considered to have similar meanings by the algorithm.</S>
    <S sid="178" ssid="62">The performance of their dependency-path based algorithm depends heavily on the root of the extracted path.</S>
    <S sid="179" ssid="63">For example, whereas verbs frequently tend to have several modifiers, nouns tend to have no more than one.</S>
    <S sid="180" ssid="64">However, if a word has any fewer than two modifiers, no path can go through it as the root.</S>
    <S sid="181" ssid="65">Therefore, the algorithm tends to perform better for paths with verbal roots.</S>
    <S sid="182" ssid="66">Another issue is that this algorithm, despite the use of more informative distributional features, can generate several incorrect or implausible paraphrase patterns (inference rules).</S>
    <S sid="183" ssid="67">Recent work has shown how to filter out incorrect inferences when using them in a downstream application (Pantel et al. 2007).</S>
    <S sid="184" ssid="68">Finally, there is no reason for the distributional features to be in the same language as the one in which the paraphrases are desired.</S>
    <S sid="185" ssid="69">Wu and Zhou (2003) describe a bilingual approach to extract English relation-based paraphrastic patterns of the form (w1, R, w2), where w1 and w2 are English words connected by a dependency link with the semantic relation R. Figure 3 shows a simple example based on their approach.</S>
    <S sid="186" ssid="70">First, instances of one type of pattern are extracted from a parsed monolingual corpus.</S>
    <S sid="187" ssid="71">In the figure, for example, a single instance of the pattern (verb, IN, pobj) has been extracted.</S>
    <S sid="188" ssid="72">Several new, potentially paraphrastic, English candidate patterns are then induced by replacing each of the English words with its synonyms in WordNet, one at a time.</S>
    <S sid="189" ssid="73">The figure shows the list of induced patterns for the given example.</S>
    <S sid="190" ssid="74">Next, each of the English words in each candidate pattern is translated to Chinese, via a bilingual dictionary.6 Using Chinese translations as the distributional elements to extract a set of English paraphrastic patterns from a large English corpus.</S>
    <S sid="191" ssid="75">Given that the bilingual dictionary may contain multiple Chinese translations for a given English word, several Chinese patterns may be created for each English candidate pattern.</S>
    <S sid="192" ssid="76">Each Chinese pattern is assigned a probability value via a simple bag-of-words translation model (built from a small bilingual corpus) and a language model (trained on a Chinese collocation database); all translated patterns, along with their probability values, are then considered to be features of the particular English candidate pattern.</S>
    <S sid="193" ssid="77">Any English pattern can subsequently be compared to another by computing cosine similarity over their shared features.</S>
    <S sid="194" ssid="78">English collocation pairs whose similarity value exceeds some threshold are construed to be paraphrastic.</S>
    <S sid="195" ssid="79">The theme of a trade-off between the precision of the generated paraphrase set&#8212;by virtue of the increased informativeness of the distributional features&#8212;and its coverage is seen in this work as well.</S>
    <S sid="196" ssid="80">When using translations from the bilingual dictionary, a knowledge-rich resource, the authors report significantly higher precision than comparable methods that rely only on monolingual information to compute the distributional similarity.</S>
    <S sid="197" ssid="81">Predictably, they also find that recall values obtained with their dictionarybased method are lower than those obtained by other methods.</S>
    <S sid="198" ssid="82">Paraphrase generation techniques using a single monolingual corpus have to rely on some form of distributional similarity because there are no explicit clues available that indicate semantic equivalence.</S>
    <S sid="199" ssid="83">In the next section, we look at paraphrasing methods operating over data that does contain such explicit clues.</S>
    <S sid="200" ssid="84">It is also possible to generate paraphrastic phrase pairs from a parallel corpus where each component of the corpus is in the same language.</S>
    <S sid="201" ssid="85">Obviously, the biggest advantage of parallel corpora is that the sentence pairs are paraphrases almost by definition; they represent different renderings of the same meaning created by different translators making different lexical choices.</S>
    <S sid="202" ssid="86">In effect, they contain pairs (or sets) of sentences that are either semantically equivalent (sentential paraphrases) or have significant semantic overlap.</S>
    <S sid="203" ssid="87">Extraction of phrasal paraphrases can then be effected by extracting phrasal correspondences from a set of sentences that represent the same (or similar) semantic content.</S>
    <S sid="204" ssid="88">We present four techniques in this section that generate paraphrases by finding such correspondences.</S>
    <S sid="205" ssid="89">The first two techniques attempt to do so by relying, again, on the paradigm of distributional similarity: one by positing a bootstrapping distributional similarity algorithm and the other by simply adapting the previously described dependency path similarity algorithm to work with a parallel corpus.</S>
    <S sid="206" ssid="90">The next two techniques rely on more direct, non-distributional methods to compute the required correspondences.</S>
    <S sid="207" ssid="91">Barzilay and McKeown (2001) align phrasal correspondences by attempting to move beyond a single-pass distributional similarity method.</S>
    <S sid="208" ssid="92">They propose a bootstrapping algorithm that allows for the gradual refinement of the features used to determine similarity and yields improved paraphrase pairs.</S>
    <S sid="209" ssid="93">As their input corpus, they use multiple human-written English translations of literary texts such as Madame Bovary and Twenty Thousand Leagues Under the Sea that are expected to be rich in paraphrastic expressions because different translators would use their own words while still preserving the meaning of the original text.</S>
    <S sid="210" ssid="94">The parallel components are obtained by performing sentence alignment (Gale and Church 1991) on the corpora to obtain sets of parallel sentences that are then lemmatized, part-of-speech tagged and chunked in order to identify all the verb and noun phrases.</S>
    <S sid="211" ssid="95">The bootstrapping algorithm is then employed to incrementally learn better and better contextual features that are then leveraged to generate semantically similar phrasal correspondences.</S>
    <S sid="212" ssid="96">Figure 4 shows the basic steps of the algorithm.</S>
    <S sid="213" ssid="97">To seed the algorithm, some fake paraphrase examples are extracted by using identical words from either side of the aligned sentence pair.</S>
    <S sid="214" ssid="98">For example, given the following sentence pair: S1: Emma burst into tears and he tried to comfort her.</S>
    <S sid="215" ssid="99">S2: Emma cried and he tried to console her.</S>
    <S sid="216" ssid="100">A bootstrapping algorithm to extract phrasal paraphrase pairs from monolingual parallel corpora.</S>
    <S sid="217" ssid="101">(tried, tried), (her, her) may be extracted as positive examples and (tried, Emma), (tried, console) may be extracted as negative examples.</S>
    <S sid="218" ssid="102">Once the seeding examples are extracted, the next step is to extract contextual features for both the positive and the negative examples.</S>
    <S sid="219" ssid="103">These features take the form of aligned part-of-speech sequences of a given length from the left and the right of the example.</S>
    <S sid="220" ssid="104">For instance, we can extract the contextual feature [(L1 : PRP1,R1 : TO1), (L2 : PRP1,R2 : TO1)] of length 1 for the positive example (tried, tried).</S>
    <S sid="221" ssid="105">This particular contextual feature contains two tuples, one for each sentence.</S>
    <S sid="222" ssid="106">The first tuple (L1 : PRP1,R1 : TO1) indicates that, in the first sentence, the POS tag sequence to the left of the word tried is a personal pronoun (he) and the POS tag sequence to the right of tired is the preposition to.</S>
    <S sid="223" ssid="107">The second tuple is identical for this case.</S>
    <S sid="224" ssid="108">Note that the tags of identical tokens are indicated as such by subscripts on the POS tags.</S>
    <S sid="225" ssid="109">All such features are extracted for both the positive and the negative examples for all lengths less than or equal to some specified length.</S>
    <S sid="226" ssid="110">In addition, a strength value is calculated for each positive (negative) contextual feature f using maximum likelihood estimation as follows: strength(f )Number of positive (negative) examples surrounded by f _ Total occurrences off The extracted list of contextual features is thresholded on the basis of this strength value.</S>
    <S sid="227" ssid="111">The remaining contextual rules are then applied to the corpora to obtain additional positive and negative paraphrase examples that, in turn, lead to more refined contextual rules, and so on.</S>
    <S sid="228" ssid="112">The process is repeated for a fixed number of iterations or until no new paraphrase examples are produced.</S>
    <S sid="229" ssid="113">The list of extracted paraphrases at the end of the final iteration represents the final output of the algorithm.</S>
    <S sid="230" ssid="114">In total, about 9, 000 phrasal (including lexical) paraphrases are extracted from 11 translations of five works of classic literature.</S>
    <S sid="231" ssid="115">Furthermore, the extracted paraphrase pairs are also generalized into about 25 patterns by extracting part-of-speech tag sequences corresponding to the tokens of the paraphrase pairs.</S>
    <S sid="232" ssid="116">Barzilay and McKeown also perform an interesting comparison with another technique that was originally developed for compiling translation lexicons from bilingual parallel corpora (Melamed 2001).</S>
    <S sid="233" ssid="117">This technique first compiles an initial lexicon using simple co-occurrence statistics and then uses a competitive linking algorithm (Melamed 1997) to improve the quality of the lexicon.</S>
    <S sid="234" ssid="118">The authors apply this technique to their monolingual parallel data and observe that the extracted paraphrase pairs are of much lower quality than the pairs extracted by their own method.</S>
    <S sid="235" ssid="119">We present similar observations in Section 3.5 and highlight that although more recent translation techniques&#8212; specifically ones that use phrases as units of translation&#8212;are better suited to the task of generating paraphrases than the competitive linking approach, they continue to suffer from the same problem of low precision.</S>
    <S sid="236" ssid="120">On the other hand, such techniques can take good advantage of large bilingual corpora and capture a much larger variety of paraphrastic phenomena.</S>
    <S sid="237" ssid="121">Ibrahim, Katz, and Lin (2003) propose an approach that applies a modified version of the dependency path distributional similarity algorithm proposed by Lin and Pantel (2001) to the same monolingual parallel corpus (multiple translations of literary works) used by Barzilay and McKeown (2001).</S>
    <S sid="238" ssid="122">The authors claim that their technique is more tractable than Lin and Pantel&#8217;s approach since the sentence-aligned nature of the input parallel corpus obviates the need to compute similarity over tree paths drawn from sentences that have zero semantic overlap.</S>
    <S sid="239" ssid="123">Furthermore, they also claim that their technique exploits the parallel nature of a corpus more effectively than Barzilay and McKeown&#8217;s approach simply because their technique uses tree paths and not just lexical information.</S>
    <S sid="240" ssid="124">Specifically, they propose the following modifications to Lin and Pantel&#8217;s algorithm: Despite the authors&#8217; claims, they offer no quantitative evaluation comparing their paraphrases with those from Lin and Pantel (2001) or from Barzilay and McKeown (2001).</S>
    <S sid="241" ssid="125">It is also possible to find correspondences between the parallel sentences using a more direct approach instead of relying on distributional similarity.</S>
    <S sid="242" ssid="126">Pang, Knight, and Marcu (2003) propose an algorithm to align sets of parallel sentences driven entirely by the syntactic representations of the sentences.</S>
    <S sid="243" ssid="127">The alignment algorithm outputs a merged lattice from which lexical, phrasal, and sentential paraphrases can simply be read off.</S>
    <S sid="244" ssid="128">More specifically, they use the Multiple-Translation Chinese corpus that was originally developed for machine translation evaluation and contains 11 human-written English translations for each sentence in a news document.</S>
    <S sid="245" ssid="129">Using several sentences explicitly equivalent in semantic content has the advantage of being a richer source for paraphrase induction.</S>
    <S sid="246" ssid="130">As a pre-processing step, any group (of 11 sentences) that contains sentences longer than 45 words is discarded.</S>
    <S sid="247" ssid="131">Next, each sentence in each of the groups is parsed.</S>
    <S sid="248" ssid="132">All the parse trees are then iteratively merged into a shared forest.</S>
    <S sid="249" ssid="133">The merging algorithm proceeds top-down and continues to recursively merge constituent nodes that are expanded identically.</S>
    <S sid="250" ssid="134">It stops upon reaching the leaves or upon encountering the same constituent node expanded using different grammar rules.</S>
    <S sid="251" ssid="135">Figure 5(a) shows how the merging algorithm would work on two simple parse trees.</S>
    <S sid="252" ssid="136">In the figure, it is apparent that the leaves of the forest encode paraphrasing information.</S>
    <S sid="253" ssid="137">However, the merging only allows identical constituents to be considered as paraphrases.</S>
    <S sid="254" ssid="138">In addition, keyword-based heuristics need to be employed to prevent inaccurate merging of constituent nodes due to, say, alternations of active and passive voices among the The merging algorithm.</S>
    <S sid="255" ssid="139">(a) How the merging algorithm works for two simple parse trees to produce a shared forest.</S>
    <S sid="256" ssid="140">Note that for clarity, not all constituents are expanded fully.</S>
    <S sid="257" ssid="141">Leaf nodes with two entries represent paraphrases.</S>
    <S sid="258" ssid="142">(b) The word lattice generated by linearizing the forest in (a). sentences in the group.</S>
    <S sid="259" ssid="143">Once the forest is created, it is linearized to create the word lattice by traversing the nodes in the forest top-down and producing an alternative path in the lattice for each merged node.</S>
    <S sid="260" ssid="144">Figure 5(b) shows the word lattice generated for the simple two-tree forest.</S>
    <S sid="261" ssid="145">The lattices also require some post-processing to remove redundant edges and nodes that may have arisen due to parsing errors or limitations in the merging algorithm.</S>
    <S sid="262" ssid="146">The final output of the paraphrasing algorithm is a set of word lattices, one for each sentence group.</S>
    <S sid="263" ssid="147">These lattices can be used as sources of lexical as well as phrasal paraphrases.</S>
    <S sid="264" ssid="148">All alternative paths between any pair of nodes can be considered to be paraphrases of each other.</S>
    <S sid="265" ssid="149">For example, besides the obvious lexical paraphrases, the paraphrase pair (ate at cafe, chowed down at bistro) can also be extracted from the lattice in Figure 5(b).</S>
    <S sid="266" ssid="150">In addition, each path between the START and the END nodes in the lattice represents a sentential paraphrase of the original 11 sentences used to create the lattice.</S>
    <S sid="267" ssid="151">The direct alignment approach is able to leverage the sheer width (number of parallel alternatives per sentence position; 11 in this case) of the input corpus to do away entirely with any need for measuring distributional similarity.</S>
    <S sid="268" ssid="152">In general, it has several advantages.</S>
    <S sid="269" ssid="153">It can capture a very large number of paraphrases: Each lattice has on the order of hundreds or thousands of paths depending on the average length of the sentence group that it was generated from.</S>
    <S sid="270" ssid="154">In addition, the paraphrases produced are of better quality than other approaches employing parallel corpora for paraphrase induction discussed so far.</S>
    <S sid="271" ssid="155">However, the approach does have a couple of drawbacks: the lattices described is built using 11 manually written translations of the same sentence, each by a different translator.</S>
    <S sid="272" ssid="156">There are very few corpora that provide such a large number of human translations.</S>
    <S sid="273" ssid="157">In recent years, most MT corpora have had no more than four references, which would certainly lead to much sparser word lattices and smaller numbers of paraphrases that can be extracted.</S>
    <S sid="274" ssid="158">In fact, given the cost and amount of effort required for humans to translate a relatively large corpus, it is common to encounter corpora with only a single human translation.</S>
    <S sid="275" ssid="159">With such a corpus, of course, this technique would be unable to produce any paraphrases.</S>
    <S sid="276" ssid="160">One solution might be to augment the relatively few human translations with translations obtained from automatic machine translation systems.</S>
    <S sid="277" ssid="161">In fact, the corpus used (Huang, Graff, and Doddington 2002) also contains, besides the 11 human translations, 6 translations of the same sentence by machine translation systems available on the Internet at the time.</S>
    <S sid="278" ssid="162">However, no experiments are performed with the automatic translations.</S>
    <S sid="279" ssid="163">Finally, an even more direct method to align equivalences in parallel sentence pairs can be effected by building on word alignment techniques from the field of statistical machine translation (Brown et al. 1990).</S>
    <S sid="280" ssid="164">Current state-of-the-art SMT methods rely on unsupervised induction of word alignment between two bilingual parallel sentences to extract translation equivalences that can then be used to translate a given sentence in one language into another language.</S>
    <S sid="281" ssid="165">The same methods can be applied to monolingual parallel sentences without any loss of generality.</S>
    <S sid="282" ssid="166">Quirk, Brockett, and Dolan (2004) use one such method to extract phrasal paraphrase pairs.</S>
    <S sid="283" ssid="167">Furthermore, they use these extracted phrasal pairs to construct sentential paraphrases for new sentences.</S>
    <S sid="284" ssid="168">Mathematically, Quirk, Brockett, and Dolan&#8217;s approach to sentential paraphrase generation may be expressed in terms of the typical channel model equation for statistical machine translation: The equation denotes the search for the optimal paraphrase Ep for a given sentence E. We may use Bayes&#8217; Theorem to rewrite this as: where P(Ep) is an n-gram language model providing a probabilistic estimate of the fluency of a hypothesis Ep and P(E|Ep) is the translation model, or more appropriately for paraphrasing, the replacement model, providing a probabilistic estimate of what is essentially the semantic adequacy of the hypothesis paraphrase.</S>
    <S sid="285" ssid="169">Therefore, the optimal sentential paraphrase may loosely be described as one that fluently captures most, if not all, of the meaning contained in the input sentence.</S>
    <S sid="286" ssid="170">It is important to provide a brief description of the parallel corpus used here because unsupervised induction of word alignments typically requires a relatively large number of parallel sentence pairs.</S>
    <S sid="287" ssid="171">The monolingual parallel corpus (or more accurately, quasiparallel, since not all sentence pairs are fully semantically equivalent) is constructed by scraping on-line news sites for clusters of articles on the same topic.</S>
    <S sid="288" ssid="172">Such clusters contain the full text of each article and the dates and times of publication.</S>
    <S sid="289" ssid="173">After removing the mark-up, the authors discard any pair of sentences in a cluster where the difference in the lengths or the edit distance is larger than some stipulated value.</S>
    <S sid="290" ssid="174">This method yields a corpus containing approximately 140, 000 quasi-parallel sentence pairs {(E1, E2)}, where E1 = e11e21 ... em1 , E2 = e12e22 ... en2.</S>
    <S sid="291" ssid="175">The following examples show that the proposed method can work well: For more details on the creation of this corpus, we refer the reader to Dolan, Quirk, and Brockett (2004) and, more specifically, to Section 4.</S>
    <S sid="292" ssid="176">Algorithm 3 shows how to Algorithm 3 (Quirk, Dolan, and Brockett 2004).</S>
    <S sid="293" ssid="177">Generate a set M of phrasal paraphrases with associated likelihood values from a monolingual parallel corpus C. Summary.</S>
    <S sid="294" ssid="178">Estimate a simple English to English phrase translation model from C using word alignments.</S>
    <S sid="295" ssid="179">Use this model to create sentential paraphrases as explained later.</S>
    <S sid="296" ssid="180">4: for each word-aligned sentence pair (E1, E2)a in C do 5: Extract pairs of contiguous subsequences ( &#175;e1, &#175;e2) such that: generate a set of phrasal paraphrase pairs and compute a probability value for each such pair.</S>
    <S sid="297" ssid="181">In Step 2, a simple parameter estimation technique (Brown et al. 1993) is used to compute, for later use, the probability of replacing any given word with another.</S>
    <S sid="298" ssid="182">Step 3 computes a word alignment (indicated by a) between each pair of sentences.</S>
    <S sid="299" ssid="183">This alignment indicates for each word ei in one string that word ej in the other string from which it was most likely produced (denoted here by ei &#8764; ej).</S>
    <S sid="300" ssid="184">Steps 4&#8211;7 extract, from each pair of sentences, pairs of short contiguous phrases that are aligned with each other according to this alignment.</S>
    <S sid="301" ssid="185">Note that each such extracted pair is essentially a phrasal paraphrase.</S>
    <S sid="302" ssid="186">Finally, a probability value is computed for each such pair by assuming that each word of the first phrase can be replaced with each word of the second phrase.</S>
    <S sid="303" ssid="187">This computation uses the lexical replacement probabilities computed in Step 2.</S>
    <S sid="304" ssid="188">Now that a set of scored phrasal pairs has been extracted, these pairs can be used to generate paraphrases for any unseen sentence.</S>
    <S sid="305" ssid="189">Generation proceeds by creating a lattice for the given sentence.</S>
    <S sid="306" ssid="190">Given a sentence E, the lattice is populated as follows: Figure 6 shows an example lattice.</S>
    <S sid="307" ssid="191">Once the lattice has been constructed, it is straightforward to extract the 1-best paraphrase by using a dynamic programming algorithm such as Viterbi decoding and extracting the optimal path from the lattice as scored by the product of an n-gram language model and the replacement model.</S>
    <S sid="308" ssid="192">In addition, as with SMT decoding, it is also possible to extract a list of n-best paraphrases from the lattice by using the appropriate algorithms (Soong and Huang 1990; Mohri and Riley 2002).</S>
    <S sid="309" ssid="193">Quirk, Brockett, and Dolan (2004) borrow from the statistical machine translation literature so as to align phrasal equivalences as well as to utilize the aligned phrasal equivalences to rewrite new sentences.</S>
    <S sid="310" ssid="194">The biggest advantage of this method is its SMT inheritance: It is possible to produce multiple sentential paraphrases for any new A paraphrase generation lattice for the sentence He ate lunch at a cafe near Paris.</S>
    <S sid="311" ssid="195">Alternate paths between various nodes represent phrasal replacements.</S>
    <S sid="312" ssid="196">The probability values associated with each edge are not shown for the sake of clarity. sentence, and there is no limit on the number of sentences that can be paraphrased.7 However, there are certain limitations: All of these limitations combined lead to paraphrases that, although grammatically sound, contain very little variety.</S>
    <S sid="313" ssid="197">Most sentential paraphrases that are generated involve little more than simple substitutions of words and short phrases.</S>
    <S sid="314" ssid="198">In Section 3.5, we will discuss other approaches that also find inspiration from statistical machine translation and attempt to circumvent the above limitations by using a bilingual parallel corpus instead of a monolingual parallel corpus.</S>
    <S sid="315" ssid="199">Whereas it is clearly to our advantage to have monolingual parallel corpora, such corpora are usually not very readily available.</S>
    <S sid="316" ssid="200">The corpora usually found in the real world are comparable instead of being truly parallel: Parallelism between sentences is replaced by just partial semantic and topical overlap at the level of documents.</S>
    <S sid="317" ssid="201">Therefore, for monolingual comparable corpora, the task of finding phrasal correspondences becomes harder because the two corpora may only be related by way of describing events under the same topic.</S>
    <S sid="318" ssid="202">In such a scenario, possible paraphrasing methods either (a) forgo any attempts at directly finding such correspondences and fall back to the distributional similarity workhorse or, (b) attempt to directly induce a form of coarsegrained alignment between the two corpora and leverage this alignment.</S>
    <S sid="319" ssid="203">In this section, we describe three methods that generate paraphrases from such comparable corpora.</S>
    <S sid="320" ssid="204">The first method falls under category (a): Here the elements whose distributional similarity is being measured are paraphrastic patterns and the distributions themselves are the named entities with which the elements occur in various sentences.</S>
    <S sid="321" ssid="205">In contrast, the next two methods fall under category (b) and attempt to directly discover correspondences between two comparable corpora by leveraging a novel alignment algorithm combined with some similarity heuristics.</S>
    <S sid="322" ssid="206">The difference between the two latter methods lies only in the efficacy of the alignment algorithm.</S>
    <S sid="323" ssid="207">Shinyama et al. (2002) use two sets of 300 news articles from two different Japanese newspapers from the same day as their source of paraphrases.</S>
    <S sid="324" ssid="208">The comparable nature of the articles is ensured because both sets are from the same day.</S>
    <S sid="325" ssid="209">During pre-processing, all named entities in each article are tagged and dependency parses are created for each sentence in each article.</S>
    <S sid="326" ssid="210">The distributional similarity driven algorithm then proceeds as follows: At the end, the output is a list of generalized paraphrase patterns with named entity types as variables.</S>
    <S sid="327" ssid="211">For example, the algorithm may generate the following two patterns as paraphrases: (PERSON) is promoted to (POST) the promotion of (PERSON) to (POST) is decided As a later refinement, Sekine (2005) makes a similar attempt at using distributional similarity over named entity pairs in order to produce a list of fully lexicalized phrasal paraphrases for specific concepts represented by keywords.</S>
    <S sid="328" ssid="212">The idea of enlisting named entities as proxies for detecting semantic equivalence is interesting and has certainly been explored before (see the discussion regarding Pas&#184;ca and Dienes [2005] in Section 3.2).</S>
    <S sid="329" ssid="213">However, it has some obvious disadvantages.</S>
    <S sid="330" ssid="214">The authors manually evaluate the technique by generating paraphrases for two specific domains (arrest events and personnel hirings) and find that while the precision is reasonably good, the coverage is very low primarily due to restrictions on the patterns that may be extracted in Step 2.</S>
    <S sid="331" ssid="215">In addition, if the average number of entities in sentences is low, the likelihood of creating incorrect paraphrases is confirmed to be higher.</S>
    <S sid="332" ssid="216">Let us now consider the altogether separate idea of deriving coarse-grained correspondences by leveraging the comparable nature of the corpora.</S>
    <S sid="333" ssid="217">Barzilay and Lee (2003) attempt to do so by generating compact sentence clusters in template form (stored as word lattices with slots) separately from each corpora and then pairing up templates from one corpus with those from the other.</S>
    <S sid="334" ssid="218">Once the templates are paired up, a new incoming sentence that matches one member of a template pair gets rendered as the other member, thereby generating a paraphrase.</S>
    <S sid="335" ssid="219">They use as input a pair of corpora: the first (C1) consisting of clusters of news articles published by Agence France Presse (AFP) and the second (C2) consisting of those published by Reuters.</S>
    <S sid="336" ssid="220">The two corpora may be considered comparable since the articles in each are related to the same topic and were published during the same time frame.</S>
    <S sid="337" ssid="221">Algorithm 4 shows some details of how their technique works.</S>
    <S sid="338" ssid="222">Steps 3&#8211;18 show how to cluster topically related sentences, construct a word lattice from such a cluster, and convert that into a slotted lattice&#8212;basically a word lattice with certain nodes recast as variables or empty slots.</S>
    <S sid="339" ssid="223">The clustering is done so as to bring together sentences pertaining to the same topics and having similar structure.</S>
    <S sid="340" ssid="224">The word lattice is the product of an algorithm that computes a multiple-sequence alignment (MSA) for a cluster of sentences (Step 6).</S>
    <S sid="341" ssid="225">A very brief outline of such an algorithm, originally developed to compute an alignment for a set of three or more protein or DNA sequences, is as follows:9 The word lattice so generated now needs to be converted into a slotted lattice to allow its use as a paraphrase template.</S>
    <S sid="342" ssid="226">Slotting is performed based on the following intuition: Areas of high variability between backbone nodes, that is, several distinct parallel paths, may correspond to template arguments and can be collapsed into one slot that can be filled by these arguments.</S>
    <S sid="343" ssid="227">However, multiple parallel paths may also appear in the lattice because of simple synonymy and those paths must be retained for paraphrase generation to be useful.</S>
    <S sid="344" ssid="228">To differentiate between the two cases, a synonymy threshold s of 30% is used, as shown in Steps 8&#8211;14.</S>
    <S sid="345" ssid="229">The basic idea behind the threshold is that as the number of sentences increases, the number of different arguments will increase faster than the number of synonyms.</S>
    <S sid="346" ssid="230">Figure 7 shows how a very simple word lattice may be generalized into a slotted lattice.</S>
    <S sid="347" ssid="231">Once all the slotted lattices have been constructed for each corpus, Steps 19&#8211;24 try to match the slotted lattices extracted from one corpus to those extracted from the other by referring back to the sentence clusters from which the original lattices were Algorithm 4 (Barzilay and Lee 2003).</S>
    <S sid="348" ssid="232">Generate set M of matching lattice pairs given a pair of comparable corpora C1 and C2.</S>
    <S sid="349" ssid="233">Summary.</S>
    <S sid="350" ssid="234">Gather topically related sentences from C1 into clusters.</S>
    <S sid="351" ssid="235">Do the same for C2.</S>
    <S sid="352" ssid="236">Convert each sentence cluster into a slotted lattice using a multiple-sequence alignment (MSA) algorithm.</S>
    <S sid="353" ssid="237">Compare all lattice pairs and output those likely to be paraphrastic. generated, comparing the sentences that were written on the same day and computing a comparison score based on overlap between the sets of arguments that fill the slots.</S>
    <S sid="354" ssid="238">If this computed score is greater than some fixed threshold value b, then the two lattices (or patterns) are considered to be paraphrases of each other.</S>
    <S sid="355" ssid="239">Besides generating pairs of paraphrastic patterns, the authors go one step further and actually use the patterns to generate paraphrases for new sentences.</S>
    <S sid="356" ssid="240">Given such a sentence S, the first step is to find an existing slotted lattice from either corpus that aligns best with S, in terms of the previously mentioned alignment scoring function.</S>
    <S sid="357" ssid="241">If some lattice is found as a match, then all that remains is to take all corresponding lattices from the other corpus that are paired with this lattice and use them to create An example showing the generalization of the word lattice (a) into a slotted lattice (b).</S>
    <S sid="358" ssid="242">The word lattice is produced by aligning seven sentences.</S>
    <S sid="359" ssid="243">Nodes having in-degrees &gt; 1 occur in more than one sentence.</S>
    <S sid="360" ssid="244">Nodes with thick incoming edges occur in all sentences. multiple rewritings (paraphrases) for S. Rewriting in this context is a simple matter of substitution: For each slot in the matching lattice, we know not only the argument from the sentence that fills it but also the slot in the corresponding rewriting lattice.</S>
    <S sid="361" ssid="245">As far as the quality of acquired paraphrases is concerned, this approach easily outperforms almost all other sentential paraphrasing approaches surveyed in this article.</S>
    <S sid="362" ssid="246">However, a paraphrase is produced only if the incoming sentence matches some existing template, which leads to a strong bias favoring quality over coverage.</S>
    <S sid="363" ssid="247">In addition, the construction and generalization of lattices may become computationally expensive when dealing with much larger corpora.</S>
    <S sid="364" ssid="248">We can also compare and contrast Barzilay and Lee&#8217;s work and the work from Section 3.3 that seems most closely related: that of Pang, Knight, and Marcu (2003).</S>
    <S sid="365" ssid="249">Both take sentences grouped together in a cluster and align them into a lattice using a particular algorithm.</S>
    <S sid="366" ssid="250">Pang, Knight, and Marcu have a pre-defined size for all clusters since the input corpus is an 11-way parallel corpus.</S>
    <S sid="367" ssid="251">However, Barzilay and Lee have to construct the clusters from scratch because their input corpus has no pre-defined notion of parallelism at the sentence level.</S>
    <S sid="368" ssid="252">Both approaches use word lattices to represent and induce paraphrases since a lattice can efficiently and compactly encode n-gram similarities (sets of shared overlapping word sequences) between a large number of sentences.</S>
    <S sid="369" ssid="253">However, the two approaches are also different in that Pang, Knight, and Marcu use the parse trees of all sentences in a cluster to compute the alignment (and build the lattice), whereas Barzilay and Lee use only surface level information.</S>
    <S sid="370" ssid="254">Furthermore, Barzilay and Lee can use their slotted lattice pairs to generate paraphrases for novel and unseen sentences, whereas Pang, Knight, and Marcu cannot paraphrase new sentences at all.</S>
    <S sid="371" ssid="255">Shen et al. (2006) attempt to improve Barzilay and Lee&#8217;s technique by trying to include syntactic constraints in the cluster alignment algorithm.</S>
    <S sid="372" ssid="256">In that way, it is doing something similar to what Pang, Knight, and Marcu do but with a comparable corpus instead of a parallel one.</S>
    <S sid="373" ssid="257">More precisely, whereas Barzilay and Lee use a relatively simple alignment scoring function based on purely lexical features, Shen et al. try to bring syntactic features into the mix.</S>
    <S sid="374" ssid="258">The motivation is to constrain the relatively free nature of the alignment generated by the MSA algorithm&#8212;which may lead to the generation of grammatically incorrect sentences&#8212;by using informative syntactic features.</S>
    <S sid="375" ssid="259">In their approach, even if two words are a lexical match&#8212;as defined by Barzilay and Lee (2003)&#8212;they are further inspected in terms of certain pre-defined syntactic features.</S>
    <S sid="376" ssid="260">Therefore, when computing the alignment similarity score, two lexically matched words across a sentence pair are not considered to fully match unless their score on syntactic features also exceeds a preset threshold.</S>
    <S sid="377" ssid="261">The syntactic features constituting the additional constraints are defined in terms of the output of a chunk parser.</S>
    <S sid="378" ssid="262">Such a parser takes as input the syntactic trees of the sentences in a topic cluster and provides the following information for each word: With this information and a heuristic to compute the similarity between two words in terms of their POS and IOB tags, the alignment similarity score can be calculated as the sum of the heuristic similarity value for the given two words and the heuristic similarity values for each corresponding node in the two IOB chains.</S>
    <S sid="379" ssid="263">If this score is higher than some threshold and the two words have similar positions in their respective sentences, then the words are considered to be a match and can be aligned.</S>
    <S sid="380" ssid="264">Given this alignment algorithm, the word lattice representing the global alignment is constructed in an iterative manner similar to the MSA approach.</S>
    <S sid="381" ssid="265">Shen et al. (2006) present evidence from a manual evaluation that sentences sampled from lattices constructed via the syntactically informed alignment method receive higher grammaticality scores as compared to sentences from the lattices constructed via the purely lexical method.</S>
    <S sid="382" ssid="266">However, they present no analysis of the actual paraphrasing capacity of their, presumably better aligned, lattices.</S>
    <S sid="383" ssid="267">Indeed, they explicitly mention that their primary goal is to measure the correlation between the syntax-augmented scoring function and the correctness of the sentences being generated from such lattices, even if the sentences do not bear a paraphrastic relationship to the input.</S>
    <S sid="384" ssid="268">Even if one were to assume that the syntax-based alignment method would result in better paraphrases, it still would not address the primary weakness of Barzilay and Lee&#8217;s method: Paraphrases are only generated for new sentences that match an already existing lattice, leading to lower coverage.</S>
    <S sid="385" ssid="269">In the last decade, there has been a resurgence in research on statistical machine translation.</S>
    <S sid="386" ssid="270">There has also been an accompanying dramatic increase in the number of available bilingual parallel corpora due to the strong interest in SMT from both the public and private sectors.</S>
    <S sid="387" ssid="271">Recent research in paraphrase generation has attempted to leverage these very large bilingual corpora.</S>
    <S sid="388" ssid="272">In this section, we look at such approaches that rely on the preservation of meaning across languages and try to recover said meaning by using cues from the second language.</S>
    <S sid="389" ssid="273">Using bilingual parallel corpora for paraphrasing has the inherent advantage that sentences in the other language are exactly semantically equivalent to sentences in the intended paraphrasing language.</S>
    <S sid="390" ssid="274">Therefore, the most common way to generate paraphrases with such a corpus exploits both its parallel and bilingual natures: Align phrases across the two languages and consider all co-aligned phrases in the intended language to be paraphrases.</S>
    <S sid="391" ssid="275">The bilingual phrasal alignments can simply be generated by using the automatic techniques developed for the same task in the SMT literature.</S>
    <S sid="392" ssid="276">Therefore, arguably the most important factor affecting the performance of these techniques is usually the quality of the automatic bilingual phrasal (or word) alignment techniques.</S>
    <S sid="393" ssid="277">One of the most popular methods leveraging bilingual parallel corpora is that proposed by Bannard and Callison-Burch (2005).</S>
    <S sid="394" ssid="278">This technique operates exactly as described above by attempting to infer semantic equivalence between phrases in the same language indirectly with the second language as a bridge.</S>
    <S sid="395" ssid="279">Their approach builds on one of the initial steps used to train a phrase-based statistical machine translation system (Koehn, Och, and Marcu 2003).</S>
    <S sid="396" ssid="280">Such systems rely on phrase tables&#8212;a tabulation of correspondences between phrases in the source language and phrases in the target language.</S>
    <S sid="397" ssid="281">These tables are usually extracted by inducing word alignments between sentence pairs in a training corpus and then incrementally building longer phrasal correspondences from individual words and shorter phrases.</S>
    <S sid="398" ssid="282">Once such a tabulation of bilingual phrasal correspondences is available, correspondences between phrases in one language may be inferred simply by using the phrases in the other language as pivots.</S>
    <S sid="399" ssid="283">Algorithm 5 shows how monolingual phrasal correspondences are extracted from a bilingual corpus C by using word alignments.</S>
    <S sid="400" ssid="284">Steps 3&#8211;7 extract bilingual phrasal correspondences from each sentence pair in the corpus by using heuristically induced bidirectional word alignments.</S>
    <S sid="401" ssid="285">Figure 8 illustrates this extraction process for two example sentence pairs.</S>
    <S sid="402" ssid="286">For each pair, a matrix shows the alignment between the Chinese and the English words.</S>
    <S sid="403" ssid="287">Element (i, j) of the matrix is filled if there is an alignment link between the ith Chinese word and the jth English word ej.</S>
    <S sid="404" ssid="288">All phrase pairs consistent with the word alignment are then extracted.</S>
    <S sid="405" ssid="289">A consistent phrase pair can intuitively be thought of as a sub-matrix where all alignment points for its rows and columns are inside it and never outside.</S>
    <S sid="406" ssid="290">Next, Steps 8&#8211;11 take all English phrases that correspond to the same foreign phrase and infer them all to be paraphrases of each other.10 For example, the English paraphrase pair (effectively contained, under control) is obtained from Figure 8 by pivoting on the Chinese phrase , shown underlined for both matrices.</S>
    <S sid="407" ssid="291">Algorithm 5 (Bannard and Callison-Burch 2005).</S>
    <S sid="408" ssid="292">Generate set M of monolingual paraphrase pairs given a bilingual parallel corpus C. Summary.</S>
    <S sid="409" ssid="293">Extract bilingual phrase pairs from C using word alignments and standard SMT heuristics.</S>
    <S sid="410" ssid="294">Pivot all pairs of English phrases on any shared foreign phrases and consider them paraphrases.</S>
    <S sid="411" ssid="295">The alignment notation from Algorithm 3 is employed. where both p(&#175;ej |f&#175;) and p(&#175;f |&#175;ek) can be computed using maximum likelihood estimation as part of the bilingual phrasal extraction process: number of times f&#175; is extracted with &#175;ej number of times f&#175; is extracted with any e&#175; p( &#175;ej |f&#175; ) = Once the probability values are obtained, the most likely paraphrase can be chosen for any phrase.</S>
    <S sid="412" ssid="296">Bannard and Callison-Burch (2005) are able to extract millions of phrasal paraphrases from a bilingual parallel corpus.</S>
    <S sid="413" ssid="297">Such an approach is able to capture a large variety of paraphrastic phenomena in the inferred paraphrase pairs but is seriously limited by the bilingual word alignment technique.</S>
    <S sid="414" ssid="298">Even state-of-the-art alignment methods from SMT are known to be notoriously unreliable when used for aligning phrase pairs.</S>
    <S sid="415" ssid="299">The authors find via manual evaluation that the quality of the phrasal paraphrases obtained via manually constructed word alignments is significantly better than that of the paraphrases obtained from automatic alignments.</S>
    <S sid="416" ssid="300">It has been widely reported that the existing bilingual word alignment techniques are not ideal for use in translation and, furthermore, improving these techniques does not always lead to an improvement in translation performance.</S>
    <S sid="417" ssid="301">(Callison-Burch, Talbot, and Osborne 2004; Ayan and Dorr 2006; Lopez and Resnik 2006; Fraser and Marcu 2007).</S>
    <S sid="418" ssid="302">More details on the relationship between word alignment and SMT can be found in the comprehensive SMT survey recently published by Lopez (2008) (particularly Section 4.2).</S>
    <S sid="419" ssid="303">Paraphrasing done via bilingual corpora relies on the word alignments in the same way as a translation system would and, therefore, would be equally susceptible to the shortcomings of the word alignment techniques.</S>
    <S sid="420" ssid="304">To determine how noisy automatic word alignments affect paraphrasing done via bilingual corpora, we inspected a sample of paraphrase pairs that were extracted when using Arabic&#8212;a language significantly different from English&#8212;as the pivot language.11 In this study, we found that the paraphrase pairs in the sample set could be grouped into the following three broad categories: form of one of the words in the phrases and cannot really be considered paraphrases.</S>
    <S sid="421" ssid="305">Examples: (ten ton, ten tons), (caused clouds, causing clouds).</S>
    <S sid="422" ssid="306">Besides there being obvious linguistic differences between Arabic and English, the primary reason for the generation of phrase pairs that lie in categories (a) and (b) is incorrectly induced alignments between the English and Arabic words, and hence, phrases.</S>
    <S sid="423" ssid="307">Therefore, a good portion of subsequent work on paraphrasing using bilingual corpora, as discussed below focuses on using additional machinery or evidence to cope with the noisy alignment process.</S>
    <S sid="424" ssid="308">Before we continue, we believe it would be useful to draw a connection between Bannard and Callison-Burch&#8217;s (2005) work and that of Wu and Zhou (2003) as discussed in Section 3.2.</S>
    <S sid="425" ssid="309">Note that both of these techniques rely on a secondary language to provide the cues for generating paraphrases in the primary language.</S>
    <S sid="426" ssid="310">However, Wu and Zhou rely on a pre-compiled bilingual dictionary to discover these cues whereas Bannard and Callison-Burch have an entirely datadriven discovery process.</S>
    <S sid="427" ssid="311">In an attempt to address some of the noisy alignment issues, Callison-Burch (2008) recently proposed an improvement that places an additional syntactic constraint on the phrasal paraphrases extracted via the pivot-based method from bilingual corpora and showed that using such a constraint leads to a significant improvement in the quality of the extracted paraphrases.12 The syntactic constraint requires that the extracted paraphrase be of the same syntactic type as the original phrase.</S>
    <S sid="428" ssid="312">With this constraint, estimating the paraphrase probability now requires the incorporation of syntactic type into the equation: where s(e) denotes the syntactic type of the English phrase e. As before, maximum likelihood estimation is employed to compute the two component probabilities: number of times f&#175; is extracted with &#175;ej and type s(ek) number of times f&#175; is extracted with any e&#175; and type s(ek) p(&#175;ej |&#175;f, s(ek)) If the syntactic types are restricted to be simple constituents (NP, VP, etc.</S>
    <S sid="429" ssid="313">), then using this constraint will actually exclude some of the paraphrase pairs that could have been extracted in the unconstrained approach.</S>
    <S sid="430" ssid="314">This leads to the familiar precisionrecall tradeoff: It only extracts paraphrases that are of higher quality, but the approach has a significantly lower coverage of paraphrastic phenomena that are not necessarily syntactically motivated.</S>
    <S sid="431" ssid="315">To increase the coverage, complex syntactic types such as those used in Combinatory Categorial Grammars (Steedman 1996) are employed, which can help denote a syntactic constituent with children missing on the left and/or right hand sides.</S>
    <S sid="432" ssid="316">An example would be the complex type VP/(NP/NNS) which denotes a verb phrase missing a noun phrase to its right which, in turn, is missing a plural noun to its right.</S>
    <S sid="433" ssid="317">The primary benefit of using complex types is that less useful paraphrastic phrase pairs from different syntactic categories such as (accurately, precise), that would have been allowed in the unconstrained pivot-based approach, are now disallowed.</S>
    <S sid="434" ssid="318">The biggest advantage of this approach is the use of syntactic knowledge as one form of additional evidence in order to filter out phrase pairs from categories (a) and (b) as defined in the context of our manual inspection of pivot-based paraphrases above.</S>
    <S sid="435" ssid="319">Indeed, the authors conduct a manual evaluation to show that the syntactically constrained paraphrase pairs are better than those produced without such constraints.</S>
    <S sid="436" ssid="320">However, there are two additional benefits of this technique: We must also note that requiring syntactic constraints for pivot-based paraphrase extraction restricts the approach to those languages where a reasonably good parser is available.</S>
    <S sid="437" ssid="321">An obvious extension of the Callison-Burch style approach is to use the collection of pivoted English-to-English phrase pairs to generate sentential paraphrases for new sentences.</S>
    <S sid="438" ssid="322">Madnani et al. (2008a) combine the pivot-based approach to paraphrase acquisition with a well-defined English-to-English translation model that is then used in an (unmodified) SMT system, yielding sentential paraphrases by means of &#8220;translating&#8221; input English sentences.</S>
    <S sid="439" ssid="323">However, instead of fully lexicalized phrasal correspondences as in (Bannard and Callison-Burch 2005), the fundamental units of translation (and paraphrasing) are hierarchical phrase pairs.</S>
    <S sid="440" ssid="324">The latter can be extracted from the former by replacing aligned sub-phrases with non-terminal symbols.</S>
    <S sid="441" ssid="325">For example, given the initial phrase pair , growth rate has been effectively contained), the hierarchical phrase pair (X1 X2, X1 has been X2) can be formed.13 Each hierarchical phrase pair can also have certain features associated with it that are estimated via maximum likelihood estimation during the extraction process.</S>
    <S sid="442" ssid="326">Such phrase pairs can formally be considered the rules of a bilingual synchronous context-free grammar (SCFG).</S>
    <S sid="443" ssid="327">Translation with SCFGs is equivalent to parsing the string in the source language using these rules to generate the highest-scoring tree and then reading off the tree in target order.</S>
    <S sid="444" ssid="328">For the purposes of this survey, it is sufficient to state that efficient methods to extract such rules, to estimate their features, and to translate with them are now well established.</S>
    <S sid="445" ssid="329">For more details on building SCFG-based models and translating with them, we refer the reader to (Chiang 2006, 2007).</S>
    <S sid="446" ssid="330">Once a set of bilingual hierarchical rules has been extracted along with associated features, the pivoting trick can be applied to infer monolingual hierarchical paraphrase pairs (or paraphrastic patterns).</S>
    <S sid="447" ssid="331">However, the patterns are not the final output and are actually used as rules from a monolingual SCFG grammar in order to define an English-to-English translation model.</S>
    <S sid="448" ssid="332">Features for each monolingual rule are estimated in terms of the features of the bilingual pairs that the rule was inferred from.</S>
    <S sid="449" ssid="333">A sentential paraphrase can then be generated for any given sentence by using this model along with an n-gram language model and a regular SMT decoder to paraphrase (or monolingually translate) any sentence just as one would translate bilingually.</S>
    <S sid="450" ssid="334">The primary advantage of this approach is the ability to produce good quality sentential paraphrases by leveraging the SMT machinery to address the noise issue.</S>
    <S sid="451" ssid="335">However, although the decoder and the language model do serve to counter the noisy word alignment process, they do so only to a degree and not entirely.</S>
    <S sid="452" ssid="336">Again, we must draw a connection between this work and that of Quirk, Brockett, and Dolan (2004) (discussed in Section 3.3) because both treat paraphrasing as monolingual translation.</S>
    <S sid="453" ssid="337">However, as outlined in the discussion of that work, Quirk, Brockett, and Dolan use a relatively simplistic translation model and decoder which leads to paraphrases with little or no lexical variety.</S>
    <S sid="454" ssid="338">In contrast, Madnani et al. use a more complex translation model and an unmodified state-of-the-art SMT decoder to produce paraphrases that are much more diverse.</S>
    <S sid="455" ssid="339">Of course, the reliance of the latter approach on automatic word alignments does inevitably lead to much noisier sentential paraphrases than those produced by Quirk, Brockett, and Dolan.</S>
    <S sid="456" ssid="340">Kok and Brockett (2010) present a novel take on generating phrasal paraphrases with bilingual corpora.</S>
    <S sid="457" ssid="341">As with most approaches based on parallel corpora, they also start with phrase tables extracted from such corpora along with the corresponding phrasal translation probabilities.</S>
    <S sid="458" ssid="342">However, instead of performing the usual pivoting step with the bilingual phrases in the table, they take a graphical approach and represent each phrase in the table as a node, leading to a bipartite graph.</S>
    <S sid="459" ssid="343">Two nodes in the graph are connected to each other if they are aligned to each other.</S>
    <S sid="460" ssid="344">In order to extract paraphrases, they sample random paths in the graph from any English node to another.</S>
    <S sid="461" ssid="345">Note that the traditional pivot step is equivalent to a path of length two: one English phrase to the foreign pivot phrase and then to the potentially paraphrastic English phrase.</S>
    <S sid="462" ssid="346">By allowing paths of lengths longer than two, this graphical approach can find more paraphrases for any given English phrase.</S>
    <S sid="463" ssid="347">Furthermore, instead of restricting themselves to a single bilingual phrase table, they take as input a number of phrase tables, each corresponding to a different pair of six languages.</S>
    <S sid="464" ssid="348">Similar to the single-table case, each phrase in each table is represented as a node in a graph that is no longer bipartite in nature.</S>
    <S sid="465" ssid="349">By allowing edges to exist between nodes of all the languages if they are aligned, the pivot can now even be a set of nodes rather than a single node in another language.</S>
    <S sid="466" ssid="350">For example, one could easily find the following path in such a graph: ate lunch &#8594; a&#223;en zu ittag (German) &#8594; aten een hapje (Dutch) &#8594; had a bite In general, each edge is associated with a weight corresponding to the bilingual phrase translation probability.</S>
    <S sid="467" ssid="351">Random walks are then sampled from the graph in such a way that only paths of high probability end up contributing to the extracted paraphrases.</S>
    <S sid="468" ssid="352">Obviously, the alignment errors discussed in the context of simple pivoting will also have an adverse effect on this approach.</S>
    <S sid="469" ssid="353">In order to prevent this, the authors add special feature nodes to the graph in addition to regular nodes.</S>
    <S sid="470" ssid="354">These feature nodes represent domain-specific knowledge of what would make good paraphrases.</S>
    <S sid="471" ssid="355">For example, nodes representing syntactic equivalence classes of the start and end words of the English phrases are added.</S>
    <S sid="472" ssid="356">This indicates that phrases that start and end with the same kind of words (interrogatives or articles) are likely to be paraphrases.</S>
    <S sid="473" ssid="357">Astute readers will make the following observations about the syntactic feature nodes used by the authors: The authors extract paraphrases for a small set of input English paraphrases and show that they are able to generate a larger percentage of correct paraphrases compared to the syntactically constrained approach proposed by Callison-Burch (2008).</S>
    <S sid="474" ssid="358">They conduct no formal evaluation of the coverage of their approach but show that, in a limited setting, it is higher than that for the syntactically constrained pivot-based approach.</S>
    <S sid="475" ssid="359">However, they perform no comparisons of their coverage with the original pivot-based approach (Bannard and Callison-Burch 2005).</S>
  </SECTION>
  <SECTION title="4." number="5">
    <S sid="476" ssid="1">Before we present some specific techniques from the literature that have been employed to evaluate paraphrase generation methods, it is important to examine some recent work that has been done on constructing paraphrase corpora.</S>
    <S sid="477" ssid="2">As part of this work, human subjects are generally asked to judge whether two given sentences are paraphrases of each other.</S>
    <S sid="478" ssid="3">We believe that a detailed examination of this manual evaluation task provides an illuminating insight into the nature of a paraphrase in a practical, rather than a theoretical, context.</S>
    <S sid="479" ssid="4">In addition, it has obvious implications for any method, whether manual or automatic, that is used to evaluate the performance of a paraphrase generator.</S>
    <S sid="480" ssid="5">Dolan and Brockett (2005) were the first to attempt to build a paraphrase corpus on a large scale.</S>
    <S sid="481" ssid="6">The Microsoft Research Paraphrase (MSRP) Corpus is a collection of 5,801 sentence pairs, each manually labeled with a binary judgment as to whether it constitutes a paraphrase or not.</S>
    <S sid="482" ssid="7">As a first step, the corpus was created using a heuristic extraction method in conjunction with an SVM-based classifier that was trained to select likely sentential paraphrases from a large monolingual corpus containing news article clusters.</S>
    <S sid="483" ssid="8">However, the more interesting aspects of the task were the subsequent evaluation of these extracted sentence pairs by human annotators and the set of issues encountered when defining the evaluation guidelines for these annotators.</S>
    <S sid="484" ssid="9">It was observed that if the human annotators were instructed to mark only the sentence pairs that were strictly semantically equivalent or that exhibited bidirectional entailment as paraphrases, then the results were limited to uninteresting sentence pairs such as the following: S1: The euro rose above US$1.18, the highest price since its January 1999 launch.</S>
    <S sid="485" ssid="10">S2: The euro rose above $1.18, the highest level since its launch in January 1999.</S>
    <S sid="486" ssid="11">S1: However, without a carefully controlled study, there was little clear proof that the operation actually improves people&#8217;s lives.</S>
    <S sid="487" ssid="12">S2: But without a carefully controlled study, there was little clear proof that the operation improves people&#8217;s lives.</S>
    <S sid="488" ssid="13">Instead, they discovered that most of the complex paraphrases&#8212;ones with alternations more interesting than simple lexical synonymy and local syntactic changes&#8212; exhibited varying degrees of semantic divergence.</S>
    <S sid="489" ssid="14">For example: Therefore, in order to be able to create a richer paraphrase corpus, one with many complex alternations, the instructions to the annotators had to be relaxed; the degree of mismatch accepted before a sentence pair was judged to be fully semantically divergent (or &#8220;non-equivalent&#8221;) was left to the human subjects.</S>
    <S sid="490" ssid="15">It is also reported that, given the idiosyncratic nature of each sentence pair, only a few formal guidelines were generalizable enough to take precedence over the subjective judgments of the human annotators.</S>
    <S sid="491" ssid="16">Despite the somewhat loosely defined guidelines, the inter-annotator agreement for the task was 84%.</S>
    <S sid="492" ssid="17">However, a kappa score of 62 indicated that the task was overall a difficult one (Cohen 1960).</S>
    <S sid="493" ssid="18">At the end, 67% of the sentence pairs were judged to be paraphrases of each other and the rest were judged to be non-equivalent.14 Although the MSRP Corpus is a valuable resource and its creation provided valuable insight into what constitutes a paraphrase in the practical sense, it does have some shortcomings.</S>
    <S sid="494" ssid="19">For example, one of the heuristics used in the extraction process was that the two sentences in a pair must share at least three words.</S>
    <S sid="495" ssid="20">Using this constraint rules out any paraphrase pairs that are fully lexically divergent but still semantically equivalent.</S>
    <S sid="496" ssid="21">The small size of the corpus, when combined with this and other such constraints, precludes the use of the corpus as training data for a paraphrase generation or extraction system.</S>
    <S sid="497" ssid="22">However, it is fairly useful as a freely available test set to evaluate paraphrase recognition methods.</S>
    <S sid="498" ssid="23">On a related note, Fujita and Inui (2005) take a more knowledge-intensive approach to building a Japanese corpus containing sentence pairs with binary paraphrase judgments and attempt to focus on variety and on minimizing the human annotation cost.</S>
    <S sid="499" ssid="24">The corpus contains 2,031 sentence pairs each with a human judgment indicating whether the paraphrase is correct or not.</S>
    <S sid="500" ssid="25">To build the corpus, they first stipulate a typology of paraphrastic phenomena (rewriting light-verb constructions, for example) and then manually create a set of morpho-syntactic paraphrasing rules and patterns describing each type of paraphrasing phenomenon.</S>
    <S sid="501" ssid="26">A paraphrase generation system using these rules (Fujita et al. 2004) is then applied to a corpus containing Japanese news articles, and example paraphrases are generated for the sentences in the corpus.</S>
    <S sid="502" ssid="27">These paraphrase pairs are then handed to two human annotators who create binary judgments for each pair indicating whether or not the paraphrase is correct.</S>
    <S sid="503" ssid="28">Using a class-oriented approach is claimed to have a two-fold advantage: The biggest disadvantage of this approach is that only two types of paraphrastic phenomena are used: light-verb constructions and transitivity alternations (using intransitive verbs in place of transitive verbs).</S>
    <S sid="504" ssid="29">The corpus indeed captures almost all examples of both types of paraphrastic phenomena and any that are absent can be easily covered by adding one or two more patterns to the class.</S>
    <S sid="505" ssid="30">The claim of reduced annotation cost is not necessarily borne out by the observations.</S>
    <S sid="506" ssid="31">Despite partitioning the annotation task by types, it was still difficult to provide accurate annotation guidelines.</S>
    <S sid="507" ssid="32">This led to a significant difference in annotation time&#8212;with some annotations taking almost twice as long as others.</S>
    <S sid="508" ssid="33">Given the small size of the corpus, it is unlikely that it may be used as training data for corpus-based paraphrase generation methods and, like the MSRP corpus, would be best suited to the evaluation of paraphrase recognition techniques.</S>
    <S sid="509" ssid="34">Most recently, Cohn, Callison-Burch, and Lapata (2008) describe a different take on the creation of a monolingual parallel corpus containing 900 sentence pairs with paraphrase annotations that can be used for both development and evaluation of paraphrase systems.</S>
    <S sid="510" ssid="35">These paraphrase annotations take the form of alignments between the words and sequences of words in each sentence pair; these alignments are analogous to the word- and phrasal-alignments induced in SMT systems that were illustrated in Section 3.5.</S>
    <S sid="511" ssid="36">As is the case with SMT alignments, the paraphrase annotations can be of different forms: one-word-to-one-word, one-word-to-many-words, as well as fully phrasal alignments.15 The authors start from a sentence-aligned paraphrase corpus compiled from three corpora that we have already described elsewhere in this survey: (1) the sentence pairs judged equivalent from the MSRP Corpus: (2) the Multiple Translation Chinese (MTC) corpus of multiple human-written translations of Chinese news stories used by Pang, Knight, and Marcu (2003); and (3) two English translations of the French novel Twenty Thousand Leagues Under the Sea, a subset of the monolingual parallel corpus used by Barzilay and McKeown (2001).</S>
    <S sid="512" ssid="37">The words in each sentence pair from this corpus are then aligned automatically to produce the initial paraphrase annotations that are then refined by two human annotators.</S>
    <S sid="513" ssid="38">The annotation guidelines required that the annotators judge which parts of a given sentence pair were in correspondence and to indicate this by creating an alignment between those parts (or correcting already existing alignments, if present).</S>
    <S sid="514" ssid="39">Two parts were said to correspond if they could be substituted for each other within the specific context provided by the respective sentence pair.</S>
    <S sid="515" ssid="40">In addition, the annotators were instructed to classify the created alignments as either sure (the two parts are clearly substitutable) or possible (the two parts are slightly divergent either in terms of syntax or semantics).</S>
    <S sid="516" ssid="41">For example, given the following paraphrastic sentence pair: the phrase pair (the convention, the meeting) will be aligned as a sure correspondence whereas the phrase pair (was of profound significance, could have very long-term effects) will be aligned as a possible correspondence.</S>
    <S sid="517" ssid="42">Other examples of possible correspondences could include the same stem expressed as different parts-of-speech (such as (significance, significantly)) or two non-synonymous verbs (such as (this is also, this also marks)).</S>
    <S sid="518" ssid="43">For more details on the alignment guidelines that were provided to the annotators, we refer the reader to (Callison-Burch, Cohn, and Lapata 2006).</S>
    <S sid="519" ssid="44">Extensive experiments are conducted to measure inter-annotator agreements and obtain good agreement values but they are still low enough to confirm that it is difficult for humans to recognize paraphrases even when the task is formulated differently.</S>
    <S sid="520" ssid="45">Overall, such a paraphrase corpus with detailed paraphrase annotations is much more informative than a corpus containing binary judgments at the sentence level such as the MSRP corpus.</S>
    <S sid="521" ssid="46">As an example, because the corpus contains paraphrase annotations at the word as well as phrasal levels, it can be used to build systems that can learn from these annotations and generate not only fully lexicalized phrasal paraphrases but also syntactically motivated paraphrastic patterns.</S>
    <S sid="522" ssid="47">To demonstrate the viability of the corpus for this purpose, a grammar induction algorithm (Cohn and Lapata 2007) is applied&#8212;originally developed for sentence compression&#8212;to the parsed version of their paraphrase corpus and the authors show that they can learn paraphrastic patterns such as those shown in Figure 9.</S>
    <S sid="523" ssid="48">In general, building paraphrase corpora, whether it is done at the sentence level or at the sub-sentential level, is extremely useful for the fostering of further research and development in the area of paraphrase generation.</S>
  </SECTION>
  <SECTION title="5." number="6">
    <S sid="524" ssid="1">Whereas other language processing tasks such as machine translation and document summarization usually have multiple annual community-wide evaluations using An example of syntactically motivated paraphrastic patterns that can be extracted from the paraphrase corpus constructed by Cohn, Callison-Burch, and Lapata (2008). standard test sets and manual as well as automated metrics, the task of automated paraphrasing does not.</S>
    <S sid="525" ssid="2">An obvious reason for this disparity could be that paraphrasing is not an application in and of itself.</S>
    <S sid="526" ssid="3">However, the existence of similar evaluations for other tasks that are not applications, such as dependency parsing (Buchholz and Marsi 2006; Nivre et al. 2007) and word sense disambiguation (Senseval), suggests otherwise.</S>
    <S sid="527" ssid="4">We believe that the primary reason is that, over the years, paraphrasing has been employed in an extremely fragmented fashion.</S>
    <S sid="528" ssid="5">Paraphrase extraction and generation are used in different forms and with different names in the context of different applications (for example: synonymous collocation extraction, query expansion).</S>
    <S sid="529" ssid="6">This usage pattern does not allow researchers in one community to share the lessons learned with those from other communities.</S>
    <S sid="530" ssid="7">In fact, it may even lead to research being duplicated across communities.</S>
    <S sid="531" ssid="8">However, more recent work&#8212;some of it discussed in this survey&#8212;on extracting phrasal paraphrases (or patterns) does include direct evaluation of the paraphrasing itself: The original phrase and its paraphrase are presented to multiple human judges, along with the contexts in which the phrase occurs in the original sentence, who are asked to determine whether the relationship between the two phrases is indeed paraphrastic (Barzilay and McKeown 2001; Barzilay and Lee 2003; Ibrahim, Katz, and Lin 2003; Pang, Knight, and Marcu 2003).</S>
    <S sid="532" ssid="9">A more direct approach is to substitute the paraphrase in place of the original phrase in its sentence and present both sentences to judges who are then asked to judge not only their semantic equivalence but also the grammaticality of the new sentence (Bannard and Callison-Burch 2005; CallisonBurch 2008).</S>
    <S sid="533" ssid="10">Motivation for such substitution-based evaluation is discussed in CallisonBurch (2007): the basic idea being that items deemed to be paraphrases may behave as such only in some contexts and not others.</S>
    <S sid="534" ssid="11">Szpektor, Shnarch, and Dagan (2007) posit a similar form of evaluation for textual entailment wherein the human judges are not only presented with the entailment rule but also with a sample of sentences that match its left-hand side (called instances), and then asked to assess whether the rule holds under each specific instance.</S>
    <S sid="535" ssid="12">Sentential paraphrases may be evaluated in a similar fashion without the need for any surrounding context (Quirk, Brockett, and Dolan 2004).</S>
    <S sid="536" ssid="13">An intrinsic evaluation of this form must employ the usual methods for avoiding any bias and for maximizing inter-judge agreement.</S>
    <S sid="537" ssid="14">In addition, we believe that, given the difficulty of this task even for human annotators, adherence to strict semantic equivalence may not always be a suitable guideline and intrinsic evaluations must be very carefully designed.</S>
    <S sid="538" ssid="15">A number of these approaches also perform extrinsic evaluations, in addition to the intrinsic one, by utilizing the extracted or generated paraphrases to improve other applications such as machine translation (Callison-Burch, Koehn, and Osborne 2006) and others as described in Section 1.</S>
    <S sid="539" ssid="16">Another option when evaluating the quality of a paraphrase generation method is that of using automatic measures.</S>
    <S sid="540" ssid="17">The traditional automatic evaluation measures of precision and recall are not particularly suited to this task because, in order to use them, a list of reference paraphrases has to be constructed against which these measures may be computed.</S>
    <S sid="541" ssid="18">Given that it is extremely unlikely that any such list will be exhaustive, any precision and recall measurements will not be accurate.</S>
    <S sid="542" ssid="19">Therefore, other alternatives are needed.</S>
    <S sid="543" ssid="20">Since the evaluation of paraphrases is essentially the task of measuring semantic similarity or of paraphrase recognition, all of those metrics, including the ones discussed in Section 2, can be employed here.</S>
    <S sid="544" ssid="21">Most recently, Callison-Burch, Cohn, and Lapata (2008) discuss ParaMetric, another automatic measure that may be used to evaluate paraphrase extraction methods.</S>
    <S sid="545" ssid="22">This work follows directly from the work done by the authors to create the paraphraseannotated corpus described in the previous section.</S>
    <S sid="546" ssid="23">Recall that this corpus contains paraphrastic sentence pairs with annotations in the form of alignments between their respective words and phrases.</S>
    <S sid="547" ssid="24">It is posited that to evaluate any paraphrase generation method, one could simply have it produce its own set of alignments for the sentence pairs in the corpus and precision and recall could then be computed over alignments instead of phrase pairs.</S>
    <S sid="548" ssid="25">These alignment-oriented precision (Palign) and recall (Ralign) measures are computed as follows: where (s1,s2) denotes a sentence pair, NM(s1,s2) denotes the phrases extracted via the manual alignments for the pair (s1, s2), and NP(s1,s2) denotes the phrases extracted via the automatic alignments induced using the paraphrase method P that is to be evaluated.</S>
    <S sid="549" ssid="26">The phrase extraction heuristic used to compute NP and NM from the respective alignments is the same as that employed by Bannard and Callison-Burch (2005) and illustrated in Figure 8.</S>
    <S sid="550" ssid="27">Although using alignments as the basis for computing precision and recall is a clever trick, it does require that the paraphrase generation method be capable of producing alignments between sentence pairs.</S>
    <S sid="551" ssid="28">For example, the methods proposed by Pang, Knight, and Marcu (2003) and Quirk, Brockett, and Dolan (2004) for generating sentential paraphrases from monolingual parallel corpora and described in Section 3.3 do produce alignments as part of their respective algorithms.</S>
    <S sid="552" ssid="29">Indeed, Callison-Burch et al. provide a comparison of their pivot-based approach&#8212;operating on bilingual parallel corpora&#8212;with the two monolingual approaches just mentioned in terms of ParaMetric, since all three methods are capable of producing alignments.</S>
    <S sid="553" ssid="30">However, for other approaches that do not necessarily operate at the level of sentences and cannot produce any alignments, falling back on estimates of traditional formulations of precision and recall is suggested.</S>
    <S sid="554" ssid="31">There has also been some preliminary progress toward using standardized test sets for intrinsic evaluations.</S>
    <S sid="555" ssid="32">A test set containing 20 AFP articles (484 sentences) about violence in the Middle East that was used for evaluating the lattice-based paraphrase technique in (Barzilay and Lee 2003) has been made freely available.16 In addition to the original sentences for which the paraphrases were generated, the set also contains the paraphrases themselves and the judgments assigned by human judges to these paraphrases.</S>
    <S sid="556" ssid="33">The paraphrase-annotated corpus discussed in the previous section would also fall under this category of resources.</S>
    <S sid="557" ssid="34">As with many other fields in NLP, paraphrase generation also lacks serious extrinsic evaluation (Belz 2009).</S>
    <S sid="558" ssid="35">As described herein, many paraphrase generation techniques are developed in the context of a host NLP application and this application usually serves as one form of extrinsic evaluation for the quality of the paraphrases generated by that technique.</S>
    <S sid="559" ssid="36">However, as yet there is no widely agreed-upon method of extrinsically evaluating paraphrase generation.</S>
    <S sid="560" ssid="37">Addressing this deficiency should be a crucial consideration for any future community-wide evaluation effort.</S>
    <S sid="561" ssid="38">An important dimension for any area of research is the availability of fora where members of the community may share their ideas with their colleagues and receive valuable feedback.</S>
    <S sid="562" ssid="39">In recent years, a number of such fora have been made available to the automatic paraphrasing community (Inui and Hermjakob 2003; Tanaka et al. 2004; Dras and Yamamoto 2005; Sekine et al.</S>
    <S sid="563" ssid="40">2007), which represents an extremely important step toward countering the fragmented usage pattern described previously.</S>
  </SECTION>
  <SECTION title="6." number="7">
    <S sid="564" ssid="1">It is important for any survey to provide a look to the future of the surveyed task and general trends for the corresponding research methods.</S>
    <S sid="565" ssid="2">We identify several such trends in the area of paraphrase generation that are gathering momentum.</S>
    <S sid="566" ssid="3">The Influence of the Web.</S>
    <S sid="567" ssid="4">The Web is rapidly becoming one of the most important sources of data for natural language processing applications, which should not be surprising given its phenomenal rate of growth.</S>
    <S sid="568" ssid="5">The (relatively) freely available Web data, massive in scale, has already had a definite influence over data-intensive techniques such as those employed for paraphrase generation (Pas&#184;ca and Dienes 2005).</S>
    <S sid="569" ssid="6">However, the availability of such massive amounts of Web data comes with serious concerns for efficiency and has led to the development of efficient methods that can cope with such large amounts of data.</S>
    <S sid="570" ssid="7">Bhagat and Ravichandran (2008) extract phrasal paraphrases by measuring distributional similarity over a 150GB monolingual corpus (25 billion words) via locality sensitive hashing, a randomized algorithm that involves the creation of fingerprints for vectors in space (Broder 1997).</S>
    <S sid="571" ssid="8">Because vectors that are more similar are more likely to have similar fingerprints, vectors (or distributions) can simply be compared by comparing their fingerprints, leading to a more efficient distributional similarity algorithm (Charikar 2002; Ravichandran, Pantel, and Hovy 2005).</S>
    <S sid="572" ssid="9">We also believe that the influence of the Web will extend to other avenues of paraphrase generation such as the aforementioned extrinsic evaluation or lack thereof.</S>
    <S sid="573" ssid="10">For example, Fujita and Sato (2008b) propose evaluating phrasal paraphrase pairs, automatically generated from a monolingual corpus, by querying the Web for snippets related to the pairs and using them as features to compute the pair&#8217;s paraphrasability.</S>
    <S sid="574" ssid="11">Combining Multiple Sources of Information.</S>
    <S sid="575" ssid="12">Another important trend in paraphrase generation is that of leveraging multiple sources of information to determine whether two units are paraphrastic.</S>
    <S sid="576" ssid="13">For example, Zhao et al. (2008) improve the sentential paraphrases that can be generated via the pivot method by leveraging five other sources in addition to the bilingual parallel corpus itself: (1) a corpus of Web queries similar to the phrase, (2) definitions from the Encarta dictionary, (3) a monolingual parallel corpus, (4) a monolingual comparable corpus, and (5) an automatically constructed thesaurus.</S>
    <S sid="577" ssid="14">Phrasal paraphrase pairs are extracted separately from all six models and then combined in a log-linear paraphrasing-as-translation model proposed by Madnani et al. (2007).</S>
    <S sid="578" ssid="15">A manual inspection reveals that using multiple sources of information yields paraphrases with much higher accuracy.</S>
    <S sid="579" ssid="16">We believe that such exploitation of multiple types of resources and their combinations is an important development.</S>
    <S sid="580" ssid="17">Zhao et al. (2009) further increase the utility of this combination approach by incorporating application specific constraints on the pivoted paraphrases.</S>
    <S sid="581" ssid="18">For example, if the output paraphrases need to be simplified versions of the input sentences, then only those phrasal paraphrase pairs are used where the output is shorter than the input.</S>
    <S sid="582" ssid="19">Use of SMT Machinery.</S>
    <S sid="583" ssid="20">In theory, statistical machine translation is very closely related to paraphrase generation since the former also relies on finding semantic equivalence, albeit in a second language.</S>
    <S sid="584" ssid="21">Hence, there have been numerous paraphrasing approaches that have relied on different components of an SMT pipeline (word alignment, phrase extraction, decoding/search) as we saw in the preceding pages of this survey.</S>
    <S sid="585" ssid="22">Despite the obvious convenience of using SMT components for the purpose of monolingual translation, we must consider that doing so usually requires additional work to deal with the added noise due to the nature of such components.</S>
    <S sid="586" ssid="23">We believe that SMT research will continue to influence research in paraphrasing; both by providing readyto-use building blocks and by necessitating development of methods to effectively use such components for the unintended task of paraphrase generation.</S>
    <S sid="587" ssid="24">Domain-Specific Paraphrasing.</S>
    <S sid="588" ssid="25">Recently, work has been done to generate phrasal paraphrases in specialized domains.</S>
    <S sid="589" ssid="26">For example, in the field of health literacy, it is well known that documents for health consumers are not very well-targeted to their purported audience.</S>
    <S sid="590" ssid="27">Recent research has shown how to generate a lexicon of semantically equivalent phrasal (and lexical) pairs of technical and lay medical terms from monolingual parallel corpora (Elhadad and Sutaria 2007) as well as monolingual comparable corpora (Del&#180;eger and Zweigenbaum 2009).</S>
    <S sid="591" ssid="28">Examples include pairs such as (myocardial infarction, heart attack) and (leucospermia, increased white cells in the sperm).</S>
    <S sid="592" ssid="29">In another domain, Max (2008) proposes an adaptation of the pivot-based method to generate rephrasings of short text spans that could help a writer revise a text.</S>
    <S sid="593" ssid="30">Because the goal is to assist a writer in making revisions, the rephrasings do not always need to bear a perfect paraphrastic relationship to the original, a scenario suited for the pivot-based method.</S>
    <S sid="594" ssid="31">Several variants of such adaptations are developed that generate candidate rephrasings driven by fluency, semantic equivalence, and authoring value, respectively.</S>
    <S sid="595" ssid="32">We also believe that a large-scale annual community-wide evaluation should become a trend since it is required to foster further research in, and use of, paraphrase extraction and generation.</S>
    <S sid="596" ssid="33">Although there have been recent workshops and tasks on paraphrasing and entailment as discussed in Section 5, this evaluation would be much more focused, providing sets of shared guidelines and resources, in the spirit of the recent NIST MT Evaluation Workshops (NIST 2009).</S>
  </SECTION>
  <SECTION title="7." number="8">
    <S sid="597" ssid="1">Over the last two decades, there has been much research on paraphrase extraction and generation within a number of research communities in natural language processing, in order to improve the specific application with which that community is concerned.</S>
    <S sid="598" ssid="2">However, a large portion of this research can be easily adapted for more widespread use outside its particular host and can provide significant benefits to the whole field.</S>
    <S sid="599" ssid="3">Only recently have there been serious efforts to conduct research on the topic of paraphrasing by treating it as an important natural language processing task independent of a host application.</S>
    <S sid="600" ssid="4">In this article, we have presented a comprehensive survey of the task of paraphrase extraction and generation motivated by the fact that paraphrases can help in a multitude of applications such as machine translation, text summarization, and information extraction.</S>
    <S sid="601" ssid="5">The aim was to provide an application-independent overview of paraphrase generation, while also conveying an appreciation for the importance and potential use of paraphrasing in the field of NLP research.</S>
    <S sid="602" ssid="6">We show that there are a large variety of paraphrase generation methods and each such method has a very different set of characteristics, in terms of both its performance and its ease of deployment.</S>
    <S sid="603" ssid="7">We also observe that whereas most of the methods in this survey can be used in multiple applications, the choice of the most appropriate method depends on how well the characteristics of the produced paraphrases match the requirements of the downstream application in which the paraphrases are being utilized.</S>
  </SECTION>
</PAPER>
