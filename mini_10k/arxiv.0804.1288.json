{"id": "http://arxiv.org/abs/0804.1288v2", "guidislink": true, "updated": "2008-08-23T02:47:47Z", "updated_parsed": [2008, 8, 23, 2, 47, 47, 5, 236, 0], "published": "2008-04-08T14:36:04Z", "published_parsed": [2008, 4, 8, 14, 36, 4, 1, 99, 0], "title": "EtabFDC: an $\u03b7_b$ event generator in hadroproduction at LHC", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0804.4291%2C0804.1185%2C0804.2208%2C0804.1727%2C0804.3287%2C0804.2911%2C0804.3880%2C0804.1288%2C0804.3269%2C0804.1108%2C0804.0474%2C0804.1982%2C0804.3779%2C0804.3015%2C0804.2792%2C0804.4351%2C0804.0780%2C0804.1776%2C0804.0549%2C0804.4370%2C0804.2203%2C0804.2985%2C0804.1016%2C0804.4729%2C0804.1339%2C0804.4109%2C0804.4486%2C0804.3557%2C0804.1845%2C0804.0450%2C0804.3427%2C0804.3976%2C0804.0558%2C0804.4406%2C0804.0265%2C0804.2712%2C0804.3780%2C0804.2196%2C0804.1226%2C0804.1046%2C0804.2657%2C0804.3463%2C0804.1865%2C0804.0370%2C0804.3767%2C0804.4717%2C0804.2075%2C0804.1199%2C0804.3205%2C0804.2626%2C0804.2251%2C0804.0668%2C0804.3506%2C0804.4736%2C0804.1351%2C0804.0114%2C0804.2050%2C0804.4396%2C0804.3304%2C0804.1867%2C0804.1947%2C0804.3955%2C0804.4246%2C0804.0657%2C0804.0697%2C0804.1448%2C0804.0739%2C0804.3757%2C0804.2668%2C0804.4628%2C0804.2745%2C0804.0830%2C0804.0752%2C0804.4031%2C0804.0856%2C0804.3683%2C0804.2983%2C0804.2021%2C0804.4306%2C0804.3350%2C0804.1584%2C0804.4132%2C0804.3663%2C0804.4693%2C0804.4823%2C0804.1533%2C0804.0198%2C0804.1279%2C0804.0838%2C0804.1072%2C0804.0577%2C0804.0871%2C0804.2581%2C0804.2359%2C0804.1232%2C0804.1231%2C0804.4380%2C0804.1084%2C0804.4007%2C0804.4601%2C0804.3318&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "EtabFDC: an $\u03b7_b$ event generator in hadroproduction at LHC"}, "summary": "The EtabFDC is a matrix-element event generator package for $\\eta_b$\nhadroproduction at LHC. It generates $pp\\to\\eta_b X$ events for all possible\nparton-level $2\\to2$ leading-order processes with three commonly used $\\eta_b$\ndecay channels being implemented. The \\pythia interface is used for\nparton-shower and hadronization to obtain the hadronic events. The FORTRAN\ncodes of this package are generated by FDC (Feynman Diagram Calculation) system\nautomatically.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0804.4291%2C0804.1185%2C0804.2208%2C0804.1727%2C0804.3287%2C0804.2911%2C0804.3880%2C0804.1288%2C0804.3269%2C0804.1108%2C0804.0474%2C0804.1982%2C0804.3779%2C0804.3015%2C0804.2792%2C0804.4351%2C0804.0780%2C0804.1776%2C0804.0549%2C0804.4370%2C0804.2203%2C0804.2985%2C0804.1016%2C0804.4729%2C0804.1339%2C0804.4109%2C0804.4486%2C0804.3557%2C0804.1845%2C0804.0450%2C0804.3427%2C0804.3976%2C0804.0558%2C0804.4406%2C0804.0265%2C0804.2712%2C0804.3780%2C0804.2196%2C0804.1226%2C0804.1046%2C0804.2657%2C0804.3463%2C0804.1865%2C0804.0370%2C0804.3767%2C0804.4717%2C0804.2075%2C0804.1199%2C0804.3205%2C0804.2626%2C0804.2251%2C0804.0668%2C0804.3506%2C0804.4736%2C0804.1351%2C0804.0114%2C0804.2050%2C0804.4396%2C0804.3304%2C0804.1867%2C0804.1947%2C0804.3955%2C0804.4246%2C0804.0657%2C0804.0697%2C0804.1448%2C0804.0739%2C0804.3757%2C0804.2668%2C0804.4628%2C0804.2745%2C0804.0830%2C0804.0752%2C0804.4031%2C0804.0856%2C0804.3683%2C0804.2983%2C0804.2021%2C0804.4306%2C0804.3350%2C0804.1584%2C0804.4132%2C0804.3663%2C0804.4693%2C0804.4823%2C0804.1533%2C0804.0198%2C0804.1279%2C0804.0838%2C0804.1072%2C0804.0577%2C0804.0871%2C0804.2581%2C0804.2359%2C0804.1232%2C0804.1231%2C0804.4380%2C0804.1084%2C0804.4007%2C0804.4601%2C0804.3318&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The EtabFDC is a matrix-element event generator package for $\\eta_b$\nhadroproduction at LHC. It generates $pp\\to\\eta_b X$ events for all possible\nparton-level $2\\to2$ leading-order processes with three commonly used $\\eta_b$\ndecay channels being implemented. The \\pythia interface is used for\nparton-shower and hadronization to obtain the hadronic events. The FORTRAN\ncodes of this package are generated by FDC (Feynman Diagram Calculation) system\nautomatically."}, "authors": ["Cong-Feng Qiao", "Jian Wang", "Jian Xiong Wang", "Yangheng Zheng"], "author_detail": {"name": "Yangheng Zheng"}, "author": "Yangheng Zheng", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1016/j.cpc.2008.08.003", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/0804.1288v2", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0804.1288v2", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "23 pages, 6 figures", "arxiv_primary_category": {"term": "hep-ph", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "hep-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "hep-ex", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0804.1288v2", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0804.1288v2", "journal_reference": "Comput.Phys.Commun.180:61-68,2009", "doi": "10.1016/j.cpc.2008.08.003", "fulltext": "arXiv:0804.1288v2 [hep-ph] 23 Aug 2008\n\nEtabFDC:\nan \u03b7b event generator in hadroproduction at\nLHC\n\nCong-Feng Qiao a,c , Jian Wang a , Jian Xiong Wang b ,\nYangheng Zheng a\na Graduate\n\nUniversity of Chinese Academy of Sciences, Beijing, 100049, China\n\nb Institute\nc Theoretical\n\nof High Energy Physics, CAS, Beijing 100049, China\n\nPhysics Center for Science Facilities, CAS, Beijing 100049, China\n\nAbstract\nThe EtabFDC is a matrix-element event generator package for \u03b7b hadroproduction at LHC. It generates pp \u2192 \u03b7b X events for all possible parton-level 2 \u2192 2\nleading-order processes with three commonly used \u03b7b decay channels being implemented. The Pythia interface is used for parton-shower and hadronization to obtain\nthe hadronic events. The FORTRAN codes of this package are generated by FDC\n(Feynman Diagram Calculation) system automatically.\nKey words: Event generator, FDC, Etab\nPACS: 02.70-c, 11.55.Hx\n\nProgram summary\n\nProgram Title: EtabFDC (Version 1.01)\nKeywords: Event generator, FDC, Etab\nPACS: 02.70-c; 11.55.Hx\nOperating system: Linux (with GNU FORTRAN 77 compiler)\nProgramming language: FORTRAN 77\nExternal libraries: CERNLIB 2001 (or CERNLIB 2003)\n\nPreprint submitted to Elsevier\n\n4 May 2019\n\n\fDistribution format: tar gzip file\nSize of the compressed distribution file: 17.1M Bytes.\nClassification: 11.1\nNature of physical problem: This package generates pp \u2192 \u03b7b X events for partonic 2 \u2192 2 tree-level processes with implementing three \u03b7b decay channels. It\nthen interfaces with Pythia for parton-shower and hadronization to obtain\nthe hadronic events.\nMethod of solution: The FORTRAN codes of this package are generated by\nFDC system[10] automatically.\nTypical running time: To generate 1,000 events on a 3.2G Intel-P4 CPU platform (with hyper-technology), it will take approximate 20, 30 and 300 seconds\nfor decay channel \u03b7b \u2192 J/\u03c8\u03b3, \u03b7b \u2192 J/\u03c8J/\u03c8 and \u03b7b \u2192 J/\u03c8cc\u0304 respectively.\n\n1\n\nIntroduction\n\nAs the bb\u0304 ground state, \u03b7b has been a focus in high energy physics since it had\nnot been found experimentally for more than thirty years. Many theoretical\nmodels[1,2,3,4,5,6,7,8,9] estimated the properties of \u03b7b . The commissioning\nLHC experiments will provide a excellent opportunity to search for the signal\nof \u03b7b . Thus, an event generator software, that simulates the \u03b7b production and\ndecays, is necessary to understand the reconstructed signal and backgrounds\nin the pp collision environment. In this work, we just present such a package,\nnamed EtabFDC, that can generate pp \u2192 \u03b7b X events from leading-order (LO)\nprocesses (Fig. 4 and Fig. 5) at parton-level. Here, the total cross-section of the\n\u03b7b production is calculated to be 9.3 \u00d7 107 Pb. Three \u03b7b decay modes, that may\nbe reconstructed by the LHC experiments, are included in this package. They\nare: \u03b7b \u2192 J/\u03c8\u03b3 [12], \u03b7b \u2192 J/\u03c8J/\u03c8 and \u03b7b \u2192 J/\u03c8cc\u0304 [13]. If the branching-ratio\nis provided, we can estimate the number of produced \u03b7b events of a specific\ndecay channel in LHC for a given luminosity. For example, the theoretical\nprediction of the branching-ratio of channel \u03b7b \u2192 J/\u03c8J/\u03c8 is 5\u00d710\u22128 . And\nconsidering the 1f b\u22121 data collected by the LHC detector in the first year,\nthe number of \u03b7b \u2192 J/\u03c8J/\u03c8 events produced is about 4650. Under current\nsoftware framework, more decay channels can be added as the independent\nmodules by the future demand.\nFeynman Diagram Calculation package (FDC) [10,11] is one of the projects\nwhich aimed at calculationg Feynman diagram automatically. It can conveniently implement physical models from the first principle, then construct\n2\n\n\ftheir Lagrangian s, deduce the Feynman rules and generate FORTRAN codes\nfor calculations of physical quantities such as decay width, cross-section and\nmatrix-element. EtabFDC is a FDC application and its FORTRAN codes for\nthe calculation of the \u03b7b production processes are generated by FDC automatically. And the three decay modes of \u03b7b are added by manual wrok. In\nthis way, many careless errors can be systematically checked and debugged.\nEtabFDC has interface with Pythia to generating the hadronic events.\nAs a test, we plot the 2-initial-partons' centre of mass (c.m.) energy (Fig. 1)\nand the transverse-momentum pt (Fig. 2) distributions with \u221agenerating 20million \u03b7b events. Here, we put the pp collisions energy at s = 14 TeV.\nAnd the \u03b7b mass value is set to be 9.3 GeV. In Fig. 1, the peak at 9.3 GeV\ncorresponds to the g + g \u2192 \u03b7b process, where the c.m. energy of the two initial\ngluons has to be equal to the mass of \u03b7b . Please also note that, in Fig. 2, a\nbump around 3 GeV is produced for the fragmentation processes. The crosssection shortfall below 3 GeV is caused by a transverse-momentum cut, pt > 3\nGeV, on the fragmented parton b or g, which then form the \u03b7b . We obtained\nthe expected results from the simulation output.\n\nFig. 1. Differential cross-section of \u03b7b production vs c.m. energy of the 2 initial\npartons for the 2 \u2192 2 tree-level processes\n\n3\n\n\fFig. 2. \u03b7b production cross-section vs transverse momentum pt\n\nThis paper is organized as follows: The installation procedures and the directory structures are described in Section 2. In Section 3, we describe the\ndetails of the implementation of EtabFDC package. Section 4 presents the usage manual. Sections 5 describes the interface and format of the output files.\nThe summary is presented in Section 6.\n\n2\n\nInstallation and the directory structures\n\n2.1\n\nInstallation\n\nThe EtabFDC runs under Linux system and GNU FORTRAN 77 compiler is required (other FORTRAN compilers are not tested). The necessary Pythia\nlibrary files are included in the package for convenience. The CERN program\nLibrary 2001 or 2003 is also required, but not included with this package\nto avoid possible platform and compiler incompatibility. The package is distributed in a compressed file named etabfdc.taz and can be downloaded\nfrom FDC homepage:\nhttp://www.ihep.ac.cn/lunwen/wjx/public_html/genpack/genpack.html\n4\n\n\fThe installation steps are given below and for convenience we assume that\n\n1\n\n:\n\n1. the current user account is user;\n2. the current directory is /home/user;\n3. it is assumed that the user use \"csh\" ; if not , the user should execute\n\"chsh useraccount\" or \"ypchsh useraccount\" to change the shell class\nto cshell ;\n4. CERN library should be CERN2001.\nFor the installation, user first need to decompress the downloaded gzip file by\ntyping the following command.\n\"tar -xzvf etabfdc.taz\"\nthen home directory \"etabfdc\" is generated. Secondly, get into it by \"cd\netabfdc\" and set the correct path of CERN library in env.csh,then execute:\n\"source env.csh\" and \"installlib\".\nIt will do the installation.\n\n2.2\n\nDirectory structures\n\nAfter the successful decompression and setting up the environment, user can\nfind six sub-directories (see Fig. 3) in the installation directory. They are\nbasesv5.1, etab-generator, f77, ggetab1, ggetab2 and ggetab3. The directory basev5.1 stores BASES libraries used for Monte-Carlo calculation of\nthe cross-section integral. The directory f77 are the common-shared computational tools for \u03b7b decay processes and the directory etab-generator contains\nthe \u03b7b production information.\nggetab1,ggetab2 and ggetab3 are three important directories that contain\nthe parton-level annihilation and fragmentation channels, and correspond to\nthree different \u03b7b decay channels: \u03b7b \u2192 J/\u03c8\u03b3, \u03b7b \u2192 J/\u03c8J/\u03c8 and \u03b7b \u2192 J/\u03c8cc\u0304,\nrespectively. All the compiled executable programs and the input files for each\ndecay channel are stored here. Fully installed package substructure are shown\nin Fig. 3, based on which the EtabFDC package is constructed into three\nrunning levels.\nMany generators (such as Pythia ) are programmed in such a way that all\nimplemented processes are packed into a single FORTRAN file and some variables are used to enable or disable these processes. Nevertheless, EtabFDC\nworks in a different way. There are three running levels for generating pp \u2192\n\u03b7b X events. And each running level consists of a series of stand-alone executable programs and input-files which are stored in different sub-directories.\n1\n\nUsers can substitute the paths with their own working directory while installing\nthe EtabFDC package.\n\n5\n\n\fFig. 3. Directory structure of EtabFDC\n\nThe introduction to the running levels and the details of substructure of the\ndirectories will be given in the following section.\n\n3\n\nImplementation\n\nIn EtabFDC, the cross section of each LO process is calculated by using\nBASES[15] package) at first and these cross sections are used as the weight\nfor each processes. The spring in BASES is used to generate parton-level \u03b7b\nevents for each processes. and then the parton-level \u03b7b events are passed to\nPythia [17] by Les Houches Interface Standard[18] for partonic showering\nand hadronization. The interface with Pythia is shown in Fig. 6, and will be\ndescribed in section 3.5.\nWe implement the EtabFDC in such a flexible way that users have options to\nselect on generating events from three running levels.\n6\n\n\f3.1\n\nGenerality about running levels\n\nAs shown in Fig. 3, There is a set of stand-alone programs to generate events\nat each running level as, for all processes at running level 1, for a certain class,\nannihilation or fragmentation, of processes at running level 2, or for a specific\nprocess at running level 3.\n\nFor the three \u03b7b decay channels, the programs for \"level 1\" are stored in\nggetab1/fort , ggetab2/fort and ggetab3/fort respectively. The directories f1 and f2 under ggetab1(or ggetab2,ggetab3) are called f-directories,\nwhich contain the stand-alone programs for \"level 2\". These programs are\nstored in fn /fort. f1 or f1 contains the annihilation or the fragmentation\nprocesses. The directories t1, t2 and etc under f-directories are called tdirectories for \"level 3\". These programs are stored in tn /fort and can\ngenerate unweighted events for each specific process.\n\nIn the following, the symbol \"q\" is used to represent \"u, d, s\" quarks. The\nt-directories under f1 for annihilation processes is :\nt1 : q + q\u0304 \u2192 \u03b7b + \u03b3\nt2 : g + s \u2192 \u03b7b + s\nt3 : g + d \u2192 \u03b7b + d\nt4 : g + u \u2192 \u03b7b + u\nt5 : g + g \u2192 \u03b7b + g\nt6 : g + g \u2192 \u03b7b .\nThe Feynman diagrams are shown in Fig. 4 (u quark is used as example for q\nhere).\n7\n\n\f(a) q + q\u0304 \u2192 \u03b7b + \u03b3\n\n(b) g + q \u2192 \u03b7b + q\n\n(c) g + g \u2192 \u03b7b + g\n\n(d) g + g \u2192 \u03b7b\nFig. 4. Feynman diagrams for the leading-order annihilation processes in the \u03b7b\ngeneration.\n\nSimilarly, the t-directories under f2 for the fragmentation processes is:\nt1 : q + q\u0304 \u2192 g + g\nt2 : g + s \u2192 g + s\nt3 : g + d \u2192 g + d\nt4 : g + u \u2192 g + u\nt5 : g + g \u2192 g + g\nt6 : q + q\u0304 \u2192 b + b\u0304\nt7 : g + g \u2192 b + b\u0304,\nWhere the gluon and b or b\u0304 can fragment into \u03b7b . The Feynman diagrams are\nshown in Fig. 5 (u quark is used as example for q here).\n8\n\n\fFor each process, the value of cross-section is saved in the file fresult.dat in\nfort directory under the directory of the process.\n\n(a) q + q\u0304 \u2192 g + g\n\n(b) g + q \u2192 g + q\n\n(c) g + g \u2192 g + g\n\n(d) q + q\u0304 \u2192 b+ b\u0304\n\n(e) g + g \u2192 b + b\u0304\nFig. 5. Feynman diagrams for the leading-order fragmentation processes in the \u03b7b\ngeneration.\n\nAmong the three running levels, only level 3 interfaces with Pythia directly,\nwhile level 1 and 2 interface with Pythia through level 3. Interfacing details\nwill be discribed in section 3.5.\n\n3.2\n\nRunning level 3\n\nWhen EtabFDC runs at level 3, it first generates unweighted matrix-element\nevents and then interfaces with Pythia for parton-showering and hadronization to obtain hadronic events. In this running level, each t-directory contains\na specific parton-level process. There are three executable programs and one\ninput-file stored in ggetabn /tn /fort. They are listed in table 1.\nThe programs int and gevent can be called by fdcpythia automatically. The\nprogram fdcpythia reads parameter.input for the initial parameters. The\nformat of parameter.input is described as: each parameter occupies one line;\nin each line, the parameter name and value are separated by a equal sign (i.e.\n\"=\") like:\n9\n\n\fTable 1\nExecutable programs in level 3\ncalculates and stores the cross-section\n\nint\n\nin file fort/fresult.dat\ngevent\n\ngenerates and stores parton-level events with \u03b7b being decayed\nin file fort/pdata1.dat\n\nfdcpythia\n\ninterfaces with Pythia and stores the final hadronic events\nin file fort/pyresult.dat\n\nparameter.input\n\ninput-file in which users can specify initial parameters\nsuch as running level and number of events\n\nparameter = value;\nthe line which begins with a number sign (i.e. \"#\") is recognized as the comment. All parameters used by EtabFDC in parameter.input of running level\n3 are listed with brief explanation as:\nRUNNINGLEVEL(=1,2,3) : To specify the running level. When EtabFDC runs\nat level 3, it should be set to 3 by users. Otherwise it will be set\nautomatically.\nEVNTNUM : To specify the number of the generated hadronic events.\nPARTONEVNTNUM : The number of the generated parton-level events. Since\nPythia can reject some parton-level events, we need to set this\nnumber greater than the final event number. Typically, it should\nbe set at least 20 percent more than EVNTNUM.\nPRESENTEVNTNUM : The number of generated hadronic events in the last run.\nIt is set automatically and should not be modified by users.\nRESET\n: To control the program fdcpythia to run in two different modes \u2013\nRe-generation mode and Appending mode. In EtabFDC package,\nwe only use the Re-generation mode (=1), since all the generated\nevents are erased, and new parton-level events and hadronic events\nare generated.\n\n3.3\n\nRunning level 2\n\nWhen EtabFDC runs at level 2, it generates either annihilation or fragmentation class of parton-level events. For each class, the cross-section of each\nparton-level process are used as weight of the total generated number of events.\nIn this level, each class of the processes corresponds to an f-directory. There are\nsix programs for each class of processes which are stored in ggetabn /fn /fort\nand listed in table 2\n10\n\n\fTable 2\nExecutable programs for level 2\ncall int of every t-directory of the current class and stores\n\nint\n\nthe total cross-section in file fort/fresult.dat\ngevent\n\ngenerates and stores parton-level \u03b7b events of current class\nin file fort/pdata1.dat\n\nfdcpythia\n\ngenerates hadronic events of the current class using\ncross-section of each process as weight and stores\nin file fort/pyresult.dat\n\nparameter.input\n\ninput-file in which users can specify intimal parameters\nfor the current run level\n\npararefresh1\n\npass parameter RESET in level 2 to level 3\nand overwrite its value in level 3\n\npararefresh2\n\npass parameter RUNNINGLEVEL in level 2 to level 3\nand overwrite its value in level 3\n\npararefresh3\n\npass parameter PARTONEVNTNUM in level 2 to level 3\nand overwrite its value in level 3\n\nThe program fdcpythia uses cross-section as weight to determine the number\nof events for each process in the current class. And then each process calls its\nown fdcpythia for the event generation.After executed fdcpythia,user should\ngo back to ggetabn /fn to execute mvdir to generate the hbook document\nfor the annihilation or fragmentation process\nThe content of the configuration-file parameter.input is the same as the one\nat level 3 except the parameter RUNNINGLEVEL should be set to 2.\n\n3.4\n\nRunning level 1\n\nWhen EtabFDC runs at level 1, both annihilation and fragmentation processes\nare enabled in the event generation. There are six programs int, gevent,\nfdcpythia, pararefresh1, pararefresh2 and pararefresh3 stored in directory ggetabn /fort and function similarly as their counterparts at level\n2. After executed fdcpythia,user should also go back to ggetabn to execute\nmvdir to generate the hbook document.The input-file parameter.input is\nalso kept in ggetabn /fort, and its content is the same as the one at level 2\nexcept that the parameter RUNNINGLEVEL should be set to 1.\n11\n\n\f3.5\n\nInterface with PYTHIA\n\nThe EtabFDC generates parton-level events which consists of four-momenta\nand color flow information of all particles involved in a process. The event\ndata are then stored in file pdata1.dat in corresponding directory tn /fort\n(see section 5 for the format of pdata1.dat). In turn, like many other matrix\nelement generators such as AMEGIC++ [14] and AcerMC [16], EtabFDC interfaces\nwith Pythia for parton showering and hadronization. This interface complies\nwith Pythia standard and users can refer to Pythia manual[17]. Figure 6\nshows the general procedures of the interface, and the source codes below is\nthe event loop part in program fdcpythia\nC... Event loop\nDO IEV=1,NEVNT\nCALL PYEVNT()\nCALL PYEDIT(1)\nIRECS=PYLIST_FDC(IFU2,IRECNO)\nIRECNO=IRECNO+IRECS\nENDDO\nA hadronic event is generated in a single run of the event loop. First, the\nPythia subroutine PYEVNT calls another subroutine UPEVNT (which is provided by EtabFDC) to input a parton-level event. Then PYEVNT showers and\nhadronizes the parton-level event and stores the consequent hadronic event in\ncommon block COMMON/PYJETS/. Next, another Pythia subroutine PYEDIT\nis called to remove from the event record the jets or particles that have\nfragmented or decayed. Finally, a function PYLIST FDC, which is a modified\nversion of Pythia subroutine PYLIST, writes the COMMON/PYJETS/ into file\npyresult.hbk in ntuple mode.\nProgram fdcpythia\nMain program fdcpythia\nInitialization of fdcpythia\ncall PYINIT (Init of PYTHIA)\nEvent\nLoop\n\ncall PYEVNT\ncall PYEDIT\ncall PYLIST_FDC\n\nProgram PYTHIA\nsubroutine PYINIT\ncall UPINIT\n\nProgram fdcpythia\nsubroutine UPINIT\nInitialization for\nexternal user process\n\nsubroutine PYEVNT\ncall UPEVNT\n\nsubroutine UPEVNT\nSet configuration for\ncurrent partonic-event\n\nsubroutine PYLIST_FDC\nStore hadronic events\nobtained through interface\nwith PYTHIA\n\nFig. 6. Interface with Pythia\n\n12\n\n\f4\n\nUsage\n\nUsers can choose the running level accordingly to their own needs. Instructions\nfor running EtabFDC at the three running levels are given below.\n\n4.1\n\nFor running level 3\n\nIt will be relatively convenient to add new physical processes in the future as\nwell.\nIn this running level, EtabFDC can generate events for a specific process. To\ndo this, follow the steps below:\n(1)\n(2)\n(3)\n(4)\n(5)\n\nDecide the physical process for which EtabFDC will generate events;\nchange current directory to the sub-directory fort under it (eg. ggetab1/f2/t1/fort);\nExecute program make clean to remove old links;\nExecute program ./make to link and ./int to calculate the cross-section;\nEdit parameter.input and set parameters:\n\u2022 RUNNINGLEVEL=3;\n\u2022 PARTONEVNTNUM and EVNTNUM according to users' needs;\n(6) Execute program ./fdcpythia.\n\nWith the steps above, EVNTNUM hadronic events are then stored in file pyresult.hbk.\n\n4.2\n\nFor running level 2\n\nIn this running level, EtabFDC can generate events for either annihilation or\nfragmentation class of processes. To do this, follow the steps below:\n(1) Decide which class of process EtabFDC will generate events for and\nchange current directory to the f-directory (eg. ggetab2/f2);\n(2) Execute program ./mkclean to remove old links;\n(3) Execute program ./domake to link and ./doint to calculate the crosssection;\n(4) Change current directory to ggetab2/f2/fort\n(5) Edit parameter.input in current directory:\n\u2022 RUNNINGLEVEL=2;\n\u2022 PARTONEVNTNUM and EVNTNUM according to users' needs;\nand then execute ./pararefresh1, ./pararefresh2 and ./pararefresh3\nin directory ggetab2/f2/fort.\n(6) Execute ./fdcpythia for hadronic events.\n13\n\n\f(7) Go back to ggetab2/f2 and execute ./mvdir to get hbook document for\nthe fragmentation processes.\nWith the above steps, the exact number of generated hadronic events in this\nrun is given on screen and the data for these hadronic events are then stored\nin f2.hbk under ggetab2/f2 directory.\n\n4.3\n\nFor running level 1\n\nIn this running level, EtabFDC can generate events for all the implemented\nLO 2 \u2192 2 processes for pp \u2192 \u03b7b X. To do this, follow the steps below:\n(1) Change the current directory to the sub-directory fort under it (eg.\nggetab2);\n(2) Execute program ./mkclean to cancel old links;\n(3) Execute program ./domake to link and ./doint to calculate the crosssection;\n(4) Change current directory to ggetab2/fort\n(5) Edit parameter.input in current directory:\n\u2022 RUNNINGLEVEL=1;\n\u2022 PARTONEVNTNUM and EVNTNUM according to users' needs;\nand then execute ./pararefresh1, ./pararefresh2 and ./pararefresh3\nin directory ggetab2/fort.\n(6) Execute ./fdcpythia for hadronic events.\n(7) Go back to /ggetab2 and execute ./mvdir to get hbook document for\nall LO 2 \u2192 2 processes for pp \u2192 \u03b7b + X.\nWith steps above, the exact number of generated hadronic events in this run\nis given on screen and the data for these hadronic events are then stored in\nggetab2.hbk under ggetab2 directory.\n\n5\n\nOutput files\n\nAs described above, the EtabFDC interfaces with Pythia directly at level 3.\nThe partonic events information are kept in files named pdata1.dat of the\ncorresponding directories tn /fort in ASCII format, and the hadronic events\ninformation are in file pyresult.dat in BINARY format in the same directory.\n14\n\n\f5.1\n\nFormat of pdata1.dat\n\nFile pdata1.dat is generated by program gevent. In this file, parton-level\nevents are recorded in ASCII format sequentially. For a 2 \u2192 n process, each\npartonic event in the file pdata1.dat occupies 2 + n lines (if not colored) or\n2 + n + 1 lines (if colored). The first 2 + n lines are four-momenta (~p, E) of\ninitial and final particles. The (2+n+1)th line is the coefficients of color bases,\nwhich are used as weight when there is a color-flow multiplicity. The colorflow assignment complies with the Pythia standard and users can refer to\nPythia manual[17]. In this version of EtabFDC, no subroutines are provided\nfor accessing to the parton-level events. The FORMAT statements which are used\nin gevent to output the four-momenta and the coefficients of color-flow bases\nis given below\nFORMAT(2X,4(F14.8,1X))\nFORMAT(2X,N (F14.8,1X))\nwhere N is the number of color bases.\n\n5.2\n\nFormat of pyresult.hbk\n\nFile pyresult.hbk is created by fdcpythia. As described in section 3.5,\nPythia stores the hadronized events in a common block as below:\nINTEGER N,NPAD,K\nDOUBLE PRECISION P,V\nCOMMON/PYJETS/N,NPAD,K(4000,5),P(4000,5),V(4000,5)\n\nProgram fdcpythia then writes them into pyresult.hbk in ntuple format. If\nrunning level 1 or level 2,after executed ./fdcpythia,the user should go back\nto ggetabn (for level 1) or ggetabn /fn (for level 2) and execute ./mvdir to\nget the hbook document for level 1 or level 2 seperately.The hbook document\ncould be read by paw directly.\n\n15\n\n\f6\n\nSummary\n\nWe have presented a FORTRAN program package EtabFDC which is a matrix element event generator for simulating the production and the decays of\n\u03b7b . It has implemented all possible leading-order 2 \u2192 2 processes and can\ngenerate parton-level events through three running levels, and then interfaces\nwith Pythia to obtain hadronic events, which are stored in the binary files\nand can be accessed by the provided FORTRAN subroutines.\nThis package\n\u221a\nhas been tested with setting the pp collisions energy at s = 14 TeV and the\nmass of \u03b7b to be 9.3 GeV. One of the attractive features of this package is that\nall its FORTRAN codes are generated by FDC with full automation. With\nthis feature, the errors caused by carelessness can be systematically avoided.\n\nAcknowledgments\nThis work was supported in part by NSFC under Grant No: 10491306,10521003,10775179,\nin part by the Scientific Research Fund of GUCAS with number 055101BM03\nand 110200M202.\n\nReferences\n\n[1] G.S. Bali, Phys. Rep. 343, 1 (2001).\n[2] E.S. Ackleh, T. Barnes, Phys. Rev. D 45, 232 (1992).\n[3] S. Godfrey, J.L. Rosner, Phys. Rev. D 64, 074011 (2001).\n[4] L. Marcantonio et al., Nucl. Phys. (Proc. Suppl.) 94, 363 (2001).\n[5] G.S. Bali, K. Schilling, A. Wachter, Phys. Rev. D 56, 2566 (1997).\n[6] N. Brambilla, Y. Sumino, A. Vairo, Phys. Lett. B 513, 381 (2001).\n[7] S. Narison, Phys. Lett. B 387, 162 (1996).\n[8] E.J. Eichten, C. Quigg, Phys. Rev. D 49, 5845 (1994).\n[9] D. Ebert, R.N. Faustov, V.O. Galkin, hep-ph/0006186.\n[10] J.X. Wang, Nucl. Instrum. Meth. A 534, 241 (2004) [arXiv:hep-ph/0407058].\n[11] J. X. Wang, Prepared for 6th Accelerator and Particle Physics Institute (APPI\n2001), Morioka, Japan, 20-23 Feb 2001. Published in Appi 2001, \"Accelerator\nand particle physics,\" 108-121\n\n16\n\n\f[12] Gang Hao,Yu Jia,Cong-Feng Qiao,Peng Sun, JHEP 0702 057(2007).\n[13] Gang Hao, Cong-Feng Qiao, Peng Sun, Phys. Rev. D 76, 125013 (2007).\n[14] F. Krauss, R. Kuhn and G. Soff, JHEP 0202, 044 (2002) [arXiv:hepph/0109036].\n[15] S. Kawabata, Computer Phys. Commun. 88, 309 (1995).\n[16] B. P. Kersevan and E. Richter-Was, arXiv:hep-ph/0405247.\n[17] T. Sj\u00f6strand, et al., Computer Physics Commun. 135 (2001) 238.\n[18] E. Boos, et al., \"Generic User Process Interface for Event Generators\",\narXiv:hep-ph/0109068.\n\n17\n\n\fAppendix : Usage Illustrations\nUsers can choose the running level for their own purposes.\nFollowing examples will be used to explain the usage of EtabFDC for 3 running\nlevels.\n\n.1\n\nLevel 3\n\nIn this level, user can generate events for a specific process.\nIt is supposed to generated 1,000 hadronic events for process q+q\u0304 \u2192 g+\u03b7b (q =\nuds) , \u03b7b \u2192 J/\u03c8J/\u03c8.\nFor this purpose, following steps are needed.\n1) This process corresponds to directory ggetab2/f1/t1.\n2) Change current directory to ggetab2/f1/t1/fort.\n3) Edit parameter.input and set\nEVNTNUM = 1000,\nRUNNINGLEVEL = 3,\nRESET = 1.\n4) Execute ./int for cross-section. (optional)\n5) Execute ./fdcpythia for hadronic events.\nRemarks:\n1) The step 4 is optional since the events are generated unweighted in level\n3. Therefore, if users do not want to know the cross-section, they can\nomit this step.\n2) When ./int runs successfully, it will give no message on screen. However, if the mass of final-particles are greater than that of initial particles, which means the process is prohibited by current energy configuration, ./int prints a message, \"The center mass energy < the sum of\nall final mass\". When this message appears, users should not execute\n./fdcpythia or ./gevent.\n3) As mentioned in section 3, the parton-level events are generated by\n./gevent. However, as shown in steps above, ./gevent is not used explicitly. That is because ./fdcpythia can execute ./gevent automatically\naccording to parameters set in parameter.input. Of course, if users are\nonly interested in the parton-level events, they can execute ./gevent\nmanually instead of ./fdcpythia.\n4) Parton-level and hadronic events are stored in pdata1.dat and pyresult.hbk\n18\n\n\frespectively in the directory ggetabn/f1/t1/fort. The access to them\nis formulated in section 5.\n\n.2\n\nLevel 2\n\nIn this level, users can generates events for the annihilation or fragmentation\nprocesses followed by which \u03b7b decays in certain channel.\nAs an example, we take annihilation-etab-generating processes decay as \u03b7b \u2192\nJ/\u03c8 + J/\u03c8. It is assumed to generate 5,000 hadronic events. For this purpose,\nusers need to go through steps below.\n1) The annihilation-etab-generating processes correspond to ggetab2/f1,\nthen go into this directory.\n2) Execute shell script ./doint.\n3) Change current directory to ggetab2/f1/fort\n4) Edit parameter.input in current directory and set\nEVNTNUM = 5000,\nRUNNINGLEVEL = 2,\nRESET = 1.\nand then execute ./pararefresh1, ./pararefresh2 and ./pararefresh3\nin directory ggetab2/f1/fort.\n5) Execute ./fdcpythia for hadronic events.\n6) Go back to ggetab2/f1 and execute ./mvdir to get the hbook document\nRemarks:\n1) Users should notice that in level 2 (also in level 1), shell scripts should\nbe used instead of executable programs ./int.\n2) In level 2 (also in level 1), the execution of ./doint is a necessary step\nsince the generator needs the cross-section as weight to determine the\nnumber of events for each specific process.\n3) As in level 3, parton-level events are stored in sub-directory fort of corresponding t-directories under ggetab2/f1. The access to them has been\ndescribed in section 5.\n\n.3\n\nLevel 1\n\nIn this level, users can generate events for all processes. We take the \u03b7b \u2192 J/\u03c8\u03b3\ndecay channel as an example. It is assumed that 10,000 hadronic events are\ngenerated. For this purpose, following steps are necessary.\n19\n\n\f1)\n2)\n3)\n4)\n\nChange current directory to ggetab1.\nExecute shell script ./doint.\nChange current directory to ggetab1/fort\nEdit parameter.input in current directory. Set\nEVNTNUM = 10000,\nRUNNINGLEVEL = 1,\nRESET = 1.\nand then execute ./pararefresh1, ./pararefresh2 and ./pararefresh3\nin directory ggetab1/fort.\n5) Execute ./fdcpythia for hadronic events.\n6) Go back to ggetab1 and execute ./mvdir to get the hbook document.\nRemark:\nExcept the directory, everything is the same as in level 2. The parton-level\nevent files are also kept in fort of corresponding t-directories.\n\n20\n\n\f"}