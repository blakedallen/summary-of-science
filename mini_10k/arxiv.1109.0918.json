{"id": "http://arxiv.org/abs/1109.0918v1", "guidislink": true, "updated": "2011-09-05T14:45:12Z", "updated_parsed": [2011, 9, 5, 14, 45, 12, 0, 248, 0], "published": "2011-09-05T14:45:12Z", "published_parsed": [2011, 9, 5, 14, 45, 12, 0, 248, 0], "title": "Boolean logic gate design principles in unconventional computers: an NMR\n  case study", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1109.3335%2C1109.2360%2C1109.2665%2C1109.5641%2C1109.5587%2C1109.2629%2C1109.5421%2C1109.1670%2C1109.0918%2C1109.0197%2C1109.2838%2C1109.5175%2C1109.2217%2C1109.6081%2C1109.6203%2C1109.1297%2C1109.1386%2C1109.3067%2C1109.5679%2C1109.6305%2C1109.0188%2C1109.0743%2C1109.2525%2C1109.2398%2C1109.4229%2C1109.0464%2C1109.3580%2C1109.2822%2C1109.6086%2C1109.5731%2C1109.3171%2C1109.2087%2C1109.2988%2C1109.4485%2C1109.4040%2C1109.4012%2C1109.3078%2C1109.6612%2C1109.3661%2C1109.2188%2C1109.4524%2C1109.2421%2C1109.0825%2C1109.5238%2C1109.1577%2C1109.2696%2C1109.5116%2C1109.0725%2C1109.1126%2C1109.0002%2C1109.2762%2C1109.4599%2C1109.2661%2C1109.2142%2C1109.0665%2C1109.6397%2C1109.0167%2C1109.1153%2C1109.1832%2C1109.1435%2C1109.0383%2C1109.4132%2C1109.5461%2C1109.0546%2C1109.4919%2C1109.4472%2C1109.3739%2C1109.2405%2C1109.4457%2C1109.2101%2C1109.2180%2C1109.5200%2C1109.6167%2C1109.6877%2C1109.6491%2C1109.4218%2C1109.2229%2C1109.1901%2C1109.6425%2C1109.6350%2C1109.5909%2C1109.5365%2C1109.3682%2C1109.3438%2C1109.0393%2C1109.4187%2C1109.5818%2C1109.5554%2C1109.1484%2C1109.2166%2C1109.4092%2C1109.4582%2C1109.1610%2C1109.2169%2C1109.2502%2C1109.4410%2C1109.1795%2C1109.3355%2C1109.6282%2C1109.0239%2C1109.2825&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Boolean logic gate design principles in unconventional computers: an NMR\n  case study"}, "summary": "We present a general method for analysing novel computational substrates to\ndetermine which of their parameters can be manipulated to exhibit the complete\nset of 2-input boolean logical operations. We demonstrate this approach with an\nNMR-based case study, showing which NMR parameters can be used to perform\nboolean logic.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1109.3335%2C1109.2360%2C1109.2665%2C1109.5641%2C1109.5587%2C1109.2629%2C1109.5421%2C1109.1670%2C1109.0918%2C1109.0197%2C1109.2838%2C1109.5175%2C1109.2217%2C1109.6081%2C1109.6203%2C1109.1297%2C1109.1386%2C1109.3067%2C1109.5679%2C1109.6305%2C1109.0188%2C1109.0743%2C1109.2525%2C1109.2398%2C1109.4229%2C1109.0464%2C1109.3580%2C1109.2822%2C1109.6086%2C1109.5731%2C1109.3171%2C1109.2087%2C1109.2988%2C1109.4485%2C1109.4040%2C1109.4012%2C1109.3078%2C1109.6612%2C1109.3661%2C1109.2188%2C1109.4524%2C1109.2421%2C1109.0825%2C1109.5238%2C1109.1577%2C1109.2696%2C1109.5116%2C1109.0725%2C1109.1126%2C1109.0002%2C1109.2762%2C1109.4599%2C1109.2661%2C1109.2142%2C1109.0665%2C1109.6397%2C1109.0167%2C1109.1153%2C1109.1832%2C1109.1435%2C1109.0383%2C1109.4132%2C1109.5461%2C1109.0546%2C1109.4919%2C1109.4472%2C1109.3739%2C1109.2405%2C1109.4457%2C1109.2101%2C1109.2180%2C1109.5200%2C1109.6167%2C1109.6877%2C1109.6491%2C1109.4218%2C1109.2229%2C1109.1901%2C1109.6425%2C1109.6350%2C1109.5909%2C1109.5365%2C1109.3682%2C1109.3438%2C1109.0393%2C1109.4187%2C1109.5818%2C1109.5554%2C1109.1484%2C1109.2166%2C1109.4092%2C1109.4582%2C1109.1610%2C1109.2169%2C1109.2502%2C1109.4410%2C1109.1795%2C1109.3355%2C1109.6282%2C1109.0239%2C1109.2825&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We present a general method for analysing novel computational substrates to\ndetermine which of their parameters can be manipulated to exhibit the complete\nset of 2-input boolean logical operations. We demonstrate this approach with an\nNMR-based case study, showing which NMR parameters can be used to perform\nboolean logic."}, "authors": ["Matthias Bechmann", "Angelika Sebald", "Susan Stepney"], "author_detail": {"name": "Susan Stepney"}, "author": "Susan Stepney", "links": [{"href": "http://arxiv.org/abs/1109.0918v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1109.0918v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.ET", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.ET", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cond-mat.other", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1109.0918v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1109.0918v1", "arxiv_comment": null, "journal_reference": "International Journal of Unconventional Computing, 2012, 8,\n  139-159", "doi": null, "fulltext": "arXiv:1109.0918v1 [cs.ET] 5 Sep 2011\n\nBoolean logic gate design principles in\nunconventional computers: an NMR case study\nM ATTHIAS B ECHMANN1?, A NGELIKA S EBALD1\u2020, S USAN S TEPNEY2\u2021\n1\n\n2\n\nDepartment of Chemistry, University of York, YO10 5DD, York, UK\nDepartment of Computer Science, University of York, YO10 5DD, York, UK\nReceived 5 September 2011\n\nWe present a general method for analysing novel computational\nsubstrates to determine which of their parameters can be manipulated to exhibit the complete set of 2-input boolean logical\noperations. We demonstrate this approach with an NMR-based\ncase study, showing which NMR parameters can be used to perform boolean logic.\nKey words: NMR, boolean logic, canalising functions, universal gates,\nspin\n\n1\n\nINTRODUCTION\n\nThere is much work on in materio computing: exploiting unconventional\nmaterial substrates and their dynamical properties to perform computation,\nand examining their computational properties and abilities. One of the more\nadvanced is optical computing [33, 34]. Other, more exotic, substrates include\nnuclear spins in NMR experiments [16, 17, 24, 6], liquid crystals [12, 13, 14],\nconductive media [21, 22], reaction-diffusion chemical systems [19, 23, 27,\n32], DNA [3, 4], and even slime moulds [2, 31].\nThe aim is to allow the material to do what comes naturally, under control\nof physical laws, and to exploit this natural dynamics as an efficient form of\n?\n\nemail: matthias.bechmann@york.ac.uk\nemail: angelika.sebald@york.ac.uk\n\u2021 email: susan@cs.york.ac.uk\n\n\u2020\n\n1\n\n\fclass\n0\n1\n2\n3\n\nmembers\nT, F\nA, NOT A, B, NOT B\nA AND B; A NAND B; NOT A AND B, A AND NOT B, . . .\nA XOR B, NOT (A XOR B)\n\nTABLE 1\nThe four equivalence classes of the 16 boolean 2-input logic gates. These correspond\nto equivalence classes under permutations of inputs and negation of the inputs and/or\noutputs [9], and to the different kinds of canalising functions [10].\n\ncomputation [29, 30, 18]. The question arises: given some novel substrate,\nhow to analyse its properties to determine whether it is a suitable medium for\ncomputation, and, if so, how it can be manipulated to perform computation in\na manner best suited to that substrate.\nHere we tackle a part of that problem: analysing a novel substrate to\ndetermine how it can be used to perform boolean logical operations. We\npresent the design principles through a case study of using bulk nuclear spins,\nin the context of NMR (nuclear magnetic resonance) experiments.\n2\n\nTHEORY AND BACKGROUND\n\n2.1 Boolean functions and logic gates\nThe NAND and NOR logic gates are both universal, in that either can be\nused to construct all the other boolean 2-input logic gates. However, to do\nso, several such gates may be required. In an implementation, it is often\nmore important to minimise the circuitry (the number of actual gates) than to\nminimise the number of types of gates.\nLogic gates can be classified in terms of their symmetry properties [28, 11].\nIn terms of minimising circuitry, gates can be classified in terms of equivalence\nclasses on permutations (rewiring) of inputs, and on negation of inputs and/or\noutputs (i.e. adding inverters, important in cases where they are significantly\ncheaper to implement than binary gates [9]). There are four such equivalence\nclasses for the 16 boolean 2-input logic gates (Tables 1 and 2).\nThe same classification is found by considering canalising functions [10].\nThese are functions where the output is independent of one (or more) of\nthe inputs, for one (or more) input values. Class 0 consists of the constant\n2\n\n\fA\n\nB\n\nT\n\nB\n\nA NAND B\n\nA XOR B\n\n0\n0\n1\n1\n\n0\n1\n0\n1\n\n1\n1\n1\n1\n\n0\n1\n0\n1\n\n1\n1\n1\n0\n\n0\n1\n1\n0\n\nTABLE 2\nTruth tables of examples of the four classes of boolean logic gates, for each possible\ninput value of A and B. Class 0 (example T) is independent of either input value.\nClass 1 (example B) is independent of one of the input values (here, A) for all possible\ninputs. Class 2 (example A NAND B) is independent of one of the input values when\nthe other has a particular value (here, it it independent of the value of B when A has\nthe value 0). Class 3 (example A XOR B) depends on both input values for all inputs.\n\nFIGURE 1\nLogic-gates patterns and their different symmetries as visible from the two-dimensional\nrepresentations of the canalising functions gate classes 0, 1, 2 and 3.\n\nfunctions: the output is completely independent of the inputs. Class 1 consists\nof the strongly canalising functions: the output is independent of one of the\ninputs (for example, the function B is independent of the value of input A).\nClass 2 consists of the weakly canalising functions: the output is independent\nof one of the inputs when the other input has a specific value (for example, the\nfunction A NAND B is independent of the value of input B when the value of\ninput A is false). Class 3 consists of the non-canalising functions: the output\nis determined by both inputs.\nWe use these symmetries/canalising properties of the gates (Figure 1) to\nlook for analogous properties exhibited by the substrate that indicates a natural\nimplementation route.\n3\n\n\f2.2 Nuclear spin dynamics\nThe most common application of NMR spectroscopy is that as a tool for\nstructure elucidation of condensed matter in general, and of molecules in\nthe liquid state in particular. The quantised nature of nuclear spin can also\nbe assigned to the notion of a qubit in quantum computations [26]. Nuclear\nspins have also been used as a substrate to implement classical computation\nparadigms such as binary or continuous logic gates and circuits [24, 6].\nA major reason for these computational applications to choose nuclear\nmagnetic spins as the implementation platform is the rigour by which nuclear\nspin dynamics are described by quantum mechanics. In addition, the accuracy\nby which the macroscopically measured signal in an NMR experiment can be\nrelated to the underlying microscopic spin dynamics, using a density matrix\napproach, is nearly unrivalled by any other spectroscopic technique. In order\nto develop the formal relationship between the properties of logic gates and\nthe quantum mechanical expressions describing the spin dynamics in a NMR\nexperiment, we give a short summary of the necessary formalisms. For more\ndetails see textbooks on NMR [20]. Here we consider only uncoupled spins\nS = 1/2 in the liquid state.\nThe time evolution of an initial spin state vector |\u03c8 (ta )i is described as\n|\u03c8 (t)i =\n\nU (t, ta ) |\u03c8 (ta )i\n\n(1)\n\nwhere U (t, ta ) is the time propagator describing the spin dynamics at every\ngiven point in time. The general orientation of the spin vector |\u03c8i is [20]\n!\n1\ncos \u03b82s e\u2212i 2 \u03c6s\n|\u03c8i =\n(2)\n1\nsin \u03b82s e+i 2 \u03c6s\nwhere \u03b8s and \u03c6s are the polar and azimuth angles. Its three-dimensional\nrepresentation is given by\n\uf8eb\n\uf8f6\n\uf8eb\n\uf8f6\nh\u03c8 | Ix | \u03c8i\nsin \u03b8s cos \u03c6s\n1\n\uf8ed h\u03c8 | Iy | \u03c8i \uf8f8 = \uf8ed sin \u03b8s sin \u03c6s \uf8f8\n(3)\n2\nh\u03c8 | Iz | \u03c8i\ncos \u03b8s\ndescribing a general Cartesian vector orientation (see Figure 2), where Ix , Iy\nand Iz are basis spin operators [25].\nThe time propagation of the macroscopic NMR signal is described by the\ndensity matrix \u03c1(t) = |\u03c8 (t)i h\u03c8 (t)| as\n\u03c1(t)\n\n=\n\nU (t, ta ) \u03c1(ta )U \u2020 (t, ta )\n4\n\n(4)\n\n\fFIGURE 2\nSpin state vector orientation of |\u03c8i in its Cartesian representation\n\nwhere the bar signals the ensemble average. The thermal equilibrium density\nmatrix is [20]\n1\n1\n\u03c1eq\n(5)\nz = 1 + \u03bb B Iz\n2\n2\nwhere \u03bbB = ~\u03b3B0 /(kB T ) defines a Boltzmann factor, scaling the separation\nof spin energy levels, that can be interpreted as a spin polarisation along the\nz-axis.\nThe NMR system Hamiltonian and generator of the time evolution propagators for isolated, uncoupled spins is\nH = HCS + Hrf\n\n(6)\n\nwhere HCS and Hrf are the chemical shielding and radio frequency (r.f.)\nHamiltonian, respectively. The explicit representation of the r.f. Hamiltonian\nis particularly simple in the rotating reference frame (RRF) as\nHrf\n\n=\n\n\u03c9p Iz + \u03bap (Ix cos \u03c6p + Iy sin \u03c6p )\n\n(7)\n\nwhere \u03c9p is a frequency offset (relative to the frequency of RRF), and \u03bap\nand \u03c6p are the amplitude and phase of the pulse. Figure 3(a) summarises the\nbehaviour of the magnetisation vector M (Eqs. (1)\u2013(23)) under the influence\nof a r.f. pulse; Figure 3(b) depicts the relevant parameters. Pulses applied to\nspins resonating at the rotation frequency of the RRF are described by the\nsystem Hamiltonian\nH = Hrf\n\n= \u03bap (Ix cos \u03c6p + Iy sin \u03c6p )\n5\n\n(8)\n\n\fFIGURE 3\nNMR single-pulse experiment: (a) rotation of the magnetisation vector M by a r.f.\npulse R\u03c6p (\u03b2) with \u03c6p = \u03c02 and \u03b2 = \u03bap \u03c4p = \u03c02 ; (b) the relevant parameters describing\nthe single-pulse NMR experiment (pulse amplitude \u03bap , pulse duration \u03c4p , pulse phase\n\u03c6p , pulse frequency \u03c9p , free evolution delay \u03c4 d and acquisition phase \u03c6a ).\n\nand the overall system Hamiltonian for uncoupled isolated spins S = 1/2 is\nH\n\n=\n\nHCS + Hrf : during pulse\n\nH\n\n=\n\nHCS : during free evolution\n\n(9)\n\nincluding a chemical shielding offset HCS from the RRF frequency.\nThe general form of the time evolution propagator in NMR is\nU (tb , ta )\n\n=\n\n\u001a Z\nT exp \u2212i\n\ntb\n\n\u001b\nH (t) dt\n\n(10)\n\nta\n\nwhere T is the Dyson time-ordering operator [25].\nDependent on the symmetry of the Hamiltonian, different (simpler) expressions for the propagator can be formulated\nH (t) = H\n\n\u2192\n\nU (tb , ta ) = exp {\u2212iH (tb \u2212 ta )} (11)\ntime independent\n\n0\n\n00\n\n[H (t ) , H (t )] = 0\n\n\u2192\n\nU (tb , ta ) = exp{\u2212i\n\nR tb\nta\n\ndt0 H (t0 )}(12)\n\nself \u2212 commuting\nH (ta + \u03c4 ) = \u2212H (tb \u2212 \u03c4 ) \u2192\n\nU (tb , ta ) = 1 ; anti-symmetric\n\n(13)\n\nU (tb , ta ) = \u00b11 ; cyclic\n\n(14)\n\nIn the case of a hard pulse, a so-called \u03b4 pulse is usually a valid description\n6\n\n\fof the time propagator\nU (tb , ta )\n\n=\n\nexp {\u2212iHrf \u03c4p } ; \u03c4p = tb \u2212 ta\n\n=\n\nexp {\u2212i\u03bap \u03c4p (Ix cos \u03c6p + Iy sin \u03c6p )}\n\n=\n\nR\u03c6p (\u03b2) ; \u03b2 = \u03bap \u03c4p\n\n(15)\n\nwhich is equivalent to the rotation operation R\u03c6p (\u03b2). It generates a rotation\nby an angle \u03b2 about an axis in the xy-plane with azimuth angle \u03c6p . For a\nsequence of \u03b4 pulses the propagator can be factorised as\nU (tc , ta )\n\n=\n\nU2 (tc , tb ) U1 (tb , ta ) ; \u03c4p1 = tb \u2212 ta and \u03c4 p2 = tc \u2212 tb\n\n=\n\nR\u03c6p2 (\u03b22 ) R\u03c6p1 (\u03b21 ) ; \u03b21 = \u03bap1 \u03c4p1 ; \u03b22 = \u03bap2 \u03c4 p2\n\n(16)\n\nThe explicit form of these propagators is equivalent to rotation operators in\ntwo dimensions and is [20]\n\u0013\n\u2212i sin \u03b22\nRx (\u03b2) = e\n=\ncos \u03b22\n\u0012\n\u0013\ncos \u03b22 \u2212 sin \u03b22\nRy (\u03b2) = e\u2212i\u03b2Iy =\nsin \u03b22\ncos \u03b22\n!\n\u03b2\n0\ne\u2212i 2\n\u2212i\u03b2Iz\nRz (\u03b2) = e\n=\n\u03b2\n0\ne+i 2\n\u0012\ncos \u03b22\nR\u03c6 (\u03b2) = e\u2212i\u03b2(Ix cos \u03c6+Iy sin \u03c6) =\n\u2212i sin \u03b22 e+i\u03c6\n\u2212i\u03b2Ix\n\n\u0012\n\ncos \u03b22\n\u2212i sin \u03b22\n\n(17)\n(18)\n(19)\n\u2212i sin \u03b22 e\u2212i\u03c6\ncos \u03b22\n\n= Rz (\u03c6) Rx (\u03b2) Rz (\u2212\u03c6)\n\n(20)\n\nAfter a pulse R\u03c6p (\u03b2) with phase \u03c6p = \u03c02 and flip angle \u03b2 =\nequilibrium density matrix \u03c1eq\nz is transformed according to\nR \u03c02\n\n\u0010\u03c0\u0011\n2\n\n\u2020\n\u03c1eq\nz R\u03c0\n2\n\n\u0010\u03c0\u0011\n2\n\n=\n\n\u0013\n\n1\n2\n\n1 + \u03bb2B\n=\n=\n\n\u03c0\n2\n\nthe thermal\n\n\u0013\n1\n0\n1\n1\n1 + \u03bb B Ix\n2\n2\n\u03c1x\n\n(21)\n\n\u0012\n\n0\n1\n\nyielding spin polarisation along the +x direction.\nA r.f. pulse R\u03c6p (\u03b2) applied to an initial state \u03c1(i) generates a spin density\nmatrix that can be expressed in terms of its final polar coordinates \u03c1 (\u03c6s , \u03b8s ) =\n7\n\n\f|\u03c8i h\u03c8| (Eq. (2)) or as a function of the pulse parameters rotating an initial\nstate \u03c1(i) (\u03c6p , \u03b2). For example when starting from \u03c1(z) = \u03c1eq\nz the final state is\n\u03c1(z) (\u03c6p , \u03b2)\n\n=\n\n1\n\u03bb\n1+ B\n2\n2\n\n\u0012\n\ncos \u03b2\n\u2212i sin \u03b2e+i\u03c6p\n\n\u2212i sin \u03b2e\u2212i\u03c6p\n\u2212 cos \u03b2\n\n\u0013\n(22)\n\n\u0001\nand the relation \u03c1 (\u03c6s , \u03b8s ) = \u03c1(z) (\u03c6p , \u03b2) holds for (\u03c6s , \u03b8s ) = \u03c6p \u2212 \u03c02 , \u03b2 .\nEquivalently to the calculation of the three-dimensional spin-vector orientation in Eq. (3) from the two-dimensional spin state |\u03c8i (Eq. (2)), the\nthree-dimensional magnetisation vector M can then be calculated from any\ngiven two-dimensional density matrix \u03c1 as\n\uf8eb\n\uf8f6 \uf8eb\n\uf8f6\nhIx i\nTr {\u03c1Ix }\n\uf8ec\n\uf8f7 \uf8ed\nM = \uf8ed hIy i \uf8f8 =\n(23)\nTr {\u03c1Iy } \uf8f8\nTr {\u03c1Iz }\nhIz i\nIn the case of single isolated spins this also implies the equivalence in interpretation of the spin vector orientation in Figure 2 and the magnetisation vector\nM.\nIn general a NMR pulse sequence can consist of any number and parametrisation of r.f. pulses and free evolution delays. This provides for numerous\noptions for the implementation of e.g. logic gates. The most useful parametrisation in the following is the one describing the NMR signal as a function of\nthe pulse sequence, \u03c1(i) (\u03c6p , \u03b2).\n\n3\n\nLOGIC GATES FROM NMR PARAMETERS\n\n3.1 Classification of NMR parameters\nThe most common parameters describing a NMR experiment, open for use as\ncontrol parameters to implement logic operations, are {\u03bap , \u03c6p , \u03c4p , \u03c9p , \u03c4d , \u03c6a }:\npulse amplitude, pulse phase, pulse duration, pulse frequency, free evolution\ndelay, and receiver phase, respectively (see Figure 3).\nA heuristic classification rule has been given elsewhere [24], separating\nlogic gates based on the relation between the experimental NMR parameters\nchosen:\n1. if the effect of the first parameter cannot be compensated for by setting the second parameter (canalising input value), then AND, >, <\nNOR, OR, \u2264, \u2265, NAND gates can be constructed (asymmetric gates);\n8\n\n\fclass\n0\n1\n2\n3\n\ncanalising input values for fixed:\n\nA\n\nB\n\nT\nB\nA NAND B\nA XOR B\n\n2\n0\n1\n0\n\n2\n2\n1\n0\n\nTABLE 3\nNumber of canalising input values for the four gate classes. Demonstrated for one\nrepresentative member of every class: T, B, A NAND B, A XOR B. The respective\ntruth tables for these four gates are shown in Table 2.\n\n2. if the effect of the first parameter can be compensated by a setting of\nthe second parameter, then XOR and XNOR gates can be constructed\n(symmetric gates).\nThis classification of logic gates seamlessly integrates in a generalised description by using the concept of canalising functions [10] and equivalence classes\n[9]. Fixing one of the inputs of a logic gate (A or B) is a canalising input\nvalue if changing the other (unfixed) input does not alter the gate output. The\nnumber of all possible canalising input values for a given logic gate for all\npossible inputs states is used as a criterion to assign logic gates to one of four\nclasses (see Table 3):\nclass 0 two canalising input values for either of the two inputs A and B\nclass 1 two canalising input values for exactly one of the inputs A or B\nclass 2 one canalising input values for either of the two inputs A and B\nclass 3 no canalising input values for either inputs A and B\nThese four classes also show unique symmetry patterns in their twodimensional representations (see Figure 1). Rows and columns of equal\ncoloured squares signal the presence of a canalising input. These patterns can\nbe used to map functions f (x1, x2) to corresponding canalising functions and,\ntherefore, the logic gate(s) they can naturally implement are readily identified.\nAccording to our previous definitions [24] a strong parameter would generate a canalising function for at least one of its states (class 0, 1 and 2), because\naltering the other parameter causes no change in the NMR output. On the\nother hand, for a weak parameter the output would always change (class 3).\n9\n\n\fIn the following we demonstrate how the abstract concept of canalising\nfunctions relates to the symmetries and commutation relations of the NMR\nHamiltonian, the time evolution propagator, and the experimental output of a\nNMR experiment.\n3.2 Canalising input values in NMR context\nHere we consider a system Hamiltonian that consists only of the Hrf term.\nHence, we are in the single spin, strong pulse, on-resonant regime, and for\nsimplicity we only consider the experimental parameters \u03bap , \u03c6p , \u03c4p (r.f. pulse\namplitude, phase and duration) for logic gate generation.\nThe NMR r.f. pulse propagator R\u03c6p (\u03b2) = Rz (\u03c6p ) Rx (\u03b2) Rz (\u2212\u03c6p )\n(Eq. (20)) is the general rotation operator about an axis in the traverse xyplane of the RRF. It therefore commutes with a particular spin state (I\u03c6p ) in\nthe transverse plane for a given value \u03c6p (e.g. for \u03c6p = 0; [R0 (\u03b2), Ix ] = 0\nindependent of the value of \u03b2). However, R\u03c6p (\u03b2) will never commute with\nthe thermal equilibrium state \u03c1eq\nz (\u223c Iz )\u0001 (Eq. (5)), which is perpendicular\nto the xy-plane. For example, a R0 \u03c02 pulse applied to z-magnetisation\n(\u223c Iz ) will flip it to the \u2212y direction, and therefore change the spin state\n\u0001\nand its orientation. A subsequent pulse applied using R\u2212 \u03c02 \u03c02 will leave it\n\u0001\nunaltered, since the system is in the \u2212Iy spin state, an eigenstate of R\u2212 \u03c02 \u03c02\nand, therefore, a canalising input is generated in this second step. One can\npostulate now that a canalising input is generated by an r.f. pulse if:\n\u0002\n\u0003\n1. R\u03c6p (\u03b2) leaves the system state unaltered (eigenstate; R\u03c6p (\u03b2), \u03c1 = 0),\n2. R\u03c6p (\u03b2) = 1, the unity operator.\nIn the following this behaviour and the possibility of generating canalising\ninput values is analysed. First we consider single-pulse experiments assuming\ndifferent initial system-state preparations \u03c1(i) . Second we consider experiments composed of more than one pulse.\nSingle-pulse gates\nThe signal as detected during a NMR experiment is not the effect of the full\nspin magnetisation vector M as given in Eq. (23) but only its projection into\nthe xy-plane [20]. Hence, the physically meaningful quantities that can be\nmeasured by NMR are the magnetisation vector components Mx = hIx i\nand My = hIy i, describing q\nthe orientational distribution of this projection,\n2\n\n2\n\nand the magnitude Mxy = hIx i + hIy i describing the total amount of\nmagnetisation present in the xy-plane. The functional structure of Mx , My\n10\n\n\fand Mxy is determined by the r.f. pulse R\u03c6p (\u03b2) and the initial spin state \u03c1(i)\nto which the r.f. pulse is applied. Mx , My and Mxy are therefore functions of\npulse phase \u03c6p , pulse flip angle \u03b2 = \u03bap \u03c4p and the initial direction of the spin\nmagnetisation.\nThe spin magnetisation can assume every possible orientation, while the\nr.f. pulse and therefore the rotation axis of the spin magnetisation is restricted\nto the xy-plane. It is instructive to examine scenarios where the initial spin\nstate \u03c1(i) is either perpendicular to the xy-plane and never commutes with\nthe r.f. pulse operator R\u03c6p (\u03b2), or where it is coplanar to it and therefore can\ncommute.\nStarting from thermal equilibrium state The most simple and natural initial spin state is the one the system assumes at thermal equilibrium \u03c1(i) = \u03c1eq\nz\n(Eq. (5)). Here the spin polarisation is pointing along the z-axis, perpendicular\nto the xy-plane and R\u03c6p (\u03b2) never commutes with it. \u03c1eq\nz transforms under the\ninfluence of a pulse R\u03c6p (\u03b2) as\n\u03c1(z) (\u03c6p , \u03b2)\n\n\u2020\n= R\u03c6p (\u03b2)\u03c1eq\nz , R\u03c6p (\u03b2)\n\n(24)\n\nAfter this single pulse the spin magnetisation vector M (Eq. (23)) is a function\nof pulse flip angle \u03b2 and pulse phase \u03c6p\n\b\n\uf8eb\n\uf8eb\n\uf8f6 \uf8eb\n\uf8f6\n\uf8f6\nsin \u03c6p sin \u03b2\nMx\nTr \u03c1(z) (\u03c6p , \u03b2)Ix\n\b (z)\n\u03bb\nB\n\uf8ed \u2212 cos \u03c6p sin \u03b2 \uf8f8 (25)\n\uf8ed My \uf8f8 = \uf8ed Tr \u03c1 (\u03c6p , \u03b2)Iy \uf8f8 =\n\b (z)\n4\nMz\nTr \u03c1 (\u03c6p , \u03b2)Iz\ncos \u03b2\nand the NMR measurable quantities Mx (\u03c6p , \u03b2), My (\u03c6p , \u03b2) and Mxy (\u03c6p , \u03b2) =\n\u03bbB\n4 |sin \u03b2| are readily determined. These quantities are functions of the two\npulse parameters \u03c6p and \u03b2 just like the binary logic gates are functions of\nthe two inputs A and B (Table 2). An instructive way to analyse Mx (\u03c6p , \u03b2),\nMy (\u03c6p , \u03b2) and Mxy (\u03c6p , \u03b2), as to which logic gates can be implemented\nby them, is by examining their representation as two-dimensional contour\nplots. These are shown in Figure 4. A comparison with the two-dimensional\nsketches of 2-input logic gates in Figure 1 immediately reveals agreements\nand disagreements in symmetries.\nIn principle the functions Mx (\u03c6p , \u03b2), My (\u03c6p , \u03b2) and Mxy (\u03c6p , \u03b2) are\ncontinuous in \u03c6p and \u03b2 whereas logic gates are boolean functions of A and\nB that can only assume the discrete values of {0, 1}. In order to map the\ncontinuous functions in Figure 4 to the four possible discrete sets (A,B) of a\nlogic gate one has to find four discrete pairs (\u03c6p , \u03b2) at which to evaluate the\n11\n\n\fFIGURE 4\nContour plots of q\nthe NMR detectable quantities (a) Mx = hIx i, (b)My = hIy i\n2\n2\nand (c) Mxy =\nhIx i + hIy i (Eq. (25)) as a function of the pulse parameters\n\u03c6p and \u03b2. The initial spin polarisation has been along the z-axis (\u03c1eq\nz ) and \u03bbB = 1\nhas been assumed. The ranges for \u03c6p and \u03b2 have been chosen such that the only\nsymmetry operation necessary to generate a full, infinite plot are horizontal and vertical\ntranslations.\n\ncontinuous functions and where the symmetry pattern of the desired logic gate\nresults.\nFor example from Figure 4(a) depicting Mx , one can directly identify\nthe symmetry pattern corresponding to a class 3 gate in Figure 1. In order to implement the class 3 (XOR) gate (Table 2) one needs to define four\n\u0001\nB\ndiscrete value sets \u03c6p = \u03c6A\n(with A,B \u2208 {0, 1}). Inspection of\np,\u03b2 = \u03b2\nFigure 4(a) immediately suggests the positive and negative extrema as possi\u0001\n\u0001\nB=0\nble candidates: Selecting the pair \u03c6A=0\n= \u03c02 , \u2212 \u03c02 the detected\np \u0001 ,\u03b2\noutput is Mx \u03c6A=0\n= \u03c02 , \u03b2 B=0 = \u2212 \u03c02 = \u22120.25. In the same fashion,\np\n\u0001\n\u0001\n\u0001\n\u03c0 \u03c0\n\u03c0\n\u03c0\nMx 2 , 2 = 0.25, Mx 3\u03c0\n= 0.25 and Mx 3\u03c0\n= \u22120.25 are\n2 ,\u22122\n2 , 2\ncalculated for the remaining XOR gate input configurations. The values of\nMx (\u03c6p , \u03b2), My (\u03c6p , \u03b2) and Mxy (\u03c6p , \u03b2) in Figure 4 are calculated assuming\n\u03bbB = 1. Mapping these values to the final boolean values {0, 1} is achieved\nby scaling them by a factor of 4.\nA class 3 gate is characterised by the absence of any canalising input\nB\n(Table 3). A change in \u03c6A\nwill therefore always change the value\np or \u03b2\n\u0001\nA\nB\nB\nMx \u03c6p , \u03b2 . In order to change one of the parameters \u03c6A\np or \u03b2 and achieve\n\u0001\nA\nB\nthe same result in Mx \u03c6p , \u03b2\none can take advantage of the periodicity\n\u0001\nof the trigonometric functions in Eq. (25) and in this way Mx \u03c02 , \u2212 \u03c02 =\n\u0001\n\u0001\n\u0001\n\u03c0\n\u03c0 \u03c0\n5\u03c0 \u03c0\nMx 5\u03c0\n2 , \u2212 2 = \u22120.25 and Mx 2 , 2 = Mx 2 , 2 = 0.25 can be imA\nplemented. This gate is evaluating \u03c6p at values separated by 2\u03c0 and the\n12\n\n\fclass\n0\n1\n2\n3\n\n\u03c6A\np\n\n\u03b2B\n\n0\n\n1\n\n0\n\n1\n\n\u03c0\n2\n\u03c0\n2\n\n5\u03c0\n2\n5\u03c0\n2\n3\u03c0\n2\n3\u03c0\n2\n\n\u03c0\n2\n\u2212 \u03c02\n\n5\u03c0\n2\n\u03c0\n2\n\u03c0\n2\n\u03c0\n2\n\n\u03c0\n\u03c0\n2\n\n0\n\u2212 \u03c02\n\n\u0001\nB\nOutput=Mx \u03c6A\np ,\u03b2\n00\n01\n10\n11\n0.25\n-0.25\n0\n-0.25\n\n0.25\n0.25\n0\n0.25\n\n0.25\n-0.25\n0\n0.25\n\n0.25\n0.25\n-0.25\n-0.25\n\ngate\nT\nB\nA NAND B\nA XOR B\n\nTABLE 4\nSome selected values \u03c6p and \u03b2 to generate one representative gate of every gate class\nusing Mx (\u03c6p , \u03b2) as shown in Figure 4(a).\n\ngate is therefore independent of a change in \u03c6A\np no matter which of its two\nB\nB\npermitted values \u03b2 assumes. A change in \u03b2 , however, will always change\n\u0001\nB\nM x \u03c6A\n. This behaviour corresponds to a class 1 gate with two canalp,\u03b2\nising input values for one parameter. In order to implement class 2 gates a\n\u0001\nB\ncomparison of the logic gate patterns and the contour plot for Mx \u03c6A\np,\u03b2\nsuggests a restriction of the parameter range to smaller intervals. For example,\n\u0002\n\u0003\n\u0002\n\u0003\none may choose the interval \u03c6p \u2208 \u03c0, 3\u03c0\nand \u03b2 \u2208 0, \u03c02 to implement a\n2\nNAND gate representing a class 2 (NAND) gate (see Table 4). The implementation of a class 0 gate requires two canalising input values for both \u03c6A\nand\n\u0001p\nB\n\u03b2 B . As in the class 1 (B) gate scenario the periodicity of Mx \u03c6A\n,\n\u03b2\ncan\nbe\np\nused to achieve canalising inputs. However, this time both parameters have to\nundergo the 2\u03c0 value changes. Alternatively one can use pulses corresponding\nto rotation operators R\u03c6p (\u03b2) = \u00b11 for generating canalising inputs for any\nB\nparameter configuration of \u03c6A\np or \u03b2 .\nHaving demonstrated how to implement one member of every gate class\nit is now a trivial task to generate implementations of all the members of a\ngiven gate class. By using the symmetry operations of permuting the input\nassignment of A and B to \u03c6p and \u03b2, inverting the input or the output, the\nremaining gates are obtained directly.\nThis shows that all 2-input logic gates can be implemented using the\nfunctions Mx (\u03c6p , \u03b2). Mx (\u03c6p , \u03b2) and My (\u03c6p , \u03b2) are both products of two\nlinear trigonometric functions, differing only by a phase shift of \u03c02 in the factor\n\u0001\ndepending on \u03c6p (sin \u03c6p + \u03c02 = cos \u03c6p ). This phase shift can be seen in\nFigure 4(a) and (b) as a horizontal shift by \u03c02 , otherwise both plots are identical.\nTheir overall symmetry pattern is that of a class 3 gate. Hence, everything said\n13\n\n\fabout Mx (\u03c6p , \u03b2) implementations equally holds for My (\u03c6p , \u03b2).\nHowever the same can not be said about the magnetisation magnitude\nMxy (\u03c6p , \u03b2) (Figure 4(c)). Mxy (\u03c6p , \u03b2) = Mxy (\u03b2) = \u03bb4B |sin \u03b2| is only a\nfunction of the pulse flip angle \u03b2 and, therefore, displays a contour plot with a\nsymmetry corresponding to a class 1 gate.\nThe behaviour of the functions under permutation of the variables \u03c6p and \u03b2\nand/or their inversion distinguishes Mx (\u03c6p , \u03b2), My (\u03c6p , \u03b2) and Mxy (\u03c6p , \u03b2)\nfrom each other. Mx (\u03c6p , \u03b2) is invariant to permutation of the variables while\nMxy (\u03c6p , \u03b2) is not. In contrast, Mx (\u03c6p , \u03b2) changes under inversion of its\nvariables \u03c6p \u2192 \u2212\u03c6p or \u03b2 \u2192 \u2212\u03b2, while Mxy (\u03c6p , \u03b2) is invariant to inversion\nof \u03c6p \u2192 \u2212\u03c6p . My (\u03c6p , \u03b2) shows the same behaviour as Mxy (\u03c6p , \u03b2) under\nthese transformations. However, a simple shift in \u03c6p = \u03c02 gives Mx (\u03c6p , \u03b2) =\n\u0001\nMy \u03c6p + \u03c02 , \u03b2 , an operation which is not possible for Mxy (\u03c6p , \u03b2) since it is\nindependent of \u03c6p . The differences in behaviour arise because for Mx (\u03c6p , \u03b2)\nand My (\u03c6p , \u03b2) both variables \u03c6p and \u03b2 are arguments of products of trigonometric functions, which generates function values in the range of [\u22121, 1],\nwhereas Mxy (\u03c6p , \u03b2) has trigonometric function values in [\u22121, 1] only for the\nvariable \u03b2.\nIn principle, the task of implementing all 2-input logic gates by NMR\nspectroscopy is already accomplished by using only the simplest of all NMR\nexperiments: starting from thermal equilibrium and only using a single r.f.\npulse. This scenario can therefore serve as a Universal Logic Module (ULM)\n[35]. There are, however, good reasons why one needs to explore other\nstarting conditions, and more complicated NMR pulse sequences. NMR is\nuniquely suitable as a single testbed for the implementation of classical as well\nas quantum computations. In common formulations of quantum algorithms\nthe initial state of the computation is not the thermal equilibrium state but a\nsuperposition state [16]. For valid comparisons between classical and quantum\nalgorithm NMR implementations the same initial (superposition) state should\nbe used. Further, it may be desirable to construct more extended circuitry\nthan just a single logic gate [15]. Then gate implementations that can deal\nwith initial states other than \u03c1eq\nz are attractive as an efficient means of taking\nadvantage of the output of a logic gate without having to restore the initial\nstate \u03c1eq\nz before the next logic gate in a circuit can be executed.\n\nStarting from superposition state A r.f. pulse R \u03c02 ( \u03c02 ) applied to \u03c1eq\nz generates the superposition state \u03c1x = 12 1 + 12 \u03bbB Ix , which corresponds to spin\npolarisation pointing along the +x-axis. Here we take \u03c1x as the initial super14\n\n\fFIGURE 5\nContour plots of q\nthe NMR detectable quantities (a) Mx = hIx i, (b)My = hIy i\n2\n2\nand (c) Mxy =\nhIx i + hIy i (Eq. (28)) as a function of the pulse parameters\n\u03c6p and \u03b2. The initial spin polarisation has been along the x-axis (\u03c1x ) and \u03bbB = 1\nhas been assumed. The ranges for \u03c6p and \u03b2 have been chosen such that the only\nsymmetry operation necessary to generate a full, infinite plot are horizontal and vertical\ntranslations.\n\nposition state. The commutator between R\u03c6p (\u03b2) and \u03c1x is\n\u0003\n\u0002\n\u03b2\nR\u03c6p (\u03b2), \u03c1x = \u2212\u03bbB Iz sin \u03c6p sin\n(26)\n2\nand is zero for values \u03c6p = n\u03c0. These angles correspond to rotations around\nthe positive and negative x-axis (the commutator is also zero for \u03b2 = 2n\u03c0, but\nthese angles represent trivial 2\u03c0 rotations). \u03c1x transforms under the influence\nof a r.f. pulse R\u03c6p (\u03b2) as\n\u03c1(x) (\u03c6p , \u03b2)\n\n=\n\nR\u03c6p (\u03b2)\u03c1x R\u03c6\u2020 p (\u03b2)\n\n(27)\n\nThe r.f. pulse generates a magnetisation vector M (Eq. (23)) as a function of\npulse flip angle \u03b2 and pulse phase \u03c6p according to\n\b\n\uf8eb\n\uf8f6 \uf8eb\n\uf8f6\n\uf8eb\n\uf8f6\nMx\nTr \u03c1(x) (\u03c6p , \u03b2)Ix\n1 \u2212 2 sin2 \u03c6p sin2 \u03b22\n\b (x)\n\u03bb\n\uf8ed My \uf8f8 = \uf8ed Tr \u03c1 (\u03c6p , \u03b2)Iy \uf8f8 = B \uf8ed\n\uf8f8 (28)\nsin 2\u03c6p sin2 \u03b22\n\b (x)\n4\nMz\nTr \u03c1 (\u03c6p , \u03b2)Iz\n\u2212 sin \u03c6p sin \u03b2\nAll the quantities Mq\nx (\u03c6p , \u03b2), My (\u03c6p , \u03b2) and\n\nMxy (\u03c6p , \u03b2) = \u03bb4B 1 \u2212 sin2 \u03c6p sin2 \u03b2 are functions of \u03c6p and \u03b2. Contour\nplots of these three functions are shown in Figure 5. Again, agreements and\ndisagreements in symmetries are found by comparison with Figure 1. Inspection of Figures 4 and 5 immediately reveals differences in the transformation\nbehaviour of \u03c1x and \u03c1eq\nz .\n15\n\n\fAs shown earlier it is possible to implement any logic gate from a NMR\nmeasurable quantity that has the symmetry of a class 3 gate in Figure 1 (e.g.\nMx (\u03c6p , \u03b2) in Figure 4(a)). However, none of the three contour plots in\nFigure 5 displays this symmetry and no class 3 gates can be implemented.\nThe symmetries present belong to those of class 0, 1 and 2 gates and can be\nfound in any of the three contour plots. Implementing class 1 gates requires\ntaking advantage of the periodicity of the functions Mx (\u03c6p , \u03b2), My (\u03c6p , \u03b2)\nand Mxy (\u03c6p , \u03b2) in order to generate canalising inputs. Class 2 gates use a\nreduced parameter range for \u03c6p and \u03b2.\nPermutation of \u03c6p and \u03b2 changes Mx (\u03c6p , \u03b2), My (\u03c6p , \u03b2), while Mxy (\u03c6p , \u03b2)\nstays invariant under this operation. Mx (\u03c6p , \u03b2) and Mxy (\u03c6p , \u03b2) are invariant under input inversion \u03c6p \u2192 \u2212\u03c6p or \u03b2 \u2192 \u2212\u03b2 while My (\u03c6p , \u03b2) is only\ninvariant under \u03b2 \u2192 \u2212\u03b2. All functions are now periodic with \u03c0 in \u03c6p because of their dependence on sin2 \u03c6p or sin 2\u03c6p . Mx (\u03c6p , \u03b2) and My (\u03c6p , \u03b2)\nhave a 2\u03c0 periodicity interval in \u03b2 and \u03c0 periodicity for Mxy (\u03c6p , \u03b2). All\nthe functions Mx (\u03c6p , \u03b2), My (\u03c6p , \u03b2) and Mxy (\u03c6p , \u03b2) are the products of\ntwo trigonometric functions of which at least one is quadratic. The squaring\nreduces the trigonometric function values to the interval [0, 1] and therefore, it\nis not possible to have a symmetry behaviour required for class 3 gates.\nThe rotation operator R\u03c6p (\u03b2) not commuting with the initial density matrix\n\u03c1eq\nz leads to the functions Mx (\u03c6p , \u03b2), My (\u03c6p , \u03b2) and Mxy (\u03c6p , \u03b2) described\nby products of linear trigonometric functions and the ability to implement\nall logic gates. The rotation operator R\u03c6p (\u03b2) commuting with the initial density matrix \u03c1x , however, leads to the functions Mx (\u03c6p , \u03b2), My (\u03c6p , \u03b2) and\nMxy (\u03c6p , \u03b2) characterised by quadratic trigonometric factors and does not permit the implementation of all logic gates. Achieving universality when starting\nfrom \u03c1x therefore requires a different rotation operator that never commutes\nwith \u03c1x . This could be achieved by choosing different pairs of parameters\nfrom the set of parameters describing the single-pulse experiment (Figure 3)\nsuch that a non-commuting rotation operator for \u03c1x results. Alternatively, one\ncan keep the pair of parameters \u03c6p and \u03b2, and use more than one r.f. pulse,\nwith rotation operators such as R\u03c6p2 (\u03b22 ) R\u03c6p1 (\u03b21 ). This latter option we\nconsider next.\nTwo-pulse gates\nThe initial density matrix \u03c1x transforms under the influence of two r.f. pulses\nR\u03c6p2 (\u03b22 ) R\u03c6p1 (\u03b21 ) as\n\u03c1(x) (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) = R\u03c6p2 (\u03b22 ) R\u03c6p1 (\u03b21 ) \u03c1x R\u03c6\u2020 p1 (\u03b21 ) R\u03c6\u2020 p2 (\u03b22 ) (29)\n16\n\n\fThus, the NMR detectable quantities Mx (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ),\nMy (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) and Mxy (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) are functions of the four\nvariables \u03c6p2 , \u03b22 , \u03c6p1 and \u03b21 . Any two of these variables can serve as logic\ngate input parameters with the remaining two fixed. This offers a high degree\nof flexibility in assigning parameters as variable (and to control the logic gate),\nand as fixed.\nA trivial example is based on the fact that all 2-input gates can be implemented when starting from thermal equilibrium magnetisation by a single\n\u0001\npulse. Starting from \u03c1x , a first r.f. pulse R \u03c02 \u2212 \u03c02 generates \u03c1eq\nz and yields\n\u03c0\n\u03c0\n\u03c6p1 = 2 and \u03b21 = \u2212 2 . From there on any second r.f. pulse R\u03c6p2 (\u03b22 ) generates a functional behaviour identical to that of the single-pulse scenario in\nEq. (25), generating universality.\nAnother strategy uses the commutation properties of the rotation operators. In the single-pulse scenario, starting from \u03c1eq\nz all logic gates can be\nimplemented because the overall rotation operator never commutes with the\ninitial density matrix. In the two-pulse scenario, R\u03c6p2 (\u03b22 ) R\u03c6p1 (\u03b21 ) must\nnot commute with \u03c1x . This implies further that the first r.f. pulse R\u03c6p1 (\u03b21 )\nmust not commute with \u03c1x , otherwise Eq. (29) simplifies to \u03c1(x) (\u03c6p2 , \u03b22 ) =\nR\u03c6p2 (\u03b22 ) \u03c1x R\u03c6\u2020 p2 (\u03b22 ) (identical to Eq. (27)) which can not implement all\nlogic gates. To avoid commutation, \u03c6p1 should never be fixed to values n\u03c0\n(Eq. (26)). The second r.f. pulse R\u03c6p2 (\u03b22 ) must not commute with the spin\nbasis operators Ix or Iy when calculating Mx (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) = hIx i or\nMy (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) = hIy i (Eq. (23)), otherwise\nR\u03c6p2 (\u03b22 ) R\u03c6p1 (\u03b21 ) \u03c1x R\u03c6\u2020 p1 (\u03b21 ) Ix R\u03c6\u2020 p2 (\u03b22 ) is just a similarity transform\nof R\u03c6p1 (\u03b21 ) \u03c1x R\u03c6\u2020 p1 (\u03b21 ) Ix under which the trace is invariant. A com\u0002\n\u0003\nmutation R\u03c6p2 (\u03b22 ) , Ix = 0 can be avoided by setting \u03c6p2 6= n\u03c0. For\n\u0002\n\u0003\nMy (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) a commutator R\u03c6p2 (\u03b22 ) , Iy = 0 is avoided for \u03c6p 6=\n(2n + 1) \u03c02 . These constraints on the parameters of type phase \u03c6p implement the functions Mx (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) such as those shown in Table 5 and\nFigure 6: these examples were deliberately chosen such that the two fixed\nvariables are taken as having equal values of \u03c02 .\nOne can see that class 0, 1 and 3 gates can be implemented by all possible\npermutations of fixed pairs of variables of identical value (here \u03c02 ). The\nnon-commutation constraint provides the non-canalising behaviour of class 3\ngates, while the inherent periodicity of the system is sufficient to provide the\ncanalising input configurations necessary for class 0 and 1 gates. However,\nperiodicity does not suffice for a class 2 gate implementation. Comparing\nthe single-pulse scenario (Figure 4(a)) with the contour plots in Figure 6\n\n17\n\n\f(a)\n(b)\n(c)\n(d)\n(e)\n(f)\n\n\u03c6p2\n\n\u03b22\n\nA\nA\n\n\u03c0\n2\n\u03c0\n2\n\n\u03c0\n2\n\u03c0\n2\n\n\u03c6p1\n\n\u03b21\n\nB\n\n\u03c0\n2\n\n\u03c0\n2\n\u03c0\n2\n\nB\nB\n\nB\n\nA\n\nA\nA\nB\n\n\u03c0\n2\n\n\u03c0\n2\n\n\u03c0\n2\n\n\u03c0\n2\n\u03c0\n2\n\nA\n\nB\n\nMx (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 )\n\u03bbB\n(cos \u03c6p2 cos \u03c6p1 cos (\u03c6p2 \u2212 \u03c6p1 ) \u2212\n4\n\u0001\n\u03bbB\ncos2 \u03c6p2 cos \u03b21 \u2212 sin \u03c6p2 sin \u03b21\n4\n\u03bbB\ncos (\u03b22 + \u03b21 )\n4\n\u0001\n\u03bbB\ncos2 \u03c6p1 cos \u03b22 \u2212 sin \u03c6p1 sin \u03b22\n4\n\u2212 \u03bb4B sin \u03c6p2 sin \u03b22\n\u2212 \u03bb4B sin \u03c6p1 sin \u03b21\n\nsin \u03c6p2 sin \u03c6p1 )\n\nTABLE 5\nExamples of logic gate implementations from Mx (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) using any possible pair of variables as gate input A and B, and fixing the remaining two parameters\nto \u03c02 . Apart from a change in sign, examples (e) and (f) are identical to the case in\nFigure 4(a). Example (d) is identical to (b).\n\nFIGURE 6\nContour plots of Mx (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) corresponding to examples (a)\u2013(c) in Table 5.\n\n18\n\n\fFIGURE 7\nContour plot of Mx (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) for (a) \u03b21 =\n\u03b22 = \u03c0.\n\n\u03c0\n,\n2\n\n\u03b22 = \u03c0 and for (b) \u03c6p1 =\n\n\u03c0\n,\n2\n\ndemonstrates that class 2 gate implementations require horizontal and vertical\ntraces of constant value zero. Such traces are absent in the contour plots in\nFigure 6. In short, arbitrarily choosing pairs of fixed parameters as equal\nvalued (not just for \u03c02 ) leads to the loss of universality.\nLet us examine if universality is regained if the fixed parameters are no\nlonger taken as equal valued. For example, taking \u03b21 = \u03c02 and \u03b22 = \u03c0 gives\nMx (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) = \u03bb4B cos (2\u03c6p2 \u2212 \u03c6p1 ) cos (\u03c6p1 ). The corresponding\ncontour plot is shown in Figure 7(a) highlighting the presence of constant\nhorizontal zero-valued traces. Allowing for unequal-valued pairs of parameters\n\u03b21 and \u03b22 (or \u03c6p1 and \u03c6p2 ) permits implementation of class 0, 1 and 2 gates\nbut not class 3.\nUniversality is regained if pairs of parameters of different types, e.g. \u03c6p1 and\n\u03b22 are fixed and do not assume equal values. Figure 7(b) shows that \u03c6p1 = \u03c02 ,\n\u03b22 = \u03c0 gives Mx (\u03c6p2 , \u03b22 , \u03c6p1 , \u03b21 ) = \u03bb4B cos 2\u03c6p2 cos \u03b21 . Both horizontal\nand vertical zero-valued traces are re-established in the corresponding contour\nplot (Figure 7(b)); all 2-input logic gates can be obtained.\nThe flexibility and the ease of implementation as seen from our illustrative\nexamples are good indicators for the richness of the natural computational\npotential of this system. Computational operations more complicated than just\n2-input boolean logics are therefore well within the grasp of this system. This\nincludes multi-input logic gates, continuous logic, and analogue computing\nimplementations. The ubiquitous occurrence of function values {\u22121, 0, 1},\ndue to the trigonometric system functions, especially holds promise for the\n19\n\n\fimplementation of a balanced ternary logic as being natural to this particular\nsystem [7]. Note also, that we can reverse the operation of a logic gate if we\nknow the pulse(s) that originally generated the output [20]. This does not\nmatch with the usual predictions about a computation where e.g. NAND gates\nare not reversible [8]. Obviously our raw output stores additional information\nthat can be exploited for more sophisticated computations.\n4\n\nSUMMARY AND CONCLUSIONS\n\nWe have provided a design approach to analysing novel substrates in order\nto determine which of their parameters can be used to implement boolean\nlogic gates. We have illustrated this with a case study drawn from NMR-based\nclassical computation. The design process requires cataloguing the parameters\nthat are naturally used to describe and manipulate the target system, analysing\ntheir behaviours in combinations, and then matching the resulting patterns of\nbehaviour with the corresponding behaviour patterns of the target gate classes.\nOur case study here focusses on two particular parameters (\u03b2 = \u03bap \u03c4p and\n\u03c6p ); a full design study would assess other combinations of other parameters,\nsince the aim is not simply to find some solution, but to analyse the 'natural'\ncomputational capabilities of the substrate. For example, in our work on\ncontinuous gates [6], we focussed on \u03c9p and \u03c4p .\nThe design approach is not restricted to 2-input gates; combining several\nparameters can produce patterns corresponding to more complex gates. More\nsophisticated experiments could directly exploit symmetry properties of the\nHamiltonian (Eq. (11)\u2013(14)). Eventually, however, specific behaviours will be\nmore easily achieved by combining simpler gates in circuits than by directly\ndesigning complex gates.\nCircuit design requires additional analysis to determine how individual\ngates can be combined in a circuit in a manner 'natural' for the substrate\nin question. Circuit design requires determining techniques for: sequencing\nparameter manipulations to implement the sequence of gate operations in a\ncircuit; combining manipulations to implement multiple gate operations in\nparallel; routing and transforming the output of one gate to the appropriate\ninput of the next. We will address these circuit design issues in a companion\npaper [5].\nThis work addresses only how to implement 'classical' boolean logic gates\nin unconventional substrates, yet it is clear that the example system has further\ninformation available, that is thrown away when viewing it as a boolean gate.\nIf this extra information is instead retained and exploited, more powerful\n20\n\n\fcomputation becomes available [1]. The real computational power of these\nnovel substrates will come from not viewing them as merely alternative ways\nof implementing classical logic gates, but from exploiting them to implement\nnon-classical forms of computation: quantum, continuous (analogue), hybrid,\nand more. The design approach described here forms a first step in a principled\napproach for analysing substrates with a view to performing a specified form\nof computation.\n5\n\nACKNOWLEDGEMENTS\n\nSupport of this work by the Deutsche Forschungsgemeinschaft and Leverhulme\ngrant FM/00224/AM is gratefully acknowledged. We thank Alastair Abbott\nfor constructive comments.\nREFERENCES\n[1] Alastair A. Abbott, Matthias Bechmann, Christian S. Calude, and Angelika Sebald. (May\n2011). A nuclear magnetic resonance implementation of a classical Deutsch-Jozsa algorithm.\nsubmitted.\n[2] Andrew Adamatzky. (2007). Physarum machines: encapsulating reaction-diffusion to\ncompute spanning tree. Naturwissenschaften, 94(12):975\u2013980.\n[3] Leonard M. Adleman. (1994). Molecular computation of solutions to combinatorial\nproblems. Science, 266(5187):1021\u20131024.\n[4] Martyn Amos. (2005). Theoretical and Experimental DNA Computation. Springer.\n[5] Matthias Bechmann, Angelika Sebald, and Susan Stepney. Direct wiring of multi-gate\nNMR logic circuits. In preparation.\n[6] Matthias Bechmann, Angelika Sebald, and Susan Stepney. (2010). From binary to\ncontinuous gates-and back again. In ICES 2010, York, UK, September 2010, volume 6274\nof LNCS, pages 335\u2013347. Springer.\n[7] Matthias Bechmann, Angelika Sebald, and Susan Stepney. (2011). Design of ternary logic\ngates: a nucler magnetic resonance case study. In preparation.\n[8] Charles H. Bennett. (1982). The thermodynamics of computation-a review. Int. J. Theor.\nPhys., 21:905\u2013940.\n[9] Vin\u0131\u0301cius P. Correia, Andr\u00e9 I. Reis, Cep Porto, and Alegre Rs Brasil. (2001). Classifying\nn-input boolean functions. In Proc. VII Workshop de Iberchip, IWS, Montevideo, page 58.\n[10] Barbara Drossel. (2009). Random Boolean Networks, pages 69\u2013110. Wiley.\n[11] Solomon Golomb. (1959). On the classification of boolean functions. IRE Transactions on\nInformation Theory, 5(5):176\u2013186.\n[12] Simon L. Harding and Julian F. Miller. (2004). A tone discriminator in liquid crystal. In\nCEC 2004, pages 1800\u20131807. IEEE Press.\n[13] Simon L. Harding and Julian F. Miller. (2005). Evolution in materio: A real-time robot\ncontroller in liquid crystal. In Proc. NASA/DoD Conference on Evolvable Hardware, pages\n229\u2013238. IEEE Press.\n\n21\n\n\f[14] Simon L. Harding, Julian F. Miller, and Edward A Rietman. (2008). Evolution in materio:\nExploiting the physics of materials for computation. Int. J. Unconventional Computing,\n4(2):155\u2013194.\n[15] Yorik Hardy and Willi H. Steeb. (2001). Classical and Quantum Computing. Birkh\u00e4user\nVerlag, Basel.\n[16] Jonathan A. Jones. (2001). NMR quantum computation. Prog. Nucl. Magn. Reson.\nSpectrosc., 38(4):325\u2013360.\n[17] Jonathan A. Jones. (2011). Quantum computing with nmr. Progress in Nuclear Magnetic\nResonance Spectroscopy, 59(2):91\u2013120.\n[18] Viv Kendon, Angelika Sebald, Susan Stepney, Matthias Bechmann, Peter Hines, and\nRobert C. Wagner. (2011). Heterotic computing. In Unconventional Computation 2011,\nnumber 6714 in LNCS, pages 113\u2013124. Springer.\n[19] Lothar Kuhnert, Konstantin Agladze, and Valentin Krinsky. (1989). Image processing using\nlight-sensitive chemical waves. Nature, 337:244\u2013247.\n[20] Malcolm. H. Levitt. (April 2008). Spin Dynamics: Basics of nuclear magnetic resonance.\nJohn Wiley & Sons, Ltd, Chichester, 2nd edition.\n[21] Jonathan W. Mills. (2008). The nature of the extended analog computer. Phys. D,\n237(9):1235\u20131256.\n[22] Jonathan W. Mills, Matt Parker, Bryce Himebaugh, Craig Shue, Brian Kopecky, and Chris\nWeilemann. (2006). \"Empty Space\" computes: The evolution of an unconventional\nsupercomputer. In Proc. of the 3rd conference on Computing frontiers, pages 115\u2013126.\n[23] Ikuko N. Motoike and Andrew Adamatzky. (2005). Three-valued logic gates in reactiondiffusion excitable media. Chaos, Solitons & Fractals, 24(1):107\u2013114.\n[24] Marta Rosell\u00f3-Merino, Matthias Bechmann, Angelika Sebald, and Susan Stepney. (2010).\nClassical computing in nuclear magnetic resonance. Int. J. Unconventional Computing,\n6(3\u20134):163\u2013195.\n[25] Jun J. Sakurai. (1994). Modern Quantum Mechanics. Addison-Wesley Publishing Company,\nReading, MA, Revised edition.\n[26] Benjamin Schumacher. (Apr 1995). Quantum coding. Phys. Rev. A, 51(4):2738\u20132747.\n[27] Jakub Sielewiesiuk and Jerzy Gorecki. (2001). Logical functions of a cross-junction of\nexcitable chemical media. J. Phys. Chem. A, 105(35):8189\u20138195.\n[28] David Slepian. (1953). On the number of symmetry types of boolean functions of n\nvariables. Can. J. Math., 5(2):185\u2013193.\n[29] Susan Stepney. (July 2008). The neglected pillar of material computation. Physica D,\n237(9):1157\u20131164.\n[30] Susan Stepney, Samson Abramsky, Andy Adamatzky, Colin Johnson, and Jon Timmis.\n(2008). Grand challenge 7: Journeys in non-classical computation. In Visions of Computer\nScience, pages 407\u2013421. BCS.\n[31] Atsushi Tero, Seiji Takagi, Tetsu Saigusa, Kentaro Ito, Dan P. Bebber, Mark D. Fricker,\nKenji Yumiki, Ryo Kobayashi, and Toshiyuki Nakagaki. (2010). Rules for biologically\ninspired adaptive network design. Science, 327(5964):43\u20139\u2013442.\n[32] \u00c1gota T\u00f3th and Kenneth Showalter. (1995). Logic gates in excitable media. J. Chem.\nPhys., 103:2058\u20132066.\n[33] Damien Woods and Thomas J. Naughton. (2008). Parallel and sequential optical computing.\nIn Optical SuperComputing, volume 5172 of LNCS, pages 70\u201386. Springer.\n\n22\n\n\f[34] Damien Woods and Thomas J. Naughton. (2009). Optical computing. Appl. Math.\nComput., 215(4):1417\u20131430.\n[35] Stephen S. Yau and Calvin K. Tang. (feb. 1970). Universal logic modules and their\napplications. IEEE Transactions on Computers, C-19(2):141\u2013149.\n\n23\n\n\f"}