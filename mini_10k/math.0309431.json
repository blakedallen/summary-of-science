{"id": "http://arxiv.org/abs/math/0309431v1", "guidislink": true, "updated": "2003-09-26T12:23:35Z", "updated_parsed": [2003, 9, 26, 12, 23, 35, 4, 269, 0], "published": "2003-09-26T12:23:35Z", "published_parsed": [2003, 9, 26, 12, 23, 35, 4, 269, 0], "title": "On the Generation of Hyper-powersets for the DSmT", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=math%2F0309147%2Cmath%2F0309330%2Cmath%2F0309336%2Cmath%2F0309211%2Cmath%2F0309268%2Cmath%2F0309247%2Cmath%2F0309244%2Cmath%2F0309280%2Cmath%2F0309138%2Cmath%2F0309346%2Cmath%2F0309164%2Cmath%2F0309409%2Cmath%2F0309101%2Cmath%2F0309204%2Cmath%2F0309168%2Cmath%2F0309064%2Cmath%2F0309425%2Cmath%2F0309414%2Cmath%2F0309023%2Cmath%2F0309006%2Cmath%2F0309410%2Cmath%2F0309375%2Cmath%2F0309431%2Cmath%2F0309434%2Cmath%2F0309202%2Cmath%2F0309156%2Cmath%2F0309390%2Cmath%2F0309337%2Cmath%2F0309470%2Cmath%2F0309220%2Cmath%2F0309226%2Cmath%2F0309374%2Cmath%2F0309053%2Cmath%2F0309349%2Cmath%2F0309289%2Cmath%2F0309121%2Cmath%2F0309427%2Cmath%2F0309241%2Cmath%2F0309205%2Cmath%2F0309225%2Cmath%2F0309303%2Cmath%2F0309097%2Cmath%2F0309047%2Cmath%2F0309026%2Cmath%2F0309245%2Cmath%2F0309215%2Cmath%2F0309477%2Cmath%2F0309474%2Cmath%2F0309177%2Cmath%2F0309046%2Cmath%2F0309274%2Cmath%2F0309155%2Cmath%2F0309242%2Cmath%2F0309307%2Cmath%2F0309446%2Cmath%2F0309239%2Cmath%2F0309383%2Cmath%2F0309368%2Cmath%2F0309188%2Cmath%2F0309435%2Cmath%2F0309113%2Cmath%2F0309182%2Cmath%2F0309415%2Cmath%2F0309235%2Cmath%2F0309344%2Cmath%2F0309123%2Cmath%2F0309172%2Cmath%2F0309139%2Cmath%2F0309371%2Cmath%2F0309240%2Cmath%2F0309088%2Cmath%2F0309429%2Cmath%2F0309057%2Cmath%2F0309418%2Cmath%2F0309120%2Cmath%2F0309102%2Cmath%2F0309350%2Cmath%2F0309315%2Cmath%2F0309298%2Cmath%2F0309037%2Cmath%2F0309265%2Cmath%2F0309367%2Cmath%2F0309426%2Cmath%2F0309212%2Cmath%2F0309287%2Cmath%2F0309402%2Cmath%2F0309271%2Cmath%2F0309180%2Cmath%2F0309218%2Cmath%2F0309382%2Cmath%2F0309130%2Cmath%2F0309224%2Cmath%2F0309444%2Cmath%2F0309261%2Cmath%2F0309229%2Cmath%2F0309397%2Cmath%2F0309060%2Cmath%2F0309313%2Cmath%2F0309079%2Cmath%2F0309038%2Cmath%2F0309167&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "On the Generation of Hyper-powersets for the DSmT"}, "summary": "The recent theory of plausible and paradoxical reasoning (DSmT for short, or\nDezert-Smarandache Theory), developed by the authors, appears to be a nice\npromising theoretical tools to solve many information fusion problems (for\nexample in military defense, medicine, etc.), where the Shafer's model cannot\nbe used due to the intrinsic paradoxical nature of the elements of the frame of\ndiscernment and where a strong internal conflict between sources arises. The\nmain idea of DSmT is to work on the hyper-powerset of the frame of discernment\nof the problem under consideration. Although the definition of hyper-powerset\nis well established, the major difficulty in practice is to generate such\nhyper-powersets in order to implement DSmT fusion rule on computers. We present\nin this paper a simple algorithm for generating hyper-powersets and discuss the\nlimitations of our actual computers to generate such hyper-powersets when the\ndimension of the problem increases.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=math%2F0309147%2Cmath%2F0309330%2Cmath%2F0309336%2Cmath%2F0309211%2Cmath%2F0309268%2Cmath%2F0309247%2Cmath%2F0309244%2Cmath%2F0309280%2Cmath%2F0309138%2Cmath%2F0309346%2Cmath%2F0309164%2Cmath%2F0309409%2Cmath%2F0309101%2Cmath%2F0309204%2Cmath%2F0309168%2Cmath%2F0309064%2Cmath%2F0309425%2Cmath%2F0309414%2Cmath%2F0309023%2Cmath%2F0309006%2Cmath%2F0309410%2Cmath%2F0309375%2Cmath%2F0309431%2Cmath%2F0309434%2Cmath%2F0309202%2Cmath%2F0309156%2Cmath%2F0309390%2Cmath%2F0309337%2Cmath%2F0309470%2Cmath%2F0309220%2Cmath%2F0309226%2Cmath%2F0309374%2Cmath%2F0309053%2Cmath%2F0309349%2Cmath%2F0309289%2Cmath%2F0309121%2Cmath%2F0309427%2Cmath%2F0309241%2Cmath%2F0309205%2Cmath%2F0309225%2Cmath%2F0309303%2Cmath%2F0309097%2Cmath%2F0309047%2Cmath%2F0309026%2Cmath%2F0309245%2Cmath%2F0309215%2Cmath%2F0309477%2Cmath%2F0309474%2Cmath%2F0309177%2Cmath%2F0309046%2Cmath%2F0309274%2Cmath%2F0309155%2Cmath%2F0309242%2Cmath%2F0309307%2Cmath%2F0309446%2Cmath%2F0309239%2Cmath%2F0309383%2Cmath%2F0309368%2Cmath%2F0309188%2Cmath%2F0309435%2Cmath%2F0309113%2Cmath%2F0309182%2Cmath%2F0309415%2Cmath%2F0309235%2Cmath%2F0309344%2Cmath%2F0309123%2Cmath%2F0309172%2Cmath%2F0309139%2Cmath%2F0309371%2Cmath%2F0309240%2Cmath%2F0309088%2Cmath%2F0309429%2Cmath%2F0309057%2Cmath%2F0309418%2Cmath%2F0309120%2Cmath%2F0309102%2Cmath%2F0309350%2Cmath%2F0309315%2Cmath%2F0309298%2Cmath%2F0309037%2Cmath%2F0309265%2Cmath%2F0309367%2Cmath%2F0309426%2Cmath%2F0309212%2Cmath%2F0309287%2Cmath%2F0309402%2Cmath%2F0309271%2Cmath%2F0309180%2Cmath%2F0309218%2Cmath%2F0309382%2Cmath%2F0309130%2Cmath%2F0309224%2Cmath%2F0309444%2Cmath%2F0309261%2Cmath%2F0309229%2Cmath%2F0309397%2Cmath%2F0309060%2Cmath%2F0309313%2Cmath%2F0309079%2Cmath%2F0309038%2Cmath%2F0309167&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The recent theory of plausible and paradoxical reasoning (DSmT for short, or\nDezert-Smarandache Theory), developed by the authors, appears to be a nice\npromising theoretical tools to solve many information fusion problems (for\nexample in military defense, medicine, etc.), where the Shafer's model cannot\nbe used due to the intrinsic paradoxical nature of the elements of the frame of\ndiscernment and where a strong internal conflict between sources arises. The\nmain idea of DSmT is to work on the hyper-powerset of the frame of discernment\nof the problem under consideration. Although the definition of hyper-powerset\nis well established, the major difficulty in practice is to generate such\nhyper-powersets in order to implement DSmT fusion rule on computers. We present\nin this paper a simple algorithm for generating hyper-powersets and discuss the\nlimitations of our actual computers to generate such hyper-powersets when the\ndimension of the problem increases."}, "authors": ["Jean Dezert", "Florentin Smarandache"], "author_detail": {"name": "Florentin Smarandache"}, "author": "Florentin Smarandache", "arxiv_comment": "11 pages, 2 tables, one graph, one computer program. Presented to The\n  Sixth International Conference on Information Fusion, Cairns, Queensland,\n  Australia, 1118-1125, 8-11 July 2003", "links": [{"href": "http://arxiv.org/abs/math/0309431v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/math/0309431v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "math.GM", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "math.GM", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "94A15, 94A17", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/math/0309431v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/math/0309431v1", "journal_reference": "Published in the Proceedings of the Sixth International Conference\n  on Information Fusion, International Society for Information Fusion, Cairns,\n  Queensland, Australia, 1118-1125, 8-11 July 2003", "doi": null, "fulltext": "arXiv:math/0309431v1 [math.GM] 26 Sep 2003\n\nOn the generation of hyper-powersets\nfor the DSmT\nJean Dezert\nONERA\n29 Av. de la Division Leclerc\n92320 Ch\u00e2tillon, France.\nJean.Dezert@onera.fr\n\nFlorentin Smarandache\nDepartment of Mathematics\nUniversity of New Mexico\nGallup, NM 87301, U.S.A.\nsmarand@unm.edu\n\nAbstract \u2013 The recent theory of plausible and paradoxical reasoning (DSmT) developed by the authors appears\nto be a nice promising theoretical tools to solve many information fusion problems where the Shafer's model\ncannot be used due to the intrinsic paradoxical nature of the elements of the frame of discernment and where\na strong internal conflict between sources arises. The main idea of DSmT is to work on the hyper-powerset of\nthe frame of discernment of the problem under consideration. Although the definition of hyper-powerset is well\nestablished, the major difficulty in practice is to generate such hyper-powersets in order to implement DSmT\nfusion rule on computers. We present in this paper a simple algorithm for generating hyper-powersets and\ndiscuss the limitations of our actual computers to generate such hyper-powersets when the dimension of the\nproblem increases.\nKeywords: Dezert-Smarandache theory (DSmT), hyper-powersets, monotone boolean functions, Dedekind\nproblem, plausible and paradoxical reasoning, data fusion.\n\n1\n\nIntroduction\n\nThe Dezert-Smarandache theory (DSmT for short) of plausible and paradoxical reasoning [8, 9, 22] is a\ngeneralization of the classical Dempster-Shafer theory (DST) [18] which allows to formally combine any types of\nsources of information (rational, uncertain or paradoxical). The DSmT is able to solve complex fusion problems\nwhere the DST usually fails, specially when conflicts (paradoxes) between sources become large and when the\nrefinement of the frame of discernment \u0398 is inaccessible because of the vague, relative and imprecise nature of\nelements of \u0398 (see [9] for justification and examples). The foundation of DSmT is based on the definition of\nthe hyper-powerset D\u0398 of a general frame of discernment \u0398. \u0398 must be considered as a set {\u03b81 , . . . , \u03b8n } of n\nelements considered as exhaustive which cannot be precisely defined and separated so that no refinement of \u0398\nin a new larger set \u0398ref of disjoint elementary hypotheses is possible in contrast with the classical DempsterShafer Theory (DST). The DSmT deals directly with paradoxical/conflicting sources of information into this new\nformalism and proposes a new and very simple (associative and commutative) rule of combination for conflicting\nsources of informations (corpus/bodies of evidence). Some interesting results based on DSmT approach can be\nfound in [24, 4]. Before going deeper into the DSmT it is necessary to briefly present first the foundations of\nthe DST and DSmT for a better understanding of the important differences between these two theories.\n\n2\n\nShort presentation of the DST\n\nLet \u0398 = {\u03b81 , \u03b82 , . . . , \u03b8n } be the frame of discernment of the problem under consideration having n exhaustive\nand exclusive elementary hypothesis \u03b8i . This corresponds to the Shafer's model of the problem. Such model\nassumes that an ultime refinement of the problem is possible so that \u03b8i are well precisely defined/identified in\nsuch a way that we are sure that they are exclusive and exhaustive. From this Shafer's model, a basic belief\nassignment (bba) m(.) : 2\u0398 \u2192 [0, 1] associated to a given body of evidence B (also called sometimes corpus of\nevidence) is defined by\nX\nm(A) = 1\n(1)\nm(\u2205) = 0\nand\nA\u22082\u0398\n\n\f2\nwhere 2\u0398 is called the powerset of \u0398, i.e. the set of all subsets of \u0398. From any bba, one defines the belief and\nplausibility functions of A \u2286 \u0398 as\nX\nBel(A) =\nm(B)\n(2)\nB\u22082\u0398 ,B\u2286A\n\nPl(A) =\n\nX\n\nm(B) = 1 \u2212 Bel(\u0100)\n\n(3)\n\nB\u22082\u0398 ,B\u2229A6=\u2205\n\nNow let Bel1 (.) and Bel2 (.) be two belief functions over the same frame of discernment \u0398 and their corresponding bba m1 (.) and m2 (.) provided by two distinct bodies of evidence B1 and B2 . Then the combined global\nbelief function denoted Bel(.) = Bel1 (.) \u2295 Bel2 (.) is obtained by combining the information granules m1 (.) and\nm2 (.) through the following Dempster's rule of combination [m1 \u2295 m2 ](\u2205) = 0 and \u2200B 6= \u2205 \u2208 2\u0398 ,\nP\nX\u2229Y =B m1 (X)m2 (Y )\nP\n(4)\n[m1 \u2295 m2 ](B) =\n1 \u2212 X\u2229Y =\u2205 m1 (X)m2 (Y )\n\nP\nThe notation X\u2229Y =B represents the sum over all X, Y \u2208 2\u0398 such that X \u2229 Y = B. The orthogonal sum\nm(.) , [m1 \u2295 m2 ](.) is considered\nas a basic belief assignment if and only if the denominator in equation (4) is\nP\nnon-zero. The term k12 , X\u2229Y =\u2205 m1 (X)m2 (Y ) is called degree of conflict between the sources B1 and B2 .\nWhen k12 = 1, the orthogonal sum m(.) does not exist and the bodies of evidences B1 and B2 are said to be\nin full contradiction. Such a case can arise when there exists A \u2282 \u0398 such that Bel1 (A) = 1 and Bel2 (\u0100) = 1.\nSame kind of trouble can occur also with the Optimal Bayesian Fusion Rule (OBFR) [6, 7].\n\nThe DST is attractive for the Data Fusion community because it gives a nice mathematical model for ignorance and it includes the Bayesian theory as a special case [18] (p. 4). Although very appealing, the DST\npresents some weaknesses and limitations because of its model itself, the theoretical justification of the Dempster's rule of combination but also because of our confidence to trust the result of Dempster's rule of combination\nwhen the conflit becomes important between sources (k12 \u0580 1).\nThe Dempster's rule of combination has however been a posteriori justified by the Smet's axiomatic of the\nTransferable Belief Model (TBM) in [23]. But we must also emphasize here that an infinite number of possible\nrules of combinations can be built from the Shafer's model following ideas initially proposed in [17] and corrected\nhere as follows:\n\u2022 one first has to compute m(\u2205) by\nm(\u2205) ,\n\nX\n\nm1 (A)m2 (B)\n\nA\u2229B=\u2205\n\n\u2022 P\nthen one redistributes m(\u2205) on all (A 6= \u2205) \u2286 \u0398 with some given coefficients wm (A) \u2208 [0, 1] such that\nA\u2286\u0398 wm (A) = 1 according to\n(\n\nwm (\u2205)m(\u2205) \u2192 m(\u2205)\nm(A) + wm (A)m(\u2205) \u2192 m(A), \u2200A 6= \u2205\n\n(5)\n\nThe particular choice of the set of coefficients wm (.) provides a particular rule of combination. Actually there\nexists an infinite number of possible rules of combination. Some rules can be better justified than others\ndepending on their ability or not to preserve associativity and commutativity properties of the combination. It\ncan be easily shown in [17] that such general procedure provides all existing rules developed in the literature\nfrom the Shafer's model as alternative to the primeval Dempster's rule of combination depending on the choice\nof coefficients w(A). As example the Dempster's rule of combination can be obtained from (5) by choosing\nwm (\u2205) = 0 and wm (A) = m(A)/(1 \u2212 m(\u2205)) for all A 6= \u2205. The Yager's rule of combination is obtained by\nchoosing wm (\u0398) = 1 while the \"Smets' rule of combination\" is obtained by choosing wm (\u2205) = 1 and thus\naccepting the possibility to deal with bba such that m(\u2205) > 0.\n\n\f3\n\n3\n\nFoundations of the DSmT\n\nThe development of the Dezert-Smarandache theory of plausible and paradoxical reasoning (called DSmT\nfor short) comes from the necessity to overcome the two following inherent limitations of the DST which are\nclosely related with the acceptance of the third middle excluded principle, i.e.\n(C1) - the DST considers a discrete and finite frame of discernment \u0398 based on a set of exhaustive and exclusive\nelementary elements \u03b8i .\n(C2) - the bodies of evidence are assumed independent and provide their own belief function on the powerset\n2\u0398 but with same interpretation for \u0398.\nThe foundation of the DSmT is based on the refutation of the principle of the third excluded middle for\na wide class of fusion problems due to the nature of the elements of \u0398. By accepting the third middle, we\ncan easily handle the possibility to deal directly with paradoxes (partial vague overlapping elements/concepts)\nof the frame of discernment. This is the DSm model. In other words, we include the third exclude directly\ninto the formalism to develop the DSmT and relax the (C1) and (C2) constraints of the Shafer's model. By\ndoing this, a wider class of fusion problem can be attacked by the DSmT. The relaxation of the constraint\n(C1) can be justified since, in many problems (see example in [9]), the elements of \u0398 generally correspond only\nto imprecise/vague notions and concepts so that no refinement of \u0398 satisfying the first constraint is actually\npossible (specially if natural language is used to describe elements of \u0398).\nThe DSmT refutes also the excessive requirement imposed by (C2) in the Shafer's model, since it seems\nclear to us that, the same frame \u0398 may be interpreted differently by the distinct bodies of evidence (experts).\nSome subjectivity on the information provided by a source of information is almost unavoidable, otherwise this\nwould assume, as within the DST, that all bodies of evidence have an objective/universal (possibly uncertain)\ninterpretation or measure of the phenomena under consideration which unfortunately rarely occurs in reality,\nbut when bba are based on some objective probabilities transformations. But in this last case, probability theory\ncan handle properly the information; and the DST, as well as the DSmT, becomes useless. If we now get\nout of the probabilistic background argumentation, we claim that in most of cases, the sources of evidence\nprovide their beliefs about some hypotheses only with respect to their own worlds of knowledge and experience\nwithout reference to the (inaccessible) absolute truth of the space of possibilities. The DSmT includes the\npossibility to deal with evidences arising from different sources of information which don't have access to\nabsolute interpretation of the elements \u0398 under consideration. The DSmT can be interpreted as a general and\ndirect extension of Bayesian theory and the Dempster-Shafer theory in the following sense. Let \u0398 = {\u03b81 , \u03b82 } be\nthe simpliest frame of discernment involving only two elementary hypotheses (with no additional assumptions\non \u03b81 and \u03b82 ), then\n\u2022 the probability theory deals with basic probability assignments (bpa) m(.) \u2208 [0, 1] such that m(\u03b81 ) +\nm(\u03b82 ) = 1\n\u2022 the DST deals with bba m(.) \u2208 [0, 1] such that m(\u03b81 ) + m(\u03b82 ) + m(\u03b81 \u222a \u03b82 ) = 1\n\u2022 the DSmT theory deals with generalized bba m(.) \u2208 [0, 1] such that m(\u03b81 )+m(\u03b82 )+m(\u03b81 \u222a\u03b82 )+m(\u03b81 \u2229\u03b82 ) =\n1\n\n3.1\n\nNotion of hyper-powerset D \u0398\n\nOne of the cornerstones of the DSmT is the notion of hyper-powerset which is now presented. Let \u0398 =\n{\u03b81 , . . . , \u03b8n } be a set of n elements which cannot be precisely defined and separated so that no refinement of\n\u0398 in a new larger set \u0398ref of disjoint elementary hypotheses is possible (we abandon here the Shafer's model).\nThe hyper-powerset D\u0398 is defined as the set of all composite propositions built from elements of \u0398 with \u222a and\n\u2229 (\u0398 generates D\u0398 under operators \u222a and \u2229) operators such that\n1. \u2205, \u03b81 , . . . , \u03b8n \u2208 D\u0398 .\n2. If A, B \u2208 D\u0398 , then A \u2229 B \u2208 D\u0398 and A \u222a B \u2208 D\u0398 .\n3. No other elements belong to D\u0398 , except those obtained by using rules 1 or 2.\n\n\f4\nThe dual (obtained by switching \u222a and \u2229 in expressions) of D\u0398 is itself. There are elements in D\u0398 which are\nself-dual (dual to themselves), for example \u03b18 for the case when n = 3 in the example below. The cardinality\nn\nof D\u0398 is majored by 22 when Card(\u0398) = |\u0398| = n. The generation of hyper-power set D\u0398 is closely related\nwith the famous Dedekind's problem [5, 3] on enumerating the set of monotone Boolean functions as it will be\npresented in the sequel with the generation of the elements of D\u0398 .\nExample of the first hyper-powersets D\u0398\nIn the degenerate case (n = 0) where \u0398 = {}, one has D\u0398 = {\u03b10 , \u2205} and |D\u0398 | = 1. When \u0398 = {\u03b81 },\none has D\u0398 = {\u03b10 , \u2205, \u03b11 , \u03b81 } and |D\u0398 | = 2. When \u0398 = {\u03b81 , \u03b82 }, one has D\u0398 = {\u03b10 , \u03b11 , . . . , \u03b14 } and\n|D\u0398 | = 5 with \u03b10 , \u2205, \u03b11 , \u03b81 \u2229 \u03b82 , \u03b12 , \u03b81 , \u03b13 , \u03b82 and \u03b14 , \u03b81 \u222a \u03b82 . When \u0398 = {\u03b81 , \u03b82 , \u03b83 }, one has\nD\u0398 = {\u03b10 , \u03b11 , . . . , \u03b118 } and |D\u0398 | = 19 (see [9] for details) with\n\u03b1i\n\u03b10 , \u2205\n\u03b11 , \u03b81 \u2229 \u03b82 \u2229 \u03b83\n\u03b12 , \u03b81 \u2229 \u03b82\n\u03b13 , \u03b81 \u2229 \u03b83\n\u03b14 , \u03b82 \u2229 \u03b83\n\u03b15 , (\u03b81 \u222a \u03b82 ) \u2229 \u03b83\n\u03b16 , (\u03b81 \u222a \u03b83 ) \u2229 \u03b82\n\u03b17 , (\u03b82 \u222a \u03b83 ) \u2229 \u03b81\n\u03b18 , [(\u03b81 \u2229 \u03b82 ) \u222a \u03b83 ] \u2229 (\u03b81 \u222a \u03b82 )\n\u03b19 , \u03b81\n\u03b110 , \u03b82\n\u03b111 , \u03b83\n\u03b112 , (\u03b81 \u2229 \u03b82 ) \u222a \u03b83\n\u03b113 , (\u03b81 \u2229 \u03b83 ) \u222a \u03b82\n\u03b114 , (\u03b82 \u2229 \u03b83 ) \u222a \u03b81\n\u03b115 , (\u03b81 \u222a \u03b82 )\n\u03b116 , (\u03b81 \u222a \u03b83 )\n\u03b117 , (\u03b82 \u222a \u03b83 )\n\u03b118 , (\u03b81 \u222a \u03b82 \u222a \u03b83 )\nNote that the classical complementary \u0100 of any proposition A (except for \u2205 and \u0398), is not involved within\nDSmT because of the refutation of the third excluded middle. |D\u0398 | for n \u2265 1 follows the sequence of Dedekind's\nnumbers1 1,2,5,19,167,7580,7828353,... [20].\nFrom a general frame of discernment \u0398, we define a map m(.) : D\u0398 \u2192 [0, 1] associated to a given body of\nevidence B which can support paradoxical information, as follows\nX\nm(\u2205) = 0\nand\nm(A) = 1\nA\u2208D\u0398\n\nThe quantity m(A) is called A's generalized basic belief assignment (gbba) or the generalized basic belief mass\nfor A. The belief and plausibility functions are defined in almost the same manner as within the DST, i.e.\nX\nX\nm(B)\nBel(A) =\nm(B)\nand\nPl(A) =\nB\u2286A\n\nB\u2208D\u0398\n\nB\u2229A6=\u2205\nB\u2208D\u0398\n\nThese definitions are compatible with the DST definitions when the sources of information become uncertain\nbut rational (they do not support paradoxical information). We still have \u2200A \u2208 D\u0398 , Bel(A) \u2264 Pl(A).\n1 Actually this sequence corresponds to the sequence of Dedekind minus one since we don't count the last degenerate isotone\nfunction f22n \u22121 (.) as element of D \u0398 (see section 4.2)\n\n\f5\n\n3.2\n\nThe DSm rule of combination\n\nThe DSm rule of combination m(.) , [m1 \u2295 m2 ](.) of two distinct (but potentially paradoxical) sources of\nevidences B1 and B2 over the same general frame of discernment \u0398 with belief functions Bel1 (.) and Bel2 (.)\nassociated with general information granules m1 (.) and m2 (.) is given by \u2200C \u2208 D\u0398 ,\nX\nm(C) =\nm1 (A)m2 (B)\n(6)\nA,B\u2208D\u0398 ,A\u2229B=C\n\nSince D\u0398 is closed under \u222a and \u2229 operators, this new rule of combination guarantees that m(.) : D\u0398 \u2192 [0, 1] is\na proper general information granule. This rule of combination is commutative and associative and can always\nbe used for the fusion of paradoxical or rational sources of information (bodies of evidence). It is important to\nnote that any fusion of sources of information generates either uncertainties, paradoxes or more generally both.\nThis is intrinsic to the general fusion process itself. The theoretical justification of the DSm rule can be found\nin [9].\nThis DSm rule of combination seems at the first glance very expensive in terms of computations and memory\nsize due to the huge number of elements in D\u0398 . This is only true if the cores (the set of focal elements of gbba)\nK1 (m1 ) and K2 (m2 ) coincide with D\u0398 ; in other words when m1 (A) > 0 and m2 (A) > 0 for all A 6= \u2205 \u2208 D\u0398 .\nFortunately, it is important to note here that in most of practical applications the sizes of K1 (m1 ) and K2 (m2 )\nare much smaller than |D\u0398 | because bodies of evidence generally allocate their basic belief assignments only\nover a subset of hyper-powerset. This makes things easier for the implementation of the DSm rule (6). The\nDSm rule is actually very easy to implement. It suffices for each focal element of K1 (m1 ) to multiply it with\nthe focal elements of K2 (m2 ) and then to pool all combinations which are logically equivalent under the algebra\nof sets according to the following scheme\n\nFigure 1: Representation of the DSm rule\nThe figure above represents the DSm network architecture of the DSm rule of combination. The first layer\nof the network consists in all bba of focal elements Ai , i = 1, . . . , n of m1 (.). The second layer of the network\nconsists in all bba of focal elements Bj , j = 1, . . . , k of m2 (.). Each node of layer 2 is connected with each node\nof layer 1. The output layer (on the right) consists in the combined basic belief assignments of all possible\nintersections Ai \u2229 Bj , i = 1, . . . , n and j = 1, . . . , k. The last step of DSm rule (not included on the figure due to\nspace limitation) consists in the compression of the output layer by regrouping (additioning) all the combined\nbelief assignments corresponding to the same focal elements (by example if X = A2 \u2229 B3 = A4 \u2229 B5 , then\nm(X) = m(A2 \u2229 B3 ) + m(A4 \u2229 B5 )). If a third body of evidence provides a new bba m3 (.), the one can combine\nit by connecting the output layer with the layer associated to m3 (.), and so on. Because of commutativity and\nassociativity properties of DSm rule, the DSm network can be designed with any order for the layers. The DSm\nrule of combination can be used for the fusion of any kind of information, whereas the Dempster's rule within\nShafer's model can not be used in cases where paradoxist information occurs, or degree of conflict is 1, or when\nelements of the frame of discernment are not refinable in exclusive finer atoms.\n\n\f6\n\n4\n4.1\n\nThe generation of D\u0398\nMemory size requirements\n\nBefore going further on the generation of D\u0398 , it is important to estimate the memory size for storing the\nelements of D\u0398 for |\u0398| = n. Since each element of D\u0398 can be stored as a 2n \u2212 1-binary string, the memory size\nfor D\u0398 is given by the right column of the following table (we do not count the size for \u2205 which is 0 and the\nminimum length is considered here as the byte (8 bits)):\n|\u0398| = n\n2\n3\n4\n5\n6\n7\n8\n\nsize/elem.\n1 byte\n1 byte\n2 bytes\n4 bytes\n8 bytes\n16 bytes\n32 bytes\n\n# of elem.\n4\n18\n166\n7579\n7828352\n\u2248 2.4 * 1012\n\u2248 5.6 * 1022\n\nSize of D\u0398\n4 bytes\n18 bytes\n0.32 Kb\n30 Kb\n59 Mb\n3.6 * 104 Gb\n1.7 * 1015 Gb\n\nThis table shows the extreme difficulties for our computers to store all the elements of D\u0398 when |\u0398| > 6. This\ncomplexity must be however relativized with respect to the number of all Boolean functions built from the\nultimate refinement (if accessible) 2\u0398ref of same initial frame \u0398 for applying DST. The comparison of |D\u0398 |\nwith respect to |2\u0398ref | is given in the following table\n|\u0398| = n\n2\n3\n4\n5\n\n4.2\n\nn\n\n|2\u0398ref | = 22 \u22121\n23 = 8\n27 = 128\n215 = 32768\n231 = 2147483648\n\n|D\u0398 |\n5\n19\n167\n7580\n\nMonotone Boolean functions\n\nA simple Boolean function f (.) maps n-binary inputs (x1 , . . . , xn ) \u2208 {0, 1}n , {0, 1} \u00d7 . . .\u00d7 {0, 1} to a single\nbinary output y = f (x1 , . . . , xn ) \u2208 {0, 1}. Since there are 2n possible input states which can map to either 0 or\nn\n1 at the output y, the number of possible boolean functions is 22 . Each of these functions can be realized by\nthe logic operations \u2227 (and), \u2228 (or) and \u00ac (not) [3, 28]. As simple example, let consider only a 2-binary input\n2\nvariable (x1 , x2 ) \u2208 {0, 1} \u00d7 {0, 1} then all the 22 = 16 possible Boolean functions fi (x1 , x2 ) built from (x1 , x2 )\nare summarized in the following tables\n(x1 , x2 )\n(0, 0)\n(0, 1)\n(1, 0)\n(1, 1)\nNotation\n\nf0\n0\n0\n0\n0\nFalse\n\n(x1 , x2 )\n(0, 0)\n(0, 1)\n(1, 0)\n(1, 1)\nNotation\n\nf8\n1\n0\n0\n0\n \u0304 x2\nx1 \u2228\n\nf1\n0\n0\n0\n1\nx1 \u2227 x2\nf9\n1\n0\n0\n1\nx1 \u25b3x2\n\nf2\n0\n0\n1\n0\nx1 \u2227 x\u03042\nf10\n1\n0\n1\n0\nx\u03042\n\nf3\n0\n0\n1\n1\nx1\n\nf11\n1\n0\n1\n1\nx1 \u2228 x\u03042\n\nf4\n0\n1\n0\n0\nx\u03041 \u2227 x2\n\nf5\n0\n1\n0\n1\nx2\n\nf12\n1\n1\n0\n0\nx\u03041\n\nf13\n1\n1\n0\n1\nx\u03041 \u2228 x2\n\nf6\n0\n1\n1\n0\nx1 \u22bb x2\nf14\n1\n1\n1\n0\nx1 \u22bc x2\n\nf7\n0\n1\n1\n1\nx1 \u2228 x2\nf15\n1\n1\n1\n1\nTrue\n\n \u0304 x2 , \u00ac(x1 \u2228x2 ) (nor), x1 \u25b3x2 , (x1 \u2227x2 )\u2228(x\u03041 \u2227\nwith the notation x\u0304 , \u00acx, x1 \u22bbx2 , (x1 \u2228x2 )\u2227(x\u03041 \u2228 x\u03042 ) (xor), x1 \u2228\nx\u03042 ) (xnor) and x1 \u22bcx2 , \u00ac(x1 \u2227x2 ) (nand). We denote by Fn (\u2227, \u2228, \u00ac) = {f0 (x1 , . . . , xn ), . . . , f22n \u22121 (x1 , . . . , xn )}\nthe set of all possible Boolean functions built from n-binary inputs. Let x , (x1 , . . . , xn ) and x\u2032 , (x\u2032 1 , . . . , x\u2032 n )\nbe two vectors in {0, 1}n. Then x precedes x\u2032 and we denote x \u0016 x\u2032 if and only if xi \u2264 x\u2032 i for 1 \u2264 i \u2264 n (\u2264 is\napplied componentwise). If xi < x\u2032 i for 1 \u2264 i \u2264 n then x strictly precedes x\u2032 which will be denoted as x \u227a x\u2032 .\n\n\f7\nA Boolean function f is said to be a non-decreasing monotone (or isotone) Boolean function (or just monotone Boolean function for short) if and only if \u2200x, x\u2032 \u2208 {0, 1}n such that x \u0016 x\u2032 , then f (x) \u0016 f (x\u2032 ) [26].\nSince any isotone Boolean function involves only \u2227 and \u2228 operators (no \u00ac operations) [28] and there exists a\ncorrespondance between (\u2228, \u2227) operators in logics with (+, *) in algebra of numbers and (\u222a, \u2229) in algebra of\nsets, the generation of all elements of D\u0398 built from \u0398 with \u222a and \u2229 operator is equivalent to the problem\nof generating isotone Boolean functions over the vertices of the unit n-cube. We denote by Mn (\u2227, \u2228) the set\nof all possible monotone Boolean functions built from n-binary inputs. Mn (\u2227, \u2228) is a subset of Fn (\u2227, \u2228, \u00ac).\nIn the previous example, f1 (x1 , x2 ), f3 (x1 , x2 ), f5 (x1 , x2 ), f7 (x1 , x2 ) are isotone Boolean functions but special\nfunctions f0 (x1 , x2 ) and f22n \u22121 (x1 , . . . , xn ) must also be considered as monotone functions too. All the other\nfunctions belonging to F2 (\u2227, \u2228, \u00ac) do not belong to M2 (\u2227, \u2228) because they require the \u00ac operator in their expressions and we can check easily that the monotonicity property x \u0016 x\u2032 \u21d2 f (x) \u0016 f (x\u2032 ) does not hold for these\nfunctions. The Dedekind's problem [5] is to determine the number d(n) of distinct monotone Boolean functions\nof n-binary variables. Dedekind [5] computed d(0) = 2, d(1) = 3, d(2) = 6, d(3) = 20 and d(4) = 168. Church\n[1] computed d(5) = 7581 in 1940. Ward [27] computed d(6) = 7828354 in 1946. Church [2] then computed\nd(7) = 2414682040998 in 1965. Between sixties and eighties, important advances have been done to obtain upper\nand lower bounds for d(n) [12, 14, 16]. In 1991, Wiedemann [29] computed d(8) = 56130437228687557907788\n(200 hours of computing time with a Cray-2 processor) which has recently been validated by Fidytek and al. in\n[11]. Until now the computation of d(n) for n > 8 is still a challenge for mathematicians even if the following\ndirect exact explicit formula for d(n) has been obtained by Kisielewicz and Tombak (see [13, 25] for proof) :\n2n\n\nd(n) =\n\nn\n\n2\n2Y\n\u22121 j\u22121\nY\nX\n\nk=1 j=1 i=0\n\n(1 \u2212 bki (1 \u2212 bkj )\n\nl(i)\nY\n\n(1 \u2212 bim (1 \u2212 bjm )))\n\nm=0\n\nwhere l(0) = 0 and l(i) = [log2 i] for i > 0, bki , [k/2i ] \u2212 2[k/2i+1 ] and [x] denotes the floor function (i.e. the\nnearest integer less or equal to x). The difficulty arises from the huge number of terms involved in the formula,\nthe memory size and the highspeed computation requirements. The last advances and state of art in counting\nalgorithms of Dedekind's numbers can be found in [25, 11, 26].\n\n4.3\n\nGeneration of MBF\n\nBefore describing the general algorithm for generating the monotone Boolean functions (MBF), let examine\ndeeper the example of section 4.1. From previous tables, one can easily find the set of (restricted) MBF\nM\u22c62 (\u2227, \u2228) = {f0 (x1 , x2 ) = False, f1 (x1 , x2 ) = x1 \u2227 x2 , f5 (x1 , x2 ) = x2 , f7 (x1 , x2 ) = x1 \u2228 x2 } which is equivalent,\nusing algebra of sets, to hyper-powerset DX = {\u2205, x1 \u2229 x2 , x1 , x2 , x1 \u222a x2 } associated with frame of discernment\nX = {x1 , x2 }. Since the tautology f15 (x1 , x2 ) is not involved within DSmT, we do not include it as a proper\nelement of DX and we consider only M\u22c62 (\u2227, \u2228) , M2 (\u2227, \u2228) \\ {f15 } rather than M2 (\u2227, \u2228) itself. Let's now\nintroduce the Smarandache's codification for the enumeration of distinct parts of a Venn diagram X with n\npartially overlapping elements xi ,i = 1, 2, . . . , n. A such diagram has 2n \u2212 1 disjoint parts. One notes with only\none digit (or symbol) those parts which belong to only one of the elements xi (one notes by < i > the part which\nbelongs to xi only, for 1 \u2264 i \u2264 n), with only two digits (or symbols) those parts which belong to exactly two\nelements (one notes by < ij >, with i < j, the part which belongs to xi and xj only, for 1 \u2264 i < j \u2264 n), then\nwith only three digits (or symbols) those parts which belong to exactly three elements (one notes by < ijk >\nconcatenated numbers, with i < j < k, the part which belongs to xi , xj , and xk only, for 1 \u2264 i < j < k \u2264 n),\nand so on up to < 12 . . . n > which represents the last part that belongs to all elements xi . For 1 \u2264 n \u2264 9,\nthe Smarandache's encoding works normally as in base 10. But, for n \u2265 10, because there occur two (or more)\ndigits/symbols in notation of the elements starting from 10 on, one considers this codification in base n + 1,\ni.e. using one symbol to represent two (or more) digits, for example: A = 10, B = 11, C = 12, etc. For n = 1\none has only one part, coded < 1 >. For n = 2 one has three parts, coded < 1 >, < 2 >, < 12 >. Generally,\n< ijk > does not represent xi \u2229 xj \u2229 xk but only a part of it, the only exception is for < 12 . . . n >. For n = 3\none has 23 \u2212 1 = 7 disjoint parts, coded < 1 >, < 2 >, < 3 >, < 12 >, < 13 >, < 23 >, < 123 >. < 23 >\nmeans the part which belongs to x2 and x3 only, but < 23 >6= x2 \u2229 x3 because x2 \u2229 x3 = {< 23 >, < 123 >} in\nthe Venn diagram of 3 elements x1 , x2 , and x3 .The generalization for n > 3 is straightforward. Smarandache's\ncodification can be organized in a numerical increasing order, in lexicographic order or any other orders. An\nuseful order for organizing the Smarandache's codification for the generation of D\u0398 is the Dezert-Smarandache\n\n\f8\norder un = [u1 , . . . , u2n \u22121 ]\u2032 based on a recursive construction starting with u1 , [< 1 >]. Having constructed\nun\u22121 , then we can construct un for n > 1 recursively as follows:\n\u2022 include all elements of un\u22121 into un ;\n\u2022 afterwards, include element < n > as well in un ;\n\u2022 then at the end of each element of un\u22121 concatenate the element < n > and get a new set u\u2032 n\u22121 which\nthen is also included in un .\nThis is un , which has (2n\u22121 \u2212 1) + 1 + (2n\u22121 \u2212 1) = 2n \u2212 1 components. For n = 3, as example, one gets\nu3 , [< 1 > < 2 > < 12 > < 3 > < 13 > < 23 > < 123 >]\u2032 . Because all elements in un are disjoint, we are\nable to write each element di of DX in a unique way as a linear combination of un elements, i.e.\ndn = [d1 , . . . , d2n \u22121 ]\u2032 = Dn * un\n\n(7)\n\nThus un constitutes a basis for generating the elements of DX . Each row in the matrix Dn represents the\ncoefficients of an element of DX with respect to the basis un . The rows of Dn may also be regarded as binary\nnumbers in an increasing order. As example, for n = 2, one has:\n\uf8f9 \uf8ee\n\uf8ee\n\uf8f9\n\uf8f9\nd1 = x1 \u2229 x2\n0 0 1 \uf8ee\n<1>\n\uf8ef d2 = x2 \uf8fa \uf8ef0 1 1\uf8fa\n\uf8fa \uf8ef\n\uf8ef\n\uf8fa \uf8f0\n\uf8fb\n(8)\n\uf8f0 d3 = x1 \uf8fb = \uf8f01 0 1\uf8fb * < 2 >\n< 12 >\nd4 = x1 \u222a x2\n1 1 1 | {z }\n|\n{z\n} |\n{z\n}\nu2\nd2\n\nD2\n\nwhere the \"matrix product\" is done after identifying (+, *) with (\u222a, \u2229), 0* < x > with \u2205 and 1* < x > with\n< x >. The generation of DX is then strictly equivalent to generate un and matrix Dn which can be easily\nobtained by the following recursive procedure:\n\u2022 start with Dc0 = [0 1]\u2032 corresponding to all Boolean functions with no input variable (n = 0).\n\u2022 build the Dc1 matrix from each row ri of Dc0 by adjoining it to any other row rj of Dc0 such that ri \u222arj = rj .\nThis is equivalent here to add either 0 or 1 in front (i.e. left side) of r1 \u2261 0 but only 1 in front of r2 \u2261 1.\nSince the tautology is not involved in hyper-powerset, then one has to remove the first column and the\nlast line of\n\uf8ee\n\uf8f9\n\u0014 \u0015\n0 0\n0\nDc1 = \uf8f00 1\uf8fb to obtain finally D1 =\n1\n1 1\n\n\u2022 build Dc2 from Dc1 by adjoining to each row ri of Dc1 , any row rj of Dc1 such that ri \u222a rj = rj and then\nremove the first column and the last line of Dc2 to get D2 as in (8).\n\u2022 build Dc3 from Dc2 by adjoining to each row ri of Dc2 any row rj of Dc2 such that ri \u222a rj = rj and then\n\n\f9\nremove the first column and the last line of Dc3\n\uf8ee\n0\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\nD3 = \uf8ef\n\uf8ef0\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\n\uf8ef0\n\uf8ef\n\uf8ef1\n\uf8ef\n\uf8ef1\n\uf8ef\n\uf8ef1\n\uf8ef\n\uf8f01\n1\n\nto get D3 given by\n\uf8f9\n0 0 0 0 0 0\n0 0 0 0 0 1\uf8fa\n\uf8fa\n0 0 0 0 1 1\uf8fa\n\uf8fa\n0 0 0 1 0 1\uf8fa\n\uf8fa\n0 0 0 1 1 1\uf8fa\n\uf8fa\n0 0 1 1 1 1\uf8fa\n\uf8fa\n0 1 0 0 0 1\uf8fa\n\uf8fa\n0 1 0 0 1 1\uf8fa\n\uf8fa\n0 1 0 1 0 1\uf8fa\n\uf8fa\n0 1 0 1 1 1\uf8fa\n\uf8fa\n0 1 1 1 1 1\uf8fa\n\uf8fa\n1 1 0 0 1 1\uf8fa\n\uf8fa\n1 1 0 1 1 1\uf8fa\n\uf8fa\n1 1 1 1 1 1\uf8fa\n\uf8fa\n0 1 0 1 0 1\uf8fa\n\uf8fa\n0 1 0 1 1 1\uf8fa\n\uf8fa\n0 1 1 1 1 1\uf8fa\n\uf8fa\n1 1 0 1 1 1\uf8fb\n1 1 1 1 1 1\n\n\u2022 Likewise, Dcn is built from Dcn\u22121 by adjoining to each row ri of Dcn\u22121 any row rj of Dcn\u22121 such that\nri \u222a rj = rj . Then Dn is obtained by removing the first column and the last line of Dcn .\nFor convenience, we provide here the source code in Matlab language to generate D\u0398 . This code includes the\nidentification of elements of D\u0398 corresponding to each monotone Boolean function according to the Smarandache's codification.\n%\u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\n% C o p yr ig h t ( c )\n2 0 0 3 J . De z e r t and F . Smarandache\n%\n% Purpose : G e ne r a t io n o f D\u02c6 Theta f o r t h e DSmT f o r\n% Theta={t h e t a 1 , . . , Theta n } . Due t o t h e huge\n% # o f e l e m e n t s o f D\u02c6 Theta o n l y c a s e s up t o n<7\n% a r e u s u a l l y t r a c t a b l e on computers .\n%\u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\u2217 \u2217\u2217 \u2217 \u2217\nn=input ( ' E n t e r c a r d i n a l i t y f o r Theta (0 <n <6) ? ' ) ;\n% G e ne r a t io n o f t h e Smarandache c o d i f i c a t i o n\n% Note : t h i s s h o u l d be implemented u s i n g\n% c h a r a c t e r s t r i n g s f o r n>9\nu n =[1];\nf o r nn =2:n\nu n =[ u n nn ( u n \u221710+nn\u2217 o n e s ( 1 , s i z e ( u n \u2217 1 0 , 2 ) ) ) ] ;\nend\n% G e ne r a t io n o f D n ( i s o t o n e b o o l e a n f u n c t i o n s )\nD n1 = [ 0 ; 1 ] ;\nf o r nn =1:n , D n = [ ] ;\nf o r i =1: s i z e ( D n1 , 1 ) , L i=D n1 ( i , : ) ;\nf o r j=i : s i z e ( D n1 , 1 )\nL j=D n1 ( j , : ) ; L i i n t e r L j=and ( Li , L j ) ;\nL i u n i o n L j=o r ( Li , L j ) ;\ni f ( ( L i i n t e r L j==L i )&( L i u n i o n L j==L j ) )\nD n=[D n ; L i L j ] ;\nend\nend\nend\nD n1=D n ;\nend\nDD=D n ;DD( : , 1 ) = [ ] ;DD( s i z e (DD, 1 ) , : ) = [ ] ; D n=DD;\n% Result d isp l a y\ndisp ( [ ' | Theta |=n= ' , num2str( n ) ] )\ndisp ( [ ' |D\u02c6 Theta |= ' , num2str( s i z e ( D n , 1 ) ) ] )\ndisp ( ' Elem . o f D\u02c6 Theta a r e o b t a i n e d by D n\u2217 u n ' )\ndisp ( [ ' wi t h u n =[ ' , num2str( u n ) , ' ] ' ' and ' ] )\nD n=D n\n\nMatlab2 source code for generating D\u0398\n2 Matlab\n\nis a trademark of The MathWorks, Inc.\n\n\f10\n\n5\n\nConclusion\n\nThe DSmT proposes a new solution to combine conflicting sources of information in some problems where\nthe frame of discernment \u0398 = {\u03b81 , . . . , \u03b8n } cannot be considered as an exhaustive and exclusive finite set of\nhypotheses. The DSmT deals with elements \u03b8i which have possibly (but not necessarily) continuous and/or\nrelative interpretation to the corpus of evidences (like the notions of smallness/tallness, beauty/ugliness, pleasure/pain, heat/coldness, even the notion of colors - due to the continuous spectrum of the light, . . .); the\ninterpretation of \u03b8i through the bba mechanism given by each source being, in general, built only from its own\nlimited knowledge/experience and senses. This DSm model can be considered as the opposite of the Shafer's\nmodel on which is based the DST. The DSmT, based on the notion of hyper-powerset D\u0398 over \u0398 and the\nrefutation of the third middle excluded, requires in theory to manipulate the basic beliefs assigned of every\nelement of D\u0398 . A powerful method and a source code to generate recursively all the elements of D\u0398 has been\npresented in this paper to help the reader to solve a wide class of fusion problems with the DSmT.\n\nReferences\n[1] Church R., Numerical analysis of certain free distributive structures, Duke Math. J., Vol. 6, no. 3, pp.\n732-734, 1940.\n[2] Church R., Enumeration by rank of the elements of the free distributive lattice with seven generators, Not.\nAmer. Math. Soc., Vol. 12, p. 724, 1965.\n[3] Comtet L., Sperner Systems, sec.7.2 in Advanced Combinatorics: The Art of Finite and Infinite Expansions,\nD. Reidel Publ. Co., pp. 271-273, 1974.\n[4] Corgne S., Hubert-Moy L., Dezert J., Mercier G., Land cover change prediction with a new theory of\nplausible and paradoxical reasoning, Proc. of Fusion 2003 Conf., Cairns, Australia, July 8-11, 2003.\n[5] Dedekind R. \u00dcber Zerlegungen von Zahlen durch ihre gr\u00f6ssten gemeinsammen Teiler, In Gesammelte\nWerke, Bd. 1. pp. 103-148, 1897.\n[6] Dezert J., Optimal Bayesian fusion of multiple unreliable classifiers, Proc. of Fusion 2001 Conf., Montr\u00e9al,\nCanada, Aug. 8-11, 2001.\n[7] Dezert J., Combination of paradoxical sources of information within the Neutrosophic framework, in [22]\npp. 22\u201346.\n[8] Dezert J., Foundations for a new theory of plausible and paradoxical reasoning, Inform. & Secur. J., Semerdjiev Ed., Bulg. Acad. of Sci., Vol. 9, 2002.\n[9] Dezert J., Fondations pour une nouvelle th\u00e9orie du raisonnement plausible et paradoxal, ONERA Tech.\nRep. RT 1/06769/DTIM, Jan. 2003.\n[10] Dezert J., Smarandache F., Daniel M., On the generalized pignistic transformation based on DSmT framework, (to be submitted), 2003.\n[11] Fidytek R., Mostowski A.W., Somla R., Szepietowski A., Algorithms counting monotone Boolean functions,\nInform. Proc. Letters, Vol. 79, pp. 203-209, 2001.\n[12] Hansel G., Sur le nombre des fonctions bool\u00e9ennes monotones de n variables, C.R. Acad. Sci. Paris, Serie\nA-B, p. 262, 1966.\n[13] Kisielewicz A., A solution of Dedekind's problem on the number of isotone Boolean functions, J. reine\nangew. math., Vol. 386, pp. 139-144, 1988.\n[14] Kleitman D., On Dedekind's problem: The number of Boolean functions, Proc. of the Amer. Math Society,\nVol. 21, pp. 677-682, 1969.\n[15] Kleitman D., Markowsky G., On Dedekind's problem: The number of isotone Boolean functions. II, Trans.\nof the Amer. Math. Soc., Vol. 213, 1976.\n\n\f11\n[16] Korshunov A., On the number of Boolean functions, Prob. kibernetiki, Vol. 38, pp. 5-108, 1981.\n[17] Lefevre E., Colot O., Vannoorenberghe P. \"Belief functions combination and conflict management\", Inform.\nFusion Journal, Elsevier, 2002.\n[18] Shafer G., A Mathematical Theory of Evidence, Princeton Univ. Press, Princeton, NJ, 1976.\n[19] Shapiro H.N. On the counting problem for monotone Boolean functions, Comm. on pure and applied math.,\nVol. XXIII, pp. 299-312, 1970.\n[20] Sloane N.J.A., The On-line Encyclopedia of Integer Sequences 2003, (Sequence No. A014466),\nhttp://www.research.att.com/~njas/sequences/.\n[21] Smarandache F., A Unifying Field in Logics: Neutrosophic Logic. Neutrosophy, Neutrosophic Set, Probability, and Statistics, (2nd Ed.), Amer. Research Press, Rehoboth, 2000.\n[22] Smarandache F. (Editor), Proceedings of the First International Conference on Neutrosophics, Univ. of\nNew Mexico, Gallup Campus, NM, USA, 1-3 Dec. 2001, Xiquan, Phoenix, 2002.\n[23] Smets Ph., Kennes R., The transferable belief model, Artif. Intel., 66(2), pp. 191-234, 1994.\n[24] Tchamova A., Semerdjiev T., Dezert J., Estimation of Target behavior tendencies using DSmT, Proc. of\nFusion 2003, Cairns, Australia, July 8-11, 2003.\n[25] Tombak M., Isotamm A., Tamme T., On logical method for counting Dedekind numbers, Lect. Notes on\nComp.Sci., 2138, p. 424-427, Springer-Verlag, 2001. www.cs.ut.ee/people/m_tombak/publ.html.\n[26] Triantaphyllou, E., Torvik V.I. , Inference of Monotone Boolean Functions, Encyclopedia of Optimization,\n(P.M. Pardalos and C. Floudas, Eds.), Kluwer Acad. Publi., Boston, Vol. 2, pp. 472-480., 2001.\n[27] Ward M., Note on the order of free distributive lattices , Bull. Amer. Math. Soc., Vol. 52, no. 5, p. 423,\n1946.\n[28] Weisstein E. W., CRC Concise Encyclopedia of Mathematics , CRC Press; 2nd edition, 3252 pages, Dec.\n2002. http://mathworld.wolfram.com/.\n[29] Wiedemann D., A computation of the eighth Dedekind number, Order, no. 8, pp. 5-6, 1991.\n\n\f"}