{"id": "http://arxiv.org/abs/0810.2273v1", "guidislink": true, "updated": "2008-10-13T17:21:06Z", "updated_parsed": [2008, 10, 13, 17, 21, 6, 0, 287, 0], "published": "2008-10-13T17:21:06Z", "published_parsed": [2008, 10, 13, 17, 21, 6, 0, 287, 0], "title": "JuNoLo - Julich Non Local code for parallel calculation of vdW-DF\n  nonlocal density functional theory", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0810.1593%2C0810.1878%2C0810.2237%2C0810.3827%2C0810.0733%2C0810.3289%2C0810.1417%2C0810.0525%2C0810.0221%2C0810.1632%2C0810.0301%2C0810.0251%2C0810.3958%2C0810.3155%2C0810.2273%2C0810.1831%2C0810.1587%2C0810.4908%2C0810.1443%2C0810.1579%2C0810.1328%2C0810.1351%2C0810.0588%2C0810.3007%2C0810.4341%2C0810.4258%2C0810.2148%2C0810.3046%2C0810.4985%2C0810.5018%2C0810.3362%2C0810.4653%2C0810.0948%2C0810.0006%2C0810.0154%2C0810.1211%2C0810.0172%2C0810.4107%2C0810.5459%2C0810.4002%2C0810.3495%2C0810.5684%2C0810.2564%2C0810.3093%2C0810.4464%2C0810.5290%2C0810.5614%2C0810.4220%2C0810.4269%2C0810.5197%2C0810.2044%2C0810.3465%2C0810.4784%2C0810.4105%2C0810.2260%2C0810.1373%2C0810.5424%2C0810.0063%2C0810.3166%2C0810.4249%2C0810.3282%2C0810.2547%2C0810.3453%2C0810.5184%2C0810.1304%2C0810.3625%2C0810.4807%2C0810.0841%2C0810.0777%2C0810.5041%2C0810.4698%2C0810.3299%2C0810.1925%2C0810.4208%2C0810.0392%2C0810.3877%2C0810.3676%2C0810.3739%2C0810.3767%2C0810.0211%2C0810.1422%2C0810.0376%2C0810.1634%2C0810.4110%2C0810.1611%2C0810.5267%2C0810.0146%2C0810.0877%2C0810.2212%2C0810.0896%2C0810.5719%2C0810.0303%2C0810.4068%2C0810.4791%2C0810.2693%2C0810.3100%2C0810.3444%2C0810.0358%2C0810.2156%2C0810.3052%2C0810.2826&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "JuNoLo - Julich Non Local code for parallel calculation of vdW-DF\n  nonlocal density functional theory"}, "summary": "Nowadays the state of the art Density Functional Theory (DFT) codes are based\non local (LDA) or semilocal (GGA) energy functionals. Recently the theory of a\ntruly nonlocal energy functional has been developed. It has been used mostly as\na post DFT calculation approach, i.e. by applying the functional on the charge\ndensity calculated using any standard DFT code, thus obtaining a new improved\nvalue for the total energy of the system. Nonlocal calculation is\ncomputationally quite expensive and scales as N^2 where N is the number of\npoints in which charge density is defined, and a massively parallel calculation\nis essential for a wider applicability of the new approach. In this article we\npresent a code which acomplishes this goal.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0810.1593%2C0810.1878%2C0810.2237%2C0810.3827%2C0810.0733%2C0810.3289%2C0810.1417%2C0810.0525%2C0810.0221%2C0810.1632%2C0810.0301%2C0810.0251%2C0810.3958%2C0810.3155%2C0810.2273%2C0810.1831%2C0810.1587%2C0810.4908%2C0810.1443%2C0810.1579%2C0810.1328%2C0810.1351%2C0810.0588%2C0810.3007%2C0810.4341%2C0810.4258%2C0810.2148%2C0810.3046%2C0810.4985%2C0810.5018%2C0810.3362%2C0810.4653%2C0810.0948%2C0810.0006%2C0810.0154%2C0810.1211%2C0810.0172%2C0810.4107%2C0810.5459%2C0810.4002%2C0810.3495%2C0810.5684%2C0810.2564%2C0810.3093%2C0810.4464%2C0810.5290%2C0810.5614%2C0810.4220%2C0810.4269%2C0810.5197%2C0810.2044%2C0810.3465%2C0810.4784%2C0810.4105%2C0810.2260%2C0810.1373%2C0810.5424%2C0810.0063%2C0810.3166%2C0810.4249%2C0810.3282%2C0810.2547%2C0810.3453%2C0810.5184%2C0810.1304%2C0810.3625%2C0810.4807%2C0810.0841%2C0810.0777%2C0810.5041%2C0810.4698%2C0810.3299%2C0810.1925%2C0810.4208%2C0810.0392%2C0810.3877%2C0810.3676%2C0810.3739%2C0810.3767%2C0810.0211%2C0810.1422%2C0810.0376%2C0810.1634%2C0810.4110%2C0810.1611%2C0810.5267%2C0810.0146%2C0810.0877%2C0810.2212%2C0810.0896%2C0810.5719%2C0810.0303%2C0810.4068%2C0810.4791%2C0810.2693%2C0810.3100%2C0810.3444%2C0810.0358%2C0810.2156%2C0810.3052%2C0810.2826&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Nowadays the state of the art Density Functional Theory (DFT) codes are based\non local (LDA) or semilocal (GGA) energy functionals. Recently the theory of a\ntruly nonlocal energy functional has been developed. It has been used mostly as\na post DFT calculation approach, i.e. by applying the functional on the charge\ndensity calculated using any standard DFT code, thus obtaining a new improved\nvalue for the total energy of the system. Nonlocal calculation is\ncomputationally quite expensive and scales as N^2 where N is the number of\npoints in which charge density is defined, and a massively parallel calculation\nis essential for a wider applicability of the new approach. In this article we\npresent a code which acomplishes this goal."}, "authors": ["P. Lazic", "N. Atodiresei", "M. Alaei", "V. Caciuc", "S. Blugel", "R. Brako"], "author_detail": {"name": "R. Brako"}, "author": "R. Brako", "links": [{"href": "http://arxiv.org/abs/0810.2273v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0810.2273v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cond-mat.mtrl-sci", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cond-mat.mtrl-sci", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "physics.comp-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0810.2273v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0810.2273v1", "arxiv_comment": null, "journal_reference": null, "doi": null, "fulltext": "arXiv:0810.2273v1 [cond-mat.mtrl-sci] 13 Oct 2008\n\nJuNoLo - J\u00fclich Non Local code for parallel\ncalculation of vdW-DF nonlocal density\nfunctional theory\nPredrag Lazi\u0107 a,1,2, Nicolae Atodiresei a,d, Mojtaba Alaei a,\nVasile Caciuc b, Stefan Bl\u00fcgel a, Radovan Brako c\na Institut\n\nf\u00fcr Festk\u00f6rperforschung (IFF) and Institute for Advanced Simulation\n(IAS), Forschungszentrum J\u00fclich, 52425 J\u00fclich, Germany\n\nb Physikalisches\n\nInstitut, Westf\u00e4lische Wilhelms Universit\u00e4t M\u00fcnster,\nWilhelm-Klemm-Str. 10, 48149 M\u00fcnster, Germany\n\nc Rudjer\nd The\n\nBo\u0161kovi\u0107 Institute, P.O. Box 180, 10002 Zagreb, Croatia\n\nInstitute of Scientific and Industrial Research, Osaka University, 567-0047\nOsaka, Japan\n\nAbstract\nNowadays the state of the art Density Functional Theory (DFT) codes are based on\nlocal (LDA) or semilocal (GGA) energy functionals. Recently the theory of a truly\nnonlocal energy functional has been developed. It has been used mostly as a post\nDFT calculation approach, i.e. by applying the functional on the charge density\ncalculated using any standard DFT code, thus obtaining a new improved value\nfor the total energy of the system. Nonlocal calculation is computationally quite\nexpensive and scales as N 2 where N is the number of points in which charge density\nis defined, and a massively parallel calculation is essential for a wider applicability\nof the new approach. In this article we present a code which acomplishes this goal.\nPACS: 71.15.-m; 71.15.Mb; 71.45.Gm\nKey words: Electronic structure; Density functional theory; Van der Waals\ninteraction; nonlocal correlation.\n\n1\n2\n\nCorresponding author\nOn leave of absence from the Rudjer Bo\u0161kovi\u0107 Institute, Zagreb, Croatia.\n\n\f1\n\nIntroduction\n\nIn recent years the codes based on the density functional theory (DFT) [9]\nhave been the main tool for exploring theoretically the properties of materials. Despite the large success of the approach, there is a class of systems\nfor which the present codes fail miserably. The main reason is that the energy\nfunctionals used are based on the local (LDA) or the semilocal approximations\n(GGA) which neglect the long range correlation contribution to the total energy. The systems in which DFT codes fail are mostly those in which the van\nder Waals energy makes a significant contribution to the total energy of the\nsystem. Recently Dion et al. [1] proposed the first fully nonlocal energy functional (vdW-DF) based on first principles which could be easilly implemented.\nOriginally, this seamless theory was tested as a DFT postprocessing tool that\nyields the new value for total energy. Justification for such approach came\nlater [3] when the theory was implemented selfconsistently into a DFT code,\nallowing Kohn-Sham eigenfunctions to change. The result of the self consistent\ncalculations made so far confirm that it suffices to use vdW-DF functional as a\npost DFT perturbation because the changes in K-S eigenfunctions are negligible. Consequently, one should accept the vdW-DF (even in the postprocessing\nimplementation) to be on an equal footing with the well established LDA\nand GGA functionals. The value of the first nonlocal functional has been well\nrecognized judging on the number of citations of the original paper [1], but\nuntil now only relatively small systems have been treated with it. We guess\nthat the main reasons for this are the high numerical cost of the calculations\nand nonexistence of a reliable and widely available parallel code. The main\ncalculation within the seamless theory can be nicely parallelized and with the\nparallel code that we present here one can treat any system that is solvable\nwith present DFT codes. Moreover, our code is applicable no matter which\nDFT code was used to obtain charge density. One can apply the code to the\nresults of DFT calculations done in a plane wave basis, some other basis, in\nreal space implementation, LCAO, or any other technique. This makes the\ncode interesting to a large community.\nA historical timeline of the JuNoLo code is rather brief:\n\u2022 2005-2007: Two of the authors (R. B. and P. L. at Rudjer Boskovic Institute in Zagreb, Croatia) started with implementation of the vdW-DF theory\nin Python. The code was serial but the calculation of the kernel was also implemented in parallel code in Fortran90. The code was succesfully tested on\nseveral examples, in particular on the Kr dimer (Fig. 1 in Ref. [7] ).\n2\n\n\f\u2022 2007-2008: Using the past experience the code was writen from scratch\nin Fortan90 at Forschungszentrum J\u00fclich in Germany, in a form suitable for\nmassively parallel calculations.\nThe remainder of the paper is organized as follows. In the next section we\ngive a basic theoretical background of the nonlocal correlation energy, i.e. of\nthe vdW-DF functional. In Section 3 we describe the structure of the JuNoLo\nprogram following the flow chart. In Section 4 we give brief installation instructions, followed by explanations on running the program in Section 5. In\nSection 5 we also address the speedup properties of our program. In Section\n6 we provide the results for two test calculations, the Krypton dimer and the\nXenon monolayer. Finally, in Section 7 we give conclusions. In the Appendix\nthe full listings of a sample input and output files are given.\n\n2\n\nTheoretical background\n\nFor the fine details of the seamless theory, i.e. vdW-DF functional, one should\nconsult Ref. [1] and references therein. Here we give only a brief overview\nnecessary to explain our code. The name seamless for the theory reflects its\nbehavior in extreme regimes of application. Suppose that we have two well\nseparated fragments of the system - the molecule (adsorbate) and the surface\n(substrate). At very large distances between the two only pure van der Waals\nforces are at work, which can be described accurately also by a semiempirical\ntheory. The seamless theory describes this situation correctly as well. As the\nmolecule approaches the surface the chemical bonding starts to take place,\nand when the molecule eventually bonds strongly to the surface the semilocal\n(GGA) energy functional describes the situation correctlyi (in vast majority of\ncases, at least). The application of seamless theory to this case will not spoil the\nresults. But the seamless theory is tailored to be valid also in between these two\nextreme situations, hence the name. Moreover, recently it has been realized\nthat the vdW-DF contribution can play a major role even in a covalently\nbonded system [4], making the area for the application of the JuNoLo code\nmuch larger.\nThe key ingredient for application of the seamless theory is the charge density\nn(r) that one obtains from a DFT calculation. The charge density must be\ngiven on a real space grid, with equidistant division in all three spatial dimensions. The axes need not to be orthogonal. The total nonlocal correlation\nenergy is given by the integral:\nEcNL\n\n1Z Z 3 3 \u2032\n=\nd rd r n(r)\u03c6(r, r)n(r\u2032).\n2\n3\n\n(1)\n\n\fThe kernel \u03c6(r, r\u2032) in (1) can be redefined to depend on two quantities, namely\nD \u2265 0 and 0 \u2264 \u03b4 < 1 as described in Ref. [1]. The kernel \u03c6 is calculated\naccording to formula (14) in Ref. [1], which requires a double integration. For\nlarge values of D an asymptotic expression for \u03c6 exists, given by formula (17)\nin Ref. [1]. The bulk of our program is concerned with the calculation of the\ndouble integral (1) which in numerical calculations reduces to a discrete double\nsum:\nEcNL =\n\n1 XX\nn(ri )\u03c6(ri , rj )n(rj ).\n2 i j\n\n(2)\n\nDFT\nFrom the values of the total energy obtained in a DFT calculation Etot\nand\nNL\nthe calculated Ec one gets the new value of the total energy:\nNL\nDFT\n\u2212 ExPBE \u2212 EcPBE + (ExPBE + EcLDA + EcNL ).\nEtot\n= Etot\n\n(3)\n\nHere the subscripts x and c denote various contributions to the exchange and\ncorrelation energy, respectively. Thus ExPBE and EcPBE are the GGA exchange\nand correlation contributions (both local and semilocal terms), assuming that\nthe PBE flavor of hte functional has been used, and EcLDA is the LDA correlation (i.e. the local term only). In this picture the correlation contribution has\nbeen subtracted from the total DFT energy so that the seamless nonlocal term\ncan be added. The JuNoLo code calculates all the aforementioned energy contributions from the provided charge density, which is particularly useful if the\nuser's DFT code does not write those contributions separately. In addition\nthe JuNoLo code also yields the value of the exchange energy according to\nrevPBE energy functional [14]. It has been claimed in literature that ExrevPBE\nmay be a better choice in the vdW-DF calculations, so this value may be used\nas the fourth term in (3) (which is the reason why ExrevPBE has been subtracted\nin the first place). If another functional is used in DFT calculation, such as\nPW91 [13] user should take care how to obtain needed values for formula (3).\nAlso a word of advice is in order here. In the case that a real physisorbed\nsystem is calculated, i.e. only van der Waals bonding is important with little\nor no chemical bonding, one should consider using a different implementation\nof vdW-DF theory. In such cases one has more or less well separated parts of\nthe system which enables localization of charge using tools such as Wannier\nfunctions and obtaining integral values at much lower costs, see for example\nRef. [5]. In such cases of fragmented systems one could consider application\nof much simpler theories alltogether, such as semiempirical van der Waals\nimplementation [8]. The JuNoLo code is intended for the most general usage\nof vdW-DF theory, especially in cases where chemical bonding is taking place\nso that one can not tell apart fragments of the bonded system. It has been\nrecently shown that vdW-DF theory can significantly influences the results\n4\n\n\ffor chemisorbed systems [4,6].\n\n3\n\nDescription of the code\n\nThe flow chart of the JuNoLo program is given in Fig. 1. For the fully detailed\ndescription of the program's internal structure and functioning the reader is\nreferred to the documentation provided in the JuNoLo distribution [20]. A\nSTART\n\nmaster loads parameters\n\nloading all density points\n\nmaster does FFT\n\nparallel calculation\nof gradient\n\ngradient from file\n\ncalculate DFT LDA/GGA energy\nloading and distribution of\nnon\u2212trimmed points\nnon\u2212local calculation for\nthe 0th cell\n\nnon\u2212local calculation for\nperiodically repeated cells\n\nmaster collects points\nand write output files\n\nEND\n\nFig. 1. Flowchart of the JuNoLo program.\n\nbrief description of steps from the flow chart is given here.\n\u2022 The master CPU loads parameters from the input file and distributes them\n5\n\n\fto all CPUs participating in the calculation. Whenever such communication is\nneeded in which all CPUs have to get data from the master, communication\nthrough the binary tree structure is used.\n\u2022 The master loads the density from the charge density file provided. Based on\nthe choice made in the input file the calculation of the gradient at all points\nis done either by means of FFT (using a FFTW library, done only on the master processor), real space finite differences approach implemented for parallel\ncomputing (perpendicular axes only), or the gradient values are loaded from\na text file (this file is generated every time the calculation is done with the\nFFT option selected).\n\u2022 Calculation of the LDA and GGA energy is performed, even though this\nis not necessary if user can obtain this energy values from the original DFT\ncode. However this is not always the case so therefore we calculate also these\ncontributions.\n\u2022 Due to a small significance of low density points to the vdW-DF energy we\nintroduce a cutoff density value below which the density is not considered in\nthe calculation. This does not reduce the accuracy of the energy value but can\nreduce the time needed for numerical calculations tremendously, in particular\nfor open systems with surfaces.\n\u2022 The points containing density larger than the cutoff value are distributed\namong CPUs in a balanced manner, i.e. in ideal situation each CPU would\nbe assigned the same number of points. In our implementation the largest\ndifference in number of points between CPUs is one.\n\u2022 The calculation of the nonlocal correlation, i.e. vdW-DF functional value,\nis performed within the single unit cell (0th cell - the one described in charge\ndensity file). During this process CPUs send their points to other CPUs (and\nreceive points from other CPUs of course).\n\u2022 If the problem is of periodical nature, like Xenon monolayer example given\nin a later section, the charge density from the 0th cell must be repeated in\nspace and the interaction with this repeated charge density is calculated. For\ndetails the user should consult the manual.\n\u2022 The master processor collects information from all CPUs and writes final\noutput files.\n\n4\n\nInstallation instructions\n\nJuNoLo is distributed as a gzipped tar file. The program manual and few examples are available on the web page [20]. On Linux platforms it should be\nunpacked by typing\n> tar -xvzf junolo.tar.gz\nwhich will create a directory containing the program source code. In the pro6\n\n\fgram source directory VDW SRC several makefiles are provided with the names\nMakefile.platform . The values of system dependent parameters defined in\nthe Makefile such as the name of the fortran90 compiler, optimization flags\nand location of the fftw library should be changed by user according to his\nparticular system. The compilation of the executable program is done by a\ncommand\n> make -f Makefile.platform\nwhich results in a vdw.exe executable file.\n\n5\n\nRunning the program\n\nOnce compiled JuNoLo can be run as a single processor program or as a multiprocessor program. The prerequisites to run the code is that the user has\nalready done a DFT calculation and obtained the charge density from it in\na format appropriate for the JuNoLo code. In the examples package we have\nprovided three Python scripts that prepare the needed charge density file from\nthe files generated by standard DFT codes: DACAPO [18,15], PWscf [19] and\nVASP [17,11,12]. In the program manual it is described how one can prepare\nthe charge density file on his own. The user also needs to provide the input\nfile in which calculation parameters are specified. For a detailed explanation\nof each parameter the user should consult the program manual. The input\nfile and the charge density file should be placed in the same directory. Usually\nthe kernel file is also needed in the same directory (except if the option in the\ninput file is set to calculate the kernel).\nOnce having all the mentioned files in the same directory the user should give\nthe command:\n./vdw.exe input\nfor a single processor run, or\nmpirun -np 16 ./vdw.exe input\nfor a run on 16 CPUs, for example.\nWe have performed the timing of the code on an Intel core Duo 2.13 GHz\nprocessor with 2 Gb of RAM and Linux OS. The calculation containing 130,000\npoints (after trimming) takes 36 minutes on a single CPU core. The running\ntime scales as N 2 with number of points.\n7\n\n\f5.1 Speedup\nThe strongest point of the JuNoLo code is its scalability. We have done\nspeedup measurements for the code on several problems of different size. The\nspeedup curves for two problems are shown in Fig. 2. Parallelization of the\n\nspeedup\n\n1000\n\n500\n\nproblem of 1,028,032 points (fastest time 1220 sec)\nproblem of 69,977 points (fastest time 26 sec)\n0\n\n0\n\n500\nn CPUs\n\n1000\n\nFig. 2. Speedup curves for the JuNoLo program. Red line represents the ideal\nspeedup, linear in the number of CPUs used. Shortest time is the duration of the\ncalculation when the largest number of CPUs is used, i.e. at the last point of the\ncorresponding curve.\n\ncode is done by distributing over processors the points containing the charge\ndensity. The more processors we have the less points per processor will be\nassigned. However, a critical number of points per processor exists after which\nthere is no sense in adding more processors to calculation due to a high communication/calculation time ratio per processor. For our BlueGene/P (850\nMHz CPUs) system the critical number of points was determined to be 1500.\nBefore reaching the critical number the speedup is practically linear. A very\ndetailed description of parallelization in the code is given in the manual. Besides the well behaved speedup, memory consumption per CPU drops exactly\nlinearly with the number of CPUs used. The test run of the code on the full\nBlueGene/P system of 65536 CPUs was successfully performed.\n\n6\n\nTwo examples\n\nIn this section we provide two example calculations. Both examples represent weakly bonded systems, i.e. systems bonded through van der Waals in8\n\n\fteractions rather than chemical bonds, and due to that are not suitable for\ntreatment with present DFT codes based on local (LDA) or semilocal (GGA)\nfunctionals. The reason that we present both is due to a clear difference between them, namely Krypton dimer is a nonperiodical system while Xenon\nlayer is a periodical (infinite) system. The JuNoLo code is capable of handling\nboth types of problems.\n\n6.1 Krypton dimer\n\nKrypton dimer is, due to the fact that Krypton is a noble gas, very weakly\nchemically bonded. The bonding between Krypton atoms is originating mostly\nfrom the van der Waals interaction i.e. from nonlocal correlation. Because\nof this fact the calculation of Krypton dimer by present DFT codes which\nuse local or semilocal functionals gives unphysical result. That makes this\nsystem a perfect candidate for a test of the JuNoLo code. Also, this system\nhas already been calculated by the authors of the vdW-DF theory [1] and\ntherefore can be used as a benchmark for the correctness of our code. Our\nDFT calculations for this example were done with DACAPO and VASP code.\nBoth are plane wave codes with a major distinction that VASP uses PAW\ntheory [16] while DACAPO does not. Calculation in VASP was done using the\nPBE functional selfconsistently, while DACAPO uses PW91 functional but we\nrecalculated the PBE energy values from the resulting densities. We also used\nselfconsistent charge densities obtained by both codes to recalculate revPBE\nenergies (nonselfconsistently, of course, but this procedure can be justified).\nIn DACAPO there is a possibility to use the valence charge only or to add the\ncore charge. We did both calculations and the results for the energy differences\nwere the same. In VASP we used only valence charge as input for our vdWDF calculation. The case of a Krypton dimer is intrinsically nonperiodic and\ntherefore less numerically expensive for calculation than Xenon monolayer.\nThe charge density of Krypton dimer is given in Fig. 3.\nCalculating the energy values for several different distances between atoms in\na dimer we obtained the binding energy curve shown in Fig. 4.\nAs can be seen from the Fig. 4 pure DFT results are far away from the experimental values for the interatomic distance and interaction energy. Results\nfor PBE+NL give a correct equilibrium interatomic distance but the binding\nis too strong. In revPBE+NL case the binding energy seems better but the\ninteratomic distance is somewhat too large. As the vdW-DF theory addresses\nonly correlation effects the question of the exchange energy remains. It has\nbeen strongly argued by the authors of the vdW-DF theory and others [1],[4]\nthat revPBE should be used to describe exchange energy due to spurious\nbinding that occurs in PBE functional. However, we believe that the best way\n9\n\n\fFig. 3. Isosurfaces of a Krypton dimer charge density. The outermost isosurface\ncorresponds to a very low charge density.\n\nKr-Kr\n\nInteraction energy (meV)\n\n40\n\nPBE DACAPO (NSC)\nPBE VASP\nPBE DACAPO + NL\nPBE VASP + NL\nrevPBE DACAPO + NL\nrevPBE VASP + NL\n\n20\n\n0\nPBE\nExperiment\n-20\n\nrevPBE + NL\n\nPBE + NL\n\n-40\n3\n\n3.5\n\n4\n\n4.5\n\n5\n\n5.5\n\nd (\u00c5)\n\nFig. 4. Kr dimer binding energy in DFT GGA and vdW-DF calculation. PBE,\nrevPBE+NL and PBE+NL labels are positioned in the vicinity of the corresponding\nminima obtained for this energy functional. NL means that nonlocal correlation\nenergy was added, i.e. PBE+NL means that it is a PBE DFT calculation on top of\nwhich vdW-DF theory has been applied. Agreement with previous results of Dion\net al. [1] is excellent.\n\nto deal with the exchange part of the energy may be to use exact exchange\ncalculation, either to get the correct number or at least to check which of the\n10\n\n\favailable exchange functionals is closest to the behavior of the exact exchange\nfor a given problem.\n\n6.2 Xenon monolayer\n\nThe case of self-standing Xenon monolayer in vacuum might seem a bit unrealistic because such structure does not exist and is probably impossible to\nbuild. However, growing a Xenon monolayer on Cu(111) surface can be done\nin such a way that Xenon makes a monolayer commensurate with the copper\nsurface with a coverage \u03b8 = 1/3. Due to very weak chemical bonding between\nXenon and copper surface one can deduce from the experiments the properties\nof a self-standing Xenon monolayer in this configuration. The case of a Xenon\nmonolayer is very different from the Kr dimer case due to the fact that the\nmonolayer is in principle infinite. We have used a minimal unit cell to make\nthis calculation using the DACAPO code. The charge density of a single unit\ncell and unit cell repeated several times in the monolayer plane is shown in\nFig. 5.\n\nFig. 5. Isosurfaces of charge density used for Xenon monolayer calculation. On the\nleft is a single unit cell, with the Xe atom situated in the middle of the cell. On the\nright is the density repeated several times. The outermost isosurface corresponds to\na very small charge density.\n\nCalculating the energy for different values of the layer lattice constants we\nobtain the energy minimum at around 4.4 \u00c5 in very good agreement with\nexperiment. From this calculation one can also analyze the curvature of the\nenergy around the minimum and obtain vibration frequencies which are comparable to the experimental ones. This is a nontrivial result and shows that\nLDA calculations, which sometimes by accident yield good position of the energy minimum, should be avoided in treating this kind of systems. The reason\nthat LDA calculations sometimes give good position of the energy minimum\n(or at least better than GGA functionals) in a predominantly van der Waals\nbonded systems is due to a simple approximations for correlation built in LDA\n11\n\n\ffunctional which leads to overbinding, sometimes accidentally yielding a correct position of the energy minimum. However, a more detailed analysis of\nsuch calculations shows that the curvature around energy minimum is way off\nthe experimental one, and for large distances between the adsorbate and the\nsubstrate LDA calculations do not give the typicall d\u22126 behavior of the tail of\nbinding energy dependence upon distance.\nHexagonal Xe Layer\nInteraction energy (meV)\n\nPBE\n\nrevPBE\n\n0\n\n-100\n\nLDA\n\nPBE+NL\n4\n\n5\n\n6\n\nd (\u00c5)\n\nFig. 6. Binding energy of a Xenon layer as a function of the layer lattice constant\nfor different energy functionals.\n\nThe calculation of the Xenon monolayer is numerically more challenging than\nthe calculation of a Krypton dimer due to the fact that one has to repeat the\ncharge density in space and calculate nonlocal interaction with even further\nrepeated densities until one reaches the convergence of energy differences.\n\n7\n\nConclusions\n\nWe start with a few comments on the state of development of our code. We\nhave approached the problem of calculating and storing the kernel \u03c6(r, r\u2032) in\nEq. (1) from the pragmatic standpoint. We have determined the number of\npoints and the limits of the integral, as well as the number of divisions of D\nand \u03b4 by checking that further refinement does not change the results. We have\nnot tried very hard to optimize the size and organization of the lookup table\nin order to save computational resources. Also, we are aware of the possibility\nto use the asymptotic form of the kernel for large D for significantly improving\nthe summation over repeated cells in the case of periodic problems. We expect\nto address these issues in future work.\nWe have developed a massively parallel code capable for performing vdWDF theory calculations on top of largest DFT calculations feasible today. The\n12\n\n\ffacts that present standard DFT codes can not cope successfully with nonlocal\ncorrelation effects and that our code can be used with densities obtained from\nalmost any existing DFT code makes our JuNoLo code a valuable tool for the\nwhole ab initio community.\n\n8\n\nAcknowledgements\n\nCalculations were performed on the JUMP and Blue/Gene supercomputers\nat the Forschungscentrum J\u00fclich, Germany. Two of us, P. L. and S. B., thank\nthe Deutsche Forschungsgemeinschaft (DFG) (Priority Programme \"Molecular Magnetism\") and Alexander von Humboldt foundation. N. A. acknowledges the support of Japan Society for the Promotion of Science. R. B. acknowledges the support of MSES of the Republic of Croatia through project\nNo. 098-0352828-2836.\n\n9\n\nAppendix A. sample files\n\nInput file for a calculation of Xenon monolayer example is given below.\nInput file:\nout Xe layer 3.5-dens3d # charge density file\n4\n# periodicity\n64\n# derivation order\n0\n# treating derivations\nfft derivs\n# derivations file\n1e-4\n# trimming value\n0\n# calculate kernel 1 or not 0\nkernel.txt\n# file with kernel parameters\n1\n# perx\n1\n# pery\n0\n# perz\nThe output file for the Xenon monolayer example is given below.\nOutput file:\nJob started on 2 processors.\nusing input file input Xe Layer 3.5\ninput density file\nout Xe layer 3.5-dens3d\nperiodicity 4\n13\n\n\fderivation order 64\nfile used for gradientfft derivs\ntrimming limit 1.0000000000000000E-004\nperx,pery,perz 1 1 0\ncalculating gradient by means of fft\nbufer size pp= 100\nbufer size= 200\nnphi0= 100\nr cutoff= 2000.000000000000 AA\nnx,ny,nz 28 28 160\nx0,y0,z0 0.00000000 0.00000000 0.00000000\nax,ay,az 7.01525312 4.05025828 0.00000000\nbx,by,bz 7.01525312 -4.05025828 0.00000000\ncx,cy,cz 0.00000000 0.00000000 49.64206163\ndx,dy,dz 0.25054475 -0.14465208 0.31026289\nb1x,b1y,b1z -0.44782314 -0.77565242 0.00000000\nb2x,b2y,b2z -0.44782314 0.77565242 0.00000000\nb3x,b3y,b3z 0.00000000 0.00000000 -0.12656979\ndV 0.02248898\ntotal number of points 125440\nnumber of points per processor 62720\nstarting=================\ny 2008 d 3 m 9\n12: 8:57:224\nrunning on 2 CPUs\nmaster is calculating gradient using fft\nto calculate fft*******************\nelapsed time 0 D: 0 H: 0 M: 1 S: 907 MS\nTOTAL NUMBER OF ELECTRONS IS 29.95081769527724\nmin and max density on master -1.6042787840499999E-006\n15.41315504760000\nto distribute density*******************\nelapsed time 0 D: 0 H: 0 M: 0 S: 277 MS\nto calculate local energy*******************\nelapsed time 0 D: 0 H: 0 M: 0 S: 104 MS\ntotal number of points after trimming 24617\nNUMBER OF ELECTRONS AFTER TRIMMING 29.94276421010878\nq0min,q0max 0.2468401900000000 8.096420200000001\nto load and distribute trimmed points*******************\nelapsed time 0 D: 0 H: 0 M: 1 S: 274 MS\nto load kernel*******************\nelapsed time 0 D: 0 H: 0 M: 0 S: 163 MS\nnphi,qmin cut,phi0 analitic 100 1.100000000000000\n2.500000000000000\npx,py,pz 3 3 3\n14\n\n\fto calculate phi0*******************\nelapsed time 0 D: 0 H: 2 M: 17 S: 19 MS\nto calculate 0th unit cell energy*******************\nelapsed time 0 D: 0 H: 0 M: 50 S: 517 MS\nto calculate energy*******************\nelapsed time 0 D: 0 H: 9 M: 46 S: 523 MS\n------ENERGIES (eV) ---------------Ex lda Ec lda Exc lda\nTOTAL LDA -783.10552037 -59.77262220 -842.87814257\nEx pbe Ec pbe Exc pbe\nTOTAL PBE -810.50311278 -42.20550892 -852.70862170\nX rev PBE -811.6072505786024\nE OFFDIAG nlc E DIAG nlc E TOTAL xc nlc\nTOTAL NL -3.47092761 9.63845229 6.16752468\nneeded number -Ec pbe+Ec lda+Enl= -11.39958860142493\n------END---------------------------to collect points*******************\nelapsed time 0 D: 0 H: 0 M: 2 S: 102 MS\nGAME OVER=================\ny 2008 d 3 m 9\n12:21:57: 71\n\nReferences\n[1] M. Dion, H. Rydberg, E. Schr\u00f6der, D. C. Langreth and B. I. Lundqvist, Phys.\nRev. Lett. 92, 246401, (2004); 95, 109902(E) (2005).\n[2] M. Dion Van der Waals forces in density functional theory PhD Thesis,\nhttp://www.physics.rutgers.edu/\u223cdionmax/thesis.ps , (2004).\n[3] T. Thonhauser, V. R. Cooper, S. Li, A. Puzder, P. Hyldgaard and D. C. Langreth,\nPhys. Rev. B 76, 125112, (2007).\n[4] K. Johnston, J. Kleis, B. I. Lundqvist and R. M. Nieminen, Phys. Rev. B 77,\n121404 (R), (2008).\n[5] P. L. Silvestrelli, Phys. Rev. Lett. 100, 053002, (2008).\n[6] P. Lazi\u0107, M. Alaei, N. Atodiresei, V. Caciuc, R. Brako and S. Bl\u00fcgel, in\npreparation.\n[7] P. Lazi\u0107, R. Brako and B. Gumhalter, J. Phys.: Condens. Matter 19 (2007)\n305004.\n[8] S. Grimme, J. Comput. Chem. 27, 1787 (2006).\n\n15\n\n\f[9] P. Hohenberg and W. Kohn, Phys. Rev. 136, B864 (1964).\n[10] J. P. Perdew, K. Burke, and M. Ernzerhof, Phys. Rev. Lett. 77, 3865 (1966).\n[11] G. Kresse and J. Hafner, Phys. Rev. B 47, 558 (1993).\n[12] G. Kresse and J. Furthm\u00fcller, Phys. Rev. B 54, 11169 (1996).\n[13] J. P. Perdew, J. A. Chevary, S. H. Vosko, K. A. Jackson, M. R. Pederson,\nD. J. Singh, C. Fiolhais, Phys. Rev. B 46, 66716687, (1992).\n[14] Y. Zhang and W. Yang, Phys. Rev. Lett. 80, 890 (1998).\n[15] B. Hammer, L. B. Hansen, and J. K. N\u00f8rskov, Phys. Rev. B 59, 7413 (1999).\n[16] P. E. Bl\u00f6chl, Phys. Rev. B 50, 17953\u201317979 (1994).\n[17] http://cms.mpi.univie.ac.at/vasp/\n[18] https://wiki.fysik.dtu.dk/dacapo\n[19] http://www.pwscf.org/\n[20] http://www.fz-juelich.de/iff/src/th1/JuNoLo/\n\n16\n\n\f"}