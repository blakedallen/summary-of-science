{"id": "http://arxiv.org/abs/0903.5221v1", "guidislink": true, "updated": "2009-03-30T13:26:43Z", "updated_parsed": [2009, 3, 30, 13, 26, 43, 0, 89, 0], "published": "2009-03-30T13:26:43Z", "published_parsed": [2009, 3, 30, 13, 26, 43, 0, 89, 0], "title": "Computing Cylindrical Algebraic Decomposition via Triangular\n  Decomposition", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0903.5215%2C0903.5384%2C0903.0098%2C0903.1282%2C0903.1736%2C0903.3597%2C0903.0463%2C0903.1283%2C0903.4279%2C0903.1499%2C0903.2375%2C0903.4889%2C0903.2570%2C0903.4554%2C0903.1818%2C0903.4800%2C0903.0341%2C0903.1346%2C0903.0945%2C0903.2637%2C0903.2446%2C0903.4674%2C0903.3879%2C0903.2700%2C0903.1211%2C0903.3960%2C0903.5221%2C0903.4420%2C0903.2087%2C0903.5172%2C0903.1597%2C0903.2509%2C0903.4364%2C0903.3315%2C0903.4571%2C0903.1890%2C0903.0780%2C0903.0908%2C0903.5533%2C0903.2219%2C0903.5361%2C0903.0497%2C0903.2626%2C0903.5021%2C0903.2962%2C0903.1472%2C0903.0153%2C0903.1390%2C0903.2466%2C0903.0925%2C0903.3041%2C0903.2214%2C0903.4138%2C0903.1250%2C0903.1564%2C0903.2859%2C0903.2280%2C0903.4351%2C0903.0353%2C0903.3054%2C0903.1999%2C0903.5171%2C0903.2732%2C0903.3291%2C0903.2754%2C0903.3007%2C0903.0820%2C0903.2202%2C0903.5071%2C0903.3757%2C0903.1532%2C0903.2167%2C0903.5191%2C0903.0879%2C0903.5142%2C0903.3180%2C0903.1326%2C0903.2670%2C0903.0050%2C0903.2256%2C0903.4019%2C0903.3387%2C0903.4407%2C0903.4950%2C0903.0663%2C0903.3816%2C0903.2336%2C0903.2365%2C0903.4110%2C0903.3741%2C0903.4385%2C0903.1850%2C0903.3481%2C0903.1360%2C0903.1273%2C0903.2504%2C0903.3865%2C0903.2965%2C0903.0979%2C0903.1766%2C0903.4598&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Computing Cylindrical Algebraic Decomposition via Triangular\n  Decomposition"}, "summary": "Cylindrical algebraic decomposition is one of the most important tools for\ncomputing with semi-algebraic sets, while triangular decomposition is among the\nmost important approaches for manipulating constructible sets. In this paper,\nfor an arbitrary finite set $F \\subset {\\R}[y_1, ..., y_n]$ we apply\ncomprehensive triangular decomposition in order to obtain an $F$-invariant\ncylindrical decomposition of the $n$-dimensional complex space, from which we\nextract an $F$-invariant cylindrical algebraic decomposition of the\n$n$-dimensional real space. We report on an implementation of this new approach\nfor constructing cylindrical algebraic decompositions.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0903.5215%2C0903.5384%2C0903.0098%2C0903.1282%2C0903.1736%2C0903.3597%2C0903.0463%2C0903.1283%2C0903.4279%2C0903.1499%2C0903.2375%2C0903.4889%2C0903.2570%2C0903.4554%2C0903.1818%2C0903.4800%2C0903.0341%2C0903.1346%2C0903.0945%2C0903.2637%2C0903.2446%2C0903.4674%2C0903.3879%2C0903.2700%2C0903.1211%2C0903.3960%2C0903.5221%2C0903.4420%2C0903.2087%2C0903.5172%2C0903.1597%2C0903.2509%2C0903.4364%2C0903.3315%2C0903.4571%2C0903.1890%2C0903.0780%2C0903.0908%2C0903.5533%2C0903.2219%2C0903.5361%2C0903.0497%2C0903.2626%2C0903.5021%2C0903.2962%2C0903.1472%2C0903.0153%2C0903.1390%2C0903.2466%2C0903.0925%2C0903.3041%2C0903.2214%2C0903.4138%2C0903.1250%2C0903.1564%2C0903.2859%2C0903.2280%2C0903.4351%2C0903.0353%2C0903.3054%2C0903.1999%2C0903.5171%2C0903.2732%2C0903.3291%2C0903.2754%2C0903.3007%2C0903.0820%2C0903.2202%2C0903.5071%2C0903.3757%2C0903.1532%2C0903.2167%2C0903.5191%2C0903.0879%2C0903.5142%2C0903.3180%2C0903.1326%2C0903.2670%2C0903.0050%2C0903.2256%2C0903.4019%2C0903.3387%2C0903.4407%2C0903.4950%2C0903.0663%2C0903.3816%2C0903.2336%2C0903.2365%2C0903.4110%2C0903.3741%2C0903.4385%2C0903.1850%2C0903.3481%2C0903.1360%2C0903.1273%2C0903.2504%2C0903.3865%2C0903.2965%2C0903.0979%2C0903.1766%2C0903.4598&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Cylindrical algebraic decomposition is one of the most important tools for\ncomputing with semi-algebraic sets, while triangular decomposition is among the\nmost important approaches for manipulating constructible sets. In this paper,\nfor an arbitrary finite set $F \\subset {\\R}[y_1, ..., y_n]$ we apply\ncomprehensive triangular decomposition in order to obtain an $F$-invariant\ncylindrical decomposition of the $n$-dimensional complex space, from which we\nextract an $F$-invariant cylindrical algebraic decomposition of the\n$n$-dimensional real space. We report on an implementation of this new approach\nfor constructing cylindrical algebraic decompositions."}, "authors": ["Changbo Chen", "Marc Moreno Maza", "Bican Xia", "Lu Yang"], "author_detail": {"name": "Lu Yang"}, "author": "Lu Yang", "arxiv_comment": "10 pages", "links": [{"href": "http://arxiv.org/abs/0903.5221v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0903.5221v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.SC", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.SC", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0903.5221v1", "affiliation": "Shanghai Key Laboratory of Trustworthy Computing, East China Normal University, Shanghai, China", "arxiv_url": "http://arxiv.org/abs/0903.5221v1", "journal_reference": null, "doi": null, "fulltext": "arXiv:0903.5221v1 [cs.SC] 30 Mar 2009\n\nComputing Cylindrical Algebraic Decomposition via\nTriangular Decomposition\nChangbo Chen\n\nMarc Moreno Maza\n\nORCCA, University of Western Ontario (UWO)\nLondon, Ontario, Canada\n\nORCCA, University of Western Ontario (UWO)\nLondon, Ontario, Canada\n\ncchen252@csd.uwo.ca\n\nmoreno@csd.uwo.ca\n\nBican Xia\n\nLu Yang\n\nSchool of Mathematical Sciences\nPeking University, Beijing, China\n\nShanghai Key Laboratory of Trustworthy\nComputing\nEast China Normal University, Shanghai, China\n\nxbc@math.pku.edu.cn\n\nlyang@sei.ecnu.edu.cn\n\nABSTRACT\n\nFor a finite set Fn \u2282 R[y1 , . . . , yn ] the CAD algorithm [11]\ndecomposes the real n-dimensional space into disjoint cells\nC1 , . . . , Ce together with one sample point Si \u2208 Ci , for all\n1 \u2264 i \u2264 e, such that the sign of each f \u2208 Fn does not change\nin Ci and can be determined at Si . Besides, this decomposition is cylindrical in the following sense: For all 1 \u2264 j < n\nthe projections on the first j coordinates (y1 , . . . , yj ) of any\ntwo cells are either disjoint or equal. We will make use of\nthis notion of \"cylindrical\" decomposition in Cn .\n\nCylindrical algebraic decomposition is one of the most important tools for computing with semi-algebraic sets, while\ntriangular decomposition is among the most important approaches for manipulating constructible sets. In this paper,\nfor an arbitrary finite set F \u2282 R[y1 , . . . , yn ] we apply comprehensive triangular decomposition in order to obtain an\nF -invariant cylindrical decomposition of the n-dimensional\ncomplex space, from which we extract an F -invariant cylindrical algebraic decomposition of the n-dimensional real space. We report on an implementation of this new approach\nfor constructing cylindrical algebraic decompositions.\n\n1.\n\nThe algorithm of Collins is based on a projection and lifting procedure which computes from Fn a finite set Fn\u22121 \u2282\nR[y1 , . . . , yn\u22121 ] such that an Fn -invariant CAD of Rn can be\nconstructed from an Fn\u22121 -invariant CAD of Rn\u22121 . This construction and the base case n = 1 rely on real root isolation\nof univariate polynomials.\n\nINTRODUCTION\n\nCylindrical algebraic decomposition (CAD) is a fundamental\nand powerful tool in real algebraic geometry. The original algorithm introduced by Collins in 1973 [11] has been followed\nby many substantial ameliorations, including adjacency and\nclustering techniques [2], improved projection methods [25,\n18, 27, 6], partially built CADs [13, 26, 29], improved stack\nconstruction [14] and efficient projection orders [16].\n\nIn this paper, we propose a different approach for computing CAD, which proceeds by successive transformation of an\ninitial decomposition of the complex n-dimensional space.\nOur algorithm consists of three main steps:\nInitial Partition: we decompose Cn into disjoint constructible\nsets C1 , . . . , Ce such that for all 1 \u2264 i \u2264 e, for each\nf \u2208 Fn either f is identically zero in Ci or f vanishes\nat no points of Ci .\n\nThe main application of CAD is quantifier elimination (QE)\nfor which other approaches are also available. Some of them\nhave more attractive complexity results [4] than CAD. However, as pointed out by Brown and Davenport in [8], \"there\nis the issue of whether the asymptotic cross-over points between CAD and those other QE algorithms actually occur in\nthe range of problems that are even close to accessible with\ncurrent machines\". In addition, these authors observe that\nCAD can help solving certain QE problems [7, 19] that other\nQE algorithms can not.\n\nMake Cylindrical: we transform the initial partition and obtain another decomposition of Cn into disjoint constructible sets such that this second decomposition is\ncylindrical in the above sense.\nMake Semi-Algebraic: from the previous decomposition we\nproduce an Fn -invariant CAD of Rn .\nOur first motivation is to understand the relation and possible interaction between cylindrical algebraic decompositions\nand triangular decompositions of polynomial systems. This\nlatter kind of decompositions have been intensively studied\nsince the work of Wu [32]. The papers [3, 5, 20] and book [30]\ncontain surveys of the subject. The primary goal of triangular decompositions is to provide unmixed decompositions\n1\n\n\fk[y]. The polynomial is regular modulo hF i if it is neither\nzero, nor a zerodivisor modulo hF i. Denote by V (F ) the\nzero set (or algebraic variety) of F in Kn .\n\nof algebraic varieties. However, the third and fourth authors have initiated the use of triangular decompositions in\nreal algebraic geometry [35]. Moreover, real root isolation\nof zero-dimensional polynomial systems can be achieved via\ntriangular decompositions [33, 34, 10].\n\nLet T \u2282 k[y] be a triangular set, that is a set of non-constant\npolynomials with pairwise distinct main variables. We denote by mvar(T ) the set of main variables of polynomials in\nT . A variable in y is called algebraic w.r.t. T if it belongs\nto mvar(T ), otherwise it is called free w.r.t. T . For a variable v \u2208 y, we denote by T<v the subsets of T consisting\nof the polynomials t with main variable less than v. Let hT\nbe the product of the initials of polynomials in T . We denote by sat(T ) the saturated ideal of T : if T is empty then\nsat(T ) is defined as the trivial ideal h0i, otherwise it is the\nideal hT i : h\u221e\nT . The quasi-component W (T ) of T is defined\nas V (T ) \\ V (hT ). Let h \u2208 k[y] be a polynomial. Define\nZ(T, h) := W (T ) \\ V (h).\n\nA second motivation of this work is to investigate the possibility of improving the practical efficiency of CAD implementation by means of modular methods and fast polynomial\narithmetic. Such techniques have been successfully introduced into triangular decomposition methods [15, 24, 22].\nEach of the three main steps of the algorithm proposed in\nthis paper relies on existing sub-algorithms for triangular\ndecompositions taken from [28, 9, 34] and for which efficient\nimplementation in the RegularChains library [21] is work in\nprogress based on the highly optimized low-level routines of\nthe Modpn library [23].\n\nLet h \u2208 k[y] be a polynomial. The iterated resultant of\nh w.r.t. T , denoted by ires(h, T ), is defined as follows:\n(1) if h \u2208 k or all variables in h are free w.r.t. T , then\nires(h, T ) = h; (2) otherwise, if v is the largest variable of\nh which is algebraic w.r.t. T , then ires(h, T ) = ires(r, T<v )\nwhere r is the resultant of h and the polynomial in T whose\nmain variable is v. Iterated resultants have the following important property: the polynomial h is regular modulo sat(T )\nif and only if we have ires(h, T ) 6= 0.\n\nOur third motivation is to extend to real algebraic geometry the concept of Comprehensive Triangular Decomposition\n(CTD) introduced in [9]. The relation between CAD and\nparametric polynomial system solving is natural as pointed\nin [17] and the presentation therein of Weispfenning's approach [31] for QE based on comprehensive Gr\u00f6bner bases.\nThis suggests that the algorithm proposed in this paper\ncould support a similar QE method.\nThis paper is organized as follows. A summary of the theory\nof triangular decomposition is given in Section 2. Section 3\nand Section 4 are dedicated to the first two main steps of\nour algorithm whereas Sections 5 presents the last one. In\nSection 6 we report on a preliminary experimentation of our\nnew algorithm. No modular methods or fast polynomial\narithmetic are being used yet and our code is just highlevel Maple interpreted code. However our code can already process well-known examples from the literature. We\nalso analyze the performances of the different main steps\nand subroutines of our algorithm and implementation. This\nsuggests that there is a large potential for improvement by\nmeans of modular methods, for instance for the computation\nof GCDs, resultants (and the discriminants) of polynomials\nmodulo regular chains.\n\nWe say that the triangular set T is a regular chain if either\nT = \u2205 or ires(hT , T ) 6= 0. The pair [T, h] is called a regular\nsystem if T is a regular chain, and ires(h, T ) 6= 0. Denote\nby sep(T ) the product of all sep(p), where p \u2208 T . Then\nT is said to be squarefree if ires(sep(T ), T ) 6= 0. A regular\nsystem rs = [T, h] is said to be squarefree if T is squarefree.\nFor a regular system rs = [T, h], the rank of rs, denoted\nby rank(rs), is defined as the set of rank(p) for all p \u2208 T .\nGiven another regular system rs\u2032 = [T \u2032 , h\u2032 ] with rank(rs) 6=\nrank(rs\u2032 ), we say rank(rs) is less than rank(rs\u2032 ) whenever\nthe minimal element of the symmetric difference (rank(rs) \\\nrank(rs\u2032 )) \u222a (rank(rs\u2032 ) \\ rank(rs)) belongs to rank(rs).\nA constructible set of Kn is any finite union\n\n2.\n\nTRIANGULAR DECOMPOSITION\n\n(A1 \\ B1 ) \u222a * * * \u222a (Ae \\ Be )\n\nThroughout this paper let k be a field of characteristic zero\nand K be the algebraic closure of k. Let k[y] := k[y1 , . . . , yn ]\nbe the polynomial ring over the field k in variables y1 <\n* * * < yn . Let p \u2208 k[y] be a non-constant polynomial. The\ngreatest variable appearing in p is called the main variable,\ndenoted by mvar(p). The integer k such that yk = mvar(p)\nis called the level of p. The separant sep(p) of p w.r.t\nmvar(p), is \u2202p/\u2202mvar(p). The leading coefficient and the\nleading monomial of p regarded as a univariate polynomial\nin mvar(p) are called the initial and the rank of p; they\nare denoted by init(p) and rank(p) respectively. Let q be\nanother polynomial of k[y], we say rank(p) is less than\nrank(q) if mvar(p) < mvar(q), or mdeg(p) < mdeg(q) when\nmvar(p) = mvar(q).\n\nwhere A1 , . . . , Ae , B1 , . . . , Be are algebraic varieties in Kn .\nFor any constructible set cs of Kn there exist finitely many\nregular systems rs1 , . . . , rsm of k[y] such that cs = Z(rs1 ) \u222a\n* * * \u222a Z(rsm ).\nExample 1. Consider the polynomials in k[y1 < y2 < y3 ]\np1 = y22 + y1 \u2212 1 and p2 = y1 y32 \u2212 1.\nWe illustrate the previous main notions as follows.\n\np1\np2\n\nLet F \u2282 k[y] be a finite polynomial set. Denote by hF i\nthe ideal it generates in k[y]. Let h be a polynomial in\nk[y], the saturated ideal hF i : h\u221e of hF i w.r.t h, is the set\n{q \u2208 k[y] | \u2203m \u2208 N s.t. hm q \u2208 hF i}, which is an ideal in\n\nmvar\ny2\ny3\n\nsep\n2y2\n2y1 y3\n\ninit\n1\ny1\n\nrank\ny22\ny1 y32\n\nThe initial y1 of p2 is regular modulo hp1 i. The set T =\n{p1 , p2 } is a triangular set. The iterated resultant of y1 and\n2\n\n\fT is y1 , so T is a regular chain. The pair [T, y2 ] is a regular\nsystem, since ires(y2 , T ) = y1 \u2212 1. The quasi-component of\nT is the set of points in K3 such that p1 = 0, p2 = 0 and\ny1 6= 0, which is a constructible set.\n\nDefinition 1. Let C be a constructible set of Kn\u22121 . A\nfinite set of level n polynomials P \u2282 k[u, yn ] separates above\nC if for each \u03b1 \u2208 C: (1) the initial of any p \u2208 P does not\nvanish at \u03b1; (2) the polynomials p(\u03b1, yn ) \u2208 K[yn ], p \u2208 P,\nare squarefree and coprime.\n\nWe review three important operations Intersect, MakePairwiseDisjoint (MPD) and SymmetricallyMakePairwiseDisjoint (SMPD) proposed in [9]. Let rs\u2217 = [T\u2217 , h\u2217 ] be a\nsquarefree regular system of k[y] and let p be a polynomial\nof k[y] such that p is regular w.r.t sat(T\u2217 ). The operation\nIntersect(p, rs\u2217 ) computes a family of squarefree regular systems R of k[y] such that\n\nLet C be a finite collection of pairwise disjoint constructible\nsets of Kn\u22121 , and, for each C \u2208 C, let PC \u2282 k[u, yn ] be\na finite set of level n polynomials. Let rs\u2217 = [T\u2217 , h\u2217 ] be a\nregular system of k[u, yn ], where n \u2265 2 and yn is algebraic\nw.r.t T . We say that the family {(C, PC ) | C \u2208 C} separates\nZ(rs\u2217 ) if the following conditions hold:\n\nV (p) \u2229 Z(rs\u2217 ) = \u222ars\u2208R Z(rs),\n\n(1) C is a partition of \u03c0u (Z(rs\u2217 )),\n\nand the rank of each rs \u2208 R is less than that of rs\u2217 .\n\n(2) for each C \u2208 C, PC separates above C,\nS\nS\n(3) Z(rs\u2217 ) = C\u2208C p\u2208PC V (p) \u2229 \u03c0u\u22121 (C).\n\nFor regular systems [T1 , h1 ], . . . , [Te , he ] in k[y], the function\nMPD returns regular systems [S1 , g1 ], . . . , [Sf , gf ] in k[y] s.t.\n\nMore generally, let cs be a constructible set of Kn such that\nthere exist regular systems rs1 , . . . , rsr of k[u, yn ] whose\nzero sets form a partition of cs and such that yn is algebraic\nw.r.t. the regular chain of rsi , for all 1 \u2264 i \u2264 r. Then, we\nsay that the family {(C, PC ) | C \u2208 C} separates cs if C is a\npartition of \u03c0u (cs) and if for all 1 \u2264 i \u2264 r there exists a nonempty subset Ci of C and for each C \u2208 Ci a non-empty subset\nPC,i \u2286 PC such that {(C, PS\nC \u2208 Ci } separates Z(rsi ).\nC,i ) | S\nIn this case, we have: cs = C\u2208C p\u2208PC V (p) \u2229 \u03c0u\u22121 (C).\n\nZ(T1 , h1 ) \u222a * * * \u222a Z(Te , he ) = Z(S1 , g1 ) \u222a * * * \u222a Z(Sf , gf ),\nand for all 1 \u2264 i < j \u2264 f we have Z(Si , gi ) \u2229 Z(Sj , gj ) = \u2205.\nGiven a family C = {C1 , . . . , Cr } of constructible sets of\nKn , the function SMPD returns a family D = {D1 , . . . , Ds }\nof constructible sets of Kn such that Di \u2229 Dj = \u2205 for all\n1 \u2264 i < j \u2264 n, each Dj is a subset of some Ci , and each Ci\ncan be written as a finite union of some of the Dj 's. Such a\nD is called an intersection-free basis of C.\n\n3.\n\nZERO SEPARATION\n\nExample 2. Consider the polynomials in k[x > b > a]\n\nIn this section, we assume n \u2265 2 and we regard the ordered\nvariables y1 < * * * < yn\u22121 as parameters, denoted by u. Let\n\u03c0u be the projection function which sends a point (\u016b, y \u0304n )\nof Kn to the point \u016b of the parameter space Kn\u22121 . Let\n\u016b \u2208 Kn\u22121 . We write \u03c0u\u22121 (\u016b) for the set of all points (\u016b, y \u0304n )\nin Kn such that \u03c0u (\u016b, y \u0304n ) = \u016b.\n\np1 = ax2 \u2212 b and p2 = ax2 + 2x + b,\nand the constructible set C = {(a, b) \u2208 K2 | ab(ab \u2212 1) 6=\n0}. For any point (a, b) of C, the two polynomials p1 (a, b)\nand p2 (a, b) of K[x] are squarefree and coprime. So the\npolynomial set {p1 , p2 } separates above C.\n\nLet p \u2208 k[u, yn ] be a polynomial of level n, that is, with main\nvariable yn . In broad terms, the goal of this section is to decompose the parameter space Kn\u22121 into finitely many cells\nsuch that above each cell the \"root structure\" of p (number of roots, their multiplicity, . . . ) does not change. In\nfact, we make this problem more general by allowing algebraic constraints on the parameter u. After some notations,\nwe define in Definition 1 the object to be computed by the\nalgorithm devised in this section. It can be seen as a specialization of the comprehensive triangular decomposition\n(CTD) to the case where the input system is a regular system and all variables but one are regarded as parameters.\nThis algorithm is stated in Section 3.1 after two lemmas.\n\nConsider the regular system rs\u2217 = [{p1 }, 1] and the constructible sets\nC1 = {(a, b) \u2208 K2 | ab 6= 0}\nC2 = {(a, b) \u2208 K2 | a 6= 0 & b = 0}\nNote that the zero set of rs\u2217 is {p1 = 0 & a 6= 0}. So the\nfamily { (C1 , {p1 }), (C2 , {ax}) } separates Z(rs\u2217 ).\nGiven two regular systems\nrs1 = [{p1 }, b] and rs2 = [{p2 , b}, 1].\nConsider the constructible set\ncs\n\nNotations. Let rs = [T, h] be a regular system of k[u, yn ].\n\n=\n=\n\nZ(rs1 ) \u222a Z(rs2 )\n(V (p1 ) \\ V (ab)) \u222a (V (p2 , b) \\ V (a)) .\n\nThe family { (C1 , {p1 }), (C2 , {p2 }) } separates cs.\n\nIf yn does not appear in rs, we denote by Zu (rs) the zero set\nof rs in Kn\u22121 . If yn does not appear in T , we write Wu (T )\nfor the quasi-component of T in Kn\u22121 . If mvar(h) = yn\nholds, we denote by coeff(h) be the set of coefficients of h\nwhen h is regarded as a polynomial in yn with coefficients\nin k[u] and by Vu (coeff(h)) the variety of coeff(h) in Kn\u22121 .\nFinally, if yn is algebraic in T , letting tn be the polynomial\nin T with main variable yn , we write Tu = T \\ {tn } and\nrsu = [Tu , r], where r = res(h * sep(tn ), tn ) is the resultant\nof h * sep(tn ) and tn w.r.t yn .\n\nLemma 1. Let p \u2208 k[u, yn ] be a level n polynomial. Let\nr = res(sep(p), p) be the resultant of sep(p) and p w.r.t yn .\nThen, the polynomial p(\u016b) of K[yn ] is squarefree and init(p)\ndoes not vanish at \u016b \u2208 Kn\u22121 , if and only if, r(\u016b) 6= 0 holds.\nObserve that init(p) is a factor of r. So the conclusion follows\ndirectly from the specialization property of subresultants.\n3\n\n\fR\\{rs}. Using the above notations, let R\u2032 be as in Property\n(3) of Lemma 2. Set P = P \u222a {(rsu , tn )}, set R = R \u222a R\u2032\nand repeat Step (2).\n\nLemma 2. We have the following properties:\n(1) If yn does not appear in rs, then \u03c0u (Z(rs)) = Zu (rs).\n\nComment. Observe that Step (2) will finally terminate since\n\n(2) If yn does not appear in T and if mvar(h) = yn holds,\nthen we have \u03c0u (Z(rs)) = Wu (T ) \\ Vu (coeff(h)).\n\neach newly added regular system into R has a rank less than\nthat of the one removed from R. When Step (2) terminates,\nwe obtain a family P of pairs such that\n[\nV (tn ) \u2229 \u03c0u\u22121 (Zu (rsu )),\nZ(rs\u2217 ) =\n\n(3) If yn is algebraic w.r.t T and if the regular system rs\nis squarefree, then rsu is a squarefree regular system\nof k[u]; moreover there exists a family R\u2032 of squarefree\nregular systems of k[u, yn ] such that:\n\n(rsu ,tn )\u2208P\n\nand the union is disjoint. Next, observe that for each pair\n(rsu , tn ) \u2208 P, the polynomial init(tn ) does not vanish at\nany point of Zu (rsu ), by virtue of Lemma 1. Therefore, the\nunion of all Zu (rsu ) is equal to \u03c0u (Z(rs\u2217 )).\n\n(a) the rank of each rs\u2032 \u2208 R\u2032 is less than that of rs,\n(b) for each [T \u2032 , h\u2032 ] \u2208 R\u2032 , yn is algebraic w.r.t T \u2032 ,\n(b) the zero sets Z(rs\u2032 ), rs\u2032 \u2208 R\u2032 and the zero set\nV (tn ) \u2229 Z(rsu ) are pairwise disjoint, and we have\nS\n(d) Z(rs) = V (tn ) \u2229 Z(rsu ) \u222a rs\u2032 \u2208R\u2032 Z(rs\u2032 ).\n\nStep (3). By means of the operation SMPD we compute an\n\nintersection-free basis of all Zu (rsu ). Hence we obtain a partition C of \u03c0u (Z(rs\u2217 )). Then, for each C \u2208 C we define PC\nas the set of the polynomials tn such that there exists a regular system rsu satisfying (rsu , tn ) \u2208 P and C \u2286 Zu (rsu ).\nClearly {(C, PC ) | C \u2208 C} is a valid output.\n\nProof. Property (1) is clear and proving (2) is routine.\nWe prove (3). Since rs is squarefree, using the above notations, we have\nires(r, T ) = ires(r, Tu ) = ires(h * sep(tn ), T ) 6= 0.\n\nFinally, we generalize this algorithm in order to apply it to\na constructible set represented by regular systems.\n\nThis implies that r is regular w.r.t sat(T ) and that rsu =\n[Tu , r] is a squarefree regular system of k[u]. Observe now\nthat the zero set of rs decomposes in two disjoint parts:\n\nCalling sequence. SeparateZeros({rs1 , . . . , rsr }, u, n)\n\nZ(rs) = (Z(rs) \\ V (r)) \u222a (Z(rs) \u2229 V (r)) .\n\nRegular systems rs1 , . . . , rsr of k[u, yn ], n \u2265 2,\nwhose zero sets are pairwise disjoint and such that yn is\nalgebraic w.r.t. the regular chain of rsi , for all 1 \u2264 i \u2264 r;\nlet cs be the constructible set represented by rs1 , . . . , rsr .\n\nInput.\n\nFor the first part, we have\nZ(rs) \\ V (r) = V (tn ) \u2229 Z(rsu ).\nFor the second part, since r is regular w.r.t sat(T ), by calling operation Intersect, we obtain a family R of squarefree\nregular systems of k[u, yn ] such that\n[\nZ(rs\u2032 ),\nZ(rs) \u2229 V (r) =\n\nOutput. A finite family {(C, PC ) | C \u2208 C}, where C is a\n\nwhere the rank of each rs\u2032 \u2208 R is less than that of rs.\nFinally, applying the operation MPD to R we obtain a family\nR\u2032 satisfying the properties (a), (b), (c) and (d).\n\nStep (1). For each 1 \u2264 i \u2264 r, call SeparateZeros(rsi , u, n)\n\n3.1 The Algorithm SeparateZeros\n\nStep (2). By means of the operation SMPD, compute an\nintersection-free basis D of the union of the Ci , for 1 \u2264 i \u2264 r.\n\nfinite collection of constructible sets of Kn\u22121 , and for each\nC \u2208 C, PC \u2282 k[y1 , . . . , yn ] is a finite set of level n polynomials, such that {(C, PC ) | C \u2208 C} separates cs. (See\nDefinition 1.)\n\nrs\u2032 \u2208R\n\nobtaining {(C, PC ) | C \u2208 Ci } where Ci is a partition of\n\u03c0u (Z(rsi )).\n\nWe present now an algorithm \"solving\" a regular system in\nthe sense of Definition 1. Precise specializations and algorithm steps follow.\n\nStep (3). For each D \u2208 D, let PD be the union of the PC\nsuch that D \u2286 C holds. Return {(D, PD ) | D \u2208 D}.\n\nCalling sequence. SeparateZeros(rs\u2217 , u, n)\n\n4. CYLINDRICAL DECOMPOSITION\nIn this section, we propose the notion of an F -invariant\ncylindrical decomposition of Kn , generalizing ideas that are\nwell-known in the case of real fields. The main algorithm\nand its subroutines for computing such a decomposition are\nstated in three subsections.\n\nA (squarefree) regular system rs\u2217 = [T\u2217 , h\u2217 ] of\nk[u, yn ], where n \u2265 2 and yn is algebraic w.r.t T\u2217 .\nInput.\n\nOutput. A finite family {(C, PC ) | C \u2208 C}, where C is a\n\nfinite collection of constructible sets of Kn\u22121 , and for each\nC \u2208 C, PC \u2282 k[y1 , . . . , yn ] is a finite set of level n polynomials, such that {(C, PC ) | C \u2208 C} separates the zero set of\nrs\u2217 . (See Definition 1.)\n\nDefinition 2. We state the definition by induction on n.\nFor n = 1, a cylindrical decomposition of K is a finite collection of sets {D1 , . . . , Dr+1 }, where either r = 0 and D1 = K,\nor r > 0 and there exists r nonconstant coprime squarefree\npolynomials p1 , . . . , pr of k[y1 ] such that\n\nStep (1). Initialize R = {rs\u2217 } and P = \u2205.\nStep (2). If R = \u2205, go to Step (3). Otherwise arbitrarily\nchoose one regular system rs = [T, h] from R and let R =\n\nDi = {y1 \u2208 K | pi (y1 ) = 0}, 1 \u2264 i \u2264 r,\n4\n\n\fStep (4): Processing R2 . For each rs \u2208 R2 , compute the\n\nand Dr+1 = {y1 \u2208 K | p1 (y1 ) * * * pr (y1 ) 6= 0}. Note that all\nDi , 1 \u2264 i \u2264 r + 1 form a partition of K. Now let n > 1, and\nlet D\u2032 = {D1 , . . . , Ds } be any cylindrical decomposition of\nKn\u22121 . For each Di , let {pi,1 , . . . , pi,ri }, ri \u2265 0, be a set of\npolynomials which separates above Di . (See Definition 1.)\nIf ri = 0, set Di,1 = Di \u00d7 K. If ri > 0, set\n\nprojection \u03c0u (Z(rs)) by Property (2) of Lemma 2. Set C2 =\n{\u03c0u (Z(rs)) | rs \u2208 R2 } and T2 = {(C, \u2205, 2) | C \u2208 C2 }.\nStep (5): Processing R3 . For each rs \u2208 R3 , compute the\n\nprojection \u03c0u (Z(rs)) by Property (1) of Lemma 2. Set C3 =\n{\u03c0u (Z(rs)) | rs \u2208 R3 } and T3 = {(C, \u2205, 3) | C \u2208 C3 }.\n\nn\n\nDi,j = {(\u03b1, yn ) \u2208 K | \u03b1 \u2208 Di & pi,j (\u03b1, yn ) = 0},\n\nComment. Since the zero sets of regular systems in R are\n\nfor 1 \u2264 j \u2264 ri and set\nDi,ri +1 = {(\u03b1, yn ) \u2208 Kn | \u03b1 \u2208 Di &\n\nri\nY\n\nj=1\n\npi,j (\u03b1, yn )\n\n!\n\npairwise disjoint, after step (3), (4), (5), we know that the\nelement in C3 has no intersection with any element in C1 or\nC2 . Note that it is possible that an element in C1 has intersection with some element of C2 . So we need the following\nstep to remove the common part between them.\n\n6= 0}.\n\nThe collection D = {Di,j | 1 \u2264 i \u2264 s, 1 \u2264 j \u2264 ri + 1} is\ncalled a cylindrical decomposition of Kn . Moreover, we say\nthat D induces D\u2032 .\n\nStep (6): Merging. Set C = C1 \u222aC2 \u222aC3 and T = T1 \u222aT2 \u222aT3 .\nNote that each element in T is a triple (C, PC , IC ), with\nC \u2208 C and where IC is an integer of value 1, 2 or 3. By\nmeans of the operation SMPD, compute an intersection-free\nbasis C \u2032 of C. For each C \u2032 \u2208 C \u2032 , compute QC \u2032 (resp. JC \u2032 )\nthe union of the PC (resp. IC ) such that C \u2032 \u2286 C holds. Set\nT \u2032 = {(C, QC , JC ) | C \u2208 C \u2032 }.\n\nLet F = {f1 , . . . , fs } be a finite set of polynomials of k[y1 <\n* * * < yn ]. A cylindrical decomposition D of Kn is called\nF -invariant if D is an intersection-free basis of the s +\n1 constructible sets V (fi ), 1 \u2264 i \u2264 s and {y \u2208 Kn |\nf1 (y) * * * fs (y) 6= 0}.\n\nStep (7): Refinement. To each C \u2208 C \u2032 , apply operation\nMPD to the family of regular systems representing C, so as to\n\nLemma 3. Let rs1 , . . . , rsr+1 , with r \u2265 1, be regular systems of k[y1 ] such that their zero sets form a partition of K1 .\nThen, up to renumbering, there exist polynomials p1 , . . . , pr ,\nh1 , . . . , hr , hr+1 \u2208 k[y1 ] such that rsi = [{pi }, hi ] for 1 \u2264 i \u2264\nr and rsr+1 = [\u2205, hr+1 ]. Moreover, setting Di = V (pi ) for\n1 \u2264 i \u2264 r and Dr+1 = {y1 \u2208 K | p1 (y1 ) * * * pr (y1 ) 6= 0}, the\nsets D1 , . . . , Dr+1 form a cylindrical decomposition of K.\n\nobtain another family RC of regular systems representing C\nand whose zero sets are pairwise disjoint. For each rs \u2208 RC ,\nset Prs = QC and Irs = JC . Let R\u2032 be the union of the\nRC , for all C \u2208 C \u2032 . Set T \u2032\u2032 = {(Z(rs), Prs , Irs ) | rs \u2208 R\u2032 }.\n\nProof. Observe that for 1 \u2264 i \u2264 r we have Z(rsi ) =\nV (pi ), as hi and pi have no common roots. Since the zero\nsets Z(rs1 ), . . . , Z(rsr+1 ) form a partition of K1 , we must\nhave V (hr+1 ) = V (p1 * * * pr ). The conclusion follows.\n\nStep (8): Recursive call. Call MakeCylindrical(R\u2032 , n \u2212 1) to\n\nComment. Recall that the union of zero sets of the Z(rs),\n\nfor all rs \u2208 R equals Kn . Therefore, it follows from Steps\n(6) and (7), that {Z(rs) | rs \u2208 R\u2032 } is a partition of Kn\u22121 .\ncompute a cylindrical decomposition D\u2032 of Kn\u22121 such that\nZ(rs), for each rs \u2208 R\u2032 , is a union of some cells of D\u2032 . For\neach D\u2032 \u2208 D\u2032 , observe that there exists a unique rs \u2208 R\u2032\nsuch that D\u2032 \u2286 Z(rs), so set PD \u2032 = Prs and ID \u2032 = Irs .\nThen, set T \u2032\u2032\u2032 = {(D\u2032 , PD \u2032 , ID \u2032 ) | D\u2032 \u2208 D\u2032 }.\n\n4.1 The Algorithm MakeCylindrical\nCalling sequence. MakeCylindrical(R, n)\n\nComment. By the comment below Step (5), we know that\n\nfor each triple (D\u2032 , PD \u2032 , ID \u2032 ) of T \u2032\u2032\u2032 , the values of ID \u2032 can\nonly be {1, 2}, {2} or {3}. Next, observe that for each D\u2032 \u2208\nD\u2032 such that ID \u2032 = {2} or ID \u2032 = {3} holds, we have PD \u2032 =\n\u2205, whereas for each D\u2032 \u2208 D\u2032 such that ID \u2032 = {1, 2} the set\nPD \u2032 is a nonempty finite family of level n polynomials in\nk[y1 , . . . , yn ] such that PD \u2032 separates above D\u2032 . In Step (9)\nbelow, we lift the cylindrical decomposition D\u2032 of Kn\u22121 to\na cylindrical decomposition D of Kn .\n\nInput. R, a finite family of regular systems such that the\n\nzero sets Z(rs), for all rs \u2208 R, form a partition of Kn .\nOutput. D, a cylindrical decomposition of Kn such that\n\nthe zero set of each regular system in R is a union of some\ncells in D.\nStep (1): Base case. If n > 1, go to (2). If R has only\n\none element, return D = K otherwise use the construction\nof Lemma 3 to return a cylindrical decomposition D.\n\nStep (9): Lifting. Initialize D to the empty set. For each\n\nD\u2032 \u2208 D\u2032 such that ID \u2032 = {2} or ID \u2032 = {3} holds, let D :=\nD \u222a {D\u2032 \u00d7 K}. For each D\u2032 \u2208 D\u2032 such that ID \u2032 = {1, 2}\nholds, let D = D \u222a {Dp }, where\n\nStep (2): Initialization. Set to R1 , R2 , R3 the subset of\nR consisting of regular systems rs = [T, h] such that, yn is\nalgebraic w.r.t T , yn appears in h but not in T , yn does not\nappear in T nor in h, respectively.\n\nDp = {(\u03b1, yn ) \u2208 Kn | \u03b1 \u2208 D\u2032 and\n\np(\u03b1, yn ) = 0},\n\nfor each p \u2208 PD \u2032 and let D = D \u222a {D\u2217 }, where\n0\n1\nY\nD\u2217 = {(\u03b1, yn ) \u2208 Kn | \u03b1 \u2208 D\u2032 & @\np(\u03b1, yn )A 6= 0},\n\nStep (3): Processing R1 . Call SeparateZeros(R1 , u, n) (see\n\nSection 3) obtaining {(C, PC ) | C \u2208 C1 } where C1 is a partition of \u03c0u (cs1 ), where cs1 is the constructible set represented\nby R1 . By adding a \"1\" in each pair, we obtain a collection\nof triples T1 = {(C, PC , 1) | C \u2208 C1 }.\n\np\u2208PD\u2032\n\nFinally, return D. The correctness of the algorithm follows\n\n5\n\n\ffrom all the comments and Definition 2.\n\nA semi-algebraic set [4] of Rn is a subset of Rn which can\nbe written as a finite union of sets of the form:\n\n4.2 The Algorithm InitialPartition\n\n{y \u2208 Rn | \u2200f \u2208 F, f (y) = 0 and \u2200g \u2208 G, g(y) > 0},\n\nCalling sequence. InitialPartition(F, n)\n\nwhere both F and G are finite subsets of the polynomial\nring R[y1 , . . . , yn ].\n\nInput. F = {f1 , . . . , fs }, a finite subset of k[y1 < * * * < yn ].\n\nGiven an n-dimensional real space Rn , a nonempty connected subset of Rn is called a region. For any subset S\nof Rn , a decomposition of S is a finite collection of disjoint\nregions whose union is S. For a region R, the cylinder over\nR, written Z(R), is R \u00d7 R1 . Let f1 < * * * < fr , r \u2265 0 be continuous, real-valued functions defined on R. Let f0 = \u2212\u221e\nand fr+1 = +\u221e. For any fi , 1 \u2264 i \u2264 r, we call the set of\npoints {(a, fi (a)) | a \u2208 R} the fi -section of Z(R). For any\ntwo functions fi , fi+1 , 0 \u2264 i \u2264 r, the set of points (a, b),\nwhere a ranges over R and fi (a) < b < fi+1 (a), is called\nthe (fi , fi+1 )-sector of Z(R). All the sections and sectors of\nZ(R) can be ordered as\n\nOutput. A family R of regular systems, the zero sets of\n\nwhich form an intersection-free basis of\nthe s+1 constructible\n \u0301\n`Q\ns\nsets V (f1 ), . . . , V (fs ) and {y \u2208 Kn |\ni=1 fi (y) 6= 0}.\n\nStep (1): Let B = SMPD(V (f1 ), . . . , V (fs )) be an intersection free basis of the s constructible sets V (f1 ), . . . , V (fs ).\nFor each element B of B, we apply operation MPD to the\nfamily of regular systems representing B to compute another\nfamily RB of squarefree regular systems such that the zero\nsets of regular systems in RB are pairwise disjoint and their\nunion is B. Let R be the union of all RB , B \u2208 B. Clearly\nthe set {Z(rs) | rs \u2208 R} is an intersection-free basis of the\ns constructible sets V (f1 ), . . . , V (fs ).\nStep (2): Let f =\n\n(f0 , f1 ) < f1 < * * * < fr < (fr , fr+1 ).\n\nQ\n\nfi \u2208F fi and rs\u2217 = [\u2205, f ]. Set R =\nR \u222a {rs\u2217 }. Obviously R is the valid output.\n\nClearly they form a decomposition of Z(R), which is called\na stack over R.\n\n4.3 The Algorithm CylindricalDecompose\n\nA decomposition E of Rn is cylindrical if either (1) n = 1\nand E is a stack over R0 , or (2) n > 1, and there is a cylindrical decomposition E \u2032 of Rn\u22121 such that for each region\nR in E \u2032 , some subset of E is a stack over R. Moreover, We\nsay that E induces E \u2032 . A decomposition is algebraic if each\nof its regions is a semi-algebraic set. A cylindrical algebraic\ndecomposition of Rn is a decomposition which is both cylindrical and algebraic.\n\nCalling sequence. CylindricalDecompose(F, n)\nInput. F , a finite subset of k[y1 < * * * < yn ].\nOutput. an F -invariant cylindrical decomposition of Kn .\nStep (1): If n > 1, go to step (2). Otherwise let {p1 , . . . , pr },\n\nr \u2265 0, be the set of irreducible divisors of non-constant\nelements of F . If r = 0, set D = K and exit. Otherwise set\n\nLet p be a polynomial of R[y1 , . . . , yn ], and let S be a subset\nof Rn . The polynomial p is invariant on S (and S is pinvariant), if the sign of p(\u03b1) does not change when \u03b1 ranges\nover S. Let F \u2282 R[y1 , . . . , yn ] be a finite polynomial set.\nWe say S is F -invariant if each p \u2208 F is invariant on S. A\ncylindrical algebraic decomposition E is F -invariant if F is\ninvariant on each region of E .\n\nDi = {y1 \u2208 K | pi (y1 ) = 0}, 1 \u2264 i \u2264 r,\nand Dr+1 = {y1 \u2208 K | p1 (y1 ) * * * pr (y1 ) 6= 0}. Clearly\nD = {Di | 1 \u2264 i \u2264 r + 1} is an F -invariant cylindrical\ndecomposition of K.\nStep (2): Let R be the output of InitialPartition(F, n).\n\nLet p be a polynomial of R[y1 , . . . , yn ], and let R be a region\nin Rn\u22121 . p is delineable on R if the real zeros of p define\ncontinuous real-valued functions \u03b81 , . . . , \u03b8s such that, for all\n\u03b1 \u2208 R, \u03b8i (\u03b1) < * * * < \u03b8s (\u03b1), and for each \u03b8i there is an\ninteger mi such that mi is the multiplicity of the root \u03b8i (\u03b1)\nof p(\u03b1, yn ). Note that if k = 0, V (p) has no intersection\nwith Z(R). Clearly when p is delineable on R, its real zeros\nnaturally determine a stack over R.\n\nStep (3): Call algorithm MakeCylindrical(R, n), to compute\n\na cylindrical decomposition D of Kn such that the zero\nset of each regular system in R is a union of some cells\nin D. Clearly, D is an intersection-free basis of the set\n{Z(rs) | rs \u2208 R}, which implies D is an intersection-free\nbasis of the s`Q\n+ 1 constructible\nsets V (f1 ), . . . , V (fs ) and\n \u0301\ns\n{y \u2208 Kn |\n6= 0}. Therefore, D is an F i=1 fi (y)\ninvariant cylindrical decomposition of Kn .\n\n5.\n\nLet E be a CAD of Rn . As suggested in [1], each region e \u2208 E\ncan be represented by a pair (I, S), where I is the index of\ne and S is a sample point for e. The index I and the sample\npoint S of e are defined as follows. If n = 1, let\n\nCYLINDRICAL ALGEBRAIC DECOMPOSITION\n\nIn this section, we show how to compute a CAD of Rn from\na cylindrical decomposition of Cn . This section starts with\nreviewing basic notions for CAD [1]. A theorem (Theorem 1)\ndue to Collins [11] is then reviewed, where the relation between complex and real roots of a polynomial with real coefficients is shown. The bridge from cylindrical decomposition to CAD is built in Corollary 1, which can be directly\nobtained from Collins' theorem. The main algorithm CAD\nand its subroutines are stated in four subsections.\n\ne1 < e2 < * * * < e2m < e2m+1 , m \u2265 0\nbe the elements of E . For each ei , the index of ei is defined\nas (i). For each ei , its sample point is any algebraic point\nbelonging to ei . Let E \u2032 be the CAD of Rn\u22121 induced by E .\nSuppose that region indices and sample points have been\ndefined for E \u2032 . Let\nei,1 < ei,2 < * * * < ei,2mi < ei,2mi +1 , mi \u2265 0\n6\n\n\f1 \u2264 \u03bdi \u2264 r, such that the zero of p(\u03b1(n\u22121) , yn ) in Nj is a\nzero of p\u03bdj (\u03b1(n\u22121) , yn ).\n\nbe the elements of E which form a stack over the region ei of\nE \u2032 . Let (i1 , . . . , in\u22121 ) be the index of ei . Then the index of\nei,j is defined as (i1 , . . . , in\u22121 , j). Let S \u2032 be a sample point\nof ei . Then the sample point of ei,j is an algebraic point\nbelonging to ei,j such that its first n \u2212 1 coordinates are the\nsame as that of S \u2032 .\n\n5.2 The Algorithm GenerateStack\nCalling sequence. GenerateStack(e\u2032 , F, n)\n\ne\u2032 is a region of a CAD E \u2032 of Rn\u22121 , n \u2265 1, and\ne\u2032 is represented by its index I \u2032 and its sample point S \u2032 .\nLet (T \u2032 , L\u2032 ) be the regular chain representation of S \u2032 . If\nn = 1, I \u2032 , T \u2032 , L\u2032 = \u2205. F is a finite set of polynomials in\nQ[y1 , . . . , yn ] of level n. The region e\u2032 and the polynomial\nset F satisfy the conditions specified in Corollary 1.\nInput.\n\nTheorem 1 (Collins). Let p be a polynomial of ring\nR[y1 < * * * < yn ] and R be a region of Rn\u22121 . If init(p) 6=\n0 on R and the number of distinct complex roots of p is\ninvariant on R, then p is delineable on R.\n\nOutput. A stack S over e\u2032 .\n\nCorollary 1. Let F = {p1 , . . . , pr } be a finite set of\npolynomials in R[y1 < * * * < yn ] of level n. Let R be a\nregion of Rn\u22121 . Assume that for every \u03b1 \u2208 R, (1) the initial\nof each pi does not vanish at \u03b1; (2) all pi (\u03b1, yn ), 1 \u2264 i \u2264 r,\nas polynomials of R[yn ], are squarefree and coprime. Then\neach pi is delineable on R and the sections of Z(R) belonging\nto different pi and pj are disjoint.\n\nStep (1). If F = \u2205, go to step (2). Otherwise call algorithm\n\nIsolateZeros(S \u2032 , F, n) to isolate the real roots of polynomials\nin F w.r.t yn at the sample point S \u2032 of e\u2032 . Let (N, \u03bd) be the\noutput. If N 6= \u2205, go to step (3).\nStep (2). Let I = (I \u2032 , 1). Let T = T \u2032 \u222a {yn }, L = L\u2032 \u00d7 [0, 0],\n\nS = (T, L) and return S = ((I, S)).\nLet R and F be defined as in the above corollary. Then\nclearly the real roots of all p \u2208 F are continuous functions\non R and they together determine a stack over R. The\nalgorithm GenerateStack, described in Section 5.2, is a direct\napplication of the above corollary.\n\nStep (3). Let N1 = [a1 , b1 ], . . . , Nm = [am , bm ], m > 0 be\n\nthe elements of N . For 1 \u2264 i \u2264 2m + 1, set Ii = (I \u2032 , i).\nLet s1 be the greatest integer less than a1 . Let s2m+1 be\nthe smallest integer greater than bm . For 1 \u2264 i \u2264 m \u2212 1,\nb +a\nlet s2i+1 = i 2 i+1 . For 0 \u2264 i \u2264 m, Let T2i+1 = T \u2032 \u222a\n{yn \u2212 s2i+1 }, L2i+1 = L\u2032 \u00d7 [s2i+1 , s2i+1 ] and set S2i+1 =\n(T2i+1 , L2i+1 ). For 1 \u2264 i \u2264 m, let T2i = T \u2032 \u222a p\u03bdi , L2i =\nL\u2032 \u00d7 Ni and set S2i = (T2i , L2i ). Finally, set S be the list of\nall (Ii , Si ), 1 \u2264 i \u2264 2m + 1. Then S is the stack over e\u2032 .\n\n5.1 Real Root Isolation\nLet \u03b1 = (\u03b11 , . . . , \u03b1n ) be an algebraic point of Rn . Each \u03b1i\nas an algebraic number is a zero of a nonconstant squarefree\npolynomial ti (yi ) of Q[yi ]. Let T be the set of all ti (yi ).\nClearly T is a zero dimensional squarefree regular chain of\nQ[y]. On the other hand, if T is a zero-dimensional regular\nchain of Q[y], any real zero of T is an algebraic point of Rn .\nTherefore any algebraic point \u03b1 of Rn can be represented by\na pair (T, L), where T is a zero-dimensional squarefree regular chain of Q[y] such that T (\u03b1) = 0 and L is an isolating\ncube containing \u03b1 but not other zeros of T . The pair (T, L)\nis called a regular chain representation of \u03b1, which will be\nused to represent a sample point of CAD.\n\n5.3 The Algorithm MakeSemiAlgebraic\nCalling sequence. MakeSemiAlgebraic(D, n)\nInput. D is a cylindrical decomposition of Cn , n \u2265 1.\nOutput. A CAD E of Rn such that, for each element D of\n\nD, the set D \u2229 Rn is a union of some regions in E .\nStep (1). If n > 1 go to (2). Otherwise let D1 , . . . , Dr , Dr+1 ,\nr \u2265 0 be the elements of D. For each 1 \u2264 i \u2264 r, let pi be\nthe polynomial such that Di = {y1 | pi (y1 ) = 0}. Let E be\nthe output of GenerateStack(\u2205, {p1 , . . . , pr }, 1). Clearly E is\na CAD of R1 .\n\nNext we provide the specification of an algorithm called IsolateZeros for isolating real zeros of univariate polynomials\nwith real algebraic number coefficients. It is a subroutine of\nthe algorithm NREALZERO proposed in [34] for isolating the\nreal roots of a zero-dimensional regular chain.\n\nStep (2). Let D\u2032 be the cylindrical decomposition of Cn\u22121\n(n\u22121)\n\nCalling sequence. IsolateZeros(\u03b1\n\ninduced by D. Call MakeSemiAlgebraic recursively to compute a CAD E \u2032 of Rn\u22121 .\n\n, F, n)\n\nInput. \u03b1(n\u22121) is a point of Rn\u22121 , n \u2265 1, with a regular\nchain representation (T \u2032 , L\u2032 ). If n = 1, T \u2032 = \u2205 and L\u2032 =\n\u2205. F = {p1 , . . . , pr } is a list of non-constant polynomials\nof Q[y1 , * * * , yn ] of level n satisfying that (1) for pi \u2208 F ,\nT \u2032 \u222a {pi } is a squarefree regular chain of Q[y1 , . . . , yn ]; (2)\nall pi (\u03b1(n\u22121) , yn ), 1 \u2264 i \u2264 r, as polynomials of R[yn ], are\nsquarefree and coprime.\nOutput. A pair (N, \u03bd). Let p =\n\nIn this step we lift the CAD E \u2032 of Rn\u22121 to E .\nInitialize E = ( ). For each region e\u2032 of E \u2032 , let D\u2032 be the\ncell of D\u2032 such that e\u2032 \u2282 D\u2032 \u2229 Rn . Let D1 , . . . , Dr , Dr+1 ,\nr \u2265 0 be the cells of D such that D\u2032 \u00d7 C = \u222ar+1\nj=1 Dj .\nFor each 1 \u2264 j \u2264 r, let pj be the polynomial such that\nDj = {(\u03b1, yn ) | \u03b1 \u2208 D\u2032 & pj (\u03b1, yn ) = 0}. Add output of\nGenerateStack(e\u2032 , {p1 , . . . , pr }, n) into E . Clearly E is a CAD\nof Rn and for each D \u2208 D, the set D \u2229 Rn is a union of some\nregions in E .\n\nStep (3).\n\nQr\n\ni=1 pi . N = (N1 , . . . , Nm )\nis a list of intervals with rational endpoints with N1 < * * * <\nNm such that each Nj contains exactly one real zero of\np(\u03b1(n\u22121) , yn ). \u03bd = (\u03bd1 , . . . , \u03bdm ) is list of integers, where\n\n5.4 The Algorithm CAD\n7\n\n\fis called recursively to compute a cylindrical decomposition\nof C3 . By the Lifting step, we finally obtain a p-invariant\ncylindrical decomposition of C4 . Let r = 4ac \u2212 b2 , the decomposition can be described by the following tree.\nroot\n\nCalling sequence. CAD(F, n)\nInput. F is a finite subset of Q[y1 < * * * < yn ], n \u2265 1.\nOutput. An F -invariant CAD E of Rn .\n\n\u2711\u25d7\n\u2711\n\u25d7\n\u2711\n\u2730\ns\n\u25d7\n\nLet D = CylindricalDecompose(F, n) be an F invariant cylindrical decomposition of Cn .\n\nStep (1).\n\na=0\n\nStep (2). Call algorithm MakeSemiAlgebraic to compute a\n\nE of R such that, for each element D of D, the set D \u2229\nRn is a union of some regions in E . Since D is an intersectionfree basis of the`Q\ns + 1 constructible\nsets VC (f1 ), . . . , VC (fs )\n \u0301\ns\nand {y \u2208 Cn |\ni=1 fi (y) 6= 0}, E is an intersection-free\nbasis of the `Q\ns + 1 semi-algebraic\nsets VR (f1 ), . . . , VR (fs ) and\n \u0301\ns\n{y \u2208 Rn |\ni=1 fi (y) 6= 0}. Note that each element in\nE is connected. Therefore E is an F -invariant cylindrical\nalgebraic decomposition of Rn .\n\n\u2711\n\u2711\n\u2730\n\u2744\n\nC\n\nr3 :=\n\n{(C1 , {t}), (C2 , {p}), (C3 , {q})},\n\n{t} : {bx + c}\n{p} : {ax2 + bx + c}\n{q} : {2ax + b}\n\nThe projection of Z(r4 ) is the values such that a, b, c do\nnot vanish simultaneously, denoted by C4 . The projection\nof Z(r1 ) is the set {a = b = c = 0}, denoted by C5 .\n\nC5\n\u2205\n{3}\n\nr 6= 0\n\n\u274d\n\u2744\u274d\u274d\n\u2765\n\nC t = 0 t 6= 0 q = 0 q 6= 0 p = 0 p 6= 0\n\nIn Table 2, we show the total computation time of the algorithm CylindricalDecompose (C.D. for short) and the time\nspent on three main operations of it, which are respectively\nSeparateZeros(Separate for short), MPD and SMPD. We can\nsee that the cost of algorithm CylindricalDecompose is dominated by SMPD. The number of elements (NC ) in the cylindrical decomposition of Cn is also reported.\n\nNote that C1 , C2 , C3 are all subsets of C4 . In the Merging\nstep, by calling SMPD, we get another set C6 := {a = b =\n0, c 6= 0} such that C1 , C2 , C3 , C5 and C6 are pairwise disjoint and their union is C3 . Moreover, for each Ci , there is\na family of polynomials and indices associated to it.\nC3\n{q}\n{1, 2}\n\n\u2721\n\u2722\u2721\u2745\n\u2758\n\u2745\n\nIn Table 1, we show the total computation time of CAD\nand the time spent on three main phases of it, which are\nInitialPartition (Partition for short), MakeCylindrical (M.C. for\nshort) and MakeSemiAlgebraic (M.S.A. for short). We also\nreport the number of elements (NR ) in the CAD. Aborted\ncomputations due to time-out are marked with \"-\". From\nthe table, one can see that, except examples 14 and 16, the\nsteps of the algorithm dedicated to computations in complex\nspace dominate the step taking place in the real space.\n\ndefined as follows, which separates Z(r2 ) \u222a Z(r3 ).\n\nC2\n{p}\n{1, 2}\n\n\u2721\n\u2722\u274f\n\u276b\n\nr=0\n\nIn this section, we present experimental results obtained\nwith an implementation of the algorithms presented in this\npaper. Our code is in Maple 12 running on a computer with\nIntel Core 2 Quad CPU (2.40GHz) and 3.0GB total memory.\nThe test examples, listed in appendix for the reader's convenience, are taken from diverse papers [16, 1, 13, 25, 6, 14,\n12] on CAD. The time-out for a test run is set to 2 hours.\n\nNext we trace the algorithm MakeCylindrical. Initialize the\nsets R1 := {r2 , r3 }, R2 := {r4 } and R3 := {r1 }. Since x\nappears in the equations of r2 and r3 , SeparateZeros(R1 ) is\ncalled to obtain a family of pairs\n\nC1\n{t}\n{1, 2}\n\n\u2744\n\n\u2721\u2745\n\u2758\n\u2721\n\u2722 \u2745\n\n6.2 Experimental Results\n\n \u0306\n0\n, r4 := ax2 + bx + c 6= 0 .\n0\n\nC1 : {a = 0, b 6= 0}\n\u2192\nC2 : {a(4ac \u2212 b2 ) 6= 0}\n\u2192\nC3 : {4ac \u2212 b2 = 0, a 6= 0} \u2192\n\n\u2744\n\nTo compute a p-invariant CAD of R4 from the above tree\nis straightforward. Starting from the root, one first obtains\nthe trivial zero 0 of a, which decomposes a 6= 0 into two\nconnected cells a < 0 and a > 0. The real line is thus divided into three parts. For each part, one then substitutes\nits sample point into its children which are equations, from\nwhere one can determine the sample points for the children\nwhich are inequations. Continuing in this manner, one finally obtains a CAD of R4 with 27 cells. The number of cells\nis the same as that obtained in [6]. In fact, it is the minimal\nnumber of cells one can obtain for a p-invariant CAD of R4 .\n\nLet us illustrate our method by a simple and classical example. Consider the parametric parabola p = ax2 + bx + c. Set\nthe order of variables as x > c > b > a. The first step InitialPartition generates four regular systems, whose zero sets\nform a partition of C4 .\n8\n8\n< bx + c = 0\n< c = 0\nb 6= 0 ,\nb = 0 , r2 :=\nr1 :=\n:\n: a = 0\na = 0\nax2 + bx + c =\na 6=\n\n\u2711\n\u2744\n\nc = 0 c 6= 0 C\n\n6. EXAMPLES AND EXPERIMENTATION\n6.1 An Example\n\n\uf6be\n\n\u2744\nC\n\nb = 0 b 6= 0\n\nn\n\nCAD\n\na 6= 0\n\n\u2711\n\u2711\n\u2730\n\u2711\n\u2744\n\nC6\n\u2205\n{2}\n\nThe data reported in two tables shows that SMPD is the\ndominant operation, which computes intensively GCDs of\npolynomials modulo regular chains. This suggests that the\nmodular methods and efficient implementation techniques\nin [15, 24, 22] (use of FFT-based polynomial arithmetic, . . . )\nhave a large potential for improving the implementation of\nour CAD algorithm.\n\nSince each Ci is already the zero set of some regular system,\nMakeCylindrical({C1 , C2 , C3 , C5 , C6 }, 3)\n8\n\n\fSys\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n\nPartition\n0.024\n1.184\n0.004\n0.264\n0.016\n0.108\n2.704\n0.380\n0.288\n5.668\n0.252\n2.664\n10.576\n5.728\n690.731\n895.435\n0.052\n-\n\nM.C.\n0.096\n2.856\n7.512\n1.368\n0.052\n0.156\n3.600\n1.608\n0.532\n48.079\n1.192\n135.028\n35.846\n71.760\n2513.817\n2064.469\n-\n\nM.S.A.\n0.024\n1.048\n0.704\n1.080\n0.116\n0.120\n1.360\n1.196\n0.264\n18.833\n0.620\n88.142\n6.905\n2520.354\n299.250\n-\n\nTotal\n0.144\n5.088\n8.220\n2.716\n0.184\n0.384\n7.664\n3.184\n1.084\n72.640\n2.068\n225.862\n53.335\n2597.878\n3503.954\n-\n\nNR\n27\n895\n233\n421\n55\n41\n893\n365\n209\n3677\n563\n20143\n4949\n27547\n66675\n-\n\n[5] F. Boulier, F. Lemaire, and M. Moreno Maza. Well known\ntheorems on triangular systems and the D5 principle. In Proc.\nof Transgressive Computing 2006, Granada, Spain, 2006.\n[6] C. W. Brown. Improved projection for cylindrical algebraic\ndecomposition. J. Symb. Comput., 32(5):447\u2013465, 2001.\n[7] C. W. Brown. Simple cad construction and its applications. J.\nSymb. Comput., 31(5):521\u2013547, 2001.\n[8] C. W. Brown and J. H. Davenport. The complexity of\nquantifier elimination and cylinrical algebraic decomposition.\nIn Proc. ISSAC'07, pages 54\u201360.\n[9] C. Chen, O. Golubitsky, F. Lemaire, M. Moreno Maza, and\nW. Pan. Comprehensive Triangular Decomposition, volume\n4770 of Lecture Notes in Computer Science, pages 73\u2013101.\n2007.\n[10] J. S. Cheng, X. S. Gao, and C. K. Yap. Complete numerical\nisolation of real zeros in zero-dimensional triangular systems. In\nISSAC, pages 92\u201399, 2007.\n\nTable 1 Timing (s) and number of cells for CAD\nSys\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n\nSeparate\n0.020\n0.508\n3.856\n0.280\n0.032\n0.036\n1.100\n0.536\n0.120\n3.204\n0.128\n8.508\n2.040\n5.741\n83.469\n66.516\n\nMPD\n0.012\n0.252\n0.836\n0.088\n0.008\n0.012\n0.652\n0.144\n0.032\n0.756\n0.032\n2.024\n1.784\n2.092\n62.736\n377.664\n\nSMPD\n0.084\n2.268\n2.460\n1.036\n0.012\n0.092\n2.416\n1.040\n0.384\n49.031\n0.960\n125.104\n42.578\n64.875\n3066.071\n2501.947\n\nTotal\n0.156\n4.052\n7.880\n1.648\n0.064\n0.268\n6.320\n2.008\n0.816\n54.119\n1.416\n138.188\n47.002\n76.956\n3232.073\n2959.904\n\n[11] G. E. Collins. Quantifier elimination for real closed fields by\ncylindrical algebraic decomposition. Springer Lecture Notes in\nComputer Science, 33:515\u2013532, 1975.\n\nNC\n8\n63\n24\n65\n7\n13\n58\n55\n26\n594\n49\n856\n407\n983\n2974\n5877\n\n[12] G. E. Collins. Quantifier elimination by cylindrical algebraic\ndecomposition\u2013twenty years of progress. In B. Caviness and\nJ. Johnson, editors, Quantifier Elimination and Cylindical\nAlgebraic Decomposition, Texts and Mongraphs in Symbolic\nComputation, pages 8\u201323. Springer, 1998.\n[13] G. E. Collins and H. Hong. Partial cylindrical algebraic\ndecomposition. Journal of Symbolic Computation,\n12(3):299\u2013328, 1991.\n[14] G. E. Collins, J. R. Johnson, and W. Krandick. Interval\narithmetic in cylindrical algebraic decomposition. J. Symb.\nComput., 34(2):145\u2013157, 2002.\n[15] X. Dahan, M. Moreno Maza, \u00c9. Schost, W. Wu, and Y. Xie.\nLifting techniques for triangular decompositions. In ISSAC'05,\npages 108\u2013115, 2005.\n\nTable 2 Timing (s) and number of cells for C.D.\n\n7.\n\n[16] A. Dolzmann, A. Seidl, and T. Sturm. Efficient projection\norders for cad. In Proc. ISSAC '04, pages 111\u2013118. ACM, 2004.\n[17] A. Dolzmann, T. Sturm, and V. Weispfenning. Real quantifier\nelimination in practice. In Algorithmic Algebra and Number\nTheory, pages 221\u2013247, 1998.\n\nCONCLUSION\n\nWe have presented a new approach for computing cylindrical\nalgebraic decompositions. Our main motivation is to understand the relations between CADs and triangular decompositions, studying how the efficient techniques developed for\nthe latter ones can benefit to the former ones.\n\n[18] H. Hong. An improvement of the projection operator in\ncylindrical algebraic decomposition. In ISSAC '90, pages\n261\u2013264. ACM, 1990.\n[19] H. Hong. Simple solution formula construction in cylindrical\nalgebraic decomposition based quantifier elimination. In ISSAC\n'92, pages 177\u2013188. ACM, 1992.\n\nOur method can be applied for solving QE problems directly.\nHowever, to solve practical problems efficiently, our method\nneeds to be equipped with existing techniques, like partially\nbuilt CADs, for utilizing the specific feature of input problems. Such issues will be addressed in a future paper.\n\n8.\n\n[20] \u00c9. Hubert. Notes on triangular sets and\ntriangulation-decomposition algorithms. I. Polynomial systems.\nIn Symbolic and numerical scientific computation (Hagenberg,\n2001), volume 2630 of LNCS, pages 1\u201339. Springer, 2003.\n[21] F. Lemaire, M. Moreno Maza, and Y. Xie. The RegularChains\nlibrary. In Ilias S. Kotsireas, editor, Maple Conference 2005,\npages 355\u2013368, 2005.\n\nREFERENCES\n\n[1] D. S. Arnon, G. E. Collins, and S. McCallum. Cylindrical\nalgebraic decomposition I: the basic algorithm. SIAM J.\nComput., 13(4):865\u2013877, 1984.\n\n[22] X. Li, M. Moreno Maza, and W. Pan. Computations modulo\nregular chains, 2009. Submitted to ISSAC'09.\n\n[2] D. S. Arnon, G. E. Collins, and S. McCallum. Cylindrical\nalgebraic decomposition II: an adjacency algorithm for the\nplane. SIAM J. Comput., 13(4):878\u2013889, 1984.\n\n[23] X. Li, M. Moreno Maza, R. Rasheed, and \u00c9. Schost. The\nModpn library: Bringing fast polynomial arithmetic into\nMaple. In MICA'08, 2008.\n\n[3] P. Aubry, D. Lazard, and M. Moreno Maza. On the theories of\ntriangular sets. J. Symb. Comp., 28(1-2):105\u2013124, 1999.\n\n[24] X. Li, M. Moreno Maza, and \u00c9. Schost. Fast arithmetic for\ntriangular sets: From theory to practice. In ISSAC'07, pages\n269\u2013276. ACM, 2007.\n\n[4] S. Basu, R. Pollack, and M. F. Roy. Algorithms in real\nalgebraic geometry, volume 10 of Algorithms and\nComputations in Mathematics. Springer-Verlag, 2006.\n\n[25] S. McCallum. An improved projection operation for cylindrical\nalgebraic decomposition of 3-dimensional space. J. Symb.\nComput., 5(1-2):141\u2013161, 1988.\n\n9\n\n\f[26] S. McCallum. Solving polynomial strict inequalities using\ncylindrical algebraic decomposition. The Computer Journal,\n36(5):432\u2013438, 1993.\n\n12. X-axis ellipse problem\n{b2 (x \u2212 c)2 + a2 y 2 \u2212 a2 b2 ,\nx2 + y 2 \u2212 1}, y > x > b > c > a.\n\n[27] S. McCallum. An improved projection operator for cylindrical\nalgebraic decomposition. In B. Caviness and J. Johnson,\neditors, Quantifier Elimination and Cylindical Algebraic\nDecomposition, Texts and Mongraphs in Symbolic\nComputation. Springer, 1998.\n\n13. Davenport and Heintz\n{a \u2212 d, b \u2212 c, a \u2212 c, b \u2212 1, a2 \u2212 b}, a > b > c > d.\n14. Hong-90\n{r + s + t, rs + st + tr \u2212 a, rst \u2212 b},\nt > s > r > b > a.\n\n[28] M. Moreno Maza. On triangular decompositions of algebraic\nvarieties. Technical Report TR 4/99, NAG Ltd, Oxford, UK,\n1999. Presented at the MEGA-2000 Conference, Bath, England.\n\n15. Solotareff-3\n{r, r \u2212 1, u + 1, u \u2212 v, v \u2212 1,\n3u2 + 2ru \u2212 a, 3v 2 + 2rv \u2212 a,\nu3 + ru2 \u2212 au + a \u2212 r \u2212 1,\nv 3 + rv 2 \u2212 av \u2212 2b \u2212 a + r + 1},\nb > u > v > r > a.\n\n[29] A. Strzebo\u0144ski. Solving systems of strict polynomial\ninequalities. J. Symb. Comput., 29(3):471\u2013480, 2000.\n[30] D. M. Wang. Elimination Methods. Springer, Wein, New York,\n2000.\n\n16. Collision problem\n17\n17\n{ 17\n16 t \u2212 6, 16 t \u2212 10, x \u2212 16 t + 1,\n17\n17\nt \u2212 1, y \u2212 17\nt\n+\n9,\ny \u2212 16\nt + 7,\nx \u2212 16\n16\n2\n2\n(x \u2212 t) + y \u2212 1}, t > x > y.\n\n[31] V. Weispfenning. A new approach to quantifier elimination for\nreal algebra, in quantifier elimination and cylindrical algebraic\ndecomposition. In B. Caviness and J. Johnson, editors,\nQuantifier Elimination and Cylindical Algebraic\nDecomposition, Texts and Mongraphs in Symbolic\nComputation, pages 376\u2013392. Springer, 1998.\n\n17. McCallum trivariate random polynomial\n{(y \u2212 1)z 4 + xz 3 + x(1 \u2212 y)z 2 + (y \u2212 x \u2212 1)z + y},\nz > y > x.\n\n[32] W. T. Wu. A zero structure theorem for polynomial equations\nsolving. MM Research Preprints, 1:2\u201312, 1987.\n\n18. Ellipse problem\n{b2 (x \u2212 c)2 + a2 (y \u2212 d)2 \u2212 a2 b2 , a, b, x2 + y 2 \u2212 1},\ny > x > d > c > b > a.\n\n[33] B. Xia and L. Yang. An algorithm for isolating the real\nsolutions of semi-algebraic systems. J. Symb. Comput.,\n34(5):461\u2013477, 2002.\n[34] B. Xia and T. Zhang. Real solution isolation using interval\narithmetic. Comput. Math. Appl., 52(6-7):853\u2013860, 2006.\n[35] L. Yang, X. Hou, and B. Xia. A complete algorithm for\nautomated discovering of a class of inequality-type theorems.\nScience in China, Series F, 44(6):33\u201349, 2001.\n\nAPPENDIX\n1. Parametric parabola\n{ax2 + bx + c}, x > c > b > a.\n2. Whitney umbrella\n{x \u2212 uv, y \u2212 v, z \u2212 u2 }, v > u > z > y > x.\n3. Quartic\n{x4 + px2 + qx + r}, x > p > q > r.\n4. Sphere and catastrophe\n{z 2 + y 2 + x2 \u2212 1, z 3 + xz + y}, x > y > z.\n5. Arnon-84\n{y 4 \u2212 2y 3 + y 2 \u2212 3x2 y + 2x4 }, y > x.\n6. Arnon-84-2\n{144y 2 + 96x2 y + 9x4 + 105x2 + 70x \u2212 98,\nxy 2 + 6xy + x3 + 9x}, y > x.\n7. A real implicitization problem\n{x \u2212 uv, y \u2212 uv 2 , z \u2212 u2 }, v > u > z > y > x.\n8. Ball and circular cylinder\n{x2 + y 2 + z 2 \u2212 1, x2 + (y + z \u2212 2)2 \u2212 1}, z > y > x.\n9. Termination of term rewrite system\n{x \u2212 r, y \u2212 r, x2 (1 + 2y)2 \u2212 y 2 (1 + 2x2 )}, r > x > y.\n10. Collins and Johnson\n{3a2 r + 3b2 \u2212 2ar \u2212 a2 \u2212 b2 ,\n3a2 r + 3b2 r \u2212 4ar + r \u2212 2a2 \u2212 2b2 + 2a,\na \u2212 1/2, b, r, r \u2212 1}, r > a > b.\n11. Range of lower bounds\n{a, az 2 + bz + c, ax2 + bx + c \u2212 y},\nz > c > b > a > x > y.\n\n10\n\n\f"}