{"id": "http://arxiv.org/abs/0707.0641v1", "guidislink": true, "updated": "2007-07-04T15:30:54Z", "updated_parsed": [2007, 7, 4, 15, 30, 54, 2, 185, 0], "published": "2007-07-04T15:30:54Z", "published_parsed": [2007, 7, 4, 15, 30, 54, 2, 185, 0], "title": "Where are Bottlenecks in NK Fitness Landscapes?", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0707.3149%2C0707.1587%2C0707.4543%2C0707.2350%2C0707.3292%2C0707.1760%2C0707.1080%2C0707.2917%2C0707.1531%2C0707.3629%2C0707.0844%2C0707.1570%2C0707.2114%2C0707.3706%2C0707.0817%2C0707.1839%2C0707.1617%2C0707.4391%2C0707.2329%2C0707.2649%2C0707.1972%2C0707.0043%2C0707.2299%2C0707.1049%2C0707.3500%2C0707.4407%2C0707.2517%2C0707.2935%2C0707.0708%2C0707.2886%2C0707.1186%2C0707.2980%2C0707.1550%2C0707.0725%2C0707.3217%2C0707.3979%2C0707.3482%2C0707.4011%2C0707.0966%2C0707.1059%2C0707.0468%2C0707.4205%2C0707.1473%2C0707.4480%2C0707.4143%2C0707.0165%2C0707.0620%2C0707.1593%2C0707.3970%2C0707.2938%2C0707.4453%2C0707.3932%2C0707.0605%2C0707.1221%2C0707.0538%2C0707.3358%2C0707.2579%2C0707.3565%2C0707.3886%2C0707.1163%2C0707.0282%2C0707.2528%2C0707.4624%2C0707.1656%2C0707.1814%2C0707.0360%2C0707.1392%2C0707.2157%2C0707.3371%2C0707.1057%2C0707.2455%2C0707.0716%2C0707.0970%2C0707.0641%2C0707.1554%2C0707.1013%2C0707.2596%2C0707.0860%2C0707.4000%2C0707.2011%2C0707.4047%2C0707.2336%2C0707.3976%2C0707.3299%2C0707.1923%2C0707.1984%2C0707.4631%2C0707.0631%2C0707.1265%2C0707.0275%2C0707.3847%2C0707.1884%2C0707.1040%2C0707.2199%2C0707.4204%2C0707.0486%2C0707.4433%2C0707.4217%2C0707.3501%2C0707.0654%2C0707.3832&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Where are Bottlenecks in NK Fitness Landscapes?"}, "summary": "Usually the offspring-parent fitness correlation is used to visualize and\nanalyze some caracteristics of fitness landscapes such as evolvability. In this\npaper, we introduce a more general representation of this correlation, the\nFitness Cloud (FC). We use the bottleneck metaphor to emphasise fitness levels\nin landscape that cause local search process to slow down. For a local search\nheuristic such as hill-climbing or simulated annealing, FC allows to visualize\nbottleneck and neutrality of landscapes. To confirm the relevance of the FC\nrepresentation we show where the bottlenecks are in the well-know NK fitness\nlandscape and also how to use neutrality information from the FC to combine\nsome neutral operator with local search heuristic.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0707.3149%2C0707.1587%2C0707.4543%2C0707.2350%2C0707.3292%2C0707.1760%2C0707.1080%2C0707.2917%2C0707.1531%2C0707.3629%2C0707.0844%2C0707.1570%2C0707.2114%2C0707.3706%2C0707.0817%2C0707.1839%2C0707.1617%2C0707.4391%2C0707.2329%2C0707.2649%2C0707.1972%2C0707.0043%2C0707.2299%2C0707.1049%2C0707.3500%2C0707.4407%2C0707.2517%2C0707.2935%2C0707.0708%2C0707.2886%2C0707.1186%2C0707.2980%2C0707.1550%2C0707.0725%2C0707.3217%2C0707.3979%2C0707.3482%2C0707.4011%2C0707.0966%2C0707.1059%2C0707.0468%2C0707.4205%2C0707.1473%2C0707.4480%2C0707.4143%2C0707.0165%2C0707.0620%2C0707.1593%2C0707.3970%2C0707.2938%2C0707.4453%2C0707.3932%2C0707.0605%2C0707.1221%2C0707.0538%2C0707.3358%2C0707.2579%2C0707.3565%2C0707.3886%2C0707.1163%2C0707.0282%2C0707.2528%2C0707.4624%2C0707.1656%2C0707.1814%2C0707.0360%2C0707.1392%2C0707.2157%2C0707.3371%2C0707.1057%2C0707.2455%2C0707.0716%2C0707.0970%2C0707.0641%2C0707.1554%2C0707.1013%2C0707.2596%2C0707.0860%2C0707.4000%2C0707.2011%2C0707.4047%2C0707.2336%2C0707.3976%2C0707.3299%2C0707.1923%2C0707.1984%2C0707.4631%2C0707.0631%2C0707.1265%2C0707.0275%2C0707.3847%2C0707.1884%2C0707.1040%2C0707.2199%2C0707.4204%2C0707.0486%2C0707.4433%2C0707.4217%2C0707.3501%2C0707.0654%2C0707.3832&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Usually the offspring-parent fitness correlation is used to visualize and\nanalyze some caracteristics of fitness landscapes such as evolvability. In this\npaper, we introduce a more general representation of this correlation, the\nFitness Cloud (FC). We use the bottleneck metaphor to emphasise fitness levels\nin landscape that cause local search process to slow down. For a local search\nheuristic such as hill-climbing or simulated annealing, FC allows to visualize\nbottleneck and neutrality of landscapes. To confirm the relevance of the FC\nrepresentation we show where the bottlenecks are in the well-know NK fitness\nlandscape and also how to use neutrality information from the FC to combine\nsome neutral operator with local search heuristic."}, "authors": ["S\u00e9bastien Verel", "Philippe Collard", "Manuel Clergue"], "author_detail": {"name": "Manuel Clergue"}, "author": "Manuel Clergue", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1109/CEC.2003.1299585", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/0707.0641v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0707.0641v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.NE", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.NE", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0707.0641v1", "affiliation": "I3S", "arxiv_url": "http://arxiv.org/abs/0707.0641v1", "arxiv_comment": null, "journal_reference": "Evolutionary Computation, 2003. CEC'03 (08/12/2003) 273--280", "doi": "10.1109/CEC.2003.1299585", "fulltext": "Where are Bottlenecks in NK Fitness Landscapes?\n\narXiv:0707.0641v1 [cs.NE] 4 Jul 2007\n\nS\u00e9bastien Verel, Philippe Collard and Manuel Clergue\nUniversit\u00e9 de Nice-Sophia Antipolis,\n06640, Laboratoire I3S, France,\n{verel,pc,clerguem}@i3s.unice.fr\nAbstract- Usually the offspring-parent fitness correlation is used to visualize and analyze some caracteristics\nof fitness landscapes such as evolvability. In this paper,\nwe introduce a more general representation of this correlation, the Fitness Cloud (FC). We use the bottleneck\nmetaphor to emphasise fitness levels in landscape that\ncause local search process to slow down. For a local\nsearch heuristic such as hill-climbing or simulated annealing, FC allows to visualize bottleneck and neutrality\nof landscapes. To confirm the relevance of the FC representation we show where the bottlenecks are in the wellknow NK fitness landscape and also how to use neutrality information from the FC to combine some neutral\noperator with local search heuristic.\n\nIntroduction\nThe fitness correlation between parent and offspring is often\nused to analyse search space. In this paper, we present the\nFitness Cloud (FC) which is the scatterplot of points parentfitness/offpring-fitness. The F C allowed us to visualize and\nanalyse the dynamic of local search heuristic at fitness level.\nF C shows evolvability as well neutrality and fitness bottleneck. The bottleneck value is the fitness level that cause\nlocal search to slow down and stop. In other word, bottleneck is fitness value where heuristic converge. In this paper,\nwe focus on the N K fitness landscapes. First, we present\nN K fitness landscapes and the definition of Fitness Cloud.\nSection 2 reveals how F C exhibit bottleneck in N K landscapes for two well-know search heuristics hill climber and\nsimulated annealing. The F C represents the neutrality of\nlandscape, section 3 proposes to use this information to design and analyse performances of strategy using neutrality.\n\n1 NK Landscapes and Fitness Cloud\n1.1 The Tunable NK-Fitness Landscapes\nIn this section the basic features of the family of NK fitness\nlandscapes are reviewed. The notion of fitness landscapes\n[12] as search space is defined as follows: a set of potential solutions (genotypes), a fitness function that evaluates\nthe genotypes and a topology that represents relations between genotypes. NK model proposed by Kauffman [4] is\ndesigned to capture the structure of rugged multi-peaked fitness landscapes. These random landscapes are defined on\nbinary strings of length N . The parameter K represents the\n\nnumber of epistatic links1 . By tuning K, landscapes can\ngenerated with varying degrees of ruggedness. In order to\ncompute the overall fitness of one string, one consider that\neach bit contributes a component to the total fitness based on\nits own value and the values of K other genes. The random\nmodel is used, where fitness contribution of one bit depends\non its own value and K other randomly chosen bits2 . Fitness contributions come from a uniform distribution ranging\nfrom 0.0 to 1.0. Fitness of a string is computed as the sum\nof bits contribution at all N loci divided by N for normalization to the range [0; 1]. The case K = 0 corresponds\nto problem without epistasis: fitnesses of neighbourhood\npoints are correlated. There exists a single optimum. A hill\nclimbing search allows to reach this optimum and adaptive\nwalks are thus relatively long (N /2). The case K = N \u2212 1\ncorresponds to the maximum number of interaction of the\nparts. The fitness of any point is random. There exists an\nenormous number of local optima. Adaptive walks are relatively short (log(2N )) and are likely to end up in local optimum.\n1.2 The Offspring-Parent Fitness Correlation Cloud\nPlotting fitness against some features is not a new idea. B.\nManderick et al. [7] study the correlation coefficient of genetic operators: they compute the correlation between the\nfitnesses of a number of parents and the fitnesses of their\noffspring. J. Grefenstette [3] uses fitness distribution of genetic operators to predict GA behaviour. H. Ros\u00e9 et al. [8]\ndevelop the density of states approach by plotting the number of genotypes with a same fitness value. Smith et al. [9]\nfocus on notions of evolvability and neutrality; they plot the\naverage fitness of offspring over fitness according to Hamming neighbourhood. Evolvability refers to the efficiency\nof evolutionary search. It is defined by Altenberg as \"the\nability of an operator/representation scheme to produce offspring that are fitter than their parents\" ([1], [2]).\nFitness Cloud In order to get a visual rendering of evolvability, we proposed a more general representaion in the\nplan parent-fitness / offspring-fitness. We consider that two\nstrings are neighbours if there is a transformation related to\n1 Epistasis is defined as the influence of the genotype at one locus on\nthe effect of a mutation at another locus\n2 Weinberger [11] proved the NK optimization problem with random\nneighbourhoods is NP complete for K \u2265 3\n\n\ff \u0303min (\u03c6) = min f \u0303(x)\nx\u2208G\u03c6\n\n1\n\nmin, max, mean K=20\nmin, max, mean K=5\n\n0.8\n\noffspring fitness\n\na local search heuristics or an operator, which allows \"to\npass\" from one string to the other one. For each string x\nin the genotype space3 , we plot one point which have for\nabscissa the fitness f (x) of x and for ordinate the fitness\nf \u0303(x) of a peculiar neighbour of x. Thus, we obtain a scatterplot, the so-called offspring-parent Fitness Cloud (F C).\nThe choice of one peculiar neighbour among all the possible ones is a feature of the heuristic. Implicitly the fitness\ncloud gives some insight on the genotype to phenotype map.\nThe set of genotypes that all have equal fitness is a neutral\nset [5]. Such a set corresponds to one abscissa in the F C;\naccording to this abscissa, a vertical slice from the cloud\nrepresents the fitness values that could be reached from this\nset of neutrality. For a given offspring-fitness value f \u0303, an\nhorizontal slice represents all the fitness values from which\na local operator can reach f \u0303. Evolvability against a fitness\nlevel can be charaterized by the repartition of points over\nthe diagonal line in the F C. In this paper we will use the\nF C to track the dynamic and to locate the bottlenecks of\nlocal search heuristic. To get a more synthetic view on the\nF C, we define three functions :\n\n0.6\n\n0.4\n\n0.2\n\n0\n0\n\n0.2\n\n0.4\n\n\u03b2\n\n0.6\n\n0.8\n\n1\n\nparent fitness\n\nFigure 1: Fitness Cloud from the Hamming neighbourhood:\nborder (min and max) and mean (NK-landscapes with N =\n25, K = 20 and K = 5)\n\nfrequency of apparition\n\n0.005\n0.004\n\nf \u0303max (\u03c6) = max f \u0303(x)\nx\u2208G\u03c6\n\nf \u0303mean (\u03c6) = meanf \u0303(x)\n\n0.002\n\n0\n\nx\u2208G\u03c6\n\nwhere G\u03c6 is the neutral set defined by:\n{x \u2208 Gtype | f (x) = \u03c6 }. Practically two fitness values are taken as equal if they both stand in the same\ninterval4 . We call F Cmin , F Cmax and F Cmean respectively the representative curve of f \u0303min , f \u0303max and f \u0303mean .\nPlotting the curves F Cmax and F Cmin allows to materialize the edge of the cloud (see fig. 1). A peculiar fitness\nvalue \u03b2 is defined as solution of equation f \u0303mean (\u03b2) = \u03b2;\nit corresponds to the abscissa of intersection between the\nF Cmean curve and the diagonal line (see fig. 1). On\naverage, G\u03b2 is invariant by the heuristic, i.e. the heuristic is\nneutral on the set G\u03b2 .\nOffspring-Parent Fitness Cloud and Hamming Distance\nBefore study a specific heuristic, it may be useful to get a\nview on the scatterplot fitness vs. fitness based on Hamming\nneighbourhood which is independent from any heuristic.\nSo, we plot a cloud where all of the genotypes that can be\nproduced by a single bit flip are selected (see fig. 1). Hence,\nthe entire neighbourhood is represented without condition\ninduced by some heuristics.\n3 Data\n4 in\n\nare collected from an exhaustive enumeration of the search space\nour experiments the range is 0.002\n\n0\n\n0.1 0.2\n0.3 0.4\n0.5 0.6\n0.7 0.8\nparent fitness\n0.9\n\n1 0\n\n1\n0.9\n0.8\n0.7\n0.6\n0.5\n0.4\noffspring fitness\n0.3\n0.2\n0.1\n\nFigure 2: Distribution of points on the Fitness Cloud (NK\nlandscape with N = 25 and K = 20)\nFigure 1 shows the F Cmean curve is coarsely a line.\nThis illustrates a well-known result: Weinberger [10] established the following relation between the mean offspringfitness and the length N , the epistatic parameter K and the\nfitness value f :\n\u0012\n\u0013\n\u0012\n\u0013\nK +1\nK +1\nf \u0303mean (f ) = 1 \u2212\nf+\n\u03b2\n(1)\nN\nN\nwhere \u03b2 is constant. Therefore the mean offspringfitness depends linearly from the parent-fitness whatever\nthe epistatic parameter K is. As reported by Smith [9],\nlet's note that the slop coefficient 1 \u2212 K+1\nN is the offspringparent fitnesses correlation [10]. The \u03b2 fitness level is always equal to 0.5. So, when the parameter K varies from 0\nto N \u22121, the F Cmean line turns around the (\u03b2; \u03b2) point (see\n\n\ffig. 1). For K = 0 the problem is linear and the F Cmean\nline is near the diagonal; at the opposite when epistasis is\nupper limit (K = N \u2212 1), the F Cmean line is close to the\nhorizontal.\n\n2 Fitness Bottleneck and Limit Fitness Cloud\nIn this section we show that the fitness cloud is useful in\nidentifying a bottleneck's location at fitness level. In a first\nstep we plot the F C according to a local search heuristic.\nSo we are able to locate the bottleneck. Then modeling dynamic by the way of the limit fitness cloud allows to confirm\nthe realness of bottleneck value. In the following two computational search techniques are used: myopic hill climbing (mHC) and simulated annealing (SA). They implement\nadaptive local search; the neighbourhood is defined in terms\nof applying Hamming mutation.\n2.1 Modeling Dynamics at Fitness Level\nLet H an heuristic, we assume there is a function H(X)\nwhich allows to model the average dynamics of H at fitness level. Given an initial genotype of fitness f1 , applying\nthe heuristic generates a sequence f1 , f2 , ... by the iteration\nfk+1 = H(fk ). Our hope is to gain knowledge from function H in order to help us to predict the behaviour of the\nheuristic. To illustrate this approach, let us consider the\nheuristic (noted Hham ) corresponding to a random walk:\nstarting from a initial genotype, at each step the next genotype is chosen at random in the Hamming neighbourhood.\nEquation 1 may be reformulated in\n\u0013\n\u0012\n\u0013\n\u0012\nK+1\nK +1\nf+\n\u03b2\n(2)\nHham (f ) = 1 \u2212\nN\nN\nFrom an initial fitness value f1 less than \u03b2, the sequence\nf1 , f2 , ... increases to \u03b2. On average offspring-fitness\nis higher than parent-fitness; thus the heuristic is selectively advantageous. If fitness is greater than \u03b2, the mean\noffspring-fitness is lower than fitness: on average the heuristic is deleterious. Property {\u03b2 = 0.5} means that on average Hham is selectively neutral5 on NK-landscapes whatever epistasis is. Starting from f1 = 0.56 the heuristic generates the sequence f1 = 0.5, f2 = 0.5, .... In order to get\na visual rendering of the long term behavior of an heuristic, for each string in the genotype space a point is plotted;\nthe abscissa of which is the fitness f and the ordinate the\nfitness f \u2217 of a genotype reached after applying the heuristic a given number of times. Thus, a new scatterplot, the\nso-called Limit Fitness Cloud (noted F C \u2217 ), is drawn. We\n5H\nham\n6 Fitness\n\ninduces no effect on fitness level\nof a random initial genotype is on average closed to the mean\nfitness over the search space (f \u0304 = 0.5)\n\ndefine the following function:\n\u2217\nfmean\n(\u03c6) = meanf \u2217 (x)\nx\u2208G\u03c6\n\n\u2217\n\u2217\nand the fitness value \u03b2 \u2217 as fmean\n(\u03b2)7 . We call F Cmean\nthe\n\u2217\nrepresentative curve of fmean .\n\n2.2 Myopic Hill Climber\nA myopic hill climbing heuristic (so-called mHC) is used.\nAt each step, the fittest of all of the genotypes that can\nbe produced by a single bit flip is selected. Entire neighbourhood is searched and selection occurs in all cases, even\nwhen the best of the one-mutant neighbours of a genotype\nis less fit than it. Figure 3 (a) shows the F Cmean curve is\ncoarsely a line too: the mean offspring-fitness is in proportion to fitness, whatever the epistatic parameter K is. Relation between f \u0303mean and the length N , the epistatic parameter K and fitness f verifies the following equation:\n\u0012\n\u0013\n\u0012\n\u0013\nK+1\nK +1\n \u0303\nfmean (f ) = 1 \u2212\nf+\nE(X) (3)\nN\nN\nThe mean term E(X) is equal to E(X(N, K)) where\nX(N, K) = max(X1 , . . . , XN ) and Xi follows normal\nlaw N (0.5, \u221a 1\n). Then, correlation between parent12(K+1)\n\nfitness and the mean offspring-fitness is linear. Therefore\n\u03b2 = E(X(N, K)) is not any more constant but depends\nfrom N and K. When N is fixed, \u03b2 grows as the amount of\nepistasis decreases. A least squares regression is computed\nfrom the F Cmean set for N = 20 and K = 15, we find:\nf \u0303mean = 0.200f + 0.516\n\n(4)\n\nwhich agrees to equation 3\nThe F C allows to predict whether in the fitness space a\nbottleneck is likely to arise. We conjecture there is such a\nbottleneck in the vicinity of the \u03b2 fitness level. This means\nthat, applying mHC heuristic from a point which fitness is\nbelow \u03b2, on average the search process breaks off around \u03b2.\nIn particular from a random initial point, dynamic pushes\nfitnesses toward \u03b2. In order to validate this hypothesis, from\neach genotype as initial point, mHC is ran over 50 generations to collect the fitness of the last point encountered. All\nthese informations are got together to build up the corresponding limit fitness cloud see figure 3 (b). According to\nthe initial fitness value (abcissa) we can observe two main\ncases about the limit behavor of the mHC heuristic. Applying the heuristic a given number of times results to an equilibrium state where the mean fitness f \u2217 no longer changes\nfrom generation to generation. First, for an initial fitness below \u03b2, on average mHC \"converges\" to the fitness value \u03b2 \u2217 .\n7 of\n\ncourse, in this definition we assume that \u03b2 exists\n\n\fmetaheuristic\nmHC\nSA (T = 0.10)\nSA (T = 0.05)\nSA (T = 0.01)\nSA (Generation 50)\nSA (Generation 1000)\nSA (Generation 1900)\nSA (Generation 2450)\nnHC\n\n1\nmin\nmax\nmean\n\noffspring fitness\n\n0.8\n\n0.6\n\n0.4\n\n\u03b2\n0.645\n0.524\n0.548\n[0.604, 0.792]\n[0.686, 0.792]\n\n\u03b2\u2217\n0.667\n0.559\n0.590\n0.656\n0.560\n0.613\n0.682\n0.701\n0.746\n\n0.2\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n\u03b2\n\n0.8\n\n1\n\nparent fitness\n\nTable 1: Experimental values of \u03b2 and \u03b2 \u2217 for N = 20 and\nK = 15 with mHC, SA and nHC. The maximum fitness\nvalue for this fitness landscape is 0.792\n\n(a)\n1\nmin\nmax\nmean\n\n0.8\n\n\u03b2*\n\nlimit fitness\n\n0.6\n\n0.4\n\n0.2\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nfitness\n\n(b)\nFigure 3: Fitness Cloud under mHC: border (min and max)\nand mean (with standard deviation) (F C (a), F C \u2217 (b))\n(NK-landscape with N = 20 and K = 15)\nLet's note that \u03b2 is smaller than \u03b2 \u2217 but have the same magnitude (see tab. 1). Second, fitnesses f above \u03b2 are fixed\npoints in the fitness space (f \u2217 = f ). Let's note that there is\na transition range around \u03b2 where f \u2217 depends not linearly\non f . These experiments support the bottleneck conjecture:\nit is difficult to bypasse the \u03b2 \u2217 fitness level for the mHC\nheuritic. Of course, breaking the bottleneck may occur for\na particular initial genotype as in this study we look for the\naverage behavior only.\n2.3 Simulated Annealing\nSimulated annealing (SA) can be seen as a way of trying\nto allow solution to get away from local optima and move\ntoward fitter point. The SA algorithm employs a random\nsearch that not only accepts changes that increase the fitness function, but also some changes that decrease the fit-\n\nness value, thus allowing SA to jump out of local maxima.\nSA search technique takes its inspiration from the models\nof the annealing physical process [6]. It is search process\nbased on using a parameter which can play the role of temperature. The ability to avoid to get stuck in local optima\ndepends on the choice of initial temperature, the number of\niterations performed at each temperature, and the way the\ntemperature is decremented. At each step, one genotype\nfrom all of the genotypes that can be produced by a single\nbit flip is selected and the resulting change, \u2206f = f \u0303 \u2212 f , in\nfitness is computed. If \u2206f > 0, the new point is accepted;\nelse, it is accepted with probability e\u2206f/T , where T is the\ntemperature control parameter. One major problem with SA\nis to control the cooling process. Often the cooling schedule\nis developed by trial and error for each particular landscape.\nFirst, with regard to given temperature values, the fitness\ncloud is analyzed; then a cooling process is implemented.\nFor a given temperature T , relation between f \u0303mean , f , N ,\nK and T can be derived from equation 3. In this case,\nE(X) = E(X(f, N, K, T ))\nf \u2212 0, 5\n)+\n= 1 \u2212 \u03c6(\n\u03c3K\n\nZ\n\nf\n\n\u2212\u221e\n\n\u03c6(\n\nx \u2212 f x\u2212f\n)e T dx\n\u03c3K\n\nwhere \u03c6 and \u03a6 are respectively the density and repartition\nfunction of the reduced centered normal law. So E(X) depends, not only on N and K, but on the fitness value too.\nAs a consequence, the set F Cmean is no more represented\nby a line but by a curved shape.\nHigh temperature As predicted by our analytical study,\nat high temperature (T = 0.10), the F Cmean set is represented by a curved shape (see fig. 4 (a)). This curve crosses\nthe diagonal at point (\u03b2; \u03b2) distinctly; so it is easy to estimate \u03b2 (see tab. 1). Plotting the limit fitness cloud F C \u2217\nshows that it is difficult to bypasse the \u03b2 \u2217 bottleneck level\nfor the SA at high temperature (see fig. 4 (b) and tab. 1).\n\n\f1\n\nmin\nmax\nmean\n\n0.8\n\n0.8\n\n0.6\n\n0.6\n\noffspring fitness\n\noffspring fitness\n\n1\n\n0.4\n\n0.2\n\nmin\nmax\nmean\n\n0.4\n\n0.2\n\n0\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n0\n\n0.2\n\nparent fitness\n\n0.4\n\n(a)\n\n0.8\n\n1\n\n0.8\n\n1\n\n(a)\n1\n\nmin\nmax\nmean\n\n0.8\n\n0.8\n\n0.6\n\n0.6\n\nlimit fitness\n\nlimit fitness\n\n1\n\n0.6\n\nparent fitness\n\n0.4\n\n0.2\n\nmin\nmax\nmean\n\n0.4\n\n0.2\n\n0\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nfitness\n\n0\n\n0.2\n\n0.4\n\n0.6\n\nfitness\n\n(b)\n\n(b)\n\nFigure 4: Fitness Cloud under SA at high temperature:\nborder (min and max) and mean (with standard deviation)\n(F C (a), F C \u2217 (b)) (NK-landscape with N = 20 and K =\n15)\n\nFigure 5: Fitness Cloud under SA at medium temperature:\nborder (min and max) and mean (with standard deviation)\n(F C (a), F C \u2217 (b)) (NK-landscape with N = 20 and K =\n15)\n\nLet's note that, \u03b2 \u2217 is reached whatever the initial fitness is\n(except for extreme fitness values).\n\ncult to visualize point which abscissa is \u03b2. Examining data,\nwe can find an interval where the F Cmean curve is close to\nthe diagonal line (with a accuracy of 0.002) (see tab. 1). The\n\u2217\nset F Cmean\nis roughly represented by an horizontal line except for high fitnesses where it follows the diagonal line (see\n\u2217\nfig. 6 (b) and tab. 1). As the constant value of fmean\ncorre\u2217\nsponds to a bottleneck, \u03b2 stands for this value, although \u03b2\nis not discerned.\n\nMedium temperature At medium temperature (T =\n0.05), the fitness cloud is roughly shared by the diagonal\nline as the probability to accept deleterious mutation remains significant (see fig. 5 (a)). It is easy to estimate both\n\u03b2 and \u03b2 \u2217 (see tab. 1). The \u03b2 \u2217 fitness level appears to be attractive on the limit fitness cloud (see fig. 5 (b) and tab. 1).\nOnce again, \u03b2 \u2217 is reached whatever the initial fitness is.\nLow temperature At low temperature (T = 0.01), the\ngreatest part of the fitness cloud is above the diagonal line as\nthe probability to accept deleterious mutation is small (see\nfig. 6 (a)). The F Cmean curve is a curved shape; as fitness\nincreases, it glides slope toward the diagonal. So it is diffi-\n\nCooling process The notion of system temperature is intrinsic to the SA process. By slowly lowering the temperature of an initially random system, we encourage the elements of the system to assume an orderly, minimal energy\narrangement. In search process terms, a slow cooling can\nthus lead to an optimal state. Our annealing schedule is\ndefined as follows: temperature starts at 0.10, and drops to\n\n\f1\n\nmin\nmax\nmean\n\n0.8\n\n0.8\n\n0.6\n\n0.6\n\nlimit fitness\n\nlimit fitness\n\n1\n\n0.4\n\n0.2\n\nmin\nmax\nmean\n\n0.4\n\n0.2\n\n0\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n0\n\n0.2\n\n0.4\n\nfitness\n\n(a)\n\n0.8\n\n1\n\n0.6\n\n0.8\n\n1\n\n(b)\n1\n\nmin\nmax\nmean\n\n0.8\n\n0.8\n\n0.6\n\n0.6\n\nlimit fitness\n\nlimit fitness\n\n1\n\n0.6\n\nfitness\n\n0.4\n\n0.2\n\nmin\nmax\nmean\n\n0.4\n\n0.2\n\n0\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n0\n\n0.2\n\n0.4\n\nfitness\n\nfitness\n\n(c)\n\n(d)\n\nFigure 7: Limit fitness cloud under SA with cooling process: generation 50 (a), generation 1000 (b), generation 1900 (c),\ngeneration 2450 (d) (NK-landscape with N = 20 and K = 15)\n0.01 over a geometric decrements where T = 0.95T 8. 2450\ngenerations are performed; changes occurs each 50 generations. The cooling process is sufficiently slow such that\nfor each temperature an equilibrium state, where the mean\nfitness no longer changes from generation to generation, is\nreached. Figure 7 shows snapshots of the F C \u2217 cloud at generations 50, 100, 1900 and 2450. As for low temperature,\n\u2217\n\u03b2 \u2217 stands for the constant value of fmean\nsince \u03b2 is not\nsignificant. During the cooling process \u03b2 \u2217 increases with\ngenerations to finally, reaches its greatest value (see tab. 1).\nLet's note that the final \u03b2 \u2217 value for SA (0.701) is greater\nthat the one for mHC (0.667).\n\n8 Experience\n\nhas shown that the decrement coefficient should be between 0.8 and 0.99, with better results being found in the higher end of the\nrange\n\n3 Fitness Cloud and neutrality : Neutral Hill\nClimber\nIn the Fitness Cloud, a vertical slice represents the set of\nfitnesses that could be reached from this set of neutrality.\nConsequently the F C shows the potential interest in using\nneutral operator. To implement such an operator noted nOP,\nfirst the entire search space is partitioned according to fitness, then we are able to choose at random a genotype with\na given fitness value9 . So each genotype with the same\nfitness are connected by an elementary neutral move. To\ncombine neutral exploration with local search technique, we\ndefine the neutral Hill Climbing heuristic (so-called nHC).\nFirst mHC is applied on the current genotype g and the resulting change, \u2206f = f \u0303 \u2212 f , in fitness is computed. If\n\u2206f > 0, the new point is accepted; else, we obtain off9 with\n\nan uniform law\n\n\f1\n\nmin\nmax\nmean\n\noffspring fitness\n\n0.8\n\n0.6\n\n0.4\n\n0.2\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nparent fitness\n\n(a)\n1\n\nmin\nmax\nmean\n\n0.8\n\nlimit fitness\n\n0.6\n\nbehavor of the nHC heuristic. First, for an initial fitness\nbelow \u03b2 \u2217 = 0.746 (as for SA with low temperature, \u03b2 \u2217 is\n\u2217\nthe constant value of fmean\n), on average nHC converges\nto a fitness value close to \u03b2 \u2217 . Second, fitnesses above \u03b2 \u2217\nare fixed points in the fitness space. Therefore the \u03b2 \u2217 fitness level is a bottleneck for the nHC heuritic. In nHC,\nleaving the genotype invariant instead of applying nOP, the\nfitness cloud remains identical. The F C \u2217 allows to show\nthe influence of nOP: neutral exploration allows to find better fitnesses. Let's note that the fitness bottleneck for nHC\n(0.746) is greater that the one for both mHC (0.667) and\nSA (0.701). These experiments show the potential interest in using neutral operator when each plateau is a graph\nconnected by a neutral operator. Of course this is an ideal\ncase, in more realistic situations we must consider the topology graph of neutral sets induces by hamming mutation or\na specific neutral operator. In real word problems one must\ntake into account the computational cost in using neutral operator as well the availability of such operator. However in\nmany problems neutral operator may derive from specific\nknowledge as symetry properties or redondancies.\n\nConclusion\n\n0.4\n\n0.2\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nfitness\n\n(b)\nFigure 6: Fitness Cloud under SA at low temperature: border (min and max) and mean (with standard deviation) (F C\n(a), F C \u2217 (b)) (NK-landscape with N = 20 and K = 15)\n\nspring by applying nOP to the genotype g. Within a neutral\nset there is no productive gradient information, then the gain\nfitness comes from Hamming based mutation only. The relation between f \u0303mean , f , N and K can be derived from\nequation 3. In this case, E(X) = E(X(f, N, K)) where\nX(f, N, K) is max(f, X1 , . . . , XN ) with Xi follows normal law N (0.5, \u221a 1\n). As a consequence, the set\n12(K+1)\n\nF Cmean is represented by a curved shape. Figure 8 shows\nthe F Cmean curve is coarsely a line except for high fitness\nvalues where it glides slope toward the diagonal. So it is\ndifficult to visualize point which abscissa is \u03b2. Examining data, we can find an interval where the F Cmean curve\nis close to the diagonal line with a accuracy of 0.002 (see\ntab. 1). To support the bottleneck conjecture the limit fitness\ncloud is plotted (see fig. 8 (b)). According to the initial fitness value we can observe two main cases about the limit\n\nIn this paper we have presented the Offspring-Parents Fitness Cloud. The Fitness Cloud shows evolvability as well\nneutrality and dynamic at fitness level of local search heuristic. We have used FC to formulate the bottleneck conjecture:\nthere is a fitness level in the NK-landscape that causes local\nsearch process to slow down and stop. Moreover the FC is\nuseful in identifying the bottleneck's location in the neighbourhood of a fitness value \u03b2. This conjecture deals with\nthe average behavior of local search heuristics only. To confirm this conjecture, the Limit Fitness Cloud is introduced;\nit gives a visual rendering of the long term behavior. The\nexperiments performed on NK-landscape with Hill Climbing, Simulated Annealing and Neutral Hill Climbing support our conjecture. Indeed there is a fitness level \u03b2 \u2217 close\nto \u03b2 which is difficult to bypass. FC can also represent the\nneutrality of landscape. So, we have designed the Neutral\nHill Climbing (nHC) which shows how to exploit the information about neutrality given by FC. We have found experimentaly that the bottleneck for nHC is greater that the one\nfor both mHC and SA.\nIn this work exhaustive enumeration of the search space is\nused; future works should address the question of how to\nget FC from data collected through random sampling or during the search process. To track the dynamics of population\nbased heuristics, as genetic algorithms, notion of population\nmust be taken into account. The approach can be extended\nto others operators than local variations, in particular we\nproject to draw the FC for crossover. Another extension is\nto study the effect of choosing one representation: for in-\n\n\f1\n\n967\u2013976, 1996.\n\nmin\nmax\nmean\n\n[3] J. J. Grefenstette. Predictive models using fitness distributions of genetic operators. In D. Whitley, editor,\nFoundations of Genetic Algorithms, San Mateo, CA,\n1995. Morgan Kaufmann Publishers.\n\noffspring fitness\n\n0.8\n\n0.6\n\n[4] S. A. Kauffman. \"The origins of order\". Selforganization and selection in evolution. Oxford University Press, New-York, 1993.\n\n0.4\n\n[5] M. Kimura. The Neutral Theory of Molecular Evolution. Cambridge University Press, Cambridge, UK,\n1983.\n\n0.2\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nparent fitness\n\n[6] S. Kirkpatrick, C. D. Gelatt Jr., and M. P. Vecchi. Optimization by simulated annealing. In Science, pages\n671\u2013680, 1983.\n\n(a)\n1\n\nmin\nmax\nmoy\n\n[7] B. Manderick, M. de Weger, and P. Spiessens. The\ngenetic algorithm and the structure of the fitness landscape. Proceedings of the Fourth International Conference on Genetic Algorithms, pages 143\u2013150, 1991.\n\n0.8\n\nlimit fitness\n\n0.6\n\n[8] Helge Ros\u00e9, Werner Ebeling, and Torsten Asselmeyer.\nThe density of states - a measure of the difficulty of\noptimisation problems. In Parallel Problem Solving\nfrom Nature, pages 208\u2013217, 1996.\n\n0.4\n\n0.2\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\nfitness\n\n(b)\nFigure 8: Fitness Cloud under nHC: border (min and max)\nand mean (with standard deviation) (F C (a), F C \u2217 (b))\n(NK-landscape with N = 20 and K = 15)\nstance, what happen to the FC when switching from Integer\ncoding to Gray coding ? The NK-landscapes can be useful for initial investigations, but results gained on them cannot be guaranteed to transfer to real word problems in general. So we obviously have to study fitness cloud and the\nfitness bottleneck hypothesis on other problems than NKlandscapes.\n\nBibliography\n[1] Lee Altenberg. The evolution of evolvability in genetic programming. In In Kinnear, Kim (editor).\nAdvances in Genetic Programming. Cambrige, MA,\npages 47\u201374. The MIT Press, 1994.\n[2] L. Altenberg G. P. Wagner. Complexes adaptations\nand the evolution of evolvability. In Evolution, pages\n\n[9] Smith, Husbands, Layzell, and O'Shea. Fitness landscapes and evolvability. Evolutionary Computation,\n1(10):1\u201334, 2001.\n[10] E. D. Weinberger. Correlated and uncorrelatated fitness landscapes and how to tell the difference. In Biological Cybernetics, pages 63:325\u2013336, 1990.\n[11] E. D. Weinberger. NP completeness of kauffman's NK\nmodel, a tuneable rugged fitness landscape. Santa Fe\nInstitute: Working Papers 96-02-003, 1996.\n[12] S. Wright. The theory of gene frequency. In Evolution\nand the genetics of Population, volume 2, pages 120\u2013\n143. University of Chicago Press, 1969.\n\n\f1\n\nfitness enfant\n\n0.8\n\n0.6\n\n0.4\n\n0.2\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\nfitness parents\n\n0.8\n\n1\n\n\f1\n\n0.8\n\n0.6\n\n0.4\n\n0.2\n\n0\n0\n\n50\n\n100\n\n150\n\n200\n\n250\n\n\f"}