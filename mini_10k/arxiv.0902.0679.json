{"id": "http://arxiv.org/abs/0902.0679v2", "guidislink": true, "updated": "2009-10-05T15:16:16Z", "updated_parsed": [2009, 10, 5, 15, 16, 16, 0, 278, 0], "published": "2009-02-04T16:16:13Z", "published_parsed": [2009, 2, 4, 16, 16, 13, 2, 35, 0], "title": "Building Merger Trees from Cosmological N-body Simulations", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0902.0866%2C0902.2038%2C0902.4221%2C0902.2329%2C0902.2476%2C0902.1297%2C0902.3641%2C0902.3938%2C0902.0949%2C0902.1388%2C0902.4222%2C0902.1786%2C0902.2403%2C0902.1251%2C0902.0262%2C0902.3726%2C0902.2641%2C0902.0822%2C0902.1385%2C0902.2075%2C0902.0475%2C0902.3398%2C0902.2698%2C0902.1673%2C0902.1060%2C0902.0389%2C0902.1212%2C0902.3113%2C0902.0299%2C0902.2577%2C0902.3159%2C0902.4286%2C0902.4200%2C0902.1039%2C0902.0934%2C0902.3783%2C0902.3107%2C0902.3861%2C0902.1610%2C0902.1679%2C0902.0699%2C0902.2342%2C0902.2375%2C0902.1719%2C0902.0615%2C0902.4664%2C0902.4810%2C0902.4394%2C0902.4417%2C0902.0332%2C0902.2972%2C0902.0036%2C0902.4093%2C0902.0679%2C0902.2676%2C0902.4854%2C0902.2811%2C0902.2260%2C0902.4437%2C0902.2973%2C0902.3053%2C0902.4343%2C0902.3114%2C0902.2653%2C0902.4363%2C0902.4725%2C0902.2148%2C0902.2936%2C0902.3165%2C0902.3680%2C0902.4595%2C0902.3261%2C0902.0993%2C0902.2474%2C0902.1632%2C0902.2793%2C0902.0518%2C0902.0120%2C0902.3686%2C0902.1092%2C0902.0046%2C0902.0213%2C0902.4265%2C0902.0739%2C0902.2710%2C0902.3116%2C0902.3115%2C0902.4124%2C0902.2633%2C0902.0772%2C0902.1424%2C0902.1068%2C0902.1504%2C0902.0819%2C0902.1226%2C0902.3888%2C0902.4131%2C0902.0061%2C0902.3862%2C0902.1404%2C0902.1606&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Building Merger Trees from Cosmological N-body Simulations"}, "summary": "Although a fair amount of work has been devoted to growing Monte-Carlo merger\ntrees which resemble those built from an N-body simulation, comparatively\nlittle effort has been invested in quantifying the caveats one necessarily\nencounters when one extracts trees directly from such a simulation. To somewhat\nrevert the tide, this paper seeks to provide its reader with a comprehensive\nstudy of the problems one faces when following this route. The first step to\nbuilding merger histories of dark matter haloes and their subhaloes is to\nidentify these structures in each of the time outputs (snapshots) produced by\nthe simulation. Even though we discuss a particular implementation of such an\nalgorithm (called AdaptaHOP) in this paper, we believe that our results do not\ndepend on the exact details of the implementation but extend to most if not all\n(sub)structure finders. We then highlight different ways to build merger\nhistories from AdaptaHOP haloes and subhaloes, contrasting their various\nadvantages and drawbacks. We find that the best approach to (sub)halo merging\nhistories is through an analysis that goes back and forth between\nidentification and tree building rather than one which conducts a\nstraightforward sequential treatment of these two steps. This is rooted in the\ncomplexity of the merging trees which have to depict an inherently dynamical\nprocess from the partial temporal information contained in the collection of\ninstantaneous snapshots available from the N-body simulation.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0902.0866%2C0902.2038%2C0902.4221%2C0902.2329%2C0902.2476%2C0902.1297%2C0902.3641%2C0902.3938%2C0902.0949%2C0902.1388%2C0902.4222%2C0902.1786%2C0902.2403%2C0902.1251%2C0902.0262%2C0902.3726%2C0902.2641%2C0902.0822%2C0902.1385%2C0902.2075%2C0902.0475%2C0902.3398%2C0902.2698%2C0902.1673%2C0902.1060%2C0902.0389%2C0902.1212%2C0902.3113%2C0902.0299%2C0902.2577%2C0902.3159%2C0902.4286%2C0902.4200%2C0902.1039%2C0902.0934%2C0902.3783%2C0902.3107%2C0902.3861%2C0902.1610%2C0902.1679%2C0902.0699%2C0902.2342%2C0902.2375%2C0902.1719%2C0902.0615%2C0902.4664%2C0902.4810%2C0902.4394%2C0902.4417%2C0902.0332%2C0902.2972%2C0902.0036%2C0902.4093%2C0902.0679%2C0902.2676%2C0902.4854%2C0902.2811%2C0902.2260%2C0902.4437%2C0902.2973%2C0902.3053%2C0902.4343%2C0902.3114%2C0902.2653%2C0902.4363%2C0902.4725%2C0902.2148%2C0902.2936%2C0902.3165%2C0902.3680%2C0902.4595%2C0902.3261%2C0902.0993%2C0902.2474%2C0902.1632%2C0902.2793%2C0902.0518%2C0902.0120%2C0902.3686%2C0902.1092%2C0902.0046%2C0902.0213%2C0902.4265%2C0902.0739%2C0902.2710%2C0902.3116%2C0902.3115%2C0902.4124%2C0902.2633%2C0902.0772%2C0902.1424%2C0902.1068%2C0902.1504%2C0902.0819%2C0902.1226%2C0902.3888%2C0902.4131%2C0902.0061%2C0902.3862%2C0902.1404%2C0902.1606&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Although a fair amount of work has been devoted to growing Monte-Carlo merger\ntrees which resemble those built from an N-body simulation, comparatively\nlittle effort has been invested in quantifying the caveats one necessarily\nencounters when one extracts trees directly from such a simulation. To somewhat\nrevert the tide, this paper seeks to provide its reader with a comprehensive\nstudy of the problems one faces when following this route. The first step to\nbuilding merger histories of dark matter haloes and their subhaloes is to\nidentify these structures in each of the time outputs (snapshots) produced by\nthe simulation. Even though we discuss a particular implementation of such an\nalgorithm (called AdaptaHOP) in this paper, we believe that our results do not\ndepend on the exact details of the implementation but extend to most if not all\n(sub)structure finders. We then highlight different ways to build merger\nhistories from AdaptaHOP haloes and subhaloes, contrasting their various\nadvantages and drawbacks. We find that the best approach to (sub)halo merging\nhistories is through an analysis that goes back and forth between\nidentification and tree building rather than one which conducts a\nstraightforward sequential treatment of these two steps. This is rooted in the\ncomplexity of the merging trees which have to depict an inherently dynamical\nprocess from the partial temporal information contained in the collection of\ninstantaneous snapshots available from the N-body simulation."}, "authors": ["D. Tweed", "J. Devriendt", "J. Blaizot", "S. Colombi", "A. Slyz"], "author_detail": {"name": "A. Slyz"}, "author": "A. Slyz", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1051/0004-6361/200911787", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/0902.0679v2", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0902.0679v2", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "19 pages, 28 figures", "arxiv_primary_category": {"term": "astro-ph.CO", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "astro-ph.CO", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0902.0679v2", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0902.0679v2", "journal_reference": "A&A 506, 647-660 (2009)", "doi": "10.1051/0004-6361/200911787", "fulltext": "c ESO 2018\n\nAstronomy & Astrophysics manuscript no. 11787\nNovember 8, 2018\n\nBuilding merger trees from cosmological N -body simulations\ntowards improving galaxy formation models using subhaloes\n\narXiv:0902.0679v2 [astro-ph.CO] 5 Oct 2009\n\nD. Tweed12 , J.Devriendt1 2 , J. Blaizot1 , S. Colombi3 , and A. Slyz2\n1\n\n2\n3\n\nUniversit\u00e9 de Lyon, Lyon, F-69003, France;\nUniversit\u00e9 Lyon 1, Villeurbanne;\nCNRS, UMR 5574, Centre de Recherche Astrophysique de Lyon;\nObservatoire de Lyon, Saint-Genis Laval, F-69230;\nEcole Normale Sup\u00e9rieure de Lyon, F-69007\nAstrophysics, University of Oxford, Keble Road, Oxford OX1 3RH, UK;\nInstitut Astrophysique de Paris (IAP)\n98 bis Boulevard d'Arago, F-75014 Paris, France\n\nReceived month day, year; accepted month day, year\nABSTRACT\n\nContext. In the past decade or so, using numerical N-body simulations to describe the gravitational clustering of dark matter (DM)\nin an expanding universe has become the tool of choice for tackling the issue of hierarchical galaxy formation. As mass resolution\nincreases with the power of supercomputers, one is able to grasp finer and finer details of this process, resolving more and more of\nthe inner structure of collapsed objects. This begs one to revisit time and again the post-processing tools with which one transforms\nparticles into \"invisible\" dark matter haloes and from thereon into luminous galaxies.\nAims. Although a fair amount of work has been devoted to growing Monte-Carlo merger trees that resemble those built from an Nbody simulation, comparatively little effort has been invested in quantifying the caveats one necessarily encounters when one extracts\ntrees directly from such a simulation. To somewhat revert the tide, this paper seeks to provide its reader with a comprehensive study\nof the problems one faces when following this route.\nMethods. The first step in building merger histories of dark matter haloes and their subhaloes is to identify these structures in each of\nthe time outputs (snapshots) produced by the simulation. Even though we discuss a particular implementation of such an algorithm\n(called AdaptaHOP) in this paper, we believe that our results do not depend on the exact details of the implementation but instead\nextend to most if not all (sub)structure finders. To illustrate this point in the appendix we compare AdaptaHOP's results to the standard\nfriend-of-friend (FOF) algorithm, widely utilised in the astrophysical community. We then highlight different ways of building merger\nhistories from AdaptaHOP haloes and subhaloes, contrasting their various advantages and drawbacks.\nResults. We find that the best approach to (sub)halo merging histories is through an analysis that goes back and forth between\nidentification and tree building rather than one that conducts a straightforward sequential treatment of these two steps. This is rooted\nin the complexity of the merging trees that have to depict an inherently dynamical process from the partial temporal information\ncontained in the collection of instantaneous snapshots available from the N-body simulation. However, we also propose a simpler\nsequential \"Most massive Substructure Method\" (MSM) whose trees approximate those obtained via the more complicated non\nsequential method.\nKey words. galaxy formation \u2013 merger history \u2013 substructure \u2013 methods:numerical\n\n1. Introduction\nDark matter haloes and their mass assembly histories are the\nfundamental bricks of any non linear structure formation theory based on the current concordance (\u039bCDM) model which\nhas been so successful at reproducing large scale structure data\n(Dunkley et al. 2009). It is therefore natural that a lot of effort has been devoted to finding semi-analytic descriptions of\nthis process. These culminated with the seminal papers on the\nextended Press Schechter (EPS) formalism (Bond et al. 1991;\nLacey & Cole 1994), as it became possible to make Monte-Carlo\nrealisations of merging histories of haloes using EPS. However,\nit was also realised early on that shortcomings of the EPS theory\nneeded to be circumvented (non spherical collapse, loss of internal structure, no spatial information) to get accurate halo mass\ndistributions and merging tree histories (Sheth & Lemson 1999;\nSomerville & Primack 1999).\n\nFor a detailed critique of the EPS theory, we refer the interested reader to Benson et al. (2005), however we point out one of\nthe most worrisome of its shortcomings. It may seem legitimate\nto generate merging trees for a representative sample of haloes at\na given redshift and then attempt to construct the halo mass function at an earlier time, combining the branches of these MonteCarlo merging trees, with each branch appropriately weighted\naccording to the EPS theory. However, in doing so, one will not\nobtain good agreement between this mass function and the mass\nfunction of haloes extracted directly from N-body simulations at\nthis early epoch. This discrepancy can be tuned empirically, but\nthere is no theoretical justification as to why such a correction\nshould be made (Benson et al. 2001). This explains why people\ncalibrate Monte-Carlo merging trees against those generated using N-body simulations, as done recently by Neistein & Dekel\n(2008) and Parkinson et al. (2008). Indeed merging trees directly built from N-body simulations naturally circumvent the\n\n\f2\n\nD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nshortcomings of the Monte-Carlo methods. Moreover with the\ndemocratisation of (super)computer power N-body simulations\nare becoming more and more available and resolved, and this implies that it will inevitably make more and more sense to build\ntrees directly from them in the future.\nHowever, as underlined in the hierarchical galaxy formation\nprimer of Baugh (2006), the construction of a merger tree from\nthe outputs of an N-body simulation is not a trivial matter. The\nmass of a halo can decrease with time since haloes may spatially overlap one another at a given time output and therefore\nbe blended together by the group-finding algorithm, then separate at the next time output for good, or come back together\nagain later on. This paper is therefore devoted to identifying and\nquantifying the occurrences of these \"anomalies\" that plague Nbody merger trees. It also proposes different methods of dealing\nwith them and contrasts/compares their advantages and disadvantages.\nIts outline is as follows: in the first part (Sect. 2) we discuss\nthe issue of dark matter halo and subhalo detection in cosmological N-body simulations; in the second (Sect 3) we build N-body\nmerger histories based on three methods we use to construct subhaloes. We use these merger trees to pitch these methods against\none another. We draw our conclusions in the third part (Sect. 4).\n\n2. Dark matter halo and subhalo detection\nMost algorithms commonly used to identify dark matter haloes\nin N-body cosmological simulations are based either on a percolation algorithm, as the so called friend-of-friend (FOF) algorithm (Huchra & Geller 1982; Davis et al. 1985) or a prescription to identify local maxima of the density field (e.g.\nDENMAX, Gelb & Bertschinger (1994); SOD, Lacey & Cole\n(1994); BDM, Klypin et al. (1999); HOP, Eisenstein & Hut\n(1998)). With computational power rapidly increasing, these\nalgorithms have been recently extended to probe the inner\nstructure of the haloes and detect subhaloes within them (e.g.\nIsoDen, Pfitzner & Salmon (1996); SKID, Ghigna et al. (1998);\nHFOF, Klypin et al. (1999); SUBFIND, Springel et al. (2001);\nAdaptaHOP, Aubert et al. (2004); MHF, Gill et al. (2004) and its\nsuccessor AHF, Knollmann & Knebe (2009)).\nNote however that, in the best of cases, these algorithms proceed in two consecutive steps: first they identify the halo in real\n(3 dimensional (3D)) space, and then they use velocity space\ninformation to \"refine\" the composition of their haloes (i.e. decide if a particle is gravitationally bound to it or not). Ultimately,\nto obtain the most reliable results, one would want to define\nhaloes as structures detected directly in the 6 dimensional (6D)\nphase space (for a review and extensive comparison of the methods which have been proposed to do that see Maciejewski et al.\n(2009a)), but the developments in that direction are pretty recent (Diemand et al. 2006; Maciejewski et al. 2009b) so our approach in this paper remains three dimensional. Moreover, in\npractise, the bound structures detected in 6D space are not very\ndifferent from the 3D ones, except that they tend to be systematically (albeit slightly) more massive (Maciejewski et al. 2009b).\nIn light of the previous comments, we feel it is a fair claim to\nsay that none of the 3D algorithms are completely satisfactory,\nand that the results of the analysis of any output of a cosmological N-body simulation in terms of halo/subhalo detection will, to\na certain extent, depend on the choice of algorithm used to perform that detection. Bearing these limitations in mind we choose\nAdaptaHOP (Aubert et al. 2004) as our halo and subhalo finder\nin this work.\n\nWe first start by a brief description of this algorithm. We then\ndiscuss the advantages and disadvantages arising from three natural but different methods to select subhaloes with AdaptaHOP:\nthe Density Profile Method (DPM), the Most massive Sub-node\nMethod (MSM) and the Branch History Method (BHM).\n2.1. Dark matter halo detection\n\nIn this section, we will be concerned with the way one can split\nan ensemble of particles in N-body simulation snapshots into\nDM haloes and subhaloes. In other words, we want to group\ntogether particles on the basis of the instantaneous values of their\npositions (and velocities) alone, using the a priori knowledge\ngleaned from the N-body simulation itself that positions contain\nthe most accurate information. However, already at this point,\nwe emphasise that the merger history of haloes are imprinted in\nthe particle distribution. For instance, after a merger with another\nhalo, a structure can survive as a subhalo which will be present\nas a local density maxima within the particle distribution of its\nhost halo.\nIn the appendix, we compare in details the most widely used\nhalo finder FOF to the AdaptaHOP algorithm that we will use to\nmonitor substructure. Here, we simply point out that FOF consists in grouping together particles which are closer than a distance \u01eb = b\u00d7(mean inter-particle distance). Usually b is chosen\nto be 0.2, which closely matches an average halo over-density\nof 178 \u00d7 \u03c1c (where \u03c1c is the critical density, i.e. the matter density necessary for the Universe to be flat in the absence of other\nenergy sources), obtained when solving the classic spherical collapse of a \"top-hat\" density perturbation in an Einstein-de Sitter\nuniverse. To optimise the mass resolution of the N-body simulation, haloes containing at least 20 particles are considered as\nbound objects. Obviously, using such a threshold is not the best\nway to select bound structures, because (i) it ignores the kinetic\nand potential energy of particles (ii) even if it was energetically\njustified, a halo sitting exactly on the threshold could still \"lose\"\na particle by interacting with its environment and not be detected\nin the following snapshot of the simulation. However, computing the potential energy of each particle belonging to a halo is\nvery expensive CPU wise, and at the same time inaccurate due\nto both the pre-selection process of the halo members, which is\nnecessarily based on a somewhat arbitrary spatial/velocity density cut, and the necessity to make do with a small number of\nparticles per halo to maximise the halo mass range spanned by\nthe simulation. This experimental threshold of 20 is justified a\nposteriori by the fact that provided the time span between snapshots is not much larger than 200 Myrs, less than 30 % of haloes\nwith this many particles are lost between two consecutive outputs (see e.g. Fig. A.4).\nIn principle, the simple FOF algorithm can be used to detect\nsubstructures, simply by running with smaller and smaller values\nfor the linking length (Klypin et al. 1999). However, this method\nis quite inefficient because a whole range of values for b needs to\nbe explored since real substructures (i) are embedded within one\nanother and (ii) have different density contrasts due to a different\nepoch of collapse and tidal encounters. Furthermore, there exists\nno obvious physical criterion to pick the \"best\" value of b corresponding to a global level of substructure, as such a criterion\nwould depend on merging history and therefore is prone to vary\nfrom object to object.\nInstead of relying directly on single particle positions to\nidentify substructure as the FOF would do, we can go a small\nstep further and remark that substructures are going to be located at local maxima of their host halo density field, so that\n\n\fD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nthe natural way to detect them is to compute this density field.\nThis simple assertion constitutes the core of the AdaptaHOP algorithm (as well as that of many others that we listed earlier)\nwhich can roughly be summarised by the following steps (see\nAppendix B of Aubert et al. (2004) for details) :\n1. For each particle in the N-body simulation, find the n closest\nneighbours using your favourite oct-tree algorithm (n has a\ntypical value comprised between 20 and 64, we use 20 in this\npaper). The density \u03c1i , associated to particle i of mass mi is\nthen computed using the following equation:\n\uf8eb\nn\n\u0012 r \u0013\uf8f6\uf8f7\nX\nVbox \uf8ec\uf8ec\uf8ec\uf8ec\nij \uf8f7\n\uf8f7\uf8f7\uf8f7\n(1)\nm j \u2217 spline\n\u03c1i =\n\uf8ecmi +\nV \uf8ed\nr \uf8f8\nr\n\n1\n\nHere m j is the mass of particle j (one of i's n closest neighbours), ri j is the distance between particles i and j, and\nr = 0.5 \u00d7 max(ri j , j \u2208 {1, n}) is the SPH smoothing length\nfor particle j. Vbox and Vr are the volumes of the simulation box and of a sphere of radius r respectively, so their\nratio yields the normalisation of the density across the box.\nThe spline function is the well-known Smoothed Particle\nHydrodynamics (SPH) kernel:\nspline(x) = 1 \u2212 (3/2)x2 + (3/4)x3 for 0 < x \u2264 1\nspline(x) =\n(1/4)(2 \u2212 x)3\nfor 1 < x \u2264 2\nspline(x) =\n0\nfor 2 < x\n\n2. Walking from particle to particle, identify local maxima\nthroughout the density field. Apply a first density threshold\n\u03c1t = 80 (which roughly corresponds to b = 0.2 used as standard by the FOF algorithm) to all particles, and link particles with a density above \u03c1t to their closest local maximum.\nThese groups of particles are defined as (sub)structures.\n3. Identify saddle points in the density field between these\ngroups. Use these saddle points to create branches connecting maxima together, in order to build a structure tree i.e. a\nhierarchy of nodes where each node contains a collection of\nparticles whose associated density is enclosed between two\nvalues. The lowest value is the density threshold used to create the first node; the highest is the density associated to the\nlowest saddle point (if any) detected inside it. The lowest\n(\"first\") level nodes are created by linking groups together\nwhose saddle point is above the first threshold \u03c1t . The node\nstructure tree is then created by sorting groups in ascending\norder according to the value of the density associated with\ntheir saddle points.\nThis last item is best explained by Fig. 1 where the nodes\nare represented by an ellipse, and sorted according to their order\nof creation. The arrows represent how nodes are linked to one\nanother: the first node to be created in this example is node 1,\nwith all its particles having a density higher than \u03c1t ; then the\nlowest saddle point density is \u03c123 which separate nodes 2 and\n3. The particles of node 1, whose density is greater than \u03c123 are\nthen split between node 2 and node 3 depending on how close\nthey are from the density maxima of these 2 nodes. The same\nprocedure is then repeated to create nodes 4 and 5 from node\n3 using a new density threshold \u03c145 . This eventually leads to\ndefining nodes 5, 6, 7, 8, 9 as substructures or \"leaves\" because\ntheir particles cannot be cannot be split anymore between higher\nlevel nodes.\nWhereas we can logically define a AdaptaHOP halo as the\ncollapsed node structure tree corresponding to a group of particles above the \u03c1t density threshold, its decomposition into a\n\n3\n\nmain halo and a collection of subhaloes is more tricky. The main\nproblem lies in the fact that nodes are not in general associated\nwith physical objects. Only end-of-chain nodes, i.e. leaves, have\na physical meaning, so we have to re-arrange the node structure\ntree in order to build the main halo and the subhaloes. We tackle\nthis issue in the next subsection (subhalo detection).\n\n\u03c1\n8\n\u03c189\n\n7\n\n6\n\n4\n\n\u03c167\n\u03c145\n\n9\n\n2\n\n5\n\n3\n\n\u03c123\n\u03c1\n\n1\n\nt\n\nFig. 1. Example of a node structure tree as computed with\nAdaptaHOP. Ellipses are nodes. The arrows show relationship\nbetween nodes. In a branch of the tree two levels are separated by\na saddle point (indicated by a dashed line) in the density profile.\nLeaves in the node structure tree are shown in grey. More massive leaves are represented by larger circles. Density of nodes\ndecreases from top to bottom.\n\n2.2. Dark matter subhalo detection: One step methods\n\nThese last remarks naturally lead us to address the issue of substructure identification, i.e. the detection of subhaloes within\nhaloes as well as subhaloes within subhaloes. The main problem we are faced with concerns the node structure built with\nAdaptaHOP and described at the very beginning of the previous\nsection: nodes are not in general associated with physical objects. Only the end-of-chain nodes, i.e. the leaves, have a physical meaning as they are the only true local density maxima in the\ndensity profile of their host halo. Since we need to define physical objects as subhaloes, a method is needed to create a tree comprised of a main halo and its subhaloes from the node structure\ntree computed by AdaptaHOP. We propose several such methods in this section, and compare/contrast their advantages and\ndisadvantages in the next (Merger Histories).\nThe obvious choice would be to define as subhaloes all the\nleaves in the node structure tree. Still referring to the example\nshown in Fig. 1, this means that we would define nodes 5, 6, 7, 8,\n9 as subhaloes (shown in grey in this figure) and associate nodes\n1, 2, 3 and 4 (in white) to the main halo. However, this method\nis not very satisfying because it leads to the loss of the hierarchy\nof subhaloes: we would be left with only 2 levels of structures,\nmaking it impossible to account for the presence of a subhalo\nwithin another subhalo. Moreover not all density maxima can\nbe defined as subhaloes, as one naturally expects the main halo\nitself to be centered on a density maximum.\nFor this reason, one is forced to lay down two simple, intuitive rules to build a halo tree:\n1. The main halo and each of the subhaloes of the halo tree\nmust contain one unique leaf from the node structure tree.\n\n\f4\n\nD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\n2. The hierarchy between nodes of the node structure tree must\nbe turned into a hierarchy of halo, subhaloes, sub-subhaloes\netc ... i.e. when a node contains two leaves, one of the leaves\nis defined as the subhalo and the other one, together with the\nnode, forms the host (sub)halo of this subhalo.\n\n8\n\n9\n\n7\n\n6\n\n4\n\nEven though these two rules are enough to define a halo tree,\nthey do not by any means, guarantee the unicity of the solution.\nIn order to remain consistent with the basic principle of detection algorithms, we only consider methods involving particle positions to build our halo trees in this paper. In other words, we\nonly authorise ourselves to distinguish between (sub)structures\nbased on two physical quantities: density or mass.\nArguably, the most natural thing consists in building this\nhalo tree by collapsing the node structure tree along a branch\ncontaining the most dense leaf: the particles contained in this leaf\nare (arbitrarily) chosen to be part of the main halo itself, along\nwith all the particles contained in the lower node levels in which\nthe leaf is included, until we reach the first node (lowest level).\nWe then define subhaloes by repeating this procedure for the\nsecond most dense leaf, and so on and so forth, until all leaves\nhave been accounted for. We call this method the Density Profile\nMethod (DPM) and illustrate how it works in Fig. 2, which is to\nbe compared to Fig. 1 depicting the original tree node structure.\nAs node 8 is the leaf with the highest density, and is spatially\nincluded in node 4, itself being included in node 3, itself being included in node 1, we simplify the tree node by collapsing\nbranch 8-4-3-1 into a single, main halo (1 \u222a 3 \u222a 4 \u222a 8), and replace solid lines and arrows around nodes 8,4,3 with dashes in\nFig. 2 to mark that their particles are now part of a unique object.\nNote that the centre of the main halo is therefore located in leaf\n8. Moving on to the second highest density leaf 9, we find that\nit is now only included in node 1 since nodes 3 and 4 have been\nremoved, and therefore we have to count it as a subhalo of halo\n(1 \u222a 3 \u222a 4 \u222a 8). Leaf 7 comes next, which is contained in node 2\nwhich is itself included in the main halo: we therefore collapse\nthe branch starting from leaf 7 into a unique subhalo (7 \u222a 2) of\nhalo (1 \u222a3 \u222a4 \u222a8). Leaf 6 is spatially included in this new (7 \u222a2)\nsubhalo, it is therefore a subhalo of this subhalo. Finally, leaf 5\nstands alone in halo (1 \u222a 3 \u222a 4 \u222a 8) since we removed node 3:\nit becomes yet another of its subhaloes. It is obvious that this\nsolution follows the two rules we layed out for defining haloes\nand subhaloes as objects with different levels in the structure tree\nbecause each of the main halo (1 \u222a 3 \u222a 4 \u222a 8) on level 1, its three\nsubhaloes (9,7 \u222a 2,5) on level 2, and the unique sub-subhalo (6)\non level 3, contain a single leaf from the original node tree.\nMoreover, from this simple example, we can easily understand how changing the criterion to pick the first leaf - for example picking the most massive one instead of the most dense\n-, we would have defined 1 \u222a 2 \u222a 7 as the main halo , and found\nit had two subhaloes, 3 \u222a 4 \u222a 8, and 6. Finally, instead of having\nnode 6 as the only level 3 structure of the halo structure three,\nboth leaves 5 and 9 would be subhaloes of subhalo 3 \u222a 4 \u222a 8.\nWe call this second method the Most massive Sub-node Method\n(MSM). A fundamental difference between halo trees built using\nDPM and MSM is that the centre of the main halo is now located\nin leaf 7 (MSM) instead of leaf 8 (DPM). We also emphasise that\nthe criterion used to group nodes to form haloes and subhaloes\nhas an effect not only on the mass of the main halo but on the\nhierarchy (level number) of subhaloes as well.\n\n2\n\n5\n\n3\n\n1\n\nFig. 2. Halo tree obtained from the node structure tree shown in\nFig. 1 using the DPM method. Haloes and subhaloes are created\nby collapsing several nodes together. More massive leaves are\nrepresented by larger circles. Density of nodes decreases from\ntop to bottom. Nodes and connections removed from the node\nstructure tree are shown with dashed lines.\n2.2.1. Individual examples\n\nBoth methods are then run on the same N-body simulation described in paper GalICS I (Hatton et al. 2003). This simulation\ncontains 2563 particles of 8.03 109 M\u2299 enclosed in a volume\nof 150 comoving Mpc on a side, with periodic boundary conditions. Values for cosmological parameters are given in Table1.\nTable 1. Simulation details\nNumber of bodies\nParticle mass\nBox size\nOmega matter \u03a9 M\nOmega lambda \u03a9\u039b\nHubble parameter h\n\u03c38\ninitial redshift\n\n2563\n8.03 109 M\u2299\n150 Mpc\n0.333\n0.667\n0.667\n0.880\n35.6\n\nWe now present two example of haloes using the MSM\nmethod to define halos and their hierarchy of subhaloes. Our\ngoal is to check by eye (arguably the best tool to do the job)\nthat we can detect all the subhaloes.\nAs shown in Fig. 3, the MSM can detect subhaloes quite\nwell, for a quite relaxed halo of mass 1.2 1014 M\u2299 with its 15\nsubhaloes, and of mass 1014 M\u2299 without them. It is able to neatly\nremove all subhaloes as shown in the top right panel: no spurious\nholes appear in the density field where these subhaloes have been\nremoved. The main halo (top right panel) has a smooth profile\neven though the subhaloes shown on the bottom left panel come\nin various shapes and sizes. Most of the subhaloes shown here\nhave the main halo as host. It is easier to observe the size of the\nvarious subhaloes by drawing their \"virial\" region (defined here\nas a sphere centered on the centre of the halo or subhalo and\nwhose radius is such that the average density is < \u03c1r >= \u03c1200 =\n200 \u00d7 \u03c1c ) which are shown on the bottom left panel.\nMore revealing is how MSM performs when the halo is still\nperturbed by a major merger with another object (i.e. when the\nmass ratio between the two haloes is higher than 1:3). Such a\ncase is detailed in Fig. 4. The mass of the AdaptaHOP halo (with\nsubhaloes) is 1.2 1014 M\u2299 , but this time the mass of the main\n\n\fD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\n5\n\nhalo even harbours a plume of low density particles whose origins probably lie in the tidal stripping of material between the\nbigger subhalo and the host halo. As expected the biggest subhalo hosts a few subhaloes of its own, which are large and dense\nenough to be seen in the bottom right panel of Fig. 4. Usually\nlevel 3 subhaloes are much smaller and more difficult to spot\non these kind of plots, but the main conclusion is that the MSM\nmethod seems to perform well independently of the state of relaxation of the AdaptaHOP halo.\n2.2.2. Density vs mass criteria\n\nFig. 3. Top left: original AdaptaHOP halo with subhaloes, top\nright: main (MSM) halo (without subhaloes), bottom right: subhaloes, bottom left: circles marking the \"virial\" region of the\nhalo and its subhaloes.\n\nAt this point, we have to decide which of the two methods is the\nbest suited to reach the goal that we set for ourselves at the beginning of this paper: to build the most reliable (sub)halo merging\nhistory tree possible. Is it the DPM, where each subhalo has a\nlower peak density than its host? Or is it the MSM where each\nsubhalo is less massive than its host? We now compare these two\nmethods.\nThe mass functions obtained for both DPM (diamonds) and\nMSM (triangles) methods at z = 0 are represented in Fig. 5. For\neach method, the mass function of main haloes (level 1 structures), subhaloes of haloes (level 2 structures) and subhaloes\nof subhaloes (level 3 and above structures) are represented respectively with solid, short-dashed, and long dashed curves respectively. From the figure it is apparent that the mass functions of haloes are very similar in both methods, with small differences barely perceptible to the naked eye. These differences\nare only due to the fact that the mass of haloes can vary from\none method to the other, when the most massive and the most\ndense leaves do not coincide. So even though the total number of haloes detected at redshift 0 is the same, the number of\nmain haloes per mass bin is expected to vary slightly. The same\ncomment holds for the mass function of subhaloes, except at the\n\nFig. 4. Top left: original AdaptaHOP halo with subhaloes, top\nright: main (MSM) halo (without subhaloes), bottom left: subhaloes of the main halo, bottom right: subhaloes of the subhaloes.\n\n(MSM) halo is only 5.7 1013 M\u2299 , i.e. its 23 subhaloes contain\nslightly more mass than it does. Moreover, since one of the subhaloes is about the same size as the main halo we can expect it\nto contain quite a few subhaloes itself. Indeed, we are not disappointed: as shown in the top right panel of the figure, the main\n\nFig. 5. For both methods DPM (diamonds) and MSM (triangles), the mass functions of haloes, subhaloes of haloes and\nsubhaloes of subhaloes are plotted with solid, short-dashed and\nlong-dashed curves respectively. The error bars correspond to\nPoisson uncertainty. The vertical dotted line corresponds to the\n20 particles detection threshold.\n\n\f6\n\nD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nFig. 6. For both methods DPM (diamonds) and MSM (triangles),\nthe average number of subhaloes per halo (plain curve), and subhaloes per subhalo (dashed curve vertically translated by 2 dex\ndownwards for clarity) are shown. The error bars correspond to\nthe mean quadratic dispersion. The dotted vertical line corresponds to the 20 particle detection threshold.\n\nhigh mass end where the difference becomes noticeable and it\nseems that slightly less subhaloes of halos are detected with the\nMSM method. Differences between methods only become apparent in the mass function of subhaloes of subhaloes (so called\nlevel 3 and above). Among the 9124 subhaloes detected with\nboth methods we count 2170 subhaloes of subhaloes: 1201 subhaloes detected with the DPM method and 969 with the MSM\nmethod. We believe that these numbers are large enough to trust\nthat the trend of the DPM always producing a higher number\nof subhaloes of subhaloes is real. This is especially true since it\nis verified for every mass bin, even if the number of these subhaloes is small for masses above 7.7 1012 M\u2299 , (18 for the DPM,\n5 for the MSM), and from these bins alone we would be hard\npressed to draw any conclusion.\nThe number of subhaloes per halo or subhalo is another aspect of substructure selection methods that is worth quantifying.\nThis data is shown in Fig. 6. For each method (DPM marked\nwith diamonds and MSM with triangles), we show here the average number of subhaloes per halo (plain curves) and the number\nof subhaloes per subhaloes (dashed curves vertically translated\n2 dex downwards for clarity). Once again, the average number\nof subhaloes per halo is nearly the same when using either the\nDPM or MSM method. As expected, this number is very low\n10\u22123 at 2 1011 M\u2299 . Haloes of these masses are close to the detection threshold and are unlikely to host any subhaloes. In both\ncases, we reach an average number of at least 1 subhalo per halo\nfrom 1013 M\u2299 onwards. Close to 1014 M\u2299 , we obtain on average 12 subhaloes per halo. The number of subhaloes per subhalo\nfollows the same trend, but the difference between the two methods is more marked in that case, with DPM subhaloes hosting\nslightly more subhaloes than MSM subhaloes. This result confirms the impression we got from the mass function (Fig. 5) that\nthe number of subhaloes of subhaloes is indeed higher with the\nDPM method.\n\nFig. 7. For each halo under 1014 M\u2299 that differ in the DPM (diamonds) and MSM (triangles) method, two mass fractions were\ncomputed. The first mass fraction is the total mass found in subhaloes over the total mass of the halo (the main halo plus its\nsubhaloes). This fraction is shown in the top panels. The second\nmass fraction is the mass of the largest subhalo over the mass of\nits host main halo. This fraction is shown in the bottom panels.\nThe average results are shown on the left panels, the results for\neach halo are shown in the right panels. The error bars correspond to the mean quadratic dispersion. The dashed vertical line\ncorresponds to the 20 particle detection threshold.\n\nComing back to the AdaptaHOP haloes (the haloes originally detected by AdaptaHOP before subhaloes are removed\nfrom them), which, unlike the main haloes are the same for both\nmethods, we select those for which the main halo has a different\nmass in each method and compute the mass fraction contained\nin all its subhaloes. By definition this mass fraction is always\nsmaller than 1 since an AdaptaHOP halo contains all its subhaloes. The result of this exercise is presented in the top panels of\nFig. 7, where the average mass fraction for the DPM (diamonds)\nand the MSM methods (triangles) (left panel) and the individual\nvalues (right panel) are shown. The mass fraction found in DPM\nsubhaloes is close to 0.5 for the smallest haloes and decreases\ndown to 0.3 near 1013 M\u2299 , to rise again and reach 0.5 at 1014 M\u2299 .\nThe mass fraction in MSM subhaloes follows the same trend but\nthe mass fraction is always about 0.1 lower. The error bars are\nsmaller as well for the MSM results and this can be viewed more\nclearly on the top left panel: the scatter in mass fraction is more\npronounced for the DPM method. When using the DPM or MSM\nmethod on an AdaptaHOP halo, we obtain the same number of\nsubhaloes, which is the number of density maxima (leaves in the\nnode structure tree) minus one that is defined as the center of the\nmain halo itself. For each of these AdaptaHOP haloes the number of subhaloes therefore is initially the same. However, when\nthe DPM and MSM methods differ on the choice of the center leaf, a higher mass fraction of the AdaptaHOP halo is found\nin DPM subhaloes than in MSM subhaloes, which is somewhat\nexpected since MSM picks the most massive center leaf to define it as part of the main halo. What is more worrisome, is that\n\n\fD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nlooking at the bottom panels of Fig. 7, we realise that the mass\nratio between a subhalo and the main halo can be greater than\none with the DPM method across the entire mass range spanned\nby the N-body simulation. Among the 33718 DPM main haloes\nwith a mass lower than 1014 M\u2299 , 455 differ when using the MSM\nmethod. Among these, 93 have a subhalo-halo mass ratio greater\nthan 1 and 35 greater than 1.5. This never happens for MSM\nhaloes, which have a maximum subhalo-halo mass ratio lower\nthan 1 by construction. In the left panel, we see that this mass\nfraction is on average lower than 0.7 for the MSM haloes and\nmuch smoother than the DPM curve, with a reduced scatter. It\ndecreases from 0.7 for the smallest haloes to around 0.2 at 2 1013\nM\u2299 , and rises again to reach 0.5 for haloes with masses close to\n1014 M\u2299 .\nThe DPM method (density criteria) and the MSM method\n(mass criteria) do not differ in most cases as the most massive leaf in the node structure tree generally is the densest as\nwell. However, when they do differ, the hierarchy of subhaloes is\nmodified (we obtain more subhaloes in subhaloes with the DPM\nmethod) and the mass ratio between a subhalo and its host halo\nis also modified. This latter can reach unphysical (greater than\nunity) values with the DPM method which leads us to use the\nMSM method as our preferred one step method in the rest of\nthis paper.\nHaving selected a robust (in the sense that it uses an integral quantity, i.e. the mass, rather than its spatial derivative, i.e.\nthe density) and intuitively satisfying method (MSM haloes are\nmore massive than any of their subhaloes) as well as assessed\nits ability to describe the instantaneous structure of dark matter\nhaloes and subhaloes (i.e. the analysis of an isolated snapshot of\nan N-body simulation), we now proceed to study how it fares at\ncapturing their much more complex time evolution.\n\n3. Merger histories\n\n7\n\nthe son of i is chosen as the (sub)halo j for which mi j /mi is\nmaximal.\n\u2013 Conversely, the (sub)halo i of mass mi at step st is a progenitor of the (sub)halo j of mass m j at step st + 1 if, and only\nif j is the son of i. The main progenitor of j is the (sub)halo\ni for which the ratio mi j /m j is maximal.\nMerger trees built from N-body simulations in a similar way for haloes only (with DENMAX: Roukema et al.\n(1997) or FOF: Kauffmann et al. (1999); Hatton et al. (2003);\nHelly et al. (2003); Nagashima et al. (2005)), and more recently\nfor subhaloes as well (using SKID (Okamoto & Habe 2000)\nor SUBFIND (Springel et al. 2005; De Lucia & Blaizot 2007;\nFakhouri & Ma 2008)) are quite common. Note that these\nmerger trees are not binary. Each (sub)halo only has one son, but\nmergers can occur between more than two (sub)haloes, depending on time resolution. Also when two haloes merge, if the first\none survives as a subhalo the merger does not appear immediately as a \"real\" merger event (two branches become one) since\nthe son of this first halo is a subhalo which is distinct from the\nson of the second halo which we call the main halo. A merger\nonly really occurs when the subhalo has completely dissolved\nin the main halo at a later time output. Finally, a twist to the\nprevious rules, and specific to mergers trees including subhaloes\nhas to be introduced. The reason for this, as illustrated in Fig.\n8, is that often a subhalo, s(st), is not the main son of any halo.\nAssume for instance that its host halo h(st) has two (or more)\nprogenitors h1(st \u2212 1), the main one, and h2(st \u2212 1). If h2(st \u2212 1)\nhas given most of its mass to h(st), but at the same time s(st)\ngot most of its particles from h2(st \u2212 1) then s(st) is an orphan\naccording to the rules. We therefore choose, in these cases, to\nmodify the merger tree so that s(st) becomes the main son of\nh2(st\u22121) and h2(st\u22121) the main progenitor of s(st). In short, this\nmodification accounts for the fact that when two haloes merge,\nthe smallest one can lose most of its mass to the newly identi-\n\n3.1. Constructing a merger tree\n\nAlthough over the course of a numerical N-body simulation\nmost (sub)haloes lose mass and disappear, it is customary to refer to the \"growth\" of haloes since these mass losses also feed the\nformation of larger objects. Tracking how and when a (sub)halo\nacquires its mass is called building a merger history tree for this\nspecific (sub)halo. The further complication with respect to the\ndetection of subhaloes previously discussed is that this mass assembly is a dynamical and continuous process, which is only\ncaptured by a finite number of discrete time outputs (typically\n50 between redshifts 20 and 0, see e.g. Hatton et al. (2003)) of\nan N-body simulation. This means that time resolution issues superimpose on mass resolution issues that were our sole limitation\nup to now.\nOnce again, all the information available to build the merging trees is carried by particles, and more specifically by their\nbelonging to a particular (sub)halo at a given time output st and\nanother one at the previous/subsequent snapshot. In other words,\nby monitoring the exchange of particles between haloes or subhaloes detected in two consecutive snapshots of an N-body simulation, one can build \"simplified\" merger trees by laying down\nthe following set of rules:\n\u2013 Each (sub)halo i at step st can only have 1 son at step st + 1,\ni.e. fragmentation is not taken into account, hence the \"simplified\" adjective used to describe the merging tree.\n\u2013 Assuming mi j is the common mass between a (sub)halo i of\nmass mi at step st and a (sub)halo j of mass m j at step st + 1,\n\nh(st)\ns(st)\nstep st\n\nstep st \u2212 1\nh1(st\u22121)\n\nhalo\n\nh2(st\u22121)\n\nsubhalo\nson \u2212 progenitor relation\nhost \u2212 subhalo relation\nfraction of the halo mass transmitted\n\nFig. 8. In a simplified tree built as described in the text (Sect.\n3.1), a subhalo may appear without seemingly having a progenitor. Whenever possible, the simplified merger tree is therefore\nmodified so that the subhalo s(st) in the figure becomes the main\nson of halo h2(st \u2212 1), even though h2(st \u2212 1) has given most of\nits particles to h(st) and not s(st).\n\n\f8\n\nD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nfied main halo while still retaining a clear identity by becoming\na subhalo. Another, arguably better, way to proceed would be to\nuse the most bound particle(s) to define which of the possible\nsons should be the main one (e.g. Okamoto & Habe (2000)).\nIn the remaining subsections of the paper we will be talking\nabout tree branches. What we define as a branch is a succession\nof haloes and subhaloes linked together between two outputs of\nan N-body simulation by a main progenitor \u2013 main son relationship. It means that there is only one (sub)halo per branch at any\ngiven step, and that a branch starts with a (sub)halo which has\nno progenitor and ends (i) when a merger occurs with another\nbranch or (ii) when a (sub)halo has no son at the next output or\n(iii) when the current output is the last one (e.g. z = 0).\n3.2. Example of a merger tree built with and without\nsubhaloes.\n\nFig. 10. Same as Fig. 9 except that the subhaloes have not been\ntaken into account (i.e. it is the merger tree of an AdaptaHOP\nhalo which includes but does not separate subhaloes). A mass\nthreshold was applied so as not to show the less massive (thick)\nbranches and limit this tree to less than 50 branches. Only the 42\nmost massive branches of the full merger tree are shown in this\nfigure.\n\nFig. 9. Example of a merger tree computed with MSM subhaloes\naccording to the rules described in the text (Sect. 3.1). Circles\nrepresent main haloes, squares subhaloes. The main halo at redshift 0 is the one shown in Fig. 3. Its merger tree is shown in\nthe left hand side of the figure, whereas the merger trees of its\nsubhaloes are shown on the right hand side. Main haloes are\nconnected to their subhaloes using horizontal solid lines and\nmergers between (sub)haloes are indicated by horizontal dotted\nlines. A mass threshold was applied not to show the less massive\n(thick) branches and limit this tree to less than 50 branches. Only\nthe 40 most massive branches of the full merger tree are shown\nin this figure.\nFigure 9 shows the full merger tree of the halo shown in Fig.\n3, with subhaloes determined via the MSM, albeit for this particular halo, little difference would occur if this merger tree was\nconstructed with the DPM. In this figure, haloes are represented\nas circles, subhaloes as squares. The main halo and its subhaloes\nare on the first line, and all of their progenitors on subsequent\nlines as time flows from the bottom to the top of the figure. Each\ncolumn is a branch of the tree either linked to the halo or one of\nits subhaloes. The main progenitor is always in the same column\n\nas its son. When a merger occurs one branch ends (no more objects in this column) and a line connects it to the branch it has\nmerged with. In this plot we show that 16 branches directly lead\nto the main halo at redshift 0. The first one is the main branch\n(the trunk), and the 15 other ones which end before redshift 0\nare called secondary branches. The other 22 \"sub\"-branches define the merger histories of subhaloes hosted by the main halo\nat redshift 0. The relationships between haloes and subhaloes\nare indicated by a line at the top of each branch. They show\nwhether a subhalo is hosted by the main halo itself (solid lines\nconnecting the two objects) or, as for the branch in Col. 29, another subhalo (dashed lines connecting the two objects). Some\nlines linking branches are dotted: these mark mergers between\n(sub)haloes which resulted in both objects retaining their identities (one becomes the subhalo of the other). When this happens\neither of two things can occur at later times: (i) the branch of\nthe subhalo merges with the branch of its host or (ii) the subhalo becomes a stand alone halo again. Both cases are present in\nthe halo merger tree of Fig. 9, with case (i) being more frequent\n(branches in Cols. 2, 3, 7, 8, 9, 10, 15, 27, 28, 31, 32, 33, 35)\nthan case (ii) (branches in Cols. 13, 14, 23, 25, 34). Physically,\ncase (i) corresponds to progressive mass stripping of the subhalo\nthrough dynamical friction, and case (ii) to structures which fly\nby one another several times on elongated orbits before merging\ntogether for good.\nIf we do not keep track of the subhaloes, as shown in Fig.\n10 where we plot the merger tree of the AdaptaHOP halo (the\nhalo which includes the main halo and all subhaloes) the same\nphenomenon of multiple fly-bys before merger leads to branches\nbeing cut into pieces. The lower part of the branch will merge\nwith the halo at the first encounter, and the top part of the branch\nwill reappear as a new branch each time the \"subhalo\" jumps\n\n\fD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\ndown a level in the halo tree, e.g. becomes a halo again if it had\nbecome a \"level 2 subhalo\" during the first encounter (branches\nin Cols. 18 and 20). However, the general impression one gets\nfrom glancing at Fig. 10 is that the AdaptaHOP halo merger tree\nis quite close to the MSM one (Fig. 9). More specifically, if we\nignore the squares and replace the dashed lines by solid lines\nin this figure it is clear that many mergers observed in Fig. 10,\nare also found in Fig. 9 (branches in Cols. 2 and 3 are identical,\nbranch 4 in Fig. 10 is branch 13 in Fig. 9, and so on and so\nforth...).\nOne of the main ideas behind this paper is to construct \"well\nbehaved\" merging trees from N-body simulations, on which\nwe can graft semi-analytic models (SAM: e.g. Roukema et al.\n(1997); Kauffmann et al. (1999); Hatton et al. (2003)) of galaxy\nformation and evolution on top of them. In order for this to be\npossible, we expect our trees to be devoid of certain features.\nFor instance, subhaloes should only appear after a merger involving main haloes has taken place. This means that any subhalo should have at least one progenitor. We then expect a subhalo to be either stripped of its mass and merge with its host\nstructure, or become temporarily distinct again (see discussion\nabove). Which means that, in principle, it should not be possible\nfor a subhalo to ever be part of a main branch. A thorough analysis of our merging tree building method(s) therefore leads us to\ndefine three types of anomalies that are to be avoided, or at least\nreduced to a minimum of occurrences:\n1. Anomaly of the first kind: a subhalo has no progenitor.\n2. Anomaly of the second kind: a subhalo merges with its host\nbut its branch does not end.\n3. Anomaly of the third kind: a subhalo swaps identity with its\nhost.\n\nAnomaly of the first kind:\nsubhalo with no progenitor.\nAnomaly of the second kind:\nwhen it merges with its host,\nthe subhalo is the main progenitor\nof the resulting halo.\n\nAnomaly of the third kind:\nthe subhalo becomes the host halo,\nthe host halo becomes the subhalo.\n\nson \u2212 progenitor relation\nhalo\n\nsubhalo\n\nhost halo \u2212 subhalo relation\n\nFig. 11. The three main anomalies that one can run into when\nbuilding a merger tree with subhaloes (see text, Sect. 3.2, for\ndetails).\nThese are depicted in Fig. 11. Measuring the occurrence of\nthese anomalies within merger trees built with different methods\nis a good way not only to assess the relative performance of these\nmethods at capturing the complex dynamics of the halo merging\nprocess, but also to estimate the suitability of these merger trees\n\n9\n\nto be used as backbones for SAMs. We now proceed to perform\nthis comparison.\n3.3. A two time step method: the Branch History Method\n(BHM)\n\nP11\n\nP12\n\nsn 11\nn1\n\nsn 12\n\nst\u22121\n\nst\n\nhalo or subhalo at step st\u22121\nnode or subnode at step st\norigin of most of the subnode's particles\n\nFig. 12. Illustration of the BHM method (see text, Sect. 3.3, for\ndetails), where a node, n1 , and two of its subnodes, sn11 and sn12\nat step st, are linked to the progenitors of subnodes (either haloes\nor subhaloes) at step st \u2212 1 (named P11 and P12 ).\nThe occurrence of anomalies in the merger history of haloes\nis caused by the (poor) finite time resolution necessarily used\nto store the wealth of information contained in N-body simulations. It therefore seems natural to try to include information\ncoming from various time outputs to get rid of them. In this section, we present a method that uses information over two such\ntime outputs, but it can in principle be extended beyond this (at\nthe expense of computational power and complexity) to build\ntruly \"perfect\", i.e. virtually anomaly free, trees. Like the other\nmethods, the Branch History Method (BHM) starts with the node\nstructure tree computed with AdaptaHOP, but it works in the following way:\n\u2013 Load the (sub)halo distribution of the previous time output\nin memory. If there is none (first snapshot), use the MSM\nmethod to detect (sub)haloes.\n\u2013 Construct the halo tree from the highest level of the node\nstructure tree to the lowest one (which is the main halo itself:\nsee Sect. 2 \"structure detection\" for details) for the current\ntime output.\n\u2013 When a node n1 contains two subnodes sn11 and sn12 , check\nthat the mass of (n1 + sn11 ) is greater that the mass of sn12 .\nSimilarly when using sn12 instead of sn11 , check that the\nmass of (n1 + sn12 ) is greater that the mass of sn11 , to ensure that if one of the subnodes is defined as a subhalo, its\nmass will be lower than that of its host.\n\u2013 Compute the main progenitor of each of the objects sn11 ,\nsn12 , (n1 + sn11 ) and (n1 + sn12 ), i.e. the halo or subhalo\nwith which these objects have most mass in common at\nthe previous time output. We shall name those progenitors\nP11 ,P12 ,P1+11 and P1+12 . See Fig. 12 for illustration.\n\u2013 Apply the following criteria:\n\n\f10\n\nD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\n1. If P11 = P1+11 and P12 , P1+12 , then sn12 is a subhalo\nand (n1 + sn11 ) its host. Vice versa if P11 , P1+11 and\nP12 = P1+12 , sn11 is a subhalo and (n1 + sn12 ) its host.\n2. If P11 = P1+11 , P12 = P1+12 , and P11 and P12 are both\nhaloes, use the same criteria as the MSM method: if the\nmass of sn12 is lower than the mass of sn11 , then sn12 is\na subhalo and (n1 + sn11 ) its host.\n3. If P11 = P1+11 , P12 = P1+12 , P11 is a subhalo and P12\na halo then sn11 is a subhalo and (n1 + sn12 ) its host.\nVice versa if P11 is a halo and P12 a subhalo then sn12 is\na subhalo and (n1 + sn11 ) its host: i.e. make sure that a\nsubhalo remains a subhalo whenever possible.\n4. If P11 , P1+11 and P12 , P1+12 , then both sn11 and sn12\nare subhaloes and n1 is their host: the masses of sn11 and\nsn12 are small compared to that of n1 , so there is no reason to decide that one subnode is a subhalo and not the\nother.\nNote that the method we have just outlined differs from that\nused by Springel et al. (2005) as these authors only take advantage of information from previous/subsequent time steps to build\ntheir merging trees, not to decide on particle (sub)halo appartenance. We now proceed to check all merging trees built using\nthe BHM and both one step methods DPM and MSM, for the\nanomalies defined in the previous subsection.\n\n1012 M\u2299 . In the last mass bin, all methods detect only 1 subhalo\nwith no progenitor, but since the number of subhaloes is higher\nin this bin for the DPM (77 compared to 41 for MSM and BHM)\nthe percentage is slightly lower for this method.\nWe conclude that as far as anomalies of the first kind are\nconcerned, both the MSM and BHM yield significantly better\nresults, as their fraction of subhaloes without progenitors is systematically a few % lower than with the DPM. The fact that 26\n% of the smallest subhaloes have no progenitor is not too worrying, as these subhaloes are more prone to contamination by\nPoisson noise: they mostly disappear from a time output to the\nnext simply because they lose a few particles and drop below\nthe detection threshold of 20 particles. For the larger subhaloes,\nthe main reason for the anomaly to occur is that a subhalo with\na similar maximal density than its host and coming close to the\ncenter of the latter on a radial orbit can be blended with it 1 .\nAt the time output when the blending occurs, one then detects\njust one structure: the host. This anomaly can be understood as\na fly-by process occurring for subhaloes, also occurring with the\nSUBFIND algorithm and detailed by Wetzel et al. (2009).\nHowever, at the next time output this need not be the case,\nand since we do not allow a (sub)halo to have more than one\nson, a structure is left without a progenitor. Depending on the\nmethod one uses to define (sub)haloes, this can happen more\n(DPM) or less (BHM) often, as different haloes can be picked as\nmain progenitors.\nIn Figs. 14 and 15, we searched the merger trees of each z =\n0 halo built using all three methods for occurrences of anomalies\nof the second and third kind respectively. These trees were sorted\ninto 15 mass bins corresponding to the mass of the final halo and\n1\n\nA great advantage of 6D detection is for instance that 2 structures\ncolliding with each other, that would be indistinguishable in 3D at the\nmoment of crossing remain well separated in phase-space.\n\nFig. 13. Percentage per mass bin of subhaloes without progenitor, i.e. of the occurrence of the first anomaly, for the three\nmerging tree building methods described in the text: DPM (diamonds), MSM (triangles), BHM (squares). The error bars correspond to Poisson uncertainties. The vertical dotted line corresponds to the 20 particles detection threshold.\nFigure 13 shows results obtained for the anomaly of the first\nkind, i.e. the number of subhaloes for which no progenitor could\nbe assigned. These results follow the same trend as a function of\nsubhalo mass whatever the tree building method (DPM, MSM,\nBHM) used. Up to 26 % of the smaller subhaloes do not have a\nprogenitor but this fraction quickly decreases as the mass of the\nsubhalo increases, falling below the 10 % mark for DPM, MSM\nand BHM subhaloes more massive than 5 1011 M\u2299 , 4.5 1011 M\u2299\nand 4 1011 M\u2299 respectively. For the DPM, this percentage stays\nbetween 5.3 and 4.3 % from 1.4 1012 M\u2299 to 1.2 1013 M\u2299 , then\ndecreases below the 3 % mark from 2.8 1013 M\u2299 onward. For\nthe MSM and BHM methods the 5 % level is reached at 9.2 1011\nM\u2299 and 5.6 1011 M\u2299 and the 2 % mark at 3.3 1012 M\u2299 and 1.4\n\nFig. 14. For the three merging tree building methods DPM (diamonds), MSM (triangles), BHM (squares), haloes at redshift 0\nhave been sorted into 15 mass bins. The merger trees of each of\nthese haloes were analysed, to detect occurrences of the anomaly\nof the second kind, i.e. a subhalo merging with its host halo but\nbecoming the main progenitor of the resulting main halo. For\neach mass bin, the percentage of trees in which this anomaly\noccurred at least once is given. The error bars correspond to\nPoisson uncertainties. The vertical dotted line corresponds to the\n20 particles detection threshold.\n\n\fD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nFig. 15. Same as Fig. 14 but for anomalies of the third kind, i.e.\nfrom one step to another, a subhalo is detected in its host halo\nbranch, and the host halo is detected in the subhalo branch. In\neach bin the number of trees where this anomaly occurred at\nleast once is displayed. The vertical dotted line corresponds to\nthe 20 particles detection threshold.\nits subhaloes at redshift 0, meaning that for all method any tree\nis in the same bin.\nContrary to the first kind of anomaly, the second kind is quite\nscarce. It occurs only in 219, 4 and 31 trees for the DPM, MSM\nand BHM respectively. Looking at the DPM results in Fig. 14,\nwe can verify that our a priori expectation to detect more anomalies of the second type when the merger trees become quite\ncomplex (i.e. trees of massive z = 0 haloes composed of many\nbranches) is borne out. For the largest DPM haloes, this anomaly\nis bound to appear at least once: the percentage of merger trees\ncontaining an anomaly of the second kind is close to 0 for the\nsmallest haloes, and reaches 100 % for the largest ones. This rise\nis quite slow until 4.8 1014 M\u2299 where the 10 % mark is reached,\nbut quickly accelerates until, from 5.9 1014 M\u2299 onward, all DPM\ntrees contain the second kind of anomaly at least once. With the\nMSM, the second type of anomaly hardly ever occurs, meaning\nthat the percentage of trees containing this anomaly is always\nclose to 0, except for the 4.5 1014 M\u2299 mass bin where 1 tree\nout of 6 contains this anomaly. For the BHM, until 9 1013 M\u2299 ,\nthe percentage of trees containing this anomaly is below 5 %.\nInterestingly enough, the number of second type anomalies for\nthe BHM is higher than for the MSM. Around 4.5 1014 M\u2299 , one\nthird of the trees are plagued with this anomaly and above 6 1014\nM\u2299 this fraction rises to one half. This seemingly dramatic difference must be somewhat tempered by the small number of events\nas the two final mass bins contain eight trees in total. However,\nwe conjecture that this behaviour of the BHM is the result of\nthe propagation in time of a small fraction of the much more\nfrequent anomalies of the third kind. To be more specific, it so\nhappens that the in-built tendency of the BHM to preserve the\nlevel of subhaloes from one output to the next leads, in some\ncases, to confuse subhalo and halo when the branches finally\nmerge together.\nAs a matter of fact, looking at the occurrence of anomalies\nof the third kind displayed in Fig. 15, we notice that they appear much more frequently than the anomalies of the second\nkind (error bars at a given percentage are much smaller than in\nFig. 14). Here again, as expected, these anomalies become more\nfrequent as merger trees become more complex. For the largest\n\n11\n\nhaloes, this anomaly is bound to appear at least once, whatever\nthe method used to build the merger tree. For the DPM this rise is\nquite steady, the 50 % threshold being reached for trees with final haloes of mass \u223c 7 1012 M\u2299 , and from 9 1013 M\u2299 onward, all\ntrees contain this anomaly at least once. For the MSM method,\nthe transition is more pronounced, with the fraction of trees containing the anomaly rising quite slowly until 1013 M\u2299 , reaching\nthe 50 % threshold for 2.5 1013 M\u2299 haloes, and 100 % at 1.7\n1014 M\u2299 . However, the discrepancy between MSM and BHM is\nin favour of the latter this time around: the fraction of trees containing anomalies of the third kind gently rises from 0 to 20 %\nwhen final haloes masses attain 4.8 1013 M\u2299 , reaches 50 % at\n1.7 1014 M\u2299 and 100 % at 3.2 1014 M\u2299 . In other words, the number of trees containing this anomaly is reduced by a factor 4 on\naverage when going from the MSM to the BHM, so that the conversion of a few of these anomalies into anomalies of the second\nkind seems a small price to pay. Also, we have good reasons to\nbelieve that an extended BHM over more than two time outputs\ncould definitively resolve the issue.\nThe conclusions we can draw from these three anomaly tests\nare that (i) the method used when creating the halo tree has\nan important impact on the merger tree (ii) the most obvious\nanomalies can be avoided by using an MSM like method (iii)\nfurther improvement is possible using BHM like methods but\nit does not reduce all anomalies to the same extent and comes\nat quite an expensive cost in terms of complexity of algorithm\nand CPU requirement. In the remaining of the paper we examine how the shape of individual merger trees is affected when\none uses these three different tree building methods, illustrating\nhow these differences can affect SAMs which are grafted on the\ntrees.\n3.4. Examples of individual merger trees and their\nconsequences in terms of halo formation epoch\n\nWe pick merger trees where the three methods DPM, MSM and\nBHM differ and zoom in on the portion of the tree where these\ndifferences take place. For each Figs. 16, 17, 18 the left hand\nside displays the tree obtained using the DPM, the middle spot\nis occupied by the MSM tree and the BHM tree is shown on the\nright hand side. As in the previous plots throughout the paper,\nhaloes are represented by circles and subhaloes by squares, solid\nlines show relationships between main progenitor and main son,\ndashed lines stand for mergers where a halo survives as a subhalo\nand they link the main subhalo progenitor to its new host. For\nan easier analysis, each branch has been indexed from 1 to 9\n(number below each branch).\nThe first example (Fig. 16) illustrates the dreadful effect the\nDPM can have on a merger tree. In the first (main) branch of the\nDPM tree, we can see an inversion between halo and subhalo\n(anomaly of the third kind) between branches 1 and 6 around\nredshift 0.15. Branch 1 also starts awkwardly as a small halo\naround redshift 3.9, keeps its mass for about seventeen outputs,\nand suddenly becomes a much larger subhalo around z = 1.7\nwithout undergoing an obvious merger. This subhalo should be\nthe remnant of the merger of branch 1 with branch 2, but instead\nan anomaly of the third kind appears.\nThe MSM tree for the same halo (middle tree in Fig. 16) behaves in a much more civilised manner: the first (main) branch\nstarts as expected with haloes growing in size regularly from\none time output to the next. However, we still find a subhalo in\nthe main branch around redshift 0.2. Looking back at the DPM\ntree, we can see that this is due to an identification problem with\na branch that ends as a subhalo at redshift 0 in the MSM tree\n\n\f12\n\nD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nbut not in the DPM tree (equivalent of DPM branch 6), and for\nthis reason is not shown here (we only plot the merger tree of\nthe main halo for each method). We notice that branch 3 has\ntwo merger events with branch 5, leading to its main halo turning into a subhalo for one output on both occasions. Branch\n6 merges with branch 7: it is a subhalo-subhalo merger where\nthe resulting subhalo eventually merges with the main branch\naround redshift 0.5. We can also see that branch 9 starts as a\nquite large subhalo around redshift 0.8, and thus can be defined\nas an anomaly of the first kind. Nevertheless, we still conclude\nthat for this halo, the MSM method is better than the DPM as\nthe most obvious anomalies present in the DPM main branch are\ngreatly suppressed by the MSM and the time evolution of subhaloes seems to be more accurate overall as well. Moving to the\nright hand side of the figure, which shows the tree obtained with\nthe BHM, we first notice that the subhalo in the main branch has\ndisappeared. Further comparing the BHM main branch to that of\nthe MSM, we clearly see that (as was already the case for DPM\nand MSM), these differ from the origin onward, with the MSM\nbranch appearing at z = 7 and the BHM one later at z = 5.8.\nThe main branch of the MSM tree has become branch 5 of the\nBHM tree, and branches 4, 5, 6 and 7 of the MSM tree correspond to branches 6, 7, 9 and 8 of the BHM tree respectively.\nThe BHM main branch is not seen in any of the other two main\nhalo trees (it is a branch of one of their subhaloes identified at\nz = 0 whose trees are not represented on this plot) but we recognise that branches 3 and 7 in the BHM tree are branches 4 and 7\nin the DPM tree.\nThe second example proposed in Fig. 17 is also a zoom of\na main branch but only from redshift 8 down to redshift 1.4 this\n\nFig. 16. Zoom on merger trees obtained for the same final halo\nusing three methods of subhalo selection. The DPM tree is\nshown on the left hand side, the MSM tree in the middle and the\nBHM tree on the right hand side (see text, Sects 3.1 and 3.3, for\ndetail). Circles represent haloes, squares subhaloes. Solid lines\nshow progenitor\u2013son relationships, dashed lines stand for mergers that resulted in one of the merging haloes surviving as a subhalo.\n\nFig. 17. Same as Fig. 16, for another halo.\n\ntime. Once again subhaloes are present in the main branch of the\nDPM tree as a result of a merger with branch 3 around z = 2.4.\nThe subhalo in the MSM main branch at redshift 2, however is\ndue to a type 3 anomaly involving branch 4. This latter is also\nbranch 3 of the DPM tree and the main branch of the BHM\ntree, which explains why the anomaly disappears in that case.\nThe main branch of the MSM tree can be partly identified with\nbranch 2 of the BHM tree, even though their first haloes (from\nz = 5 to z = 3.2) differ. Apart from this, MSM and BHM trees\nare very similar overall: we can identify branches 2, 7 ,8 and 9\nof the MSM tree with branches 3, 6,7 and 9 of the BHM tree.\nThe last example (Fig. 18) illustrates that the BHM is not entirely fool proof, in the sense that not all anomalies in its merger\ntrees can be eradicated. This example is a zoom on the main\nbranch of a halo between redshifts 1.85 and 0. As we can see\nin the figure, several subhaloes appear in the main branch of the\nDPM tree. Their presence is caused by an exchange between\nhaloes and subhaloes first with branch 2 (z = 1.85) then with\nbranch 5 (z = 0.42). The second occurrence of this anomaly lasts\n3 steps. In the MSM tree only one subhalo appears in the main\nbranch. Except for branch 4 that does not appear and branch 3\n\nFig. 18. Same as Figs. 16 and 17, for a different halo.\n\n\fD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nFig. 19. Formation and assembly epoch of z = 0 main haloes according to the different merging tree building methods described\nin the text (Sects. 3.1 and 3.3). Dashed (upper) curve shows formation redshift (defined as the redshift when the sum over the\nmass of all progenitors at a given time output reaches 50% of\nthe final z = 0 main halo mass) as a function of halo mass, and\nsolid (lower) curve shows assembly redshift (defined as the redshift where 50% of the mass of the final main halo is assembled\nin the main branch for the first time).\nwhich is branch 4 in the MSM tree, all the branches have the\nsame index in both DPM and MSM trees.\nThe first occurrence of the anomaly (between DPM branches\n1 and 2) is prevented by going to the MSM method, however\none occurrence of an anomaly of the third kind persists between\nbranches 1 and 5. In both cases there is an anomaly of the first\nkind in branch 8. As these branches broadly have the same thickness, the merger between their haloes is a major one, which explains why the MSM fails. Looking at the main branch of the\nBHM tree we see that it contains two subhaloes, which is surprising since this result is worse than that obtained with the MSM\nmethod. It is, in fact not such an unexpected turn of events: the\nBHM simply performed as well as the MSM in the first instance\nwhen the subhalo appeared due to the major merger between the\ntwo haloes. However at the following time output, it took into\naccount the information that the halo of the main branch had become a subhalo and since it was possible, decided to maintain\nits subhalo status. At the following output, this possibility had\nvanished, and the subhalo was restored to its main halo status.\nAnother difference between the MSM and the BHM trees is quite\nnoticeable: branch 5 of the BHM tree corresponds to both MSM\nbranches 5 and 8. The BHM method managed to preserve the\nprogenitor\u2013son link of the subhalo involved in the major merger\ntwo time outputs further than the MSM.\nTurning to a statistical measure to quantify the impact of using different methods to build halo merger trees, we now focus\non measuring the \"downsizing/upsizing\" nature of the formation process of dark matter haloes. This is an important issue\nfor galaxy formation as observations reveal (e.g. Thomas et al.\n(2005)) that most massive galaxies, which are generally located\nin the most massive DM haloes, are composed of older stars than\ntheir less massive counterparts. Our results are plotted in Fig. 19\nfor the 3 different methods we use to build merging trees. There\nare 2 sets of curves in this figure, the first one (lower curves)\nshowing what we call the \"redshift of assembly\" (za ) as a function of halo mass, and the second one (upper curves) showing the\n\"redshift of formation\" (z f ). za is defined as the redshift when\n\n13\n\n50% of the mass of the z = 0 main halo is assembled in the main\nbranch (the branch of the main progenitor or trunk) for the first\ntime. z f is the redshift at which the sum of the masses of all progenitors (independent of the branch they are part of) first reach\n50% of the mass of the z = 0 main halo2 .\nThe first thing to note is that all three methods yield very\nsimilar results with the exception of the formation redshift in the\none before last mass bin, where the different identification of a\nsingle main halo by the methods is blown out of proportion by\npoor statistics. It is interesting to compare Fig. 19 to Fig. 5 of\nNeistein et al. (2006), who plot the same quantities for MonteCarlo merging trees based on the EPS formalism, as we can use\ntheir calculations to infer the impact of mass resolution on our\nresults. As these authors point out, for haloes of a few 1011 M\u2299\nat z = 0, i.e. close to our resolution limit, the number of progenitors is small, and the full merger tree is not much more complex\nthan the main branch. This has two effects we can see: the values of za and z f are (i) not very different from one another (ii)\nartificially drop at low masses. When the mass gets higher, the\nscatter in both za and z f slowly decreases, even though it is not\nso clear from Fig. 19 because using the main halo instead of\nthe AdaptaHOP halo naturally increases the dispersion. Finally,\nwhereas za is very similar, z f in Fig. 19 is much lower than the\naverage z f value plotted by Neistein et al. (2006) in their Fig. 5,\npeaking at z f = 1.7 instead of z f = 5. This possibly reflects the\nfact that our mass resolution is lower than theirs by two orders\nof magnitude at 1011 M\u2299 compared to 109 M\u2299. If so, it is very\ninstructive in terms of the impact of mass resolution on downsizing: if the epoch of half-mass formation is such a sensitive function of mass resolution as it seems to be, it means that one could\neasily be a few billion years off when estimating the mean age\nof stellar population of galaxies from a poorly resolved N\u2212body\nsimulation. We note however that the theoretical estimate these\nauthors plot in the same figure is flatter and peaks at a lower\nredshift of z f = 3.5, in much better agreement with our N\u2212body\nsimulation results. Obviously this is less of a problem for za since\nthis measures the moment when 50% of the mass is assembled\nin a unique object which is well resolved as soon as haloes are\nmassive enough.\nIn light of all the tests we have performed, we conclude that\nthe MSM purges merging trees of many of the anomalies which\ntake place when building them with the DPM. This simply confirms that when choosing a subnode to create a halo, one is best\nadvised to use the most massive one instead of the densest. The\nBHM itself generally yields similar results as the MSM, however the extra information it gleans from the previous time output helps to get rid of most anomalies of the third kind, even\nthough it does propagate an anomaly of the same kind in the\ntree from time to time. Statistical quantities like the average formation time and the mean redshift of assembly of dark matter\nhaloes are fairly insensitive to the method used to build the trees,\nbut this is less true of the dispersion around this value.\n\n4. Discussion and Conclusions\nWe have presented a comprehensive study of the problems one\nnecessarily encounters when building dark matter halo and subhalo merger trees directly from N-body simulations. We have\n2\n\nIf we use AdaptaHOP haloes instead of main haloes, i.e. include\nall substructure inside the main halo, the 2 curves we obtain are almost\nidentical to these shown here for the main (substructureless) haloes,\nalbeit the error bars are smaller in the higher mass bins for the redshift\nof formation.\n\n\f14\n\nD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nalso suggested methods to greatly reduce them, if not solve them\nperfectly. To the best of our knowledge, the first trees of this kind\nwere used by Springel et al. (2005); De Lucia & Blaizot (2007)\nto populate the millennium cosmological simulation with galaxies. However, the issues we have described in this paper are not\nthe main focus of any of these papers, and we strongly believe\nthey needed to be addressed in detail, especially since a lot of\nrecent work has been devoted to comparisons between MonteCarlo merger trees to the millennium trees (Neistein & Dekel\n2008; Parkinson et al. 2008; Forero-Romero 2009).\nThe first part of the paper was focused on the difference between dark matter (sub)haloes and their properties (mass and\nnumber of objects) identified using AdaptaHOP and simple criteria to separate subhaloes from haloes (DPM, MSM). We also\ndemonstrated that whereas the halo mass function is robust to a\nchange in subhalo identification criteria, there exists a relatively\nimportant effect of the latter on the estimate of the mass fraction contained in subhaloes. We concluded this study by arguing\nthat, in keeping with the philosophy of using information contained in particle positions only to define haloes and subhaloes,\none should use a mass criterion over a density one to split the\ninternal structure of haloes apart.\nThis ensures not only that subhaloes identified in this way are\nalways less massive than their host, but also that the time evolution of the subhalo (mass loss, encounters with multiple flybys) can be better understood. Indeed using subhaloes in merger\nhistory trees helps to resolve issues such as halo fragmentation.\nMassive haloes which would have appeared to have no progenitors at the previous time output can now be traced as well identified subhaloes in most cases. We also pointed out that using subhaloes in the merger history of haloes, apart from the obvious\ntrend to make the merger history trees more complex because\nthey have more branches, have an impact on the merger histories\nof main haloes, in the sense that different methods to identify\nsubhaloes will yield different merging trees for the main halo\nas well. Finally, we demonstrated that as the physical meaning\nof a (sub)halo is linked to the merger history itself, using part\nof the past merger history of a (sub)halo to construct its future\nyields the best results of all methods used to build merging history trees.\nAs far as mass resolution is concerned, while we did not\nmake use of the most resolved simulations available to us, we\nfeel that we were justified in doing so, as the problems we identified will simply be exacerbated when moving to higher resolution simulations. An interesting side issue that mass resolution\nraises is if/how much merging trees are preserved when it increases. It was beyond the scope of this first paper, but will be the\nmain focus of our next one. We also could have presented results\nwhere we varied time resolution (i.e. the number of outputs of\nthe N-body simulation one uses to build the trees) but whilst occurrences of anomalies in the resulting merger trees would have\nincreased with decreasing time resolution, our conclusions as to\nthe best method to be employed to build the trees would stand.\nAlthough we did not comment much about this point in\nthe main body of the text, our work presumably has nonnegligible implications on semi-analytic models of galaxy formation and evolution. More specifically, the anomalies which\noccur in merger trees built using the different methods (DPM,\nMSM, BHM) will interact with recipes employed to estimate the\ncooling rate of hot gas and feedback from active galactic nuclei\nin these models. Whilst this may not be important statistically\nfor the population of galaxies considered as a whole, calculations of properties of specific sub-populations may be sensitive\nto the issue. In particular, galaxies hosted by massive haloes will\n\nvery likely suffer as these are the places where these anomalies\nare most common: we plan to address this question in a future\nwork.\nFinally, the main advantage to be gained using trees directly constructed from N-body simulations to graft on SAM\nof galaxy formation and evolution, is clustering information.\nMonte-Carlo merging trees not only do not contain position information but they also fail to describe environment effects on\nlow mass halo assembly (Sheth & Tormen 2004; Wechsler et al.\n2006; Reed et al. 2007; Zhu et al. 2006). Positioning SAM\ngalaxies within subhaloes allows one to both compute merging timescales more accurately, but also to measure the intra\nhalo correlation functions predicted by the model with great accuracy (Blaizot et al. 2006). These previous statements need to\nbe somewhat toned down since baryons exert a gravitational effect on dark matter and this will very likely impact the survival\nof subhaloes, however these effects can be quantified using the\nframework we have developed in this paper and we plan to address the issue in the near future.\n\nReferences\nAubert, D., Pichon, C., & Colombi, S. 2004, MNRAS, 352, 376\nBaugh, C. M. 2006, Reports on Progress in Physics, 69, 3101\nBenson, A. J., Kamionkowski, M., & Hassani, S. H. 2005, MNRAS, 357, 847\nBenson, A. J., Pearce, F. R., Frenk, C. S., Baugh, C. M., & Jenkins, A. 2001,\nMNRAS, 320, 261\nBlaizot, J., Szapudi, I., Colombi, S., et al. 2006, MNRAS, 369, 1009\nBond, J. R., Cole, S., Efstathiou, G., & Kaiser, N. 1991, ApJ, 379, 440\nDavis, M., Efstathiou, G., Frenk, C. S., & White, S. D. M. 1985, ApJ, 292, 371\nDe Lucia, G. & Blaizot, J. 2007, MNRAS, 375, 2\nDiemand, J., Kuhlen, M., & Madau, P. 2006, ApJ, 649, 1\nDunkley, J., Spergel, D. N., Komatsu, E., et al. 2009, ApJ, 701, 1804\nEisenstein, D. J. & Hut, P. 1998, ApJ, 498, 137\nFakhouri, O. & Ma, C.-P. 2008, MNRAS, 386, 577\nForero-Romero, J. E. 2009, MNRAS, 1094\nGelb, J. M. & Bertschinger, E. 1994, ApJ, 436, 467\nGhigna, S., Moore, B., Governato, F., et al. 1998, MNRAS, 300, 146\nGill, S. P. D., Knebe, A., & Gibson, B. K. 2004, MNRAS, 351, 399\nHatton, S., Devriendt, J. E. G., Ninin, S., et al. 2003, MNRAS, 343, 75\nHelly, J. C., Cole, S., Frenk, C. S., et al. 2003, MNRAS, 338, 903\nHuchra, J. P. & Geller, M. J. 1982, ApJ, 257, 423\nKauffmann, G., Colberg, J. M., Diaferio, A., & White, S. D. M. 1999, MNRAS,\n303, 188\nKlypin, A., Gottl\u00f6ber, S., Kravtsov, A. V., & Khokhlov, A. M. 1999, ApJ, 516,\n530\nKnollmann, S. R. & Knebe, A. 2009, ApJS, 182, 608\nLacey, C. & Cole, S. 1994, MNRAS, 271, 676\nMaciejewski, M., Colombi, S., Alard, C., Bouchet, F., & Pichon, C. 2009a,\nMNRAS, 393, 703\nMaciejewski, M., Colombi, S., Springel, V., Alard, C., & Bouchet, F. R. 2009b,\nMNRAS, 396, 1329\nNagashima, M., Yahagi, H., Enoki, M., Yoshii, Y., & Gouda, N. 2005, ApJ, 634,\n26\nNeistein, E. & Dekel, A. 2008, MNRAS, 383, 615\nNeistein, E., van den Bosch, F. C., & Dekel, A. 2006, MNRAS, 372, 933\nOkamoto, T. & Habe, A. 2000, PASJ, 52, 457\nParkinson, H., Cole, S., & Helly, J. 2008, MNRAS, 383, 557\nPfitzner, D. W. & Salmon, J. K., eds. 1996, Parallel halo finding in N-body cosmology simulations.\nReed, D. S., Bower, R., Frenk, C. S., Jenkins, A., & Theuns, T. 2007, MNRAS,\n374, 2\nRoukema, B. F., Quinn, P. J., Peterson, B. A., & Rocca-Volmerange, B. 1997,\nMNRAS, 292, 835\nSheth, R. K. & Lemson, G. 1999, MNRAS, 305, 946\nSheth, R. K. & Tormen, G. 2004, MNRAS, 350, 1385\nSomerville, R. S. & Primack, J. R. 1999, MNRAS, 310, 1087\nSpringel, V., White, S. D. M., Jenkins, A., et al. 2005, Nature, 435, 629\nSpringel, V., White, S. D. M., Tormen, G., & Kauffmann, G. 2001, MNRAS,\n328, 726\nThomas, D., Maraston, C., Bender, R., & Mendes de Oliveira, C. 2005, ApJ,\n621, 673\n\n\fD. Tweed et al.: Building merger trees from cosmological N-body simulations\nWechsler, R. H., Zentner, A. R., Bullock, J. S., Kravtsov, A. V., & Allgood, B.\n2006, ApJ, 652, 71\nWetzel, A. R., Cohn, J. D., & White, M. 2009, MNRAS, 395, 1376\nZhu, G., Zheng, Z., Lin, W. P., et al. 2006, ApJ, 639, L5\n\nAcknowledgements. DT acknowledges the support received from the European\nScience Foundation (ESF) for the activity entitled 'Computational Astrophysics\nand Cosmology' (Grant ASTROSIM ref 1974) during his stay at Oxford. We\nthank C. Rimes, C. Pichon and J. Forero-Romero for useful discussions. We also\nthank the referee for his corrections and comments. Simulations presented in this\npaper were run at the IDRIS. This work is part of the Horizon project.\nhttp://www.projet-horizon.fr/\n\n15\n\nAppendix A: Comparing halo finders: AdaptaHOP\nand FOF\nWe first proceed in section A.1 of this appendix to compare\nAdaptaHOP haloes as defined at the end the section 2.1 to haloes\nidentified using the popular FOF algorithm with a standard value\nof b = 0.2 for the linking length parameter. To be consistent,\nwe also choose 20 as the minimum number of particles a halo\ndetected by the FOF algorithm can contain. The halo finder algorithms are then run on the same N-body simulation described\nin paper GalICS I (Hatton et al. 2003). We also find necessary\nto compare the haloes and subhaloes obtained with AdaptaHOP\nusing the MSM method to the halos detected using the FOF algorithm, this task is summarised in section A.2.\nA.1. Comparing halos\nA.1.1. Individual examples\n\nOur first goal is to \"calibrate\" AdaptaHOP. To do so, we simply\ncollapse the node structure tree onto its first node to define a\nsingle halo as a group of particles with a density above the \u03c1t\nthreshold.\nIn this appendix we refer to objects detected with\nAdaptaHOP and whose hierarchy of inner local density maxima\nhas been collapsed as described in section 2.1 as AdaptaHOP\nhaloes. Similarly FOF haloes are objects detected using the FOF\nalgorithm.\nIntuitively, we expect haloes detected with FOF and\nAdaptaHOP to resemble one another, provided they are fairly relaxed and well resolved, i.e. they are close to spherical in shape\nand contain a large enough number of particles. This is the case\nfor the halo represented in Fig. A.1. The projected positions of\ndark matter particles belonging to this halo in the (xy) plane\nare shown in both panels of this figure, with the centre of the\nhalo located at point (0,0). On the left hand side panel we can\nsee the FOF halo, on the right hand side panel, we can see the\nAdaptaHOP halo. At first glance, one can easily be convinced\nthat they are mostly the same halo, but, looking a bit closer,\none gets the impression that the AdaptaHOP halo contains a few\nsmall overdensities which are not included in the FOF halo.\nThis impression is confirmed by going to the next halo example displayed in Fig. A.2. This one is \"peanut\" shaped as it\nhas just undergone a merger. Again both haloes are quite similar\nbut the AdaptaHOP halo clearly shows overdensities which are\nnot part of the FOF halo.\nFrom these two examples, we conclude that haloes detected\nby the two algorithms do not seem to be very sensitive to the\ndynamical state the halo is in. This is understandable since\nboth methods rely on particle positions only to define haloes.\nHowever, the smoothing process used by algorithms which compute the density field (AdaptaHOP in our case) seems responsible for the systematic inclusion of more overdensities within the\nhaloes than percolation algorithms (FOF here), especially when\nhaloes are less relaxed. Even though this last point seems minor, it is more important than it seems: if we wished to compare\nthe SUBFIND and AdaptaHOP subhalo distribution for instance,\nSUBFIND would not detect these extra AdaptaHOP overdensities since it performs a FOF first step, and this would, in turn,\ninfluence the computation of the potential energy of the particles\nthat SUBFIND performs, possibly resulting in a different stripping of particles not bound to the halo.\n\n\f16\n\nD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\nFig. A.1. Example of a \"relaxed\" halo detected in our test simulation, the left panel is the halo detected using friend-of-friend\n(FOF) algorithm, the right panel is the same halo detected using\nAdaptaHOP. The left panel corresponds to the example shown\nin the top right panel of Fig. 3 before the subhalo decomposition\nof the AdaptaHOP halo.\n\nFig. A.2. Example of a \"merging\" halo detected in our test simulation, the left panel is the halo detected using friend-of-friend\n(FOF) algorithm, the right panel is the same halo detected using\nAdaptaHOP. The left panel corresponds to the example shown\nin the top right panel of Fig. 4 before the subhalo decomposition\nof the AdaptaHOP halo.\nA.1.2. Comparing halo finders: statistics.\n\nThe two individual halo examples discussed in the previous section naturally lead us to wonder about how general the conclusions we have drawn really are. In other words:\n\u2013 How well does the mass distribution of resolved haloes obtained with both halo finders agree?\n\u2013 How frequent is the splitting of single AdaptaHOP haloes\ninto several FOF haloes? Does it depend on resolution/mass?\nAre all pieces detected?\n\u2013 How do the smallest, poorly resolved, AdaptaHOP and FOF\nhalo (which do not show internal overdensities) populations\ncompare?\nThe mass distributions of haloes at redshift 0 are shown in\nFig. A.3. In both panels squares correspond to the FOF halo\ndistribution and triangles to the AdaptaHOP halo distribution.\n\nFig. A.3. For both halo finders, haloes detected at redshift 0 were\nsorted into 25 mass bins. The top panel shows the number of\nhaloes detected with FOF (triangles) and AdaptaHOP (squares)\nin each mass bin. Using their particle content, we then crossidentify FOF haloes with their AdaptaHOP counterparts, as described in the text (section 2.1.3). In other words, we enforce that\neach FOF halo is identified with at most one AdaptaHOP halo\nand that the identification yields the same result when performed\nin the reverse order. The bottom panel displays the percentage of\nhaloes per mass bin thus cross identified. The error bars correspond to Poisson uncertainties. The vertical dotted line present\non both panels corresponds to the 20 particle detection threshold.\nThe mass threshold of 20 particles is represented by a vertical\ndashed line. The first impression one gets from the top panel of\nthe figure is that the mass distributions of haloes are very close\nindeed. Looking a bit closer, we find that the number of FOF\nhaloes is more than 5% higher than the number of AdaptaHOP\nhaloes in the first 5 bins, with about 15000 FOF haloes against\n11600 AdaptaHOP haloes of a mass lower than 2.67 1011 M\u2299 .\nFor masses above 4.5 1011 M\u2299 , both algorithms converge within\n0.5%, as we count 1842 FOF haloes and 1856 AdaptaHOP\nhaloes.\nTo compare FOF haloes to their AdaptaHOP counterparts,\nwe simply use the list of particles belonging to each halo as follows: (i) an AdaptaHOP halo is identified with at most one FOF\nhalo, the one which contains the highest fraction of its particles (ii) the same procedure is applied to identify a FOF halo to\nits one and only AdaptaHOP counterpart. A FOF halo and its\nAdaptaHOP counterpart are then deemed to be the same object\nwhen both the highest fraction of the AdaptaHOP halo particles\nare found in the FOF halo, and the highest fraction of the FOF\nhalo particles are found in the AdaptaHOP halo. For each mass\nbin we then compute the number of haloes which are found to\nbe \"identical\" in that sense. The curves in the bottom panel are\nobtained by dividing this number by the number of FOF haloes\nin the bin (triangles) or by the number of AdaptaHOP haloes in\nthe bin (square), for each mass bin. This yields the percentage\nof haloes from each algorithm (FOF or AdaptaHOP) also identified as single haloes by the other. In the case of the least resolved\nhaloes, 90 % of AdaptaHOP haloes are identified as FOF haloes,\nbut this percentage drops to 77 % for FOF haloes identified as\n\n\fD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\n17\n\nAdaptaHOP haloes. Also in the former case, the percentage hits\nthe 100 % mark from 5 1012 M\u2299 onward, whereas for the latter the percentage rises more slowly, reaching 90 % for haloes\naround 5 1012 M\u2299 , and 100 % for haloes of 1014 M\u2299 only.\n\nFig. A.4. Percentage per bin (of width 1 particle) of haloes with\nless than 50 particles which are not detected in two consecutive\nsnapshots between redshifts 0 and 10, i.e. among a total of 70\nsnapshots. The error bars correspond to Poisson uncertainties.\nThe vertical dotted line corresponds to the 20 particle detection\nthreshold.\nWhilst one can argue that the comparison of the two algorithms is irrelevant in a regime where results should not be\ntrusted because of a too small number of particles per halo,\nwe believe it is nevertheless important for two reasons: (i) it\nbetter underlines the differences between the algorithms and\n(ii) semi-analytic models of galaxy formation do populate such\nlow resolution haloes with galaxies (e.g. Hatton et al. (2003);\nSpringel et al. (2005)). The consequent discrepancy at the low\nmass end is quite worrisome, and while it is well known that all\nhalo finders will be incomplete when the number of neighbours\nused to smooth the density field is close to the minimum number of particles per halo, one may wonder whether a significant\nfraction of these haloes is in any case marginally bound.\nA good indicator of this (other than the measure of the total\nenergy of the halo which has quite a large error bar attached to\nit) is their stability in time. This data is shown in Fig. A.4. We\nfind that 27 % of the haloes containing 20 particles detected by\nFOF at a given time output are not found at the next. This number drops to 17 % for AdaptaHOP haloes. For both halo finders\nthis fraction decreases quickly when the number of particles per\nhalo increases. In other words, when using the FOF, we need to\nreach a resolution of at least 34 particles to lose less than 1 %\nof the haloes between time outputs. In the case of AdaptaHOP,\nwith a resolution of 24 particles or more, less than 1 % of haloes\nare lost. From these numbers, we conjecture that only a small\npart of the discrepancy between the two algorithms at the low\nmass end of the halo mass function comes from the fact that\nAdaptaHOP (and in general algorithms using density criteria) is\nmore efficient than FOF (i.e. algorithms using percolation criteria) for selecting bound objects.\nTo further substantiate this claim, we now proceed to check\nthe other possible source of discrepancy, i.e. we address the issue\nof how many of the smallest FOF haloes are not identified as\nindividual haloes by AdaptaHOP, but simply detected as parts of\nother (larger) haloes. We therefore apply the same technique we\nused to produce Fig. A.3 but only to FOF haloes with less than\n100 particles since we are interested in the low mass end, and\n\nFig. A.5. Every FOF halo detected at redshift 0, with less than\n100 particles, is identified with its AdaptaHOP counterpart using the method described in the text (section 2.1.3). Solid curves\nshow the case where we enforce that a unique FOF halo (the one\nwhich contains the largest number of particles of its AdaptaHOP\ncounterpart) be identified with its best AdaptaHOP counterpart\n(the one which contains the highest fraction of the FOF halo particles), as in Fig. A.3. Dashed curves show what happens when\nwe relax this constraint, and allow several FOF haloes to be identified with the same AdaptaHOP counterpart. The error bars correspond to Poisson uncertainties. The vertical dotted line corresponds to the 20 particles detection threshold.\n\nFig. A.6. Average number of FOF haloes at redshift 0 per\nAdaptaHOP halo. The error bars correspond to the mean\nquadratic dispersion. The vertical dotted line corresponds to the\n20 particles detection threshold. The diamond and the square\ncorrespond to the 2 example haloes shown in Figs. A.1 and A.2\nrespectively.\n\nrelaxing the constraint that an AdaptaHOP halo must necessarily\nhave a unique FOF counterpart.\nResults of this experiment are shown as dotted curves in Fig.\nA.5. Examination of this figure reveals that:\n\u2013 when the constraint of unicity is enforced (solid curve),\nthe percentage of FOF haloes identified as individual\nAdaptaHOP haloes never reaches 100 %, even for haloes\ncontaining 100 particles. Instead, this percentage rises\nslowly from 68 % for FOF haloes in the first (20-24 particles) mass bin to reach 90 % (+/- 1 %) for FOF haloes more\nmassive than 4 1011 M\u2299 (44 particles or so).\n\n\f18\n\nD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\n\u2013 when the constraint of unicity is relaxed (dashed curve) -\nmeaning that one AdaptaHOP halo can have several FOF\ncounterparts -, only 14 % of FOF haloes in the first mass\nbin (20-24 particles) are not identified at all by AdaptaHOP\nas being part of a halo, and this percentage drops to less than\n1 % in the next mass bin (24-28 particles). Furthermore, from\na FOF halo mass of 2.65 1011 M\u2299 (32 particles) onward, not\na single FOF halo remains undetected by AdaptaHOP.\nThese numbers lead us to conclude that most of the discrepancy of the halo mass function between halo finders at the\nlow mass end can indeed be attributed to a different integration of small objects into larger ones, i.e. to different numbers\nof small overdensities being included in FOF haloes and their\nAdaptaHOP counterparts.\nOne cannot help to wonder how mass dependent such a statement is, i.e. if these small haloes preferentially get included in\nthe outskirts of large clusters, or if their \"mis\"-classification happens uniformly across the whole halo mass range spanned by the\nN-body simulation. This information is presented in Fig. A.6,\nwhere we counted the number of FOF haloes detected at the\nlast time output (z = 0) inside each halo found by AdaptaHOP.\nThe AdaptaHOP halo population was then split into 25 mass\nbins, and for each of these bins we computed the average number (and associated mean quadratic dispersion) of FOF haloes\ndetected as counterparts of the AdaptaHOP haloes. For smallish, galaxy size AdaptaHOP haloes (less massive than 4 1012\nM\u2299 or about 400 particles), we find that the average number\nof FOF haloes per AdaptaHOP halo stays close to the minimal value of one, but starts increasing quite steeply as a function of AdaptaHOP halo mass after that, scaling as N \u221d M 3/4 .\nThis implies that cluster size haloes detected by AdaptaHOP\nwith masses comprised between 1014 and 1015 M\u2299 contain up\nto several tens of FOF haloes. Since the halo mass function decays as N \u221d M \u22121 (see Fig. A.3) in this mass range, this means\nthat cluster size AdaptaHOP haloes get in total roughly the same\nnumber of small \"undetected\" FOF haloes as galaxy/group size\nAdaptaHOP haloes, only they are redistributed over a smaller\nnumber of objects. As an illustration of the scatter around the average value, the two example haloes of similar masses displayed\nin figures A.1 and A.2 are marked with a diamond and a square\nin Fig. A.6 respectively, with the diamond AdaptaHOP halo containing 3 FOF haloes and the square one 16. Note that this explains why in those two cases, most, if not all the extra \"clumps\"\nof particles seen in the AdaptaHOP halo are not present in the\nFOF halo to which it was identified, but are detected by FOF as\nstand alone haloes.\nThe two group finding algorithms we have studied (FOF\nand AdaptaHOP) give similar results. The discrepancies measured between them occur principally at the low mass end of\nthe halo mass function and can be brought down to the percent\nlevel when one considers that haloes detected using AdaptaHOP\ngenerally contain several FOF haloes. Alternatively, one could\nuse (as in the HOP algorithm, see Eisenstein & Hut (1998)),\nmultiple/adaptive density thresholds to separate haloes from the\nbackground to reduce discrepancies with percolation algorithms.\nHowever it is unclear that the various thresholds to use can be determined using physical arguments, so we believe it makes more\nsense to limit the number of \"free\" parameters and use a single\ndensity threshold, as implemented in AdaptaHOP. One can then\ntake advantage of the embedded hierarchy of density maxima\nwithin each of the haloes identified that way to define subhaloes.\nFinally, we emphasise that it is hard to decide which of the algorithms (percolation or density based) is closer to the \"true\"\n\ngravitationally bound halo, as poorly resolved substructures located in the outskirts of massive haloes are neither isolated, nor\nfully relaxed objects, and as such, a reliable estimate of their total\nenergy is not easy to achieve, making it very difficult to decide\nwhether they are bound to the larger halo.\nA.2. Comparing halo finder MSM vs FOF\nA.2.1. Individual example\n\nFig. A.7. Top right panel: AdaptaHOP halo shown in the right\npanel of Fig. A.2. Top left panel: the 16 FOF haloes whose particles are found in this AdaptaHOP halo (the best FOF halo match\nis shown in the left panel of Fig. A.2). Bottom left panel: virial\nregions of the 16 FOF haloes. Bottom right panel: virial regions\nof the MSM halo and subhaloes as detailed in Fig. 4.\nAs mentioned in the previous subsection of this appendix,\nby mapping particles contained in an AdaptaHOP halo onto the\nFOF halo distribution, one realises that these particles often belong to several FOF haloes. This is illustrated in Fig. A.7, where\nwe see in the top left panel the 16 FOF haloes which contain\nparticles from the single AdaptaHOP halo plotted in the top right\npanel. Recall that this means that for each of these 16 FOF haloes\nmost of their particles are cross identified as particles belonging\nto the AdaptaHOP halo. Each circle in the bottom left panel represents the virial sphere of one of these 16 FOF haloes. The circles on the bottom right panel represent the virial sphere of the\nmain halo and its subhaloes defined using the MSM method. We\npoint out that the largest FOF halo in the cluster (shown in Fig.\nA.2) includes both the main MSM halo and its largest subhalo.\nIt means that from the FOF point of view the major merger between halo and largest subhalo has occurred as well. We also see\nthat the 15 extra FOF haloes are detected as MSM subhaloes of\nthe main halo. As a matter of fact this cluster of 16 FOF haloes\nis identified with a single structure tree containing 23 subhaloes\nby AdaptaHOP/MSM.\n\n\fD. Tweed et al.: Building merger trees from cosmological N-body simulations\n\n19\n\nA.2.2. Statistics\n\nTurning now to the issue of the identification of several FOF\nhaloes with a single AdaptaHOP halo, we use the MSM method\nto check how often FOF haloes are detected as subhaloes rather\nthan main haloes.\n\nFig. A.9. Number of FOF haloes at redshift 0 whose particles\nare found in a single main MSM halo (i.e. in an AdaptaHOP\nhalo without its MSM subhaloes). The error bars correspond to\nthe mean quadratic dispersion. The vertical dotted line corresponds to the 20 particles detection threshold. The diamond and\nthe square correspond to the examples shown in figures A.1 and\nA.2 respectively.\nFig. A.8. Cross identification of FOF haloes with less than 100\nparticles at z = 0 and MSM haloes or subhaloes (see text section 2.1.3 for details). In the first case (solid curves), only one\nFOF halo is allowed to be identified with a MSM halo or subhalo. In the second case (dashed curves), several FOF haloes can\nbe identified with a single MSM halo or subhalo. The error bars\ncorrespond to Poisson uncertainties. The vertical dotted line corresponds to the 20 particles detection threshold.\nAs we did in the section A.1.2 of this appendix, we now proceed to check that the conclusions we have just drawn for a single, well resolved halo are valid for the whole distribution of\nhaloes, and especially for the poorly resolved ones. In order to\ndo so, for each time output of the N-body simulation, we check\nwhether each halo detected by the FOF is detected either as a\nhalo or as a subhalo with the MSM. This data is presented in\nFig. A.8 for all haloes between 1.66 1011 M\u2299 and 8.33 1011 M\u2299\n(i.e. 20 to 100 particles). The solid curves in this figure are obtained when we allow only one FOF halo to be cross-identified\nwith a MSM halo or subhalo. The percentage of FOF haloes\nidentified as AdaptaHOP haloes (i.e. containing their subhaloes)\nis the same as in Fig. A.5, but the main difference is that now\nthe smallest FOF haloes can be identified as subhaloes of larger\nhaloes instead of having to be cross-identified with a single small\nAdaptaHOP halo. So the new information that we get from this\nfigure, as compared to Fig. A.5 is that the percentage of FOF\nhaloes identified as MSM subhaloes (triangles) is quite small (5\n%) at the 20 particles mass threshold, increases until 3 1011 M\u2299\nand remains steady around the 10 % level up to 8 1011 M\u2299 . When\nwe allow for the fact that several FOF haloes can be found in one\nMSM halo or subhalo we obtain the dashed curves, i.e. if one\nMSM halo or subhalo was cross-identified with at most one FOF\nhalo the dashed and solid curves would perfectly match. The interesting result here is that this actually happens to be the case for\nall but the lowest FOF halo mass bins for MSM subhaloes (triangles), but not for MSM main haloes (diamonds) which means\nthat small FOF haloes are preferentially fused into the smooth\ncomponent of the main halo found by the MSM method rather\nthan with MSM subhaloes.\nTo quantify this behaviour a bit further, we plot in Fig. A.9,\nthe average number of FOF haloes per MSM main halo. This\n\nfigure was obtained in the same way as Fig. A.6 except that we\nexcluded FOF haloes cross-identified with MSM subhaloes. We\nnotice that the average number of FOF haloes per MSM halo\nis close to 1 until we consider MSM haloes with masses greater\nthan 1013 M\u2299 . Then the average number of FOF haloes per MSM\nhalo rises quickly as a function of MSM halo mass. At 4 1014\nM\u2299 we obtain on average 17.6 FOF haloes per MSM haloes.\nThis means that small FOF haloes (less than 50 particles or so)\nare preferentially blended with the smooth main halo component\nof group to cluster size main MSM haloes: they are not dense\nenough to be detected as separate local maxima which is the\nnecessary condition to be identified as subhaloes.\n\n\f"}