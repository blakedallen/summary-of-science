{"id": "http://arxiv.org/abs/1010.5228v2", "guidislink": true, "updated": "2010-10-26T10:55:54Z", "updated_parsed": [2010, 10, 26, 10, 55, 54, 1, 299, 0], "published": "2010-10-25T19:38:36Z", "published_parsed": [2010, 10, 25, 19, 38, 36, 0, 298, 0], "title": "A twisted dimer model for knots", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1010.1484%2C1010.0125%2C1010.6097%2C1010.3729%2C1010.3037%2C1010.3175%2C1010.1425%2C1010.0011%2C1010.1588%2C1010.4224%2C1010.3027%2C1010.0079%2C1010.0523%2C1010.6280%2C1010.5296%2C1010.0809%2C1010.4831%2C1010.4872%2C1010.0212%2C1010.2268%2C1010.1634%2C1010.4707%2C1010.1699%2C1010.0189%2C1010.4562%2C1010.5201%2C1010.0103%2C1010.3688%2C1010.3249%2C1010.5792%2C1010.3293%2C1010.2581%2C1010.2358%2C1010.4786%2C1010.5864%2C1010.1409%2C1010.2946%2C1010.4357%2C1010.0903%2C1010.5704%2C1010.1805%2C1010.3899%2C1010.2327%2C1010.3563%2C1010.4227%2C1010.1993%2C1010.6267%2C1010.3289%2C1010.1040%2C1010.4779%2C1010.5637%2C1010.5356%2C1010.0358%2C1010.1095%2C1010.5072%2C1010.0733%2C1010.2488%2C1010.1280%2C1010.5042%2C1010.0328%2C1010.0516%2C1010.6166%2C1010.3134%2C1010.5228%2C1010.3429%2C1010.2957%2C1010.0375%2C1010.3021%2C1010.0577%2C1010.4751%2C1010.2321%2C1010.2626%2C1010.2640%2C1010.4631%2C1010.6180%2C1010.3121%2C1010.4543%2C1010.3809%2C1010.4172%2C1010.2217%2C1010.1760%2C1010.0377%2C1010.0630%2C1010.0431%2C1010.3397%2C1010.2285%2C1010.2408%2C1010.2885%2C1010.3266%2C1010.4661%2C1010.3046%2C1010.2962%2C1010.4665%2C1010.6193%2C1010.3139%2C1010.2298%2C1010.3691%2C1010.1192%2C1010.1369%2C1010.2416%2C1010.2274&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "A twisted dimer model for knots"}, "summary": "We develop a dimer model for the Alexander polynomial of a knot. This\nrecovers Kauffman's state sum model for the Alexander polynomial using the\nlanguage of dimers. By providing some additional structure we are able to\nextend this model to give a state sum formula for the twisted Alexander\npolynomial of a knot depending on a representation of the knot group.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1010.1484%2C1010.0125%2C1010.6097%2C1010.3729%2C1010.3037%2C1010.3175%2C1010.1425%2C1010.0011%2C1010.1588%2C1010.4224%2C1010.3027%2C1010.0079%2C1010.0523%2C1010.6280%2C1010.5296%2C1010.0809%2C1010.4831%2C1010.4872%2C1010.0212%2C1010.2268%2C1010.1634%2C1010.4707%2C1010.1699%2C1010.0189%2C1010.4562%2C1010.5201%2C1010.0103%2C1010.3688%2C1010.3249%2C1010.5792%2C1010.3293%2C1010.2581%2C1010.2358%2C1010.4786%2C1010.5864%2C1010.1409%2C1010.2946%2C1010.4357%2C1010.0903%2C1010.5704%2C1010.1805%2C1010.3899%2C1010.2327%2C1010.3563%2C1010.4227%2C1010.1993%2C1010.6267%2C1010.3289%2C1010.1040%2C1010.4779%2C1010.5637%2C1010.5356%2C1010.0358%2C1010.1095%2C1010.5072%2C1010.0733%2C1010.2488%2C1010.1280%2C1010.5042%2C1010.0328%2C1010.0516%2C1010.6166%2C1010.3134%2C1010.5228%2C1010.3429%2C1010.2957%2C1010.0375%2C1010.3021%2C1010.0577%2C1010.4751%2C1010.2321%2C1010.2626%2C1010.2640%2C1010.4631%2C1010.6180%2C1010.3121%2C1010.4543%2C1010.3809%2C1010.4172%2C1010.2217%2C1010.1760%2C1010.0377%2C1010.0630%2C1010.0431%2C1010.3397%2C1010.2285%2C1010.2408%2C1010.2885%2C1010.3266%2C1010.4661%2C1010.3046%2C1010.2962%2C1010.4665%2C1010.6193%2C1010.3139%2C1010.2298%2C1010.3691%2C1010.1192%2C1010.1369%2C1010.2416%2C1010.2274&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We develop a dimer model for the Alexander polynomial of a knot. This\nrecovers Kauffman's state sum model for the Alexander polynomial using the\nlanguage of dimers. By providing some additional structure we are able to\nextend this model to give a state sum formula for the twisted Alexander\npolynomial of a knot depending on a representation of the knot group."}, "authors": ["Moshe Cohen", "Oliver T. Dasbach", "Heather M. Russell"], "author_detail": {"name": "Heather M. Russell"}, "author": "Heather M. Russell", "links": [{"title": "doi", "href": "http://dx.doi.org/10.4064/fm225-1-4", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/1010.5228v2", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1010.5228v2", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "16 pages", "arxiv_primary_category": {"term": "math.GT", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "math.GT", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "57", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1010.5228v2", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1010.5228v2", "journal_reference": "Fundamenta Mathematicae 225 (2014), 57-74", "doi": "10.4064/fm225-1-4", "fulltext": "arXiv:1010.5228v2 [math.GT] 26 Oct 2010\n\nA TWISTED DIMER MODEL FOR KNOTS\nMOSHE COHEN, OLIVER T. DASBACH, AND HEATHER M. RUSSELL\n\nAbstract. We develop a dimer model for the Alexander polynomial of a knot. This\nrecovers Kauffman's state sum model for the Alexander polynomial using the language\nof dimers. By providing some additional structure we are able to extend this model to\ngive a state sum formula for the twisted Alexander polynomial of a knot depending on a\nrepresentation of the knot group.\n\n1. Introduction\nA dimer is an edge in a bipartite graph, and a dimer covering is a perfect matching for\nthat graph. The study of dimer coverings started in the 1960's with the work of Kasteleyn\n[Kas63] and Temperley-Fisher [TF61] who used it as a tool for studying statistical physics.\nKasteleyn showed that the partition function on weighted bipartite planar graphs can be\nexpressed as a determinant of a suitable matrix. The last ten years have seen a resurgence of\nthe study of dimers and the application of this theory to many other areas of mathematics.\nOur interest is in exploring the opposite direction. We have given matrices, and we want\nto find the corresponding dimer model that expresses the determinant of the matrix as the\npartition function on the graph. Two well-known polynomial knot invariants, the classical\nAlexander polynomial and Xiao-Song Lin's twisted Alexander polynomial, are defined as\ndeterminants. The goal of this current work is to use the language of dimers to find a\ncombinatorial model for the Alexander polynomial and the twisted Alexander polynomial.\nGiven a knot K in S 3 and some generic diagram for the knot we construct an associated\nplanar bipartite graph with one set of vertices corresponding to crossings and the other set\ncorresponding to faces. Edges signify incidence between crossings and faces. Using this\ngraph along with a certain weighting of the edges we provide a state sum model for the\nAlexander polynomial in terms of dimer coverings. This model recovers Kauffman's state\nsum model for the Alexander polynomial [Kau87].\nConsider a representation \u03c1 of the fundamental group of the knot complement. Associated to this representation one defines the twisted Alexander polynomial \u2206\u03c1,K which is an\ninvariant of the knot together with the representation \u03c1. We extend our dimer model for the\nAlexander polynomial to provide a state sum model for the twisted Alexander polynomial.\nIn Section 2 we review some basic definitions and theorems dealing with dimer coverings.\nIn Section 3 we recall the definition of the Alexander polynomial and show how to translate\nDate: October 22, 2018.\nThe second author was supported in part by NSF grants DMS-0806539 and DMS-0456275 (FRG). The\nfirst and third authors were partially supported by NSF VIGRE grant DMS 0739382.\n1\n\n\f2\n\nM. COHEN, O. T. DASBACH, AND H. M. RUSSELL\n\nit into a dimer model. We will see that it is equivalent to Kauffman's state sum model.\nSection 4 begins with the definition of the twisted Alexander polynomial and shows how\nthe dimer model can be augmented to provide a twisted dimer model. We provide examples\nthroughout.\n2. Dimer Background\nIn this section we review some facts and results about dimer coverings of graphs. For the\ninterested reader Kenyon provides an excellent introductory set of lectures on this subject\n[Ken09]. We will also need to recall some results of Kasteleyn [Kas63] a good explanation\nof which can be found in Kuperberg's work [Kup94, Kup02, Kup98].\nLet \u0393 = (V1 , V2 , E) be a bipartite graph with V1 and V2 the two vertex sets and E the\ncollection of edges in \u0393 each of which has one endpoint in V1 and one endpoint in V2 .\nDefinition 2.1. A dimer is an edge in E. A dimer covering is a subset m of E such that\neach vertex in \u0393 is an endpoint of exactly one edge in m. In other words a dimer covering\nis a perfect matching on \u0393. Let M be the set of all dimer coverings of \u0393; note that M = \u2205\nwhenever |V1 | =\n6 |V2 |.\nLet \u03bc : E \u2192 C[t] be a weighting of the graph \u0393, and denote the weighted graph by \u0393\u03bc .\nThen we consider the following partition function Z(\u0393\u03bc ) which is of particular interest in\nstatistical physics.\nZ(\u0393\u03bc ) =\n\nX Y\n\n\u03bc(e)\n\nm\u2208M e\u2208m\n\nDefinition 2.2. Given a weighting \u03bc of \u0393 and an ordering of the vertex sets\nV1 = {v1,1 , . . . , v|V1 |,1 } and V2 = {v1,2 , . . . , v|V2 |,2 }\nconstruct the matrix M (\u0393\u03bc ) of dimension |V1 | \u00d7 |V2 | with entries specified by the weight\nfunction \u03bc as follows: The ij th entry of M (\u0393\u03bc ) is given by the sum of all weights \u03bc assigned\nto edges between vi,1 and vj,2 . We call this the weight matrix for \u0393\u03bc . Figure 1 gives an\nexample.\nLet Perm(M (\u0393\u03bc )) denote the permanent (or unsigned determinant) of M (\u0393\u03bc ). Thus,\nwe see that Z(\u0393\u03bc ) = Perm(M (\u0393\u03bc )). In the case that |V1 | =\n6 |V2 | both values are 0. A\nnatural question to ask is: under what conditions can the weighting \u03bc be modified to get a\nnew weighting \u03bc\u2032 with the property that the partition function for \u0393\u03bc\u2032 is the determinant\nof the weight matrix for \u0393\u03bc . In other words does there exist weighting \u03bc\u2032 : E \u2192 C[t]\nsuch that Z(\u0393\u03bc\u2032 ) = Det(M (\u0393\u03bc ))? In the case that \u0393 is planar Kasteleyn proves that such\na modification is always possible. He accomplishes this by using what is now called a\nKasteleyn weighting.\nDefinition 2.3. Let \u0393 be a bipartite plane graph, that is a bipartite graph together with\na fixed embedding of that graph in the plane. A Kasteleyn weighting \u01eb : E \u2192 {\u00b11} is a\nchoice of \u00b11 for each edge with the property that each bounded face with 0 mod 4 edges\nhas an odd number of \u22121 assignments and each bounded face with 2 mod 4 edges has an\neven number of \u22121 assignments.\n\n\fTWISTED DIMER MODEL\n\n3\n\nProposition 2.4 (Kasteleyn). Every bipartite plane graph \u0393 has a Kasteleyn weighting.\nProof. We can prove this fact by providing an algorithm for finding a Kasteleyn weighting.\nBegin by choosing a spanning tree T = (V1 , V2 , ET ) \u2282 \u0393. If \u0393\u0304 is the dual plane graph of \u0393\n(with vertices given by faces of \u0393, edges transverse to edges of \u0393, and faces given by vertices\nof \u0393) then there is an associated spanning tree T\u0304 \u2282 \u0393\u0304 which is disjoint from T . Consider T\u0304\nto be rooted at the vertex corresponding to the unbounded face.\nLet \u01eb : ET \u2192 {\u00b11} be arbitrarily given. Choose a valence 1 vertex v1 of T\u0304 that is not\nthe root vertex. This vertex represents a face of \u0393 that has all but one bounding edge\npresent in the tree T . Let e1 be the edge that is missing in that face of \u0393. Since all other\nedges bounding the face have been assigned weights, the choice of value for \u01eb(e1 ) that will\nsatisfy the properties of a Kasteleyn weighting is forced. Remove the vertex v and the edge\nincident on v from T\u0304 , and define \u01eb(e1 ) as necessary.\nRepeat this process, pruning the non-root valence 1 vertices and their edges as you go.\nEventually a single edge connecting a vertex v to the root is all that remains in T\u0304 . This\nrepresents a single edge e in \u0393 shared by a bounded face and the unbounded face. Assign\nthe necessary value to \u01eb(e) in order to complete to a Kasteleyn weighting.\n\u0003\nDefinition 2.5. Let \u0393\u03bc be a weighted bipartite plane graph. We call the weight matrix\nM (\u0393\u01eb*\u03bc ) the Kasteleyn matrix, and we give it the special notation K(\u0393\u03bc ). See Figure 1\nfor a calculation of a Kasteleyn matrix.\nb\n\na\n\n\u0393\u03bc =\n\n+1\n+1\n\nf\n\ni\n\nd\n\n\u0393\u01eb =\n\ng\nj\n\nh\n\n+1\n\n+1\n\n\u22121\n\nl\n\n\uf8ec\n\uf8ec\nM (\u0393\u03bc ) = \uf8ec\n\uf8ec\n\uf8ed\n\na\ne\nd\n0\n0\n\nb\n0\n0\nf\nc\n\n+1\n+1\n\n+1\nm\n\n+1\n\nk\n\n\uf8eb\n\n+1\n\n+1\nc\n\ne\n\n\u22121\n\n+1\n\n0\ni\nh\n0\n0\n\n0 0\nj 0\nk 0\nl m\n0 g\n\n\uf8f6\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f8\n\n\uf8eb\n\n\uf8ec\n\uf8ec\nK(\u0393\u03bc ) = \uf8ec\n\uf8ec\n\uf8ed\n\na\ne\nd\n0\n0\n\nb 0 0\n0\n0 \u2212i j\n0\n0 h k\n0\nf 0 l \u2212m\nc 0 0\ng\n\n\uf8f6\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f8\n\nFigure 1. A weighted bipartite graph, a Kasteleyn weighting, the weight\nmatrix M (\u0393\u03bc ) and the Kasteleyn matrix K(\u0393\u03bc )\nA proof of the following result, which is due to Kasteleyn, can be found in [Kup98].\nTheorem 2.6 (Kasteleyn). Let \u0393\u03bc be a weighted bipartite plane graph. Then\nZ(\u0393\u01eb*\u03bc ) = Perm(K(\u0393\u03bc )) = \u00b1Det(M (\u0393\u03bc )),\nor equivalently\nZ(\u0393\u03bc ) = Perm(M (\u0393\u03bc )) = \u00b1Det(K(\u0393\u03bc ))\nRemark 2.7. It is known that Kasteleyn's theorem does not hold in general for non planar\ngraphs. In fact, it holds if and only if the graph does not have K3,3 as a minor [LP09].\n\n\f4\n\nM. COHEN, O. T. DASBACH, AND H. M. RUSSELL\n\n3. The Alexander polynomial\nWe begin by giving a determinant definition of the Alexander polynomial due to Fox\nwhich can be found in [CF77]. By using Kasteleyn's theorem we will construct a bipartite\nplane graph such that the partition function of this graph is the Alexander polynomial.\nFinally, we will show that this approach yields Kauffman's state sum model [Kau87].\nWhile it might initially seem strange to express a determinant by a partition function\nthis combinatorial model proved to be useful for example in the study of Ozsv\u00e1th-Szab\u00f3Knot-Floer homology theory, see e.g. [OS03, Low08] and compare with [DL10] .\nMoreover, some properties of the Alexander polynomial follow directly from this approach, e.g. it is an easy exercise to show that the Alexander polynomial of an alternating\nknot has coefficients of alternating signs.\n3.1. The Alexander polynomial as a determinant. Consider a knot K \u2282 S 3 along\nwith some fixed generic diagram DK . Label the faces of DK with a0 , . . . , am where a0 is the\nunbounded face. Choose some base point above the plane of projection. Let A0 , . . . , Am be\nloops in \u03c0 := \u03c01 (S 3 \u2212 K) given by passing through face ai and returning through a0 to the\nbase point. Thus, loop A0 is trivial in \u03c0. Using this notation we have the Dehn presentation\nfor the knot group\n\u03c0 = hA0 , . . . , Am |r1 , . . . rm\u22121 , A0 i\nwhere the ri are relations coming from the crossings in DK . In particular the Dehn relation\n\u22121\nfor a crossing shown in Figure 2 is r : A4 A\u22121\n2 = A3 A1 .\n\u2745 a1\na\u2745\na3\n2\n\u2745\na4 \u2745\n\nFigure 2. A crossing with labeled faces.\nSetting A0 = 1 and incorporating that change in the relations ri we get a presentation of\n\u03c0 with m generators and m \u2212 1 relations\n\u03c0 =< A1 , . . . , Am : r1 , . . . , rm\u22121 > .\n\u2202\nLet Fm be the free group on m generators A1 , . . . , Am . Then the free derivative \u2202A\nis a\ni\nmap from Fm to Z[Fm ] recursively defined by\n\u2202\n\u2022 \u2202A\n(1) = 0,\ni\n\u2202\n\u2022 \u2202Ai (Aj ) = \u03b4ij ,\n\u2202\n(\u2212Aj ) = \u2212\u03b4ij A\u22121\n\u2022 \u2202A\nj ,\ni\n\u2202\n\u2202\n\u2202\n\u2022 and \u2202Ai (wAj ) = \u2202Ai (w) + w \u2202A\n(Aj ) for any word w \u2208 Fm .\ni\n\nConsider the map \u03c6 : Fm \u2192 \u03c0 defined by the map \u03c6(Ai ) = Ai . We can extend this to\na map \u03c6 : Z[Fm ] \u2192 Z[\u03c0], and the kernel of this map will be generated by the relations\nri in Fm . Let \u03c8 : Z[\u03c0] \u2192 Z[t\u00b11 ] be the abelianization mapping which will take meridians\npositively linking the knot to the variable t.\n\n\fTWISTED DIMER MODEL\n\n5\n\n\u0011\n\u0010\n\u2202ri\n.\nLet MK be the (m \u2212 1) \u00d7 m dimensional matrix with ij th entry given by \u03c8 \u25e6 \u03c6 \u2202A\nj\nRemove any column corresponding to a face of the diagram DK that is adjacent to the\n\u2032 . Up to sign and multiplication by a power\nunbounded face obtaining a square matrix MK\n\u00b11\n\u2032\nof t , the determinant of MK is independent of the choice of the adjacent face and it is\ninvariant under Reidemeister moves. Thus we define the Alexander polynomial K, denoted\n\u2206K (t), to be\n\u2032\n\u2206K (t)=det(M\n \u0307\nK ),\nwhere =\n \u0307 means equality up to multiplication with \u00b1tk for some power k.\nIt will turn out that the entries of the matrix MK are all either 0 or \u00b11 or \u00b1t. More\nspecifically, the free derivatives of all the relations ri will end up being 0 or 1 or meridians in\n\u03c0. In other words this means that while we form the matrix MK using the Dehn presentation\nfor the knot group, the free derivatives of the relations are up to a sign the so called\nWirtinger generators. Since it will become important in Section 4.1 we recall the Wirtinger\npresentation for \u03c0 and then show the calculation of the free derivatives.\nGiven the diagram DK we can label the arcs of the knot c1 , . . . , cl . Again choose some\nbase point above the plane of projection. For 1 \u2264 i \u2264 l let the loop xi be the meridian\nthat leaves the base point, positively links the arc ci , and returns to the base point. We\nagain get a relation rj\u2032 at each crossing. Using these generators and relations we get another\npresentation for \u03c0 known as the Wirtinger presentation.\n\u2032\n>\n\u03c0 =< x1 , . . . , xl |r1\u2032 , . . . , rl\u22121\n\nUnder abelianization we see that \u03c8(xi ) = t for all i.\nLemma 3.1. The free derivatives of Dehn relations are either 0, \u00b11 or, up to a sign,\n\u2032 has entries either 0, \u00b11 or \u00b1t. By multiplying\nWirtinger generators. Thus the matrix MK\n\u2032 has only non-negative entries 0,\nsuitable rows and colums with \u22121 we can assume that MK\n1 or t.\nProof. As we noted above the Dehn relation coming from this crossing in Figure 2 has the\n\u22121\nform A4 A\u22121\n2 = A3 A1 . Furthermore if we say that x is the Wirtinger generator assigned to\nthe overcrossing strand in Figure 2 then we have that A4 A\u22121\n2 = x.\nNow we take the free derivatives of the relation r with respect to each variable and see\nthat the results can be written completely in terms of x and 1. Indeed, we get the following.\n\u2202\n\u2202A1 (r)\n\u2202\n\u2202A3 (r)\n\n= A4 A\u22121\n2 =x\n= \u22121\n\n\u2202\n\u2202A2 (r)\n\u2202\n\u2202A4 (r)\n\n= \u2212A4 A\u22121\n2 = \u2212x\n=1\n\nIt remains to show that the matrix can be transformed into a matrix with only nonnegative entries by multiplying suitable rows or columns by \u22121. For that color the faces of\nthe diagram black/white so that no two adjacent faces have the same color. We see that\nlocally the partial derivatives are negative at the two generators corresponding to either the\nblack faces or the white faces. By multiplying all entries locally by \u22121, i.e. multiplying a\nrow by \u22121. we can assume that the partial derivatives are negative at, say, the black faces.\nBy multiplying all columns corresponding to black faces we obtain the result.\n\u0003\n\n\f6\n\nM. COHEN, O. T. DASBACH, AND H. M. RUSSELL\n\n3.2. The dimer state sum. Using Kasteleyn's Theorem 2.6 we get the following construction which expresses the Alexander polynomial, given as a determinant, as a partition\nfunction of a certain bipartite graph.\nFor this we take a knot diagram and chose two adjacent faces that we disregard. As in\n\u2032 that is indexed\nLemma 3.1 the Alexander polynomial is the determinant of a matrix MK\nby the remaining faces and the relations, which correspond to the crossings of the diagram.\nFor each relation (i.e. crossing) locally the entries in the matrix are described by the picture\nin Figure 3 as proven in Lemma 3.1.\n\u2745 t\nt\u2745 1\n\u2745\n1 \u2745\n\nFigure 3. Local weights at a crossing\nThus we obtain the following:\nAlgorithm 3.2. The dimer state sum model\n(D1) Construct a bipartite plane graph \u0393 = (V1 , V2 , E) as follows.\n\u2022 The vertex set V1 is the set of crossings of the diagram.\n\u2022 The vertex set V2 is the set of faces of the diagram.\n\u2022 Given vertices x \u2208 V1 and y \u2208 V2 the edge (x, y) is in the set E if and only if\nthe crossing x is incident on the face y.\nWe will call this the Alexander graph.\n(D2) Use the weighting system of 3 to define a weighting \u03b1 : E \u2192 C[t] on \u0393.\n(D3) Choose a Kasteleyn weighting. The next paragraph will describe a particular weighting due to Kauffman.\nP\nQ\n(D3) Calculate the partition function Z(\u0393\u03b1 ) = m\u2208M e\u2208m \u03b1(e).\n\n3.2.1. Kauffman's Kasteleyn weighting. The following proposition describes a way to choose\na Kasteleyn weighting which is due to Kauffman. The proof that it gives a Kasteleyn\nweighting is an easy exercise.\n\nProposition 3.3. The assignments of weights given by Figure 4 is a Kasteleyn weighting,\n\u2745 -1\n+1\u2745 +1\n\u2745\n+1 \u2745\n\nFigure 4. Kauffman's Kasteleyn weighting\nNow the following Theorem immediately follows by construction and Kasteleyn's theorem\n2.6.\nProposition 3.4. The dimer state sum model described in Algorithm 3.2 calculates the\nAlexander polynomial. In other words for the weighted graph \u0393\u03b1 we have \u2206L (t)=Z(\u0393\n \u0307\n\u03b1 ).\n\n\fTWISTED DIMER MODEL\n\nt1\n\n1\n1\n\n1\n\n11\n\n1\n\n7\n\n1\n1\n\n-1\n\nt\n\n-1\n\n1\n\nFigure 5. Local weights and Kauffman's Kasteleyn weights for the trefoil\nExample 3.5. Consider the trefoil given in Figure 5.\nAssociated to that diagram we have the following bipartite plane graph where the black\nvertices correspond to the faces and the white vertices to the crossings of the diagram. This\ngraph has three dimer coverings.\n1\nt\n\n1\n1\n\n-1\n\nM=\n\n-1\n\n(\n\n,\n\n)\n\n,\n\nt\n\nThen we calculate the Alexander polynomial using Algorithm 3.2 as follows.\n!\n!\n!\nZ(\u0393\u03b1 ) = \u03b1\n\n+\u03b1\n\n+\u03b1\n\n= t2 \u2212 t + 1\n\n3.3. Kauffman's state sum. It turns out that with the dimer state sum model described\nin the previous section we recover the state sum model by Kauffman for the Alexander\npolynomial. We will briefly describe this model here.\nAgain let DK be a generic diagram of a knot K. Choose the unbounded face of DK and\none other face that is adjacent to the unbounded face. We will disregard these faces in our\ncalculation. A simple Euler characteristic argument tells us that the number of crossings of\nthe diagram is equal to the number of faces remaining. Say this number is m.\nAlgorithm 3.6. Kauffman state sum model\n(K1) Decorate the diagram DK with the product of the two weights around each crossing\nthat are depicted in Figure 3 and Figure 4.\n(K2) Find all possible ways to distribute m markers on the diagram so that each remaining\nface and each crossing has exactly one marker. Each of these configurations is called\na state. Denote the set of all states by S.\n(K3) For each s \u2208 S let w(s) be the product of the weights associated to the state. Then\nX\n\u2206K (t)=\n \u0307\nw(s).\ns\u2208S\n\nThe weights given in the lefthand diagram in step K1 of Algorithm 3.6 are encoding\nthe free derivatives described in the previous section. The values shown are not exactly\n\n\f8\n\nM. COHEN, O. T. DASBACH, AND H. M. RUSSELL\n\n\u0011\n\u0010\n\u2202ri\n, but simple matrix operations discussed in [Kau87] give us these unsigned\n\u03c8 \u25e6 \u03c6 \u2202A\nj\nweights which are more convenient for calculation.\nExample 3.7. Consider the following weighted diagram of the trefoil and its three states.\n(The two starred regions are the disregarded faces.)\n\nt 1\n\n1\n1\n\n-1\n\nS=\n-1\n\n\uf8f1\n\uf8f4\n\uf8f4\n\uf8f4\n\uf8f2\n\n1\n0\n0\n1\n1\n0\n1\n0\n\n\uf8f4\n\uf8f4\n\uf8f4\n\uf8f3\n\nt\n\n1\n0\n0\n1\n\n,\n\n1\n0\n0\n1\n\n11\n00\n11\n00\n\n,\n\n11\n00\n00\n11\n\n1\n0\n1\n0\n11\n00\n11\n00\n\n00\n11\n11\n00\n00\n11\n\n\uf8fc\n\uf8f4\n\uf8f4\n\uf8f4\n\uf8fd\n\uf8f4\n\uf8f4\n\uf8f4\n\uf8fe\n\nThen using Algorithm 3.6 we calculate the Alexander polynomial as follows.\n\uf8eb\n\n\u2206K (t)=w\n \u0307 \uf8ed\n\n1\n0\n1\n0\n\n11\n00\n00\n11\n11\n00\n00\n11\n\n\uf8f6\n\n\uf8eb\n\n\uf8f8+w\uf8ed\n\n1\n0\n1\n0\n1\n0\n1\n0\n\n1\n0\n1\n0\n\n\uf8f6\n\n\uf8eb\n\n\uf8f8+w\uf8ed\n\n1\n0\n0\n1\n11\n00\n11\n00\n\n11\n00\n11\n00\n11\n00\n\n\uf8f6\n\n\uf8f8 = t2 \u2212 t + 1\n\n4. The twisted dimer model\nWe will begin with a brief description of the twisted Alexander polynomial. This polynomial was originally described by Lin using the Seifert matrix [Lin01] and has also been\ndescribed by Kirk-Livingston using the language of Reidemeister torsion [KL99]. Our description is adapted from Wada's exposition in [Wad94] which defines the twisted Alexander polynomial for all finitely presented groups, We choose this description because it most\nclearly shows the generalization of the matrix described in Section 3.1. The polynomial that\nWada defines to be the twisted Alexander is a certain quotient. On this point we depart\nfrom Wada's terminology and follow the work of Lin who refers to the numerator of Wada's\nquotient as the twisted Alexander polynomial.\n4.1. The twisted Alexander polynomial for knots. Recall the maps \u03c6 : Z[Fm ] \u2192 Z[\u03c0]\nand \u03c8 : Z[\u03c0] \u2192 Z[t\u00b11 ] from section 3.1. Let R be an integral domain, and let \u03c1 be a finite\ndimensional representation of \u03c0, \u03c1 : \u03c0 \u2192 GLn (R). We can extend \u03c1 to a ring homomorphism\n\u03c1 : Z[\u03c0] \u2192 Mn (R).\nWe put these maps together to define\n\u03a6 = (\u03c1 \u2297 \u03c8) \u25e6 \u03c6 : Z[Fm ] \u2192 Mn (R[t\u00b11 ]).\n\u0011\n\u0010\n\u2202ri\n. Wada\nNow using this map construct MK,\u03c1 a block matrix with ij th block entry \u03a6 \u2202A\nj\ncalls this matrix the Alexander matrix associated to the representation \u03c1. The Alexander\n\u2032\nmatrix in this case has dimensions n(m \u2212 1) \u00d7 nm. Consider the submatrix MK,\u03c1\nthat\ncomes from deleting any block column corresponding to a face of DK that is adjacent to\nthe unbounded face.\n\n\fTWISTED DIMER MODEL\n\n9\n\n\u2032\nUp to sign and multiplication by a power of t\u00b11 the determinant of MK,\u03c1\nis well-defined\nand invariant under Reidemeister moves. Thus we define the twisted Alexander polynomial\nof the pair K, \u03c1 denoted \u2206K,\u03c1 (t) to be\n\u2032\n\u2206K,\u03c1(t)=det(M\n \u0307\nK,\u03c1 ).\n\nGiven the trivial representation \u03c1 : \u03c0 \u2192 C we see that \u2206K,\u03c1 (t)=\u2206\n \u0307 K (t). In general the\nrows in the twisted Alexander matrix replace occurrences of 1 in Algorithms 3.6 and 3.2\nwith Id \u2208 GLn (R) and occurrences of t with tX where X is the element of GLn (R) assigned\nto the Wirtinger generator linking the overstrand at the associated crossing.\nWe conclude this subsection with an example calculation of the twisted Alexander polynomial.\nExample 4.1. Consider the following diagram of the trefoil. We have labeled the regions\nof the diagram that give the Dehn generators as well as the arcs of the knot that give the\nWirtinger generators.\n\nc3\n\nc1\n\na4\n\na0\na1\n\na2\na3\n\nc2\n\nAs noted by Proposition 3.1 we only need to know what our representation \u03c1 does to\nWirtinger generators. We consider the coloring representation \u03c1 : \u03c0 \u2192 GL3 (Z) given by\n\uf8f6\n\uf8eb\n\uf8f6\n\uf8eb\n\uf8f6\n\uf8eb\n0 0 1\n1 0 0\n0 1 0\n\u03c1(C3 ) = \uf8ed 0 1 0 \uf8f8\n\u03c1(C2 ) = \uf8ed 0 0 1 \uf8f8 ,\n\u03c1(C1 ) = \uf8ed 1 0 0 \uf8f8 ,\n1 0 0\n0 1 0\n0 0 1\nWe set A0 = 1 in the knot group, and we have three relations remaining.\n(r1 ) A2 A\u22121\n1 = A4 = C1\n(r2 ) A2 A\u22121\n4 = A3 = C2\n(r3 ) A2 A\u22121\n3 = A1 = C3\n\u0010\n\u0011\n\u2202ri\nNow we build a block matrix with entries \u03a6 \u2202A\n. The map \u03a6 will assign identity\nj\nmatrices to occurrences of 1 and the various representation matrices scaled by t when\nWirtinger generators occur. In this case the matrix we get is as follows.\n\uf8eb\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ed\n\n0 \u2212t 0\n\u2212t 0\n0\n0\n0 \u2212t\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\u22121 0\n0\n0 \u22121 0\n0\n0 \u22121\n\n1\n0\n0\n1\n0\n0\n1\n0\n0\n\n0\n1\n0\n0\n1\n0\n0\n1\n0\n\n\uf8f6\n0 0\n0\n0 \u22121 0\n0\n0 0\n0\n0\n0 \u22121 0 \uf8f7\n\uf8f7\n1 0\n0\n0\n0\n0 \u22121 \uf8f7\n\uf8f7\n0 \u22121 0\n0 \u2212t 0\n0 \uf8f7\n\uf8f7\n0 0 \u22121 0\n0\n0 \u2212t \uf8f7\n\uf8f7\n1 0\n0 \u22121 0 \u2212t 0 \uf8f7\n\uf8f7\n0 0\n0 \u2212t 0\n0\n0 \uf8f7\n\uf8f7\n0 0 \u2212t 0\n0\n0\n0 \uf8f8\n1 \u2212t 0\n0\n0\n0\n0\n\n\f10\n\nM. COHEN, O. T. DASBACH, AND H. M. RUSSELL\n\nFinally we remove the last block column corresponding to face a4 , and we take the\ndeterminant. We get \u2206Tref,\u03c1 (t) = \u2212t6 +t5 +t4 \u22122t3 +t2 +t\u22121 = \u2212(\u22121+t)2 (1+t)2 (1\u2212t+t2 ).\n4.2. The twisted Alexander graph. We want to build a graph that encodes the Alexander matrix for a pair K, \u03c1. This graph, which we will call the twisted Alexander graph,\nis a generalization of the Alexander graph defined in the dimer state sum algorithm. The\ntwisted Alexander graph replaces single edges in the Alexander graph by \"twisted edges\".\nFor an n-dimensional representation these \"twisted edges\" are each a copy of Kn,n (the\ncomplete bipartite graph on 2n vertices) that will eventually encode the associated block\nentry in the Alexander matrix.\nBegin by fixing a knot K with diagram DK and representation \u03c1 : \u03c0 \u2192 GLn (R). As with\nthe original Alexander graph, choose two adjacent faces of the diagram to disregard, one of\nwhich is the unbounded face.\nDefinition 4.2. Construct a bipartite graph \u0393\u2032 = (V1\u2032 , V2\u2032 , E \u2032 ) as follows.\n\u2022 The vertex set V1\u2032 has n vertices for each crossing of the diagram.\n\u2022 The vertex set V2\u2032 has n vertices for each face of the diagram.\n\u2022 If a face and a crossing are incident, insert a copy of Kn,n going between the vertices\ncorresponding to that face and crossing. If the face and crossing are not incident,\nno edges should connect their corresponding vertex sets.\nWe will call this the twisted Alexander graph.\nDefinition 4.3. Let M \u2208 Mn (R([t\u00b11 ])). The complete bipartite graph K = Kn,n has all\npossible edges between two sets of Vr and Vc each consisting of n vertices. Let KM be the\ncomplete bipartite graph weighted according to M . More precisely begin by enumerating\nthe vertices in Vr with v1,r , . . . , vn,r and the vertices in Vc with v1,c , . . . , vn,c . Now the edge\nbetween vi,r and vj,c gets the entry in the ij th position of M . If the entry in M is zero, we\ndo not include the edge. We will call the weighted graph KM the graph encoding M .\n\uf8eb\n\uf8f6\na b 0\nExample 4.4. Let M = \uf8ed 0 0 c \uf8f8. Then the graph encoding M is\nd 0 e\na\n\nb\nd\ne\n\nc\n\nEnumerate the vertices at every crossing and every face of the twisted Alexander graph\n\u0393\u2032 . We endow the graph \u0393\u2032 with the weighting \u03b1\u03c1 : E \u2032 \u2192 R[t\u00b11 ] so that the copy of Kn,n\n(or the \"twisted edge\") connecting the collection of vertices for a crossing and face is the\ngraph encoding the matrix shown in Figure 6. Here X is the element of GLn (R) assigned\nby \u03c1 to the Wirtinger generator corresponding to the overstrand in the figure.\nThen the following is an immediate consequence of our definitions for \u0393\u2032 and \u03b1\u03c1 .\n\u2032\nProposition 4.5. The permanent of the matrix MK,\u03c1\nis equal to the partition function of\n\u2032 ).\n\u2032\n\u2032\nthe graph \u0393 weighted by \u03b1\u03c1 . In other words Z(\u0393\u03b1\u03c1 ) = Perm(MK,\u03c1\n\n\fTWISTED DIMER MODEL\n\n11\n\n\u2745 tX\n\u2745 Id\ntX\n\u2745\nId \u2745\n\nFigure 6. Weights for the twisted Alexander graph\n4.3. Kuperberg's tricks. As we discussed at length in Section 2 we would like to find\na modification of the weighting \u03b1\u03c1 that would allow us to encode the twisted Alexander\npolynomial directly. The problem is that by replacing single edges in the Alexander graph\nby twisted edges, we no longer necessarily have a plane graph.\nWe will use two techniques due to Kuperberg to solve this problem [Kup98]: edge tripling\nand butterflies. This will enable us to modify an embedding of the graph \u0393\u2032 and the weighting \u03b1\u03c1 to get a weighted plane graph that will encode the twisted Alexander polynomial as\ndesired. For the remainder of this section, fix an embedding of \u0393\u2032 .\nIn order to force planarity we need to require that each pair of edges in \u0393\u2032 intersect at\nmost once. We can accomplish this by repeatedly tripling edges as shown in Figure 7. If\nour weight function \u03b1\u03c1 assigns a \u2208 R[t\u00b11 ] to the edge we modify the weights as shown in\nthe figure.\na\n\n1111111111111111111111111111111111111\n0000000000000000000000000000000000000\n\na\n\n\u22121\n\n1\n\n1111111111111111111111111111111111111\n0000000000000000000000000000000000000\n\nFigure 7. Replace a single edge with three edges.\nCall the new graph obtained after tripling all necessary edges \u0393\u2032\u2032 , and call the updated\n\u2032\u2032 . Kuperberg argues that\nweight function \u03b1\u03c1,t . We denote the associated matrix by MK,\u03c1\nthis operation changes the determinant at most up to a sign. In other words\n\u2032\u2032\n\u2032\ndet(MK,\u03c1\n) = \u00b1 det(MK,\u03c1\n).\n\nIndeed this is easy to see as the Alexander matrix for the pair K, \u03c1 changes as follows for\neach edge tripling.\n\uf8eb\n\na\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec \u2217\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ed\n\n\u2217\n\n*\n\n\uf8f6\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f8\n\n\uf8eb\n\ntripling\n\n\u2212\u2192\n\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ed\n\n\u22121\n1\n0\n.\n.\n.\n0\n\na\n0\n\n\u2217\n\n0\n\n***\n\u2217\n\n*\n\n0\n\n\uf8f6\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f8\n\nNow we assume that our graph \u0393\u2032\u2032 has edges which pairwise intersect at most once. The\nfinal step in forcing planarity is to replace each pair of crossing edges with what Kuperberg\ncalls a butterfly. This object and the necessary weight modifications are shown in Figure 8.\n\n\f12\n\nM. COHEN, O. T. DASBACH, AND H. M. RUSSELL\n1\nb\n\n-1\n\na\n\n1\n\n-1\n\n\u2212b\n\na\nab\n\nFigure 8. Replace crossing edges with the butterfly.\nCall the new graph obtained after inserting all necessary butterflies \u0393\u2032\u2032\u2032\n\u03b1\u03c1 , and call the\n\u2032\u2032\u2032\nupdated weight function \u03b1\u03c1,b . The associated matrix is MK,\u03c1 . Again Kuperberg argues\n\u2032\u2032\u2032 ) = \u00b1 det(M \u2032 ). We can also see this directly by examining the changes to\nthat det(MK,\u03c1\nK,\u03c1\nthe Alexander matrix for the pair K, \u03c1.\n\n0\n\uf8ec b\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ed\n\uf8eb\n\n*\n\na\n0\n\n*\n\n*\n\n\uf8eb\n\n\u22121\n\uf8ec 1\n\uf8ec\n\uf8ec \u2212b\n\uf8ec\n\uf8ec 0\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec .\n\uf8ec .\n\uf8ec .\n\uf8ed\n\n\uf8f6\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f8\n\nbutterf ly\n\n\u2212\u2192\n\n0\n\n\u22121\n1\n0\n\n*\n\na\n0\nab\n\n0\n\n***\n\n*\n\n*\n\n0\n\n\uf8f6\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f8\n\n4.4. The twisted dimer model. We can now put together the last two subsections to\nstate the twisted dimer model. Fix a knot K, a generic diagram DK , and a representation\n\u03c1 : \u03c0 \u2192 GLn (R).\nAlgorithm 4.6. Twisted dimer model\n(T1) Build the twisted Alexander graph as described in Definition 4.2 with associated\nweight function \u03b1\u03c1 .\n(T2) Choose an embedding of \u0393\u2032 that minimizes the number of edge crossings.\n(T3) Triple any edges necessary so that each pair of edges intersects at most once, and\nupdate the weight function as shown in Figure 7. Call the new graph \u0393\u2032\u2032 and new\nweight function \u03b1\u03c1,t .\n(T4) Replace any crossing pairs of edges with butterflies, and update the weight function\nas shown in Figure 8. Call the resulting graph \u0393\u2032\u2032\u2032 and the new weight function \u03b1\u03c1,b .\n(T5) Use the algorithm described in the proof of Proposition 2.4 to get a Kasteleyn weighting \u01eb for \u0393\u2032\u2032\u2032 .\n(T6) Calculate the partition function\n!\nX Y\n\u01eb(e) * \u03b1\u03c1,b (e) .\nZ(\u0393\u2032\u2032\u2032\n\u01eb*\u03b1\u03c1,b ) =\nm\u2208M\n\ne\u2208m\n\nThen our main theorem follows by construction.\nTheorem 4.7. The twisted dimer model described above calculates the twisted Alexander\npolynomial for the pair K, \u03c1. In other words\n \u0307 K,\u03c1 (t).\nZ(\u0393\u2032\u2032\u2032\n\u01eb*\u03b1\u03c1,b )=\u2206\n\n\fTWISTED DIMER MODEL\n\n13\n\nWe conclude by applying the twisted dimer model to the pair Tref, \u03c1 from Example 4.1.\nExample 4.8. Recall that we are considering the following diagram for the trefoil and the\nrepresentation \u03c1 : \u03c0 \u2192 GL3 (Z) that comes from a non-trivial 3-coloring. We've labeled the\ndiagram to indicate the weight function \u03b1\u03c1 that will be assigned to the twisted Alexander\ngraph.\n\ntX Id Id\nId Id\nId tZ\n\nRecall that the representation matrices are\n\uf8eb\n\n\uf8f6\n0 1 0\n\u03c1(c1 ) = X = \uf8ed 1 0 0 \uf8f8\n0 0 1\n\uf8eb\n\uf8eb\n\uf8f6\n\uf8f6\n1 0 0\n0 0 1\n\u03c1(c2 ) = Y = \uf8ed 0 0 1 \uf8f8\n\u03c1(c3 ) = Z = \uf8ed 0 1 0 \uf8f8\n0 1 0\n1 0 0\n\nThe twisted Alexander graph will have 3 times the number of vertices in the original\nAlexander graph. Each edge in the original graph will be replaced with a copy of K3,3 . The\nfollowing labeling of the Alexander graph helps us to see what the twisted graph will look\nlike.\nId\n\nId\nId\n\ntX\nId\n\nId\ntZ\n\nFinally, then, we see that the twisted Alexander graph for the pair Tref, \u03c1 has the\nfollowing form. To simplify the pictures, all thickened edges have weight t, and all other\nedges have weight 1. As we mentioned in Definition 4.3, we do not draw weight 0 edges\nsince any perfect matching that includes a weight 0 edge will not contribute to the value of\nthe partition function.\nWe can see through the following sequence of manipulations in Figure 9 that, in this case,\nthe twisted Alexander graph is a plane graph. While the embedding has changed, on the\nlevel of abstract graphs we have that \u0393\u2032 = \u0393\u2032\u2032 = \u0393\u2032\u2032\u2032 and \u03b1\u03c1 = \u03b1\u03c1,t = \u03b1\u03c1,b .\nWe then find a spanning tree in the graph \u0393\u2032\u2032\u2032 indicated below by the solid line segments\ntransverse to the edges. We assign a \u01eb- weighting of +1 to all of these edges. This is shown\nin Figure 10.\n\n\f14\n\nM. COHEN, O. T. DASBACH, AND H. M. RUSSELL\n\n(1)\n\n(2)\n\n(3)\n\nFigure 9. Unraveling the twisted dimer graph\n\nFigure 10. Finding a spanning tree\n\nFinally, as is shown in Figure 11, we complete \u01eb to a Kasteleyn weighting. In the picture\n\u22121 weights are indicated by double line segments.\nCalculating the partition function one can see that the polynomial obtained is\n\u2206Tref,\u03c1 (t) = t6 \u2212 t5 \u2212 t4 + 2t3 \u2212 t2 \u2212 t + 1.\nwhich agrees up to multiplication by \u22121 with Example 4.1.\n\n\fTWISTED DIMER MODEL\n\n15\n\nFigure 11. A Kasteleyn weighting\n\nReferences\n[CF77]\n[DL10]\n[Kas63]\n[Kau87]\n[Ken97]\n[Ken09]\n[KL99]\n[Kup94]\n[Kup98]\n[Kup02]\n[Lin01]\n[Low08]\n[LP09]\n[OS03]\n[TF61]\n[Wad94]\n\nRichard H. Crowell and Ralph H. Fox, Introduction to knot theory, Springer Verlag, New York,\nHeidelberg, 1977.\nOliver T. Dasbach and Adam Lowrance, Turaev genus, knot signature, and the knot homology\nconcordance invariants, arXiv (2010).\nP. W. Kasteleyn, Dimer Statistics and Phase Transitions, Journal of Mathematical Physics 4\n(1963), no. 2, 287\u2013293.\nLouis H. Kauffman, On Knots, Princeton University Press, 1987.\nRichard Kenyon, Local statistics of lattice dimers, Annales de l'Institut Henri Poincare (B) Probability and Statistics 33 (1997), no. 5, 591\u2013618.\n, Lectures on Dimers, October 2009.\nPaul Kirk and Charles Livingston, Twisted Alexander Invariants, Reidemeister Torsion, and\nCasson-Gordon Invariants, Topology 38 (1999), no. 3, 635\u2013661.\nGreg Kuperberg, Symmetries of plane partitions and the permanent-determinant method, J. Comb.\nTheory Ser A. 68 (1994), no. 1, 115--151.\n, An exploration of the permanent-determinant method, The Electronic Journal of Combinatorics 5 (1998), 707\u2013740.\n, Kasteleyn cokernels, 2002, pp. 1\u201330.\nXiao-Song Lin, Representations of Knot Groups and Twisted Alexander Polynomials, Acta Mathematica Sinica, English Series 17 (2001), no. 3, 361\u2013380.\nAdam Lowrance, On knot Floer width and Turaev genus, Algebraic & Geometric Topology 8 (2008),\nno. 2, 1141\u20131162.\nLaszlo Lovasz and Michael D. Plummer, Matching Theory (AMS Chelsea Publishing), American\nMathematical Society, 2009.\nPeter Ozsv\u00e1th and Zolt\u00e1n Szab\u00f3, Heegaard Floer homology and alternating knots, Geometry &\nTopology 7 (2003), no. March, 225\u2013254.\nH. N. V. Temperley and Michael Fisher, Dimer problem in statistical mechanics-an exact result,\nPhilosophical Magazine 6 (1961), no. 68, 1061\u20131063.\nMasaaki Wada, Twisted Alexander polynomial for finitely presentable groups, Topology 33 (1994),\nno. 2, 241\u2013256.\n\n\f16\n\nM. COHEN, O. T. DASBACH, AND H. M. RUSSELL\n\nDepartment of Mathematics, Bar Ilan University, Ramat Gan 52900, Israel\nE-mail address: cohenm10@macs.ac.il\nDepartment of Mathematics, Louisiana State University, Baton Rouge, LA 70803, USA\nE-mail address: kasten@math.lsu.edu\nDepartment of Mathematics, Louisiana State University, Baton Rouge, LA 70803, USA\nE-mail address: hrussell@math.lsu.edu\n\n\f"}