{"id": "http://arxiv.org/abs/0708.1964v1", "guidislink": true, "updated": "2007-08-14T21:46:32Z", "updated_parsed": [2007, 8, 14, 21, 46, 32, 1, 226, 0], "published": "2007-08-14T21:46:32Z", "published_parsed": [2007, 8, 14, 21, 46, 32, 1, 226, 0], "title": "Solving the subset-sum problem with a light-based device", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0708.2876%2C0708.1221%2C0708.4169%2C0708.0188%2C0708.0328%2C0708.0307%2C0708.1599%2C0708.3215%2C0708.4003%2C0708.0462%2C0708.4053%2C0708.2449%2C0708.0354%2C0708.2869%2C0708.3353%2C0708.0741%2C0708.2822%2C0708.0450%2C0708.3440%2C0708.2592%2C0708.0364%2C0708.2155%2C0708.3028%2C0708.2202%2C0708.0216%2C0708.2120%2C0708.1156%2C0708.0860%2C0708.2438%2C0708.2387%2C0708.2341%2C0708.1712%2C0708.2082%2C0708.3767%2C0708.3644%2C0708.1169%2C0708.3729%2C0708.3771%2C0708.2403%2C0708.3129%2C0708.1677%2C0708.3595%2C0708.1593%2C0708.2581%2C0708.3295%2C0708.3142%2C0708.2289%2C0708.2628%2C0708.0864%2C0708.3180%2C0708.2432%2C0708.3247%2C0708.1977%2C0708.1198%2C0708.2884%2C0708.0435%2C0708.4394%2C0708.0937%2C0708.4047%2C0708.0785%2C0708.1984%2C0708.0027%2C0708.0626%2C0708.0336%2C0708.1495%2C0708.3270%2C0708.3801%2C0708.0298%2C0708.2198%2C0708.3160%2C0708.1600%2C0708.0329%2C0708.0772%2C0708.3969%2C0708.2021%2C0708.2094%2C0708.2138%2C0708.2844%2C0708.3889%2C0708.0356%2C0708.0691%2C0708.2760%2C0708.3903%2C0708.1875%2C0708.0906%2C0708.0905%2C0708.0528%2C0708.0566%2C0708.3695%2C0708.2398%2C0708.1964%2C0708.3935%2C0708.4356%2C0708.1118%2C0708.4354%2C0708.1026%2C0708.3807%2C0708.3294%2C0708.2303%2C0708.2189%2C0708.1955&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Solving the subset-sum problem with a light-based device"}, "summary": "We propose a special computational device which uses light rays for solving\nthe subset-sum problem. The device has a graph-like representation and the\nlight is traversing it by following the routes given by the connections between\nnodes. The nodes are connected by arcs in a special way which lets us to\ngenerate all possible subsets of the given set. To each arc we assign either a\nnumber from the given set or a predefined constant. When the light is passing\nthrough an arc it is delayed by the amount of time indicated by the number\nplaced in that arc. At the destination node we will check if there is a ray\nwhose total delay is equal to the target value of the subset sum problem (plus\nsome constants).", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0708.2876%2C0708.1221%2C0708.4169%2C0708.0188%2C0708.0328%2C0708.0307%2C0708.1599%2C0708.3215%2C0708.4003%2C0708.0462%2C0708.4053%2C0708.2449%2C0708.0354%2C0708.2869%2C0708.3353%2C0708.0741%2C0708.2822%2C0708.0450%2C0708.3440%2C0708.2592%2C0708.0364%2C0708.2155%2C0708.3028%2C0708.2202%2C0708.0216%2C0708.2120%2C0708.1156%2C0708.0860%2C0708.2438%2C0708.2387%2C0708.2341%2C0708.1712%2C0708.2082%2C0708.3767%2C0708.3644%2C0708.1169%2C0708.3729%2C0708.3771%2C0708.2403%2C0708.3129%2C0708.1677%2C0708.3595%2C0708.1593%2C0708.2581%2C0708.3295%2C0708.3142%2C0708.2289%2C0708.2628%2C0708.0864%2C0708.3180%2C0708.2432%2C0708.3247%2C0708.1977%2C0708.1198%2C0708.2884%2C0708.0435%2C0708.4394%2C0708.0937%2C0708.4047%2C0708.0785%2C0708.1984%2C0708.0027%2C0708.0626%2C0708.0336%2C0708.1495%2C0708.3270%2C0708.3801%2C0708.0298%2C0708.2198%2C0708.3160%2C0708.1600%2C0708.0329%2C0708.0772%2C0708.3969%2C0708.2021%2C0708.2094%2C0708.2138%2C0708.2844%2C0708.3889%2C0708.0356%2C0708.0691%2C0708.2760%2C0708.3903%2C0708.1875%2C0708.0906%2C0708.0905%2C0708.0528%2C0708.0566%2C0708.3695%2C0708.2398%2C0708.1964%2C0708.3935%2C0708.4356%2C0708.1118%2C0708.4354%2C0708.1026%2C0708.3807%2C0708.3294%2C0708.2303%2C0708.2189%2C0708.1955&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We propose a special computational device which uses light rays for solving\nthe subset-sum problem. The device has a graph-like representation and the\nlight is traversing it by following the routes given by the connections between\nnodes. The nodes are connected by arcs in a special way which lets us to\ngenerate all possible subsets of the given set. To each arc we assign either a\nnumber from the given set or a predefined constant. When the light is passing\nthrough an arc it is delayed by the amount of time indicated by the number\nplaced in that arc. At the destination node we will check if there is a ray\nwhose total delay is equal to the target value of the subset sum problem (plus\nsome constants)."}, "authors": ["Mihai Oltean", "Oana Muntean"], "author_detail": {"name": "Oana Muntean"}, "author": "Oana Muntean", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1007/s11047-007-9059-3", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/0708.1964v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0708.1964v1", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "14 pages, 6 figures, Natural Computing, 2007", "arxiv_primary_category": {"term": "cs.AR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.AR", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.AI", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.DC", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0708.1964v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0708.1964v1", "journal_reference": "Natural Computing, Springer-Verlag, Vol 8, Issue 2, pp. 321-331,\n  2009", "doi": "10.1007/s11047-007-9059-3", "fulltext": "Solving the subset-sum problem with a\nlight-based device\n\narXiv:0708.1964v1 [cs.AR] 14 Aug 2007\n\nMihai Oltean, Oana Muntean\nDepartment of Computer Science,\nFaculty of Mathematics and Computer Science,\nBabe\u015f-Bolyai University, Kog\u0103lniceanu 1,\nCluj-Napoca, 400084, Romania.\nmoltean@cs.ubbcluj.ro\nwww.cs.ubbcluj.ro/\u223cmoltean\n\nAbstract. We propose a special computational device which uses light\nrays for solving the subset-sum problem. The device has a graph-like\nrepresentation and the light is traversing it by following the routes given\nby the connections between nodes. The nodes are connected by arcs\nin a special way which lets us to generate all possible subsets of the\ngiven set. To each arc we assign either a number from the given set or\na predefined constant. When the light is passing through an arc it is\ndelayed by the amount of time indicated by the number placed in that\narc. At the destination node we will check if there is a ray whose total\ndelay is equal to the target value of the subset sum problem (plus some\nconstants).\n\n1\n\nIntroduction\n\nUnconventional computing means computing by using new or unusual methods.\nSpecial properties of matter are usually exploited in an unconventional manner.\nSeveral unconventional techniques and approaches for attacking difficult problems have been investigated so far: DNA computing [2], Quantum computing\n[28], Soap bubbles [1,6], Gear-based computers [29], Adiabatic algorithms [16]\netc.\nUsing light, instead of electric power, for performing computations is an\nexciting idea whose applications can be already seen on the market. This choice is\nmotivated by the increasing number of real-world problems where the light-based\ndevices could perform better than electric-based counterparts. Good examples\nin this direction can be found in the field of Optical Character Recognition [31].\nAnother interesting example is the n-point discrete Fourier transform which can\nbe performed in unit time by special light-based devices [13,24].\nIn this paper we suggest a new way of performing computations by using\nsome properties of light. The idea is used within a special device for solving the\nsubset-sum problem. The problem asks to find if there is a subset of given set A\nwhose sum is B.\n\n\f2\n\nThe device, which is very simple, has a graph-like structure. The nodes are\nconnected by arcs in such way all possible subsets of A are generated. To each\narc we assign either a number from the given set A, or a predefined constant.\nThe length of an arc is directly proportional to the number assigned to it.\nInitially a light ray is sent to the start node. In each node the light is divided\ninto 2 subrays. Each arc delays the ray by an amount of time equal to the number\nassigned to it. At the destination node we will check if there is a ray arriving in\nthe destination node at the moment equal to the target value of B (plus some\nconstants introduced by the system).\nThe paper is organized as follows: Related work in the field of optical computing is briefly overviewed in section 2. The subset-sum problem is described\nin section 3. The proposed device is presented in section 4. The way in which\nthe proposed device works is given in section 4.4. A list of components required\nby the proposed device is given in section 5. Complexity is computed in section 6. Weaknesses of our device are discussed in section 7. Section 7.2 gives\na rough approximation for the size of the instances that can be solved by our\ndevice. Suggestions for improving the device are given in section 7.5. Further\nwork directions are suggested in section 8.\n\n2\n\nRelated work\n\nMost of the major computational devices today are using electric power in order\nto perform useful computations.\nAnother idea is to use light instead of electrical power. It is hoped that optical\ncomputing could advance computer architecture and can improve the speed of\ndata input and output by several orders of magnitude [9].\nMany theoretical and practical light-based devices have been proposed for\ndealing with various problems. Optical computation has some advantages, one of\nthem being the fact that it can perform some operations faster than conventional\ndevices. An example is the n-point discrete Fourier transform computation which\ncan be performed, optically, in only unit time [13,24]. Based on that, a solution\nto the subset sum problem can be obtained by discrete convolution. The idea is\nthat the convolution of 2 functions is the same as the product of their frequencies\nrepresentation [32].\nThe quest for the light-based computers was started in 1929 by G. Tauschek\nwho has obtained a patent on Optical Character Recognition (OCR) in Germany.\nNext step was made by Handel who obtained a patent on OCR. Those devices\nwere mechanical and used templates for matching the characters. A photodetector was placed so that when the template and the character to be recognized\nwere lined up for an exact match, and a light was directed towards it, no light\nwould reach the photodetector [31]. Since then, the field of OCR has grown\nsteadily and recently has become an umbrella for multiple pattern recognition\ntechniques (including Digital Character Recognition).\nAn important practical step was made by Intel researchers who have developed the first continuous wave all-silicon laser using a physical property called\n\n\f3\n\nthe Raman Effect [8,23,25,26]. The device could lead to such practical applications as optical amplifiers, lasers, wavelength converters, and new kinds of\nlossless optical devices.\nAnother solution comes from Lenslet [17] which has created a very fast processor for vector-matrix multiplications (see Figure 1 (a)). This processor can\nperform up to 8000 Giga Multiple-Accumulate instructions per second. Lenslet\ntechnology has already been applied to data analysis using k\u2212mean algorithm\nand video compression.\nA recent paper [27] introduces the idea of sorting by using some properties\nof light. The method called Rainbow Sort is based on the physical concepts\nof refraction and dispersion. It is inspired by the observation that light that\ntraverses a prism is sorted by wavelength (see Figure 1 (b)). For implementing\nthe Rainbow Sort one need to perform the following steps:\n\u2013 encode multiple wavelengths (representing the numbers to be sorted) into a\nlight ray,\n\u2013 send the ray through a prism which will split the ray into n monochromatic\nrays that are sorted by wavelength,\n\u2013 read the output by using a special detector that receives the incoming rays.\nA stable version of the Rainbow Sort is proposed in [19].\nNaughton (et al.) proposed and investigated [20,30] a model called the continuous space machine which operates in discrete time-steps over a number of\ntwo-dimensional complex-valued images of constant size and arbitrary spatial\nresolution. The (constant time) operations on images include Fourier transformation, multiplication, addition, thresholding, copying and scaling.\nA system which solves the Hamiltonian path problem (HPP) [11] by using\nlight and its properties has been proposed in [21,22]. The device has the same\nstructure as the graph where the solution is to be found. The light is delayed\nwithin nodes, whereas the delays introduced by arcs are constants. Because the\nproblem asks that each node has to be visited exactly once, a special delaying\nsystem was designed. At the destination node we will search for a ray which has\nvisited each node exactly once. This is very easy due to the special properties of\nthe delaying system.\n\n3\n\nThe subset-sum problem\n\nThe description of the subset-sum problem [7,11] is the following:\nGiven a set of positive numbers A = {a1 , a2 , ..., an } and another positive\nnumber B. Is there a subset of A whose sum equals B?\nWe focus our attention on the YES / NO decision problem. We are not interested in finding the subset generating the solution. Actually we are interested\nto find only if such subset does exist.\nThe subset-sum problem arises in many real-word applications [12].\n\n\f4\n\nFig. 1. (a) A sketch of the Lenslet device used for performing vector-matrix\nmultiplications. (b) Schematic view of the Rainbow Sort.\n\n\f5\n\nThe problem belongs to the class of NP-complete problems [11]. No polynomial time algorithm is known for it. However, a pseudo-polynomial time algorithm does exist for this problem [11]. The complexity of this algorithm is\nbounded by both n and B. The algorithm requires O(n \u2217 B) storage space.\n\n4\n\nThe proposed device\n\nThis section deeply describes the proposed system. Section 4.1 describes the\nproperties of light which are useful for our device. Section 4.2 introduces the\noperations performed by the components of our device. Basic ideas behind our\nconcept are given in section 4.3. Some examples on how the system works are\ngiven in section 4.4.\n4.1\n\nUseful properties of light\n\nOur idea is based on two properties of light:\n\u2013 The speed of light has a limit. The value of the limit is not very important\nat this stage of explanation. The speed will become important when we will\ntry to measure the moment when rays arrive at the destination node (see\nsection 7.1). What is important now is the fact that we can delay the ray by\nforcing it to pass through an optical fiber cable of a certain length.\n\u2013 The ray can be easily divided into multiple rays of smaller intensity/power.\nBeam-splitters are used for this operation [3,9].\n4.2\n\nOperations performed within our device\n\nThe proposed device has a graph like structure. Generally speaking one operation\nis performed when a ray passes through a node and one operation is performed\nwhen a ray passes through an edge.\n\u2013 When passing through an arc the light ray is delayed by the amount of time\nassigned to that arc.\n\u2013 When the ray is passing through a node it is divided into a number of rays\nequal to the external degree of that node. Each obtained ray is directed\ntoward one of the nodes connected to the current node.\n4.3\n\nThe device\n\nThe first idea for our device was that numbers from the given set A represent\nthe delays induced to the signals (light) that passes through our device. For\ninstance, if numbers a1 , a3 and a7 generate the expected subset, then the total\ndelay of the signal should be a1 + a3 + a7 . If using light we can easily induce\nsome delays by forcing the ray to pass through an optical cable of given length.\nThis is why we have designed our device as a directed graph. Arcs, which are\nimplemented by using optical cables, are labeled with numbers from the given\n\n\f6\n\nset A. Each number is assigned to exactly one arc and there are no two arcs\nhaving assigned the same number. There are n + 1 nodes connected by n arcs.\nAt this moment of explanation we have a linear graph as the one shown in Figure\n2.\n\nFig. 2. First version of our device. Each arc delays the ray by the amount of time\nwritten on it. Note that this device is not complete because it cannot generate\nall possible subsets of A.\n\nHowever, this is not enough because we also need a mechanism for skipping\nan arc. Only in this way we may generate all possible subsets of A.\nA possible way for achieving this is to add an extra arc (of length 0) between\nany pair of consecutive nodes. Such device is depicted in Figure 3. A light ray\nsent to start node will have the possibility to either traverse a given arc (from\nthe upper part of figure) or to skip it (by traversing the arc of length 0 from the\nbottom of figure).\n\nFig. 3. Second version of our device. Each subset of A is generated, but this\ndevice cannot be implemented in practice because we cannot have cables of\nlength 0.\n\nIn each node (but the last one) we place a beam-splitter which will split a\nray into 2 subrays of smaller intensity.\n\n\f7\n\nThe device will generate all possible subsets of A. Each subset will delay one\nof the ray by an amount of time equal to the sum of the lengths of the arcs in\nthat path.\nThere is a problem here: even if theoretically we could have arcs of length\n0, we cannot have cables of length 0 in practice. For avoiding this problem we\nhave multiple solutions. The first one was to use very short cables (let's say of\nlength \u01eb) for arcs which are supposed to have length 0. However, there is another\nproblem here: we could obtain for instance the sum B written as B = a1 + 3 \u2217 \u01eb.\nEven if there is no subset of sum B, still there will be possible to have a signal\nat moment B due to the situation presented above.\nFor avoiding this situation we have added a constant k to the length of each\ncable. The schematic view of this device is depicted in Figure 4.\n\nFig. 4. A schematic representation of the device used for solving an instance\nwith 4 numbers. On each arc we have depicted its length. There are n cables of\nlength k and n cables of length ai + k (1 \u2264 i \u2264 n). This device does generate all\npossible subsets of A and it can be implemented in practice\n\nWe can see that each path from Start to Destination contains exactly n\ntime value k. Thus, at the destination we will not wait anymore at moment B.\nInstead we will wait for a solution at moment B + n \u2217 k since all subsets will\nhave the constant n \u2217 k added.\nThe device will generate all possible subsets of A. The good part is that we\ndo not have to check all 2n possible solutions. We will only have to check if\nthere is a ray arriving at moment B + n \u2217 k in the destination node. The signals\ngenerated by all other subsets are ignored and not recorded in any way.\n4.4\n\nHow the system works\n\nIn the graph depicted in Figure 5 the light will enter in Start node. It will be\ndivided into 2 subrays of smaller intensity. These 2 rays will arrive into the second\nnode at moments a1 +k and k. Each of them will be divided into 2 subrays which\nwill arrive in the 3rd node at moments 2 \u2217 k, a1 + 2 \u2217 k, a2 + 2 \u2217 k, a1 + a2 + 2 \u2217 k.\nThese rays will arrive at no more than 4 different moments.\n\n\f8\n\nFig. 5. The moments when different rays arrive in nodes. The moments are\nrepresented as sets because they might not be distinct\n\n\f9\n\nIn the destination node we will have 2n rays arriving at no more than 2n\ndifferent moments. The ray arriving at moment n \u2217 k means the empty set. The\nray arriving at moment a1 + a2 + ... + an + n \u2217 k represents the full set. If there\nis a ray arriving at moment B + n \u2217 k means that there is a subset of A of sum\nB.\nIf there are 2 rays arriving at the same moment in the Destination it simply\nmeans that there are multiple subsets which have the same sum. This is not a\nproblem for us because we want to answer the YES/NO decision problem (see\nsection 3). We are not interested at this moment which is the subset generating\nthe solution.\nBecause we are working with continuous signal we cannot expect to have discrete output at the destination node. This means that rays arrival is notified by\nfluctuations in the intensity of the light. These fluctuations will be transformed,\nby a photodiode, in fluctuations of the electric power which will be easily read\nby an oscilloscope.\n\n5\n\nPhysical implementation\n\nFor implementing the proposed device we need the following components:\n\u2013 a source of light (laser),\n\u2013 Several beam-splitters for dividing light rays into 2 subrays. A standard\nbeam-splitter is designed using a half-silvered mirror (see Figure 6),\n\u2013 A high speed photodiode for converting light rays into electrical power. The\nphotodiode is placed in the destination node,\n\u2013 A tool for detecting fluctuations in the intensity of electric power generated\nby the photodiode (oscilloscope),\n\u2013 A set of optical fiber cables having lengths equals to the numbers in the\ngiven set A (plus constant k) and another set of n cables having fixed length\nk. These cables are used for connecting nodes.\n\n6\n\nComplexity\n\nThe time required to build the device has O(n \u2217 B) complexity. We assume that\nall cables are shorter than B, otherwise they cannot participate to the final\nsolution.\nBecause the ray encoding the solution takes B + n \u2217 k time to reach the\ndestination node we may say that the complexity is O(B + n).\nThe intensity of the signal decreases exponentially with the number of nodes.\nThis is why the required power is proportional to 2n .\n\n\f10\n\nFig. 6. The way in which a ray can be split into 2 sub-rays by using a beamsplitter.\n\n7\n\nAnalysis of the proposed device\n\nThis section investigates some of the problems of the proposed device and some\nways to deal with them. Section 7.1 computes the precision of solution representation. The size of the instances that can be solved by our device having a limited\nlength for cables is computed in section 7.2. Section 7.3 shows how to handle the\nexponential decrease of power. Several problems that might be encountered during the physical implementation are discussed in section 7.4. Section 7.5 shows\nhow to improve the device by reducing the speed of light.\n7.1\n\nPrecision\n\nA problem is that we cannot measure the moment B + n \u2217 k exactly. We can\ndo this measurement only with a given precision which depends on the tools\ninvolved in the experiments. Actually it will depend on the response time of the\nphotodiode and the rise time of the oscilloscope.\nThe rise-time of the best oscilloscope available on the market is in the range of\npicoseconds (10\u221212 seconds). This means that if a signal arrives at the destination\nin the interval [B + n \u2217 k \u2212 10\u221212 , B + n \u2217 k + 10\u221212 ] we cannot be perfectly sure\nthat we have a correct subset or another one which does not have the wanted\nproperty. This problem can be avoided if all cables are long enough. In what\nfollows we will try to compute the length of the cables.\nWe know that the speed of light is 3 * 108 m/s. Based on that we can easily\ncompute the minimal cable length that should be traversed by the ray in order\nto be delayed with 10\u221212 seconds. This is obviously 0.0003 meters and it was\nobtained from equation:\ndistance = speed \u2217 time\nThis value is the minimal delay that should be introduced by an arc. More\nthan that, all lengths must be integer multiples of 0.0003. We cannot allow to\n\n\f11\n\nhave cables whose lengths can be written as p \u2217 0.0003 + q, where p is an integer\nand q is a positive real number less than 0.0003 because by combining this kind\nof numbers we can have a signal in the above mentioned interval and that signal\ndoes not encode a subset whose sum is the expected one.\nOnce we have the length for the minimal delay it is quite easy to compute\nthe length of the other cables that are used in order to induce a certain delay.\nFirst of all we have to multiply / divide all given numbers with such factor that\nthe less significant digit (greater than 0) to be on the first position before the\ndecimal place. For instance if we have the set A = {0.001, 4} we will multiply\nboth numbers by 1000. If we have the set A = {100, 2000} we have to divide both\nnumbers by 100. After this operation we will multiply the obtained numbers by\n0.0003 factor.\nThis will ensure that if a signal will arrive in the interval [B+n\u2217k\u221210\u221212, B+\nn \u2217 k + 10\u221212 ] we can be sure that it encodes the sum B + n \u2217 k.\n7.2\n\nProblem size\n\nWe are also interested to find the size of the instances that can be solved by our\ndevice. Regarding the cardinal of A we cannot make too many approximations\nbecause it actually depends on the available power and on the sensitivity of the\nmeasurement tools.\nHowever, having available a limited length (lets say 3 kilometers) for each\ncable, we can compute the maximal value for the numbers that can appear in\nA. We know that each number is less or equal to B. This is why we want to see\nhow large B can be.\nWithout reducing generality we may assume that all numbers are positive\nintegers. We know that the shortest delay possible is 0.0003 meters (see section\n7.1). Having a cable of 3 kilometers we may encode numbers less than 107 .\nLonger cables may also be available. Take for instance the optical cables\nlinking the cities in a given country. We may easily find cables having 300 km.\nIn this case we may work with numbers smaller than 109 . This is a little bit\nsmaller than the largest integer value represented over 32 bits.\n7.3\n\nPower decrease\n\nBeam splitters are used in our approach for dividing a ray in two subrays. Because of that, the intensity of the signal is decreasing. In the worst case we have\nan exponential decrease of the intensity. For instance, in a graph with n nodes\n(destination node is not counted because there is no split there), each signal is\ndivided (within each node) into 2 signals. Roughly speaking, the intensity of the\nsignal will decrease 2n times.\nThis means that, at the destination node, we have to be able to detect very\nsmall fluctuations in the intensity of the signal. For this purpose we can use\na photomultiplier [10] which is an extremely sensitive detector of light in the\nultraviolet, visible and near infrared range. This detector multiplies the signal\n\n\f12\n\nproduced by incident light by as much as 108 , from which even single photons\ncan be detected.\nAlso note that this difficulty is not specific to our system only. Other major\nunconventional computation paradigms, trying to solve NP-complete problems\nshare the same fate. For instance, a quantity of DNA equal to the mass of Earth\nis required to solve Hamiltonian Path Problem instances of 200 cities using DNA\ncomputers [14].\n\n7.4\n\nTechnical difficulties\n\nThere are many technical challenges that must be solved when implementing the\nproposed device. Some of them are:\n\u2013 Cutting the optic fibers to an exact length with high precision. Failing to\naccomplish this task can lead to errors in detecting if there was a fluctuation\nin the intensity at moment B + n \u2217 k,\n\u2013 Finding a high precision oscilloscope. This is an essential step for measuring\nthe moment B + n \u2217 k with high precision (see section 7.1).\n\n7.5\n\nImproving the device\n\nThe speed of the light in optic fibers is an important parameter in our device.\nThe problem is that the light is too fast for our measurement tools. We have\neither to increase the precision of our measurement tools or to decrease the speed\nof light.\nIt is known that the speed of light traversing a cable is significantly smaller\nthan the speed of light in the void space. Commercially available cables have\nlimit the speed of the ray wave up to 60% from the original speed of light. This\nmeans that we can obtain the same delay by using a shorter cable.\nHowever, this method for reducing the speed of light is not enough for our\npurpose. The order of magnitude is still the same. This is why we have the\nsearch for other methods for reducing that speed. A very interesting solution\nwas proposed in [15] which is able to reduce the speed of light by 7 orders of\nmagnitude and even to stop it [4,18]. In [4] they succeeded in completely halting\nlight by directing it into a mass of hot rubidium gas, the atoms of which, behaved\nlike tiny mirrors, due to an interference pattern in two control beams.\nThis could help our mechanism significantly. However, how to use this idea for\nour device is still an open question because of the complex equipment involved\nin those experiments [15,18].\nBy reducing the speed of light by 7 orders of magnitude we can reduce the\nsize of the involved cables by a similar order (assuming that the precision of the\nmeasurement tools is still the same). This will help us to solve larger instances\nof the problem.\n\n\f13\n\n8\n\nConclusions and further work\n\nThe way in which light can be used for performing useful computations has been\nsuggested in this paper. The techniques are based on the massive parallelism of\nthe light ray.\nIt has been shown the way in which a light-based device can be used for\nsolving the subset-sum problem.\nFurther work directions will be focused on:\n\u2013 implementing the proposed device,\n\u2013 cutting new cables each time when a new instance has to be solved is extremely inefficient. This is why finding a simple way to reuse the previously\nutilized cables is a priority for our system,\n\u2013 automate the entire process,\n\u2013 Our device cannot find the set of numbers representing the solution. It can\nonly say if there is a subset or not. If there are multiple subsets we cannot\ndistinguish them. However, the subset sum YES/NO decision problem is still\na NP-complete problem [11]. We are currently investigating a way to store\nthe order of nodes so that we can easily reconstruct the path,\n\u2013 finding other non-trivial problems which can be solved by using the proposed\ndevice,\n\u2013 finding other ways to introduce delays in the system. The current solution\nrequires cables that are too long and too expensive,\n\u2013 using other type of signals instead of light. Possible candidates are electric\npower and sound.\n\nReferences\n1. Aaronson S (2005), NP-complete problems and physical reality, ACM SIGACT\nNews Complexity Theory Column, March. ECCC TR05-026, quant-ph/0502072\n2. Adleman L (1994) Molecular computation of solutions to combinatorial problems.\nScience 266:1021-1024\n3. Agrawal GP (2002) Fiber-optic communication systems. Wiley-Interscience; 3rd\nedition\n4. Bajcsy M, Zibrov AS, Lukin MD (2003) Stationary pulses of light in an atomic\nmedium. Nature 426:638-641.\n5. Bennett C, Bernstein E, Brassard G and Vazirani U (1997) Strengths and weaknesses of quantum computing, SIAM J. Comput., 26(5):1510-1523\n6. Bringsjord S, Taylor J (2004) P=NP, cs.CC/0406056\n7. Cormen TH, Leiserson CE, Rivest RR (1990) Introduction to algorithms. MIT\nPress\n8. Faist J (2005) Optoelectronics: silicon shines on. Nature, 433:691-692\n9. Feitelson DG (1988) Optical computing: A survey for computer scientists, MIT\nPress\n10. Flyckt SO, Marmonier C (2002) Photomultiplier tubes: Principles and applications.\nPhotonis, Brive, France\n11. Garey MR, Johnson DS (1979) Computers and intractability: A guide to NPCompleteness. Freeman & Co, San Francisco, CA\n\n\f14\n12. Gilmore PC, Gomory RE (1965) Multistage Cutting Stock Problems of Two and\nMore Dimensions, Operations Research, Vol. 13, No. 1, pp. 94-120\n13. Goodman JW (1982) Architectural development of optical data processing systems.\nAust. J. Electr. Electron. Eng. 2:139-149\n14. Hartmanis J (1995) On the weight of computations. Bulletin of the EATCS 55:136138\n15. Hau LV, Harris SE, Dutton Z, Behroozi CH, (1999) Light speed reduction to 17\nmeters per second in an ultracold atomic gas. Nature 397:594-598\n16. Kieu T.D (2003) Quantum algorithm for Hilbert's tenth problem, Intl. Journal of\nTheoretical Physics, 42:1461-1478\n17. Lenslet website (2005), www.lenslet.com\n18. Liu C, Dutton Z, Behroozi CH, Hau LV (2001) Observation of coherent optical\ninformation storage in an atomic medium using halted light pulses. Nature 409:490493\n19. Murphy N, Naughton TJ, Woods D, Henley B, McDermott K, Duffy E, van der\nBurgt PJM, Woods N (2006) Implementations of a model of physical sorting. From\nUtopian to Genuine Unconventional Computers workshop, Adamatzky A, Teuscher\nC, (editors), Luniver Press 79-100\n20. Naughton TJ (2000) A model of computation for Fourier optical processors. In\nLessard RA, Galstian T (editors), Optics in Computing, Proc. SPIE 4089:24-34\n21. Oltean M (2006) A light-based device for solving the Hamiltonian path problem.\nUnconventional Computing, Calude C. (et al.) (Eds), LNCS 4135, Springer-Verlag,\n217-227\n22. Oltean M (2007) Solving the Hamiltonian path problem with a light-based computer, Natural Computing, Springer-Verlag, (accepted)\n23. Paniccia M, Koehl S (2005) The silicon solution. IEEE Spectrum, IEEE Press,\nOctober\n24. Reif JH, Tyagi A (1997) Efficient parallel algorithms for optical computing with\nthe discrete Fourier transform primitive. Applied optics 36(29):7327-7340\n25. Rong H, Jones R, Liu A, Cohen O, Hak D, Fang A, Paniccia M (2005) A continuouswave Raman silicon laser. Nature 433:725-728\n26. Rong H, Liu A, Jones R, Cohen O, Hak D, Nicolaescu R, Fang A, Paniccia M\n(2005) An all-silicon Raman laser. Nature 433:292-294\n27. Schultes D (2005) Rainbow Sort: Sorting at the speed of light. Natural Computing.\nSpringer-Verlag, 5(1):67-82\n28. Shor P (1997) Polynomial-time algorithms for prime factorization and discrete\nlogarithms on a quantum computer. SIAM J. Comput., 26(5):1484-1509, 1997\n29. Vergis A., Steiglitz K., and Dickinson B (1986) The complexity of analog computation., Mathematics and Computers in Simulation, 28:91-113\n30. Woods D, Naughton TJ (2005) An optical model of computation. Theoretical Computer Science, 334 (1-3):227-258\n31. Optical Character Recognition @ Wikipedia (2006),\nhttp://en.wikipedia.org/wiki/Optical character recognition\n32. Thoughts\non\nthe\nSubset\nSum\nProblem\n(P\nvs.\nNP)\n(2006)\nhttp://idrone.net/2006/06/11/thoughts-on-the-subset-sum-problem-p-vs-np/\n\n\f"}