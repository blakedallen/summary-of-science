{"id": "http://arxiv.org/abs/0904.4312v1", "guidislink": true, "updated": "2009-04-28T06:01:53Z", "updated_parsed": [2009, 4, 28, 6, 1, 53, 1, 118, 0], "published": "2009-04-28T06:01:53Z", "published_parsed": [2009, 4, 28, 6, 1, 53, 1, 118, 0], "title": "Orientation-Constrained Rectangular Layouts", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0904.1844%2C0904.1811%2C0904.2957%2C0904.4009%2C0904.2254%2C0904.0759%2C0904.4495%2C0904.3357%2C0904.0836%2C0904.0520%2C0904.2924%2C0904.4087%2C0904.4761%2C0904.3556%2C0904.2156%2C0904.3822%2C0904.1448%2C0904.1826%2C0904.1772%2C0904.1345%2C0904.4250%2C0904.0330%2C0904.4110%2C0904.3189%2C0904.0181%2C0904.2673%2C0904.3203%2C0904.0806%2C0904.0115%2C0904.0995%2C0904.4832%2C0904.2940%2C0904.3669%2C0904.3956%2C0904.0222%2C0904.2089%2C0904.1347%2C0904.4100%2C0904.2125%2C0904.2773%2C0904.0027%2C0904.3762%2C0904.4566%2C0904.1979%2C0904.3924%2C0904.0116%2C0904.3942%2C0904.1938%2C0904.0265%2C0904.4367%2C0904.1481%2C0904.0070%2C0904.1718%2C0904.3920%2C0904.0601%2C0904.3390%2C0904.0811%2C0904.1370%2C0904.1552%2C0904.4397%2C0904.3469%2C0904.1698%2C0904.0795%2C0904.2932%2C0904.2610%2C0904.0690%2C0904.4601%2C0904.0598%2C0904.4800%2C0904.1019%2C0904.4141%2C0904.3616%2C0904.0863%2C0904.4312%2C0904.2052%2C0904.1762%2C0904.1659%2C0904.2857%2C0904.0274%2C0904.1580%2C0904.2388%2C0904.0152%2C0904.1570%2C0904.2686%2C0904.4576%2C0904.4363%2C0904.1894%2C0904.3900%2C0904.4372%2C0904.2144%2C0904.3687%2C0904.2970%2C0904.4448%2C0904.1588%2C0904.3299%2C0904.3329%2C0904.2873%2C0904.1677%2C0904.2953%2C0904.4567%2C0904.3587&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Orientation-Constrained Rectangular Layouts"}, "summary": "We construct partitions of rectangles into smaller rectangles from an input\nconsisting of a planar dual graph of the layout together with restrictions on\nthe orientations of edges and junctions of the layout. Such an\norientation-constrained layout, if it exists, may be constructed in polynomial\ntime, and all orientation-constrained layouts may be listed in polynomial time\nper layout.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0904.1844%2C0904.1811%2C0904.2957%2C0904.4009%2C0904.2254%2C0904.0759%2C0904.4495%2C0904.3357%2C0904.0836%2C0904.0520%2C0904.2924%2C0904.4087%2C0904.4761%2C0904.3556%2C0904.2156%2C0904.3822%2C0904.1448%2C0904.1826%2C0904.1772%2C0904.1345%2C0904.4250%2C0904.0330%2C0904.4110%2C0904.3189%2C0904.0181%2C0904.2673%2C0904.3203%2C0904.0806%2C0904.0115%2C0904.0995%2C0904.4832%2C0904.2940%2C0904.3669%2C0904.3956%2C0904.0222%2C0904.2089%2C0904.1347%2C0904.4100%2C0904.2125%2C0904.2773%2C0904.0027%2C0904.3762%2C0904.4566%2C0904.1979%2C0904.3924%2C0904.0116%2C0904.3942%2C0904.1938%2C0904.0265%2C0904.4367%2C0904.1481%2C0904.0070%2C0904.1718%2C0904.3920%2C0904.0601%2C0904.3390%2C0904.0811%2C0904.1370%2C0904.1552%2C0904.4397%2C0904.3469%2C0904.1698%2C0904.0795%2C0904.2932%2C0904.2610%2C0904.0690%2C0904.4601%2C0904.0598%2C0904.4800%2C0904.1019%2C0904.4141%2C0904.3616%2C0904.0863%2C0904.4312%2C0904.2052%2C0904.1762%2C0904.1659%2C0904.2857%2C0904.0274%2C0904.1580%2C0904.2388%2C0904.0152%2C0904.1570%2C0904.2686%2C0904.4576%2C0904.4363%2C0904.1894%2C0904.3900%2C0904.4372%2C0904.2144%2C0904.3687%2C0904.2970%2C0904.4448%2C0904.1588%2C0904.3299%2C0904.3329%2C0904.2873%2C0904.1677%2C0904.2953%2C0904.4567%2C0904.3587&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We construct partitions of rectangles into smaller rectangles from an input\nconsisting of a planar dual graph of the layout together with restrictions on\nthe orientations of edges and junctions of the layout. Such an\norientation-constrained layout, if it exists, may be constructed in polynomial\ntime, and all orientation-constrained layouts may be listed in polynomial time\nper layout."}, "authors": ["David Eppstein", "Elena Mumford"], "author_detail": {"name": "Elena Mumford"}, "author": "Elena Mumford", "arxiv_comment": "To appear at Algorithms and Data Structures Symposium, Banff, Canada,\n  August 2009. 12 pages, 5 figures", "links": [{"href": "http://arxiv.org/abs/0904.4312v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0904.4312v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.CG", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CG", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "F.2.2", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0904.4312v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0904.4312v1", "journal_reference": null, "doi": null, "fulltext": "Orientation-Constrained Rectangular Layouts\nDavid Eppstein1 and Elena Mumford2\n1\n\narXiv:0904.4312v1 [cs.CG] 28 Apr 2009\n\n2\n\nDepartment of Computer Science, University of California, Irvine, USA\nDepartment of Mathematics and Computer Science, TU Eindhoven, The Netherlands\n\nAbstract. We construct partitions of rectangles into smaller rectangles from an\ninput consisting of a planar dual graph of the layout together with restrictions\non the orientations of edges and junctions of the layout. Such an orientationconstrained layout, if it exists, may be constructed in polynomial time, and all\norientation-constrained layouts may be listed in polynomial time per layout.\n\n1 Introduction\nConsider a partition of a rectangle into smaller rectangles, at most three of which meet\nat any point. We call such a partition a rectangular layout. Rectangular layouts are an\nimportant tool in many application areas. In VLSI design rectangular layouts represent\nfloorplans of integrated circuits [8], while in architectural design they represent floorplans of buildings [2, 12]. In cartography they are used to visualize numeric data about\ngeographic regions, by stylizing the shapes of a set of regions to become rectangles,\nwith areas chosen to represent statistical data about the regions; such visualizations are\ncalled rectangular cartograms, and were first introduced in 1934 by Raisz [11].\nThe dual graph or adjacency graph of a layout is a plane graph G (L ) that has a\nvertex for every region of L and an edge for every two adjacent regions. In both VLSI\ndesign and in cartogram construction, the adjacency graph G is typically given as input,\nand one has to construct its rectangular dual, a rectangular layout for which G is the\ndual graph. Necessary and sufficient conditions for a graph to have a rectangular dual\nare known [7], but graphs that admit a rectangular dual often admit more than one.\nThis fact allows us to impose additional requirements on the rectangular duals that we\nselect, but it also leads to difficult algorithmic questions concerning problems of finding\nlayouts with desired properties. For example, Eppstein et al [3] have considered the\nsearch for area-universal layouts, layouts that can be turned into rectangular cartograms\nfor any assignment of positive weights to their regions.\nIn this paper, we consider another kind of constrained layouts. Given a graph G we\nwould like to know whether G has a rectangular dual that satisfies certain constraints on\nthe orientations of the adjacencies of its regions; such constraints may be particularly\nrelevant for cartographic applications of these layouts. For example, in a cartogram of\nthe U.S., we might require that a rectangle representing Nevada be right of or above a\nrectangle representing California, as geographically Nevada is east and north of California. We show that layouts with orientation constraints of this type may be constructed\nin polynomial time. Further, we can list all layouts obeying the constraints in polynomial time per layout. Our algorithms can handle constraints (such as the one above)\n\n\ft\n\nr\n\nl\n\nb\n\nFig. 1. A proper graph G , extended graph E(G ), and rectangular dual L of E(G ), from [3].\n\nlimiting the allowed orientations of a shared edge between a pair of adjacent regions,\nas well as more general kind of constraints restricting the possible orientations of the\nthree rectangles meeting at any junction of the layout. We also discuss the problem of\nfinding area-universal layouts in the presence of constraints of these types. A version\nof the orientation-restricted layout problem was previously considered by van Kreveld\nand Speckmann [14] but they required a more restrictive set of constraints and searched\nexhaustively through all layouts rather than developing polynomial time algorithms.\nFollowing [3], we use Birkhoff's representation theorem for finite distributive lattices to associate the layouts dual to G with partitions of a related partial order into a\nlower set and an upper set. The main idea of our new algorithms is to translate the orientation constraints of our problem into an equivalence relation on this partial order. We\nform a quasiorder by combining this relation with the original partial order, partition the\nquasiorder into lower and upper sets, and construct layouts from these partitions. However, the theory as outlined above only works directly on dual graphs with no nontrivial\nseparating 4-cycles. To handle the general case we must do more work to partition G\nby its 4-cycles into subgraphs and to piece together the solutions from each subgraph.\n\n2 Preliminaries\nKozminski and Kinnen [7] demonstrated that a plane triangulated graph G has a rectangular dual if it can be augmented with four external vertices {l,t, r, b} to obtain an\nextended graph E(G ) in which every inner face is a triangle, the outer face is a quadrilateral, and E(G ) does not contain any separating 3-cycles (a separating k-cycle is a\nk-cycle that has vertices both inside and outside of it). A graph G that can be extended\nin this way is said to be proper-see Fig. 1 for an example. The extended graph E(G ) is\nsometimes referred to as a corner assignment of G , since it defines which vertices of G\nbecome corner rectangles of the corresponding dual layout. In the rest of the paper we\nassume that we are given a proper graph with a corner assignment. For proper graphs\nwithout a corner assignment, one can always test all possible corner assignments, as\ntheir number is polynomial in the number of external vertices of the graph.\nA rectangular dual L induces a labeling for the edges of its graph G (L ): we color\neach edge blue if the corresponding pair of rectangles share a vertical line, or red if\nthe corresponding pair of rectangles share a horizontal border; we direct the blue edges\nfrom left to right and red edges from bottom to top. For each inner vertex v of G (L ) the\nincident edges with the same label form continuous blocks around v: all incoming blue\n\n\fFig. 2. Recoloring the interior of an alternatingly-colored four-cycle in a regular edge labeling.\n\nedges are followed (in clockwise order) by all outgoing red, all outgoing blue and finally\nall incoming red edges. All edges adjacent to one of the four external vertices l,t, r, b\nhave a single label. A labeling that satisfies these properties is called a regular edge\nlabeling [6]. Each regular edge labeling of a proper graph corresponds to an equivalence\nclass of rectangular duals of G , considering two duals to be equivalent whenever every\npair of adjacent regions have the same type of adjacency in both duals.\n2.1 The distributive lattice of regular edge labelings\nA distributive lattice is a partially ordered set in which every pair (a, b) of elements has\na unique supremum a \u2227 b (called the meet of a and b) and a unique infinum a \u2228 b (called\nthe join of a and b) and where the join and meet operations are distributive over each\nother. Two comparable elements that are closest neighbours in the order are said to be\na covering pair, the larger one is said to cover the smaller one.\nAll regular edge labelings of a proper graph form a distributive lattice [4, 5, 13] in\nwhich the covering pairs of layouts are the pairs in which the layouts can be transformed\nfrom one to the other by means of a move-changing the labeling of the edges inside an\nalternating four-cycle (a 4-cycle C whose edge colors alternate along the cycle). Each\nred edge within the cycle becomes blue and vice versa; the orientations of the edges\nare adjusted in a unique way such that the cyclic order of the edges around each vertex\nis as defined above-see Fig. 2 for an example. In terms of layouts, the move means\nrotating the sublayout formed by the inner vertices of C by 90 degrees. A move is called\nclockwise if the borders between the red and blue labels of each of the four vertices\nof the cycle move clockwise by the move, and called counterclockwise otherwise. A\ncounterclockwise move transforms a layout into another layout higher up the lattice.\nWe can represent the lattice by a graph in which each vertex represents a single\nlayout and each edge represents a move between a covering pair of layouts, directed\nfrom the lower layout to the higher one. We define a monotone path to be a path in this\ngraph corresponding to a sequence of counterclockwise moves.\n2.2 The Birkhoff representation of the lattice of layouts\nFor any finite distributive lattice D, let P be the partial order of join-irreducible elements (elements that cover only one other element of D), and let J(P ) be the lattice of\npartitions of P into sets L and U, where L is downward closed and U is upward closed\nand where meets and joins in J(P ) are defined as intersections and unions of these sets.\nBirkhoff's representation theorem [1] states that D is isomorphic to J(P ).\n\n\f(bc,1)\n\nb\n\n(ab,0)\n\nb\n\nd\na\n\na\n\nc\n\n(d,0)\n\nd\n(ac,0)\n\nc\n\n(bc,0)\n\nbc\n(bc,1)\n\na\n\n(ab,0)\n\nb\n\nb\n\nd\n\na\n\n(ac,0)\n\nc\n\nc\n\n(d,0)\n\nd\n\n(bc,0)\n\nd\n\nab\n(bc,1)\n\nb\n\na\nc\n\na\n\n(bc,1)\n\nb\n\n(ab,0)\n\nb\n\nd\n\n(d,0)\n\nd\nc\n\n(ab,0)\n\nb\n\nd\n\na\n\n(ac,0)\n\na\n\nc\n\n(d,0)\n\nd\n(ac,0)\n\nc\n\n(bc,0)\n\n(bc,0)\n\nab\n\nd\n\nac\n(bc,1)\n\n(bc,1)\n\nb\n\na\nc\n\n(ab,0)\n\nb\na\n\nd\n\n(d,0)\n\nd\nc\n\nb\n\na\n\na\n\n(ac,0)\n\nac\n\n(d,0)\n\nd\n(ac,0)\n\nc\n\nc\n\n(bc,0)\n\n(ab,0)\n\nb\n\nd\n\n(bc,0)\n\nd\n(bc,1)\n\nb\n\na\nc\n\nd\n\n(ab,0)\n\nb\na\n\n(d,0)\n\nd\nc\n\n(ac,0)\n(bc,0)\n\nbc\n(bc,1)\n\nb\n\na\nc\n\n(ab,0)\n\nb\na\n\nd\n\n(d,0)\n\nd\nc\n\n(ac,0)\n(bc,0)\n\nFig. 3. The rectangular layouts dual to a given extended graph E(G ) and the corresponding regular edge labelings and partial order partitions. Two layouts are shown connected to each other\nby an edge if they differ by reversing the color within a single alternatingly-colored four-cycle;\nthese moves are labeled by the edge or vertex within the four-cycle. From [3].\n\nEppstein et al. [3] show that when E(G ) has no nontrivial separating four-cycles\n(four-cycles with more than one vertex on the inside) the partial order of join-irreducible\nelements of the lattice of rectangular duals of E(G ) is order-isomorphic to the partial\norder P on pairs (x, i), where x is a flippable item of E(G ), and i is a flipping number\nof x. A flippable item x is either a degree-four vertex of G or an edge of G that is\nnot adjacent to a degree-four vertex, such that there exist two regular edge labelings of\nE(G ) in which x has different labels (when x is a vertex we refer to the labels of its\nfour adjacent edges). Given a layout L and a flippable item x, the number fx (L ) is the\nnumber of times that x has been flipped on a monotone path in the distributive lattice\nfrom its bottom element to L ; this number, which we call the flipping number of x in\nL , is well defined, since it is independent of the path by which L has been reached. For\nevery flippable item x, P contains pairs (x, i) for all i such that there exist a layout L\nwhere fx (L ) = i \u2212 1. A pair (x, i) is associated with the transition of x from state i to\ni + 1. A pair (x, i) is less than a pair (y, j) in the partial order if is not possible to flip y\nfor the jth time before flipping x for the ith time. If (x, i) and (y, j) form a covering pair\nin P , the flippable items x and y belong to the same triangular face of E(G ).\nAs Eppstein et al. show, the layouts dual to E(G ) correspond one-for-one with partitions of the partial order P into a lower set L and an upper set U. The labeling of the\nlayout corresponding to a given partition of P can be recovered by starting from the\nminimal layout and flipping each flippable item x represented in the lower set L of the\n\n\fpartition nx + 1 times, where (x, nx ) is the highest pair involving x in L. The downward\nmoves that can be performed from L correspond to the maximal elements of L, and\nthe upward moves that can be performed from L correspond to the minimal elements\nof U. Fig. 3 depicts the lattice of layouts of a 12-vertex extended dual graph, showing\nfor each layout the corresponding partition of the partial order into two sets L and U.\nThe partial order of flippable items has at most O(n2 ) elements and can be constructed\nin time polynomial in n, where n is the number of vertices in G [3].\n\n3 The lattice theory of constrained layouts\nAs we describe in this section, in the case where every separating 4-cycle in E(G ) is\ntrivial, the orientation-constrained layouts of E(G ) may themselves be described as a\ndistributive lattice, a sublattice (although not in general a connected subgraph) of the\nlattice of all layouts of E(G ).\n3.1 Sublattices from quotient quasiorders\nWe first consider a more general order-theoretic problem. Let P be a partial order and\nlet C be a (disconnected) undirected constraint graph having the elements of P as its\nvertices. We say that a partition of P into a lower set L and an upper set U respects C\nif there does not exist an edge of C that has one endpoint in L and the other endpoint\nin U. As we now show, the partitions that respect C may be described as a sublattice of\nthe distributive lattice J(P ) defined via Birkhoff's representation theorem from P .\nWe define a quasiorder (that is, reflexive and transitive binary relation) Q on the\nsame elements as P , by adding pairs to the relation that cause certain elements of P\nto become equivalent to each other. More precisely, form a directed graph that has the\nelements of P as its vertices , and that has a directed edge from x to y whenever either\nx \u2264 y in P or xy is an edge in C, and define Q to be the transitive closure of this directed\ngraph: that is, (x, y) is a relation in Q whenever there is a path from x to y in the directed\ngraph. A subset S of Q is downward closed (respectively, upward closed) if there is no\npair (x, y) related in Q for which S \u2229 {x, y} = {y} (respectively, S \u2229 {x, y} = {x}).\nDenote by J(Q ) the set of partitions of Q into a downward closed and an upward\nclosed set. Each strongly connected component of the directed graph derived from P\nand C corresponds to a set of elements of Q that are all related bidirectionally to each\nother, and Q induces a partial order on these strongly connected components. Therefore,\nby Birkhoff's representation theorem, J(Q ) forms a distributive lattice under set unions\nand intersections.\nLemma 1. The family of partitions in J(Q ) is the family of partitions of P into lower\nand upper sets that respect C.\nProof. We show the lemma by demonstrating that every partition in J(Q ) corresponds\nto a partition of J(P ) that respects C and the other way round.\nIn one direction, let (L,U) be a partition in J(Q ). Then, since Q \u2283 P , it follows that\n(L,U) is also a partition of P into a downward-closed and an upward-closed subset.\nAdditionally, (L,U) respects C, for if there were an edge xy of C with one endpoint in\n\n\fL and the other endpoint in U then one of the two pairs (x, y) or (y, x) would contradict\nthe definition of being downward closed for L.\nIn the other direction, let (L\u2032 ,U \u2032 ) be a partition of P into upper and lower sets that\nrespects C, let (x, y) be any pair in Q , and suppose for a contradiction that x \u2208 U \u2032 and\ny \u2208 L\u2032 . Then there exists a directed path from x to y in which each edge consists either\nof an ordered pair in P or an edge in C. Since x \u2208 U \u2032 and y \u2208 L\u2032 , this path must have\nan edge in which the first endpoint is in U \u2032 and the second endpoint is in L\u2032 . But if this\nedge comes from an ordered pair in P , then (L\u2032 ,U \u2032 ) is not a partition of P into upper\nand lower sets, while if this edge comes from C then (L\u2032 ,U \u2032 ) does not respect C. This\ncontradiction establishes that there can be no such pair (x, y), so (L\u2032 ,U \u2032 ) is a partition\nof Q into upper and lower sets as we needed to establish.\nIf P and C are given as input, we may construct Q in polynomial time: by finding\nstrongly connected components of Q we may reduce it to a partial order, after which it\nis straightforward to list the partitions in J(Q ) in polynomial time per partition.\n3.2 Edge orientation constraints\nConsider a proper graph G with corner assignment E(G ) and assume that each edge e\nis given with a set of forbidden labels, where a labels is a color-orientation combination\nfor an edge, and let P be the partial order whose associated distributive lattice J(P )\nhas its elements in one-to-one correspondence with the layouts of E(G ). Let x be the\nflippable item corresponding to e-that is either the edge itself of the degree-four vertex\ne is adjacent to. Then in any layout L , corresponding to a partition (L,U) \u2208 J(P ), the\norientation of e in L may be determined from i mod 4, where i is the largest value such\nthat (x, i) \u2208 L. Thus if we would like to exclude a certain color-orientation combination\nfor x, we have find the corresponding value k \u2208 Z4 and exclude the layouts L such that\nfx (L ) = k mod 4 from consideration. Thus the set of flipping values for x can be partitioned into forbidden and legal values for x; instead of considering color-orientation\ncombinations of the flippable items we may consider their flipping values. We formalize\nthis reasoning in the following lemma.\nLemma 2. Let E(G ) be a corner assignment of a proper graph G . Let x be a flippable\nitem in E(G ), let L be an element of the lattice of regular edge labelings of E(G ), and\nlet (L,U) be the corresponding partition of P .\nThen L satisfies the constraints described by the forbidden labels if and only if for\nevery flippable item x one of the following is true:\n\u2013 The highest pair involving x in L is (x, i), where i + 1 is not a forbidden value for x,\nor\n\u2013 (x, 0) is in the upper set and 0 is not a forbidden value for x.\nLemma 1 may be used to show that the set of all constrained layout is a distributive\nlattice, and that all constrained layouts may be listed in polynomial time per layout. For\ntechnical reasons we augment P to a new partial order A(P ) = P \u222a {\u2212\u221e, +\u221e}, where\nthe new element \u2212\u221e lies below all other elements and the new element +\u221e lies above\nall other elements. Each layout of E(G ) corresponds to a partition of P into lower and\n\n\f+\n(bc,1)\n\nb\n\nb\n\nd\n\n(ab,0)\na\n\na\n\nc\n\nd\n\n(d,0)\n\nc\n(ac,0)\n(bc,0)\n\n+\n(bc,1)\n\nb\n\n(ab,0)\n\nb\n\nd\n\na\n\na\n\nd\n(d,0)\nc\n\nc\n\n(ac,0)\n(bc,0)\n\n-\n\nb\na\n\n+\n\n(bc,1)\n\n(bc,1)\n\n(ab,0)\n\nb\n\na\n\n+\n\na\n\n(d,0)\n\n(ab,0)\n\nb\n\nb\nd\n\nd\nc\n\nd\n\na\n\nd\n(d,0)\nc\n\nc\n(ac,0)\n\nc\n\n(ac,0)\n\n(bc,0)\n\n(bc,0)\n\n-\n\n-\n\n+\n(bc,1)\n\nb\n\nb\n\na\na\n\n(ab,0)\nd\n\nd\nc\n\n(d,0)\n\nc\n(ac,0)\n(bc,0)\n\n-\n\n+\n(bc,1)\n(ab,0)\n\nb\n\na\n\nb\na\n\nc\n\nd\n\n(d,0)\nd\n\nc\n\n(ac,0)\n(bc,0)\n\n-\n\nFig. 4. The family of rectangular layouts dual to a given extended graph E(G ) satisfying the\nconstraints that the edge between rectangles a and b must be vertical (cannot be colored red) and\nthat the edge between rectangles b and c must be horizontal (cannot be colored blue). The green\nregions depict strongly connected components of the associated quasiorder Q . The four central\nshaded elements of the lattice correspond to layouts satisfying the constraints.\n\nupper sets, which can be mapped into a partition of A(P ) by adding \u2212\u221e to the lower\nset and +\u221e to the upper set. The distributive lattice J(A(P )) thus has two additional\nelements that do not correspond to layouts of E(G ): one in which the lower set is empty\nand one in which the upper set is empty. We define a constraint graph C having as its\nvertices the elements of A(P ), with edges defined as follows:\n\u2013 If (x, i) and (x, i + 1) are both elements of A(P ) and i + 1 is a forbidden value for x,\nwe add an edge from (x, i) to (x, i + 1) in C.\n\u2013 If (x, i) is an element of A(P ) but (x, i + 1) is not, and i + 1 is a forbidden value for\nx, we add an edge from (x, i) to +\u221e in C.\n\u2013 If 0 is a forbidden value for x, we add an edge from \u2212\u221e to (x, 0) in C.\nAll together, this brings us to the following result:\nLemma 3. Let E(G ) be an extended graph without nontrivial separating 4-cycles and\nwith a given set of forbidden orientations, and let Q be the quasiorder formed from\nthe transitive closure of A(P ) \u222aC as described in Lemma 1. Then the elements of J(Q )\n\n\fcorresponding to partitions of Q into two nonempty subsets correspond to exactly the\nlayouts that satisfy the forbidden orientation constraints.\nProof. By Lemma 2 and the definition of C, a partition in J(P ) corresponds to a constrained layout if and only if it respects each of the edges in C. By Lemma 1, the elements of J(Q ) correspond to partitions of A(P ) that respect C. And a partition of A(P )\ncorresponds to an element of J(P ) if and only if its lower set does not contain +\u221e and\nits upper set does not contain \u2212\u221e.\nCorollary 1 Let E(G ) be an extended graph without nontrivial separating 4-cycles\nand with a given set of forbidden orientations. There exists a constrained layout for\nE(G ) if and only if there exists more than one strongly connected component in Q .\nCorollary 2 The existence of a constrained layout for a given extended graph E(G)\nwithout nontrivial separating 4-cycles can be proved or disproved in polynomial time.\nCorollary 3 All constrained layouts for a given extended graph E(G) without nontrivial separating 4-cycles can be listed in polynomial time per layout.\nFigure 4 depicts the sublattice resulting from these constructions for the example\nfrom Figure 3, with constraints on the orientations of two of the layout edges.\n3.3 Junction orientation constraints\nSo far we have only considered forbidding certain edge labels. However the method\nabove can easily be extended to different types of constraints. For example, consider\ntwo elements of P (x, i) and (y, j) that are a covering pair in P ; this implies that x and\ny are two of the three flippable items surrounding unique a T-junction of the layouts\ndual to E(G ). Forcing (x, i) and (y, j) to be equivalent by adding an edge from (x, i)\nto (y, j) in the constraint graph C can be used for more general constraints: rather than\ndisallowing one or more of the four orientations for any single flippable item, we can\ndisallow one or more of the twelve orientations of any T-junction. For instance, by\nadding equivalences of this type we could force one of the three rectangles at the Tjunction to be the one with the 180-degree angle.\nAny internal T-junction of a layout for E(G ) (dual to a triangle of G ) has 12 potential orientations: each of its three rectangles can be the one with the 180-degree angle,\nand with that choice fixed there remain four choices for the orientation of the junction.\nIn terms of the regular edge labeling, any triangle of G may be colored and oriented in\ni, j\nany of 12 different ways. For a given covering pair (x, i) and (y, j), let Cx,y denote the\nset of edges between pairs (x, i + 4k) and (y, j + 4k) for all possible integer values of\nk, together with an edge from \u2212\u221e to (y, 0) if j mod 4 = 0 and an edge from (x, i + 4k)\nto +\u221e if i + 4k is the largest value of i\u2032 such that (x, i\u2032 ) belongs to P . Any T-junction\nis associated with 12 of these edge sets, as there are three ways of choosing a pair\nof adjacent flippable items and four ways of choosing values of i and j (mod 4) that\nlead to covering pairs. Including any one of these edge sets in the constraint graph C\ncorresponds to forbidding one of the 12 potential orientations of the T-junction.\nThus, Lemma 3.2 and its corollaries may be applied without change to dual graphs\nE(G ) with junction orientation constraints as well as edge orientation constraints, as\nlong as E(G ) has no nontrivial separating 4-cycles.\n\n\f4 Constrained layouts for unconstrained dual graphs\nProper graphs with nontrivial separating 4-cycles still have finite distributive lattices of\nlayouts, but it is no longer possible to translate orientation constraints into equivalences\nbetween members of an underlying partial order. The reason is that, for a graph without\ntrivial separating 4-cycles, the orientation of a feature of the layout changes only for a\nflip involving that feature, so that the orientation may be determined from the flip count\nmodulo four. For more general graphs the orientation of a feature is changed not only\nfor flips directly associated with that feature, but also for flips associated with larger\n4-cycles that contain the feature, so the flip count of the feature no longer determines\nits orientation. For this reason, as in [3], we treat general proper graphs by decomposing them into minimal separation components with respect to separating 4-cycles and\npiecing together solutions found separately within each of these components.\nFor each separating four-cycle C in a proper graph G with a corner assignment\nE(G ) consider two minors of G defined as follows. The inner separation component of\nC is a graph GC and its extended graph E(GC ), where GC is the subgraph of G induced\nby the vertices inside C and E(GC ) adds the four vertices of the cycle as corners of the\nextended graph. The outer separation component of C is a graph formed by contracting\nthe interior of C into a single supervertex. A minimal separation component of G is\na minor of G formed by repeatedly splitting larger graphs into separation components\nuntil no nontrivial separating four-cycles remain. A partition tree of E(G ) into minimal\nseparation components may be found in linear time [3].\nWe use the representation of a graph as a tree of minimal separation components in\nour search for constrained layouts for G . We first consider each such minimal component separately for every possible mapping of vertices of C to {l,t, r, b} (we call these\nmappings the orientation of E(G )). Different orientations imply different flipping values of forbidden labels for the given constraint function, since the flipping numbers are\ndefined with respect to the orientation of E(G ). Having that in mind we are going to\ntest the graph E(G ) for existence of a constrained layout in the following way:\nFor each piece in a bottom-up traversal of the decomposition tree and for each orientation of the corners of the piece:\n1. Find the partial order P describing the layouts of the piece\n2. Translate the orientation constraints within the piece into a constraint graph on the\naugmented partial order A(P ).\n\nFig. 5. An extended graph with a nontrivial separating four-cycle (left), its outer separation component (center), and its inner separation component (right). From [3].\n\n\f3. Compute the strongly connected components of the union of A(P ) with the constraint graph, and form a binary relation that is a subset of Q and that includes all\ncovering relations in Q by finding the components containing each pair of elements\nin each covering relation in P .\n4. Translate the existence or nonexistence of a layout into a constraint on the label of\nthe corresponding degree-4 vertex in the parent piece of the decomposition. That\nis, if the constrained layout for a given orientation of E(G \u2032 ) does not exist, forbid (in the parent piece of the decomposition) the label of the degree-four vertex\ncorresponding to that orientation.\nIf the algorithm above confirms the existence of a constrained layout, we may list all\nlayouts satisfying the constraints as follows. For each piece in the decomposition tree,\nin top-down order:\n1. List all lower sets of the corresponding quasiorder Q .\n2. Translate each lower set into a layout for that piece.\n3. For each layout, and each child of the piece in the decomposition tree, recursively\nlist the layouts in which the child's corner orientation matches the labeling of the\ncorresponding degree-four vertex of the outer layout.\n4. Glue the inner and outer layouts together.\nTheorem 1. The existence of a constrained layout for a proper graph G can be found\nin polynomial time in |G |. The set of all constrained layouts for graph can be found in\npolynomial time per layout.\nAs described in [3], the partial order P describing the layouts of each piece has a\nnumber of elements and covering pairs that is quadratic in the number of vertices in the\ndual graph of the piece, and a description of this partial order in terms of its covering\npairs may be found in quadratic time. The strongly connected component calculation\nwithin the algorithm takes time linear in the size of P , and therefore the overall algorithm for testing the existence of a constrained layout takes time O(n2 ), where n is the\nnumber of vertices in the given dual graph.\n\n5 Finding area-universal constrained layouts\nOur previous work [3] included an algorithm for finding area-universal layouts that\nis fixed-parameter tractable, with the maximum number of separating four-cycles in\nany piece of the separation component decomposition as its parameter. It is not known\nwhether this problem may be solved in polynomial time for arbitrary graphs. But as we\noutline in this section, the same fixed parameter tractability result holds for a combination of the constraints from that paper and from this one: the problem of searching for\nan area-universal layout with constrained orientations.\nThese layouts correspond to partitions of P such that all flippable items that are\nminimal elements of the upper set and all flippable items that are maximal items of the\nlower set are all degree-four vertices. A brute force algorithm can find these partitions\nby looking at all sets of degree-four vertices as candidates for extreme sets for partitions\n\n\fof P . Instead, in our previous work on this problem we observed that a flippable edge\nis not free in a layout (i.e. cannot be flipped in the layout), if an only if it is fixed by\na so-called stretched pair. A stretched pair is a pair of two degree-four vertices (v, w),\nsuch that on any monotone path up from L w is flipped before w, and on any monotone\npath down from L v is flipped before w. If fv (L ) is the maximal flipping value of v,\n/ to be stretched (where 0/ is a special symbol) and declare (0,\n/ w)\nthen we declare (v, 0)\nto be a stretched pair if fw (L ) = 0. An edge is fixed by a stretched pair (v, w) in L if\nx if every monotone path up from L moves w before moving x, and every monotone\npath down from L moves v before moving x. So instead of looking for extreme sets, we\ncould check every set of degree-four vertices for existence of a layout in which every\npair in the set is stretched, and check which edges each such a set fixes. Each set H\nof pairs can be checked for stretchability by starting at the bottom of the lattice and\nflipping the corresponding items of P up the lattice until every pair in H is stretched\nor the maximal elements of the lattice is reached. If there are k degree-four vertices (or\n2\nequivalently separating 4-cycles) in a piece, there are 2O(k ) sets of stretched pairs we\nneed consider, each of which takes polynomial time to test, so the overall algorithm for\n2\nsearching for unconstrained area-universal layouts takes time 2O(k ) nO(1) .\nFor constrained layouts, a similar approach works. Within each piece of the separa2\ntion decomposition, we consider 2O(k ) sets of stretched pairs in P , as before. However,\nto test one of these sets, we perform a monotonic sequence of flips in J(Q ), at each point\neither flipping an element of Q that contains the upper element of a pair that should be\nstretched, or performing a flip that is a necessary prerequisite to flipping such an upper element. Eventually, this process will either reach an area-universal layout for the\npiece or the top element of the lattice; in the latter case, no area-universal layout having\nthat pattern of stretched pairs exists. By testing all sets of stretched pairs, we may find\nwhether an area-universal layout matching the constraints exists for any corner coloring\nof any piece in the separation decomposition. These constrained layouts for individual\npieces can then be combined by the same tree traversal of the separation decomposition\ntree that we used in the previous section, due to the observation from [3] that a layout\nis area-universal if and only if the derived layout within each of its separation components is area-universal. The running time for this fixed-parameter tractable algorithm is\nthe same as in [3].\n\n6 Conclusions and open problems\nWe have provided efficient algorithms for finding rectangular layouts with orientation\nconstraints on the features of the constraints, and we have outlined how to combine\nour approach with the previous algorithms for finding area-universal layouts so that we\ncan find orientation-constrained area-universal layouts as efficiently as we can solve the\nunconstrained problem.\nAn important problem in the generation of rectangular layouts with special properties, that has resisted our lattice-theoretic approach, is the generation of sliceable layouts. If we are given a graph G , can we determine whether it is the graph of a sliceable\nlayout in polynomial time? Additionally, although our algorithms are polynomial time,\nthere seems no reason intrinsic to the problem for them to take as much time as they do:\n\n\fcan we achieve subquadratic time bounds for finding orientation-constrained layouts,\nperhaps by using an algorithm based more on the special features of the problem and\nless on general ideas from lattice theory?\nMoving beyond layouts, there are several other important combinatorial constructions that may be represented using finite distributive lattices, notably the set of matchings and the set of spanning trees of a planar graph, and certain sets of orientations of\narbitrary graphs [9]. It would be of interest to investigate whether our approach of combining the underlying partial order of a lattice with a constraint graph produces useful\nversions of constrained matching and constrained spanning tree problems, and whether\nother algorithms that have been developed in the more general context of distributive\nfinite lattices [10] might fruitfully be applied to lattices of rectangular layouts.\n\nAcknowledgements\nWork of D. Eppstein was supported in part by NSF grant 0830403 and by the Office of\nNaval Research under grant N00014-08-1-1015.\n\nReferences\n1. G. Birkhoff. Rings of sets. Duke Mathematical Journal, 3(3):443\u2013454, 1937.\n2. C. F. Earl and L. J. March. Architectural applications of graph theory. In R. Wilson and\nL. Beineke, editors, Applications of Graph Theory, pages 327\u2013355. Academic Press,\nLondon, 1979.\n3. D. Eppstein, E. Mumford, B. Speckmann, and K. Verbeek. Area-universal rectangular\nlayouts. In Proc. 25th ACM Symp. Computational Geometry, 2009. To appear.\n4. \u00c9. Fusy. Transversal structures on triangulations, with application to straight-line drawing.\nIn P. Healy and N. S. Nikolov, editors, Graph Drawing: 13th Int. Symp., GD 2005, volume\n3843 of Lecture Notes in Computer Science, pages 177\u2013188. Springer-Verlag, 2006.\n5. \u00c9. Fusy. Transversal structures on triangulations: A combinatorial study and straight-line\ndrawings. Discrete Mathematics, 2009. To appear.\n6. G. Kant and X. He. Regular edge labeling of 4-connected plane graphs and its applications\nin graph drawing problems. Theoretical Computer Science, 172(1\u20132):175\u2013193, 1997.\n7. K. Ko\u017ami\u0144ski and E. Kinnen. Rectangular duals of planar graphs. Networks, 5(2):145\u2013157,\n1985.\n8. C.-C. Liao, H.-I. Lu, and H.-C. Yen. Compact floor-planning via orderly spanning trees.\nJournal of Algorithms, 48:441\u2013451, 2003.\n9. J. Propp. Lattice structure for orientations of graphs. Electronic preprint\narxiv:math/0209005, 1993.\n10. J. Propp. Generating random elements of finite distributive lattices. Electronic J.\nCombinatorics, 4(2):R15, 1997.\n11. E. Raisz. The rectangular statistical cartogram. Geographical Review, 24(2):292\u2013296,\n1934.\n12. I. Rinsma. Rectangular and orthogonal floorplans with required rooms areas and tree\nadjacency. Environment and Planning B: Planning and Design, 15:111\u2013118, 1988.\n13. H. Tang and W.-K. Chen. Generation of rectangular duals of a planar triangulated graph by\nelementary transformations. In IEEE Int. Symp. Circuits and Systems, volume 4, pages\n2857\u20132860, 1990.\n14. M. van Kreveld and B. Speckmann. On rectangular cartograms. Computational Geometry:\nTheory and Applications, 37(3):175\u2013187, 2007.\n\n\f"}