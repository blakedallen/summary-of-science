{"id": "http://arxiv.org/abs/0710.4842v1", "guidislink": true, "updated": "2007-10-25T12:18:38Z", "updated_parsed": [2007, 10, 25, 12, 18, 38, 3, 298, 0], "published": "2007-10-25T12:18:38Z", "published_parsed": [2007, 10, 25, 12, 18, 38, 3, 298, 0], "title": "Using Mobilize Power Management IP for Dynamic & Static Power Reduction\n  in SoC at 130 nm", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0710.0453%2C0710.4718%2C0710.1337%2C0710.0554%2C0710.2145%2C0710.4665%2C0710.5294%2C0710.5313%2C0710.3390%2C0710.3578%2C0710.3008%2C0710.4849%2C0710.4261%2C0710.4803%2C0710.3928%2C0710.5862%2C0710.0611%2C0710.5698%2C0710.5907%2C0710.0800%2C0710.3818%2C0710.2997%2C0710.5612%2C0710.2953%2C0710.1366%2C0710.5725%2C0710.1193%2C0710.2148%2C0710.2370%2C0710.4629%2C0710.0166%2C0710.3479%2C0710.0143%2C0710.1041%2C0710.4372%2C0710.3649%2C0710.2612%2C0710.1376%2C0710.0201%2C0710.4785%2C0710.4769%2C0710.3262%2C0710.4842%2C0710.4391%2C0710.2306%2C0710.5152%2C0710.4167%2C0710.5944%2C0710.0110%2C0710.0837%2C0710.2679%2C0710.0856%2C0710.3493%2C0710.4306%2C0710.3686%2C0710.1680%2C0710.1174%2C0710.3447%2C0710.3711%2C0710.2459%2C0710.4832%2C0710.4280%2C0710.1947%2C0710.0621%2C0710.0382%2C0710.0380%2C0710.3787%2C0710.5350%2C0710.1388%2C0710.0803%2C0710.1456%2C0710.1723%2C0710.2638%2C0710.1834%2C0710.5641%2C0710.3089%2C0710.0339%2C0710.4390%2C0710.3480%2C0710.0492%2C0710.0435%2C0710.1990%2C0710.4648%2C0710.4222%2C0710.4172%2C0710.5704%2C0710.0618%2C0710.2203%2C0710.5052%2C0710.3702%2C0710.3651%2C0710.0334%2C0710.0260%2C0710.0352%2C0710.2694%2C0710.5629%2C0710.5491%2C0710.3758%2C0710.3391%2C0710.2770%2C0710.4762&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Using Mobilize Power Management IP for Dynamic & Static Power Reduction\n  in SoC at 130 nm"}, "summary": "At 130 nm and 90 nm, power consumption (both dynamic and static) has become a\nbarrier in the roadmap for SoC designs targeting battery powered, mobile\napplications. This paper presents the results of dynamic and static power\nreduction achieved implementing Tensilica's 32-bit Xtensa microprocessor core,\nusing Virtual Silicon's Power Management IP. Independent voltage islands are\ncreated using Virtual Silicon's VIP PowerSaver standard cells by using voltage\nlevel shifting cells and voltage isolation cells to implement power islands.\nThe VIP PowerSaver standard cells are characterized at 1.2V, 1.0V and 0.8V, to\naccommodate voltage scaling. Power islands can also be turned off completely.\nDesigners can significantly lower both the dynamic power and the quiescent or\nleakage power of their SoC designs, with very little impact on speed or area\nusing Virtual Silicon's VIP Gate Bias standard cells.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0710.0453%2C0710.4718%2C0710.1337%2C0710.0554%2C0710.2145%2C0710.4665%2C0710.5294%2C0710.5313%2C0710.3390%2C0710.3578%2C0710.3008%2C0710.4849%2C0710.4261%2C0710.4803%2C0710.3928%2C0710.5862%2C0710.0611%2C0710.5698%2C0710.5907%2C0710.0800%2C0710.3818%2C0710.2997%2C0710.5612%2C0710.2953%2C0710.1366%2C0710.5725%2C0710.1193%2C0710.2148%2C0710.2370%2C0710.4629%2C0710.0166%2C0710.3479%2C0710.0143%2C0710.1041%2C0710.4372%2C0710.3649%2C0710.2612%2C0710.1376%2C0710.0201%2C0710.4785%2C0710.4769%2C0710.3262%2C0710.4842%2C0710.4391%2C0710.2306%2C0710.5152%2C0710.4167%2C0710.5944%2C0710.0110%2C0710.0837%2C0710.2679%2C0710.0856%2C0710.3493%2C0710.4306%2C0710.3686%2C0710.1680%2C0710.1174%2C0710.3447%2C0710.3711%2C0710.2459%2C0710.4832%2C0710.4280%2C0710.1947%2C0710.0621%2C0710.0382%2C0710.0380%2C0710.3787%2C0710.5350%2C0710.1388%2C0710.0803%2C0710.1456%2C0710.1723%2C0710.2638%2C0710.1834%2C0710.5641%2C0710.3089%2C0710.0339%2C0710.4390%2C0710.3480%2C0710.0492%2C0710.0435%2C0710.1990%2C0710.4648%2C0710.4222%2C0710.4172%2C0710.5704%2C0710.0618%2C0710.2203%2C0710.5052%2C0710.3702%2C0710.3651%2C0710.0334%2C0710.0260%2C0710.0352%2C0710.2694%2C0710.5629%2C0710.5491%2C0710.3758%2C0710.3391%2C0710.2770%2C0710.4762&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "At 130 nm and 90 nm, power consumption (both dynamic and static) has become a\nbarrier in the roadmap for SoC designs targeting battery powered, mobile\napplications. This paper presents the results of dynamic and static power\nreduction achieved implementing Tensilica's 32-bit Xtensa microprocessor core,\nusing Virtual Silicon's Power Management IP. Independent voltage islands are\ncreated using Virtual Silicon's VIP PowerSaver standard cells by using voltage\nlevel shifting cells and voltage isolation cells to implement power islands.\nThe VIP PowerSaver standard cells are characterized at 1.2V, 1.0V and 0.8V, to\naccommodate voltage scaling. Power islands can also be turned off completely.\nDesigners can significantly lower both the dynamic power and the quiescent or\nleakage power of their SoC designs, with very little impact on speed or area\nusing Virtual Silicon's VIP Gate Bias standard cells."}, "authors": ["Dan Hillman"], "author_detail": {"name": "Dan Hillman"}, "author": "Dan Hillman", "arxiv_comment": "Submitted on behalf of EDAA (http://www.edaa.com/)", "links": [{"href": "http://arxiv.org/abs/0710.4842v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0710.4842v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.AR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.AR", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0710.4842v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0710.4842v1", "journal_reference": "Dans Design, Automation and Test in Europe | Designers'Forum -\n  DATE'05, Munich : Allemagne (2005)", "doi": null, "fulltext": "Using Mobilize Power Management IP for Dynamic & Static Power Reduction in\nSoC at 130 nm\nDan Hillman\nVirtual Silicon\ndanh@virtual-silicon.com\n\nAbstract\nAt 130 nm and 90 nm, power consumption (both dynamic\nand static) has become a barrier in the roadmap for SoC\ndesigns targeting battery powered, mobile applications.\nThis paper presents the results of dynamic and static\npower reduction achieved implementing Tensilica's 32-bit\nXtensa microprocessor core, using Virtual Silicon's\nPower Management IP. Independent voltage islands are\ncreated using Virtual Silicon's VIP PowerSaver standard\ncells by using voltage level shifting cells and voltage\nisolation cells to implement power islands. The VIP\nPowerSaver standard cells are characterized at 1.2V,\n1.0V and 0.8V, to accommodate voltage scaling. Power\nislands can also be turned off completely. Designers can\nsignificantly lower both the dynamic power and the\nquiescent or leakage power of their SoC designs, with\nvery little impact on speed or area using Virtual Silicon's\nVIP Gate Bias standard cells.\n\n1.0 Overview\nDesigners today are challenged not only by new process\ntechnologies capable of incorporating more and more\ndevices on a single chip, but also managing the increase\nin the power that goes along with it. Techniques such as\nclock gating, low power processes, low power IP and\nlower supply voltage used with each new generation of\nprocess technology have helped designers of mobile\napplications to stem the tide of ever increasing power.\nConfigurable processors such as the Xtensa [1] core used\nhere can also optimize the instruction set to minimize\npower and energy.\nAs technology moved down to 180nm, leakage power\nwas not a major issue. The old techniques produced\nacceptable results.\nHowever, the130nm and 90nm\ntechnologies are reaching the point where leakage power\nis nearly the same as dynamic power. And both dynamic\nand static powers are increasing at such a rate that the old\n\nrules just don't work. Unless new techniques are found,\n130nm and 90nm technologies for handheld devices will\nbe adopted more slowly.\nSignificantly reduce both dynamic and static power of\nSoC using Virtual Silicon Mobilize Power Management\nIP. A 32-bit Xtensa microprocessor will be synthesized\nand taken all the way through routing in order to\nbenchmark the power reduction in dynamic power and\nstatic (leakage) power.\n\n2.0 Dynamic power reduction\nDynamic or switching power is expressed by Pdynamic =\nk*C*V2*F*SA: where), k = Constant (usually varies\nfrom 0 to 1), C represents capacitance, V is the\noperational voltage and F is the frequency for the design,\nand SA = Switching activity.\nThe configurable Xtensa attacks most variables in the\ndynamic power equation to achieve low power designs,\ne.g., smaller microprocessor configuration without unused\nfeatures hence reduces C, advanced Xtensa architectures\nallow more tasks get done within each clock cycle or at\nminimum F, and Xtensa's extensive clock gating makes\npossible the lowest SA. For a detailed presentation see\n[2]. This work focuses on minimizing the operating\nvoltage to reduce dynamic power. The libraries for most\nof today's designs are characterized for small process\nvariations at a single voltage. The performance is\nguaranteed for process, temperature and voltage\nvariations. What if you could get a library that was\ncharacterized for several voltages? You could then design\neach part of the SoC at its minimum voltage for its\nrequired operating frequency.\n\n2.1 Design overview\nThe example design shown in Figure 1 is made up of\nthree components: an Xtensa processor, a memory block\nand a USB core.\n\nProceedings of the Design, Automation and Test in Europe Conference and Exhibition (DATE'05)\n1530-1591/05 $ 20.00 IEEE\n\n\fM e m o ry\n\n3.0 Synthesis and layout results\n\nX te n s a\n\nFor each voltage the design was synthesized and routed\nat 167MHz (6.0ns), 182MHz (5.5ns), 200MHz (5.0ns),\n222MHz (4.5ns), 250MHz (4.0ns), 286MHZ (3.5ns),\n333MHz (3.0ns) and 400MHz (2.5ns). The goal for the\ndesign is 150MHz post layout. The results for the 1.2V,\n1.0V and 0.8V libraries after place and route are shown in\nFigure 3.\n\nFigure 1: Simple SoC\nWe divided the design into three autonomous power\nislands, Xtensa, memory and USB. The goal was to get\nthe minimum system dynamic power by running each\npower island at its minimum required voltage.\nFor a 512K embedded SRAM, commercial memory\ncompilers can deliver the access times such that the\ncritical paths between Xtensa and memory can run up to\n181MHz at 0.8V worst case TSMC G process. The USB\nis a hard core and it requires a supply of 1.2V. The\nminimum processor system performance is 150MHz at\nthe 130nm node [3], which the designer wants to obtain at\nthe lowest voltage possible. To find the minimum\noperating voltage for the Xtensa core at 150MHz, we\nused Virtual Silicon's PowerSaver library. The library is\ncharacterized at three voltages, 1.2V, 1.0V and 0.8V.\n\n2.2 Design flow\nFigure 2 shows the design flow used to find the Xtensa's\nminimum operating voltage at 150MHz.\nM in i m u m X t e n s a\nR TL C ode\n\nVST\nP o w e rS a v e r\nL i b r a r ie s\n1 .2 V , 1 .0 V , 0 .8 V\n\nS y n th e s is w ith\nD e s ig n C o m p ile r\n\nP la c e & R o u te\nw ith S E\n\nB a c k a n n o ta te\nn e t l is t\n\nS A IF\n\nG a te L e v e l S im\nw it h V C S\n\nP o w e r M e a s u re m e n t\nw i t h P o w e r C o m p il e r\n\nFigure 2: Design Flow\nThe Xtensa was synthesized at 1.2V, 1.0V and 0.8V using\nworst case wireload corner .db in DC. The best case\ncorner was used for hold time fixing in SE. Routing used\n5 layers in a 6 layer system. Post route simulation was\nused to create SAIF files for measuring power in Power\nCompiler.\n\nPost Layout Frequency vs. Area\n190,000\n\nPost SE Cell Area ( Pm2)\n\nUSB\n\n180,000\n170,000\n160,000\n150,000\n\n1.2V Library\n1.0V Library\n\n140,000\n\n0.8V Library\n\n130,000\n\n130\n\n150\n\n170\n\n190\n\n210\n\n230\n\n250\n\n270\n\nPost SE Frequency (MHz)\n\nFigure 3: Post Route Results\nNot surprisingly, for the 1.2V library all of the synthesis\nand post SE runs meet timing. The utilization for this set\nof designs was 80%. Higher utilization resulted in too\nmany DRC violations. The area curve generally looks as\nyou would expect. A faster design yields a larger area.\nThe best area result that still met post route timing was for\nthe 167MHz design. Actual post layout clock was\n155MHz, and the post route area was 141,429 \u03bcm2.\nFor the 1.0V library, all but the 167MHz constrained\ndesign met the required timing. The utilization for this set\nof designs was 80% to begin with; the post layout ending\nutilization is 89%. Higher utilization resulted in too many\nDRC violations. The best result that still met timing was\nfor the 182MHz design. Actual post layout clock was\n155MHz and the post route area was 165,424 \u03bcm2.\nFor the 0.8V library, only the 333MHz constrained\ndesign met the required timing. Synthesis and routing for\n167MHz and 182MHz designs were not done. The initial\nutilization for this set of designs was 75%; the post layout\nfinal utilization was 83%. Higher utilization resulted in\ntoo many DRC violations. Actual post layout clock was\n151Mhz and the post route area was 183,551 \u03bcm2.\nA summary of the post route results vs. the library\nvoltages for the smallest area design that still met timing\nis shown in Figure 4.\n\n2\nProceedings of the Design, Automation and Test in Europe Conference and Exhibition (DATE'05)\n1530-1591/05 $ 20.00 IEEE\n\n\f350\n300\n\n200,000\n\n250\n200\n\n150,000\n\n150\n\n100,000\n\n100\n\nArea (\u03bcm 2)\n\nFrequency (MHz)\n\n5.0 Putting the soc together\n\n250,000\n\nThe islands of the SoC have been optimized for their\nminimum voltage for proper operation. Xtensa and the\nmemory can operate at 0.8V and the USB can operate at\n1.2V. Level shifters will be needed to ensure proper\noperation for the SoC as a whole. One way to employ\nlevel shifters is be to put a level shifter on all output\nsignals that are less than 1.2V. In the SoC shown in\nFigure 6, all the muxes then operate off a common 1.2V\nsupply.\n\nClock\nArea\n\n50,000\n\n50\n0\n\n0\nVS 0.8V\n\nVS 1.0V\n\nVS 1.2V\n\nFigure 4: Library Voltage vs. Area\nThe minimum required performance of 150MHz was\nmet by all three libraries. For the 1.0V and 0.8V libraries\nperformance was achieved at the cost of increasing the\ndesign area. Since the design is small the increase in area\nis worth the power reduction obtained.\n\n0.8V\n\nLS\n\nMemory\n\nXtensa\nLS\n\n4.0 Dynamic power simulation results\nOur goal was to minimize the dynamic power used by\nthe Xtensa core. To measure dynamic power, we took the\npost layout back annotated netlist and ran six different\nVerilog test suites to generate SAIF files. The SAIF files\nwere fed into Power Compiler to generate dynamic power\nnumbers. The results are shown in Figure 5.\n\nDynamic Power (mW)\n\n10\nSuite 5\nSuite 1\n\n6\n\nSuite 4\n\n4\n\nSuite 2\nSuite 3\n\n2\n\nSuite 6\n\n0\nVS 1.2V\n\nVS 1.0V\n\nUSB\n\nFigure 6: Simple SoC with Level Shifters\nDown shifters are not required because in the Virtual\nSilicon library, all the inputs to cells drive gates.\nTherefore gates tied to a VDD less than 1.2V can safely\nbe driven to 1.2V without damage. However, if your\nlibrary has transmission gates, down shifters may be\nrequired to prevent unwanted currents or latch up.\nSome optimization of level shifter usage can also be\ndone. Level shifters are not needed for signals that only\ngo between the memory the Xtensa. Likewise, level\nshifters are not needed for signals that only go from the\nUSB to the Xtensa or memory.\n\nDynamic Power vs. Voltage\n\n8\n\n1.2V\n\nVS 0.8V\n\nLibrary Voltage\n\nFigure 5: Dynamic Power vs. Library Voltage\nAs expected, you can see dynamic power varied by suite.\nCompared to the 1.2V design, the 1.0V design reduced\npower by 17% while increasing area by 10%. The\nmaximum theoretical power reduction for a design going\nfrom 1.2V to 1.0V is 30.5% ((1.22 \u2013 1.02)/1.22). The\nactual dynamic power savings was less than the\ntheoretical results because of the increased capacitance\nfrom the extra gates and routing area.\nCompared to the 1.2V design, the 0.8V design reduces\npower by 53% while increasing area by 31%. The\nmaximum theoretical power reduction for a design going\nfrom 1.2V to 0.8V is 55.5% ((1.22 \u2013 0.82)/1.22). Again,\nthe actual dynamic power savings was less than the\ntheoretical results because of the increased capacitance\nfrom the extra gates and routing area.\n\n6.0 Dynamic power reduction summary\nWe were able to achieve our performance goal of\n150MHz post-route performance at 0.8V. Our simple\nSoC can be divided into two power islands; USB at 1.2V,\nmemory and Xtensa at 0.8V. This voltage reduction on\nthe Xtensa power island netted a 53% power reduction\nwith the Mobilize IP. The level shifters and voltage\nisolation gates allowed us to easily create power islands in\norder to realize this dynamic power reduction in our SoC.\nMulti voltage designs using power islands created with\nMolbilize IP can be implemented.\n\n3\nProceedings of the Design, Automation and Test in Europe Conference and Exhibition (DATE'05)\n1530-1591/05 $ 20.00 IEEE\n\n\f7.0 Static (leakage) power reduction\n\n8.0 Gate Bias, what is it?\n\nPower reduction techniques such as voltage scaling and\nclock gating will work well for dynamic power, but not\nfor leakage power. Leakage power for 130nm and 90nm\nis approaching that of dynamic power. This section will\ndeal with incorporating static (leakage power) reduction\nin addition to dynamic power reduction\n\nVirtual Silicon has developed a standard cell library that\nputs an NMOS sleep transistor into the path to ground\nwith SLPB as the sleep gate bias. The concept of sleep\ndevices, both PMOS and NMOS, has been around for\nsome time. What makes this library unique is that a sleep\ndevice is in every library cell and the sleep gate is driven\nto a negative voltage. Figure 8 shows how these devices\nare connected in two different cells.\n\n7.1 Device leakage mechanisms\nTo minimize leakage power it important to understand\nthe leakage sources in a device. Figure 7 is a diagram of\nthose leakages.\nGate I3 I 4\n\nA\n\nA1\n\nZ\n\nZ\n\nA2\n\nSLPB\n\nSLPB\n\nSource\n\nDrain\nNMOS device driven\nto VSS -0.3V\n\nn+\n\nI2\n\nFigure 8: Inverter and NAND Gate with Sleep Device\n\nI1\n\nI5\np-substrate\n\nFigure 7: Leakage Mechanisms\nI1 is the reverse bias junction leakage from the drain to\nthe substrate. This leakage is about two to three orders of\nmagnitude less than the other leakage mechanisms. I2 is\nsub-threshold leakage. This is the leakage when the gate\nto source voltage is zero volts. For 130nm and 90nm this\nis the major source of leakage power. I3 is leakage\nthrough the gate oxide to the substrate, source and drain\nof the device. For 130nm and 90nm the gate oxide is only\nseveral atoms thick. At 90nm this leakage is two orders of\nmagnitude less than gate leakage. I4 hot-carrier injection\nand I5 off state leakage are both minor sources of leakage.\nShown in Table 1 is how the different device leakage\nmechanisms change with process.\n180n\nm\nminor\n\n130nm\n\n90nm\n\nI1 = reverse\nminor\nminor\nbias junction\nI2 = subminor major\nmajor+\nthreshold\nI3 = gate oxide\nminor relevant\nsignificant\ntunneling\nI4 = hot-carrier minor minor\nminor\ninjection\nI5 = off state\nminor minor\nminor\nleakage\nTable 1: Leakage vs. Process\n\nThe sleep device is a regular threshold device and not a\nhigh threshold device. Because this library is built on a\nstandard process more IP is available and the wafer costs\nare less than for a low power process.\nPlacing the sleep device in every cell has a number of\nbenefits. It is easy to sleep small sections of logic for\nexample, an ALU. The sleep signal may be turned on be\nan already existing global clock gating signal. By using a\nclock gating signal, not only does clock stop to reduce\ndynamic power, but also the logic is put sleep to reduce\nstatic power. Also, as compared to one large sleep device\nthe sizing and placement of the sleep device is done for\nyou. The Gate Bias technology allows the creation of data\nretention flip-flops for fast save and restore operation.\nThere is only a minor impact on speed because the sleep\ndevice is NMOS.\nFigure 9 shows the leakage reduction obtained by driving\nthe NMOS gate voltage negative.\n90nm FF 125C\n1.00E-05\n.5\n-0\n\n.4\n-0\n\n.3\n-0\n\n.2\n-0\n\n.1\n-0\n\n0\n0.\n\n1\n0.\n\n1.00E-06\nDrain Current\n\nn+\n\n1.00E-07\n\n1.00E-08\n\n1.00E-09\nGate Voltage\n\nFigure 9: NMOS Leakage Current vs. Gate Voltage\n\n4\nProceedings of the Design, Automation and Test in Europe Conference and Exhibition (DATE'05)\n1530-1591/05 $ 20.00 IEEE\n\n\fAt zero volts on the gate, the leakage current is about\n0.5\u03bcA. At a sleep voltage of -0.3V, the leakage current is\nreduced by 260x (to about 2nA). The sub-threshold\nleakage, which is the dominant leakage, is effectively\nlowered by this technique.\n\nSince there is no RTL construct for sleep, the sleep\nfunctionality can only be simulated at the gate level. A\nscript was used to add the sleep pin to the netlist. The\nsimulator uses gate level primitives which has the sleep\nfunctionality in it.\n\n8.1 Example design\n\n9.1 Synthesis\n\nFigure 10 shows an example of small SoC with CPU,\nmemory and a logic block. In Figure 10, LS stand for\nlevel shifter and ISO stands for isolation gate. For\npurposes of this discussion we will optimize the logic\nblock for minimum leakage using the Gate Bias library.\nThe minimum frequency requirement for the logic block\nis 200MHz.\n\nThe 200MHz minimum frequency requirement for the\nlogic module could only be met at 1.2V supply.\n\nC lo c k\nG e n e r a to r\n\nCPU\nLS\n\nIS O /L S\n\n10.0 Managing static power\nNow that we have a design with the sleep device in it,\nwe need to generate the negative voltage for sleep and\ncontrol the isolation gates. The Virtual Silicon Power\nIsland Manager is IP that generates the negative voltage\nfor sleep, controls going in and out of sleep, isolation\ngates, and data retention flip-flops. The Power Island\nManager can be controlled by the CPU with write and\nread commands. Figure 12 shows the Power Island\nManager connected in the design.\n\nLS\n\nL o g ic\n\nM e m o ry\n\n( P o w e r Is la n d 1 )\n\n1.2V\n\n( P o w e r Is la n d 0 )\n\n1.2V\n\nFigure 10: Example SoC\n\nClock\nGenerator\n\nCPU\n\n9.0 Design Flow\n1.2V\n\nRTL coding should keep all modules of an island in one\nhierarchy. Level shifters and isolation gates should also\nbe instantiated at the top level of the module.\nSynthesis (DC) does not understand sleep functionality.\nIn order for synthesis to use this library the sleep\nfunctionality must first be removed from the library. The\nVirtual Silicon library provides a .libsyn and .dbsyn files\nwithout the sleep functionality. As shown in Figure 11,\n.dbsyn is used by DC to create a netlist without sleep. A\nscript is used to add the sleep pin to the netlist after\nsynthesis\nPartition Design\ninto Power Islands\n\nScript\nto add sleep and data\nretention pins to DEF and\nVerilog netlist\n\nRTL Coding\ninstantiate: level shifters\nisolation gates\n\nPlace & Route\nlibsyn\n\nincremental route of sleep\nand data retention pins\nSoC Encounter\n\nSimulation\n\nRTL Compiler\n\nMerge Modules together\n\nStatic Timing\n\nlib\n\nSynthesis\n\nlef\n\nNC-Verilog\n\nPlace & Route\nlefsyn\n\noptimization, DRC fixes\nSoC Encounter\n\nPower Island\nManager\n1.2V 0.8V\n1.2V\n\nISO\n\nLogic\n(Power Island 1)\n\nLS\n\nMemory\n(Power Island 0)\n\nFigure 12: Example SoC with Power Management\nTo put the logic to sleep the CPU writes to the sleep bit\nin the Power Island Manager. The Power Island Manager\nhas a state machine that controls the isolation signal, sleep\nsignal, and data retention signal. The state machine\nensures the timing of these signals to give proper\noperation to the design. To come out of the sleep state the\nCPU writes the sleep bit. A status bit in the Power Island\nManager can be read by the CPU to know when the logic\nis out of the sleep state and ready to resume operation.\nTimes enter or leave sleep are approximately 60ns.\nAlthough the CPU could also be put to sleep,\npresentation on this topic is beyond the scope of this\npaper.\n\nFigure 11: Gate Bias Design Flow\n\n10.1 Static power reduction\n\n5\nProceedings of the Design, Automation and Test in Europe Conference and Exhibition (DATE'05)\n1530-1591/05 $ 20.00 IEEE\n\n\fNand Gate TT model 125C vs Measured\n1.00E-07\n-0.4\n\n-0.35\n\n-0.3\n\n-0.25\n\n-0.2\n\n-0.15\n\n-0.1\n\n-0.05\n\n0\n\n1.2\n\n1.00E-08\n\nLeakage\n\nThe logic block contains 108,000 gates and needs a\nPower Island Manager to bring it in and out of sleep. For\nthe 'G' process, 108,000 typically consume 208\u03bcW. With\nthe Gate Bias library the typical power for the 108,000\ngates and the Power Island Manager is 4.9\u03bcW. Figure 13\nshows the power comparison for 'G' and Gate Bias\nlibrary. While in sleep, the Gate Bias technology saves\n97.6% of the static power.\n\n1.00E-09\n\n1.00E-10\n\n1.00E-11\n\nSleep Voltage\n\nNand Model\n\nStatic Power Comparison\n\nNand Measured\n\nFigure 15 Model vs. Measured 125oC\n250\n\nAt 125oC, the model predicts a leakage reduction of\n197x and the measure result gives a leakage reduction of\n326x.\nThe on-chip negative bias generator was proven to\nfunction as designed.\nGate Bias technology was added to SRAM to reduce\nleakage and retain data. A sleep and data retention signals\nwere applied to the test chip SRAM. The data was\nretained down to 0.3V VDD supply. The leakage reduction\nat 125oC is shown in Figure 16.\n\nmicroWatts\n\n200\n150\ntypical\n100\n50\n0\nGate Bias\n\n'G'\n\nFigure 13 Static Power Comparison\n\n10. 2 Static power reduction summary\nWe have shown a 97.6% static power reduction using\nthe Gate Bias library and Power Management IP.\n\nA Gate Bias test chip containing the standard cells,\nmemory and I/O has been fabricated and evaluated.\nThe standard cells got even better leakage reduction than\npredicted by the Spice models. Results for the two input\nNan gate are shown in Figures 14 and 15.\n\nLeakage Current (uA)\n\n11.0 Test chip results\n\nSRAM Leakage\n1000.0\n\n100.0\n\n10.0\n-0.4\n\n0.0\n\n1.2\n\nSleep Voltage\nMeasured\n\nNand Gate TT Model vs Measured 25C\n\nModel\n\nFigure 16 SRAM Leakage Reduction\n\n1.00E-08\nLeakage Current\n\n-0.3\n\n-0.4 -0.35 -0.3 -0.25 -0.2 -0.15 -0.1 -0.05\n\n0\n\n1.2\n\n1.00E-09\n\nAt 125oC, the model predicts a leakage reduction of 8.1x\nand the measure result gives a leakage reduction of 10.0x.\nThe leakage current was reduced from 719\u03bcA to 71.5\u03bcA.\nBased on test chip results, an SRAM design has been\ndone which will reduce the leakage from 20x to 65x\ndepending on the SRAM size and configuration.\n\n1.00E-10\n1.00E-11\n1.00E-12\nSleep Voltage\nNand Model\n\nNand Measured\n\n12.0 Summary\n\nFigure 14 Model vs. Measured 25oC\nAt 25oC, the model predicts a leakage reduction of 33.9x\nand the measure result gives a leakage reduction of 78.6x.\n\nWe have demonstrated how dynamic power has been cut\nby 53% by running the Xtensa processor at 0.8V, while\nstill meeting performance goals using the Virtual Silicon\nMobilize power management IP. Static power has been\ndramatically reduced by 97% using the Gate Bias library\nand Power Management IP.\n\n6\nProceedings of the Design, Automation and Test in Europe Conference and Exhibition (DATE'05)\n1530-1591/05 $ 20.00 IEEE\n\n\fThe Gate Bias technology has been validated by test chip\nresults to get better than the predicted leakage reduction.\n\n13.0 References\n1. Each configuration of the extensible, configurable\nXtensa processor is created by the Xtensa Processor\nGenerator from a unique designer-defined specification of\nboth predefined configuration options and designerdefined instruction extensions. The generator can create a\nwide range of processor cores, including small task\nengines, high performance DSPs, media processors and\nnetwork processors all sharing the common base Xtensa\ninstruction set architecture. The configuration used in this\npaper has the minimum set of configuration options and\nincludes only the base ISA elements without custom\ninstruction extensions. The power minimization\ntechniques discussed can be applied equally to any Xtensa\nprocessor configuration.\n2. Peters, E., Taglieri, G., & Vemury, L. (2000). Low\nPower Synthesis Flow For a Configurable Core. Boston:\nSNUG.\n3.\nInternational\nTechnology\nRoadmap\nfor\nSemiconductors, System Drivers. (2001). (p. 17).\n\n7\nProceedings of the Design, Automation and Test in Europe Conference and Exhibition (DATE'05)\n1530-1591/05 $ 20.00 IEEE\n\n\f"}