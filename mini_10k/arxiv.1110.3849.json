{"id": "http://arxiv.org/abs/1110.3849v1", "guidislink": true, "updated": "2011-10-17T23:25:32Z", "updated_parsed": [2011, 10, 17, 23, 25, 32, 0, 290, 0], "published": "2011-10-17T23:25:32Z", "published_parsed": [2011, 10, 17, 23, 25, 32, 0, 290, 0], "title": "An evaluation approach to computing invariants rings of permutation\n  groups", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1110.3929%2C1110.3881%2C1110.5282%2C1110.2160%2C1110.6679%2C1110.4067%2C1110.5374%2C1110.2658%2C1110.2248%2C1110.6807%2C1110.0889%2C1110.6793%2C1110.0743%2C1110.1180%2C1110.2051%2C1110.5489%2C1110.0395%2C1110.6317%2C1110.0317%2C1110.1559%2C1110.1496%2C1110.5338%2C1110.4359%2C1110.0064%2C1110.5531%2C1110.0497%2C1110.4894%2C1110.2600%2C1110.3785%2C1110.4372%2C1110.4970%2C1110.2691%2C1110.2724%2C1110.2360%2C1110.3517%2C1110.5277%2C1110.5018%2C1110.0112%2C1110.4458%2C1110.2876%2C1110.1729%2C1110.3055%2C1110.1042%2C1110.1945%2C1110.6068%2C1110.4108%2C1110.6796%2C1110.1278%2C1110.0040%2C1110.0121%2C1110.6868%2C1110.6690%2C1110.0339%2C1110.1634%2C1110.6398%2C1110.5509%2C1110.1963%2C1110.1560%2C1110.6416%2C1110.4972%2C1110.3433%2C1110.3140%2C1110.0588%2C1110.4633%2C1110.4511%2C1110.4391%2C1110.3422%2C1110.2729%2C1110.5067%2C1110.6269%2C1110.4692%2C1110.6091%2C1110.4311%2C1110.2143%2C1110.3870%2C1110.0617%2C1110.2905%2C1110.5597%2C1110.0938%2C1110.0024%2C1110.0696%2C1110.2229%2C1110.6885%2C1110.5252%2C1110.4484%2C1110.3143%2C1110.6571%2C1110.1229%2C1110.3475%2C1110.3849%2C1110.6289%2C1110.6558%2C1110.4807%2C1110.5645%2C1110.1787%2C1110.1715%2C1110.4077%2C1110.0254%2C1110.5747%2C1110.1240%2C1110.3241&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "An evaluation approach to computing invariants rings of permutation\n  groups"}, "summary": "Using evaluation at appropriately chosen points, we propose a Gr\\\"obner basis\nfree approach for calculating the secondary invariants of a finite permutation\ngroup. This approach allows for exploiting the symmetries to confine the\ncalculations into a smaller quotient space, which gives a tighter control on\nthe algorithmic complexity, especially for large groups. This is confirmed by\nextensive benchmarks using a Sage implementation.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1110.3929%2C1110.3881%2C1110.5282%2C1110.2160%2C1110.6679%2C1110.4067%2C1110.5374%2C1110.2658%2C1110.2248%2C1110.6807%2C1110.0889%2C1110.6793%2C1110.0743%2C1110.1180%2C1110.2051%2C1110.5489%2C1110.0395%2C1110.6317%2C1110.0317%2C1110.1559%2C1110.1496%2C1110.5338%2C1110.4359%2C1110.0064%2C1110.5531%2C1110.0497%2C1110.4894%2C1110.2600%2C1110.3785%2C1110.4372%2C1110.4970%2C1110.2691%2C1110.2724%2C1110.2360%2C1110.3517%2C1110.5277%2C1110.5018%2C1110.0112%2C1110.4458%2C1110.2876%2C1110.1729%2C1110.3055%2C1110.1042%2C1110.1945%2C1110.6068%2C1110.4108%2C1110.6796%2C1110.1278%2C1110.0040%2C1110.0121%2C1110.6868%2C1110.6690%2C1110.0339%2C1110.1634%2C1110.6398%2C1110.5509%2C1110.1963%2C1110.1560%2C1110.6416%2C1110.4972%2C1110.3433%2C1110.3140%2C1110.0588%2C1110.4633%2C1110.4511%2C1110.4391%2C1110.3422%2C1110.2729%2C1110.5067%2C1110.6269%2C1110.4692%2C1110.6091%2C1110.4311%2C1110.2143%2C1110.3870%2C1110.0617%2C1110.2905%2C1110.5597%2C1110.0938%2C1110.0024%2C1110.0696%2C1110.2229%2C1110.6885%2C1110.5252%2C1110.4484%2C1110.3143%2C1110.6571%2C1110.1229%2C1110.3475%2C1110.3849%2C1110.6289%2C1110.6558%2C1110.4807%2C1110.5645%2C1110.1787%2C1110.1715%2C1110.4077%2C1110.0254%2C1110.5747%2C1110.1240%2C1110.3241&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Using evaluation at appropriately chosen points, we propose a Gr\\\"obner basis\nfree approach for calculating the secondary invariants of a finite permutation\ngroup. This approach allows for exploiting the symmetries to confine the\ncalculations into a smaller quotient space, which gives a tighter control on\nthe algorithmic complexity, especially for large groups. This is confirmed by\nextensive benchmarks using a Sage implementation."}, "authors": ["Nicolas Borie", "Nicolas M. Thi\u00e9ry"], "author_detail": {"name": "Nicolas M. Thi\u00e9ry"}, "author": "Nicolas M. Thi\u00e9ry", "arxiv_comment": "18 pages, 4 figures, In Proceedings of MEGA 2011, March 2011", "links": [{"href": "http://arxiv.org/abs/1110.3849v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1110.3849v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "math.CO", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "math.CO", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1110.3849v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1110.3849v1", "journal_reference": null, "doi": null, "fulltext": "2\n\nAN EVALUATION APPROACH TO COMPUTING\nINVARIANTS RINGS OF PERMUTATION GROUPS\n\n3\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\narXiv:1110.3849v1 [math.CO] 17 Oct 2011\n\n1\n\nAbstract. Using evaluation at appropriately chosen points, we propose a\nGr\u00f6bner basis free approach for calculating the secondary invariants of a finite\npermutation group. This approach allows for exploiting the symmetries to\nconfine the calculations into a smaller quotient space, which gives a tighter\ncontrol on the algorithmic complexity, especially for large groups. This is\nconfirmed by extensive benchmarks using a Sage implementation.\n\n4\n\n1. Introduction\n\n5\n\nInvariant theory has been a rich and central area of algebra ever since the eighteenth theory, with practical applications [DK02, \u00a7 5] in the resolution of polynomial systems with symmetries (see e.g. [Col97a], [Gat90], [Stu93, \u00a7 2.6], [FR09]),\nin effective Galois theory (see e.g. [Col97b], [Abd00], [GK00]), or in discrete mathematics (see e.g. [Thi00, PT01] for the original motivation of the second author).\nThe literature contains deep and explicit results for special classes of groups, like\ncomplex reflection groups or the classical reductive groups, as well as general results applicable to any group. Given the level of generality, one cannot hope for\nsuch results to be simultaneously explicit and tight in general. Thus the subject was effective early on: given a group, one wants to calculate the properties\nof its invariant ring. Under the impulsion of modern computer algebra, computational methods, and their implementations, have largely expanded in the last twenty\nyears [Kem93, Stu93, Thi01, DK02, Kin07b, Kin07a]. However much progress is\nstill needed to go beyond toy examples and enlarge the spectrum of applications.\nAn important obstruction is that the algorithms depend largely on efficient computations in certain quotients of the invariant ring; this is usually carried out using\nelimination techniques (Gr\u00f6bner or SAGBI-Gr\u00f6bner bases), but those do not behave well with respect to symmetries. An emerging trend is the alternative use\nof evaluation techniques, for example to rewrite invariants in terms of an existing\ngenerating set of the invariant ring [GST06, DSW09].\nIn this paper, and as a test bed, we focus on the problem of computing\nsecondary invariants of finite permutation groups in the non modular\ncase, using evaluation techniques.\nIn Section 2, we review some relevant aspects of computational invariant theory, and in particular discuss the current limitations due to quotient computations.\nIn Section 3, we give a new theoretical characterization of secondary invariants in\nterm of their evaluations on as many appropriately chosen points; this is achieved\nby perturbating slightly the quotient, and using the grading to transfer back results.\nIn Section 4, we derive an algorithm for computing secondary invariants of permutation groups. We establish in Section 5 a worst case complexity bound for this\n\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n28\n29\n30\n31\n32\n33\n34\n\n1\n\n\f2\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\n48\n\nalgorithm. This bound suggests that, for a large enough group G, at least a factor\nof |G| is gained. This comparison remains however sloppy since, to the best of our\nknowledge and due to the usual lack of fine control on the complexity of Gr\u00f6bner\nbases methods, no meaningful bound exists in the literature for the elimination\nbased algorithms. Therefore, in Section 6 we complement this theoretical analysis\nwith extensive benchmarks comparing in particular our implementation in Sage\nand the elimination-based implementation in Singular's [GPS98, Kin07b]. Those\nbenchmarks suggest a practical complexity which, for large enough groups, is cubic\nin the size n!/|G| of the output. And indeed, if the evaluation-based implementation can be order of magnitudes slower for some small groups, it treats predictably\nlarge groups which are completely out of reach for the elimination-based implementation. This includes an example with n = 14, |G| = 50, 803, 200, and 1716\nsecondary invariants.\nWe conclude, in Section 7, with a discussion of avenues for further improvements.\n\n49\n\n2. Preliminaries\n\n50\n\nWe refer to [Sta79, Stu93, CLO97, Smi97, Kem98, DK02] for classical literature\non invariant theory of finite groups. Parts of what follows are strongly inspired\nby [Kem98]. Let V be a K-vector space of finite dimension n, and G be a finite\nsubgroup of GL(V ). Tacitly, we interpret G as a group of n \u00d7 n matrices or as a\nrepresentation on V . Two vectors v and w are isomorphic, or in the same G-orbit\n(for short orbit), if \u03c3 * v = w for some \u03c3 \u2208 G.\nLet x := (x1 , . . . , xn ) be a basis of the dual of V , and let K[x] be the ring of\npolynomials over V . The action of G on V extends naturally to an action of G on\nK[x] by \u03c3 * p := p \u25e6 \u03c3 \u22121 . An invariant polynomial, or invariant, is a polynomial\np \u2208 K[x1 , . . . , xn ] such that \u03c3 * p = p for all \u03c3 \u2208 G. The invariant ring K[x]G is the\nset of all invariants. Since the action of G preserves the\nit is\nL degree of polynomials,\nG\na graded connected commutative algebra: K[x]G = d\u22650 K[x]G\n,\nwith\nK[x]\n\u2248\nK.\n0\nd\nL\nG\n=\nWe write K[x]G\nK[x]\nfor\nthe\npositive\npart\nof\nthe\ninvariant\nring.\nThe\n+\nd\nd>0\nHilbert series of K[x]G is the generating series of its dimensions:\n\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n\n51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n\nH(K[x]G , z) :=\n\n\u221e\nX\n\nz d dim K[x]G\nd .\n\nd=0\n64\n\nIt can be calculated using Molien's formula:\n1\n1 X\n.\nH(K[x]G , z) =\n|G|\ndet(Id \u2212zM )\nM \u2208G\n\n65\n66\n67\n68\n\nThis formula reduces to P\u00f3lya enumeration for permutation groups. Furthermore,\nthe summation can be taken instead over conjugacy classes of G, which is relatively\ncheap in practice.\nA crucial device is the Reynolds operator:\nR : K[x] \u2212\u2192\np\n7\u2212\u2192\n\n69\n70\n71\n\nG\nK[x]P\n1\n|G|\n\ng\u2208G\n\ng.p ,\n\nwhich is both a graded projection onto K[x]G and a morphism of K[x]G -module.\nNote that its definition requires char K not to divide |G|, which we assume from\nnow on (non-modular case).\n\n\fAN EVALUATION APPROACH TO COMPUTING INVARIANTS RINGS\n\n72\n73\n74\n75\n76\n77\n78\n79\n80\n81\n82\n83\n84\n85\n86\n87\n88\n89\n90\n91\n92\n93\n94\n95\n96\n97\n98\n99\n100\n101\n102\n103\n104\n105\n\n3\n\nHilbert's fundamental theorem of invariant theory states that K[x]G is finitely\ngenerated: there exists a finite set S of invariants such that any invariant can be\nexpressed as a polynomial combination of invariants in S. We call S a generating set.\nIf no proper subset of S is generating, S is a minimal generating set. Since K[x]G\nis finitely generated, there exists a degree bound d such that K[x]G is generated by\nthe set of all invariants of degree at most d. We denote by \u03b2(K[x]G ) the smallest\ndegree bound. Noether proved that \u03b2(K[x]G ) \u2264 |G|.\nThanks to the grading, for M a set of homogeneous invariants, the following\nproperties are equivalent:\n(i) M is a minimal generating set for K[x]G ;\n2\n(ii) M is a basis of the quotient K[x]G /K[x]G\n+ .\nTherefore, even though the generators in M are non canonical, the number of\ngenerators of a given degree d in M is: it is given by the dimension of the component\n2\nof that degree in the graded quotient K[x]G /K[x]G\n+ . There is no known algorithm\nto compute those dimensions, or even just \u03b2(K[x]G ), without computing explicitly\na minimal generating set.\nThe previous properties give immediately a naive algorithm for computing an\nhomogeneous minimal generating set, calculating degree by degree in the finite\ndimensional quotient up to Noether's bound. There are however two practical\nissues. The first one is that Noether's bound is tight only for cyclic groups; in\ngeneral it is very dull, possibly by orders of magnitude. The second issue is how to\ncompute efficiently in the given quotient. We will get back to it.\nBy a celebrated result of Shepard, Todd, Chevalley, and Serre, K[x]G is a polynomial algebra if and only if G is a complex reflection group. In all other cases,\nthere are non trivial relations (also called syzygies) between the generators; however K[x]G remains Cohen-Macaulay. Namely, a set of m homogeneous invariants\n(\u03b81 , . . . , \u03b8n ) of K[x]G is called a homogeneous system of parameters or, for short, a\nsystem of parameters if the invariant ring K[x]G is finitely generated over its subring\nK[\u03b81 , . . . , \u03b8n ]. That is, if there exist a finite number of invariants (\u03b71 , . . . , \u03b7t ) such\nthat the invariant ring is the sum of the subspaces \u03b7i .K[\u03b81 , . . . , \u03b8n ]. By Noether's\nnormalization lemma, there always exists a system of parameters for K[x]G . Moreover, K[x]G is Cohen-Macaulay, which means that K[x]G is a free-module over any\nsystem of parameters. Hence, if the set (\u03b71 , . . . , \u03b7t ) is minimal for inclusion, K[x]G\ndecomposes into a direct sum:\nK[x]G =\n\nt\nM\n\n\u03b7i .K[\u03b81 , . . . , \u03b8n ].\n\ni=1\n106\n107\n108\n109\n110\n111\n112\n113\n114\n115\n\nThis decomposition is called a Hironaka decomposition of the invariant ring. The\n\u03b8i are called primary invariants, and the \u03b7i secondary invariants (in algebraic combinatorics literature, the \u03b8i are some times called quasi-generators and the \u03b7i separators [GS84]). It should be emphasized that primary and secondary invariants are\nnot uniquely determined, and that being a primary or secondary invariant is not an\nintrinsic property of an invariant p, but rather express the role of p in a particular\ngenerating set.\nThe primary and secondary invariants together form a generating set, usually\nnon minimal. From the degrees (d1 , . . . , dn ) of the primary invariants (\u03b81 , . . . , \u03b8n )\nand the Hilbert series we can compute the number t and the degrees (d01 , . . . , d0t ) of\n\n\f4\n\n116\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\nthe secondary invariants (\u03b71 , . . . , \u03b7t ) by the formula:\n0\n\n0\n\nz d1 + * * * + z dt = (1 \u2212 z d1 ) * * * (1 \u2212 z dn )H(K[x]G , z) .\n117\n118\n\nWe denote this polynomial by S(K[x]G , z). Assuming d1 \u2264 * * * \u2264 dn and d01 \u2264 * * * \u2264\nd0t , it can be proved that:\nt=\n\n119\n120\n\n121\n122\n123\n124\n125\n126\n127\n128\n129\n130\n131\n132\n133\n134\n135\n136\n137\n138\n139\n140\n141\n142\n143\n144\n145\n146\n147\n148\n149\n\nd1 * * * dn\n,\n|G|\n\nd0t = d1 + * * * + dn \u2212 n \u2212 \u03bc ,\n\n\u03b2(K[x]G ) \u2264 max(dn , d0t ) ,\n\nwhere \u03bc is the smallest degree of a polynomial p such that \u03c3 * p = det(\u03c3)p for all\n\u03c3 \u2208 G [Sta79, Proposition 3.8].\nFor example, if G is the symmetric group Sn , the n elementary symmetric polynomials (or the n first symmetric power sums) form a system of parameters, t = 1,\nd0t = 0 and \u03b71 = 1. This is consistent with the fundamental theorem of symmetric\npolynomials. More generally, if G is a permutation group, the elementary symmetric polynomials still form a system of parameters: K[x]G is a free module over the\nalgebra Sym(x) = K[x]Sn of symmetric polynomials. It follows that:\n\u0012 \u0013\n\u0012 \u0013\nn\nn\nn!\n0\nG\n,\ndt =\n\u2212 \u03bc,\n\u03b2(K[x] ) \u2264\n.\nt=\n|G|\n2\n2\nFor a review of algorithms to compute primary invariants with minimal degrees,\nsee [DK02]. They use Gr\u00f6bner bases, exploiting the property that a set \u03981 , . . . , \u0398n\nof n homogeneous invariants forms a system of parameters if and only if x = 0\nis the single solution of the system of equations \u03981 (x) = * * * = \u0398n (x) = 0 (see\ne.g. [DK02, Proposition 3.3.1]).\nWe focus here on the second step: we assume that primary invariants \u03981 , . . . , \u0398n\nare given as input, and want to compute secondary invariants. This is usually\nachieved by using the following proposition to reduce the problem to linear algebra.\nProposition 2.1. Let \u03981 , . . . , \u0398n be primary invariants and S := (\u03b71 , . . . , \u03b7t ) be a\nfamily of homogeneous invariants with the appropriate degrees. Then, the following\nare equivalent:\n(i) S is a family of secondary invariants;\n(ii) S is a basis of the quotient K[x]G /h\u03981 , . . . , \u0398n iK[x]G ;\n(iii) S is free in the quotient K[x]/h\u03981 , . . . , \u0398n iK[x] .\nThe central problem is how to compute efficiently inside one of the quotients\nK[x]/h\u03981 , . . . , \u0398n iK[x] or K[x]G /h\u03981 , . . . , \u0398n iK[x]G . Most algorithms rely on (iii)\nusing normal form reductions w.r.t. the Gr\u00f6bner basis for \u03981 , . . . , \u0398n which was\ncalculated in the first step to prove that they form a system of parameters. The\ndrawback is that Gr\u00f6bner basis and normal form calculations do not preserve symmetries; hence they cannot be used to confine the calculations into a small subspace\nof K[x]/h\u03981 , . . . , \u0398n iK[x] . Besides, even the Gr\u00f6bner basis calculation itself can be\nintractable for moderate size input (n = 8) in part due to the large multiplicity\n(d1 * * * dn ) of the unique root x = 0 of this system.\nAn other approach is to use (ii). Then, in many cases, one can make use of the\nsymmetries to get a compact representation of invariant polynomials. For example,\nif G is a permutation group, an invariant can be represented as a linear combination\nof orbitsums instead of a linear combination of monomials, saving a factor of up to\n|G| (see e.g. [Thi01]). Furthermore, one can use SAGBI-Gr\u00f6bner bases (an analogue\nof Gr\u00f6bner basis for ideals in subalgebras of polynomial rings) to compute in the\n\n\fAN EVALUATION APPROACH TO COMPUTING INVARIANTS RINGS\n\n150\n151\n152\n153\n154\n155\n\n5\n\nquotient (see [Thi01, FR09]). However SAGBI and SAGBI-Gr\u00f6bner basis tend to\nbe large (in fact, they are seldom finite, see [TT04]), even when truncated.\nIn both cases, it is hard to derive a meaningful bound on the complexity of\nthe algorithm, by lack of control on the behavior of the (SAGBI)-Gr\u00f6bner basis calculation. In the following section, we propose to calculate in the quotient\nK[x]G /h\u03981 , . . . , \u0398n iK[x]G using instead evaluation techniques.\n\n156\n\n3. Quotienting by evaluation\n\n157\n\nRecall that, in the good cases, an efficient mean to compute modulo an ideal is\nto use evaluation on its roots.\n\n158\n159\n160\n161\n162\n\n163\n164\n165\n166\n167\n168\n169\n170\n171\n172\n173\n174\n175\n176\n177\n178\n179\n180\n181\n182\n183\n184\n185\n\nProposition 3.1. Let P be a system of polynomials in K[x] admitting a finite\nset \u03c11 , . . . , \u03c1r of multiplicity-free roots, and let I be the dimension 0 ideal they\ngenerate. Endow further Kr with the pointwise (Hadamard) product. Then, the\nevaluation map:\n\u03a6 : K[x] \u2212\u2192 Kr\np\n7\u2212\u2192 (p(\u03c11 ), . . . , p(\u03c1r ))\ninduces an isomorphism of algebra from K[x]/I. In particular, K[x]/I is a semisimple basic algebra, a basis of which is given by the r idempotents (pi )i=1,...,r which\nsatisfy pi (\u03c1j ) = \u03b4i,j ; those idempotents can be constructed by multivariate Lagrange\ninterpolation, or using the Buchberger-M\u00f6ller algorithm [MB82].\nThis proposition does not apply directly to the ideal h\u03981 , . . . , \u0398n i because it has\na single root with a very high multiplicity d1 . . . dn . The central idea of this paper is\nto blowup this single root by considering instead the ideal h\u03981 , . . . , \u0398n\u22121 , \u0398n \u2212 \u000fi,\nwhere \u000f is a non zero constant, and then to show that the grading can be used\nto transfer back the result to the original ideal, modulo minor complications. This\napproach is a priori general: assuming the field is large enough, the ideal \u03981 , . . . , \u0398n\ncan always be slightly perturbed to admit d1 * * * dn multiplicity-free roots; those\nroots are obviously stable under the action of G, and can be grouped into orbits.\nYet it can be non trivial to compute and describe those roots.\nFor the sake of simplicity of exposition, we assume from now on that G is a permutation group, that \u03981 , . . . , \u0398n are the elementary symmetric functions e1 , . . . , en ,\nand that \u000f = (\u22121)n+1 . Finally we assume that the ground field K contains the n-th\nroots of unity; this last assumption is reasonable as, roughly speaking, the invariant\ntheory of a group depends only on the characteristic of K. With those assumptions,\nthe roots \u03c1i take a particularly nice and elementary form, and open connections\nwith well know combinatorics. Yet we believe that this case covers a wide enough\nrange of groups (and applications) to contain all germs of generality. In particular,\nthe results presented here should apply mutatis mutandis to any subgroup G of a\ncomplex reflection group.\n\n187\n\nRemark 3.2. Let \u03c1 be a n-th primitive root of unity, and set \u03c1 := (1, \u03c1, . . . , \u03c1n\u22121 ).\nThen, e1 (\u03c1) = * * * = en\u22121 (\u03c1) = 0 and en (\u03c1) = \u000f.\n\n188\n\nProof. Up to sign, ei (\u03c1) is the i-th coefficient of the polynomial\n\n186\n\n(X n \u2212 1) =\n\nn\u22121\nY\n\n(X \u2212 \u03c1i ) .\n\ni=0\n\n\u0003\n\n\f6\n\n189\n190\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\nFor \u03c3 \u2208 Sn , write \u03c1\u03c3 := \u03c3 * \u03c1 the permuted vector. It follows from the previous\nremark that the orbit (\u03c1\u03c3 )\u03c3\u2208Sn of \u03c1 gives all the roots of the system\ne1 (x) = * * * = en\u22121 (x) = en (x) \u2212 \u000f = 0 .\n\n202\n\nLet I be the ideal generated by e1 , . . . , en\u22121 , en \u2212 \u000f in K[x], that is the ideal of\nsymmetric relations among the roots of the polynomial X n \u2212 1; it is well known\nthat the quotient K[x]/I is of dimension n!. We define the evaluation map \u03a6 : p \u2208\nK[x] 7\u2192 (p(\u03c1\u03c3 ))\u03c3 as in Proposition 3.1 to realize the isomorphism from K[x]/I to\nE = KSn .\nObviously, the evaluation of an invariant polynomial p is constant along G-orbits.\nThis simple remark is the key for confining the quotient computation into a small\nsubspace of dimension n!/|G|, which is precisely the number of secondary invariants.\nLet E G be the subalgebra of the functions in E which are constant along G-orbits.\nObviously, E G is isomorphic to KL where L is any transversal of the right cosets\nin Sn /G. Let I G be the ideal generated by (e1 , . . . , en\u22121 , en \u2212 \u000f) in K[x]G ; as the\nnotation suggests, it is the subspace of invariant polynomials in I.\n\n203\n\nRemark 3.3. The restriction of \u03a6 on K[x]G , given by:\n\n191\n192\n193\n194\n195\n196\n197\n198\n199\n200\n201\n\n\u03a6 : K[x]G\np\n204\n205\n\n\u2212\u2192 E G\n7\u2212\u2192 (p(\u03c1\u03c3 ))\u03c3\u2208L\n\nis surjective and induces an algebra isomorphism between K[x]G /I G and E G .\nProof. For each evaluation point \u03c1\u03c3 , \u03c3 \u2208 L, set\nX\np\u03c1\u03c3 :=\np\u03c1\u03c4 ,\n\u03c4 \u2208\u03c3G\n\n206\n207\n208\n209\n210\n211\n212\n213\n214\n215\n216\n\nwhere p\u03c1\u03c4 is the Lagrange interpolator of Proposition 3.1. Then, their images\n(\u03a6(p\u03c1\u03c3 ))\u03c3\u2208L are orthogonal idempotents and, by dimension count, form a basis of\nE G.\n\u0003\nFrom now on, we call evaluation points the family (\u03c1\u03c3 )\u03c3\u2208L .\nWe proceed by showing that the grading can be used to compute modulo the\noriginal ideal he1 , . . . , en i, modulo minor complications.\nLemma 3.4. Let G be a subgroup of Sn and K be a field of characteristic 0 containing a primitive n-th root of unity. Let S be a set of secondary invariants w.r.t. the\nprimary invariants e1 , . . . , en , and write hSiK for the vector space they span (equivalently, one could choose a graded supplementary of the graded ideal he1 , . . . , en i in\nK[x]G ). Write Sd for the secondary invariants of degree d. Then,\nfor 0 6 d < n :\nfor d > n :\n\n217\n218\n219\n\n\u03a6(K[x]G\nd ) = \u03a6(hSd iK ) ,\nG\n\u03a6(K[x]G\nd ) = \u03a6(hSd iK ) \u2295 \u03a6(K[x]d\u2212n ) .\n\nIn particular, \u03a6 restricts to an isomorphism from hSiK to E G .\nProof. For ease of notation, we write the Hironaka decomposition by grouping the\nsecondary invariants by degree:\nK[x]G =\n\nt\nM\n\n\u03b7i K[e1 , . . . , en ] =\n\ni=1\n220\n\ndM\nmax\n\nhSd iK K[e1 , . . . , en ] ,\n\nd=0\n\nwhere dmax is the highest degree of a secondary invariant. Then, using that\n\u03a6(e1 ) = * * * = \u03a6(en\u22121 ) = 0E G\n\nand\n\n\u03a6(en ) = 1E G ,\n\n\fAN EVALUATION APPROACH TO COMPUTING INVARIANTS RINGS\n\n221\n\n7\n\nwe get that \u03a6(K[e1 , . . . , en ]) = \u03a6(K[en ]) = K.1E G , and thus:\nE G = \u03a6(K[x]G ) =\n\ndX\nmax\n\n\u03a6(hSd iK )\u03a6(K[e1 , . . . , en ]) =\n\nd=1\n\ndX\nmax\n\n\u03a6(hSd iK ) ,\n\nd=1\n\nwhere, by dimension count, the sum is direct. Using further that en is of degree n:\n2\n\u03a6(K[x]G\nd ) = \u03a6(hSd iK ) + \u03a6(hSd\u2212n iK en ) + \u03a6(hSd\u22122n iK en ) + * * *\n\n= \u03a6(hSd iK ) \u2295 \u03a6(hSd\u2212n iK )\n\n\u2295 \u03a6(hSd\u22122n iK )\n\n\u2295 ***\n\n222\n\nThe desired result follows by induction.\n\n223\n\nIn practice, this lemma adds to Proposition 2.1 two new equivalent characterizations of secondary invariants:\n\n224\n225\n226\n227\n228\n229\n230\n\n\u0003\n\nTheorem 3.5. Let G \u2282 Sn be a permutation group, take e1 , . . . , en as primary\ninvariants, and let S = (\u03b71 , . . . , \u03b7t ) be a family of homogeneous invariants with the\nappropriate degrees. Then, the following are equivalent:\n(i) S is a set of secondary invariants;\n(iv) \u03a6(S) forms a basis of E G ;\n(v) The elements of \u03a6(Sd ) are linearly independent in E G , modulo the subspace\nX\nh\u03a6(Sj )iK .\n0\u2264j<d, n | d\u2212j\n\n231\n232\n233\n234\n\n235\n236\n237\n238\n\n239\n240\n241\n\nFurthermore, when any, and therefore all of the above hold, the sum in (v) is a\ndirect sum.\nProof. Direct application of Lemma 3.4, together with recursion for the direct sum.\n\u0003\nExample 3.6. Let G = A3 = h(1, 2, 3)i be the alternating group of order 3. In\nthat case, \u03c1 is the third root of unity j, and K = Q(j) = Q \u2295Q Q.j \u2295Q Q.j 2 . We\nare looking for n!/|G| = 2 secondary invariants, whose degree are given by the\nnumerator of the Hilbert series:\n\u0012\n\u0013\n1\n1\n1 + z3\n1\nH(K[x]G , z) =\n+\n2\n=\n3 (1 \u2212 z)3\n(1 \u2212 z 3 )\n(1 \u2212 z)(1 \u2212 z 2 )(1 \u2212 z 3 )\nSimultaneously, the Sn -orbit of (1, \u03c1, \u03c12 ) splits in two G-orbits. We can, for example, take as evaluation points the two G-orbit representatives \u03c1() = (1, \u03c1, \u03c12 ) and\n\u03c1(2,1) = (\u03c1, 1, \u03c12 ), and the evaluation morphism is given by:\n\u03a6 : K[x]G\np\n\n\u2212\u2192\n7\u2212\u2192\n\nE G = K2\n(p(\u03c1() ), p(\u03c1(1,2) )))\n\nFor example, \u03a6(1) = \u03a6(e3 ) = (1, 1), whereas \u03a6(e1 ) = \u03a6(e2 ) = 0. Let us evaluate\nthe orbitsum of the monomial x21 x2 = x( 2, 1, 0), using Remark 4.4:\no(x(2,1,0) )(\u03c1() )\n\n=j h(2,1,0),(0,1,2)i + j h(2,1,0),(1,2,0)i + j h(2,1,0),(2,0,1)i =3j ,\n\no(x(2,1,0) )(\u03c1(1,2) )=j h(2,1,0),(1,0,2)i + j h(2,1,0),(0,2,1)i + j h(2,1,0),(2,1,0)i =3j 2 .\n\n\f8\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\nThat is \u03a6(o(x21 x2 )) = 3.(j, j 2 ). It follows that:\n\u03a6(K[x]G\n0 ) = K.(1, 1)\nG\n\u03a6(K[x]G\n1 ) = \u03a6(K[x]2 ) = {(0, 0)}\n2\n\u03a6(K[x]G\n3 ) = K.(1, 1) \u2295 K.(3, 3) = K.\u03a6(1) \u2295 K.\u03a6(o(x1 x2 )) .\n242\n\nIn particular, 1 and o(x21 x2 ) are two secondary invariants, both over K or Q:\nK[x]G = Sym(x) \u2295 Sym(x).o(x21 x2 ) .\n\n249\n\nWe consider now the two extreme cases. For G = Sn , there is a single evaluation point and a single secondary invariant 1; and indeed, \u03a6(1) = (1) spans\n\u03a6(K[x]G ) = K. Take now G = {()} the trivial permutation group on n points.\nThen, the evaluation points are the permutations of (1, j, j 2 , . . . , j n\u22121 ). In that\ncase, Theorem 3.5 states in particular that the matrix (j hm,\u03c3 )m,\u03c3 , where m and \u03c3\nrun respectively through the integer vectors below the staircase and through Sn , is\nnon singular.\n\n250\n\n4. An algorithm for computing secondary invariants by evaluation\n\n251\n\nAlgorithm 1 is a straightforward adaptation of the standard algorithm to compute secondary invariants in order to use the evaluation morphism \u03a6 together with\nTheorem 3.5.\nFor the sake of the upcoming complexity analysis, we now detail how the required\nnew invariants in each degree can be generated and evaluated in the case of a\npermutation group.\nIt is well known that the ring K[x] is a free Sym(x)-module of rank n!. It admits\nseveral natural bases over Sym(x), including the Schubert polynomials, the descent\nmonomials, and the monomials under the staircase. We focus on the later. Namely,\nencoding a monomial m = x\u03b1 in K[x] by its exponent vector \u03b1 = (\u03b11 , . . . , \u03b1n ),\nm is under the staircase if \u03b1i 6 n \u2212 i for all 1 6 i 6 n. Given a permutation\ngroup G \u2282 Sn , a monomial m is canonical if m is maximal in its G-orbit for the\nlexicographic order: \u03c3(m) 6lex m, \u2200\u03c3 \u2208 G. The following lemma is a classical\nconsequence of the Reynolds operator being a K[x]G -module morphism.\n\n243\n244\n245\n246\n247\n248\n\n252\n253\n254\n255\n256\n257\n258\n259\n260\n261\n262\n263\n264\n265\n266\n267\n268\n269\n270\n271\n272\n273\n274\n\nLemma 4.1. Let M be a family of polynomials which spans K[x] as a Sym(x)module. Then, the set of invariants {R(m) | m \u2208 M } spans K[x]G as a Sym(x)\nmodule.\nIn particular, taking for M the set of monomials under the staircase, one gets\nthat the orbitsums of monomials which are simultaneously canonical and under the\nstaircase generate K[x]G as a Sym(x)-module. One can further remove non zero\ninteger partitions from this set.\nP\nProof. Let p \u2208 K[x]G be an invariant polynomial, and write it as p = m\u2208M fm m,\nwhere the fm are symmetric polynomials. Then, using that the Reynolds operator\nR is a K[x]G -module morphism, one gets as desired that:\nX\nX\np = R(p) = R(\nfm m) =\nfm R(m) .\n\u0003\nm\u2208M\n\n275\n276\n277\n\nm\u2208M\n\nRemark 4.2. The canonical monomials under the staircase can be iterated through\nefficiently using orderly generation [Rea78, McK98] and a strong generating system of the group G [Ser03]; the complexity of this iteration can be safely bounded\n\n\fAN EVALUATION APPROACH TO COMPUTING INVARIANTS RINGS\n\n9\n\nAlgorithm 1 Computing secondary invariants and irreducible secondary invariants\nof a permutation group G, w.r.t. the symmetric functions as primary invariants,\nand using the evaluation morphism \u03a6.\nWe assume that the following have been precomputed from the Hilbert series:\n\u2022 sd : the number of secondary invariants of degree d\n(this is the coefficient of degree d of S(K[x]G , z))\n\u2022 ed : the dimension of dim \u03a6(K[x]G\nd)\n(this is sd if d < n and ed\u2212n + sd otherwise)\nAt the end of each iteration of the main loop:\n\u2022 Sd is a set Sd of secondary invariants of degree d;\n\u2022 Id is a set of irreducible secondary invariants of degree d;\n\u2022 Ed models the vector space \u03a6(K[x]G\nd ).\nCode, in pseudo-Python syntax:\ndef SecondaryInvariants(G) :\nfor d \u2208 {0, 1, 2, . . . , deg(S(K[x]G , z))} :\nId = {}\nSd = {}\nif d > n :\nEd = Ed\u2212n\n#Defect of direct sum of Theorem 3.5\nelse :\nEd = {~0}\n# Consider all products of secondary invariants of lower degree\nfor (\u03b7, \u03b7 0 ) \u2208 Sk \u00d7 Il with k + l = d :\nif \u03a6(\u03b7\u03b7 0 ) \u2208\n/ Ed :\nSd = Sd \u222a{\u03b7\u03b7 0 }\nEd = Ed \u2295K.\u03a6(\u03b7\u03b7 0 )\n# Complete with orbitsums of monomials under the staircase\nfor m \u2208 CanonicalMonomialsUnderStaircaseOfDegree(d) :\nif dim Ed == ed :\nbreak\n#All secondary invariants were found\n\u03b7 = OrbitSum(m)\nif \u03a6(\u03b7) \u2208\n/ Ed :\nId = Id \u222a{\u03b7}\nSd = Sd \u222a{\u03b7}\nEd = Ed \u2295K.\u03a6(\u03b7)\nreturn ({S0 , S1 , . . . }, {I0 , I1 , . . . })\n\n278\n279\n\n280\n281\n282\n\nabove by O(n!), though in practice it is much better than that (see Figures 4 and 4,\nand [Nic11] for details).\nRemark 4.3. Let x\u03b1 be a monomial. Then, evaluating it on a point \u03c1\u03c3 requires at\nmost O(n) arithmetic operations in Z. Assume indeed that \u03c1k has been precomputed\nin K and cached for all k in 0, . . . , n \u2212 1; then, one can use:\nx\u03b1 (\u03c1\u03c3 ) = \u03c1h\u03b1|\u03c3i\n\n283\n284\n285\n\nmod n\n\n,\n\nwhere \u03c3 is written, in the scalar product, as a permutation of {0, . . . , n \u2212 1}.\nRemark 4.4. Currently, the evaluation of the orbitsum o(x\u03b1 ) of a monomial on\na point \u03c1\u03c3 is carried out by evaluating each monomial in the orbit. This gives a\n\n\f10\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\n6ms\n\n\u00d7\n\n5ms\n\u00d7\n\n4ms\n\u00d7\n\u00d7\n\n3ms\n\u00d7\n\u00d7\n\n2ms\n1ms\n\u00d7\n\n\u00d7\n\n\u00d7\n\n\u00d7\n\u00d7\n\n1\n\n2\n\n3\n\n4\n\n\u00d7\n\u00d7\n\u00d7\n5\n\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\n6\n\n7\n\n8\n\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\nn\n\n9\n\n10\n\nFigure 1. This figure plots, for n \u2264 10 and for each transitive\npermutation group G \u2282 Sn , the average computation time per\ncanonical integer vectors below the staircase. If one ignores the\ntwo top groups for each n (which correspond to An and Sn respectively), the worst case complexity is seemingly roughly linear\nin the size of the result: O(nC(G)).\n286\n287\n288\n289\n\ncomplexity of O(n|G|) arithmetic operations in Z (for counting how many times\neach \u03c1k appears in the result) and O(n) additions in K (for expressing the result in\nK). This can be roughly bounded by O(|G|) arithmetic operations in K. This bounds\nn!\nn!\nthe complexity of calculating \u03a6(o(x\u03b1 )) on all |G|\npoints by |G|\nO(|G|) = O(n!).\n\n302\n\nThis worst case complexity gives only a very rough overestimate of the average\ncomplexity in our application. Indeed, in practice, most of the irreducible secondary\ninvariants are of low degree; thus Algorithm 1 only need to evaluate orbitsums\nof monomials m of low degree; such monomials have many multiplicities in their\nexponent vector, and tend to have a large automorphism group, that is a small\norbit.\nFurthermore, it is to be expected that such evaluations can be carried out much\nmore efficiently by exploiting the inherent redundancy (\u00e0 la Fast Fourrier Transform). In particular, one can use the strong generating set of G to apply a divide\nand conquer approach to the evaluation of an orbitsum on a point. The complexity analysis and benchmarking remains to be done to evaluate the practical gain.\nFinally, the evaluation of an orbitsum on many points is embarrassingly parallel\n(though fine grained), a property which we have not exploited yet.\n\n303\n\n5. Complexity analysis\n\n304\n\nFor the sake of simplicity, all complexity results are expressed in terms of arithmetic operations in the ground field K = Q(\u03c1). This model is realistic, because, in\npractice, the growth of coefficients does not seem to become a bottleneck; a possible explanation for this phenomenon might be that the natural coefficient growth\n\n290\n291\n292\n293\n294\n295\n296\n297\n298\n299\n300\n301\n\n305\n306\n307\n\n\fAN EVALUATION APPROACH TO COMPUTING INVARIANTS RINGS\n\n11\n\nC 0 (G)\n\n10!\n\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\u00d7\n\u00d7\u00d7\u00d7\u00d7\n\u00d7\n\u00d7\n\u00d7\u00d7\n\u00d7\n\u00d7 \u00d7\n\u00d7\u00d7\u00d7\u00d7 \u00d7\u00d7\u00d7 \u00d7\n\u00d7 \u00d7 \u00d7\u00d7 \u00d7\n\u00d7\n\u00d7 \u00d7\n\u00d7\u00d7\n\u00d7\n\u00d7\u00d7\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7 \u00d7\u00d7 \u00d7\u00d7 \u00d7\n\u00d7 \u00d7\n\u00d7\u00d7\u00d7\n\u00d7\n\u00d7\u00d7 \u00d7\n\u00d7\u00d7\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7\n\u00d7 \u00d7 \u00d7\u00d7\u00d7 \u00d7 \u00d7\n\u00d7 \u00d7\n\u00d7\n\u00d7\n\u00d7 \u00d7\n\u00d7 \u00d7\n\u00d7\u00d7\u00d7\u00d7\u00d7\n\u00d7\n\u00d7 \u00d7\n\n9!\n8!\n7!\n6!\n5!\n4!\n3!\n2!\n\n\u00d7\n\n\u00d7\n\u00d7\n2!\n\n\u00d7 \u00d7\n\n\u00d7\n\u00d7\nn!\n|G|\n\n3!\n\n4!\n\n5!\n\n6!\n\n7!\n\n8!\n\n9!\n\n10!\n\nFigure 2. This figure plots, for n \u2264 10 and for each transitive permutation group G \u2282 Sn , the number C 0 (G) := C(G) \u2212\ncatalan(n) + 1 of canonical integer vectors below the staircase for\nG which are not non zero partitions, versus the number n!/|G| of\nsecondary invariants. The dotted lines suggest that, in practice,\nn!/|G| \u2264 C 0 (G) \u2264 (n!/|G|)2.5 .\n308\n309\n310\n311\n312\n313\n314\n315\n316\n317\n318\n319\n320\n321\n322\n323\n324\n325\n\nwould be compensated by the pointwise product which tends to preserve and increase sparseness. We also consider that one operation in K is equivalent to n\noperations in Q. This is a slight abuse; however dimQ Q(\u03c1) = \u03c6(n) \u2265 0.2n for\nn \u2264 10000 which is far beyond any practical value of n in our context.\nTheorem 5.1. Let G be a permutation group, and take the elementary symmetric functions as primary invariants. Then, the complexity of computing secondary\ninvariants by evaluation using Algorithm 1 is bounded above by O(n!2 + n!3 /|G|2 )\narithmetic operations in K.\nProof. To get this upper bound on the complexity, we broadly simplify the main\nsteps of this algorithm to:\n(1) Group theoretic computations on G: strong generating set, conjugacy classes,\netc;\n(2) Computation of the Hilbert series of K[x]G ;\n(3) Construction of canonical monomials under the staircase;\n(4) Computation by \u03a6 of the evaluation vectors of the orbitsums of those monomials;\n(5) Computation of products \u03a6(\u03b7)\u03a6(\u03b7 0 ) of evaluation vectors of secondary invariants;\n\n\f12\n\n326\n327\n328\n329\n330\n331\n332\n333\n334\n335\n336\n337\n338\n339\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\n(6) Row reduction of the evaluation vectors.\nThe complexity of (1) is a small polynomial in n (see e.g. [Ser03]) and is negligible\nin practice as well\u0001as in theory. (2) can be reduced to the addition of c polynomials of\ndegree at most n2 , where c \u2264 |G| \u2264 n! is the number of conjugacy classes of G (the\ndenominator of the Hilbert series is known; the mentioned polynomials contribute\nto its numerator, that is the generating series of the secondary invariants); it is\nnegligible as well. Furthermore, by Remark 4.2 (3) is not a bottleneck.\nUsing Lemma 4.1 and Remark 4.4, the complexity of (4) is bounded above by\nO(n!2 ) (at most O(n!) orbitsums to evaluate, for a cost of O(n!) each).\nFor a very crude upper bound for (5), we assume that the algorithm computes\nall products of evaluation vectors of two secondary invariants. This gives (n!/G)2\nproducts in E G which is in O(n!/G)3 .\nFinally, in (6), the cost of the row reduction of O(n!) evaluation vectors in E G\nis of O(n!3 /|G|2 ).\n\u0003\n\n356\n\nThis complexity bound gives some indication that the symmetries are honestly\ntaken care of by this algorithm. Consider indeed any algorithm computing secondary invariants by linear algebra in K[x]/ Sym(x)+ (say using Gr\u00f6bner basis or\northogonal bases for the Schur-Schubert scalar product). Then the same estimation\ngives a complexity of O(n!2 /|G|) (reducing n! candidates to get n!/|G| linearly independent vectors in a vector space of dimension n!). Therefore, for G large enough,\na gain of |G| is obtained.\nThat being said, this is a very crude upper bound. For a fixed group G, one\ncould use the Hilbert series to calculate explicitly a much better estimate: indeed\nthe grading splits the linear algebra in many smaller problems and also greatly\nreduces the number of products to consider. However, it seems hard in general to\nget enough control on the Hilbert series, to derive complexity information solely in\nterm of basic information on the group (n, |G|, ...). Also, in practice, there usually\nare only few irreducible invariants, and they are of small degrees. Thus only few of\nthe canonical monomial need actually to be generated and evaluated.\nIt is therefore essential to complement this complexity analysis with extensive\nbenchmarks to confirm the practical gains. This is the topic of the next section.\n\n357\n\n6. Implementation and benchmarks\n\n358\n\nAlgorithm 1, and many variants, have been implemented in the open source\nmathematical platform Sage [S+ 09]. The choice of the platform was motivated by\nthe availability of most of the basic tools (group theory via GAP [GAP99], cyclotomic\nfields, linear algebra, symmetric functions, etc), and the existence of a community\nto share with the open-source development of the remaining tools (e.g. Schubert\npolynomials or the orderly generation of canonical monomials) [SCc08]. Thanks\nto the Cython compiler, it was also easy to write most of the code in a high level\ninterpreted language (Python), and cherry pick just those critical sections that\nneeded to be compiled (orderly generation, evaluation). The implementation is\npublicly available in alpha version via the Sage-Combinat patch server. It will\neventually be integrated into the Sage library.\nWe ran systematic benchmarks (see Figure 6 and 6), comparing the results with\nthe implementation of secondary invariants in Singular [GPS98, Kin07b]. Note\nthat Singular's implementation deals with any finite group of matrices. Also, it\n\n340\n341\n342\n343\n344\n345\n346\n347\n348\n349\n350\n351\n352\n353\n354\n355\n\n359\n360\n361\n362\n363\n364\n365\n366\n367\n368\n369\n370\n371\n\n\fAN EVALUATION APPROACH TO COMPUTING INVARIANTS RINGS\n\n372\n373\n374\n375\n376\n377\n378\n379\n380\n381\n382\n383\n384\n385\n386\n387\n388\n389\n390\n391\n392\n393\n394\n395\n396\n397\n398\n399\n400\n401\n\n13\n\nprecomputes and uses its own primary invariants instead of the elementary symmetric functions. Therefore, the comparison is not immediate: on the one hand,\nSingular has more work to do (finding the primary invariants); on the other hand,\nwhen the primary invariants are of small degree, the size of the result can be much\nsmaller. Thus, those benchmarks should eventually be complemented by:\n\u2022 Calculations of secondary invariants w.r.t. the elementary symmetric functions, using Gr\u00f6bner basis using Singular and Magma;\n\u2022 Calculations of secondary invariants using Singular and Magma;\n\u2022 Calculations of secondary invariants w.r.t. the elementary symmetric functions, using SAGBI-Gr\u00f6bner basis (for example by using MuPAD-Combinat [Thi,\nHT04]).\nA similar benchmark comparing Magma [CP96] and MuPAD-Combinat is presented\nin [Thi01, Figure 1] (up to a bias: the focus in MuPAD-Combinat is on a minimal\ngenerating set, but this is somewhat equivalent to irreducible secondary invariants).\nThis benchmark can be roughly compared with that of Figure 6 by shifting by a\nspeed factor of 10 to compensate for the hardware improvements since 2001. Related\nbenchmarks are available in [Kin07b, Kin07a].\nWe used the transitive permutation groups as test bed. A practical motivation\nis that there are not so many of them and they are easily available through the\nGAP database [Hul05]. At the same time, we claim that they provide a wide enough\nvariety of permutation groups to be representative. In particular, the computation\nfor non transitive permutation groups tend to be easier, since one can use primary\ninvariants of much smaller degrees, namely the elementary symmetric functions in\neach orbit of variables.\nThe benchmarks were run on the computation server sage.math.washington.edu1\nwhich is equipped with 24 Intel(R) Xeon(R) CPU X7460 @2.66GHz cores and\n128 GB of RAM. We did not use parallelism, except for running up to four tests\nin parallel. The memory usage is fairly predictable, at least for the Sage implementation, so we did not include it into the benchmarks. In practice, the worst\ncalculation used 12 GB. Any calculation running over 24 hours was aborted.\n\n402\n\n7. Further developments\n\n403\n\nAt this stage, the above sections validate the potential of the evaluation approach. Yet much remains to be done, both in theory and practice, to design\nalgorithms making an optimal use of this approach. The main bottleneck so far is\nthe calculation of evaluations by \u03a6, and we conclude with a couple problems we are\ncurrently investigating in this direction.\n\n404\n405\n406\n407\n408\n409\n410\n411\n412\n413\n414\n\nProblem 7.1. Construct invariants with nice properties under evaluation by \u03a6\n(sparsity, ...). A promising starting point are Schubert polynomials [LS82, Las03],\nas they form a basis of K[x] as Sym(x)-module whose image under \u03a6 is triangular.\nHowever, it is not clear whether this triangularity can be made somehow compatible\nwith the coset distribution of G in Sn .\nAnother approach would be to search for invariants admitting short Straight Line\nPrograms.\n1This server is part of the Sage cluster at the University of Washington at Seattle and is devoted\nto Sage development; it was financed by \"National Science Foundation Grant No. DMS-0821725\".\n\n\f14\n\n3\n2 4\n\n5\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\n7\n\n9\n\n6\n\n8\n\u25e6\n\n\u25e6\u25e6+++\n\u25e6+\n\u25e6\u25e6\n\n\u25e6\u25e6\n\n\u25e6\u25e6\u25e6 \u25e6\u25e6 \u25e6\n\n\u25e6 \u25e6\u25e6 \u25e6\u25e6\u25e6\u25e6\u25e6\u25e6\u25e6\u25e6\n\n10\n\u25e6\u25e6\u25e6\n\n+++\n\n++\n\n100 ks\n\nComputation time\n\n\u25e6\n+\n\u25e6\n\u25e6\n++ +\n+\n+\n\u25e6\n10 ks\n\u25e6\n\u25e6\n+\n\u25e6\u25e6\n\u25e6 +++ \u25e6\n+\u25e6\n\u25e6\n+\n+ ++\n1 ks\n\u25e6\u25e6\n+\n\u25e6\n+++ ++\n\u25e6\n+\n\u25e6\u25e6\u25e6 \u25e6\n100 s\n\u25e6\n\u25e6 +\n+\n+\n\u25e6\n\u25e6+\n+++\n\u25e6 \u25e6\n\u25e6\n+++\n\u25e6\n\u25e6\n\u25e6\n++\n10 s\n\u25e6\n\u25e6\n\u25e6\u25e6\n\u25e6\n+\n\u25e6\n+\n1s\n+\n+\n\u25e6\u25e6\n+\u25e6 \u25e6 \u25e6 \u25e6\u25e6 \u25e6\n+\n\u25e6+\u25e6\u25e6+\n\u25e6\n\u25e6\u25e6 \u25e6\n+\n+\n\u25e6 +\n100 ms\n+\u25e6 ++ +++\n\u25e6\u25e6\n+ +\n\u25e6 \u25e6\u25e6+\n+++++ +\n\u25e6\u25e6\u25e6\u25e6\n\u25e6\u25e6\n+++++\n+++ +++\n+\n6 20 ms +\nGroup\n\n416\n417\n418\n419\n420\n421\n\n422\n423\n424\n\nday\n\n+\n+\n+\n\n+\n\n++ +\n+\n+\n+\n+\n\n+\nhour\n+\n+\nminute\n\n+\n\n+\nsecond\n\n+\n\nFigure 3. Comparative benchmark for the computation of secondary invariants for all transitive permutation groups for n \u2264 10\nusing Sage's evaluation implementation (+) and Singular's elimination implementation (\u25e6). The groups are sorted horizontally by\nincreasing n and then by increasing cardinality.\n\n415\n\n+ > 1 day\n\nNote that a good solution to this problem, combined with the evaluation approach of this paper, could possibly open the door for the solution of a long standing problem, namely the explicit construction of secondary invariants; currently\nsuch a description is known only in the very simple case of products of symmetric\ngroups [GS84]. Even just associating in some canonical way a secondary invariant\nto each coset in Sn /G seems elusive.\nFrom a practical point of view, the following would be needed.\nProblem 7.2. Find a good algorithm to compute \u03a6 on the above invariants. This\nis similar in spirit to finding an analogue of the Fast Fourier Transform w.r.t. the\nFourier Transform.\n\n+\n\n\fAN EVALUATION APPROACH TO COMPUTING INVARIANTS RINGS\n\n10\n\n12\n\n100 ks\n9\n\n1 ks\n9\n100 s\n\nComputation time\n\n8\n8\n\n10 s\n\n8\n\n> 1 day\n\n812\n9\n1098 14\n\nday\n\n8\n8\n98\n8 14\n8 10\n\n10\n10\n\n10 ks\n\n15\n\n8\n88\n9 98\n9 7\n98\n8\n8 10\n8 98\n810 8\n7 9\n\nhour\n\n8\n12\n87 98\n88\n8\n8\n\nminute\n\n10\n78\n\n1s\n\n8\n\n7\n65\n6\n\n100 ms\n6\n5\n4\n4\n\n6\n10 ms\n\n53\n4\n\n6\n\n56\n6\n\n86\n76 8\n6\n\n6\n\nsecond\n\n66\n\n6\n6\n\n4\n\n1 ms12\n10\n976854312\n\nmillisecond\n\n6 100\u03bcs\n1!\n\n2!\n\n3!\n\n4!\n101\n\n5!\n102\n\n6!\n\n7!\n103\n\n8!\n104\n\n9!\n105\n\nFigure 4. Benchmark for the computation of secondary invariants\nfor all transitive permutation groups for n \u2264 10 (and for some\nbelow n \u2264 14), using Sage's evaluation implementation. For each\nsuch group, n is written at position (k, t), where k = n!/|G| is the\nnumber of secondary invariants and t is the computation time. In\nparticular, the symmetric groups Sn and the alternating groups\nAn are respectively above 1! and 2!.\n425\n426\n427\n428\n429\n430\n431\n432\n433\n434\n435\n436\n437\n\nTheorem 3.5 further suggests that, using the grading, it could be sufficient to\nconsider only a subset of the evaluation points.This is corroborated by computer exploration; for example, for the cyclic group C7 of order 7, 110 evaluation points out\nof 720 were enough for constructing the secondary invariants. Possible approaches\ninclude lazy evaluation strategies, or explicit choices of evaluation points, or some\ncombination of both.\nProblem 7.3. Get some theoretical control on which evaluation points are needed so\nthat \u03a6 restricted on those points remains injective on some (resp. all) homogeneous\ncomponent K[x]G\nd.\nHere again, Schubert polynomials are natural candidates, with the same difficulty\nas above. A step toward Problem 7.3 would be to solve the following.\nProblem 7.4. For G \u2282 Sn a permutation group, and to start with for G the trivial\npermutation group, find a good description of the subspaces \u03a6(K[x]G\nd ).\n\nn!\n|G|\n\n\f16\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\n444\n\nLast but not least, one would want to generalize the evaluation approach to any\nmatrix groups, following the line sketched in the introduction. The issue is whether\none can get enough control on perturbations of the primary invariants so that:\n\u2022 The orbits of the simple roots are large, in order to benefit from the gain\nof taking a single evaluation point per orbit;\n\u2022 Only few of the primary invariants need to be perturbated, to best exploit\nthe grading in the analogue of Theorem 3.5.\n\n445\n\n8. Acknowledgments\n\n446\n\n457\n\nWe would like to thank Marc Giusti, Alain Lascoux, Romain Lebreton, and \u00c9ric\nSchost, for fruitful discussions, as well as the anonymous referees of the extended\nabstract presented at MEGA 2011 [BT11] for their many useful suggestions for\nimprovements.\nThis research was driven by computer exploration using the open-source mathematical software Sage [S+ 09]. In particular, we perused its algebraic combinatorics\nfeatures developed by the Sage-Combinat community [SCc08], as well as its group\ntheoretical and invariant theoretical features provided respectively by GAP [GAP97]\nand Singular [GPS98]. The extensive benchmarks were run on the computational\nserver sage.math.washington.edu, courtesy of the Sage developers group at the\nUniversity of Washington (Seattle, USA) and the \"National Science Foundation\nGrant No. DMS-0821725\".\n\n458\n\nReferences\n\n438\n439\n440\n441\n442\n443\n\n447\n448\n449\n450\n451\n452\n453\n454\n455\n456\n\n459\n\n[Abd00]\n\n460\n461\n\n[BT11]\n\n462\n463\n464\n\n[CLO97]\n\n465\n466\n467\n\n[Col97a]\n\n468\n469\n\n[Col97b]\n\n470\n471\n472\n\n[CP96]\n\n473\n474\n\n[DK02]\n\n475\n476\n477\n\n[DSW09]\n\n478\n479\n\n[FR09]\n\n480\n481\n482\n\n[GAP97]\n\n483\n484\n485\n\n[GAP99]\n\n486\n487\n488\n\n[Gat90]\n\nInes Abdeljaouad. Th\u00e9orie des Invariants et Applications \u00e0 la Th\u00e9orie de Galois effective. PhD thesis, Universit\u00e9 Paris 6, 2000.\nNicolas Borie and Nicolas M. Thi\u00e9ry. An evaluation approach to computing invariants\nrings of permutation groups. In Proceedings of MEGA 2011, March 2011. Accepted, 8\npages.\nDavid Cox, John Little, and Donal O'Shea. Ideals, varieties, and algorithms. SpringerVerlag, New York, second edition, 1997. An introduction to computational algebraic\ngeometry and commutative algebra.\nAntoine Colin. Solving a system of algebraic equations with symmetries. J. Pure Appl.\nAlgebra, 117/118:195\u2013215, 1997. Algorithms for algebra (Eindhoven, 1996).\nAntoine Colin. Th\u00e9orie des invariants effective; Applications \u00e0 la th\u00e9orie de Galois et\n\u00e0 la r\u00e9solution de syst\u00e8mes alg\u00e9briques; Implantation en AXIOM. PhD thesis, \u00c9cole\npolytechnique, 1997.\nJohn Cannon and Catherine Playoust. MAGMA: a new computer algebra system. Euromath Bull., 2(1):113\u2013144, 1996.\nHarm Derksen and Gregor Kemper. Computational invariant theory. Invariant Theory\nand Algebraic Transformation Groups, I. Springer-Verlag, Berlin, 2002. Encyclopaedia\nof Mathematical Sciences, 130.\nXavier Dahan, \u00c9ric Schost, and Jie Wu. Evaluation properties of invariant polynomials.\nJ. Symbolic Comput., 44(11):1592\u20131604, 2009.\nJ.C. Faug\u00e8re and S. Rahmany. Solving systems of polynomial equations with symmetries\nusing SAGBI-Gr\u00f6bner bases. In Proceedings of the 2009 international symposium on\nSymbolic and algebraic computation, pages 151\u2013158. ACM, 2009.\nThe GAP Group, Lehrstuhl D fur\n- Mathematik, RWTH Aachen, Germany and School of\nMathematical and Computational Sciences, U. St. Andrews, Scotland. GAP \u2013 Groups,\nAlgorithms, and Programming, Version 4, 1997.\nThe GAP Group, Aachen, St Andrews. GAP \u2013 Groups, Algorithms, and Programming,\nVersion 4.1, 1999.\nK. Gatermann. Symbolic solution of polynomial equation systems with symmetry.\nKonrad-Zuse-Zentrum f\u00fcr Informationstechnik Berlin, 1990.\n\n\fAN EVALUATION APPROACH TO COMPUTING INVARIANTS RINGS\n\n489\n\n[GK00]\n\n490\n491\n\n[GPS98]\n\n492\n493\n494\n\n[GS84]\n\n495\n496\n\n[GST06]\n\n497\n498\n499\n\n[HT04]\n\n500\n501\n502\n\n[Hul05]\n\n503\n504\n\n[Kem93]\n\n505\n506\n\n[Kem98]\n\n507\n508\n\n[Kin07a]\n\n509\n510\n\n[Kin07b]\n\n511\n512\n\n[Las03]\n\n513\n514\n515\n\n[LS82]\n\n516\n517\n\n[MB82]\n\n518\n519\n520\n\n[McK98]\n\n521\n522\n\n[Nic11]\n\n523\n524\n\n[PT01]\n\n525\n526\n527\n\n[Rea78]\n\n528\n529\n530\n\n[S+ 09]\n\n531\n532\n\n[SCc08]\n\n533\n534\n\n[Ser03]\n\n535\n536\n\n[Smi97]\n\n537\n538\n\n[Sta79]\n\n539\n540\n541\n\n[Stu93]\n[Thi]\n\n542\n543\n544\n545\n\n[Thi00]\n\n17\n\nKatharina Geissler and J\u00fcrgen Kl\u00fcners. Galois group computation for rational polynomials. J. Symbolic Comput., 30(6):653\u2013674, 2000. Algorithmic methods in Galois theory.\nG.-M. Greuel, G. Pfister, and H. Sch\u00f6nemann. Singular version 1.2 User Manual . In\nReports On Computer Algebra, number 21. Centre for Computer Algebra, University of\nKaiserslautern, June 1998.\nA. M. Garsia and D. Stanton. Group actions of Stanley - Reisner rings and invariants\nof permutation groups. Adv. in Math., 51(2):107\u2013201, 1984.\nPierrick Gaudry, \u00c9ric Schost, and Nicolas M. Thi\u00e9ry. Evaluation properties\nof symmetric polynomials. Internat. J. Algebra Comput., 16(3):505\u2013523, 2006.\nhttp://hal.inria.fr/inria-00000629.\nFlorent Hivert and Nicolas M. Thi\u00e9ry. MuPAD-Combinat, an open-source package for\nresearch in algebraic combinatorics. S\u00e9m. Lothar. Combin., 51:Art. B51z, 70 pp. (electronic), 2004. http://mupad-combinat.sf.net/.\nAlexander Hulpke. Constructing transitive permutation groups. J. Symbolic Comput.,\n39(1):1\u201330, 2005.\nGregor Kemper. The invar package for calculating rings of invariants. IWR Preprint\n93-94, University of Heidelberg, 1993.\nGregor Kemper. Computational invariant theory. In The Curves Seminar at Queen's.\nVol. XII (Kingston, ON, 1998), pages 5\u201326. Queen's Univ., Kingston, ON, 1998.\nS. King. Minimal generating sets of non-modular invariant rings of finite groups. Arxiv\npreprint math/0703035, 2007.\nS.A. King. Fast Computation of Secondary Invariants. Arxiv preprint math/0701270,\n2007.\nAlain Lascoux. Symmetric functions and combinatorial operators on polynomials, volume 99 of CBMS Regional Conference Series in Mathematics. Published for the Conference Board of the Mathematical Sciences, Washington, DC, 2003.\nAlain Lascoux and Marcel-Paul Sch\u00fctzenberger. Polyn\u00f4mes de Schubert. C. R. Acad.\nSci. Paris S\u00e9r. I Math., 294(13):447\u2013450, 1982.\nH. M. M\u00f6ller and B. Buchberger. The construction of multivariate polynomials with\npreassigned zeros. In Computer algebra (Marseille, 1982), volume 144 of Lecture Notes\nin Comput. Sci., pages 24\u201331. Springer, Berlin, 1982.\nBrendan D. McKay. Isomorph-free exhaustive generation. J. Algorithms, 26(2):306\u2013324,\n1998.\nNicolas.Borie. Calcul des invariants des groupes de permutations par transform\u00e9e de\nFourier. PhD thesis, Laboratoire de Math\u00e9matiques, Universit\u00e9 Paris Sud, 2011.\nMaurice Pouzet and Nicolas M. Thi\u00e9ry. Invariants alg\u00e9briques de graphes et reconstruction. C. R. Acad. Sci. Paris S\u00e9r. I Math., 333(9):821\u2013826, 2001. arXiv:0812.3079v1\n[math.CO].\nRonald C. Read. Every one a winner or how to avoid isomorphism search when cataloguing combinatorial configurations. Ann. Discrete Math., 2:107\u2013120, 1978. Algorithmic\naspects of combinatorics (Conf., Vancouver Island, B.C., 1976).\nW. A. Stein et al. Sage Mathematics Software (Version 3.3). The Sage Development\nTeam, 2009. http://www.sagemath.org.\nThe Sage-Combinat community. Sage-Combinat: enhancing Sage as a toolbox for computer exploration in algebraic combinatorics, 2008. http://combinat.sagemath.org.\n\u00c1kos Seress. Permutation group algorithms, volume 152 of Cambridge Tracts in Mathematics. Cambridge University Press, Cambridge, 2003.\nLarry Smith. Polynomial invariants of finite groups. A survey of recent developments.\nBull. Amer. Math. Soc. (N.S.), 34(3):211\u2013250, 1997.\nRichard P. Stanley. Invariants of finite groups and their applications to combinatorics.\nBull. Amer. Math. Soc. (N.S.), 1(3):475\u2013511, 1979.\nBernd Sturmfels. Algorithms in invariant theory. Springer-Verlag, Vienna, 1993.\nNicolas M. Thi\u00e9ry. PerMuVAR, a library for MuPAD for computing in invariant rings of\npermutation groups. http://permuvar.sf.net/.\nNicolas M. Thi\u00e9ry. Algebraic invariants of graphs: a study based on computer exploration. SIGSAM Bulletin (ACM Special Interest Group on Symbolic and Algebraic Manipulation), 34(3):9\u201320, September 2000. arXiv:0812.3082v1 [math.CO].\n\n\f18\n\n546\n\n[Thi01]\n\n547\n548\n549\n550\n551\n552\n553\n554\n555\n\n[TT04]\n\nNICOLAS BORIE AND NICOLAS M. THI\u00c9RY\n\nNicolas M. Thi\u00e9ry. Computing minimal generating sets of invariant rings of permutation\ngroups with SAGBI-Gr\u00f6bner basis. In Discrete models: combinatorics, computation,\nand geometry (Paris, 2001), Discrete Math. Theor. Comput. Sci. Proc., AA, pages\n315\u2013328 (electronic). Maison Inform. Math. Discr\u00e8t., Paris, 2001.\nNicolas M. Thi\u00e9ry and St\u00e9phan Thomass\u00e9. Convex cones and SAGBI bases of permutation invariants. In Invariant theory in all characteristics, volume 35 of CRM Proc.\nLecture Notes, pages 259\u2013263. Amer. Math. Soc., Providence, RI, 2004. arXiv:0607380\n[math.AC].\n\nUniv. Paris-Sud, Laboratoire de Math\u00e9matiques d'Orsay, Orsay Cedex, F-91405;\nCNRS, France\n\n\f"}