{"id": "http://arxiv.org/abs/quant-ph/0602186v1", "guidislink": true, "updated": "2006-02-22T14:42:27Z", "updated_parsed": [2006, 2, 22, 14, 42, 27, 2, 53, 0], "published": "2006-02-22T14:42:27Z", "published_parsed": [2006, 2, 22, 14, 42, 27, 2, 53, 0], "title": "A simpler proof of zero-knowledge against quantum attacks using Grover's\n  amplitude amplification", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=quant-ph%2F0501093%2Cquant-ph%2F0501074%2Cquant-ph%2F0501028%2Cquant-ph%2F0501015%2Cquant-ph%2F0501168%2Cquant-ph%2F0501014%2Cquant-ph%2F0501090%2Cquant-ph%2F0501045%2Cquant-ph%2F0501153%2Cquant-ph%2F0501165%2Cquant-ph%2F0501081%2Cquant-ph%2F0501099%2Cquant-ph%2F0501023%2Cquant-ph%2F0501120%2Cquant-ph%2F0501112%2Cquant-ph%2F0602055%2Cquant-ph%2F0602131%2Cquant-ph%2F0602081%2Cquant-ph%2F0602202%2Cquant-ph%2F0602033%2Cquant-ph%2F0602220%2Cquant-ph%2F0602181%2Cquant-ph%2F0602108%2Cquant-ph%2F0602049%2Cquant-ph%2F0602084%2Cquant-ph%2F0602102%2Cquant-ph%2F0602095%2Cquant-ph%2F0602175%2Cquant-ph%2F0602141%2Cquant-ph%2F0602040%2Cquant-ph%2F0602015%2Cquant-ph%2F0602063%2Cquant-ph%2F0602153%2Cquant-ph%2F0602021%2Cquant-ph%2F0602182%2Cquant-ph%2F0602041%2Cquant-ph%2F0602231%2Cquant-ph%2F0602078%2Cquant-ph%2F0602135%2Cquant-ph%2F0602142%2Cquant-ph%2F0602086%2Cquant-ph%2F0602036%2Cquant-ph%2F0602229%2Cquant-ph%2F0602097%2Cquant-ph%2F0602210%2Cquant-ph%2F0602165%2Cquant-ph%2F0602189%2Cquant-ph%2F0602197%2Cquant-ph%2F0602006%2Cquant-ph%2F0602205%2Cquant-ph%2F0602209%2Cquant-ph%2F0602011%2Cquant-ph%2F0602112%2Cquant-ph%2F0602046%2Cquant-ph%2F0602002%2Cquant-ph%2F0602019%2Cquant-ph%2F0602167%2Cquant-ph%2F0602227%2Cquant-ph%2F0602161%2Cquant-ph%2F0602114%2Cquant-ph%2F0602186%2Cquant-ph%2F0602155%2Cquant-ph%2F0602047%2Cquant-ph%2F0602232%2Cquant-ph%2F0602179%2Cquant-ph%2F0602200%2Cquant-ph%2F0602157%2Cquant-ph%2F0602099%2Cquant-ph%2F0602194%2Cquant-ph%2F0602117%2Cquant-ph%2F0602149%2Cquant-ph%2F0602094%2Cquant-ph%2F0602173%2Cquant-ph%2F0602222%2Cquant-ph%2F0602217%2Cquant-ph%2F0602172%2Cquant-ph%2F0602162%2Cquant-ph%2F0602154%2Cquant-ph%2F0602136%2Cquant-ph%2F0602062%2Cquant-ph%2F0602111%2Cquant-ph%2F0602066%2Cquant-ph%2F0602028%2Cquant-ph%2F0602089%2Cquant-ph%2F0602198%2Cquant-ph%2F0602101%2Cquant-ph%2F0602009%2Cquant-ph%2F0602196%2Cquant-ph%2F0602193%2Cquant-ph%2F0602128%2Cquant-ph%2F0602072%2Cquant-ph%2F0602174%2Cquant-ph%2F0602214%2Cquant-ph%2F0602096%2Cquant-ph%2F0602058%2Cquant-ph%2F0602183%2Cquant-ph%2F0602158%2Cquant-ph%2F0602020%2Cquant-ph%2F0602185%2Cquant-ph%2F0602176%2Cquant-ph%2F0602226&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "A simpler proof of zero-knowledge against quantum attacks using Grover's\n  amplitude amplification"}, "summary": "Watrous had presented the first proof of zero-knowledge property of a proof\nsystem against a quantum verifier. The key of the proof is the construction of\na quantum simulator. In the construction, the 'failure state' is rotated to the\n'success' state by a tricky operation which is initially developped for the\namplification of QMA proof systems.\n  This manuscript presents a new and simpler construction of a simulator. In\nthe construction, we simply amplify the success probability of a classical\nsimulator using Grover's amplification.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=quant-ph%2F0501093%2Cquant-ph%2F0501074%2Cquant-ph%2F0501028%2Cquant-ph%2F0501015%2Cquant-ph%2F0501168%2Cquant-ph%2F0501014%2Cquant-ph%2F0501090%2Cquant-ph%2F0501045%2Cquant-ph%2F0501153%2Cquant-ph%2F0501165%2Cquant-ph%2F0501081%2Cquant-ph%2F0501099%2Cquant-ph%2F0501023%2Cquant-ph%2F0501120%2Cquant-ph%2F0501112%2Cquant-ph%2F0602055%2Cquant-ph%2F0602131%2Cquant-ph%2F0602081%2Cquant-ph%2F0602202%2Cquant-ph%2F0602033%2Cquant-ph%2F0602220%2Cquant-ph%2F0602181%2Cquant-ph%2F0602108%2Cquant-ph%2F0602049%2Cquant-ph%2F0602084%2Cquant-ph%2F0602102%2Cquant-ph%2F0602095%2Cquant-ph%2F0602175%2Cquant-ph%2F0602141%2Cquant-ph%2F0602040%2Cquant-ph%2F0602015%2Cquant-ph%2F0602063%2Cquant-ph%2F0602153%2Cquant-ph%2F0602021%2Cquant-ph%2F0602182%2Cquant-ph%2F0602041%2Cquant-ph%2F0602231%2Cquant-ph%2F0602078%2Cquant-ph%2F0602135%2Cquant-ph%2F0602142%2Cquant-ph%2F0602086%2Cquant-ph%2F0602036%2Cquant-ph%2F0602229%2Cquant-ph%2F0602097%2Cquant-ph%2F0602210%2Cquant-ph%2F0602165%2Cquant-ph%2F0602189%2Cquant-ph%2F0602197%2Cquant-ph%2F0602006%2Cquant-ph%2F0602205%2Cquant-ph%2F0602209%2Cquant-ph%2F0602011%2Cquant-ph%2F0602112%2Cquant-ph%2F0602046%2Cquant-ph%2F0602002%2Cquant-ph%2F0602019%2Cquant-ph%2F0602167%2Cquant-ph%2F0602227%2Cquant-ph%2F0602161%2Cquant-ph%2F0602114%2Cquant-ph%2F0602186%2Cquant-ph%2F0602155%2Cquant-ph%2F0602047%2Cquant-ph%2F0602232%2Cquant-ph%2F0602179%2Cquant-ph%2F0602200%2Cquant-ph%2F0602157%2Cquant-ph%2F0602099%2Cquant-ph%2F0602194%2Cquant-ph%2F0602117%2Cquant-ph%2F0602149%2Cquant-ph%2F0602094%2Cquant-ph%2F0602173%2Cquant-ph%2F0602222%2Cquant-ph%2F0602217%2Cquant-ph%2F0602172%2Cquant-ph%2F0602162%2Cquant-ph%2F0602154%2Cquant-ph%2F0602136%2Cquant-ph%2F0602062%2Cquant-ph%2F0602111%2Cquant-ph%2F0602066%2Cquant-ph%2F0602028%2Cquant-ph%2F0602089%2Cquant-ph%2F0602198%2Cquant-ph%2F0602101%2Cquant-ph%2F0602009%2Cquant-ph%2F0602196%2Cquant-ph%2F0602193%2Cquant-ph%2F0602128%2Cquant-ph%2F0602072%2Cquant-ph%2F0602174%2Cquant-ph%2F0602214%2Cquant-ph%2F0602096%2Cquant-ph%2F0602058%2Cquant-ph%2F0602183%2Cquant-ph%2F0602158%2Cquant-ph%2F0602020%2Cquant-ph%2F0602185%2Cquant-ph%2F0602176%2Cquant-ph%2F0602226&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Watrous had presented the first proof of zero-knowledge property of a proof\nsystem against a quantum verifier. The key of the proof is the construction of\na quantum simulator. In the construction, the 'failure state' is rotated to the\n'success' state by a tricky operation which is initially developped for the\namplification of QMA proof systems.\n  This manuscript presents a new and simpler construction of a simulator. In\nthe construction, we simply amplify the success probability of a classical\nsimulator using Grover's amplification."}, "authors": ["Keiji Matsumoto"], "author_detail": {"name": "Keiji Matsumoto"}, "author": "Keiji Matsumoto", "arxiv_comment": "Talk at TQC 2006 at NTT, Atsugi, Japan", "links": [{"href": "http://arxiv.org/abs/quant-ph/0602186v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/quant-ph/0602186v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "quant-ph", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "quant-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/quant-ph/0602186v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/quant-ph/0602186v1", "journal_reference": null, "doi": null, "fulltext": "arXiv:quant-ph/0602186v1 22 Feb 2006\n\nA simpler proof of zero-knowledge against\nquantum attacks using Grover's amplitude\namplification\nKeiji Matsumoto\nAugust 13, 2018\n\n1\n\nIntroduction\n\nWatrous[2] had presented the first proof of zero-knowledge property of a proof\nsystem against a quantum verifier. The key of the proof is the construction\nof a quantum simulator. In the construction, the 'failure state' is rotated to\nthe 'success' state by a tricky operation which is initially developped for the\namplification of QMA proof systems.\nThis manuscript presents a new and simpler construction of a simulator.\nIn the construction, we simply amplify the success probability of a classical\nsimulator using Grover's amplification.\n\n2\n\nThe Goldreich-Micali-Wigderson Graph Isomorphism Proof System\n\nThe Goldreich-Micali-Wigderson graph isomorphism protocol is a well-known\nexample of a proof system that is perfect zero-knowledge against classical polynomialtime verifiers. In this section it is proved that this protocol is in fact zeroknowledge against polynomial-time quantum verifiers. The method can be extended to several other protocols.\n\n2.1\n\nThe protocol\n\nLet x be a pair of graphs (G0 , G1 ), and L be a set of pairs with G0 \u2243 G1 .\nHereafter, P denotes the prover, and V the verifier.\n(a) P randomly chooses a permutation \u03c4 on the graph, and sends \u03c4 (G0 ) to V .\n(b) V sends a random bit a \u2208 {0, 1} to P .\n(c) P send a permutation \u03c0, and V accepts if \u03c4 (G0 ) = \u03c0(Ga ).\n\n1\n\n\fTo decrease the error probability, (a)-(c) are repeated for polynomially many\ntimes.\nThe quantum description of this classical protocol is as follows. Let V and\nA be the V 's workspace and a qubit which stores output of the simulator at the\nend the step (b), respectively. The register Y stores the message from P to V\nin the step (a). We also denote by W the register for an auxiliary input |\u03c8i.\nThe initial state is\n|\u03c8i |0V i|0A i|0Y i.\nAfter the step (a),\n|\u03c8i h\u03c8| \u2297 |0V i h0V | \u2297 |0A i h0A | \u2297\n\n1 X\n|\u03c4 (G0 )i h\u03c4 (G0 )|\nn!\n\u03c4 \u2208Sn\n\nThe honest verifier will apply Hadamard transform to |0A i and measure A in\nthe step (b),\nX\nX\n1\n|\u03c4 (G0 )i h\u03c4 (G0 )| .\n|aA i haA | \u2297\n|\u03c8i h\u03c8| \u2297 |0V i h0V | \u2297\n2n!\n\u03c4 \u2208Sn\n\na\u2208{0,1}\n\nIn general, however, a verifier will apply an unitary transform UV on W \u2297 V \u2297 A \u2297 Y,\nand measure A.\nX\n1\n|aA i haA | UV (|\u03c8i h\u03c8| \u2297 |0V i h0V | \u2297 |0A i h0A | \u2297 |\u03c4 (G0 )i h\u03c4 (G0 )|) UV\u2020 |aA i haA | .\nn!\n\u03c4 \u2208Sn ,a\u2208{0,1}\n\nAfter this, the step (c) follows, but we omit the description of this part, for this\nstep is easy to simulate once a simulation of the steps (a)-(b) is given.\n\n2.2\n\nA simulator\n\nA classical simulator is constructed as follows. Assume that G0 \u2243 G1 . The\nsimulator randomly chooses b \u2208 {0, 1} and \u03c0 \u2208 Sn , and compute \u03c0(Gb ) which\nmimics P 's first message. Then it applies the operation of V on the simulated\nmessage from P , producing an output a \u2208 {0, 1}, or the message to P . If\na = b, \u03c0 chosen previously can mimic the second message from P to V , and\nthe simulation succeeds. If a 6= b, we \"rewind\", or abort and restart from the\nbeginning. This successfully simulates the single round of GMW protocol with\nprobability 12 , meaning that the simulation succeeds with high probability after\nsome iterations.\nTo simulate the iterations of the single round, the simulator also has to be\nrepeatedly run. Observe that in rewinding, the simulation only has to restart\nfrom the beginning of the present round, with the record of the final state of\nthe previous round being copied in some registers. Otherwise, the simulation\nwould take exponential time. In quantum case, however, this part fails because\nof the no-cloning principle.\n\n2\n\n\fHere we show how to bypass this difficulty: Grover's amplitude amplification\ncan increase the success probability of the simulation of each round up to 1, and\nthus there is no need for rewinding.\nLet us define\nX = V \u2297 A \u2297 Y \u2297 B \u2297 Z,\nwhere Z and B stores random bits specifying a permutation \u03c0 on the graph and\na random bit b, respectively.\nLet us denote by A a unitary operation corresponding to the the classical\nsimulator other than rewinding part,\nA |\u03c8i |0X i =\nX\n1\n\u221a\n(UV |\u03c8i |0V i |0i |\u03c0(Gb )i ) |bi |\u03c0i .\n2n! b\u2208{0,1},\u03c0\u2208S\nn\n\nWe apply amplitude amplification to this operation. Define a unitary transform\nS0\u03c6 , S1\u03c6 in W \u2297 X by\nS0\u03c6\nS1\u03c6\n\n: = (\u03c6 \u2212 1) IW \u2297 |0X i h0X | + I,\n: = (\u03c6 \u2212 1) \u03a0\u03bb + I.\n\nwhere \u03a0 is the projection onto success event,\nX\nIW\u2297V \u2297 |bi hb| \u2297 IY \u2297 |bi hb| \u2297 IZ .\n\u03a0 :=\nb\u2208{0,1}\n\nThese phase factors are chosen according to lemma 3 in [1].\nObserve that a = b occurs with probability 12 , for all the state |\u03c8i because\nb \u2208 {0, 1} is uniformly random, and does not affect the input of UV . This\nassures us the identity\n1\n(1)\nh0X |A\u22121 \u03a0A|0X i = IW .\n2\nMore rigorously, this is true for the following equalities holds for any |\u03c8i:\nk\u03a0A |\u03c8i |0X ik2\n=\n\n=\n=\n\n1\n2n!\n1\n2n!\n\na,b\u2208{0,1},\u03c0\u2208Sn\n\nX\n\n1 X\n2n!\n1 X\n2n!\n\nIW\u2297V \u2297 |ai ha| \u2297 IY \u2297 |ai ha| \u2297 IZ (UV |\u03c8i |0V i |0i |\u03c0(Gb )i ) |bi |\u03c0i\n2\n\nb\u2208{0,1},\u03c0\u2208Sn\n\nIW\u2297V \u2297 |bi hb| \u2297 IY\u2297B\u2297Z (UV |\u03c8i |0V i |0i |\u03c0(Gb )i ) |bi |\u03c0i\n\nX\n\nkIW\u2297V \u2297 hb| \u2297 IY (UV |\u03c8i |0V i |0i |\u03c0(Gb )i )k\n\nX\n\nIW\u2297V \u2297 hb| \u2297 IY UV |\u03c8i |0V i |0i \u03c0\u03c4 b (G0 )\n\nb\u2208{0,1} \u03c0\u2208Sn\n\n=\n\n2\n\nX\n\nb\u2208{0,1} \u03c0\u2208Sn\n\n2\n\n3\n\n\u0001\n\n2\n\n\f=\n\n1 X\n2n!\n\nX\n\n2\n\n\u03c0\u2208Sn b\u2208{0,1}\n\n=\n\nkIW\u2297V \u2297 hb| \u2297 IY (UV |\u03c8i |0V i |0i |\u03c0(G0 )i )k\n\n1\n1 X\n1= ,\n2n!\n2\n\u03c0\u2208Sn\n\nwhere in the third line, \u03c4 (G0 ) = G1 . Using the equation (1), as shortly described, we can explicitely check the following identity\nAS0\u0131 A\u22121 S1\u0131 A |\u03c8i |0X i = (\u0131 \u2212 1)\u03a0A|\u03c8i |0X i .\n\n(2)\n\nMeasure B and Z, and compute \u03c0(Gb ), and store its result some register, say\nZ \u2032 . Trace out the register. Then, the final state is\nX\n1\n|aA i haA | UV (|\u03c8i h\u03c8| \u2297 |0V i h0V | \u2297 |0A i h0A | \u2297 |\u03c0(Ga )i h\u03c0(Ga )|) UV\u2020 |aA i haA |\nn!\n\u03c0\u2208Sn ,a\u2208{0,1}\n\n\u2297|\u03c0(Ga )iZ \u2032 Z \u2032 h\u03c0(Ga )|\nX\n1\n=\n|aA i haA | UV (|\u03c8i h\u03c8| \u2297 |0V i h0V | \u2297 |0A i h0A | \u2297 |\u03c4 (G0 )i h\u03c4 (G0 )|) UV\u2020 |aA i haA |\nn!\n\u03c4 \u2208Sn ,a\u2208{0,1}\n\n\u2297|\u03c4 (G0 )iZ \u2032 Z \u2032 h\u03c4 (G0 )| .\n\nThis shows that \u03c0(Gb ), W \u2297 V \u2297 A \u2297 Y, and Z mimics the message from P to\nV in the step (a), the V 's final state in the step (b) and the message from V to\nP , and the message from P to V in the step (c), respectively.\nBelow, we use the block representation in which |\u03c8i |0X i writes\n\u0014\n\u0015\n|\u03c8i\n|\u03c8i |0X i =\n.\n0\nIn that representation,\n\n\u22121\n\nA\n\n\u03a0A =\nS0\u0131\n\nTherefore,\n=\n=\n=\n=\n=\n=\n\n=\n\n\u03a0\u2020A,12\n\u03a0A,12\n\u2217\n\u0015\n\u0014\n\u0131IW 0\n.\n0\nIX\n\n\u0014\n\n1\n2 IW\n\n\u0015\n\n,\n\nAS1\u0131 * A\u22121 S0\u0131 A |\u03c8i |0X i\n\u0001\nAS1\u0131 * (\u0131 \u2212 1) A\u22121 \u03a0A + I |\u03c8i |0X i\n\u0014\n\u0001\n\u0015\n\u0131\u22121\n2 + 1 |\u03c8i\nAS1\u0131\n(\u0131 \u2212 1) PA,12 |\u03c8i\n\u0001\n\u0014\n\u0015\n\u0131 \u0131\u22121\n2 + 1 |\u03c8i\nA\n(\u0131 \u2212 1) \u03a0A,12 |\u03c8i\n\u0015\n\u0014\n1\n2 |\u03c8i\n(\u0131 \u2212 1)A\n\u03a0A,12 |\u03c8i\n(\u0131 \u2212 1)AA\u22121 \u03a0A|\u03c8i |0X i\n(\u0131 \u2212 1)\u03a0A|\u03c8i |0X i .\n4\n\n\fThis is our assertion (2).\n\n2.3\n\nWatrous's simulator revisited\n\nInstead of doing Grover's amplitude amplification, we can perform the measurement \u03a0 to the state A|\u03c8i|0X i. If the success event is observed, we are done.\nThis occurs with probability 12 . Otherwise, the state of the system colllapses\n\u221a\n\u22121 \u22121\nto 2(I \u2212\n\u221a \u03a0)A|\u03c8i|0X i, and AS0 A , or reflection about A|\u03c8i|0X i maps this\nstate to 2\u03a0A|\u03c8i|0X i, which corresponds to success.\nThis simulation is the same as the one presented in [2], although the presentation is different.\n\n3\n\nWhen success probability is not\n\n3.1\n\n1\n2\n\nAmplification operations\n\nThe construction in the previous section seemingly depends on the fact that the\nsuccess probability equals 12 . In the section, we show that if we have\nA\u22121 \u03a0A =\n\n\u0014\n\n\u03bbIW\n\u03a0A,12\n\n\u03a0\u2020A,12\n\u03a0A,22\n\n\u0015\n\nour method works for any success probability \u03bb, if proper phase shifts are introduced. Especially, we have to check that repetition of the amplification works\nin the same as the case where the auxiliary input |\u03c8i is absent.\nThen, the identity\n\u00012\nA\u22121 \u03a0A\n\"\n\u03bb2 IW + \u03a0\u2020A,12 \u03a0A,12\n=\n\u03bb\u03a0A,12 + \u03a0A,22 \u03a0A,12\n\n\u03bb\u03a0\u2020A,12 + \u03a0\u2020A,12 \u03a0A,22\n\u03a0A,12 \u03a0\u2020A,12 + \u03a02A,22\n\n#\n\n= A\u22121 \u03a0A\nimplies\n\u0001\n\u03bb2 \u2212 \u03bb IW + \u03a0\u2020A,12 \u03a0A,12\n\n(\u03bb \u2212 1) \u03a0A,12 + \u03a0A,22 \u03a0A,12\n\n\u03a0A,12 \u03a0\u2020A,12 + \u03a02A,22\n\n=\n\n0\n\n=\n\n0\n\n=\n\n\u03a0A,22 .\n\nDefine also\n\u0014\n\u0015\n1\n1\n\u03bb |\u03c8i\n|succi : = \u221a \u03a0A |\u03c8i |0X i = \u221a A\n,\n\u03a0A,12 |\u03c8i\n\u03bb\n\u03bb\n\u0014\n\u0015\n1\n1\n(1 \u2212 \u03bb) |\u03c8i\n|f aili : = \u221a\n(I \u2212 \u03a0) A |\u03c8i |0X i = \u221a\nA\n.\n\u2212\u03a0A,12 |\u03c8i\n1\u2212\u03bb\n1\u2212\u03bb\n5\n\n\fThen we have\n\n=\n=\n=\n=\n=\n\n=\n=\n=\n=\n=\n\nAS0\u03c6 A\u22121 S1\u03c6 |succi = AS0\u03c6 A\u22121 S1\u03c6 A * A\u22121 |succi\n\u0015\u0014\n\u0014\n\u0015\nA\n\u03bb |\u03c8i\n\u03c6 {\u03bb (\u03c6 \u2212 1) + 1} IW\n\u03c6(\u03c6 \u2212 1)\u03a0\u2020A,12\n\u221a\n\u03a0A,12 |\u03c8i\n(\u03c6 \u2212 1)\u03a0A,12\n(\u03c6 \u2212 1) \u03a0A,22 + I\n\u03bb\ni\n#\n\" h\n\u2020\nA\n\u03bb\u03c6 {\u03bb (\u03c6 \u2212 1) + 1} + \u03c6(\u03c6 \u2212 1)\u03a0A,12 \u03a0A,12 |\u03c8i\n\u221a\n\u03bb [\u03bb(\u03c6 \u2212 1)\u03a0A,12 + (\u03c6 \u2212 1) \u03a0A,22 \u03a0A,12 + \u03a0A,12 ] |\u03c8i\n\u0015\n\u0014 \u0002\n\u0001\n\u0003\nA\n\u03bb\u03c6 {\u03bb (\u03c6 \u2212 1) + 1} \u2212 \u03bb2 \u2212 \u03bb \u03c6(\u03c6 \u2212 1) |\u03c8i\n\u221a\n[\u03bb(\u03c6 \u2212 1) \u2212 (\u03bb \u2212 1) (\u03c6 \u2212 1) + 1] \u03a0A,12 |\u03c8i\n\u03bb\n\" \u221a\n#\n\u0014\n\u0015\nA\n\u03bb\u03c6\u03c6 |\u03c8i\n\u03bb\u03c6\u03c6 |\u03c8i\n\u221a\n= A \u221a\u03c6\n\u03a0\n|\u03c8i\n\u03bb \u03c6\u03a0A,12 |\u03c8i\n\u03bb A,12\np\n\u03c6 (\u03bb\u03c6 + 1 \u2212 \u03bb) |succi \u2212 \u03c6 \u03bb (1 \u2212 \u03bb) (1 \u2212 \u03c6) |f aili\n\nAS0\u03c6 A\u22121 S1\u03c6 |f aili = AS0\u03c6 A\u22121 S1\u03c6 A * A\u22121 |f aili\n\u0015\u0014\n\u0014\n\u0015\n\u2020\nA\n(1 \u2212 \u03bb) |\u03c8i\n\u03c6 {\u03bb (\u03c6 \u2212 1) + 1} IW\n\u03c6(\u03c6 \u2212 1)PA,12\n\u221a\n\u2212PA,12 |\u03c8i\n(\u03c6 \u2212 1)PA,12\n(\u03c6 \u2212 1) PA,22 + I\n1\u2212\u03bb\n#\ni\n\" h\n\u2020\nA\n(1 \u2212 \u03bb) \u03c6 {\u03bb (\u03c6 \u2212 1) + 1} \u2212 \u03c6(\u03c6 \u2212 1)PA,12\nPA,12 |\u03c8i\n\u221a\n1 \u2212 \u03bb [(1 \u2212 \u03bb) (\u03c6 \u2212 1)PA,12 \u2212 (\u03c6 \u2212 1) PA,22 PA,12 \u2212 PA,12 ] |\u03c8i\n\u0015\n\u0014 \u0002\n\u0001\n\u0003\nA\n(1 \u2212 \u03bb) \u03c6 {\u03bb (\u03c6 \u2212 1) + 1} + \u03bb2 \u2212 \u03bb \u03c6(\u03c6 \u2212 1) |\u03c8i\n\u221a\n[(1 \u2212 \u03bb) (\u03c6 \u2212 1) + (\u03bb \u2212 1) (\u03c6 \u2212 1) \u2212 1] PA,12 |\u03c8i\n1\u2212\u03bb\n\u0014 \u221a\n\u0015\n1 \u2212 \u03bb\u03c6 |\u03c8i\nA\n1\n\u2212 \u221a1\u2212\u03bb\n\u03a0A,12 |\u03c8i\np\n\u2212 \u03bb (1 \u2212 \u03bb) (1 \u2212 \u03c6) |succi + (\u03bb + (1 \u2212 \u03bb) \u03c6) |f aili .\n\nTherefore, the linear space spanned by {|succi , |f aili} is invariant by the action\nof AS0\u03c6 A\u22121 S1\u03c6 . Especially, in \u03c6 = \u03c6 = \u22121 case,\np\n\u2212AS0\u03c6 A\u22121 S1\u03c6 |succi = (1 \u2212 2\u03bb) |succi \u2212 2 \u03bb (1 \u2212 \u03bb) |f aili\np\n\u2212AS0\u03c6 A\u22121 S1\u03c6 |f aili = 2 \u03bb (1 \u2212 \u03bb) |succi + (1 \u2212 2\u03bb) |f aili\n\nand \u2212AS0\u03c6 A\u22121 S1\u03c6 corresponds to one step of Grover's search. Therefore, trivially, the repetition of the our amplification works in the same manner as the\ncase where the auxiliary input is absent. Also, by choosing the phase factors\nproperty, we can control the speed of the amplification as in [1].\n\n3.2\n\nComputational zero-knowledge proof systems for NP\n\nAs is mentioned in subsection 4.2 in [2], a zero-knowledge proof system for\nGraph 3-Coloring (G3C) yields a zero-knowledge proof for any problem in NP.\n[2] presents a simulator for a classical proof system which is secure against attack\n6\n\n\fby any quantum verifier. In this subsection, we present a new construction of\nsimulator for this proof system.\nIn the construction of [2], the essential part is the amplification of the success\n1\nprobability of a simulator A which succeeds with probability m\nwith m being a\npolynomially-bounded function of the input length n.\nWe can construct such an amplification using Grover's amplitude amplification as is studied in the previous subsection.\nOn the other hand, the amplification used in [2] can be described in the\nlanguage of Grover's amplitude amplification as follows. First, apply A to the\ninitial state |\u03c8i|0X i , and apply the measurement \u03a0. If the success event is\nobserved, the simulation will be successful, and this success event occurs with\n1\nthe probability m\n. Otherwise, the state collapses to |f aili, at which point the\nreflection operator AS0\u22121 A\u22121 is applied. This changes the state to\nr\nr\n2\n2\n|succi + 1 \u2212 |f aili ,\nm\nm\nand the measurement \u03a0 is applied to this, producing |succi with the probability\n2\nm . The process continues in this way, with each iteration yielding a successful\n1\n.\nsimulation with probability at least m\n\nReferences\n[1] G. Brassard, P. Hoyer, and A. Tapp, \"Quantum Counting\", Proc. of\n25th International Colloquium on Automata, Languages, and Programming\n(ICALP'98), LNCS 1443, 820-831, 1998, quant-ph/9805082\n[2] J. Watrous, \"Zero-knowledge against quantum attacks\", quant-ph/0511020,\n2005\n\n7\n\n\f"}