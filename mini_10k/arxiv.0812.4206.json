{"id": "http://arxiv.org/abs/0812.4206v1", "guidislink": true, "updated": "2008-12-22T14:48:24Z", "updated_parsed": [2008, 12, 22, 14, 48, 24, 0, 357, 0], "published": "2008-12-22T14:48:24Z", "published_parsed": [2008, 12, 22, 14, 48, 24, 0, 357, 0], "title": "How Many Attackers Can Selfish Defenders Catch?", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0812.4567%2C0812.3325%2C0812.1627%2C0812.1874%2C0812.0036%2C0812.0311%2C0812.1656%2C0812.4370%2C0812.1311%2C0812.4981%2C0812.4859%2C0812.2944%2C0812.3105%2C0812.0423%2C0812.4479%2C0812.1939%2C0812.5077%2C0812.3839%2C0812.2322%2C0812.5035%2C0812.1274%2C0812.4828%2C0812.3709%2C0812.1407%2C0812.0388%2C0812.3497%2C0812.1932%2C0812.0090%2C0812.0236%2C0812.1280%2C0812.4801%2C0812.1812%2C0812.4127%2C0812.3573%2C0812.0173%2C0812.4352%2C0812.2214%2C0812.2903%2C0812.3209%2C0812.1585%2C0812.4333%2C0812.4770%2C0812.3022%2C0812.0102%2C0812.2232%2C0812.4768%2C0812.1988%2C0812.4711%2C0812.3247%2C0812.3494%2C0812.4900%2C0812.1049%2C0812.1757%2C0812.3509%2C0812.3506%2C0812.2013%2C0812.3881%2C0812.0361%2C0812.0965%2C0812.3491%2C0812.0575%2C0812.0475%2C0812.4474%2C0812.0305%2C0812.3166%2C0812.3134%2C0812.0118%2C0812.4449%2C0812.1061%2C0812.4830%2C0812.0963%2C0812.2268%2C0812.4192%2C0812.4206%2C0812.3273%2C0812.0793%2C0812.1463%2C0812.4699%2C0812.0391%2C0812.4991%2C0812.1714%2C0812.3400%2C0812.2880%2C0812.0597%2C0812.4438%2C0812.5057%2C0812.0298%2C0812.5074%2C0812.1457%2C0812.1802%2C0812.0107%2C0812.4161%2C0812.0504%2C0812.2755%2C0812.3884%2C0812.4342%2C0812.0602%2C0812.3005%2C0812.0028%2C0812.0756%2C0812.0831&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "How Many Attackers Can Selfish Defenders Catch?"}, "summary": "In a distributed system with {\\it attacks} and {\\it defenses,} both {\\it\nattackers} and {\\it defenders} are self-interested entities. We assume a {\\it\nreward-sharing} scheme among {\\it interdependent} defenders; each defender\nwishes to (locally) maximize her own total {\\it fair share} to the attackers\nextinguished due to her involvement (and possibly due to those of others). What\nis the {\\em maximum} amount of protection achievable by a number of such\ndefenders against a number of attackers while the system is in a {\\it Nash\nequilibrium}? As a measure of system protection, we adopt the {\\it\nDefense-Ratio} \\cite{MPPS05a}, which provides the expected (inverse) proportion\nof attackers caught by the defenders. In a {\\it Defense-Optimal} Nash\nequilibrium, the Defense-Ratio is optimized.\n  We discover that the possibility of optimizing the Defense-Ratio (in a Nash\nequilibrium) depends in a subtle way on how the number of defenders compares to\ntwo natural graph-theoretic thresholds we identify. In this vein, we obtain,\nthrough a combinatorial analysis of Nash equilibria, a collection of trade-off\nresults:\n  - When the number of defenders is either sufficiently small or sufficiently\nlarge, there are cases where the Defense-Ratio can be optimized. The\noptimization problem is computationally tractable for a large number of\ndefenders; the problem becomes ${\\cal NP}$-complete for a small number of\ndefenders and the intractability is inherited from a previously unconsidered\ncombinatorial problem in {\\em Fractional Graph Theory}.\n  - Perhaps paradoxically, there is a middle range of values for the number of\ndefenders where optimizing the Defense-Ratio is never possible.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0812.4567%2C0812.3325%2C0812.1627%2C0812.1874%2C0812.0036%2C0812.0311%2C0812.1656%2C0812.4370%2C0812.1311%2C0812.4981%2C0812.4859%2C0812.2944%2C0812.3105%2C0812.0423%2C0812.4479%2C0812.1939%2C0812.5077%2C0812.3839%2C0812.2322%2C0812.5035%2C0812.1274%2C0812.4828%2C0812.3709%2C0812.1407%2C0812.0388%2C0812.3497%2C0812.1932%2C0812.0090%2C0812.0236%2C0812.1280%2C0812.4801%2C0812.1812%2C0812.4127%2C0812.3573%2C0812.0173%2C0812.4352%2C0812.2214%2C0812.2903%2C0812.3209%2C0812.1585%2C0812.4333%2C0812.4770%2C0812.3022%2C0812.0102%2C0812.2232%2C0812.4768%2C0812.1988%2C0812.4711%2C0812.3247%2C0812.3494%2C0812.4900%2C0812.1049%2C0812.1757%2C0812.3509%2C0812.3506%2C0812.2013%2C0812.3881%2C0812.0361%2C0812.0965%2C0812.3491%2C0812.0575%2C0812.0475%2C0812.4474%2C0812.0305%2C0812.3166%2C0812.3134%2C0812.0118%2C0812.4449%2C0812.1061%2C0812.4830%2C0812.0963%2C0812.2268%2C0812.4192%2C0812.4206%2C0812.3273%2C0812.0793%2C0812.1463%2C0812.4699%2C0812.0391%2C0812.4991%2C0812.1714%2C0812.3400%2C0812.2880%2C0812.0597%2C0812.4438%2C0812.5057%2C0812.0298%2C0812.5074%2C0812.1457%2C0812.1802%2C0812.0107%2C0812.4161%2C0812.0504%2C0812.2755%2C0812.3884%2C0812.4342%2C0812.0602%2C0812.3005%2C0812.0028%2C0812.0756%2C0812.0831&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "In a distributed system with {\\it attacks} and {\\it defenses,} both {\\it\nattackers} and {\\it defenders} are self-interested entities. We assume a {\\it\nreward-sharing} scheme among {\\it interdependent} defenders; each defender\nwishes to (locally) maximize her own total {\\it fair share} to the attackers\nextinguished due to her involvement (and possibly due to those of others). What\nis the {\\em maximum} amount of protection achievable by a number of such\ndefenders against a number of attackers while the system is in a {\\it Nash\nequilibrium}? As a measure of system protection, we adopt the {\\it\nDefense-Ratio} \\cite{MPPS05a}, which provides the expected (inverse) proportion\nof attackers caught by the defenders. In a {\\it Defense-Optimal} Nash\nequilibrium, the Defense-Ratio is optimized.\n  We discover that the possibility of optimizing the Defense-Ratio (in a Nash\nequilibrium) depends in a subtle way on how the number of defenders compares to\ntwo natural graph-theoretic thresholds we identify. In this vein, we obtain,\nthrough a combinatorial analysis of Nash equilibria, a collection of trade-off\nresults:\n  - When the number of defenders is either sufficiently small or sufficiently\nlarge, there are cases where the Defense-Ratio can be optimized. The\noptimization problem is computationally tractable for a large number of\ndefenders; the problem becomes ${\\cal NP}$-complete for a small number of\ndefenders and the intractability is inherited from a previously unconsidered\ncombinatorial problem in {\\em Fractional Graph Theory}.\n  - Perhaps paradoxically, there is a middle range of values for the number of\ndefenders where optimizing the Defense-Ratio is never possible."}, "authors": ["Marios Mavronicolas", "Burkhard Monien", "Vicky Papadopoulou"], "author_detail": {"name": "Vicky Papadopoulou"}, "author": "Vicky Papadopoulou", "links": [{"href": "http://arxiv.org/abs/0812.4206v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0812.4206v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.GT", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.GT", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0812.4206v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0812.4206v1", "arxiv_comment": null, "journal_reference": null, "doi": null, "fulltext": "How Many Attackers Can Selfish Defenders Catch?\u2217\nMarios Mavronicolas\u2020\n\nBurkhard Monien\u2021\n\nVicky G. Papadopoulou\u00a7\n\narXiv:0812.4206v1 [cs.GT] 22 Dec 2008\n\n(October 30, 2018)\n\n\u2217\n\nA preliminary version of this work appeared in the CD-ROM Proceedings of the 41st Hawaii International\nConference on System Sciences, Track on Software Technology, Minitrack on Algorithmic Challenges in Emerging\nApplications of Computing, January 2008. This work has been partially supported by the IST Program of the\nEuropean Union under contract numbers IST-2004-001907 (DELIS) and 15964 (AEOLUS).\n\u2020\nDepartment of Computer Science, University of Cyprus, Nicosia CY-1678, Cyprus. Part of this work was performed while this author was visiting the Faculty of Computer Science, Electrical Engineering and Mathematics,\nUniversity of Paderborn. Email mavronic@cs.ucy.ac.cy\n\u2021\nFaculty of Computer Science, Electrical Engineering and Mathematics, University of Paderborn, 33102 Paderborn, Germany. Part of this work was performed while this author was visiting the Department of Computer\nScience, University of Cyprus. Email bm@upb.de\n\u00a7\nDepartment of Computer Science and Engineering, European University Cyprus, Nicosia 1516, Cyprus. Part\nof this work was performed while this author was visiting the Faculty of Computer Science, Electrical Engineering\nand Mathematics, University of Paderborn. Email v.papadopoulou@euc.ac.cy\n\n\fAbstract\nIn a distributed system with attacks and defenses, both attackers and defenders are selfinterested entities. We assume a reward-sharing scheme among interdependent defenders;\neach defender wishes to (locally) maximize her own total fair share to the attackers extinguished due to her involvement (and possibly due to those of others). What is the maximum\namount of protection achievable by a number of such defenders against a number of attackers while the system is in a Nash equilibrium? As a measure of system protection, we adopt\nthe Defense-Ratio [24], which provides the expected (inverse) proportion of attackers caught\nby the defenders. In a Defense-Optimal Nash equilibrium, the Defense-Ratio is optimized.\nWe discover that the possibility of optimizing the Defense-Ratio (in a Nash equilibrium)\ndepends in a subtle way on how the number of defenders compares to two natural graphtheoretic thresholds we identify. In this vein, we obtain, through a combinatorial analysis\nof Nash equilibria, a collection of trade-off results:\n\u2022 When the number of defenders is either sufficiently small or sufficiently large, there\nare cases where the Defense-Ratio can be optimized. The optimization problem is\ncomputationally tractable for a large number of defenders; the problem becomes N Pcomplete for a small number of defenders and the intractability is inherited from a\npreviously unconsidered combinatorial problem in Fractional Graph Theory.\n\u2022 Perhaps paradoxically, there is a middle range of values for the number of defenders\nwhere optimizing the Defense-Ratio is never possible.\n\n2\n\n\f1\n\nIntroduction\n\n1.1\n\nThe Model and its Rationale\n\nSafety and security are key issues for the design and operation of a distributed system; see, e.g.,\n[1] or [6, Chapter 7]. Indeed, with the unprecedented advent of the Internet, there is a growing\ninterest to formalize, design and analyze distributed systems prone to malicious attacks and\n(non-malicious) defenses. A new dimension stems from the fact that Internet servers and clients\nare controlled by selfish agents whose interest is the local maximization of their own benefits\nrather than the optimization of global performance [2, 5, 11, 12, 13]. So, it is a challenging task\nto formalize and analyze the simultaneous impact of selfish and malicious behavior of Internet\nagents (cf. [17]).\nIn this work, a distributed system is modeled as a graph G = (V, E); nodes represent the\nhosts and edges represent the links. An attacker represents a virus; it is a malicious client\nthat targets a host to destroy. A defender is a non-malicious server representing the antivirus\nsoftware implemented on a subnetwork in order to protect all hosts thereby connected. Here is\nthe rationale and motivation for these modeling choices:\n\u2022 Associating attacks with nodes makes sense since computer security attacks are often\ndirected to individual hosts such as commercial and public sector entities.\n\u2022 Associating defenses with edges is motivated by Network Edge Security [20]; this is a\nrecently proposed, distributed firewall architecture where antivirus software, rather than\nbeing statically installed and licensed at a host, is implemented by a distributed algorithm\nrunning on a subnetwork. Such distributed implementations are attractive since they offer\nincreased fault-tolerance and the benefit of sharing the licensing costs to the hosts.\nWe focus here on the simplest possible case where the subnetwork is just a single link; a\nprecise understanding of the mathematical pitfalls of attacks and defenses for this simplest\ncase is a necessary prerequisite to mastering the general case.\nIn reality, malicious attackers are independent; each (financially motivated) attacker tries to\nmaximize on her own the amount of harm it causes during her lifetime (cf. [30]). Hence, it is\nnatural to model each attacker as a strategic player seeking to maximize the chance of escaping\nthe antivirus software; so, the strategy of one attacker does not (directly) affect the payoff of\nanother. In contrast, there are at least three approaches to modeling the defenses:\n\u2022 Defenses are not strategic; this approach would imply the (centralized) optimization problem of computing locations for the defenders that maximize the system protection given\nthat attackers are strategic.\n3\n\n\f\u2022 Defenses are strategic and they cooperate to maximize the number of trapped viruses. This\nis modeled by assuming a single (strategic) defender, which centrally chooses multiple\nlinks. This approach has been pursued in [10].\n\u2022 Defenses are strategic but non-cooperative; so, each defender still tries to maximize the\nnumber of trapped viruses she catches, while competing with the other defenders.\nWe have chosen to adopt the third approach. Our choice of approach is motivated as follows:\n\u2022 In a large network, the defense policies are independent and decentralized. Hence, it may\nbe not so realistic to assume that a centralized (even selfish) entity coordinates all defenses.\n\u2022 There are financial incentives offered by hosts to defense mechanisms on the basis of the\nnumber of sustained attacks; consider, for example, the following scenaria:\n\u2013 Prices for antivirus software are determined through recommendation systems, which\ncollect data from networks where scrutinized hosts were witnessed. Such price incentives induce a competition among defenders, resulting to non-cooperation.\n\u2013 Think of a network owner interested in maximizing the network protection. Towards\nthat end, the owner has subcontracted the protection task to a set of independent,\ndeployable agents. Clearly, each such agent tries to optimize the protection she offers\nin order to increase her reward; again, this manifests non-cooperation.\nWe materialize the assumption that defenses are independent and non-cooperative on the\nbasis of an intuitive reward-sharing scheme: Whenever more than one colocated defenders are\nextinguishing the attacker(s) targeting a host, each defender will be rewarded with the fair\nshare of the number of attackers extinguished. So, each defender is modeled as a strategic\nplayer seeking to maximize her total fair share to the number of extinguished attackers.\nWe assume two selfish species with \u03b1 attackers and \u03b4 defenders; both species may use mixed\nstrategies. Note that \u03b4 is proportional to the real cost of purchasing and installing several units\nof (licensed) antivirus software. The very special but yet highly non-trivial case with a single\ndefender was originally introduced in [24] and further studied in [10, 21, 22, 23]. In a Nash\nequilibrium [26, 27], no player can unilaterally increase her (expected) utility.\nTo evaluate Nash equilibria, we employ the Defense-Ratio; this is the ratio of the optimum\nnumber \u03b1 over the expected number of attackers extinguished by the defenders (cf. [21, 22]).\nMotivated by best-case Nash equilibria and the Price of Stability [3], we introduce Defensen\no\n|V |\nOptimal Nash equilibria where the Defense-Ratio attains the value max 1,\n(Definition\n2\u03b4\n6.1); we choose this value since we observe that it is a (tight) lower bound on Defense-Ratio\n4\n\n\f(Corollary 6.2). (Contrast Defense-Optimal Nash equilibria and the smallest possible DefenseRatio to worst-case Nash equilibria and the Price of Anarchy from the seminal work of Koutsoupias and Papadimitriou [16].) A Defense-Optimal graph (for a given \u03b4) is one that admits a\nDefense-Optimal Nash equilibrium.\n\n1.2\n\nContribution\n\nWe are interested in the possibility of achieving, and the complexity of computing, a DefenseOptimal Nash equilibrium for a given number of defenders \u03b4. We discover that this possibility\nand the associated complexity depend on \u03b4 in a quantitatively subtle way: They are determined\n|V |\nby two graph-theoretic thresholds for \u03b4, namely 2 and \u03b2 \u2032 (G) (the size of a Minimum Edge\n|V |\nCover). (Recall that 2 \u2264 \u03b2 \u2032 (G).)\nOur chief tool is a combinatorial characterization of the associated Nash equilibria we obtain (Proposition 5.1). For Pure Nash equilibria where both species use pure strategies, this\ncharacterization yields some interesting necessary graph-theoretic conditions for Nash equilibria (Proposition 5.9). Furthermore, this characterization yields some sufficient conditions for\nDefense-Optimal Nash equilibria (Theorems 6.3 and 6.5).\nOur end findings are as follows:\n|V |\n\u2022 When either \u03b4 \u2264 2 or \u03b4 \u2265 \u03b2 \u2032 (G), there are cases allowing for a Defense-Optimal Nash\nequilibrium.\n\u0012\n\u0013\n|V |\n\u2013 The case of few defenders with \u03b4 \u2264 2 : We provide a combinatorial characteri-\n\nzation of Defense-Optimal graphs (Theorem 7.4), which points out an interesting\nconnection to Fractional (Perfect) Matchings [29, Chapter 2]. Roughly speaking,\n\nthese graphs make a strict subset of the class of graphs with a Fractional Perfect\n|V |\nMatching: for a Defense-Optimal graph, and assuming that \u03b4 \u2264 2 , it is possible\nto partition some Fractional Perfect Matching of it into \u03b4 smaller, vertex-disjoint\nFractional Perfect Matchings so that the total weight (inherited from the original\n|V |\n(Theorem 7.4). Call such\nFractional Perfect Matching) in each partite is equal to\n2\u03b4\na Fractional Perfect Matching a \u03b4-Partitionable Fractional Perfect Matching; this is\na previously unconsidered, combinatorial concept in Fractional Graph Theory [29].\nWe prove that the recognition problem for the class of graphs with a \u03b4-Partitionable\nFractional Perfect Matching is N P-complete (Corollary 2.19); this intractability\nresult holds for an arbitrary value \u0012of \u03b4. Hence,\n\u0013 so is the decision problem for a\n|V |\nDefense-Optimal Nash equilibrium for \u03b4 \u2264 2\n(Corollary 7.7). To establish the\n5\n\n\fN P-completeness of the recognition problem, we develop some techniques for the reduction of Fractional (Perfect) Matchings (Section 2.3); these may be of independent\ninterest.\nWe note that the recognition problem for the class of graphs with a \u03b4-Partitionable\nFractional Perfect Matching simultaneously generalizes a tractable and an intractable\nrecognition problem: the first one concerns the class of graphs with a Perfect Matching [7], while the second concerns the class of graphs whose vertex set can be partitioned into triangles [9, GT11].\nA further interesting number-theoretic consequence of\ncharacteri\u0012 the combinatorial\n\u0013\n|V |\nzation we have derived for Defense-Optimal graphs for \u03b4 \u2264 2\nis that \u03b4 divides\n\n|V | in a Defense-Optimal graph (Corollary 7.5).\n\nOn the positive side, we identify another restriction of the class of graphs with a\nFractional Perfect Matching that are Defense-Optimal in certain, well-characterized\ncases (Theorem 7.8); these are the graphs with a Perfect Matching.\n\u2013 The case of too many defenders (with \u03b4 \u2265 \u03b2 \u2032 (G)): We identify two cases where there\nare Defense-Optimal Nash equilibria with a special structure, namely the vertexbalanced Nash equilibria (Definition 9.1); their structure enables their polynomial\ntime computation (Theorems 9.2 and 9.5). The two corresponding algorithms rely\non the efficient computation of Minimum Edge Cover; the second algorithm requires\nsome relation between \u03b4 and \u03b1 (namely, that 2\u03b4 divides \u03b1).\n|V |\n\u2022 The case of many defenders (with 2 < \u03b4 < \u03b2 \u2032 (G)): We provide a combinatorial proof\n|V |\nthat there is no Defense-Optimal graph for 2 < \u03b4 < \u03b2 \u2032 (G) (Theorem 8.1). This is\n\u0012\n\u0013\n|V |\nsomehow paradoxical since with fewer defenders \u03b4 \u2264 2 , we already identified cases\nwith a Defense-Optimal Nash equilibrium. However, since the Defense-Ratio in a Defense|V |\nOptimal Nash equilibrium has a transition around the value \u03b4 = 2 , this paradox may\nnot be wholly surprising.\n\nOur techniques have identified several new classes of graphs for any arbitrary pair of values\nof \u03b4 and \u03b1, such as graphs with \u03b4-Partitionable Fractional Perfect Matching, Defense-Optimal\ngraphs and Pure graphs (which admit Pure Nash equilibria); each such class was defined to\nsupport the existence of some Nash equilibria with a particular structure (for example, DefenseOptimal Nash equilibrium or Pure Nash equilibrium). Our results have revealed a fine structure\namong these classes, which is summarized in Figure 1.\n\n6\n\n\f\u001a\u001b\u001c \u001d\u001e !\"#% &(),\n\n-/0123456 789:\n\n\u0001 \u0002\u0003\u0004\u0005 \u0006\u0007\b\n\n\u000e\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016\u0017\u0018\n\n\u00e9\u00ea\u00eb\u00ec\u00ed\u00ee\u00ef\u00f0\u00f1\u00f2\u00f3\u00f4\u00f5\u00f6\u00f7\u00f8 \u00f9\u00fa\u00fb\u00fc\u00fd\u00fe\n\n\u0019\u001a\u001b\u001c\u001d\u001e\u001f !\" #$%&'() *+,-./01\n\n\u0086\u0087\u0088\u0089\u008a\u008b \u008c\u008d\u008e\n\n\u0001\u0003\n\n\u00a3\u00a4\u00a5\u00a6\u00a7 \u0308\u00a9a\u00ab\u00ac- \u00ae \u0304\u00b0\n\n\u0099\u009a\u009b\u009c\u009d\u009e\u009f\n\n\u00a1\u00a2\n\nwxy z{|}~\u007f\u0080 \u0081\u0082\u0083\u0084\n\n\u0002\n\n\u00ff\n\n\u00d1\u00d2\u00d3\u00d4\u00d5\u00d6\u00d7 \u00d8\u00d9\u00da\n\nZ[\\] ^_`abc\n\n23456789:;<=>?@ ABCDEF\n\n\u00db\u00dc\u00dd\u00dess\u00e0\u00e1\u00e2\u00e3\u00e4\u00e5 ae\u00e7\u00e8\n\ndefghijklmnop qrstuv\n1\u204423\u20444\u00bf\u00c0\u00c1\u00c2\u00c3 \u00c4\u00c5AE\n\u008f\u0090\u0091\u0092\u0093\u0094\u0095 \u0096\u0097\u0098\n\n\u00b123  \u0301\u03bc\u00b6* \u03271o \u00bb1\u20444\n\n\u00c7\u00c8\u00c9\u00ca\u00cb\u00cc\u00cd \u00ce\u00cf\u00d0\nGHIJKLMNOPQRS TUVWXY\n\n\u0004\u0005\u0006\u0007\b\n\u000e '$+\n\u001f.\u000f\u0010\u0011\u0012\u0013\u0014\u0015\u0016 \u0017\u0018\u0019*\n\nFigure 1: Some inclusion relationships among the graph classes associated with Nash equilibria\nwe have introduced. A directed edge from class C1 to class C2 indicates that C1 \u2286 C2 ; a condition\non the edge indicates the condition under which the inclusion holds. Clouded directed edges\nindicate inclusions that have been demonstrated to be non-strict.\n\n7\n\n\f1.3\n\nRelated Work and Comparison\n\nWe emphasize that the assumption of \u03b4 > 1 defenders has required a far more challenging\ncombinatorial and graph-theoretic analysis than those used for the case of a single defender\nin [10, 21, 22, 23, 24]. Hence, we view this work as a major generalization of the work in [10,\n21, 22, 23, 24] towards the more realistic case of \u03b4 > 1 defenders.\nThe notion of Defense-Ratio generalizes a corresponding definition from [21, Section 3.4] to\nthe case of \u03b4 > 1 defenders. The special case where \u03b4 = 1 of Theorem 7.4 was considered in [22,\nCorollary 2]; this case allowed for a polynomial time algorithm to decide the existence of (and\ncompute) a Defense-Optimal Nash equilibrium by reduction to the recognition problem for a\ngraph with a Fractional Perfect\nMatching. In contrast,\nthe decision problem for a Defense\u0010\n\u0011\n|V |\nOptimal Nash equilibrium for an arbitrary \u03b4 \u2264 2 is N P-complete (Corollary 7.7).\nSchechter and Smith [28] considered the complementary question of determining the mini-\n\nmum number of defenders to catch a single attacker in a related model of economic threats.\n\n1.4\n\nRoad Map\n\nThe rest of this paper is organized as follows. Section 2 collects together some background and\npreliminaries from Graph Theory. A preliminary combinatorial lemma is formulated and proved\nin Section 3. Section 4 presents the game-theoretic framework. The combinatorial structure of\nthe associated Nash equilibria is treated in Section 5. Section 6 considers Defense-Optimal Nash\nequilibria. Sections 7, 8 and 9 treat the cases of few, many and too many defenders, respectively.\nWe conclude, in Section 10, with a discussion of the results and some open problems.\nThroughout, for an integer n \u2265 1, denote [n] = {1, . . . , n}; for a number x 6= 0, sgn(x)\ndenotes the sign of x (which is +1 or \u22121).\n\n2\n\nBackground and Preliminaries from Graph Theory\n\nSome basic definitions are articulated in Section 2.1. Fractional Matchings are recalled in\nSection 2.2. Some reduction techniques for Fractional (Perfect) Matchings are developed in\nSection 2.3. Section 2.4 treats \u03b4-Partitionable Fractional Perfect Matchings.\n\n2.1\n\nBasics\n\nWe consider a simple undirected graph G = hV, Ei (with no isolated vertices). The trivial\ngraph consists of a single edge. We will sometimes model an edge as the set of its two vertices.\n8\n\n\fDenote as dG (v) the degree of vertex v in G. An edge (u, v) \u2208 E is pendant if dG (u) = 1 but\ndG (v) > 1. A path is a sequence of vertices v1 , v2 , * * * , vn+1 from V such that for each index\nk \u2208 [n], (vk , vk+1 ) \u2208 E; in a cycle C, vn+1 = v1 . The cycle C has length n, and C is even (resp.,\nodd) if n is even (resp., odd). A triangle is a cycle of length three. We shall sometimes treat C\nas a set of vertices; E(C) denotes the edge set induced by C in the natural way.\nVertex sets and edge sets induce subgraphs in the natural way. For a vertex set U \u2286 V ,\ndenote as G(U ) the subgraph of G induced by U ; denote EdgesG (U ) = {(u, v) \u2208 E | u, v \u2208 U }.\nFor an edge set F \u2286 E, denote as G(F ) the subgraph of G induced by F ; denote VerticesG (F ) =\nS\n(u,v)\u2208F {u, v}. (We shall sometimes omit the index G when it is clear from context.) A\ncomponent is a maximal connected subgraph. A cycle is isolated (as a subgraph) if it is a\ncomponent; else, it is non-isolated. A component is cyclic if it contains a cycle; else, it is\nacyclic.\nFor an undirected graph, both an odd and an even cycle are computable in polynomial time.\nA linear time algorithm to compute an odd cycle is based on incorporating breadth-first search\ninto the constructive proof for the characterization of bipartite graphs due to K\u00f6nig [14] (cf.\n[15, Proposition 2.27]). Polynomial time algorithms to compute an even cycle have appeared\nin [18, 25, 32].\nA Vertex Cover is a vertex set V C \u2286 V such that for each edge (u, v) \u2208 E either u \u2208 V C\nor v \u2208 V C; a Minimum Vertex Cover is one that has minimum size, which is denoted as \u03b2(G).\nAn Edge Cover is an edge set EC \u2286 E such that for each vertex v \u2208 V , there is an edge\n(u, v) \u2208 EC; a Minimum Edge Cover is one that has minimum size, which is denoted as \u03b2 \u2032 (G).\n|V |\nClearly, 2 \u2264 \u03b2 \u2032 (G). Denote as EC(G) the set of all Edge Covers of G.\nA Matching is a set M \u2286 E of non-incident edges; a Maximum Matching is one that has\nmaximum size. The first polynomial time algorithm to compute a Maximum Matching is due to\nEdmonds [7]. It is known that computing a Minimum Edge Cover is polynomial time reducible\nto computing a Maximum Matching-see, e.g., [31, Theorem 3.1.22] or [19].\nA Perfect Matching is a Matching that is also an Edge Cover; so, a Perfect Matching\n|V |\nhas size 2 . A Perfect-Matching graph is one that has a Perfect Matching; note that in a\n|V |\nPerfect-Matching graph, \u03b2 \u2032 (G) = 2 . Since a Perfect Matching is a Maximum Matching,\nany polynomial time algorithm to compute a Maximum Matching yields a polynomial time\nalgorithm to recognize Perfect-Matching graphs and compute a Perfect Matching.\n\n2.2\n\nFractional (Perfect) Matchings\n\nA Fractional Matching is a function f : E \u2192 [0, 1] where for each vertex v \u2208 V ,\n\nP\n\ne\u2208E|v\u2208e f (e)\n\n\u2264\n\n1. (Matching is the special case where f (e) \u2208 {0, 1} for each edge e \u2208 E.) For a Fractional\n9\n\n\fMatching f , induced is the set E(f ) = {e \u2208 E | f (e) > 0}; |E(f )| is the size of f . The range of\na Fractional Matching f is the set Range(f ) = {f (e) | e \u2208 E}; so, Range(f ) \u2286 [0, 1].\nGiven two Fractional Matchings f and f \u2032 , write f \u2032 \u2286 f (resp., f \u2032 \u2282 f ) if E(f \u2032 ) \u2286 E(f )\n(resp., E(f \u2032 ) \u2282 E(f )). Say that two functions f : E \u2192 [0, 1] and f \u2032 : E \u2192 [0, 1] are equivalent if\nP\nP\nfor each vertex v \u2208 V , e\u2208E|v\u2208e f (e) = e\u2208E|v\u2208e f \u2032 (e). Clearly, a function f : E \u2192 [0, 1] that\n\nis equivalent to a Fractional Matching is also a Fractional Matching.\nP\n\nA Fractional Perfect Matching is a Fractional Matching f such that for each vertex v \u2208 V ,\ne\u2208E|v\u2208e f (e) = 1. (Perfect Matching is the special case where f (e) \u2208 {0, 1} for each edge\n\ne \u2208 E. Note that in this special case, E(f ) is a Perfect Matching; for an arbitrary Fractional\nPerfect Matching, E(f ) need not be a Perfect Matching.) In this case, for each vertex v \u2208 V ,\nthere is at least one edge e \u2208 E with v \u2208 e such that f (e) > 0, so that e \u2208 E(f ); hence, for\na Fractional Perfect Matching f , E(f ) is an Edge Cover. Note that a function f : E \u2192 [0, 1]\nwhich is equivalent to a Fractional Perfect Matching is also a Fractional Perfect Matching.\nP\nA Fractional Maximum Matching is a Fractional Matching f that maximizes\ne\u2208E f (e)\namong all Fractional Matchings. A Fractional Perfect Matching is a Fractional Maximum\nMatching (but not vice versa). We observe a simple property of Fractional Perfect Matchings:\nLemma 2.1 For a Fractional Perfect Matching f , the graph G(E(f )) has no pendant edge.\nProof.\n\nAssume, by way of contradiction, that G(E(f )) has a pendant edge (u, v) with\nP\ndG(E(f )) (u) = 1 and dG(E(f )) (v) > 1. Since f is a Fractional Perfect Matching, e\u2208E|u\u2208e f (e) =\nP\n1 and e\u2208E|v\u2208e f (e) = 1. By assumption on u, the first equality implies that f ((u, v)) = 1. By\nassumption on v, the second equality implies that f ((u, v)) < 1. A contradiction.\n\nLemma 2.1 implies that for a Fractional Perfect Matching f , each component of G(E(f )) is\neither a single edge or a (non-trivial) subgraph of G with no pendant edges; in particular, each\nacyclic component of G(E(f )) is a single edge. The proof for [29, Theorem 2.1.5] establishes as\na by-product that a Fractional Maximum Matching f with smallest size has no pendant edge;\nso, Lemma 2.1 provides a complementary property for the special case of Fractional Perfect\nMatchings.\nThe class of graphs with a Fractional Perfect Matching is recognizable in polynomial time\nvia a Linear Programming formulation. (See [4] for an efficient combinatorial algorithm.) The\nsame holds for the corresponding search problem.\n\n2.3\n\nReductions of Fractional (Perfect) Matchings\n\nOur starting point is a combinatorial property of a special case of a Fractional Maximum\nMatching; this property is reported in [29, Theorem 2.1.5].\n10\n\n\fProposition 2.2 Consider a Fractional Maximum Matching f with smallest size. Then, f has\nonly single edges and odd cycles.\nProposition 2.2, outlaws, in particular, the induction of even cycles and non-isolated odd cycles\nin a Fractional Maximum Matching with smallest size. In the spirit of Proposition 2.2, we\nshall present two new reduction techniques for a Fractional (Perfect) Matching. The first\nreduction will eliminate all induced even cycles from an arbitrary Fractional Matching. The\nsecond reduction is applicable only to Fractional Perfect Matchings; it will eliminate all induced\nnon-isolated odd cycles when run on a Fractional Perfect Matching with no induced even cycles.\nThe corresponding elimination algorithms (EliminateEvenCycles and IsolateOddCycles in Figures 2 and 4, respectively) are inspired from the corresponding inexistence proof for Proposition\n2.2. In more detail, that proof assumes the existence of an even or a non-isolated odd cycle and\nderives a contradiction by relying on the property that the Fractional Matching is a Maximum\none of smallest size; the contradiction is derived by eliminating edges to get a Fractional (Maximum) Matching with less size. In contrast, our elimination algorithms compute in polynomial\ntime an even or a non-isolated odd cycle (as long as there are such), respectively; they keep\neliminating edges (as long as possible) till there are no more even or non-isolated odd cycles,\nrespectively.\n2.3.1\n\nElimination of Even Cycles\n\nWe prove:\nProposition 2.3 Consider a Fractional Matching f . Then, there is a polynomial time algorithm to transform f into an equivalent Fractional Matching f \u2032 \u2286 f with no even cycle.\nTo prove the claim, we present the algorithm EliminateEvenCycles in Figure 2.\nProof. We start with a first invariant of the algorithm EliminateEvenCycles:\nLemma 2.4 For each loop iteration of EliminateEvenCycles, upon completion of Step (3), f \u2032 is\na Fractional Matching equivalent to f .\nNote that the input Fractional Matching f is already modified in the first (if any) loop iteration\nof EliminateEvenCycles (in Step (4)), while the statement of Lemma 2.4 refers to the input\nFractional Matching f . The proof of Lemma 2.4 will use the current Fractional Matching f ;\nreference to the input f will be restored in an inductive way upon completing the proof.\n11\n\n\fAlgorithm EliminateEvenCycles\nInput: A graph G = hV, Ei and a Fractional Matching f for G.\nOutput: An equivalent Fractional Matching f \u2032 \u2286 f with no even cycle.\nWhile G(E(f )) contains an even cycle C do\n(1) Choose an edge e0 \u2208 E(C) such that f (e0 ) = mine\u2208E(C) f (e).\n(2) Define a function g : E(C) \u2192 {\u22121, +1} with g(e) = \u22121 or +1 (alternately, starting with\ng(e0 ) = \u22121).\n(3) For each edge e \u2208 E, set\n\u2032\n\nf (e)\n\n:=\n\n(\n\nf (e) + g(e) * f (e0 ),\nf (e),\n\nif e \u2208 E(C)\n.\nif e \u2208\n6 E(C)\n\n(4) Set f := f \u2032 .\n\nFigure 2: The algorithm EliminateEvenCycles, which consists of a single loop. The precondition\nfor the loop is the existence of an even cycle C; so, upon termination, there will be no even cycle\nfor the output f \u2032 . (Note that if there are no loop iterations, then f \u2032 = f .) Step (1) chooses an\nedge e0 on the cycle C on which f is minimized, while Step (2) assigns a sign to each edge e on\nC. (Since C is an even cycle, alternating signs are possible.) The new values for f \u2032 are assigned\nin Step (3); note that f \u2032 (e0 ) = 0. Step (4) prepares the input (f ) for the next loop iteration.\nAn example execution of the algorithm EliminateEvenCycles is illustrated in Figure 3.\nProof. Fix any loop iteration of EliminateEvenCycles, upon completion of Step (3). Consider\nany vertex v \u2208 V . Then, by Step (3),\nX\n\nf \u2032 (e) =\n\nX\n\nf \u2032 (e) +\n\n=\n\nX\n\n\u2032\n\nf (e) +\n\ne\u2208E(C)|v\u2208e\n\nf \u2032 (e)\n\ne\u2208E\\E(C)|v\u2208e\n\ne\u2208E(C)|v\u2208e\n\ne\u2208E|v\u2208e\n\nX\n\nX\n\nf (e)\n\ne\u2208E\\E(C)|v\u2208e\n\nP\nP\nIf there is no edge e \u2208 E(C) such that v \u2208 e, then e\u2208E(C)|v\u2208e f \u2032 (e) = e\u2208E(C)|v\u2208e f (e) = 0,\nand we are done. So, assume otherwise. Since C is a cycle, there are (exactly) two edges e1 ,\ne2 \u2208 E(C) such that v \u2208 e1 and v \u2208 e2 . Note that by Step (2), g(e1 ) + g(e2 ) = 0. Hence, by\n\n12\n\n\f0.55\n0.45\n\n0.55\n\n0.45\n\n0.2\n\ne0\n\n0.45\n\n0.45\n0.7\n\n0.1\n\n0.1\n\n0.55\n\n0.9\n\n0.3\n\n0.45\n\n0.1\n\n0.45\n\n+\n\n0.5\n0.2\n\n0.1\n0.3\n\n0.45\n\n0.2\n\ne0\n\n0.3\n\n0.7\n\n0.1\n0.3\n\n+\n\n0.3\n0.2\n\n0.45\n\n0.7\n\n+\n\n0.3\n\n0.2\n\n0.55\n\n+\n\n0.7\n\n0.3\n0.2\n\n0.8\n\n0.2\n\n0.2\n0.8\n\n0.8\n\n(a) Before loop iteration 1\n\n0.2\n\n0.2\n\n0.2\n\n0.8\n\n(b) Before loop iteration 2\n\n0.55\n0.45\n\n0.45\n0.9\n\n0.1\n\n0.55\n0.1\n\n0.45\n\n0.45\n\n0.9\n0.1\n\n0.1\n0.3\n\n0.7\n\n0.5\n0.2\n\n0.2\n\n0.2\n\n0.2\n\n0.8\n\n0.8\n\n(c) After loop iteration 2\n\nFigure 3: An example execution of the algorithm EliminateEvenCycles on a graph with a Fractional Perfect Matching f ; the execution terminates after two loop iterations. For each loop\niteration, edges in E(f ) are drawn thick; edges on the cycle C are drawn clouded. A number\nnext to each (thick) edge e \u2208 E(f ) indicates the value f (e); the sign of g(e) is also indicated\nfor each (clouded) edge e on the cycle C.\n\n13\n\n\fStep (3),\nX\n\nX\n\nf \u2032 (e) = f \u2032 (e1 ) + f \u2032 (e2 ) +\n\nf (e)\n\neE\\E(C)|v\u2208e\n\ne\u2208E|v\u2208e\n\n= f (e1 ) + g(e1 ) * f (e0 ) + f (e2 ) + g(e2 ) * f (e0 ) +\n\nX\n\nf (e)\n\ne\u2208E\\E(C)|v\u2208e\n\n= f (e1 ) + f (e2 ) + (g(e1 ) + g(e2 )) * f (e0 ) +\n\nX\n\nf (e)\n\ne\u2208E\\E(C)|v\u2208e\n\nX\n\n= f (e1 ) + f (e2 ) +\n\nf (e)\n\ne\u2208E\\E(C)|v\u2208e\n\n=\n\nX\n\nf (e) +\n\ne\u2208E(C)|v\u2208e\n\n=\n\nX\n\nX\n\nf (e)\n\ne\u2208E\\E(C)|v\u2208e\n\nf (e),\n\ne\u2208E|v\u2208e\n\nwhich implies that f \u2032 is equivalent to f . By Step (4), it follows inductively that f \u2032 is equivalent\nto the input Fractional Matching f . Since f is a Fractional Matching, this implies that f \u2032 is a\nFractional Matching, and the claim follows.\nWe continue with a second invariant of the algorithm EliminateEvenCycles:\nLemma 2.5 For each loop iteration of EliminateEvenCycles, upon completion of Step (3), (i)\nf \u2032 \u2282 f and (ii) the even cycle C is eliminated from G(E(f \u2032 )).\nSimilarly to Lemma 2.4, the statement of Lemma 2.5 (Condition (i)) refers to the input Fractional Matching f . The proof of Lemma 2.5 will use the current Fractional Matching f ; reference\nto the input f will be restored in an inductive way upon completing the proof.\nProof. Fix any loop iteration of EliminateEvenCycles, upon completion of Step (3). Consider\nany edge e \u2208 E. We proceed by case analysis.\n\u2022 Assume that e 6\u2208 E(C). Then, Step (3), implies that e \u2208 E(f \u2032 ) if and only if e \u2208 E(f ).\n\u2022 Assume that e \u2208 E(C). Then, e \u2208 E(f ); so, it holds vacuously that if e \u2208 E(f \u2032 ), then\ne \u2208 E(f ).\nThe case analysis implies that f \u2032 \u2286 f . Since f \u2032 (e0 ) = 0 while f (e0 ) > 0, this implies that f \u2032 \u2282 f .\nBy Step (4), Condition (i) follows now inductively. Since f \u2032 (e0 ) = 0, edge e0 is eliminated from\nG(E(f \u2032 )), so that the even cycle C is eliminated from G(E(f \u2032 )) and Condition (ii) follows.\nLemma 2.4 and Lemma 2.5 (Condition (i)) together imply that the output f \u2032 of algorithm\nEliminateEvenCycles, which contains no even cycle due to the loop precondition, is a Fractional\n14\n\n\fMatching which is equivalent to and contained in f . (By Lemma 2.5 (Condition (ii)), containment is strict exactly when there is at least one loop iteration.)\nLemma 2.5 (Condition (i) or (ii)) implies that at least one edge is eliminated from f in each\nloop iteration and no edge is added. Hence, there are at most |E| loop iterations. Note that\neach loop iteration takes O(|E|) time. Since an even cycle is computable in polynomial time,\nit follows that the algorithm EliminateEvenCycles is polynomial time, and we are done.\n2.3.2\n\nElimination of Non-Isolated Odd Cycles\n\nWe prove:\nProposition 2.6 Consider a Fractional Perfect Matching f with no even cycle. Then, there\nis a polynomial time algorithm to transform f into an equivalent Fractional Perfect Matching\nf \u2032 \u2286 f with no non-isolated odd cycle.\nTo prove the claim, we present the algorithm IsolateOddCycles in Figure 4.\nProof. Since G(E(f )) has no even cycle, the cycle vl , * * * , vr = vl determined in Step (2/a) is\nodd. We now prove a preliminary property of the algorithm IsolateOddCycles:\nLemma 2.7 The path v1 , v2 , * * * , vr is disjoint from C\\{v0 }.\nProof.\n\nBy way of contradiction, assume that there is a vertex vk with k \u2208 [r] such that\n\nvk \u2208 C\\{v0 }. Since C has odd length, the vertices v0 and vk partition C into two paths C1 and\nC2 of odd and even length, respectively. Consider the two concatenations of the path v1 , * * * , vk\nwith C1 and C2 , respectively; each of them is a cycle in G(E(f )) and one of them has even\nlength. A contradiction.\nWe start with a first invariant of the algorithm IsolateOddCycles.\nLemma 2.8 For each inner loop iteration in an outer loop iteration of IsolateOddCycles, upon\ncompletion of Step (2/e), f \u2032 is a Fractional Perfect Matching equivalent to f .\nNote that the input Fractional Perfect Matching f is already modified in the first inner loop\niteration in the first outer loop iteration of IsolateOddCycles (in Step (2/f)). Reminiscent of\nLemma 2.4, the statement of Lemma 2.8 refers to the input Fractional Perfect Matching f .\nThe proof of Lemma 2.8 will use the current Fractional Perfect Matching f ; reference to the\ninput f will be restored in an inductive way upon completing the proof.\n15\n\n\fAlgorithm IsolateOddCycles\nInput: A graph G = hV, Ei and a Fractional Perfect Matching f for G with no even cycle.\nOutput: An equivalent Fractional Perfect Matching f \u2032 \u2286 f with no non-isolated odd cycle.\nWhile G(E(f )) contains a non-isolated odd cycle C do\n(1) Choose a vertex v0 \u2208 C with dG(E(f )) (v0 ) \u2265 3 and an edge (v0 , v1 ) \u2208 E(f ) with v1 6\u2208 C.\n(2) While E(f ) includes all edges from E(C) \u222a {(v0 , v1 )} do\n(2/a) Choose a path v1 , v2 , * * * , vr with vr = vl for some l \u2208 0 \u222a [r \u2212 2].\no\nn\n(2/b) Define a function g : E(C) \u222a {(vk , vk+1 ) | 0 \u2264 k \u2264 r \u2212 1} \u2192 +1, \u22121, + 21 , \u2212 12 with\n\uf8f1 1\n+ 2 or \u221212 , if e \u2208 E(C) (alternately, starting with + 21 for an edge incident to v0 )\n\uf8f4\n\uf8f4\n\uf8f4\n\uf8f2+1 or \u22121, if e = (v , v\nk k+1 ) for 0 \u2264 k \u2264 l \u2212 1 with l > 0 (alternately, starting with \u22121)\n.\ng(e) =\n1\n1\n\uf8f4\n+ 2 or \u22122 , if e = (vk , vk+1 ) for l \u2264 k \u2264 r \u2212 1 (alternately, starting with a sign opposite\n\uf8f4\n\uf8f4\n\uf8f3\nto the sign of the last value assigned by g)\n(2/c) Choose an edge e0 \u2208 E(C) \u222a {(vk , vk+1 ) | 0 \u2264 k \u2264 r \u2212 1} that realizes the quantity\n\uf8f1\n\uf8fc\n\uf8f2\nf (e)\nf ((vk , vk+1 ))\nf ((vk , vk+1 )) \uf8fd\nf0 := min\nmin\n, min\n, min\n;\n\uf8f3e\u2208E(C) |g(e)|\nl>0\n|g((vk , vk+1 ))| l\u2264k\u2264r\u22121 |g((vk , vk+1 ))| \uf8fe\n0\u2264k\u2264l\u22121\n\n(2/d) If g(e0 ) > 0, then set g := \u2212g.\n\n(2/e) For each edge\n\uf8f1 e \u2208 E, set\n\uf8f2 f (e) + g(e) * f (e0 ) , if e \u2208 E(C) \u222a {(v , v\nk k+1 ) | 0 \u2264 k \u2264 r \u2212 1}\n|g(e0 )|\nf \u2032 (e) :=\n.\n\uf8f3 f (e),\notherwise\n\n(2/f) Set f := f \u2032 .\n\nFigure 4: The algorithm IsolateOddCycles, which consists of an outer loop; the outer loop\nincludes an inner loop (Step (2)). The precondition for the outer loop is the existence of a\nnon-isolated odd cycle; so, upon termination, there will be no non-isolated odd cycle for f \u2032 .\n(Note that if there are no (outer) loop iterations, then f \u2032 = f .) For Step (1), note that a\nvertex v0 \u2208 C with dG(E(f )) (v0 ) \u2265 3 exists since C is non-isolated; v0 has two incident edges\nfrom C and at least one incident edge (v0 , v1 ) outside C. The precondition for the inner loop is\nthe inclusion of all edges from E(C) \u222a {(v0 , v1 )} in E(f ); note that C remains a (non-isolated)\ncycle (and the inner loop continues) as long as no such edge has been eliminated from f (by\nStep (2/e)). For Step (2/a), note that a path v1 , * * * , vr with vr = vl for some l \u2208 0 \u222a [r \u2212 2]\nexists since G(E(f )) has no pendant edges (by Lemma 2.1); this path together with C make\na bicycle graph. For Step (2/b), note that Lemma 2.7 implies that for any vertex vk with\n0 < k \u2264 r, it holds that vk 6\u2208 C\\{v0 }. So, Step (2/b) assigns a signed coefficient to each edge\ne \u2208 E(C) \u222a {(vk , vk+1 ) | 0 \u2264 k \u2264 r \u2212 1}. Step (2/c) chooses an edge e0 on either the cycle C or\nthe outgoing path v1 , v2 , * * * , vr that minimizes a certain quantity f0 determined from f and g;\nf (e0 )\nso, f0 =\n. Step (2/d) adjusts g so that g(e0 ) < 0. The new values for f \u2032 are assigned in\n|g(e0 )|\nStep (2/e); note that f \u2032 (e0 ) = 0 (by Step (2/d)). Step (2/f) prepares the input (f ) for the next\n(inner) loop iteration. An example execution of the algorithm IsolateOddCycles is illustrated in\nFigure 5.\n16\n\n\f0.55\n0.45\n\n0.55\n\n7\n\n0.45\n0.1\n\n8\n\n0.45\n\n+ + 0.45\n\n0.55\n\n0.9\n\n0.1\n\n5\n\n6\n\n0.1\n\n0.45\n\n2\n\n+\n\ne0\n\n0.2\n\n0.2\n\n0.2\n\n+ 0.2\n\n+\n\n3\n\n0.75\n\n0.25\n\n+\n\n0.5\n\n1\n\n0.5\n0.2\n\n+\n\n0.1\n\n0.1\n\ne0\n\n0.5\n\n0.9\n\n0\n\n0.7\n\n0.5\n\n0.1\n\n0.9\n0.3\n\n0.5\n\n4\n\n+\n\n+ + 0.45\n\n0.1\n\n0.9\n\nv0\n\n+\n\n0.2\n\n0.25\n\n0.25\n\n+\n0.8\n\n0.8\n\n0.8\n\n2\n\n0.75\n\n(a) Before outer loop iteration 1\n\n(b) Before outer loop iteration 2\n0.5\n\n0.5\n0.5\n\n0.5\n\n0.5\n\n0.5\n1\n\n0.5\n\n1\n\n0.5\n\n0.5\n\n0.5\n\n0.2\n\n1\n\n0.8\n+\n\n0.6\n\n1\n\nv\uf730\n\n+\n0.2\n\n0.5\n\n1\n\n1\n\n0.2\n\n0.5\n\ne0\n\n0.2\n\n0.2\n\n+\n\n+\n\n0.8\n\n0.8\n\n1\n\n(c) Before inner loop iteration 2 within outer loop\niteration 2. (So, this is the result of inner loop\niteration 1 within outer loop iteration 2.)\n\n1\n\n(d) After outer loop iteration 2\n\nFigure 5: An example execution of the algorithm IsolateOddCycles on the graph with a Fractional\nPerfect Matching f (with no induced even cycle) from Figure 3(c). The execution terminates\nafter two outer loop iterations; the first outer loop iteration incurs one inner loop iteration,\nwhile the second outer loop iteration incurs two inner loop iterations. For each (inner or outer)\nloop iteration, edges in E(f ) are drawn thick; edges on the cycle C are drawn clouded. A\nnumber next to each (thick) edge e \u2208 E(f ) indicates f (e); the sign of g(e) (for each edge e on\nthe cycle C), the vertex v0 and the edge e0 are also indicated for each iteration.\n\n17\n\n\fProof. The proof consists of two technical claims. The first claim determines the range of f \u2032 .\nFix any inner loop iteration in an outer loop iteration of IsolateOddCycles, upon completion of\nStep (2/e). We prove:\nClaim 2.9 Range(f \u2032 ) \u2286 [0, 1].\nProof. By Step (2/e), it suffices to consider inductively an edge e from E(C) \u222a {(vk , vk+1 ) |\n0 \u2264 k \u2264 r \u2212 1}. By Step (2/f), it follows inductively that f is a Fractional Perfect Matching.\nWe first prove that f \u2032 (e) \u2265 0. By Step (2/e), it suffices to consider the case where g(e) < 0,\nso that g(e) = \u2212|g(e)|. Then, by Step (2/e) and the choice of the edge e0 ,\nf \u2032 (e) = f (e) \u2212 |g(e)| *\n\nf (e0 )\n|g(e0 )|\n\n\u2265 0,\nas needed.\nWe now prove that f \u2032 (e) \u2264 1. By Step (2/e), it suffices to consider the case where g(e) > 0,\nso that g(e) = |g(e)|. We proceed by case analysis on whether there is an edge e\u2032 adjacent to e\nsuch that e and e\u2032 are either both on the cycle C or both on the path v0 , * * * , vl (with l > 0) or\nboth on the cycle vl , * * * , vr = vl .\nAssume first that there is such an edge e\u2032 ; clearly, |g(e\u2032 )| = |g(e)|. Then, by Step (2/e),\nf \u2032 (e)\n=\n\u2264\n\u2264\n=\n=\n\nf (e0 )\n|g(e0 )|\ng(e)\n1 \u2212 f (e\u2032 ) +\n* f (e0 )\n|g(e0 )|\nf (e0 )\nf (e0 )\n1 \u2212 |g(e\u2032 )| *\n+ g(e) *\n|g(e0 )|\n|g(e0 )|\nf (e0 )\nf (e0 )\n1 \u2212 |g(e)| *\n+ g(e) *\n|g(e0 )|\n|g(e0 )|\n1,\nf (e) + |g(e)| *\n\n(since f is a Fractional Matching)\n(by the choice of the edge e0 )\n\nas needed.\nAssume now that there is no edge e\u2032 adjacent to e such that e and e\u2032 are either both on the\ncycle C or both on the path v0 , * * * , vl (with l > 0) or on the cycle vl , * * * , vr = vl . Since both\nthe cycle C and the cycle vl , * * * , vr = vl are odd, each of them includes at least three edges. It\nfollows that edge e lies neither on the cycle C nor on the cycle vl , * * * , vr = vl . Hence, edge e\nlies on the path v0 , * * * , vl (with l > 0). Since there is no edge e\u2032 adjacent to e on this path, it\n18\n\n\ffollows that l = 1, so that e = (v0 , v1 ). So, consider the edges e1 and e2 on the cycle C that are\nadjacent to e. By the choice of g, it follows that |g(e1 )| + |g(e2 )| = |g(e)|. Hence,\nf \u2032 (e)\nf (e0 )\n|g(e0 )|\n\n=\n\nf (e) + |g(e)| *\n\n\u2264\n\n1 \u2212 f (e1 ) \u2212 f (e2 ) + |g(e)| *\n\n(by Step (2/e))\nf (e0 )\n|g(e0 )|\n\n(since f is a Fractional Matching)\n\nf (e0 )\nf (e0 )\nf (e0 )\n\u2212 |g(e2 )| *\n+ |g(e)| *\n\u2264 1 \u2212 |g(e1 )| *\n|g(e0 )|\n|g(e0 )|\n|g(e0 )|\n\u0010\n\u0011\nf (e0 )\n=\n1 \u2212 |g(e1 )| + |g(e2 )| \u2212 |g(e)| *\n|g(e0 )|\n=\n1,\n\n(by definition of e0 )\n\nas needed. The proof is now complete.\nWe continue with the second technical claim:\nClaim 2.10 f \u2032 is equivalent to f .\nProof. Consider any vertex v \u2208 V . Then, by Step (2/e)),\nX\n\nf \u2032 (e)\n\nX\n\n=\n\nX\n\n=\n\nf \u2032 (e)\n\ne\u2208E\\(E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121}) | v\u2208e\n\ne\u2208E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121} | v\u2208e\n\ne\u2208E|v\u2208e\n\nX\n\nf \u2032 (e) +\n\nX\n\n\u2032\n\nf (e) +\n\nf (e).\n\ne\u2208E\\(E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121}) | v\u2208e\n\ne\u2208E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121} | v\u2208e\n\nIf there is no edge e \u2208 E(C) \u222a {(vk , vk+1 ) | 0 \u2264 k \u2264 r \u2212 1} such that v \u2208 e, then\nX\n\nf \u2032 (e)\n\nX\n\n=\n\nf (e)\n\ne\u2208E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121} | v\u2208e\n\ne\u2208E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121} | v\u2208e\n\n=\n\n0,\n\nand we are done. So, assume otherwise. Note that by Step (2/b),\nX\n\ng(e) =\n\n0.\n\ne\u2208E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121} | v\u2208e\n\nHence, by Step (2/e),\nX\n\nX\n\nf \u2032 (e) =\n\nX\n\n=\n\n(f (e) + g(e) * f0 ) +\n\nX\n\nf (e) + f0 *\n\ne\u2208E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121} | v\u2208e\n\n+\n\nX\n\nf (e)\n\ne\u2208E\\(E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121}) | v\u2208e\n\n=\n\nX\n\nf (e),\n\ne\u2208E | v\u2208e\n\n19\n\nX\n\nf (e)\n\ne\u2208E\\(E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121}) | v\u2208e\n\ne\u2208E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121} | v\u2208e\n\n=\n\nf (e)\n\ne\u2208E\\(E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121}) | v\u2208e\n\ne\u2208E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121} | v\u2208e\n\ne\u2208E|v\u2208e\n\nX\n\nf \u2032 (e) +\n\nX\n\ne\u2208E(C) \u222a{(vk ,vk+1 ) | 0\u2264k\u2264r\u22121} | v\u2208e\n\ng(e)\n\n\fwhich implies that f \u2032 is equivalent to f . By Step (2/f), it follows inductively that f \u2032 is\nequivalent to the input Fractional Perfect Matching f .\nSince f is a Fractional Perfect Matching, Claims 2.9 and 2.10 imply together that f \u2032 is a\nFractional Perfect Matching, and the claim follows.\nWe continue with a second invariant of the algorithm IsolateOddCycles:\nLemma 2.11 For each outer loop iteration of IsolateOddCycles, (a) for each inner loop iteration, upon completion of Step (2/e), (i) f \u2032 \u2282 f , and (ii) some edge from E(C) \u222a {(vk , vk+1 ) | 0 \u2264\nk \u2264 r \u2212 1} is eliminated from E(f \u2032 ), and (b) for the last inner loop iteration, upon completion\nof Step (2/e), the non-isolated odd cycle C is eliminated from G(E(f \u2032 )).\nSimilarly to Lemma 2.8, the statement of Lemma 2.11 (Condition (a/i)) refers to the input\nFractional Perfect Matching f . The proof of Lemma 2.11 will use the current Fractional Perfect\nMatching f ; reference to the input f will be restored in an inductive way upon completing the\nproof.\nProof. Consider any outer loop iteration. For Condition (a), consider any inner loop iteration\nwithin this outer loop iteration, upon completion of Step (2/e). Consider any edge e \u2208 E.\n\u2022 Assume that e 6\u2208 E(C) \u222a {(vk , vk+1 ) | 0 \u2264 k \u2264 r \u2212 1}. Then, Step (2/e) implies that\ne \u2208 E(f \u2032 ) if and only if e \u2208 E(f ).\n\u2022 Assume that e \u2208 E(C) \u222a {(vk , vk+1 ) | 0 \u2264 k \u2264 r \u2212 1}. Then, e \u2208 E(f ); so, it holds\nvacuously that if e \u2208 E(f \u2032 ) then e \u2208 E(f ).\nThe case analysis implies that f \u2032 \u2286 f . Since f \u2032 (e0 ) = 0 while f (e0 ) > 0, this implies that\nf \u2032 \u2282 f . By Step (2/f), Condition (a/i) follows inductively.\nSince f \u2032 (e0 ) = 0, e0 is eliminated from E(f \u2032 ), so that some edge from E(C) \u222a {(vk , vk+1 ) |\n0 \u2264 k \u2264 r \u2212 1} is eliminated from E(f \u2032 ), and Condition (a/ii) follows.\nTo prove Condition (b), note that Condition (a/i) implies that there is a last inner loop\niteration (and the outer loop terminates). So, consider the last inner loop iteration. The\nprecondition for the inner loop implies that some edge from E(C)\u222a{(v0 , v1 )} has been eliminated\nfrom E(f \u2032 ). Hence, the non-isolated odd cycle C is eliminated from G(E(f \u2032 )), and Condition\n(b) follows.\nLemma 2.8 and Lemma 2.11 (Condition (a/i)) together imply that the output f \u2032 of the\nalgorithm IsolateOddCycles, which contains no non-isolated odd cycle due to the outer loop\nprecondition, is a Fractional Perfect Matching which is equivalent to and contained in f . (By\n20\n\n\fLemma 2.11 (Condition (b)), containment is strict exactly when there is at least one outer loop\niteration.)\nLemma 2.11 implies that at least one edge is eliminated from f in each inner loop iteration\nand no edge is added. Hence, there are at most |E| inner loop iterations in all outer loop\niterations. Note that each iteration of the inner loop takes O(|E|) time. Since an odd cycle\nis computable in polynomial time, it follows that the algorithm IsolateOddCycles is polynomial\ntime, and we are done.\n2.3.3\n\nRecap\n\nWe are now ready to prove:\nProposition 2.12 Consider a Fractional Perfect Matching f . Then, there is a polynomial\ntime algorithm to transform f into an equivalent Fractional Perfect Matching f \u2032 \u2286 f with only\nsingle edges and odd cycles.\nTo prove the claim, we present the algorithm EliminateEven&IsolateOddCycles in Figure 6. The\nalgorithm is the sequential cascade of the algorithms EliminateEvenCycles and IsolateOddCycles\nfrom Figures 2 and 4, respectively.\nAlgorithm EliminateEven&IsolateOddCycles\nInput: A Fractional Perfect Matching f for a graph G.\nOutput: A Fractional Perfect Matching f \u2032 with no even cycle and no non-isolated odd cycle.\n(1) Apply EliminateEvenCycles on f to obtain f \u2032\u2032 .\n(2) Apply IsolateOddCycles on f \u2032\u2032 to obtain f \u2032 .\n\nFigure 6: The algorithm EliminateEven&IsolateOddCycles, incorporating the algorithms EliminateEvenCycles and IsolateOddCycles from Figures 2 and 4, respectively.\nProof.\n\nBy Proposition 2.3, f \u2032\u2032 \u2286 f is a Fractional Perfect Matching with no even cycle,\n\nwhich is equivalent to f . By Proposition 2.6, f \u2032 \u2286 f \u2032\u2032 is a Fractional Perfect Matching with no\nnon-isolated odd cycle, which is equivalent to f \u2032\u2032 . It follows that (1) f \u2032 is equivalent to f and\nf \u2032 \u2286 f , and (2) f \u2032 has no even cycle and no non-isolated odd cycle. Since f is a Fractional\nPerfect Matching, Condition (1) implies that f \u2032 is a Fractional Perfect Matching; by Lemma\n2.1, this implies that each acyclic component of G(E(f \u2032 )) is a single edge. By Condition (2),\nit follows that each cyclic component of G(E(f \u2032 )) is an (isolated) odd cycle. It follows that f \u2032\nconsists of single edges and odd cycles, and the proof is complete.\n\n21\n\n\f2.4\n2.4.1\n\n\u03b4-Partitionable Fractional Perfect Matchings\nDefinition and Preliminaries\n\nWe introduce a special class of Fractional Perfect Matchings:\nDefinition 2.1 Fix an integer \u03b4 \u2265 1. A Fractional Perfect Matching f : E \u2192 R is \u03b4Partitionable if the edge set E(f ) can be partitioned into \u03b4 (non-empty,) vertex-disjoint parP\n|V |\ntites E1 , * * * , E\u03b4 so that for each partite Ej with j \u2208 [\u03b4], e\u2208Ej f (e) = 2 \u03b4 .\n\nNote that a 1-Partitionable Fractional Perfect Matching is a Fractional Perfect Matching.\nHence, the decision problem for a 1-Partitionable Fractional Perfect Matching is solved in\npolynomial time. Note also that the restriction of a \u03b4-Partitionable Fractional Perfect Matching to each partite Ej with j \u2208 [\u03b4] is a Fractional Perfect Matching; so, for each partite Ej with\nP\nj \u2208 [\u03b4], for each vertex v \u2208 V (Ej ), e\u2208E|v\u2208e f (e) = 1. Since the partites are vertex-disjoint,\nP\nthis implies that for each partite Ej with j \u2208 [\u03b4], for each vertex v \u2208 V (Ej ), e\u2208Ej |v\u2208e f (e) = 1.\nWe now prove a necessary condition for a \u03b4-Partitionable Fractional Perfect Matching:\nProposition 2.13 Consider a \u03b4-Partitionable Fractional Perfect Matching f . Then, for each\n|V |\npartite Ej with j \u2208 [\u03b4], |V (Ej )| = \u03b4 .\nProof. Fix a partite Ej with j \u2208 [\u03b4]. Then,\nX\n\nf (e) =\n\n1\n2\n\n=\n\n1\n2\n\ne\u2208Ej\n\n=\n\nX\n\n\u0010\n\nX\n\n1\n\nv\u2208V (Ej )\n\nX\n\ne\u2208Ej |v\u2208e\n\nv\u2208V (Ej )\n\n|V (Ej )|\n.\n2\n\nSince f is \u03b4-Partitionable, it follows that\n|V (Ej )| = 2 *\n\nX\n\ne\u2208Ej\n\n|V |\n2\u03b4\n|V |\n,\n\u03b4\n\n= 2*\n=\nas needed.\nProposition 2.13 immediately implies:\n22\n\nf (e)\n\n\u0011\nf (e)\n\n\fCorollary 2.14 If G has a \u03b4-Partitionable Fractional Perfect Matching, then \u03b4 divides |V |, so\n|V |\nthat \u03b4 \u2264 2 .\n|V |\nWe observe that the equality in the necessary condition \u03b4 \u2264 2 in Corollary 2.14 is not always\nnecessary:\nProposition 2.15 There is a graph G and an integer \u03b4 such that G has a \u03b4-Partitionable\n|V |\nFractional Perfect Matching while \u03b4 < 2 .\n|V |\nProof. Consider the cycle graph C3 and fix \u03b4 = 1. Clearly, \u03b2 \u2032 (C3 ) = 2 so that \u03b4 < 2 .\nConsider the function f : E(C3 ) \u2192 [0, 1] with f (e) = 12 for each edge e \u2208 E(C3 ). Clearly, f is\nan 1-Partitionable Fractional Perfect Matching, and the claim follows.\nWe finally prove that the equivalence relation on Fractional Perfect Matchings preserves\n\u03b4-Partitionability under a certain containment assumption:\nProposition 2.16 Consider a \u03b4-Partitionable Fractional Perfect Matching f and an equivalent\nFractional Perfect Matching f \u2032 \u2286 f . Then, f \u2032 is \u03b4-Partitionable.\nProof. Consider the \u03b4 (non-empty,) vertex-disjoint partites E1 , * * * , E\u03b4 . Define edge sets\nE1\u2032 , * * * , E\u03b4\u2032 so that for each j \u2208 [\u03b4], Ej\u2032 = {e \u2208 Ej | f \u2032 (e) > 0}. Since f \u2032 \u2286 f , it follows that\nfor each j \u2208 [\u03b4], Ej\u2032 \u2286 Ej . This implies that the collection E1\u2032 , * * * , E\u03b4\u2032 partitions E(f \u2032 ). Since\nthe partites E1 , * * * , E\u03b4 are vertex-disjoint, this also implies that the edge sets E1\u2032 , * * * , E\u03b4\u2032 are\nvertex-disjoint; so call them partites. Fix any partite Ej\u2032 with j \u2208 [\u03b4]. Then,\n\nX\n\nf \u2032 (e)\n\ne\u2208Ej\u2032\n\n=\n=\n=\n=\n=\n=\n=\n\n\u2032\n(since f \u2032 (e) = 0 for each e \u2208 Ej \\Ej\u2032 )\ne\u2208Ej f (e)\nP\nP\n1\n\u2032\n2 * v\u2208V (Ej ) e\u2208Ej |v\u2208e f (e)\nP\n1 *P\n\u2032\nv\u2208V (Ej )\ne\u2208E|v\u2208e f (e)\n2\nP\n1 *P\n(since f and f \u2032 are equivalent)\nv\u2208V (Ej )\ne\u2208E|v\u2208e f (e)\n2\n1 *P\n(since f is Perfect)\nv\u2208V (Ej ) 1\n2\n\nP\n\n1 * |V (E )|\nj\n2\n|V |\n2\u03b4\n\n(by Proposition 2.13).\n\nHence, f \u2032 is \u03b4-Partitionable, as needed.\n23\n\n\f2.4.2\n\nCharacterization\n\nWe show:\nProposition 2.17 A graph G has a \u03b4-Partitionable Fractional Perfect Matching if and only\nif E contains a collection of \u03b4 (non-empty) vertex-disjoint edge sets E1 , * * * , E\u03b4 such that (1)\nS\nj\u2208[\u03b4] Ej is an Edge Cover, and (2) for each edge set Ej with j \u2208 [\u03b4], (i) Ej consists of single\n|V |\nedges and odd cycles, and (ii) |V (Ej )| =\n.\n\u03b4\nNote that the edge sets E1 , * * * , E\u03b4 need not form a partition of E; in contrast, by Condition\n(1), the induced vertex sets V (E1 ), * * * , V (E\u03b4 ) are required to form a partition of V .\nProof. Assume first that G has a \u03b4-Partitionable Fractional Perfect Matching f . By Proposition 2.12, there is an equivalent Fractional Perfect Matching f \u2032 \u2286 f with only single edges\nand odd cycles. Since f is \u03b4-Partitionable and f \u2032 \u2286 f , Proposition 2.16 implies that f \u2032 is\n\u03b4-Partitionable. So, the edge set E(f \u2032 ) can be partitioned into \u03b4 (non-empty), vertex-disjoint\nP\n|V |\npartites E1 , * * * , E\u03b4 so that for each partite Ej with j \u2208 [\u03b4], e\u2208Ej f (e) =\n.\n2\u03b4\n\nConsider now the (vertex-disjoint) edge sets E1 , * * * , E\u03b4 . Since f \u2032 is a Fractional Perfect\nS\nMatching, E(f \u2032 ) is an Edge Cover; so, j\u2208[\u03b4] Ej is an Edge Cover. Consider now any edge set\nEj with j \u2208 [\u03b4]. Since f \u2032 consists of single edges and odd cycles, Condition (2/i) follows; since\nf \u2032 is a Fractional Perfect Matching, Condition (2/ii) follows from Proposition 2.13.\n\nAssume now that E contains a collection of \u03b4 (non-empty,) vertex-disjoint edge sets E1 , * * * , E\u03b4\nS\nsuch that (1) j\u2208[\u03b4] Ej is an Edge Cover, and (2) for each edge set Ej with j \u2208 [\u03b4], (i) Ej is a\n|V |\ncollection of single edges and odd cycles, and (ii) |V (Ej )| =\n. We shall prove that G has a\n\u03b4\n\u03b4-Partitionable Fractional Perfect Matching f . The proof is constructive. Define the function\nf : E \u2192 [0, 1] with\n\uf8f1\n\uf8f4\n\uf8f2 1, if e \u2208 Ej with j \u2208 [\u03b4] and Ej is a single edge\n1 , if e \u2208 E with j \u2208 [\u03b4] and E is an odd cycle .\nf (e) =\nj\nj\n2\n\uf8f4\nS\n\uf8f3\n0, if e \u2208 E\\ j\u2208[\u03b4] Ej\n\nTo prove that f is a Fractional Perfect Matching, consider any vertex v \u2208 V . Since\nis an Edge Cover, this implies that v \u2208 V (Ej ) for some j \u2208 [\u03b4]. There are two cases:\n\u2022 Assume that Ej is a single edge ej . Then, by construction,\n\nP\n\ne\u2208E|v\u2208e f (e)\n\nS\n\nj\u2208[\u03b4] Ej\n\n= f (ej ) = 1.\n\n\u2022 Assume that Ej is an (isolated) odd cycle, so that v = ej \u2229e\u2032j for a pair of consecutive edges\nP\nej , e\u2032j on the cycle. Then, by construction, e\u2208E|v\u2208e f (e) = f (ej ) + f (e\u2032j ) = 21 + 12 = 1.\n24\n\n\fThe case analysis implies that f is a Fractional Perfect Matching. To prove that f is \u03b4Partitionable, consider the partites E1 , * * * , E\u03b4 . Fix any partite Ej with j \u2208 [\u03b4]. Then,\nX\n\nf (e)\n\ne\u2208Ej\n\n=\n=\n=\n=\n\nP\n1P\n2 v\u2208V (Ej ) e\u2208Ej |v\u2208e f (e)\n1P\n(since f is Perfect)\n2 v\u2208V (Ej ) 1\n1 |V (E )|\nj\n2\n|V |\n2\u03b4\n\n(by Condition (2/ii)).\n\nIt follows that f is \u03b4-Partitionable, and the proof is now complete.\nWe observe an interesting special case of Proposition 2.17:\n|V |\nProposition 2.18 A graph G has a 2 -Partitionable Fractional Perfect Matching if and only\nif G is Perfect-Matching.\n|V |\nAssume first that G has a 2 -Partitionable Fractional Perfect Matching. Propo|V |\nsition 2.17 implies that E contains a collection of 2 (non-empty,) vertex-disjoint edge sets\nS\ni\nh\nE1 , * * * , E |V | such that (1)\n|V | Ej is an Edge Cover, and (2) for each edge set Ej with\nj\u2208\n2\nh\ni 2\n|V |\nj \u2208 2 , (i) Ej consists of single edges and odd cycles, and (ii) |V (Ej )| = 2. By Conditions\nProof.\n\n(2/i) and (2/ii), it follows that each edge set Ej with j \u2208 [\u03b4] is a single edge. Hence, the\ncollection of the (vertex-disjoint) edge sets is a Matching. By Condition (1), this implies that\nthe collection of the edge sets is a Perfect Matching.\nAssume that G is Perfect-Matching with a Perfect Matching M . Consider the indicator function\nf : E \u2192 {0, 1} for M , where f (e) = 1 if and only if e \u2208 M ; so, f is a Fractional Perfect Matching,\ni\nh\n|V |\n|V |\nand it remains to show that f is 2 -Partitionable. For each edge ej \u2208 M with j \u2208 2 ,\ndefine the partite Ej := {ej }. Since M is a Perfect Matching, the partites are vertex-disjoint.\nP\n|V |\nSo, for each Ej with j \u2208 [\u03b4], e\u2208Ej f (e) = 1 =\n, and this completes the proof.\n|V |\n2 2\n2.4.3\n\nComplexity\n\nWe define a natural decision problem about \u03b4-Partitionable Fractional Perfect Matchings:\n\u03b4-PARTITIONABLE FPM\nInstance: A graph G = hV, Ei and an integer \u03b4 which divides |V |.\nQuestion: Is there a \u03b4-Partitionable Fractional Perfect Matching for G?\n25\n\n\fNote that the restriction to instances for which \u03b4 divides |V | is inherited from Corollary 2.14\nin order to exclude the non-interesting instances.\n|V |\nProposition 2.18 identifies a tractable special case of \u03b4-PARTITIONABLE FPM (namely, 2 PARTITIONABLE FPM). We shall use Proposition 2.17 to show that in the general case where \u03b4\nis arbitrary, \u03b4-PARTITIONABLE FPM is N P-complete. To do so, we shall observe an interesting\nrelation of some other (intractable) special case of the problem to a well known graph-theoretic\nproblem:\nPARTITION INTO TRIANGLES\nInstance: A graph G = hV, Ei with |V | = 3\u03b4 for some integer \u03b4.\nQuestion: Can V be partitioned into \u03b4 disjoint vertex sets V1 , * * * , V\u03b4 , each containing exactly\nthree vertices, such that for each j \u2208 [\u03b4], E(Vj ) is a triangle?\nThis problem is known to be N P-complete [9, GT11, attribution to (personal communication\nwith) Schaefer]. (This restriction to graphs G = hV, Ei with |V | = 3\u03b4 is made in order to exclude\nthe non-interesting instances.) To prove that \u03b4-PARTITIONABLE FPM is N P-complete (for an\n|V |\narbitrary \u03b4), we consider the special case of it with \u03b4 = 3 :\n|V |\n3 -PARTITIONABLE FPM\nInstance: A graph G = hV, Ei with |V | = 3\u03b4 for some integer \u03b4.\n|V |\nQuestion: Is there a 3 -Partitionable Fractional Perfect Matching for G?\n|V |\n(The restriction to graphs G = hV, Ei with |V | = 3\u03b4 is necessary since \u03b4 = 3 is an integer.)\nTo prove that this special case is intractable, we prove that it coincides with PARTITION INTO\nTRIANGLES: it incurs an identical set of positive instances. We prove:\nProposition 2.19\n\n|V |\n3 -PARTITIONABLE FPM = PARTITION INTO TRIANGLES\n\nProof. Consider a graph G = hV, Ei with |V | = 3\u03b4 for some integer \u03b4. Assume first that G is a\n|V |\npositive instance for 3 -PARTITIONABLE FPM. By Proposition 2.17, E contains a collection\nS \"\n|V |\n#\nof 3 (non-empty,) vertex-disjoint edge sets E1 , * * * , E |V | such that (1)\n|V | Ej is an\nj\u2208\n3\n3\nEdge Cover, and (2) each edge set Ej consists\nof\nsingle\nedges\nand\nodd\ncycles\nwith\n|V (Ej )| = 3.\n\u0015\n\u0014\n|V |\nIt follows that each edge set Ej with j \u2208 3 is a triangle. This implies that G is a positive\ninstance for PARTITION INTO TRIANGLES (with vertex sets V (E1 ), * * * , V (E |V | )).\n3\n26\n\n\fAssume now that G is a positive instance for PARTITION INTO TRIANGLES. Consider\n|V |\nthe corresponding partition of V into \u03b4 = 3 disjoint vertex sets V1 , * * * , V |V | . This par3\n|V |\ntition induces a corresponding partition of E into a collection of 3 vertex-disjoint partites\nE1 , * * * , E |V | , where each partite Ej is a single triangle. Proposition 2.17 implies that G has\n3\n|V |\n|V |\na 3 -Partitionable Fractional Perfect Matching. Hence, G is a positive instance for 3 PARTITIONABLE FPM, and we are done.\n|V |\n|V |\nBy Proposition 2.19, it follows that 3 -PARTITIONABLE FPM is N P-complete. Since 3 PARTITIONABLE FPM is a special case of \u03b4-PARTITIONABLE FPM, this implies:\nCorollary 2.20 \u03b4-PARTITIONABLE FPM is N P-complete.\n\n3\n\nA Combinatorial Lemma\n\nIn this section, we prove a combinatorial lemma that will be useful later.\nFor a probability x, we define two probability literals, or literals for short: the positive literal\nx and the negative literal x\u0304 = 1 \u2212 x. A probability product, or product for short, is a product\nof probability literals x1 * * * xn for any n \u2265 1; we adopt the convention that xl1 * * * xl2 = 1\nwhenever l2 < l1 . A constant probability product is the trivial one which equals to 1 and has\nno literals. The expansion of a probability product is obtained when substituting each negative\nliteral x with 1 \u2212 x. So, an expansion contains positive literals and no negative literals.\nThe probability product x1 * * * xn is positive if all its probability literals are positive. More\ngenerally, for any integer l \u2264 n, the probability product x1 * * * xn is l-positive if exactly l of its\nprobability literals are positive; so, an n-positive probability product is a positive probability\nproduct. For each l \u2208 [n], denote as Posl (x1 , . . . , xn ) the collection of all l-positive probability\nproducts with literals defined from the probabilities x1 , . . . , xn . We prove a combinatorial\nidentity for sums of probability products:\nLemma 3.1 For each integer n \u2265 2,\nX 1\n*\nl\n\nl\u2208[n]\n\nX\n\nx2 ...xn \u2208Posl\u22121 (x2 ,...,xn )\n\nx2 * * * xn\n\n=\n\nX\n\n(\u22121)l\u22121 *\n\nl\u2208[n]\n\n1\n*\nl\n\nX\n\nx2 * * * xl .\n\nx2 ...xl \u2208Posl\u22121 (x2 ,...,xn )\n\nNote that the right-hand side (RHS) is a weighted sum of positive probability products, with\nweights of alternating signs. In contrast, the left-hand side (LHS) is a weighted sum of arbitrary\n\n27\n\n\f(not necessarily positive) probability products, with positive weights; an (l\u22121)-positive product\nin the LHS is multiplied by 1 .\nl\nProof.\n\nIt suffices to establish that for each l \u2208 [n], each (positive) probability product\n\nx2 * * * xl \u2208 Posl\u22121 (x2 , . . . , xn ) from the RHS appears in the expansion of the LHS with the same\ncoefficient. We proceed by case analysis on l.\n\u2022 Assume first that l = 1, and fix any product x2 * * * xl \u2208 Posl\u22121 (x2 , . . . , xn ) with l = 1 in\nthe RHS. By convention, there is only one such product and it is constant. The coefficient\nof this product is (\u22121)1\u22121 *\n\n1\n1\n\n= 1.\n\nIn the LHS, the only constant term is the constant term in the sum\nX\n\n= x2 * * * xn .\n\nx2 * * * xn\n\nx2 ***xn \u2208Posl\u22121 (x2 ,...,xn )\n\nl=1\n\nClearly, this constant term is 1 and its coefficient is\n\n1\n1\n\n= 1. The claim follows for l = 1.\n\n\u2022 Assume now that l \u2265 2, and fix any product x2 * * * xl \u2208 Posl\u22121 (x2 , . . . , xn ) from the sum\nP\nx2 ***xl \u2208Posl\u22121 (x2 ,...,xn ) x2 * * * xl in the RHS. Note that all products in Posl\u22121 (x2 , . . . , xn )\n(in the RHS) have the same coefficient, which is (\u22121)l\u22121 * 1 . We calculate the coefficient\nl\nof this particular product in the expansion of the LHS.\nClearly, a k-positive product with k \u2265 l in the LHS cannot include x2 * * * xl in its expansion. So, we only need to consider contributions from the expansions of k-positive\nproducts with 0 \u2264 k \u2264 l \u2212 1 (in the LHS) to the coefficient of the product x2 * * * xl in the\nexpansion of the LHS.\n\u2013 Note that there are\n\nl\u22121\nk\n\n\u0001\n\nways to choose k positive literals (or l \u2212 1 \u2212 k negative\n\nliterals) out of the (l \u2212 1) literals x2 , . . . , xl in order to form a k-positive product\nthat includes x2 * * * xl (multiplied with a coefficient) in its expansion. (All literals\nxl+1 , . . . , xn have to be negative since they do not appear in the product x2 * * * xl .)\n\u2013 The sign of the resulting k-positive product is (\u22121)(l\u22121)\u2212k , since each of the (l\u22121)\u2212k\nnegative literals in it contributes one minus sign. (The negative literals xl+1 , . . . , xn\ndo not contribute to the sign.).\n\u2013 The absolute value of the coefficient of the resulting k-positive product is\nSo, the coefficient of x2 * * * xl in the expansion of the LHS is\n\n28\n\n1 .\nk+1\n\n\fX\n\n0\u2264k\u2264l\u22121\n\n\u0012\n\n\u0013\n1\nl\u22121\n(\u22121)(l\u22121)\u2212k\nk+1\nk\n\n\u0012\n\n\u0013\n1\nl\u22121\n(\u22121)(l\u22121)\u2212k\nl \u2212 ((l \u2212 1) \u2212 k)\n(l \u2212 1) \u2212 k\n0\u2264k\u2264l\u22121\nX \u0012l \u2212 1\u0013\n1\n=\n(\u22121)k\nl\u2212k\nk\n0\u2264k\u2264l\u22121\n\u0012 \u0013\n1 X\nl\n=\n(\u22121)k\nl\nk\n0\u2264k\u2264l\u22121\n\uf8eb\n\uf8f6\n\u0012 \u0013\n\u0012 \u0013\nX\nl\nl\n1 \uf8ed\n(\u22121)k \u2212\n(\u22121)l \uf8f8\n=\nl\nk\nl\nX\n\n=\n\n0\u2264k\u2264l\n\n=\n\n=\n\n1\n(0 + (\u22121)l\u22121 )\nl\n1\n(\u22121)l\u22121 ,\nl\n\nand the claim follows for l \u2265 2.\nThe proof is now complete.\n\n4\n\nGame-Theoretic Framework\n\nSection 4.1 introduces the strategic game AD\u03b1,\u03b4 (G). The associated pure Nash equilibria are\ndefined in Section 4.2. Section 4.3 considers mixed profiles; their associated Expected Utilities\nare treated in Section 4.4. (Mixed) Nash equilibria are introduced in Section 4.5. Some special\nprofiles and corresponding special classes of Nash equilibria are treated in Section 4.6. Some\nnotation is articulated in Section 4.7.\n\n4.1\n\nThe Strategic Game AD\u03b1,\u03b4 (G)\n\nFix integers \u03b1 \u2265 1 and \u03b4 \u2265 1. Associated with a graph G is a (strategic) game AD\u03b1,\u03b4 (G):\n\n29\n\n\f\u2022 The set of players is A \u222a D; A contains \u03b1 attackers ai with i \u2208 [\u03b1], and D contains\n\u03b4 defenders dj with j \u2208 [\u03b4].\n\u2022 The strategy set Sa of each attacker a is V ; the strategy set Sd of each defender d is\nE. So, the strategy space S is S = (\u00d7a\u2208A Sa ) \u00d7 (\u00d7d\u2208D Sd ) = V \u03b1 \u00d7 E \u03b4 .\nA profile (or pure profile) is an (\u03b1 + \u03b4)-tuple s = hsa1 , . . . , sa\u03b1 , sd1 , . . . , sd\u03b4 i \u2208 S. The\nprofile s\u2212b \u22c4 tb is obtained from the profile s and a strategy tb for player b \u2208 A \u222a D by\nsubstituting tb for sb in the profile s.\nFor each vertex v \u2208 V , As (v) = {a \u2208 A | sa = v} and Ds (v) = {d \u2208 D | v \u2208 sd }. Assume\nthat v \u2208 sd . Then, the proportion Props (d, v) of defender d on vertex v in the profile\n1 .\ns is given by Props (d, v) =\n|Ds (v)|\n\u2022\n\n\u2013 The Utility of attacker a is a function Ua : S \u2192 {0, 1} with\n(\n0 , if sa \u2208 sd for some defender d \u2208 D\nUa (s) =\n1 , if sa 6\u2208 sd for every defender d \u2208 D\n\n.\n\nIntuitively, when the attacker a chooses vertex v, she receives 0 if it is caught by\na defender; otherwise, she receives 1.\n\u2013 The Utility of defender d is a function Ud : S \u2192 Q with\nUd (s) =\n\n|As (u)|\n|As (v)|\n+\n,\n|Ds (u)| |Ds (v)|\n\nwhere sd = (u, v). Intuitively, the defender d receives the fair share of the total\nnumber of attackers choosing each of the two vertices of the edge it chooses.\n\n4.2\n\nPure Nash Equilibria\n\nThe profile s is a Pure Nash equilibrium [26, 27] if for each player b \u2208 A \u222a D, for each\nstrategy tb \u2208 Sb , Ub (s) \u2265 Ub (s\u2212b \u22c4 tb ); so, a Pure Nash equilibrium is a local maximizer for the\nUtility of each player. Say that G admits a Pure Nash equilibrium, or G is Pure, if there\nis a Pure Nash equilibrium for the strategic game AD\u03b1,\u03b4 (G).\n\n4.3\n\nMixed Profiles\n\nA mixed strategy for a player is a probability distribution over her strategy set; so, a mixed\nstrategy for an attacker (resp., a defender) is a probability distribution over vertices (resp.,\nedges). A mixed profile (or profile for short) \u03c3 = h\u03c3a1 , . . . , \u03c3a\u03b1 , \u03c3d1 , . . . , \u03c3d\u03b4 i is a collection\n\n30\n\n\fof mixed strategies, one for each player; \u03c3a (v) is the probability that attacker a chooses vertex\nv, and \u03c3d (e) is the probability that defender d chooses edge e.\n4.3.1\n\nSupports\n\nFix now a mixed profile \u03c3. The support of player b \u2208 A \u222a D in the profile \u03c3, denoted as\nSupport\u03c3 (b), is the set of pure strategies in Sb to which b assigns strictly positive probability.\nS\nS\nDenote Supports\u03c3 (A) = a\u2208A Support\u03c3 (a) and Supports\u03c3 (D) = d\u2208D Support\u03c3 (d). A mixed\n\nprofile \u03c3 induces a probability measure P\u03c3 (on pure profiles) in the natural way. Note that in\na pure profile s, Supportss (A) \u2264 \u03b1 and Supportss (D) \u2264 \u03b4.\n4.3.2\n\nExpectations about Attackers\n\nFor each vertex v \u2208 V , denote as |A|\u03c3 (v) the expected number of attackers choosing vertex v\nin \u03c3; so,\n|A|\u03c3 (v) =\n\nX\n\n\u03c3a (v) .\n\na\u2208A\n\nClearly, |A|\u03c3 (v) > 0 if and only if v \u2208 Supports\u03c3 (A). For an edge (u, v) \u2208 E, denote\n|A|\u03c3 ((u, v)) = |A|\u03c3 (u) + |A|\u03c3 (v).\nWe observe:\nObservation 4.1 For a mixed profile \u03c3,\nX\n\n|A|\u03c3 (v) = \u03b1.\n\nv\u2208Supports \u03c3 (A)\n\nProof. Clearly,\nX\n\n|A|\u03c3 (v) =\n\nX\n\nX\n\n\u03c3a (v)\n\nv\u2208Supports \u03c3 (A) a\u2208A\n\nv\u2208Supports \u03c3 (A)\n\n=\n\nX\n\nX\n\na\u2208A v\u2208Supports \u03c3 (A)\n\n=\n\nX\n\na\u2208A\n\n= \u03b1,\nas needed.\n31\n\n1\n\n\u03c3a (v)\n\n\f4.3.3\n\nHitting Events and Vertices\n\nFix a vertex v \u2208 V . For a defender d, denote as Hit(d, v) the event that defender d chooses an\nedge incident to vertex v; clearly, for the mixed profile \u03c3,\nX\nP\u03c3 (Hit(d, v)) =\n\n\u03c3d (e).\n\ne\u2208Support\u03c3 (d)|v\u2208e\n\nDenote as Hit(v) the event that some defender chooses an edge incident to vertex v. Clearly,\n[\nHit(v) =\nHit(d, v).\nd\u2208D\n\nFinally, denote as D\u03c3 (v) the set\n\nD\u03c3 (v) =\n\nn\n\no\nd \u2208 D | there is an edge e \u2208 Support\u03c3 (d) such that v \u2208 e ;\n\nso, D\u03c3 (v) is the set of defenders \"hitting\" vertex v.\n\nA vertex v \u2208 V is multidefender in the profile \u03c3 if |D\u03c3 (v)| \u2265 2; that is, a multidefender\nvertex is \"hit\" by more than one defenders. A vertex v \u2208 V is unidefender in \u03c3 if |D\u03c3 (v)| \u2264 1;\nv is monodefender in \u03c3 if |D\u03c3 (v)| = 1. So, for each unidefender (resp., monodefender) vertex\nv, there is at most (resp., exactly) one defender d with an edge e \u2208 Support\u03c3 (d) such that v \u2208 e;\nif there is such a defender, denote it as d\u03c3 (v), else, set, by convention, P\u03c3 Hit((d\u03c3 (v), v)) = 0.\nA profile \u03c3 is unidefender (resp., monodefender ) if every vertex v \u2208 V is unidefender\n(resp., monodefender) in \u03c3; else the profile \u03c3 is multidefender. Note that for a unidefender\n(resp., monodefender) profile \u03c3, for each edge e \u2208 E, there is at most (resp., exactly) one\ndefender d such that \u03c3d (e) > 0; if there is such a defender d, denote it as d\u03c3 (e), else set, by\nconvention, P\u03c3 (d\u03c3 (e), e) = 0.\n4.3.4\n\nHitting Probabilities\n\nSince the events Hit(dj , v) and Hit(dj \u2032 , v) with j 6= j \u2032 are independent and not mutually exclusive\n(for a fixed vertex v), we immediately obtain a strengthening of the Union Bound:\nObservation 4.2 For each vertex v \u2208 V ,\n(\nP\nP\u03c3 (Hit(d, v)), if v is multidefender in \u03c3\n<\n.\nP\u03c3 (Hit(v))\nPd\u2208D\n=\nd\u2208D P\u03c3 (Hit(d, v)), if v is unidefender in \u03c3\n\nBy the Principle of Inclusion-Exclusion, we immediately observe:\n32\n\n\fLemma 4.1 For a vertex v \u2208 V ,\nP\u03c3 (Hit(v)) =\n\nX\n\nX\n\n(\u22121)l\u22121\n\nY\n\nP\u03c3 (Hit(d, v)) .\n\nD \u2032 \u2286D||D \u2032 |=l d\u2208D \u2032\n\nl\u2208[\u03b4]\n\nWe continue to prove:\nLemma 4.2 For a mixed profile \u03c3,\n(\nX\n< 2 \u03b4, if \u03c3 is multidefender\n.\nP\u03c3 (Hit(v))\n=\n2\n\u03b4,\nif\n\u03c3\nis\nunidefender\nv\u2208V\nProof. Clearly,\nXX\n\nP\u03c3 (Hit(d, v)) =\n\nv\u2208V d\u2208D\n\nXX\n\nX\n\n\u03c3d (e)\n\nv\u2208V d\u2208D e\u2208Support\u03c3 (d)|v\u2208e\n\n= 2\n\nXX\n\n\u03c3d (e)\n\ne\u2208E d\u2208D\n\n= 2\n\nXX\n\n\u03c3d (e)\n\nd\u2208D e\u2208E\n\n= 2\u03b4.\nHence, by Observation 4.2,\nX\n\nv\u2208V\n\nP\u03c3 (Hit(v))\n\n(\n(\n\nP\nP\nP\u03c3 (Hit(d, v)), if \u03c3 is multidefender\n<\nv\u2208V\nP\nPd\u2208D\n=\nv\u2208V\nd\u2208D P\u03c3 (Hit(d, v)), if \u03c3 is unidefender\n\n< 2 \u03b4, if \u03c3 is multidefender\n= 2 \u03b4, if \u03c3 is unidefender\n\n,\n\nas needed.\n4.3.5\n\nMinimum Hitting Probability, Maxhit Vertices and Maxhitters\n\nDenote as\nMinHit\u03c3 = min P\u03c3 (Hit(v))\nv\u2208V\n\nthe Minimum Hitting Probability associated with the mixed profile \u03c3. We observe:\nLemma 4.3 For a mixed profile \u03c3,\nMinHit\u03c3 \u2264\n\n33\n\n2\u03b4\n.\n|V |\n\n\fProof. Assume, by way of contradiction, that MinHit\u03c3 > 2\u03b4 . Then,\n|V |\nX\nP\u03c3 (Hit(v)) \u2265 |V | * MinHit\u03c3\nv\u2208V\n\n> 2\u03b4,\n\na contradiction to Lemma 4.2.\nA vertex v \u2208 V is maxhit in the profile \u03c3 if P\u03c3 (Hit(v)) = 1; say that a defender d \u2208 D is a\nmaxhitter in \u03c3 if there is a vertex v \u2208 Vertices(Support\u03c3 (d)) such that P\u03c3 (Hit(d, v)) = 1. We\nobserve:\nLemma 4.4 Consider a maxhit vertex v in a profile \u03c3. Then, there is a (maxhitter) defender\nd (in \u03c3) with P\u03c3 (Hit(d, v)) = 1.\nProof.\n\nAssume, by way of contradiction, that for each defender d \u2208 D, P\u03c3 (Hit(d, v)) < 1.\n\nSince the set {Hit(d, v) | d \u2208 D} is a family of independent events with none of them being\nS\ncertain, this implies that the event Hit(v) = d\u2208D Hit(d, v) is not certain. So, P\u03c3 (Hit(v)) < 1.\nA contradiction.\n\n4.4\n\nExpected Utilities\n\nThe mixed profile \u03c3 induces an Expected Utility Ub (\u03c3) for each player b \u2208 A \u222a D, which is\nthe expectation (according to \u03c3) of the Utility of player b. We shall derive some formulas for\nExpected Utilities. To do so, we first define and derive formulas for some auxiliary quantities. In\nmore detail, we define the Conditional Expected Proportion associated with the defenders; we\nthen use it to derive an expression for the Conditional Expected Utility for each attacker. The\nExpected Utility of each attacker is then derived as a weighted sum of Conditional Expected\nUtilities. Similarly, the Expected Utility of each defender is derived as a weighted sum of\nConditional Expected Utilities defined for the defenders in the natural way.\n4.4.1\n\nConditional Expected Proportion\n\nInduced by \u03c3 is the Conditional Expected Proportion Propd (\u03c3\u2212d \u22c4 v) of defender d \u2208 D on\nvertex v, which is the expectation (induced by \u03c3) of the proportion of defender d on vertex v\nhad she chosen an edge incident to vertex v. Clearly,\nPropd (\u03c3\u2212d \u22c4 v) =\n\nX 1\nl\n\nl\u2208[\u03b4]\n\nX\n\nY\n\nD \u2032 \u2286D\\{d}||D \u2032 |=l\u22121 dk \u2208D \u2032\n\nP\u03c3 (Hit(dk , v))\n\nY\n\n(1 \u2212 P\u03c3 (Hit(dk , v)))\n\ndk 6\u2208D \u2032 \u222a{d}\n\nLemma 3.1 implies now an alternative expression for Conditional Expected Proportion.\n34\n\n\fLemma 4.5 For each pair of a defender d \u2208 D and a vertex v \u2208 V ,\nPropd (\u03c3\u2212d \u22c4 v) =\n\nX1\n(\u22121)l\u22121\nl\n\nX\n\nP\u03c3 (Hit(dk , v)) .\n\nD \u2032 \u2286D\\{d}||D \u2032 |=l\u22121 dk \u2208D \u2032\n\nl\u2208[\u03b4]\n\n4.4.2\n\nY\n\nAttackers\n\nInduced by \u03c3 is the Conditional Expected Utility Ua (\u03c3\u2212a \u22c4 v) of attacker a \u2208 A on vertex v,\nwhich is the conditional expectation (induced by \u03c3) of the Utility of attacker a had she chosen\nvertex v. Clearly,\nUa (\u03c3\u2212a \u22c4 v) = 1 \u2212 P\u03c3 (Hit(v)) .\nBy the Law of Conditional Alternatives, we immediately obtain:\nLemma 4.6 Fix a mixed profile \u03c3. Then, the Expected Utility Ua (\u03c3) of an attacker a \u2208 A is\nX\n\nUa (\u03c3) =\n\n\u03c3a (v) * (1 \u2212 P\u03c3 (Hit(v))) .\n\nv\u2208V\n\nWe continue with a preliminary observation:\nLemma 4.7 Fix a mixed profile \u03c3. Then, for each vertex v \u2208 V ,\nX\n\nP\u03c3 (Hit(v)) =\n\nP\u03c3 (Hit(d, v)) * Propd (\u03c3\u2212d \u22c4 v) .\n\nd\u2208D\n\nProof. By Lemma 4.5,\nX\n\nP\u03c3 (Hit(d, v)) * Propd (\u03c3\u2212d \u22c4 v)\n\nX\n\n\uf8ecX 1\n\uf8ec\n(\u22121)l\u22121\nP\u03c3 (Hit(d, v)) * \uf8ec\nl\n\uf8ed\n\nd\u2208D\n\n=\n\nd\u2208D\n\n=\n\n\uf8eb\n\nl\u2208[\u03b4]\n\nXX 1\n(\u22121)l\u22121\nl\n\nd\u2208D l\u2208[\u03b4]\n\n=\n\nX\n\nl\u2208[\u03b4]\n\n(\u22121)l\u22121 *\n\n1X\nl\n\nX\n\nD \u2032 \u2286D\\{d}\n|D \u2032 |=l\u22121\n\nX\n\nd\u2208D D \u2032 \u2286D\\{d}\n|D \u2032 |=l\u22121\n\nX\n\nY\n\nD \u2032 \u2286D\\{d} dk \u2208D\n|D \u2032 |=l\u22121\n\n\uf8f7\n\uf8f7\nP\u03c3 (Hit(dk , v))\uf8f7\n\uf8f8\n\u2032\n\nY\n\nP\u03c3 (Hit(dk , v))\n\nY\n\nP\u03c3 (Hit(dk , v)).\n\ndk \u2208D \u2032 \u222a{d}\n\ndk \u2208D \u2032 \u222a{d}\n\n35\n\n\uf8f6\n\n\fNote that for each integer l \u2208 [\u03b4], for each set D \u2032\u2032 \u2286 D with |D \u2032\u2032 | = l, there are l pairs of a\ndefender d \u2208 D such that d \u2208 D \u2032\u2032 and a set D \u2032 \u2286 D \u2032\u2032 such that D \u2032 \u2286 D \\ {d} and |D \u2032 | = l \u2212 1.\nHence,\n\nX\n\nD \u2032\u2032 \u2286D\n|D \u2032\u2032 |=l\n\nY\n\nP\u03c3 (Hit(dk , v)) =\n\ndk \u2208D \u2032\u2032\n\n1X\nl\n\nX\n\nd\u2208D D \u2032 \u2286D\\{d}\n|D \u2032 |=l\u22121\n\nY\n\nP\u03c3 (Hit(dk , v)).\n\ndk \u2208D \u2032\n\nIt follows that\nX\n\nP\u03c3 (Hit(d, v)) * Propd (\u03c3\u2212d \u22c4 v)\n\n=\n\nd\u2208D\n\nX\n\n(\u22121)l\u22121\n\nl\u2208[\u03b4]\n\n=\n\nX\n\nD \u2032 \u2286D\n|D \u2032 |=l\n\nY\n\nP\u03c3 (Hit(dk , v))\n\ndk \u2208D \u2032\n\nP\u03c3 (Hit(v)),\n\nas needed.\n4.4.3\n\nDefenders\n\nInduced by \u03c3 is also the Conditional Expected Utility Ud (\u03c3\u2212d \u22c4 (u, v)) of defender d on edge\n(u, v) \u2208 E, which is the conditional expectation (induced by \u03c3) of the Utility of defender d had\nshe chosen edge (u, v). Clearly,\nUd ((\u03c3\u2212d \u22c4 (u, v))) = Propd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v) .\nWe prove:\nLemma 4.8 Fix a mixed profile \u03c3. Then, the Expected Utility of a defender d \u2208 D is\nX\nUd (\u03c3) =\nP\u03c3 (Hit(d, v)) * Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v) .\nv\u2208V\n\nProof. By the Law of Conditional Alternatives,\nUd (\u03c3) =\n\nX\n\n\u03c3d ((u, v)) * Ud ((\u03c3\u2212d \u22c4 (u, v)))\n\n(u,v)\u2208E\n\n=\n\nX\n\n(u,v)\u2208E\n\n=\n\nX\n\nv\u2208V\n\n=\n\nX\n\n\uf8eb\n\uf8ed\n\n\u0010\n\u0011\n\u03c3d ((u, v)) * Propd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v)\nX\n\ne|v\u2208e\n\n\uf8f6\n\n\u03c3d (e)\uf8f8 * Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v)\n\nP\u03c3 (Hit(d, v)) * Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v) ,\n\nv\u2208V\n\nas needed.\n36\n\n\f4.5\n\nNash Equilibria\n\nA mixed profile \u03c3 is a Nash equilibrium [26, 27] if for each player b \u2208 A \u222a D, for each mixed\nstrategy \u03c4b of player b, Ub (\u03c3) \u2265 Ub (\u03c3\u2212b \u22c4 \u03c4b ); so, a Nash equilibrium is a local maximizer of the\nExpected Utility of each player. A (necessary and) sufficient condition for a Nash equilibrium\n\u03c3 is that for each player b \u2208 A \u222a D, for each pure strategy tb of player b, Ub (\u03c3) \u2265 Ub (\u03c3\u2212b \u22c4 tb ).\nBy the celebrated Theorem of Nash [26, 27], AD\u03b1,\u03b4 (G) has at least one Nash equilibrium. Say\nthat G admits a Nash equilibrium with a particular property if the game AD\u03b1,\u03b4 has a Nash\nequilibrium with this particular property.\nClearly, in a Nash equilibrium \u03c3, for each attacker a \u2208 A, Ua (\u03c3\u2212a \u22c4 v) is constant over\nall vertices v \u2208 Support\u03c3 (a); for each defender d \u2208 D, Ud (\u03c3\u2212d \u22c4 e) is constant over all edges\ne \u2208 Support\u03c3 (d). It follows that in a Nash equilibrium \u03c3, for each attacker a \u2208 A,\nUa (\u03c3) = 1 \u2212 P\u03c3 (Hit(v)),\nfor any vertex v \u2208 Support\u03c3 (a). So, for each attacker a \u2208 A, the quantity P\u03c3 (Hit(v)) is constant\nover all vertices v \u2208 Support\u03c3 (a). In the same way, for each defender d \u2208 D,\nUd (\u03c3) = Propd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v),\nfor any edge (u, v) \u2208 Support\u03c3 (d). So, for each defender d \u2208 D, the quantity Propd (\u03c3\u2212d \u22c4 u) *\n|A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v) is constant over all edges (u, v) \u2208 Support\u03c3 (d). Note that\nin a Nash equilibrium \u03c3, for each defender d \u2208 D, Ud (\u03c3) > 0; in contrast, it is possible that\nUa (\u03c3) = 0 for some attacker a \u2208 A. (See, for an example, the proof of Theorem 9.2.)\n\n4.6\n\nSome Special Profiles\n\nA profile \u03c3 is uniform if each player uses a uniform probability distribution on its support;\n1\nso, for each attacker a \u2208 A, for each vertex v \u2208 Support\u03c3 (a), \u03c3a (v) =\n, and for\n|Support\u03c3 (a)|\n1\neach defender d \u2208 D, for each edge e \u2208 Support\u03c3 (d), \u03c3d (e) =\n.\n|Support\u03c3 (d)|\nA profile \u03c3 is attacker-symmetric (resp., defender-symmetric) if for all pairs of attackers ai and ak (resp., all pairs of defenders dj and dk ), for all vertices v \u2208 V , (resp., all\nedges e \u2208 E) \u03c3ai (v) = \u03c3ak (v) (resp., \u03c3dj (e) = \u03c3dk (e)). A profile is attacker-uniform (resp.,\ndefender-uniform ) if each attacker (resp., defender) uses a uniform probability distribution\non his support. Now, Attacker-Symmetric (resp., Defender-Symmetric) Nash equilibria and Attacker-Uniform (resp., Defender-Uniform ) Nash equilibria are defined in\nthe natural way. A Symmetric Nash equilibrium is both Attacker-Symmetric and DefenderSymmetric. A Uniform Nash equilibrium is both Attacker-Uniform and Defender-Uniform.\n37\n\n\fA profile \u03c3 is attacker-fullymixed (resp., defender-fullymixed ) if for each attacker a\n(resp., for each defender d), Support\u03c3 (a) = V (resp., Support\u03c3 (d) = E). Now, AttackerFullymixed (resp., Defender-Fullymixed ) Nash equilibria are defined in the natural way.\nA Fullymixed Nash equilibrium is both Attacker-Fullymixed and Defender-Fullymixed.\nA profile \u03c3 is defender-pure if each defender chooses a single strategy with probability 1 in\n\u03c3. Now Defender-Pure Nash equilibria are defined in the natural way. Say that G admits\na Defender-Pure Nash equilibrium, or G is Defender-Pure, if there is a Defender-Pure\nNash equilibrium for the strategic game AD\u03b1,\u03b4 (G).\nFix now a Perfect-Matching graph. Say that a profile is perfect-matching if Supports\u03c3 (D)\nis a Perfect Matching. Now, Perfect-Matching Nash equilibria are defined in the natural\nway.\n\n4.7\n\nNotation\n\nFix a mixed profile \u03c3. For a vertex v \u2208 V , set\nEdges\u03c3 (v) = {e \u2208 Supports\u03c3 (D) | v \u2208 e} ;\nso, Edges\u03c3 (v) consists of all edges incident to v that are included in the union of supports of\nthe defenders. For a vertex set U \u2286 V , set\n[\n\nEdges\u03c3 (U ) =\n\nEdges\u03c3 (v);\n\nv\u2208U\n\nso, Edges\u03c3 (U ) consists of all edges incident to a vertex in U that are included in the union of\nsupports of the defenders.\nFor an edge e \u2208 E, set\nVertices\u03c3 (e) = {v \u2208 e | v \u2208 Supports\u03c3 (A)} ;\nso, |Vertices\u03c3 (e)| \u2264 2. For an edge set F \u2286 E, set\nVertices\u03c3 (F ) =\n\n[\n\nVertices\u03c3 (e);\n\ne\u2208F\n\nso, Vertices\u03c3 (F ) consists of all vertices incident to an edge in U that are included in the union\nof supports of the attackers.\n\n38\n\n\f5\n\nThe Structure of Nash Equilibria\n\nWe provide an analysis of the combinatorial structure of the Nash equilibria associated with\nthe strategic game AD\u03b1,\u03b4 (G). Section 5.1 presents a combinatorial characterization of Nash\nequilibria. Some necessary conditions for Nash equilibria are derived in Section 5.2. Section\n5.3 treats the special case of Pure Nash equilibria.\n\n5.1\n\nCombinatorial Characterization\n\nWe show:\nProposition 5.1 (Characterization of Nash Equilibria) A profile \u03c3 is a Nash equilibrium if and only if the following conditions hold:\n(1) For each vertex v \u2208 Supports\u03c3 (A), P\u03c3 (Hit(v)) = MinHit\u03c3 .\n(2) For each defender d \u2208 D, for each edge (u, v) \u2208 Support\u03c3 (d),\nPropd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v)\no\nn\n= max(u\u2032 ,v\u2032 )\u2208E Propd (\u03c3\u2212d \u22c4 u\u2032 ) * |A|\u03c3 (u\u2032 ) + Propd (\u03c3\u2212d \u22c4 v \u2032 ) * |A|\u03c3 (v \u2032 ) .\n\nProof. Assume first that \u03c3 is a Nash equilibrium. To establish Condition (1), consider any\nvertex v \u2208 Supports\u03c3 (A); so, v \u2208 Support\u03c3 (a) for some attacker a. Since \u03c3 is a Nash equilibrium,\nP\u03c3 (Hit(v \u2032 )) is constant over all vertices v \u2032 \u2208 Support\u03c3 (a). We prove:\nLemma 5.2 Fix any vertex u 6\u2208 Support\u03c3 (a). Then,\nP\u03c3 (Hit(u)) \u2265 P\u03c3 (Hit(v)).\nProof. Assume, by way of contradiction, that P\u03c3 (Hit(u)) < P\u03c3 (Hit(v)). Define \u03c4 = \u03c3\u2212a \u22c4 \u03c4a ,\nwhere \u03c4a is any mixed strategy of attacker a such that u \u2208 Support\u03c4 (a). So, by construction,\nP\u03c4 (Hit(u)) = P\u03c3 (Hit(u)). Then,\nUa (\u03c3\u2212a \u22c4 \u03c4a )\n= 1 \u2212 P\u03c4 (Hit(u)) (since u \u2208 Support\u03c4 (a))\n= 1 \u2212 P\u03c3 (Hit(u))\n> 1 \u2212 P\u03c3 (Hit(v)) (by assumption)\n=\n\nUa (\u03c3)\n\n(since v \u2208 Support\u03c3 (a)),\n\na contradiction.\n39\n\n\fWe are now ready to prove Condition (1). Consider any vertex u 6\u2208 Support\u03c3 (a) such\nthat u \u2208 Support\u03c3 (ak ) for some attacker ak . (If such a vertex does not exist, then we are\ndone). By Lemma 5.2, P\u03c3 (Hit(v)) \u2264 P\u03c3 (Hit(u)). Assume, by way of contradiction, that\nP\u03c3 (Hit(v)) < P\u03c3 (Hit(u)). Since \u03c3 is a local maximizer of the Expected Utility of attacker ak ,\nand Uak (\u03c3) = 1 \u2212 P\u03c3 (Hit(u)). Thus, u 6\u2208 Support\u03c3 (ak ). A contradiction.\nFor Condition (2), fix a defender d and consider an edge (u, v) \u2208 Support\u03c3 (d). Since \u03c3 is a\nNash equilibrium, the quantity Prop\u03c3 (d, v \u2032 ) * |A|\u03c3 (v \u2032 ) + Prop\u03c3 (d, u\u2032 ) * |A|\u03c3 (u\u2032 ) is constant over\nall edges (u\u2032 , v \u2032 ) \u2208 Support\u03c3 (d). So, consider any edge (u\u2032 , v \u2032 ) 6\u2208 Support\u03c3 (d). Assume, by way\nof contradiction, that\nPropd (\u03c3\u2212d \u22c4 u\u2032 ) * |A|\u03c3 (u\u2032 ) + Propd (\u03c3\u2212d \u22c4 v \u2032 ) * |A|\u03c3 (v \u2032 )\n> Propd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v).\n\nDenote \u03c4 = \u03c3\u2212d \u22c4 \u03c4d , where \u03c4d is any mixed strategy of defender d such that (u\u2032 , v \u2032 ) \u2208\nSupport\u03c4 (d). So, by construction, |A|\u03c4 (u\u2032 ) = |A|\u03c3 (u\u2032 ) and |A|\u03c4 (v \u2032 ) = |A|\u03c3 (v \u2032 ). Then,\nUd (\u03c3\u2212d \u22c4 (u\u2032 , v \u2032 ))\n= Propd (\u03c3\u2212d \u22c4 u\u2032 ) * |A|\u03c4 (u\u2032 ) + Propd (\u03c3\u2212d \u22c4 v \u2032 ) * |A|\u03c4 (v \u2032 ) (since e\u2032 \u2208 Support\u03c4 (d))\n= Propd (\u03c3\u2212d \u22c4 u\u2032 ) * |A|\u03c3 (u\u2032 ) + Propd (\u03c3\u2212d \u22c4 v \u2032 ) * |A|\u03c3 (v \u2032 )\n>\n\nPropd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v)\n\n=\n\nUd (\u03c3)\n\n(by assumption)\n(since (u, v) \u2208 Support\u03c3 (d)) ,\n\na contradiction.\nAssume now that the mixed profile \u03c3 satisfies Conditions (1) and (2). We will prove that\n\u03c3 is a Nash equilibrium.\n\u2022 Consider first an attacker a \u2208 A. Then, for any vertex u 6\u2208 Support\u03c3 (a),\nUa (\u03c3)\n= 1 \u2212 P\u03c3 (Hit(v)) (where v \u2208 Support\u03c3 (a))\n\u2265 1 \u2212 P\u03c3 (Hit(u)) (by Condition (1))\n=\n\nUa (\u03c3\u2212a \u22c4 u) .\n\n\u2022 Consider now a defender d \u2208 D. Then, for any edge (u\u2032 , v \u2032 ) 6\u2208 Support\u03c3 (d),\nUd (\u03c3)\n=\n\nPropd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v)\n\n(where (u, v) \u2208 Support\u03c3 (d))\n\n\u2265 Propd (\u03c3\u2212d \u22c4 u\u2032 ) * |A|\u03c3 (u\u2032 ) + Propd (\u03c3\u2212d \u22c4 v \u2032 ) * |A|\u03c3 (v \u2032 ) (by Condition (2)) .\n\n40\n\n\fIt follows that \u03c3 is a Nash equilibrium. The proof is now complete.\nWe remark that Proposition 5.1 generalizes a corresponding characterization of Nash equilibria\nfor AD\u03b1,1 (G) shown in [24, Theorem 3.1], where Condition (2) had the simpler counterpart (2'):\nProposition 5.3 A profile \u03c3 is a Nash equilibrium if and only if the following conditions hold:\n(1) For each vertex v \u2208 Supports\u03c3 (A), P\u03c3 (Hit(v)) = MinHit\u03c3 .\nn\no\n(2') For each edge e \u2208 Supports\u03c3 (D), |A|\u03c3 (e) = maxe\u2032 \u2208E |A|\u03c3 (e\u2032 ) .\n\n5.2\n\nNecessary Conditions\n\nWe now establish necessary conditions for Nash equilibria, which will follow from their characterization (Proposition 5.1). We first prove a very simple expression for the total Expected\nUtility of the defenders:\nProposition 5.4 In a Nash equilibrium \u03c3,\nX\n\nUd (\u03c3) = \u03b1 * MinHit\u03c3 .\n\nd\u2208D\n\nProof. Clearly,\nX\n\nUd (\u03c3)\n\nd\u2208D\n\n=\n=\n=\n\nP\n\nd\u2208D\n\nP\n\nv\u2208V\n\n=\n=\n=\n=\n\nP\n\nP\u03c3 (Hit(d, v)) * Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v) (by Lemma 4.8)\n\u0001\nd\u2208D P\u03c3 (Hit(d, v)) * Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v)\nP\n(by Lemma 4.7)\nv\u2208V P\u03c3 (Hit(v)) * |A|\u03c3 (v)\nP\nv\u2208Supports\u03c3 (A) P\u03c3 (Hit(v)) * |A|\u03c3 (v)\nP\n(by Proposition 5.1 (Condition (2)))\nv\u2208Supports\u03c3 (A) MinHit\u03c3 * |A|\u03c3 (v)\nP\nMinHit\u03c3 * v\u2208Supports\u03c3 (A) |A|\u03c3 (v)\nv\u2208V\n\nP\n\n\u03b1 * MinHit\u03c3\n\n(by Observation 4.1),\n\nas needed.\nWe continue to show:\nProposition 5.5 In a Nash equilibrium \u03c3, Supports\u03c3 (D) is an Edge Cover.\n\n41\n\n\fProof.\n\nAssume, by way of contradiction, that Supports\u03c3 (D) is not an Edge Cover. Then,\n\nchoose a vertex v \u2208 V such that v 6\u2208 Vertices(Supports\u03c3 (D)). So, Edges\u03c3 (v) = \u2205 and P\u03c3 (Hit(v)) =\n0.\nFix an attacker a \u2208 A. Since \u03c3 is a local maximizer for the Expected Utility of a, which is\nat most 1, it follows that \u03c3a (v) = 1. Hence, for each (u\u2032 , v \u2032 ) \u2208 Supports\u03c3 (D), |A|\u03c3 ((u\u2032 , v \u2032 )) = 0,\nsince both u\u2032 6= u and v \u2032 6= v (by the choice of vertex v). So, |A|\u03c3 (u\u2032 ) = |A|\u03c3 (v \u2032 ) = 0. This\nimplies that for any defender d \u2208 D,\nX\n\u03c3d ((u, v)) * (Propd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v))\nUd (\u03c3) =\n(u,v)\u2208Support \u03c3 (d)\n\n= 0.\n\nSince \u03c3 is a Nash equilibrium, Ud (\u03c3) > 0. A contradiction.\nProposition 5.5 immediately implies:\nCorollary 5.6 A unidefender Nash equilibrium is monodefender.\nWe finally show:\nProposition 5.7 In a Nash equilibrium \u03c3, Supports\u03c3 (A) is a Vertex Cover of the graph\nG(Supports\u03c3 (D)).\nProof.\n\nAssume, by way of contradiction, that Supports\u03c3 (A) is not a Vertex Cover of the\n\ngraph G(Supports\u03c3 (D)). Then, there is some edge (u, v) \u2208 Supports\u03c3 (D) such that both u 6\u2208\nSupports\u03c3 (A) and v 6\u2208 Supports\u03c3 (A). So, |A|\u03c3 ((u, v)) = 0. Assume that (u, v) \u2208 Support\u03c3 (d)\nfor some defender d \u2208 D. Since \u03c3 is a local maximizer for the Expected Utility of defender d,\nit follows that \u03c3d ((u, v)) = 0. So, (u, v) 6\u2208 Support\u03c3 (d). A contradiction.\n\n5.3\n\nPure Nash Equilibria\n\nWe observe that for the special case of Pure Nash equilibria, Proposition 5.1 simplifies to:\nProposition 5.8 (Characterization of Pure Nash Equilibria) A pure profile s is a Pure\nNash equilibrium if and only if the following conditions hold:\n(1) Supports\u03c3 (D) is an Edge Cover.\n(2) For each attacker d \u2208 D, for each edge (u, v) \u2208 Supports (d),\n|As (v)|\n|As (u)|\n+\n|Ds (u)| |Ds (v)|\n\n=\n\nmax\n\n(u\u2032 ,v \u2032 )\u2208E\n\n42\n\n\u001a\n\n|As (v \u2032 )|\n|As (u\u2032 )|\n+\n|Ds\u2212j (u\u2032 )| + 1 |Ds\u2212j (v \u2032 )| + 1\n\n\u001b\n\n.\n\n\fWe now use Propositions 5.5 and 5.7 to show:\nProposition 5.9 (Necessary Conditions for Pure Nash Equilibria) Assume that G is\nPure. Then, (i) \u03b4 \u2265 \u03b2 \u2032 (G) and (ii) \u03b1 \u2265 minEC \u2208EC(G) \u03b2(G(EC)).\nProof. By contradiction. Consider a Pure Nash equilibrium s. For Condition (i), assume\nthat \u03b4 < \u03b2 \u2032 (G). Since |Supportss (D)| \u2264 \u03b4, it follows that |Supportss (D)| < \u03b2 \u2032 (G). Hence,\nSupportss (D) is not an Edge Cover. A contradiction to Proposition 5.5.\nFor Condition (ii), assume that \u03b1 < minEC\u2208EC(G) \u03b2(G(EC)). Since |Supportss (A)| \u2264 \u03b1, it\nfollows that |Supportss (A)| < minEC\u2208EC(G) \u03b2(G(EC)). By Proposition 5.5, Supportss (D) is an\nEdge Cover; so, \u03b2(G(Supports\u03c3 (D))) \u2265 minEC\u2208EC(G) \u03b2(G(EC)). It follows that |Supportss (A)|\n< \u03b2(G(Supportss (D))). Thus, Supportss (A) is not a Vertex Cover of the graph G(Supportss (D)).\nA contradiction to Proposition 5.7.\nWe remark that Condition (i) (resp., Condition (ii)) in Proposition 5.9 is necessary for DefenderPure (resp., Attacker-Pure) Nash equilibria. We finally provide a counterexample to the converse of Proposition 5.9:\nProposition 5.10 There is a graph G and integers \u03b1 and \u03b4 such that (i) \u03b4 \u2265 \u03b2 \u2032 (G) and (ii)\n\u03b1 \u2265 minEC \u2208EC(G) \u03b2(G(EC)) while G is not Pure.\nProof. Consider the graph G = (V, E) in Figure 7, and fix \u03b1 = 2 and \u03b4 = 6. Clearly, \u03b2 \u2032 (G) = 6\nand minEC \u2208EC(G) = 2. So, Conditions (i) and (ii) from the claim hold. Towards a contradiction,\nassume that G is Pure; consider a Pure Nash equilibirum s.\n\u2022 By Proposition 5.5, Supports(D) is an Edge Cover. By the construction of G, this implies that Supportss(D) = {(v2 , v3 ), (v4 , v5 ), (v4 , v6 ), (v4 , v7 ), (v4 , v8 ), (v1 , v)}, where v \u2208\n{v2 , v4 }. Since \u03b4 = 6, it follows that for each edge e \u2208 Supportss(D), there is a unique\ndefender d such that sd = e.\n\u2022 By Proposition 5.7, Supportss(A) is a Vertex Cover of the graph G(Supportss(D)). By\nthe construction of G, this implies that Supportss(A) = {v2 , v4 }. (Note that {v2 , v4 } is\nthe unique Vertex Cover of the graph G(Supportss(D)) with size at most 2.) Since \u03b1 = 2,\nit follows that Supports(a1 ) = v2 and Supports(a2 ) = v4 .\nConsider now the (unique) defender d \u2208 D such that sd = (v4 , v5 ). Clearly, Ud (s) = 14 , but\n(\n1\n3 , if v = v2\nUd (s\u2212d \u22c4 (v2 , v3 )) =\n1\n2 , if v = v4\n1\n\u2265\n.\n3\nSo, Ud (s\u2212d \u22c4 (v2 , v3 )) > Ud (s). A contradiction to the fact that s is a Nash equilibrium.\n43\n\n\fv;\nv>\n\nvA\n\nv<\n\nv=\n\nvB\n\nv?\n\nv@\n\nFigure 7: The graph G used in the proof of Proposition 6.6. Edges in Supports(D) are drawn\nthick; vertices in Supports(A) are squared.\n\n6\n\nDefense-Optimal Nash Equilibria\n\nSection 6.1 introduces Defense-Optimal Nash equilibria and Defense-Optimal graphs. Some\nsufficient conditions for Defense-Optimal graphs are presented in Section 6.2.\n\n6.1\n\nDefinitions\n\nThe Defense-Ratio DR\u03c3 of a Nash equilibrium \u03c3 is the ratio of the optimal total Utility \u03b1 of\nthe defenders over their total Expected Utility in \u03c3; so,\nDR\u03c3 =\n\nP\n\n\u03b1\n.\nd\u2208D Ud (\u03c3)\n\nBy the definition of Defense-Ratio, Proposition 5.4 immediately implies:\nCorollary 6.1 For a Nash equilibrium \u03c3,\nDR\u03c3 =\n\n1\n.\nMinHit\u03c3\n\nClearly, DR\u03c3 \u2265 1. Furthermore, Lemma 4.3 implies a second lower bound on Defense-Ratio:\nCorollary 6.2 For a Nash equilibrium \u03c3,\nDR\u03c3 \u2265\n\n|V |\n.\n2\u03b4\n\nOur next major definition encompasses these two lower bounds on Defense-Ratio.\n\n44\n\n\f\u001b\n\u001a\n|V |\n.\nDefinition 6.1 A Nash equilibrium \u03c3 is Defense-Optimal if DR\u03c3 = max 1,\n2\u03b4\nThe justification for the definition of a Defense-Optimal Nash equilibrium will come later,\nwhen we construct Defense-Optimal Nash equilibria in two particular cases\n7.9\n\u001a (Proposition\n\u001b\n|V |\nand Theorems 9.2 and 9.5); these constructions will establish that max 1, 2\u03b4\nis a tight\n\nlower bound on Defense-Ratio.\n\nSay that that G is Defense-Optimal if G admits a Defense-Optimal Nash equilibrium.\n\n6.2\n\nSufficient Conditions\n\nWe show:\nTheorem 6.3 Assume that G has a \u03b4-Partitionable Fractional Perfect Matching. Then, G is\nDefense-Optimal.\nProof. Consider a \u03b4-Partitionable Fractional Perfect Matching f and the corresponding (nonempty) partites E1 , * * * , E\u03b4 . Recall that E(f ) is an Edge Cover. Construct \u03c3 as follows:\n\u2022 For each attacker a \u2208 A:\n\u2013 For each vertex v \u2208 V , set \u03c3a (v) := 1 ; so, Support\u03c3 (a) = V .\n|V |\nP\nSo, for each vertex v \u2208 V , |A|\u03c3 (v) = a\u2208A 1 = \u03b1 .\n|V |\n|V |\n\n\u2022 For each defender dj \u2208 D, with j \u2208 [\u03b4]:\n\n\u2013 For each edge e \u2208 E, set \u03c3dj (e) := 2\u03b4 * f (e) if e \u2208 Ej , and 0 otherwise; so,\n|V |\nSupport\u03c3 (dj ) = Ej and all values of \u03c3dj are non-negative.\nClearly, \u03c3 is attacker-symmetric, attacker-uniform, attacker-fullymixed and defender-symmetric;\nmoreover, \u03c3 is monodefender. Furthermore, for each vertex v \u2208 V , Edges\u03c3 (v) = {e \u2208 E(f ) |\nv \u2208 e}. To prove that \u03c3 is a (mixed) profile, we prove that for each defender dj \u2208 D, \u03c3dj is a\nprobability distribution (on E). Clearly,\nX\n\u03c3dj (e)\ne\u2208E\n\n=\n\n=\n=\n=\n\nP\n\nP\n\ne\u2208Ej\n\ne\u2208Ej\n\n\u03c3dj (e)\n\n(since Support\u03c3 (dj ) = Ej )\n\n2\u03b4 * f (e) (by construction)\n|V |\n\n2\u03b4 P\nf (e)\n|V | e\u2208Ej\n1\n\n(since f is \u03b4-Partitionable);\n45\n\n\fso, \u03c3dj is a probability distribution, which establishes that \u03c3 is a profile.\nWe continue to prove that \u03c3 is a Nash equilibrium. We shall verify Conditions (1) and (2) in\nthe characterization of Nash equilibria (Proposition 5.1).\nFor Condition (1), fix a vertex v \u2208 V . Since E(f ) is an Edge Cover, there is a partite\nEj \u2286 E(f ) such that v \u2208 Vertices(Ej ). Since the partites E1 , * * * , E\u03b4 are vertex-disjoint and\nSupport\u03c3 (dj ) = Ej , it follows that vertex v is monodefender in \u03c3 with d\u03c3 (v) = dj . We prove:\nClaim 6.4 P\u03c3 (Hit(v)) = 2\u03b4 .\n|V |\nProof. Clearly,\nP\u03c3 (Hit(v))\n=\n=\n=\n=\n=\n=\n=\n=\n\nP\u03c3 (Hit(dj , v))\nP\n\nP\n\ne\u2208Support\u03c3 (dj )|v\u2208e\n\ne\u2208Support\u03c3 (dj )|v\u2208e\n\n(since v is monodefender in \u03c3)\n\n\u03c3dj (e)\n\n2\u03b4 * f (e) (by construction of \u03c3)\n|V |\n\n2\u03b4 P\nf (e)\n|V | e\u2208Support\u03c3 (dj )|v\u2208e\n2\u03b4 P\nf (e)\n|V | e\u2208Edges\u03c3 (v)\n2\u03b4 P\nf (e)\n|V | e\u2208E(f )|v\u2208e\n2\u03b4 * P\ne\u2208E|v\u2208e f (e)\n|V |\n2\u03b4 * 1\n|V |\n\n(since v is monodefender in \u03c3)\n\n(since f (e) = 0 for e 6\u2208 E(f ))\n(since f is a Fractional Perfect Matching),\n\nas needed.\nBy Claim 6.4, Condition (1) holds trivially.\nFor Condition (2), consider a defender d \u2208 D. Fix an edge (u, v) \u2208 Support\u03c3 (d). Since \u03c3 is\nmonodefender, Propd (\u03c3\u2212d \u22c4 u) = Propd (\u03c3\u2212d \u22c4 v) = 1. Hence,\nPropd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v) = |A|\u03c3 (u) + |A|\u03c3 (v)\n2\u03b1\n=\n.\n|V |\nFix now an edge (u\u2032 , v \u2032 ) 6\u2208 Support\u03c3 (d). Since E(f ) is an Edge Cover, there are edges eu\u2032 and\nev\u2032 \u2208 Ef such that u\u2032 \u2208 eu\u2032 and v \u2032 \u2208 ev\u2032 . By the construction of \u03c3, this implies that there are\ndefenders du\u2032 and dv\u2032 such that eu\u2032 \u2208 Support\u03c3 (du\u2032 ) and ev\u2032 \u2208 Support\u03c3 (dv\u2032 ).\nThere are two cases for du\u2032 (resp., dv\u2032 ): either du\u2032 = d or du\u2032 6= d (resp., dv\u2032 = d or dv\u2032 6= d).\nWe shall treat each of them separately.\n46\n\n\f\u2022 Assume first that du\u2032 = d (resp., dv\u2032 = d); since u\u2032 is monodefender, it follows that\nPropd (\u03c3\u2212d \u22c4 u\u2032 ) = 1 (resp., Propd (\u03c3\u2212d \u22c4 v \u2032 ) = 1).\n\u2022 Assume now that du\u2032 6= d (resp., dv\u2032 6= d); since v \u2032 is monodefender, Propd (\u03c3\u2212d \u22c4 u\u2032 ) < 1\n(resp., Propd (\u03c3\u2212d \u22c4 v \u2032 ) < 1).\nSo, in all cases, Propd (\u03c3\u2212d \u22c4 u\u2032 ) \u2264 1 and Propd (\u03c3\u2212d \u22c4 v \u2032 ) \u2264 1. Thus,\nPropd (\u03c3\u2212d \u22c4 u\u2032 ) * |A|\u03c3 (u\u2032 ) + Propd (\u03c3\u2212d \u22c4 v \u2032 ) * |A|\u03c3 (v \u2032 ) \u2264 |A|\u03c3 (u\u2032 ) + |A|\u03c3 (v \u2032 )\n2\u03b1\n=\n.\n|V |\nNow, Condition (2) follows.\nHence, by Proposition 5.1, \u03c3 is a Nash equilibrium. By Claim 6.4 and Condition (1) of Propo|V |\n. Since G\nsition 5.1, it follows that MinHit\u03c3 = 2\u03b4 . By Corollary 6.1, it follows that DR\u03c3 =\n2\u03b4\n|V |\n|V |\nhas a \u03b4-Partitionable Fractional Perfect Matching, Corollary 2.14 implies that \u03b4 \u2264 2 , so that\n\u001a\n\u001b\n\u001b\n\u001a\n|V |\n|V |\n|V |\n. This implies that DR\u03c3 = max 1,\n=\n. Hence, \u03c3 is Defense-Optimal,\nmax 1,\n2\u03b4\n2\u03b4\n2\u03b4\nas needed.\nWe continue with another sufficient condition:\nTheorem 6.5 Assume that G is Defender-Pure. Then, G is Defense-Optimal.\nProof. Fix an arbitrary Defender-Pure Nash equilibrium \u03c3; so DR\u03c3 = 1. For each defender\nd \u2208 D, denote sd = (ud , vd ) \u2208 E. Since \u03c3 is a Nash equilibrium, Ud (\u03c3) = Ud (\u03c3\u2212d \u22c4 (ud , vd )).\nSo,\nDR\u03c3\n\u03b1\nUd (\u03c3)\n\u03b1\nP\nd\u2208D Ud (\u03c3\u2212d \u22c4 (ud , vd ))\n\n=\n\nP\n\n=\n\n=\n=\n=\n=\n=\n=\n\nP\n\nd\u2208D\n\nd\u2208D\n\n\u03b1\n(Propd (\u03c3\u2212d \u22c4 ud ) * |A|\u03c3 (ud ) + Propd (\u03c3\u2212d \u22c4 vd ) * |A|\u03c3 (vd ))\n\u03b1\n\u0013\n\u0012\nP\n|A|\u03c3 (vd )\n|A|\u03c3 (ud )\n+\nd\u2208D\n|D\u03c3 (ud )| |D\u03c3 (vd )|\n\u03b1\nP\nP\n|A|\u03c3 (v)\nv\u2208V\nd\u2208D|v\u2208Vertices\u03c3 (Support\u03c3 (d)) |D (v)|\n\u03c3\n\u03b1\nP\n|A|\u03c3 (v)\nv\u2208Supports\u03c3 (A) |D\u03c3 (v)| * |D (v)|\n\u03c3\n\u03b1\nP\nv\u2208Supports\u03c3 (A) |A|\u03c3 (v)\n1.\n\n47\n\n(since \u03c3 is Defender-Pure)\n\n\fvH\n\nvE\n\nvC\n\nvD\n\nvF\n\nvG\n\nFigure 8: The graph G used in the proof of Proposition 6.6.\nPartitionable Fractional Perfect Matching f are drawn thick.\n\nEdges in E(f ) for the 2-\n\n|V |\nBy Corollary 6.1, it follows that MinHit\u03c3 = 1. Hence, Lemma 4.3 implies that \u03b4 \u2265 2 . Since\n\u001a\n\u001b\n|V |\nDR\u03c3 = 1, it follows that DR\u03c3 = max 1,\n, and Condition (i) follows.\n2\u03b4\n\nWe finally compare the sufficient conditions for a Defense-Optimal graph from Theorems 6.3\nand 6.5:\nProposition 6.6 There is a graph G and an integer \u03b4 such that G has a \u03b4-Partitionable Fractional Perfect Matching while G is not Defender-Pure.\nProof. Consider the graph G = (V, E) in Figure 8, and fix \u03b4 = 2. Consider the function\nf : E \u2192 [0, 1] with f (e) = 12 for each edge e \u2208 E \\ {(v3 , v4 )} and f (e) = 0 for e = (v3 , v4 ).\nClearly, f is a 2-Partitionable Fractional Perfect Matching with E1 = {(v1 , v2 ), (v2 , v3 ), (v1 , v3 )}\n\nand E2 = {(v4 , v5 ), (v5 , v6 ), (v4 , v6 )}. Since \u03b4 = 2 and \u03b2 \u2032 (G) = 3, it follows by Proposition 5.9\n(Condition (i)) that G is not Defender-Pure.\n\n7\n\nFew Defenders\n\n|V |\nWe consider the case of few defenders where \u03b4 \u2264 2 ; there, a Defense-Optimal Nash\n\u001a\n\u001b\n|V |\n|V |\nequilibrium \u03c3 has Defense-Ratio DR\u03c3 = max 1,\n, so that by Corollary 6.1,\n=\n2\u03b4\n2\u03b4\nP\nMinHit\u03c3 = 2\u03b4 . This implies that\nv\u2208V P\u03c3 (Hit(v)) \u2265 2\u03b4. By Lemma 4.2, it follows that\n|V |\nP\nv\u2208V P\u03c3 (Hit(v)) = 2\u03b4, so that \u03c3 is unidefender. By Corollary 5.6, \u03c3 is monodefender.\n\nSection 7.1 provides some necessary conditions for Defense-Optimal Nash equilibria and\nDefense-Optimal graphs. A combinatorial characterization of Defense-Optimal graphs is presented in Section 7.2, with an implication on the associated complexity. Section 7.3 considers\nthe special case of Perfect-Matching graphs.\n\n48\n\n\f7.1\n\nNecessary Conditions\n\nWe show a necessary condition for Defense-Optimal graphs:\n|V |\nProposition 7.1 Assume that \u03b4 \u2264 2 . Then, a Defense-Optimal graph has a \u03b4-Partitionable\nFractional Perfect Matching.\nProof.\n\nConsider a Defense-Optimal Nash equilibrium \u03c3. Recall that \u03c3 is monodefender.\nP\nSince MinHit\u03c3 (v) = 2\u03b4 and v\u2208V P\u03c3 (Hit(v)) = 2\u03b4, it follows that for each vertex v \u2208 V ,\n|V |\nP\u03c3 (Hit(v)) = 2\u03b4 .\n|V |\nWe now define a function f : E \u2192 R; we will then prove that f is a \u03b4-Partitionable Fractional\nPerfect Matching. For each edge e \u2208 E, set\n(\n|V |\n* \u03c3d\u03c3 (e) (e), if e \u2208 Supports\u03c3 (D)\n2\u03b4\nf (e) :=\n.\n0,\notherwise\nBy construction, E(f ) = Supports\u03c3 (D); so, for each vertex v \u2208 V , {e \u2208 E(f ) | v \u2208 e} =\nEdges\u03c3 (v). Since \u03c3 is monodefender, it follows that for each vertex v \u2208 V , P\u03c3 (Hit(v)) =\nP\u03c3 (Hit(d\u03c3 (v), v)). We prove:\nClaim 7.2 For each vertex v \u2208 V ,\nX\n\nf (e) = 1.\n\ne\u2208Edges\u03c3 (v)\n\nProof. By the construction of f ,\nX\nf (e) =\ne\u2208Edges\u03c3 (v)\n\nX\n\nf (e)\n\nX\n\n|V |\n* \u03c3d\u03c3 (v) (e)\n2\u03b4\n\ne\u2208Support\u03c3 (d\u03c3 (v))|v\u2208e\n\n=\n\ne\u2208Support\u03c3 (d\u03c3 (v))|v\u2208e\n\n=\n\n|V |\n2\u03b4\n\n|V |\n2\u03b4\n|V |\n=\n2\u03b4\n|V |\n=\n2\u03b4\n= 1,\n\n=\n\nX\n\ne\u2208Support\u03c3 (d\u03c3 (v))|v\u2208e\n\n* P\u03c3 (Hit(d\u03c3 (v), v))\n* P\u03c3 (Hit(v))\n*\n\n2\u03b4\n|V |\n\n49\n\n\u03c3d\u03c3 (v) (e)\n\n\fas needed.\nSince Edges\u03c3 (v) = {e \u2208 E(f ) | v \u2208 e}, Claim 7.2 implies that f is a Fractional Perfect Matching.\nTo prove that f is \u03b4-Partitionable, define the (non-empty) sets E1 , * * * , E\u03b4 where for each j \u2208 [\u03b4],\nEj := Support\u03c3 (dj ). Clearly,\n[\n\nEj\n\n=\n\nj\u2208[\u03b4]\n\n[\n\nSupport\u03c3 (dj )\n\nj\u2208[\u03b4]\n\n= Supports\u03c3 (D)\n= E(f ) .\n\nSince \u03c3 is monodefender, it follows that for all pairs of distinct defenders dk and dl , Support\u03c3 (dk )\u2229\nSupport\u03c3 (dl ) = \u2205. Hence, it follows that the sets E1 , * * * , E\u03b4 , partition the set E(f ); so, we\nshall call them partites. We observe:\nClaim 7.3 For each index j \u2208 [\u03b4],\nX\n\nf (e) =\n\ne\u2208Ej\n\n|V |\n.\n2\u03b4\n\nProof. By the construction of f and the partites E1 , * * * , E\u03b4 ,\nX\nX\nf (e) =\nf (e)\ne\u2208Ej\n\ne\u2208Support\u03c3 (dj )\n\nX\n\n=\n\ne\u2208Support\u03c3 (dj )\n\n=\n=\n\n|V |\n2\u03b4\n\nX\n\n|V |\n* \u03c3dj (e)\n2\u03b4\n\u03c3dj (e)\n\ne\u2208Support\u03c3 (dj )\n\n|V |\n,\n2\u03b4\n\nas needed.\nClaim 7.3 implies that f is \u03b4-Partitionable, and the claim follows.\nProposition 7.1 establishes that the sufficient condition for a Defense-Optimal graph from The|V |\norem 6.3 is also necessary when \u03b4 \u2264 2 .\n\n7.2\n\nCharacterization and Complexity of Defense-Optimal Graphs\n\n\u0010\n\u0011\n|V |\nfor \u03b4 \u2264 2 ;\nsufficiency and necessity follow from Theorem 6.3 and Proposition 7.1, respectively.\n\nWe now state a combinatorial characterization of Defense-Optimal graphs\n\n50\n\n\f|V |\n2 . Then, G is Defense-Optimal if and only if G has a\n\u03b4-Partitionable Fractional Perfect Matching.\n\nTheorem 7.4 Assume that \u03b4 \u2264\n\nWe observe three implications of Theorem 7.4. The first one is an immediate consequence of\nTheorem 7.4 and Corollary 2.14.\n|V |\nCorollary 7.5 Assume that \u03b4 \u2264 2 and G is Defense-Optimal. Then, \u03b4 divides |V |.\nThe second implication is an immediate consequence of Theorem 7.4 and Proposition 2.18.\n|V |\nCorollary 7.6 Assume that \u03b4 = 2 . Then, G is Defense-Optimal if and only if it is PerfectMatching.\n\u0011\n\u0010\n|V |\nfor which the recognition\nCorollary 7.6 identifies a particular value of \u03b4 namely, \u03b4 = 2\nproblem for Defense-Optimal graphs is tractable. For the third implication, Theorem 7.4 implies\nthat the complexity of recognizing Defense-Optimal graphs is that of \u03b4-PARTITIONABLE FPM.\nHence, Proposition 2.19 immediately implies:\nCorollary 7.7 Assume that \u03b4 \u2264\n\n|V |\n2 . Then, the recognition problem for Defense-Optimal\n\ngraphs is N P-complete.\n\n7.3\n\nPerfect-Matching Graphs\n\nWe show:\n|V |\nTheorem 7.8 Assume that \u03b4 \u2264 2 for a Perfect-Matching graph G. Then, G admits a\nDefense-Optimal, Perfect-Matching Nash equilibrium if and only if 2 \u03b4 divides |V |.\nProof. The claim will follow from Propositions 7.9 and 7.10.\n|V |\nProposition 7.9 Assume that \u03b4 \u2264 2 for a Perfect-Matching graph G, where 2 \u03b4 divides |V |.\nThen, G admits a Defense-Optimal, Perfect-Matching Nash equilibrium.\nProof. Consider a Perfect Matching M . Construct a profile \u03c3 as follows:\n\u2022 For each attacker a \u2208 A and for each vertex v \u2208 V , set\n\u03c3a (v) :=\n\n1\n.\n|V |\n\nSo, \u03c3 is attacker-symmetric, attacker-uniform and attacker-fullymixed. Clearly, for each\nvertex v \u2208 V , |A|\u03c3 (v) = \u03b1 .\n|V |\n51\n\n\f|V |\nedges; each defender dj with j \u2208 [\u03b4]\n2\u03b4\nuses a uniform probability distribution over the set Mj . So, for each edge e \u2208 Mj , set\n\n\u2022 Partition M into \u03b4 sets M1 , * * * , M\u03b4 , each with\n\n\u03c3d\u03c3 (e) (e) :=\n\n2\u03b4\n.\n|V |\n\nThus, Support\u03c3 (dj ) = Mj for each j \u2208 [\u03b4], so that Supports\u03c3 (D) = M . Clearly, each\nvertex v \u2208 V is monodefender in \u03c3 with P\u03c3 (Hit(v)) = P\u03c3 (Hit(d\u03c3 (v), v)) = 2\u03b4 .\n|V |\nWe shall verify Conditions (1) and (2) in the characterization of Nash equilibria (Proposition 5.1). For Condition (1), fix a vertex v \u2208 V . Since P\u03c3 (Hit(v)) = 2\u03b4 , Condition (1) follows\n|V |\ntrivially. For Condition (2), consider any defender d \u2208 D.\n\u2022 Fix an edge (u, v) \u2208 Support\u03c3 (d). Since each edge is monodefender in \u03c3, it follows that\nPropd (\u03c3\u2212d \u22c4 u) = Propd (\u03c3\u2212d \u22c4 v) = 1. Hence,\nPropd (\u03c3\u2212d \u22c4 u) * |A|\u03c3 (u) + Propd (\u03c3\u2212d \u22c4 v) * |A|\u03c3 (v) =\n\n2\u03b1\n.\n|V |\n\n\u2022 Fix now an edge (u\u2032 , v \u2032 ) \u2208\n6 Support\u03c3 (d). Since M is an Edge Cover, there are edges\n\u2032\neu\u2032 , ev\u2032 \u2208 M such that u \u2208 eu\u2032 and v \u2032 \u2208 ev\u2032 . By the construction of \u03c3, this implies that\nthere are defenders du\u2032 and dv\u2032 such that eu\u2032 \u2208 Support\u03c3 (du\u2032 ) and ev\u2032 \u2208 Support\u03c3 (dv\u2032 ).\n6 dv\u2032 . Hence,\nSince each vertex is monodefender in \u03c3, it follows that d 6= du\u2032 and d =\nPropd (\u03c3\u2212d \u22c4 u\u2032 ) \u2264 21 and Propd (\u03c3\u2212d \u22c4 v) \u2264 21 , so that\nPropd (\u03c3\u2212d \u22c4 u\u2032 ) * |A|\u03c3 (u\u2032 ) + Propd (\u03c3\u2212d \u22c4 v \u2032 ) * |A|\u03c3 (v \u2032 ) \u2264\n=\n\n\u0001\n1\n* |A|\u03c3 (u\u2032 ) + |A|\u03c3 (v \u2032 )\n2\n\u03b1\n.\n|V |\n\nNow, Condition (2) follows. Hence, by Proposition 5.1, \u03c3 is a Nash equilibrium.\nTo prove that \u03c3 is Defense-Optimal, recall that for each vertex v \u2208 V , P\u03c3 (Hit(v)) = 2\u03b4 .\n|V |\n|V\n|\n|V\n|\nHence, MinHit\u03c3 = 2\u03b4 . By Corollary 6.1, it follows that DR\u03c3 =\n. Since \u03b4 \u2264 2 , it follows\n2\u03b4\n\u001a |V | \u001b\n|V |\n. Hence, \u03c3 is Defense-Optimal.\nthat DR\u03c3 = max 1,\n2\u03b4\nWe continue to prove:\n\n|V |\n2 for a Perfect-Matching graph G, which admits a\nDefense-Optimal, Perfect-Matching Nash equilibrium. Then, 2 \u03b4 divides |V |.\nProposition 7.10 Assume that \u03b4 \u2264\n\n52\n\n\fConsider such a Nash equilibrium \u03c3, and recall that MinHit\u03c3 = 2\u03b4 . Consider an\n|V |\nedge (u, v) \u2208 Supports\u03c3 (D); so, e \u2208 Support\u03c3 (d) for some defender d \u2208 D. Proposition 5.7\n\nProof.\n\nimplies that Supports\u03c3 (A) is a Vertex Cover of the graph G(Supports\u03c3 (D)). Hence, either\nu \u2208 Supports\u03c3 (A) or v \u2208 Supports\u03c3 (A) (or both). Assume without loss of generality, that\nu \u2208 Supports\u03c3 (A). Since \u03c3 is monodefender, there is a single defender dk such that u \u2208\nVertices(Support\u03c3 (d)). Hence, dk is identified with d. Since \u03c3 is Perfect-Matching, Support\u03c3 (d)\nis a Perfect Matching; this implies that P\u03c3 (Hit(v)) = sd (e). We prove:\nClaim 7.11 |Support\u03c3 (d)| =\n\n|V |\n2\u03b4\n\nProof. Clearly,\nX\n\nX\n\n\u03c3d (e) =\n\ne\u2208Support\u03c3 (d)\n\nP\u03c3 (Hit(v))\n\ne\u2208Support\u03c3 (d)\n\n= |Support\u03c3 (d)| *\nSince \u03c3 is a profile,\n\nP\n\ne\u2208Support\u03c3 (d)\n\n2\u03b4\n|V |\n\n\u03c3d (e) = 1. Hence, |Support\u03c3 (d)| =\n\n|V |\n, as needed.\n2\u03b4\n\nClaim 7.11 immediately implies that 2\u03b4 divides |V |, as needed.\nThe claim follows now from Propositions 7.9 and 7.10.\nNote that while Corollary 7.5 applies to all graphs, Proposition 7.10 applies only to PerfectMatching graphs. However, the restriction of Corollary 7.5 to Perfect-Matching graphs does\nnot imply Proposition 7.10 unless \u03b4 is odd. (This is because 2 divides |V | and \u03b4 divides |V |\nimply together that 2\u03b4 divides |V | exactly when \u03b4 is odd.) Hence, Proposition 7.10 strictly\nstrengthens Corollary 7.5 for the case where \u03b4 is even.\n\n8\n\nMany Defenders\n\n|V |\nWe now consider the case of many defenders, where 2 < \u03b4 < \u03b2 \u2032 (G). In this case, a Defense\u001a\n\u001b\n|V |\nOptimal Nash equilibrium \u03c3 has Defense-Ratio DR\u03c3 = max 1,\n= 1. By Corollary 6.1,\n2\u03b4\nthis implies that MinHit\u03c3 = 1. It follows that for each vertex v \u2208 V , P\u03c3 (Hit(v)) = 1, so that\nthe number of maxhit vertices in \u03c3 is |V |. We show:\n|V |\nTheorem 8.1 Assume that 2 < \u03b4 < \u03b2 \u2032 (G). Then, G is not Defense-Optimal.\n\n53\n\n\fProof. Towards a contradiction, consider a Defense-Optimal Nash equilibrium \u03c3. Consider any\n(maxhit) vertex v \u2208 V . By Lemma 4.4, there is a maxhitter d \u2208 D in \u03c3 with P\u03c3 (Hit(d, v)) = 1.\nUse \u03c3 to construct a defender-pure profile \u03c4 as follows:\n\u2022 Fix a defender d \u2208 D. If d is maxhitter in \u03c3, then \u03c4d is any edge (u, v) \u2208 Support\u03c3 (d)\nsuch that d is maxhitter in \u03c3 for the vertex v \u2208 V ; else, \u03c4d is any arbitrary edge (u, v) \u2208\nSupport\u03c3 (d).\nBy construction of \u03c4 , the following conditions hold:\n(1) |Supports\u03c4 (D)| \u2264 \u03b4.\n(2) Each maxhit vertex in \u03c3 remains a maxhit vertex in \u03c4 ; so, the number of maxhit vertices\nin \u03c4 is |V |.\n\u2032\n\nSince \u03b4 < \u03b2 (G), Condition (1) implies that |Supports\u03c4 (D)| < \u03b2 \u2032 (G). Hence, Supports\u03c4 (D)\nis not an Edge Cover. So, there is some vertex v \u2208 V with P\u03c4 (Hit(v)) = 0. It follows that the\nnumber of maxhit vertices in \u03c4 is less than |V |. A contradiction.\n\n9\n\nToo Many Defenders\n\n|V |\n\u2264\nWe finally turn to the case of too many defenders where \u03b4 \u2265 \u03b2 \u2032 (G). In this case,\n2\u03b4\n|V |\n\u2264 1; so, a Defense-Optimal Nash equilibrium \u03c3 has Defense-Ratio DR\u03c3 = 1. By\n2\u03b2 \u2032 (G)\nCorollary 6.1, this implies that MinHit\u03c3 = 1; so, that for each vertex v \u2208 V , P\u03c3 (Hit(v)) = 1.\nSection 9.1 introduces vertex-balanced profiles. These profiles give rise to Defender-Pure,\nVertex-Balanced Nash equilibria and Pure, Vertex-Balanced Nash equilibria, which will be\ntreated in Sections 9.2 and 9.3, respectively.\n\n9.1\n\n(Defender-Pure and Pure,) Vertex-Balanced Profiles\n\nWe start with a significant definition:\nDefinition 9.1 A mixed profile \u03c3 is vertex- balanced if there is a constant c > 0 such that\nfor each vertex v \u2208 V ,\n|A|\u03c3 (v)\n|D\u03c3 (v)|\n54\n\n= c.\n\n\fThe following properties follow trivially for a vertex-balanced profile \u03c3:\n1 The set Supports\u03c3 (D) is an Edge Cover. This matches the necessary condition for an\narbitrary Nash equilibrium from Proposition 5.5.\n2 The set Supports\u03c3 (A) is V . Note that this property is strictly weaker than the condition\ndefining an attacker-fullymixed profile \u03c3, which requires that for each attacker a \u2208 A,\nSupport\u03c3 (a) = V .\nWe shall consider defender-pure, vertex-balanced profiles and pure, vertex-balanced profiles.\nWe prove a nice property of defender-pure, vertex-balanced profiles.\nProposition 9.1 A defender-pure, vertex-balanced profile is a local maximizer for the Expected\nUtility of each defender.\nProof. Consider such a profile \u03c3 and a defender d \u2208 D with \u03c3d = (u, v). Clearly,\n|A|\u03c3 (u)\n|A|\u03c3 (v)\n+\n|D\u03c3 (u)| |D\u03c3 (v)|\n= 2c.\n\nUd (\u03c3) =\n\nFix now an edge (u\u2032 , v \u2032 ) 6\u2208 Support\u03c3 (d). Clearly,\n|A|\u03c3 (v \u2032 )\n|A|\u03c3 (u\u2032 )\n+\n|D\u03c3 (u\u2032 )| + 1 |D\u03c3 (v \u2032 )| + 1\n|A|\u03c3 (u\u2032 ) |A|\u03c3 (v \u2032 )\n<\n+\n|D\u03c3 (u\u2032 )| |D\u03c3 (v \u2032 )|\n= 2c,\n\nUd (\u03c3\u2212d \u22c4 (u\u2032 , v \u2032 )) =\n\nand the claim follows.\nProposition 9.1 implies that a defender-pure, vertex-balanced profile, which is a local maximizer\nfor the Expected Utility of each attacker, is a Nash equilibrium. We shall present polynomial\ntime algorithms to compute Defender-Pure, Vertex-Balanced Nash equilibria and Pure, VertexBalanced Nash equilibria which are Defense-Optimal for the case where \u03b4 \u2265 \u03b2 \u2032 (G); the second\nalgorithm will require an additional assumption.\n\n9.2\n\nDefense-Optimal, Defender-Pure, Vertex-Balanced Nash Equilibria\n\nWe show:\n\n55\n\n\fAlgorithm DefenderPure&VertexBalancedNE\nInput: A graph G = hV, Ei such that \u03b4 \u2265 \u03b2 \u2032 (G).\nOutput: A Defense-Optimal, Defender-Pure Vertex-Balanced Nash equilibrium \u03c3.\n(1) Choose a Minimum Edge Cover EC .\n(2) Assign each defender to a distinct edge from EC in a round-robin fashion.\no\n\b\n(3) Determine a solution A(v) | v \u2208 V to the following linear system:\nA(v)\nis constant.\n(a) For each vertex v \u2208 V ,\n|D\u03c3 (v)|\nP\n(b)\nv\u2208V A(v) = \u03b1.\n\n(4) Assign a mixed strategy \u03c3 to each attacker in an arbitrary way so that for each vertex v \u2208 V ,\n|A|\u03c3 (v) = A(v).\n\nFigure 9: The algorithm DefenderPure&VertexBalancedNE. By Step (2), \u03c3 is defender-pure;\nnote that the assignment exchausts all edges from the Minimum Edge Cover EC due to the\nassumption that \u03b4 \u2265 \u03b2 \u2032 (G). Step (3) provisions for \u03c3 to be vertex-balanced; towards this end, it\nA(v)\nprovides for the ratio\nto be constant over all vertices v \u2208 V . Finally, Step (4) provides\n|D\u03c3 (v)|\nmixed strategies to the attackers that induce |A|\u03c3 (v) = A(v) for each vertex v \u2208 V ; by Step\n(3/a) this implies that \u03c3 is vertex-balanced. Since a Minimum Edge Cover is computable in\npolynomial time, the algorithm DefenderPure&VertexBalancedNE is polynomial time.\nTheorem 9.2 Assume that \u03b4 \u2265 \u03b2 \u2032 (G). Then, G admits a Defender-Pure, Vertex-Balanced\nNash equilibrium, which is computable in polynomial time.\nTo prove the claim, we present the algorithm DefenderPure&VertexBalancedNE in Figure 9.\nProof.\n\nBy construction (Steps (1) and (2)) and the assumption that \u03b4 \u2265 \u03b2 \u2032 (G), it follows\n\nthat Supports\u03c3 (D) is a Minimum Edge Cover. Since \u03c3 is defender-pure, this implies that for\neach vertex v \u2208 V , P\u03c3 (Hit(v)) = 1; hence, for each attacker a \u2208 A,\nUa (\u03c3\u2212a \u22c4 v) = 1 \u2212 P\u03c3 (Hit(v))\n= 0.\nThis implies that \u03c3 is (vacuously) a local maximizer for the Expected Utility of each attacker.\nBy Proposition 9.1, it follows that \u03c3 is a Nash equilibrium.\nBy Theorem 6.5 and Theorem 9.2, it immediately follows:\nCorollary 9.3 Assume that \u03b4 \u2265 \u03b2 \u2032 (G). Then, G is Defense Optimal.\n56\n\n\fBy Theorem 5.9 (Condition (i)) and Theorem 9.2, it finally follows:\nCorollary 9.4 G is Defender-Pure if and only if \u03b4 \u2265 \u03b2 \u2032 (G).\nSince a Minimum Edge Cover is computable in polynomial time, Corollary 9.4 implies that the\nclass of Defender-Pure graphs is recognizable in polynomial time (for an arbitrary value of \u03b4).\n\n9.3\n\nDefense-Optimal, Pure, Vertex-Balanced Nash Equilibria\n\nWe show:\nTheorem 9.5 Assume that \u03b4 \u2265 \u03b2 \u2032 (G) and 2 \u03b4 divides \u03b1. Then, G admits a Defense-Optimal,\nPure, Vertex-Balanced Nash equilibrium, which is computable in polynomial time.\nTo prove the claim, we present the algorithm Pure&VertexBalanced in Figure 10. The proof of\nTheorem 9.5 is identical to the proof of Theorem 9.2.\nAlgorithm Pure&VertexBalancedNE\nInput: A graph G = hV, Ei such that \u03b4 \u2265 \u03b2 \u2032 (G) with 2\u03b4 divides \u03b1.\nOutput: A Defense-Optimal, Pure, Vertex-Balanced Nash equilibrium s.\n(1) Choose a Minimum Edge Cover EC .\n(2) Assign each defender to a distinct edge from EC in a round-robin fashion.\n(3) For each vertex v \u2208 V , set A(v) := |D\u03c3 (v)| * 2\u03b1\u03b4 .\n(4) Assign each attacker to a vertex from V in an arbitrary way so that for each vertex v \u2208 V ,\n|A|\u03c3 (v) = A(v).\n\nFigure 10: The algorithm Pure&VertexBalancedNE. The algorithm Pure&VertexBalancedNE differs from the the algorithm DefenderPure&VertexBalancedNE only in Steps (3) and (4). The\nadditional assumption that 2\u03b4 divides \u03b1 suffices for Steps (3) and (4) to construct an attackerpure profile. By Step (2), \u03c3 is defender-pure. Step (3) provisions for \u03c3 to be vertex-balanced;\nA(v)\ntowards this end, it sets the ratio\nto the fixed (integer) value \u03b1 for each vertex v \u2208 V .\n2\u03b4\n|D\u03c3 (v)|\nHence, for each vertex v \u2208 V , A(v) is integer. Finally, Step (4) assigns pure strategies to the\nattackers that induce the (integer) value |A|\u03c3 (v) = A(v) for each vertex v \u2208 V ; hence, \u03c3 is\nvertex-balanced by construction. Since a Minimum Edge Cover is computable in polynomial\ntime, the algortihm Pure&VertexBalancedNE is polynomial time.\n\n57\n\n\f10\n\nEpilogue\n\nWe proposed and analyzed a new combinatorial model for a distributed system like the Internet\nwith selfish, malicious attacks and selfish, non-malicious, interdependent defenses. Through an\nextensive combinatorial analysis of Nash equilibria for this model, we derived a comprehensive\ncollection of (in some cases surprising) trade-off results between the number of defenders and\nthe best possible Defense-Ratio of associated Nash equilibria.\nOur work leaves numerous open problems relating to (i) the worst-case Nash equilibria for\nthis model, (ii) the investigation of alternative reward-sharing schemes for the defenders and\n(iii) the complexity of computing and verifying (Defense-Optimal) Nash equilibria (especially\nfor the case of too many defenders) in this model.\nAcknowledgments.\n\nWe thank Martin Gairing, Loizos Michael, Florian Schoppmann, Karsten\n\nTiemann and the anonymous HICSS 2008 reviewers for many helpful comments and suggestions\non earlier versions of this paper.\n\n58\n\n\fReferences\n[1] R. Anderson, Security Engineering: A Guide to Building Dependable Distributed Systems,\nWiley, Second Edition, 2001.\n[2] R. Anderson, \"Why Information Security is Hard-An Economic Perspective,\" Proceedings\nof the 17th Annual Computer Security Applications Conference, pp. 358\u2013365, December\n2001.\n[3] E. Anshelevich, A. Dasgupta, J. Kleinberg, \u00c9. Tardos, T. Wexler and T. Roughgarden,\n\"The Price of Stability for Network Design with Fair Cost Allocation,\" Proceedings of the\n45th Annual IEEE Symposium on Foundations of Computer Science, pp. 295\u2013304, October\n2004.\n[4] J.-M. Bourjolly and W. R. Pulleyblank, \"K\u00f6nig-Egerv\u00e1ry Graphs, 2-Bicritical Graphs and\nFractional Matchings,\" Discrete Applied Mathematics, Vol. 24, No. 1, pp. 63\u201382, 1989.\n[5] N. Christin, J. Grossklags and J. Chuang,\"Near Rationality and Competitive Equilibria\nin Networked Systems,\" Proceedings of the ACM SIGCOMM Workshop on Practice and\nTheory of Incentives in Networked Systems, pp. 213\u2013219, August 2004.\n[6] G. Coulouris, J. Dollimore and T. Kindberg, Distributed Systems-Concepts and Design,\nAddison-Wesley, Fourth Edition, 2005.\n[7] J. Edmonds, \"Paths, Trees and Flowers,\" Canadian Journal of Mathematics, Vol. 17, pp.\n449\u2013467, 1965.\n[8] J. Edmonds, \"Maximum Matching and a Polyhedron with 0,1-Vertices,\" Journal of Research at the National Bureau of Standards, Section B69, pp. 125\u2013130, 1965.\n[9] M. R. Garey and D. S. Johnson, Computers and Intractability-A Guide to the Theory of\nNP-Completeness, W. H. Freeman and Co., 1979.\n[10] M. Gelastou, M. Mavronicolas, V. Papadopoulou, A. Philippou and P. G. Spirakis, \"The\nPower of the Defender,\" CD-ROM Proceedings of the 2nd International Workshop on\nIncentive-Based Computing, in conjunction with the 26th IEEE International Conference\non Distributed Computing Systems, July 2006.\n[11] L. Gordon and M. Loeb, \"The Economics of Information Security Investment,\" ACM\nTransactions on Information and System Security, Vol. 5, No. 4, pp. 438\u2013457, November\n2002.\n\n59\n\n\f[12] J. Grossklags, N. Christin and J. Chuang, \"Predicted and Observed User Behavior in\nthe Weakest-Link Security Game,\" Proceedings of the USENIX Workshop on Usability,\nPsychology, and Security, pp. 1\u20136, April 2008.\n[13] J. Grossklags, N. Christin and J. Chuang, \"Secure or Insure? A Game-Theoretic Analysis\nof Information Security Games,\" Proceedings of the 17th International World Wide Web\nConference, pp. 209\u2013218, April 2008.\n[14] D. K\u00f6nig, \"\u00dcber Graphen und Ihre Anwendung auf Determinantentheorie und Mengenlehre,\" Mathematische Annalen, Vol. 77, pp. 453\u2013465, December 1916.\n[15] B. Korte and J. Vygen, Combinatorial Optimization-Theory and Algorithms, Springer,\n2000.\n[16] E. Koutsoupias and C. H. Papadimitriou, \"Worst-Case Equilibria,\" Proceedings of the\n16th International Symposium on Theoretical Aspects of Computer Science, pp. 404\u2013413,\nVol. 1563, Lecture Notes in Computer Science, Springer-Verlag, March 1999.\n[17] C. Landwehr, \"Formal Models for Computer Security,\" ACM Computing Surveys, Vol. 13,\nNo. 3, pp. 247\u2013278, September 1981.\n[18] A. S. LaPaugh and C. H. Papadimitriou, \"The Even-Path Problem for Graphs and Digraphs,\" Networks, Vol. 14 No. 4, pp. 507\u2013513, Winter 1984.\n[19] E. L. Lawler, Combinatorial Optimization-Networks and Matroids, Holt, Rinehart and\nWinston, 1976.\n[20] T. Markham and C. Payne, \"Security at the Network Edge: A Distributed Firewall Architecture,\" Proceedings of the 2nd DARPA Information Survivability Conference and Exposition, Vol. 1, pp. 279-286, June 2001.\n[21] M. Mavronicolas, L. Michael, V. G. Papadopoulou, A. Philippou and P. G. Spirakis, \"The\nPrice of Defense,\" Proceedings of the 31st International Symposium on Mathematical Foundations of Computer Science, pp. 717\u2013728, Vol. 4162, Lecture Notes in Computer Science,\nSpringer-Verlag, August/September 2006.\n[22] M. Mavronicolas, V. G. Papadopoulou, G. Persiano, A. Philippou and P. G. Spirakis,\n\"The Price of Defense and Fractional Matchings,\" Proceedings of the 8th International\nConference on Distributed Computing and Networking, pp. 115\u2013126, Vol. 4308, Lecture\nNotes in Computer Science, Springer-Verlag, December 2006.\n[23] M. Mavronicolas, V. G. Papadopoulou, A. Philippou and P. G. Spirakis, \"A GraphTheoretic Network Security Game,\" Proceedings of the 1st International Workshop on\n60\n\n\fInternet and Network Economics, pp. 969\u2013978, Vol. 3828, Lecture Notes in Computer Science, Springer-Verlag, December 2005. Extended version accepted to International Journal\nof Autonomous and Adaptive Communications Systems, Special Issue on Algorithmic Game\nTheory, R. Kannan and C. Busch eds., June 2008.\n[24] M. Mavronicolas, V. G. Papadopoulou, A. Philippou and P. G. Spirakis, \"A Network Game\nwith Attackers and a Defender,\" Algorithmica, Vol. 51, No. 3, pp. 315\u2013341, July 2008.\n[25] B. Monien, \"The Complexity of Determining a Shortest Cycle of Even Length,\" Computing,\nVol. 31, No. 4, pp. 355\u2013369, December 1983.\n[26] J. F. Nash, \"Equilibrium Points in N-Person Games,\" Proceedings of the National Academy\nof Sciences of the United States of America, pp. 48\u201349, Vol. 36, 1950.\n[27] J. F. Nash, \"Non-Cooperative Games,\" Annals of Mathematics, Vol. 54, pp. 286\u2013295, 1951.\n[28] S. Schechter and M. Smith, \"How Much Security Is Enough to Stop a Thief?: The Economics of Outsider Theft via Computer Systems and Networks,\" Proceedings of the 7th\nInternational Financial Cryptography Conference, pp. 122\u2013137, Vol. 2742, Lecture Notes\nin Computer Science, Springer-Verlag, January 2003.\n[29] E. R. Scheinerman and D. H. Ullman, Fractional Graph Theory, John Wiley & Sons, 1997.\n[30] N. Weaver and V. Paxson, \"A Worst-Case Worm,\" Proceedings of the 3rd Annual Workshop on Economics of Information Security, May 2004. Available online at\nhttp://www.icir.org/vern/papers/worst-case-worm.WEIS04.pdf\n[31] D. B. West, Introduction to Graph Theory, Prentice Hall, Second Edition, 2001.\n[32] R. Yuster and U. Zwick, \"Finding Even Cycles Even Faster,\" SIAM Journal on Discrete\nMathematics, Vol. 10, No. 2, pp. 209-222, May 1997.\n\n61\n\n\f"}