{"id": "http://arxiv.org/abs/cs/0301026v1", "guidislink": true, "updated": "2003-01-24T20:25:50Z", "updated_parsed": [2003, 1, 24, 20, 25, 50, 4, 24, 0], "published": "2003-01-24T20:25:50Z", "published_parsed": [2003, 1, 24, 20, 25, 50, 4, 24, 0], "title": "Double-Negation Elimination in Some Propositional Logics", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0111053%2Ccs%2F0111022%2Ccs%2F0111006%2Ccs%2F0111023%2Ccs%2F0111016%2Ccs%2F0111065%2Ccs%2F0111026%2Ccs%2F0111004%2Ccs%2F0111057%2Ccs%2F0111002%2Ccs%2F0111040%2Ccs%2F0301007%2Ccs%2F0301011%2Ccs%2F0301013%2Ccs%2F0301023%2Ccs%2F0301030%2Ccs%2F0301019%2Ccs%2F0301015%2Ccs%2F0301005%2Ccs%2F0301018%2Ccs%2F0301025%2Ccs%2F0301033%2Ccs%2F0301029%2Ccs%2F0301031%2Ccs%2F0301008%2Ccs%2F0301022%2Ccs%2F0301016%2Ccs%2F0301032%2Ccs%2F0301034%2Ccs%2F0301014%2Ccs%2F0301001%2Ccs%2F0301028%2Ccs%2F0301004%2Ccs%2F0301036%2Ccs%2F0301002%2Ccs%2F0301006%2Ccs%2F0301009%2Ccs%2F0301027%2Ccs%2F0301021%2Ccs%2F0301020%2Ccs%2F0301012%2Ccs%2F0301010%2Ccs%2F0301026%2Ccs%2F0301035%2Ccs%2F0301017%2Ccs%2F0301024%2Ccs%2F0301003%2Ccs%2F0306046%2Ccs%2F0306126%2Ccs%2F0306054%2Ccs%2F0306133%2Ccs%2F0306071%2Ccs%2F0306001%2Ccs%2F0306002%2Ccs%2F0306078%2Ccs%2F0306100%2Ccs%2F0306015%2Ccs%2F0306117%2Ccs%2F0306026%2Ccs%2F0306132%2Ccs%2F0306119%2Ccs%2F0306068%2Ccs%2F0306050%2Ccs%2F0306103%2Ccs%2F0306116%2Ccs%2F0306121%2Ccs%2F0306006%2Ccs%2F0306063%2Ccs%2F0306041%2Ccs%2F0306118%2Ccs%2F0306101%2Ccs%2F0306109%2Ccs%2F0306069%2Ccs%2F0306122%2Ccs%2F0306042%2Ccs%2F0306056%2Ccs%2F0306044%2Ccs%2F0306099%2Ccs%2F0306004%2Ccs%2F0306079%2Ccs%2F0306134%2Ccs%2F0306013%2Ccs%2F0306007%2Ccs%2F0306019%2Ccs%2F0306020%2Ccs%2F0306023%2Ccs%2F0306016%2Ccs%2F0306027%2Ccs%2F0306040%2Ccs%2F0306129%2Ccs%2F0306012%2Ccs%2F0306008%2Ccs%2F0306104%2Ccs%2F0306003%2Ccs%2F0306087%2Ccs%2F0306051%2Ccs%2F0306073%2Ccs%2F0306111%2Ccs%2F0306123%2Ccs%2F0306067%2Ccs%2F0306077&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Double-Negation Elimination in Some Propositional Logics"}, "summary": "This article answers two questions (posed in the literature), each concerning\nthe guaranteed existence of proofs free of double negation. A proof is free of\ndouble negation if none of its deduced steps contains a term of the form\nn(n(t)) for some term t, where n denotes negation. The first question asks for\nconditions on the hypotheses that, if satisfied, guarantee the existence of a\ndouble-negation-free proof when the conclusion is free of double negation. The\nsecond question asks about the existence of an axiom system for classical\npropositional calculus whose use, for theorems with a conclusion free of double\nnegation, guarantees the existence of a double-negation-free proof. After\ngiving conditions that answer the first question, we answer the second question\nby focusing on the Lukasiewicz three-axiom system. We then extend our studies\nto infinite-valued sentential calculus and to intuitionistic logic and\ngeneralize the notion of being double-negation free. The double-negation proofs\nof interest rely exclusively on the inference rule condensed detachment, a rule\nthat combines modus ponens with an appropriately general rule of substitution.\nThe automated reasoning program OTTER played an indispensable role in this\nstudy.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0111053%2Ccs%2F0111022%2Ccs%2F0111006%2Ccs%2F0111023%2Ccs%2F0111016%2Ccs%2F0111065%2Ccs%2F0111026%2Ccs%2F0111004%2Ccs%2F0111057%2Ccs%2F0111002%2Ccs%2F0111040%2Ccs%2F0301007%2Ccs%2F0301011%2Ccs%2F0301013%2Ccs%2F0301023%2Ccs%2F0301030%2Ccs%2F0301019%2Ccs%2F0301015%2Ccs%2F0301005%2Ccs%2F0301018%2Ccs%2F0301025%2Ccs%2F0301033%2Ccs%2F0301029%2Ccs%2F0301031%2Ccs%2F0301008%2Ccs%2F0301022%2Ccs%2F0301016%2Ccs%2F0301032%2Ccs%2F0301034%2Ccs%2F0301014%2Ccs%2F0301001%2Ccs%2F0301028%2Ccs%2F0301004%2Ccs%2F0301036%2Ccs%2F0301002%2Ccs%2F0301006%2Ccs%2F0301009%2Ccs%2F0301027%2Ccs%2F0301021%2Ccs%2F0301020%2Ccs%2F0301012%2Ccs%2F0301010%2Ccs%2F0301026%2Ccs%2F0301035%2Ccs%2F0301017%2Ccs%2F0301024%2Ccs%2F0301003%2Ccs%2F0306046%2Ccs%2F0306126%2Ccs%2F0306054%2Ccs%2F0306133%2Ccs%2F0306071%2Ccs%2F0306001%2Ccs%2F0306002%2Ccs%2F0306078%2Ccs%2F0306100%2Ccs%2F0306015%2Ccs%2F0306117%2Ccs%2F0306026%2Ccs%2F0306132%2Ccs%2F0306119%2Ccs%2F0306068%2Ccs%2F0306050%2Ccs%2F0306103%2Ccs%2F0306116%2Ccs%2F0306121%2Ccs%2F0306006%2Ccs%2F0306063%2Ccs%2F0306041%2Ccs%2F0306118%2Ccs%2F0306101%2Ccs%2F0306109%2Ccs%2F0306069%2Ccs%2F0306122%2Ccs%2F0306042%2Ccs%2F0306056%2Ccs%2F0306044%2Ccs%2F0306099%2Ccs%2F0306004%2Ccs%2F0306079%2Ccs%2F0306134%2Ccs%2F0306013%2Ccs%2F0306007%2Ccs%2F0306019%2Ccs%2F0306020%2Ccs%2F0306023%2Ccs%2F0306016%2Ccs%2F0306027%2Ccs%2F0306040%2Ccs%2F0306129%2Ccs%2F0306012%2Ccs%2F0306008%2Ccs%2F0306104%2Ccs%2F0306003%2Ccs%2F0306087%2Ccs%2F0306051%2Ccs%2F0306073%2Ccs%2F0306111%2Ccs%2F0306123%2Ccs%2F0306067%2Ccs%2F0306077&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "This article answers two questions (posed in the literature), each concerning\nthe guaranteed existence of proofs free of double negation. A proof is free of\ndouble negation if none of its deduced steps contains a term of the form\nn(n(t)) for some term t, where n denotes negation. The first question asks for\nconditions on the hypotheses that, if satisfied, guarantee the existence of a\ndouble-negation-free proof when the conclusion is free of double negation. The\nsecond question asks about the existence of an axiom system for classical\npropositional calculus whose use, for theorems with a conclusion free of double\nnegation, guarantees the existence of a double-negation-free proof. After\ngiving conditions that answer the first question, we answer the second question\nby focusing on the Lukasiewicz three-axiom system. We then extend our studies\nto infinite-valued sentential calculus and to intuitionistic logic and\ngeneralize the notion of being double-negation free. The double-negation proofs\nof interest rely exclusively on the inference rule condensed detachment, a rule\nthat combines modus ponens with an appropriately general rule of substitution.\nThe automated reasoning program OTTER played an indispensable role in this\nstudy."}, "authors": ["Michael Beeson", "Robert Veroff", "Larry Wos"], "author_detail": {"name": "Larry Wos"}, "author": "Larry Wos", "arxiv_comment": "32 pages, no figures", "links": [{"href": "http://arxiv.org/abs/cs/0301026v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/cs/0301026v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.LO", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.LO", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "F.4.1", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/cs/0301026v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/cs/0301026v1", "journal_reference": null, "doi": null, "fulltext": "arXiv:cs/0301026v1 [cs.LO] 24 Jan 2003\n\nDouble-Negation Elimination in Some\nPropositional Logics\nMichael Beeson\nSan Jose State University\nMath & Computer Science\nSan Jose, CA 95192\n\nRobert Veroff\nUniversity of New Mexico\nDepartment of Computer Science\nAlbuquerque, NM 87131\n\nLarry Wos\nMathematics and Computer Science Division\nArgonne National Laboratory\nArgonne, IL 60439-4801\nNovember 12, 2018\n\nAbstract\nThis article answers two questions (posed in the literature), each concerning the\nguaranteed existence of proofs free of double negation. A proof is free of double\nnegation if none of its deduced steps contains a term of the form n(n(t)) for\nsome term t, where n denotes negation. The first question asks for conditions\non the hypotheses that, if satisfied, guarantee the existence of a double-negationfree proof when the conclusion is free of double negation. The second question\nasks about the existence of an axiom system for classical propositional calculus\nwhose use, for theorems with a conclusion free of double negation, guarantees the\nexistence of a double-negation-free proof. After giving conditions that answer\nthe first question, we answer the second question by focusing on the Lukasiewicz\nthree-axiom system. We then extend our studies to infinite-valued sentential\ncalculus and to intuitionistic logic and generalize the notion of being doublenegation free. The double-negation proofs of interest rely exclusively on the\ninference rule condensed detachment, a rule that combines modus ponens with\nan appropriately general rule of substitution. The automated reasoning program\nOTTER played an indispensable role in this study.\n\n1\n\n\f1\n\nOrigin of the Study\n\nThis article features the culmination of a study whose origin rests equally with\ntwo questions, the first posed in Studia Logica [2] and the second (motivated\nby the first) posed in the Journal of Automated Reasoning [12]. Both questions\nfocus on double-negation-free proofs, proofs none of whose deduced steps contain\na formula of the form n(n(t)) for some term t with the function n denoting\nnegation. For example, where i denotes implication, the presence of the formula\ni(i(n(x), x), x) as a deduced step does not preclude a proof from being doublenegation free, whereas the presence of the formula i(n(n(x)), x) does. Note the\ndistinction between deduced steps and axioms; in particular, use of the Frege\nsystem for two-valued sentential calculus, which contains two axioms in which\ndouble negation occurs, guarantees the existence of double-negation-free proofs,\nas we show in Section 5.\nThe sought-after double-negation-free proofs of interest here rely solely on\nthe inference rule condensed detachment [9], a rule that combines modus ponens with an appropriately general rule of substitution. Formally, condensed\ndetachment considers two formulas, i(A, B) (the major premiss) and C (the\nminor premiss), that are tacitly assumed to have no variables in common, and,\nif C unifies with A, yields the formula D, where D is obtained by applying to\nB a most general unifier of C and A.\nIn [2], the following question is asked. Where P and Q may each be collections of formulas, if T is a theorem asserting the deducibility of Q from P such\nthat Q is free of double negation, what conditions guarantee that there exists a\nproof relying solely on condensed detachment all of whose deduced steps are free\nof double negation? Then, in [12], Dolph Ulrich asks about the existence of an\naxiom system for two-valued sentential (or classical propositional) calculus such\nthat, for each double-negation-free formula Q provable from the axiom system,\nthere exists a double-negation-free proof of Q.\nAlthough perhaps not obvious, the nature of the axioms chosen for the study\nof some area of logic or mathematics can have a marked impact on the nature of\nthe proofs derived from them. As a most enlightening illustration of this relation\nand indeed pertinent to the two cited questions (each of which we answer in this\narticle), we turn to an example given by Ulrich that builds on a result of C. A.\nMeredith. In the early 1950s, Meredith found the following 21-letter single\naxiom for two-valued logic.\ni(i(i(i(i(x, y), i(n(z), n(u))), z), v), i(i(v, x), i(u, x)))\nConsider the following system with condensed detachment as the sole rule\nof inference and the four double-negation-free classical theses (of two-valued\nlogic) as axioms. (The notation here is taken from Ulrich [12] and should not\nbe confused with that used for infinite-valued logic discussed in Section 7.)\n\n2\n\n\fA1\n\ni(x, x)\n\nA2\nA3\n\ni(i(x, x), i(n(x), i(n(x), n(x))))\ni(i(x, i(x, x)), i(n(x), i(n(x), i(n(x), n(x)))))\n\nA4\n\ni(i(x, i(x, i(x, x))), i(i(i(i(i(y, z), i(n(u), (v))), u), w), i(i(w, y), i(v, y))))\n\nOne can readily verify that axiom A1 and the antecedent (left-hand argument) of A2 are unifiable but that no other axiom is unifiable with the antecedent of any axiom. In other words, no conclusion can be drawn (with\ncondensed detachment) other than by considering A1 and A2. Therefore, the\nfirst step of any proof in this system can only be\n5\n\ni(n(x), i(n(x), n(x))).\n\nSimilarly, the only new path of reasoning now available is that of 5 with the\nantecedent of A3. Therefore, the next step in any proof in this system can only\nbe\n6\n\ni(n(n(x)), i(n(n(x)), i(n(n(x)), n(n(x))))).\nOf course, 6 and the antecedent of A4 are unifiable, and we may obtain\n\n7\n\ni(i(i(i(i(x, y), i(n(z), n(u))), z), v), i(i(v, x), i(u, x))).\n\nBut, since 7 is Meredith's single axiom for two-valued sentential calculus, we\nmay then deduce all other theorems of classical sentential logic. The given fouraxiom system does, therefore, provide a complete axiomatization for classical\ni \u2212 n (two-valued logic); but no proof of any classical theses except A1\u2013A4 and 5\ncan be given that does not include at least formula 6, in which n(n(x)) (double\nnegation) appears four times.\nThus one sees that some axiom systems have so much control over proofs\nderived from them that double negation is inescapable. As for the Meredith\nsingle axiom (derived from the Ulrich example), what is its status with regard\nto guaranteed double-negation-free proofs of theorems that themselves are free\nof double negation? Of a sharply different flavor, what is the status in this\nregard of the Frege axiom system in view of the fact that two of its members\neach contain a double negation, i(n(n(x)), x) and i(x, n(n(x)))? The Frege\naxiom system consists of the following six axioms.\ni(x, i(y, x)).\ni(x, n(n(x))).\ni(n(n(x)), x).\ni(i(x, i(y, z)), i(i(x, y), i(x, z))).\n3\n\n\fi(i(x, y), i(n(y), n(x))).\ni(i(x, i(y, z)), i(y, i(x, z))).\nThese questions are also answered in this article as we complete our treatment\nof two-valued sentential calculus by giving conditions that, if satisfied by the\naxioms, guarantee the existence of a double-negation-free proof for each theorem\nthat itself is double-negation free.\nThe study of this logical property of obviating the need for double negation\ndemands its examination in other areas of logic and demands a natural extension. Therefore, we investigate this property in the context of infinite-valued\nsentential calculus and intuitionistic logic, and we present an extension of the\nproperty that focuses on theorems in which double negation appears.\nOur interest in double-negation avoidance can be traced directly to our successes in using William McCune's automated reasoning program OTTER [6].\nIn particular, a large number of proofs were obtained with that program by\napplying a strategy that instructs OTTER to avoid retention of any deduced\nconclusion if it contains a double-negation term. Use of this strategy sharply\nincreased the likelihood of success. Because the literature strongly suggests that\nreliance on double negation is unavoidable, and because our completed proofs\nsuggested the contrary, the questions that are central to this article were studied.\n\n2\n\nThe Interplay of Axioms and Proof\n\nOnce posed, the question of double-negation avoidance seems quite natural,\nmeshing well with other concerns for proof properties as expressed by logicians.\nFor example, length of proof was studied by Meredith and Prior, by Thomas,\nand by others; size of proof (total number of symbols) is of interest to Ulrich;\nand the dispensing with thought-to-be-key lemmas is almost always of general\ninterest.\nMore familiar to many are similar concerns for the axioms of a theory.\nIndeed, in logic, merited emphasis is placed on the nature and properties of\nvarious axiom systems: the number of members, the length (individually and\ncollectively), the number of distinct letters (variables), the total number of occurrences of various function symbols, and other measures of \"simplicity\". To\nmention but one of many examples, in the mid-1930s J. Lukasiewicz discovered\na 23-letter single axiom for two-valued sentential (or classical propositional) calculus. As cited in Section 1, almost two decades later Meredith found a 21-letter\nsingle axiom. Whether a still shorter single axiom for this area of logic exists is\ncurrently unknown.\nTo date, studies have focused on the properties of proof or the properties\nof axiom systems; we know of little work that connects the two directly. Here\nwe study such a direct connection when we show that a double-negation-free\nproof must always exist when the axioms satisfy certain properties. In other\n4\n\n\fwords, we focus on a term-structure property of proof in its relation to a set\nof axiom-system properties. One might naturally wonder about other theorems\nthat provide a direct connection of some proof property with the properties of\nthe axioms under consideration.\nDouble-negation-free proofs, in addition to their aesthetic appeal and their\ninterest from a logical viewpoint, are relevant to the work of Hilbert. Indeed,\nalthough it was unknown until recently [11], Hilbert offered a twenty-fourth\nproblem that was not included in the famous list of twenty-three seminal problems that he presented in Paris at the beginning of the twentieth century. This\ntwenty-fourth problem focuses on the finding of simpler proofs and its value.\nHilbert did not include the problem in his Paris talk apparently because of the\ndifficulty of defining \"simpler\" precisely.\nCeteris paribus, the avoidance of some type of term can make a proof simpler,\nas is the case when a proof is free of doubly negated subformulas. This paper,\nin the spirit of Hilbert's twenty-fourth problem, studies this specific form of\nsimplicity, seeking (as noted) general sufficient conditions for an axiom system\nof propositional logic L that guarantees that doubly negated formulas that do\nnot occur in the theorem are not needed in the proof.\n\n3\n\nFormalism\n\nAlthough propositional calculus is one of the oldest areas of logic, not all of its\nmysteries have been unlocked. The existence of truth tables and other decision\nprocedures for propositional logic notwithstanding, it is by no means trivial to\nprove, for example, that a given 23-symbol formula is in fact a single axiom.\nTruth tables and decision procedures can be used to determine whether a given\nformula is a tautology or to construct a proof of a given formula from certain\naxioms and rules, but generally they are not helpful in finding proofs of known\naxioms from other formulas (which is what one must do to verify that a formula\nis a single axiom). The search for such proofs has recently become a test bed in\nautomated deduction. Not only do the theorems we prove here about doublenegation elimination have an intrinsic, aesthetic appeal in that they show the\npossibility of simplifying proofs, but they also are of interest because they justify\nin the vast majority of cases a shortcut in automated proof-search methods,\nnamely, the automatic discarding of double negations.\nWe shall work with logics formulated by using only the two connectives implication and negation. Several notations are in use for propositional logic that\nwe mention before continuing. First, one can use infix \u2192 for implication and\nprefix \u00ac for negation. For example, we could write x \u2192 (\u00acx \u2192 y). Closely\nrelated, many papers on propositional logic use Polish notation, in which C is\nused for implication (conditional) and N for negation. The same formula would\nthen be rendered as CxCNxy. Finally, the notation that is appropriate when\nusing OTTER is prefix, with parentheses. We use i(x, y) for implication and\n5\n\n\fn(x) for negation; therefore, the example formula would be i(x, i(n(x), y)). In\nthis paper we use this last notation exclusively. It permits us to cut and paste\nmachine-produced proofs, eliminating errors of transcription. We make use of\nthe theorem-proving program OTTER [6] to produce proofs in various propositional logics, proofs we use to verify that those logics satisfy the hypotheses of\nour general theorems on double-negation elimination.\nLet L be Lukasiewicz's formulation of propositional calculus in terms of\nimplication and negation, denoted by i and n, as given on page 221 of [15].\nLukasiewicz provided the following axiomatization of L.\nL1\nL2\n\ni(i(x, y), i(i(y, z), i(x, z)))\ni(i(n(x), x), x)\n\nL3\n\ni(x, i(n(x), y))\n\nThe inference rule frequently used in logic is known as condensed detachment.\nThis rule (which is the only inference rule to be used in the sought-after doublenegation-free proofs) combines substitution and modus ponens. Specifically,\ngiven a major premiss i(p, q) and a minor premiss p, the conclusion of modus\nponens is q. The substitution rule permits the deduction of p\u03c3 from p, where \u03c3\nis any substitution of terms for variables. Condensed detachment has premisses\ni(p, q) and r and attempts to unify p and r-that is, seeks a substitution \u03c3 that\nmakes p\u03c3 = r\u03c3. If successful, provided \u03c3 is the most general such substitution,\nthe conclusion of condensed detachment is q\u03c3. This inference rule requires\nrenaming of variables in the premisses before the attempted unification to avoid\nunintended clashes of variables.1\nA double negation is a formula n(n(t)), where t is any term. A formula A\ncontains a double negation if it has a not-necessarily-proper subformula that\nis a double negation. A derivation contains a double negation if one of its\ndeduced formulas contains a double negation. Suppose that the formula A\ncontains no double negations and is derivable in L. Then (central to this paper)\ndoes A have a derivation in L that contains no double negation? We answer\nthis question in the affirmative (and thus answer the cited Ulrich question),\nnot only for Lukasiewicz's system L1\u2013L3, but also for other axiomatizations of\nclassical (two-valued) propositional logic, as well as other systems of logic such\nas infinite-valued logic.\n1 In the absence of the substitution rule, any alphabetic variant of an axiom is also accepted\nas an axiom. An \"alphabetic\" variant of A is a formula A\u03c3, where the substitution \u03c3 is oneto-one and merely renames the variables. A technicality arises as to whether it is permitted,\nrequired, or forbidden to rename the variables of the premisses before applying condensed\ndetachment. The definition on p. 212 of [15] does not explicitly mention renaming and,\nread literally, would not allow it, but the implementation in OTTER requires it, and [12]\nexplicitly permits it. If it is not permitted, then by renaming variables in the entire proof\nof the premiss, we obtain a proof of the renamed premiss, using alphabetic variants of the\naxioms, so the same formulas will be provable in either case. Similarly, renaming of variables\nin conclusions is allowed. Technically, we could wait until the conclusions are used before\nrenaming them, but in practice, OTTER renames variables in each conclusion as it is derived.\n\n6\n\n\f4\n\nCondensed Detachment\n\nWe remind the reader that the systems of primary interest in this paper use\ncondensed detachment as their sole rule of inference. For example, if \u03b1 is a\ncomplicated formula, and we wish to deduce i(\u03b1, \u03b1), it would not be acceptable\nto first deduce i(x, x) and then substitute \u03b1 for x. Rather, it would be necessary\nto give a (longer) direct derivation of i(\u03b1, \u03b1), relying solely on applications of\ncondensed detachment.\nWe shall show in this section that our theorem about the eliminability of\ndouble negation holds for L1\u2013L3 with condensed detachment if and only if it\nholds for L1\u2013L3 with modus ponens and substitution. Similar results are in\n[3, 7], but for other systems [3] treats the implicational fragment, while we\nallow negation, and [7] treats relevance logic. The following three formulas will\nplay an important role.\nD1\n\ni(x, x)\n\nD2\nD3\n\ni(i(x, x), i(n(x), n(x)))\ni(i(x, x), i(i(y, y), i(i(x, y), i(x, y))))\n\nLemma 1 Suppose L is any system of propositional logic with condensed detachment as the sole inference rule, and suppose that there are proofs of D1\u2013D3\nin L. Then every formula of the form i(\u03b1, \u03b1) is provable from L by condensed\ndetachment. Furthermore, if there are double-negation-free proofs of D1\u2013D3 in\nL, then i(\u03b1, \u03b1) is provable without using double negations except those occurring\nas subformulas of \u03b1.\nProof . We prove by induction on the complexity of the propositional formula \u03b1\nthat for each \u03b1, the formula i(\u03b1, \u03b1) is provable in L by condensed detachment.\nThe base case, when \u03b1 is a proposition letter, follows by replacing x by \u03b1 in the\nproof of i(x, x). Any line of the proof that is an axiom becomes an alphabetic\nvariant of that axiom, which is still considered an axiom. Actually, in view of\nthe convention that renaming variables in the conclusion is allowed, it would\nbe enough just to replace x by \u03b1 in the last line of the proof. If we have a\nproof of i(\u03b2, \u03b2), then we can apply condensed detachment and D2 to get a\nproof of i(n(\u03b2), n(\u03b2)). This could introduce a double negation if \u03b2 is already\na negation, but in that case it is a double negation that already occurs in\n\u03b1 = n(\u03b2), and so is allowed. Similarly, if we have proofs of i(\u03b1, \u03b1) and i(\u03b2, \u03b2),\nwe can apply condensed detachment to D3 and get a proof of i(i(\u03b1, \u03b2), i(\u03b1, \u03b2)).\nThat completes the proof of the lemma.\nLemma 2 If A is an instance of C, then the result of applying condensed detachment to i(A, B) and C is B (or an alphabetic variant of B).\n\n7\n\n\fProof : Rename variables in C if necessary so that C and A have no variables\nin common. Let \u03c3 be a most general unifier of A and C. Then the result of\napplying condensed detachment to i(A, B) and C is B\u03c3.\nLet \u03c4 be a most general substitution such that C\u03c4 = A; since A is assumed\nto be an instance of C, such a \u03c4 exists. Since the variables of C do not occur\nin A or B, B\u03c4 = B and A\u03c4 = A. Then C\u03c4 = A = A\u03c4 , so \u03c4 = \u03c3\u03c1 for some\nsubstitution \u03c1. Then B = B\u03c4 = B\u03c3\u03c1. Thus \u03c3\u03c1 is the identity on B. Hence \u03c3\u03c1\nis the identity on each variable occurring in B. Hence \u03c3 and \u03c1 do nothing but\n(possibly) rename variables. Hence B\u03c3, which is the result of this application\nof condensed detachment, is B or an alphabetic variant of B. That completes\nthe proof of the lemma.\nLemma 3 Suppose L is a logic proving D1\u2013D3 by condensed detachment. Then\neach substitution instance \u03b1 of an axiom of L is provable by condensed detachment. Furthermore, if L proves D1\u2013D3 by condensed detachment without using\ndouble negations, then \u03b1 is also provable without using double negations, except\nthose double negations occurring as subformulas of \u03b1, if any.\nProof . Let \u03b1 be a substitution instance of an axiom A. Renaming the variables\nin the axiom A if necessary, we may assume that the variables occurring in A\ndo not occur in \u03b1. By Lemma 1, i(\u03b1, \u03b1) is provable by condensed detachment,\nwithout using any double negations except possibly those already occurring in\n\u03b1. By Lemma 2, the result of applying condensed detachment to i(\u03b1, \u03b1) and A\nis \u03b1 or an alphabetic variant \u03b1\u03c3 of \u03b1. If it is not literally \u03b1, we can rename\nvariables in the conclusion (or if one prefers to avoid renaming conclusions,\nthroughout the entire proof) to create a proof of \u03b1. This completes the proof\nof the lemma.\nA proof of B in L from assumptions \u0393 is defined as usual: Lines of the\nproof are inferred from previous lines, or are axioms, or belong to \u0393. When\ncondensed detachment is used as a rule of inference, however, we have to distinguish between (propositional) variables that occur in the axioms and specific\n(constant) proposition letters that occur in assumptions. For example, if we\nhave i(n(n(x)), x) as an axiom, then we can derive any substitution instance of\nthat formula, but if we have i(n(n(a)), a) as an assumption, we cannot use it to\nderive an instance with some other formula substituted for a.\nThe following theorem is the easy half of the relation between condenseddetachment proofs and modus ponens proofs. The sense of the theorem is that\nsubstitutions can be pushed back to the axioms.\nTheorem 1 (Pushback theorem) Let L be a system of propositional logic,\nand suppose L proves B by using condensed detachment, or by using modus\nponens and substitution. Then there exists a proof of B using modus ponens from\nsubstitution instances of axioms of L. Similarly, if L proves B from assumptions\n\u2206, then there exists a proof of B using modus ponens from \u2206 and substitution\ninstances of axioms of L.\n8\n\n\fRemark. It would not make sense to speak of substitution instances of \u2206, since\nassumptions cannot contain variables, as explained above.\nProof. First we prove the theorem for the case when the given proof uses modus\nponens and substitution. We proceed by induction on the length of the given\nproof of B. If the length is zero, then B is an axiom or assumption, and there\nis nothing to prove. If the last inference is by modus ponens, say B is inferred\nfrom i(A, B) and A, then by the induction hypothesis there exist proofs of\nthese premisses from substitution instances of axioms, and adjoining the last\ninference, we obtain the desired proof of B.\nIf the last inference is by substitution, say B = A\u03c3 is inferred from A, then\nby the induction hypothesis there exists a proof \u03c0 of A using modus ponens\nonly from substitution instances of axioms. Apply the substitution \u03c3 to every\nline of \u03c0; the result is the desired proof of B. If there are assumptions, they are\nunaffected by \u03c3 because they do not contain variables.\nNow suppose the original proof uses condensed detachment. Each condenseddetachment inference can be broken into two substitutions and an application of\nmodus ponens, so a condensed-detachment proof gives rise to a modus ponens\nand substitution proof, and we can apply the previous part of the proof. That\ncompletes the proof.\nThe following lemma is not actually used in our work but is of independent\ninterest. Condensed detachment is considered as an inference rule that combines\nmodus ponens and substitution. The following lemma shows that it is reasonable to consider systems whose only rule of inference is condensed detachment,\nbecause such systems are already closed under the rule of substitution. This is\nnot obvious a priori since condensed detachment permits only certain special\nsubstitutions.\nLemma 4 Suppose L is a logic proving formulas D1\u2013D3 by condensed detachment If A is provable in L with condensed detachment and \u03c3 is any substitution,\nthen A\u03c3 is provable in L by condensed detachment.\nProof . By induction on the length of the proof \u03c0 of A in L, we prove that the\nstatement of the lemma is true for all substitutions \u03c3. The base case occurs\nwhen A is an axiom, so A\u03c3 is a substitution instance of an axiom. By Lemma\n3, A\u03c3 is provable in L by condensed detachment.\nFor the induction step, suppose the last inference of the given proof \u03c0 has\npremisses i(p, q) and r, where \u03c4 is the most general unifier of p and r, and\nthe conclusion is q\u03c4 = A. By the induction hypothesis, we have condenseddetachment derivations of i(p\u03c4 \u03c3, q\u03c4 \u03c3) and of r\u03c4 \u03c3. Since p\u03c4 = r\u03c4 , also p\u03c4 \u03c3 =\nr\u03c4 \u03c3. Hence the inference from i(p\u03c4 \u03c3, q\u03c4 \u03c3) and r\u03c4 \u03c3 to q\u03c4 \u03c3 is legal by condensed\ndetachment. Hence we have a condensed-detachment proof of q\u03c4 \u03c3 = A\u03c3. This\ncompletes the proof of the lemma.\n\n9\n\n\fTheorem 2 (D-completeness) Suppose L is a logic that proves formulas D1\u2013\nD3. If L proves A by using modus ponens and substitution, then L proves A by\nusing condensed detachment.\nRemark . Note that we cannot track what happens to double negations in this\nproof. The proof does not guarantee that passing from substitution to condensed\ndetachment will not introduce new double negations. Somewhat to our surprise,\nwe do not need any such result to prove double negation elimination; indeed,\nquite the reverse, we shall derive such a result from double-negation elimination.\nProof . By Theorem 1, there exists a proof \u03c0 of A from substitution instances of\naxioms, using modus ponens as the only rule of inference. By Lemma 3, there\nexist condensed-detachment proofs of these substitution instances of axioms.\nSince modus ponens is a special case of condensed detachment, if we string\ntogether the condensed-detachment proofs of the instances of axioms required,\nfollowed by the proof \u03c0, we obtain a condensed-detachment proof of A. That\ncompletes the proof of the theorem.\n\n5\n\nThe Main Theorem\n\nLet L be a system of propositional logic, given by some axioms and the sole\ninference rule of condensed detachment. Let L* be the system of logic whose\naxioms are the closure of (the axioms of) L under applications of the following\nsyntactic rule: If x is a proposition letter, and subterm n(x) appears in a formula A, then construct a new formula by replacing each occurrence of x in A by\nn(x) and cancelling any double negations that result. In other words, we choose\na set S of proposition letters occurring negated in A, and we replace each occurrence of a variable x in S throughout A by n(x), cancelling any doubly negated\npropositions. The first description of L* calls for replacing all occurrences of\nonly one variable; but if we repeat that operation, we can in effect replace a\nsubset.\nAn example will make the definition of L* clear. If this procedure is applied\nto the axiom\ni(i(n(x), n(y)), i(y, x)),\nwe obtain the following three new axioms (by replacing first both x and y, then\nonly y, then only x).\nA6\n\ni(i(x, y), i(n(y), n(x)))\n\nA7\n\ni(i(n(x), y), i(n(y), x))\n\nA8\n\ni(i(x, n(y)), i(y, n(x)))\n\nWe say that L admits double-negation elimination if, whenever L proves a\ntheorem B of the form P implies Q, there exists a proof S of B in L such\nthat any double negations occurring as subformulas in the deduced steps of S\n10\n\n\foccur as subformulas of Q.2 In particular, double-negation-free theorems have\ndouble-negation-free proofs (ignoring the axioms).\nSuppose B contains several doubly negated subformulas. We wish to consider eliminating double negations on just some of those subformulas. Let a\nsubset of the doubly negated formulas in B be selected. Then let B \u2217 be the\nresult of erasing double negations on all occurrences of the selected subformulas\nin B. More precisely, B \u2217 is obtained from B by replacing all occurrences of\nselected doubly negated subformulas n(n(q)) in B by q. We emphasize that if\nsome doubly negated subformula occurs more than once in B, one must erase\ndouble negations on all or none of those occurrences. Generally there will be\nmore than one way to select a set of doubly negated subformulas, so B \u2217 is not\nunique. We say that L admits strong double-negation elimination if, whenever\nL proves a theorem B, and B \u2217 is obtained from B as described, then there exists\na proof of B \u2217 in L, and moreover, there exists a proof of B \u2217 in L that contains\nonly doubly negated formulas occurring in B \u2217 .\nTheorem 3 Suppose that in L there exist double-negation-free proofs of D1\u2013\nD3, and double-negation-free proofs of all the axioms of L*. Then L admits\nstrong double-negation elimination.\nRemark. The theorem is also true with triple negation or quadruple negation,\nand so forth, in place of double negation. For instance, if B contains a triple\nnegation, then it has a proof containing no double negations not already contained in B. In particular, it then contains no triple negations not already\ncontained in B, since every triple negation is a double negation.\nProof. Suppose B is provable in L. If B contains any double negations, select\narbitrarily a subset of the doubly negated subformula of B, and form B \u2217 by\nreplacing each occurrence of these formulas n(n(q)) by q. Of course, B \u2217 may\nstill contain double negations; if we are proving only double-negation elimination\nand not strong double-negation elimination, we take B \u2217 to be B. By Theorem 1,\nthere is a modus ponens proof of B from substitution instances of axioms. If this\nproof contains any double negations that do not occur in B \u2217 , we simply erase\nthem. This erasure takes a modus ponens step into another legal modus ponens\nstep. Note that one cannot \"simply erase\" double negations in a condenseddetachment proof; but now we have a modus ponens proof, and double negations\ncan be erased in modus ponens proofs. For axioms, the process transforms a\nsubstitution instance of an axiom of L into a substitution instance of an axiom\nof L*. Thus, we have a proof of B \u2217 from substitution instances of axioms of\nL* that contains no double negations except those that already occur in B \u2217 .\nBy Lemma 3, there exist condensed-detachment proofs of these substitution\ninstances of L* (from axioms of L*). By hypothesis, the axioms of L* have\n2 In this context, a formula t occurs as a subformula if and only if t or an alphabetic variant\nof t appears. For example, if n(n(i(u, u))) occurs in Q, then n(n(i(x, x))) would be permitted\nin the deduced steps of S but not n(n(i(x, y))) or n(n(i(z, z), i(z, z))).\n\n11\n\n\fdouble-negation-free proofs in L. We now construct the desired proof as follows.\nFirst write the double-negation-free proofs of the axioms of L*. Then write\nproofs of the substitution instances of axioms of L* that are required. These\nactions provide proofs of all the substitution instances of axioms of L*, from\nL rather than from L*. Now write the proof of B \u2217 from those substitution\ninstances. We have the desired proof. The only double negations it contains are\nthose contained in B \u2217 . That completes the proof of the theorem.\nEspecially in view of the discussion focusing on the Frege axiom system, a\nnatural question arises concerning its use as hypothesis. In particular, if the\ntheorem to be proved is itself free of double negation, must there exist a doublenegation-free proof of it with the Frege system as hypothesis? After all, that\nsystem contains two members exhibiting double negation. Because we have\nin hand a proof that deduces from the Frege system the featured Lukasiewicz\naxiom system such that the proof is free of double negation, such a proof must\nexist. On the other hand, the following closely related question remains open\nand offers the researcher a most challenging problem to consider. The question\nfocuses on a condition stronger than strong double negation. In particular, for\ntwo-valued sentential calculus, if the conclusion to be proved contains individual\nformulas that exhibit double negation, must there always exist a proof, say\nfrom the Lukasiewicz three-axiom system, none of whose deduced steps exhibit\ndouble negation other than those formulas in the conclusion? For example, we\nhave a derivation of the Frege system from the Lukasiewicz system such that\nexactly two of its deduced steps exhibit double negation, just the two members\ni(n(n(x)), x) and i(x, n(n(x))).\nTheorem 4 (Strong d-completeness) Suppose L is a logic that admits strong\ndouble-negation elimination. If L proves A using modus ponens and substitution,\nwithout using double negations except those that already occur as subformulas of\nA, then L proves A using condensed detachment, without using double negations\nexcept those that already occur as subformulas of A.\nProof : Suppose L proves A using modus ponens and substitution. Then by\nTheorem 2, there is a condensed-detachment proof of A (possibly using new\ndouble negations). By strong double-negation elimination, there is a condenseddetachment proof of A in L, using only double negations that already occur as\nsubformulas of A.\n\n6\n\nLukasiewicz's System L1\u2013L3\n\nAs mentioned in Section 3, Lukasiewicz's system L has the following axioms.\nL1\n\ni(i(x, y), i(i(y, z), i(x, z)))\n\nL2\n\ni(i(n(x), x), x)\n\nL3\n\ni(x, i(n(x), y))\n12\n\n\fLemma 5 From L1\u2013L3, one can find double-negation-free proofs of formulas\nD1\u2013D3.\nProof . Formula D1 is i(x, x). The following is a two-line proof produced by\nOTTER.\n31\n54\n\n[L1,L3]\n[31,L2]\n\ni(i(i(n(x), y), z), i(x, z))\ni(x, x)\n\nFormula D2 is proved by first proving some auxiliary formulas D4 and D5.\nD4\n\ni(i(x, i(x, y)), i(x, y))\n\nD5\n\ni(i(x, y), i(n(y), n(x)))\n\nThe following is an OTTER proof of D4 from L1\u2013L3.\n30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n49\n50\n51\n53\n\n[L3,L2]\n[L1,L1]\n[L1,30]\n[L1,L3]\n[L1,L2]\n[33,L2]\n[32,33]\n[31,31]\n[31,34]\n[38,37]\n[39,36]\n[40,31]\n[41,39]\n[42,37]\n[42,L3]\n[44,33]\n[43,45]\n[46,L3]\n[47,42]\n[49,43]\n[50,35]\n[51,47]\n\ni(n(i(i(n(x), x), x)), y)\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(x, y), i(n(i(i(n(z), z), z)), y))\ni(i(i(n(x), y), z), i(x, z))\ni(i(x, y), i(i(n(x), x), y))\ni(x, x)\ni(x, i(n(i(i(n(y), y), y)), z))\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z))))\ni(i(x, y), i(i(n(i(y, z)), i(y, z)), i(x, z)))\ni(i(x, i(n(i(y, z)), i(y, z))), i(i(u, y), i(x, i(u, z))))\ni(i(x, i(n(y), y)), i(z, i(x, y)))\ni(i(n(x), y), i(z, i(i(y, x), x)))\ni(i(x, i(y, z)), i(i(n(z), y), i(x, z)))\ni(i(x, i(n(y), z)), i(i(u, i(z, y)), i(x, i(u, y))))\ni(i(n(x), n(y)), i(y, x)))\ni(x, i(y, x))\ni(i(x, i(y, z)), i(y, i(x, z)))\ni(n(x), i(x, y))\ni(i(n(x), y), i(n(y), x))\ni(i(x, i(y, z)), i(i(n(y), z), i(x, z)))\ni(i(n(x), y), i(i(x, y), y))\ni(i(x, i(x, y)), i(x, y))\n\nThe following is an OTTER proof of D5 from L1\u2013L3.\n40\n41\n43\n\n[L1,L1]\n[L1,L2]\n[L1,L3]\n\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(x, y), i(i(n(x), x), y))\ni(i(i(n(x), y), z), i(x, z))\n13\n\n\f44\n46\n48\n50\n65\n72\n75\n84\n97\n109\n121\n124\n130\n137\n144\n158\n188\n201\n232\n262\n309\n422\n636\n1158\n1627\n\n[L3,L2]\n[40,40]\n[40,2]\n[40,41]\n[L1,44]\n[46,48]\n[46,50]\n[43,65]\n[75,84]\n[40,97]\n[75,109]\n[L1,109]\n[46,121]\n[121,L3]\n[124,L2]\n[43,137]\n[130,158]\n[L1,158]\n[188,144]\n[201,137]\n[72,232]\n[121,262]\n[422,158]\n[309,636]\n[1158,L3]\n\ni(n(i(i(n(x), x), x)), y)\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z)))\ni(i(x, y), i(i(i(x, z), u), i(i(y, z), u)))\ni(i(x, y), i(i(n(i(y, z)), i(y, z)), i(x, z)))\ni(i(x, y), i(n(i(i(n(z), z), z)), y))\ni(i(x, i(i(y, z), u)), i(i(y, v), i(x, i(i(v, z), u))))\ni(i(x, i(n(i(y, z)), i(y, z))), i(i(u, y), i(x, i(u, z))))\ni(x, i(n(i(i(n(y), y), y)), z))\ni(i(x, i(n(y), y)), i(z, i(x, y)))\ni(i(n(x), y), i(z, i(i(y, x), x)))\ni(i(x, i(y, z)), i(i(n(z), y), i(x, z)))\ni(i(i(x, i(i(y, z), z)), u), i(i(n(z), y), u))\ni(i(x, i(n(y), z)), i(i(u, i(z, y)), i(x, i(u, y))))\ni(i(n(x), n(y)), i(y, x))\ni(i(n(x), y), i(i(y, x), x))\ni(x, i(y, x))\ni(i(x, i(y, z)), i(y, i(x, z)))\ni(i(i(x, y), z), i(y, z))\ni(i(x, y), i(i(n(y), x), y))\ni(n(x), i(x, y))\ni(i(n(x), y), i(i(z, x), i(i(y, z), x)))\ni(i(n(x), y), i(n(y), x))\ni(n(i(x, n(y))), y)\ni(i(x, i(y, n(z))), i(i(z, x), i(y, n(z))))\ni(i(x, y), i(n(y), n(x)))\n\nNow we are ready to prove D2. This proof was found by Dolph Ulrich,\nwithout machine assistance.\n44\n45\n43\n\n[D4,L1] i(i(x, x), i(x, x))\n[L1,D5] i(i(i(n(y), n(x)), z), i(i(x, y), z))\n[45,44] i(i(x, x), i(n(x), n(x)))\n\nFinally, we are ready to prove D3. The following proof was found by using\na specially compiled version of OTTER. (The difficulty is that normal OTTER\nderives a more general conclusion, which subsumes the desired conclusion.)\n45\n46\n47\n48\n49\n50\n\n[L3,L2]\n[L1,L1]\n[L1,45]\n[L1,L3]\n[L1,L2]\n[48,L2]\n\ni(n(i(i(n(x), x), x)), y)\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(x, y), i(n(i(i(n(z), z), z)), y))\ni(i(i(n(x), y), z), i(x, z))\ni(i(x, y), i(i(n(x), x), y))\ni(x, x)\n14\n\n\f51\n52\n53\n54\n55\n56\n57\n58\n59\n60\n61\n62\n63\n64\n65\n66\n67\n68\n69\n70\n71\n72\n73\n74\n75\n76\n77\n78\n\n[50,L1]\n[49,51]\n[47,48]\n[53,L1]\n[46,46]\n[46,L1]\n[54,52]\n[55,57]\n[58,46]\n[58,L3]\n[59,58]\n[59,60]\n[61,61]\n[63,55]\n[63,48]\n[65,55]\n[66,65]\n[66,62]\n[67,60]\n[68,67]\n[64,55]\n[56,55]\n[71,68]\n[73,L1]\n[74,69]\n[75,L1]\n[72,70]\n[77,76]\n\ni(i(x, y), i(x, y))\ni(i(n(i(x, y)), i(x, y)), i(x, y))\ni(x, i(n(i(i(n(y), y), y)), z))\ni(i(i(n(i(i(n(x), x), x)), y), z), i(u, z))\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z))))\ni(i(x, y), i(i(i(x, z), u), i(i(y, z), u)))\ni(x, i(i(n(y), y), y))\ni(i(x, i(n(y), y)), i(z, i(x, y)))\ni(i(n(x), y), i(z, i(i(y, x), x)))\ni(x, i(y, y))\ni(x, i(i(n(y), z), i(i(z, y), y)))\ni(x, i(i(i(y, y), z), z))\ni(i(n(x), y), i(i(y, x), x))\ni(i(x, i(y, z)), i(i(n(z), y), i(x, z)))\ni(x, i(i(y, x), x))\ni(i(x, i(y, z)), i(z, i(x, z)))\ni(x, i(x, x))\ni(x, i(y, x))\ni(i(x, i(y, y)), i(x, i(y, y)))\ni(i(x, i(y, x)), i(x, i(y, x)))\ni(i(x, i(n(y), z)), i(i(u, i(z, y)), i(x, i(u, y))))\ni(i(x, i(i(y, z), u)), i(i(y, v), i(x, i(i(v, z), u))))\ni(i(x, i(y, z)), i(y, i(x, z)))\ni(i(i(x, i(y, z)), u), i(i(y, i(x, z)), u))\ni(i(x, i(y, x)), i(y, i(x, x)))\ni(i(x, x), i(i(y, x), i(y, x)))\ni(i(x, i(i(y, z), u)), i(i(y, y), i(x, i(i(y, z), u))))\ni(i(x, x), i(i(y, y), i(i(x, y), i(x, y))))\n\nThat completes the proof of the lemma.\nTheorem 5 Lukasiewicz's system L1\u2013L3 admits strong double-negation elimination.\nProof. We begin by calculating the formulas L* for this system. We obtain the\nfollowing.\nL4\nL5\n\ni(i(x, n(x)), n(x))\ni(n(x), i(x, y))\n\nBy Theorem 3 it suffices to verify that there exist double-negation-free proofs\nof L4, L5, and D1\u2013D3. We have already verified D1\u2013D3 above, so it remains\nonly to exhibit double-negation-free proofs of L4 and L5. The following is an\nOTTER proof of L4.\n15\n\n\f28\n29\n31\n32\n34\n40\n54\n58\n71\n94\n107\n118\n128\n141\n155\n201\n262\n330\n421\n558\n731\n1032\n\n[L1,L1]\n[L1,L2]\n[L1,L3]\n[L3,L2]\n[28,28]\n[28,29]\n[31,L2]\n[L1,32]\n[34,40]\n[31,58]\n[71,94]\n[28,107]\n[71,118]\n[34,128]\n[128,L3]\n[31,155]\n[141,201]\n[262,L3]\n[128,330]\n[141,421]\n[558,54]\n[731,54]\n\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(x, y), i(i(n(x), x), y))\ni(i(i(n(x), y), z), i(x, z))\ni(n(i(i(n(x), x), x)), y)\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z))))\ni(i(x, y), i(i(n(i(y, z)), i(y, z)), i(x, z)))\ni(x, x)\ni(i(x, y), i(n(i(i(n(z), z), z)), y))\ni(i(x, i(n(i(y, z)), i(y, z))), i(i(u, y), i(x, i(u, z))))\ni(x, i(n(i(i(n(y), y), y)), z))\ni(i(x, i(n(y), y)), i(z, i(x, y)))\ni(i(n(x), y), i(z, i(i(y, x), x)))\ni(i(x, i(y, z)), i(i(n(z), y), i(x, z)))\ni(i(x, i(n(y), z)), i(i(u, i(z, y)), i(x, i(u, y))))\ni(i(n(x), n(y)), i(y, x))\ni(x, i(y, x))\ni(i(x, i(y, z)), i(y, i(x, z)))\ni(n(x), i(x, y))\ni(i(n(x), y), i(n(y), x))\ni(i(x, i(y, z)), i(i(n(y), z), i(x, z)))\ni(i(n(x), y), i(i(x, y), y)\ni(i(x, n(x)), n(x))\n\nThe following is an OTTER proof of L5.\n19\n20\n22\n23\n25\n31\n77\n207\n234\n265\n287\n297\n389\n439\n522\n590\n\n[L1,L1]\n[L1,L2]\n[L1,L3]\n[L3,L2]\n[19,19]\n[19,20]\n[L1,23]\n[25,31]\n[22,77]\n[207,234]\n[19,265]\n[207,287]\n[297,L3]\n[22,389]\n[L1,439]\n[522,389]\n\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(x, y), i(i(n(x), x), y))\ni(i(i(n(x), y), z), i(x, z))\ni(n(i(i(n(x), x), x)), y)\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z))))\ni(i(x, y), i(i(n(i(y, z)), i(y, z)), i(x, z)))\ni(i(x, y), i(n(i(i(n(z), z), z)), y))\ni(i(x, i(n(i(y, z)), i(y, z))), i(i(u, y), i(x, i(u, z))))\ni(x, i(n(i(i(n(y), y), y)), z))\ni(i(x, i(n(y), y)), i(z, i(x, y)))\ni(i(n(x), y), i(z, i(i(y, x), x)))\ni(i(x, i(y, z)), i(i(n(z), y), i(x, z)))\ni(i(n(x), n(y)), i(y, x))\ni(x, i(y, x))\ni(i(i(x, y), z), i(y, z))\ni(n(x), i(x, y))\n\nThat completes the proof of the theorem.\n\n16\n\n\fCorollary 1 Let T be any set of axioms for (two-valued) propositional logic.\nSuppose that there exist double-negation-free condensed-detachment proofs of\nL1\u2013L3 from T . Then the preceding theorem is true with T in place of L1\u2013L3.\nProof . We must show that T admits strong double-negation elimination. Let\nA be provable from T , and let A\u2217 be obtained from A by erasing some of the\ndouble negations in A (but all occurrences of any given formula, if there are\nmultiple occurrences of the same doubly negated subformula). We must show\nthat T proves A\u2217 by a proof whose doubly negated subformula occur in A\u2217.\nSince T is an axiomatization of two-valued logic, A\u2217 is a tautology and hence\nprovable from L1\u2013L3. By the theorem, there exists a proof of A\u2217 from L1\u2013\nL3 that contains no double negations (except those occurring in A\u2217, if any).\nSupplying the given proofs of L1\u2013L3 from T , we construct a proof of A\u2217 from T\nthat contains no double negations except those occurring in A\u2217 (if any). That\ncompletes the proof.\nExample. We can take T to contain exactly one formula, the single axiom\nM of Meredith. M is double-negation free, and double-negation-free proofs of\nL1\u2013L3 from M have been found using OTTER [17]. Therefore, the theorem is\ntrue for the single axiom M.\n\n7\n\nInfinite-Valued Logic\n\nLukasiewicz's infinite-valued logic is a subsystem of classical propositional logic\nthat was studied in the 1930s. The logic is of interest partly because there exists\na natural semantics for it, according to which propositions are assigned truth\nvalues that are real (or rational) numbers between 0 and 1, with 1 being true\nand 0 being false. Lukasiewicz's axioms A1\u2013A4 are complete for this semantics,\nas was proved (but apparently not published) by Wasjberg, and proved again\nby Chang [1]. Axioms A1\u2013A4 are formulated by using implication i(p, q) and\nnegation n(p) only. The truth value of p is denoted by kpk. Truth values are\ngiven by\nkn(p)k = 1 \u2212 kpk\nki(p, q)k = min(1 \u2212 kpk + kqk, 1).\nAxioms A1\u2013A4 are as follows.3\nA1\nA2\n\ni(x, i(y, x))\ni(i(x, y), i(i(y, z), i(x, z)))\n\nA3\nA4\n\ni(i(i(x, y), y), i(i(y, x), x))\ni(i(n(x), n(y)), i(y, x))\n\n3 A comparison with Lukasiewicz's axioms L1\u2013L3: Axiom A2 is the same as L1, and L3 is\nprovable from A1\u2013A4, but L2 is not provable from A1\u2013A4.\n\n17\n\n\fThe standard reference for infinite-valued logic is [10].\nLemma 6 A1\u2013A4 prove formulas D1\u2013D3 without double negation.\nProof . The following is an OTTER proof of D1 from A1\u2013A4.\n24\n32\n59\n113\n118\n\n[A2,A1]\n[24,A3]\n[A2,32]\n[59,24]\n[113,113]\n\ni(i(i(x, y), z), i(y, z))\ni(x, i(i(x, y), y))\ni(i(i(i(x, y), y), z), i(x, z))\ni(x, i(y, y))\ni(x, x)\n\nThe following is an OTTER proof of D2 from A1\u2013A4, found by using a\nspecially compiled version of OTTER.\n118\n119\n121\n122\n126\n139\n140\n143\n148\n179\n185\n214\n235\n385\n395\n591\n598\n628\n645\n646\n647\n648\n648\n650\n651\n\n[A1,A1]\n[A2,A2]\n[A2,A1]\n[A2,A3]\n[A3,118]\n[121,A4]\n[121,A3]\n[A2,139]\n[A2,140]\n[121,126]\n[140,179]\n[A3,185]\n[122,119]\n[119,148]\n[148,A3]\n[385,395]\n[591,591]\n[591,118]\n[143,598]\n[121,628]\n[646,645]\n[119,214]\n[A1,648]\n[235,649]\n[650,647]\n\ni(x, i(y, i(z, y)))\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(i(x, y), z), i(y, z))\ni(i(i(i(x, y), y), z), i(i(i(y, x), x), z))\ni(i(i(x, i(y, x)), z), z)\ni(n(x), i(x, y))\ni(x, i(i(x, y), y))\ni(i(i(x, y), z), i(n(x), z))\ni(i(i(i(x, y), y), z), i(x, z))\ni(x, x)\ni(i(i(x, x), y), y)\ni(i(x, i(y, y)), i(y, y))\ni(i(i(i(x, y), i(z, y)), i(z, y)), i(i(x, z), i(x, y)))\ni(i(x, i(y, z)), i(y, i(x, z)))\ni(x, i(i(y, x), x))\ni(i(x, y), i(y, y))\ni(i(x, x), i(x, x))\ni(i(x, i(y, x)), i(x, i(y, x)))\ni(n(x), i(x, x))\ni(i(x, y), i(y, i(x, y)))\ni(i(x, x), i(n(x), i(x, x)))\ni(i(x, y), i(x, x))\ni(x, i(i(y, z), i(y, y)))\ni(i(x, i(y, z)), i(x, i(y, y)))\ni(i(x, x), i(n(x), n(x)))\n\nThe following is a proof of D3, found by using a specially compiled version\nof OTTER.\n\n18\n\n\f30\n31\n32\n33\n34\n35\n36\n37\n38\n39\n40\n41\n42\n43\n44\n45\n46\n47\n48\n49\n50\n51\n52\n53\n\n[A1,A1]\n[A2,A2]\n[A2,A1]\n[31,31]\n[31,L2]\n[32,31]\n[32,A4]\n[32,A1]\n[34,33]\n[36,35]\n[39,30]\n[A3,32]\n[41,33]\n[42,A2]\n[42,A1]\n[44,37]\n[44,A3]\n[46,A3]\n[47,45]\n[47,40]\n[48,43]\n[49,38]\n[50,A2]\n[52,51]\n\ni(x, i(y, i(z, y)))\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(i(x, y), z), i(y, z))\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z))))\ni(i(x, y), i(i(i(x, z), u), i(i(y, z), u)))\ni(i(x, y), i(z, i(x, z)))\ni(n(x), i(x, y))\ni(x, i(y, i(z, x)))\ni(i(x, i(i(y, z), u)), i(i(y, v), i(x, i(i(v, z), u))))\ni(x, i(n(y), x))\ni(n(x), i(y, i(z, i(u, z))))\ni(x, i(i(x, y), y))\ni(i(x, i(y, z)), i(y, i(x, z)))\ni(i(i(x, i(y, z)), u), i(i(y, i(x, z)), u))\ni(x, i(y, y))\ni(x, i(y, i(z, i(u, u))))\ni(i(i(x, x), y), y)\ni(i(x, i(y, y)), i(y, y))\ni(i(x, i(y, y)), i(x, i(y, y)))\ni(i(x, i(y, x)), i(x, i(y, x)))\ni(i(x, i(y, x)), i(y, i(x, x)))\ni(i(x, i(i(y, z), u)), i(i(y, y), i(x, i(i(y, z), u))))\ni(i(x, x), i(i(y, x), i(y, x)))\ni(i(x, x), i(i(y, y), i(i(x, y), i(x, y))))\n\nTheorem 6 The system of \"infinite-valued logic\" A1\u2013A4 admits strong doublenegation elimination.\nProof. We begin by calculating the formulas L* for this system. The only axiom\ncontaining negations is A4, but there are three possible replacements, so we get\nthree new axioms A6\u2013A8 as follows.4\nA6\n\ni(i(x, y), i(n(y), n(x)))\n\nA7\nA8\n\ni(i(n(x), y), i(n(y), x))\ni(i(x, n(y)), i(y, n(x)))\n\nBy Theorem 3 it suffices to verify that there exist double-negation-free proofs of\nA6, A7, A8, and D1\u2013D3. We have already verified D1\u2013D3 above, so it remains\nonly to produce double-negation-free proofs of A6\u2013A8.\nThe following is an OTTER proof of A6.\n4 The name A5 is already in use for another formula, originally used as an axiom along\nwith A1\u2013A4, but later shown to be provable from A1\u2013A4.\n\n19\n\n\f81\n82\n84\n87\n89\n92\n95\n99\n100\n112\n148\n149\n154\n291\n296\n450\n566\n791\n998\n1109\n1186\n\n[A1,A1]\n[A2,A2]\n[A2,A1]\n[A2,A4]\n[A3,81]\n[82,82]\n[82,A2]\n[84,A4]\n[84,A3]\n[87,89]\n[95,99]\n[92,99]\n[92,100]\n[154,95]\n[154,A2]\n[92,296]\n[450,149]\n[566,112]\n[148,791]\n[291,998]\n[1109,112]\n\ni(x, i(y, i(z, y)))\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(i(x, y), z), i(y, z))\ni(i(i(x, y), z), i(i(n(y), n(x)), z))\ni(i(i(x, i(y, x)), z), z)\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z))))\ni(i(x, y), i(i(i(x, z), u), i(i(y, z), u)))\ni(n(x), i(x, y))\ni(x, i(i(x, y), y))\ni(i(n(x), n(i(y, i(z, y)))), x)\ni(i(i(n(x), y), z), i(i(i(x, u), y), z)))\ni(i(x, y), i(n(y), i(x, z)))\ni(i(x, i(y, z)), i(y, i(x, z)))\ni(i(i(x, y), z), i(i(x, u), i(i(u, y), z)))\ni(i(x, y), i(i(z, x), i(z, y)))\ni(i(x, i(y, z)), i(i(z, u), i(x, i(y, u))))\ni(i(i(x, y), z), i(i(x, u), i(n(u), z)))\ni(i(n(x), y), i(n(y), x))\ni(i(i(x, y), z), i(n(z), x))\ni(i(i(x, y), z), i(i(z, u), i(n(u), x)))\ni(i(x, y), i(n(y), n(x)))\n\nThe following is an OTTER proof of A7.\n81\n82\n84\n87\n89\n92\n99\n100\n112\n149\n154\n296\n450\n566\n791\n\n[A1,A1]\n[A2,A2]\n[A2,A1]\n[A2,A4]\n[A3,81]\n[82,82]\n[84,A4]\n[84,A3]\n[87,89]\n[92,99]\n[92,100]\n[154,A2]\n[92,296]\n[450,149]\n[566,112]\n\ni(x, i(y, i(z, y)))\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(i(x, y), z), i(y, z))\ni(i(i(x, y), z), i(i(n(y), n(x)), z))\ni(i(i(x, i(y, x)), z), z)\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z))))\ni(n(x), i(x, y))\ni(x, i(i(x, y), y))\ni(i(n(x), n(i(y, i(z, y)))), x)\ni(i(x, y), i(n(y), i(x, z)))\ni(i(x, i(y, z)), i(y, i(x, z)))\ni(i(x, y), i(i(z, x), i(z, y)))\ni(i(x, i(y, z)), i(i(z, u), i(x, i(y, u)))))\ni(i(i(x, y), z), i(i(x, u), i(n(u), z)))\ni(i(n(x), y), i(n(y), x))\n\nThe following is an OTTER proof of A8.\n81\n82\n84\n\n[A1,A1]\n[A2,A2]\n[A2,A1]\n\ni(x, i(y, i(z, y)))\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(i(x, y), z), i(y, z))\n20\n\n\f87\n89\n92\n95\n99\n100\n112\n148\n149\n154\n291\n296\n450\n554\n566\n791\n998\n1109\n1186\n1207\n1409\n1561\n\n[A2,A4]\n[A3,81]\n[82,82]\n[82,A2]\n[84,A4]\n[84,A3]\n[87,89]\n[95,99]\n[92,99]\n[92,100]\n[154,95]\n[154,A2]\n[92,296]\n[82,450]\n[450,149]\n[566,112]\n[148,791]\n[291,998]\n[1109,112]\n[554,1186]\n[1207,A4]\n[1409,791]\n\ni(i(i(x, y), z), i(i(n(y), n(x)), z))\ni(i(i(x, i(y, x)), z), z)\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z))))\ni(i(x, y), i(i(i(x, z), u), i(i(y, z), u)))\ni(n(x), i(x, y))\ni(x, i(i(x, y), y))\ni(i(n(x), n(i(y, i(z, y)))), x)\ni(i(i(n(x), y), z), i(i(i(x, u), y), z))\ni(i(x, y), i(n(y), i(x, z)))\ni(i(x, i(y, z)), i(y, i(x, z)))\ni(i(i(x, y), z), i(i(x, u), i(i(u, y), z)))\ni(i(x, y), i(i(z, x), i(z, y)))\ni(i(x, i(y, z)), i(i(z, u), i(x, i(y, u))))\ni(i(x, y), i(i(z, u), i(i(y, z), i(x, u))))\ni(i(i(x, y), z), i(i(x, u), i(n(u), z)))\ni(i(n(x), y), i(n(y), x))\ni(i(i(x, y), z), i(n(z), x))\ni(i(i(x, y), z), i(i(z, u), i(n(u), x)))\ni(i(x, y), i(n(y), n(x)))\ni(i(x, y), i(i(i(n(z), n(u)), x), i(i(u, z), y)))\ni(i(i(n(x), n(y)), i(n(z), n(u))), i(i(y, x), i(u, z)))\ni(i(x, n(y)), i(y, n(x)))\n\nThis completes the proof of the theorem.\n\n8\n\nAn Intriguing Example\n\nOne of the motivations for this work was the existence of a formula that is\ndouble-negation free and provable from A1\u2013A4 but for which Wos had been\nunable to find a double-negation-free proof. The formula in question is\nDN1\n\ni(i(n(x), n(i(i(n(y), n(z)), n(z)))),\nn(i(i(n(i(n(x), y)), n(i(n(x), z))), n(i(n(x), z))))).\n\nWos provided a proof of 45 condensed-detachment steps of this theorem, 16\nof whose lines involved a double negation. Beeson used this proof as input to\na computer program implementing the algorithms implicit in the proof of our\nmain theorem. The output of this program was a double-negation-free proof\nby modus ponens of the example, from substitution instances of A1\u2013A4. The\nproof's length and size were surprising. It was 796 lines, and many of its lines\ninvolved thousands of symbols. The input proof takes about 3.5 kilobytes, the\noutput proof about 200 kilobytes. Now we know what the condensed means in\n\n21\n\n\f\"condensed detachment\"! The expansion in size is due to making the substitutions introduced by condensed detachment explicit. The expansion in length\nis due to duplications of multiply referenced lines, which must be done before\nthe substitutions are \"pushed upward\" in the proof. In other words, one line\nof the proof can be referenced several times, and when the proof is converted\nto tree form, each reference will require a separate copy of the referenced line.\nThis 796-line proof, considered as a tree, has substitution instances of the axioms at the leaves. After obtaining this proof, we could have continued with the\nalgorithm, providing proofs of the substitution instances of the axioms. That\napproach would have substantially increased the length. Instead, McCune put\nthe lines of the 796-line proof into an OTTER input file as \"hints\" [14], and\nOTTER produced a 27-line double-negation-free condensed-detachment proof\nof DN1 from A1\u2013A4 and A6\u2013A8. This run generates some 6,000 formulas and\ntakes between one-half and two hours, depending on what machine is used. If\nthe lines of this proof, together with the proofs of A6\u2013A8, are supplied as resonators [16] in a new input file, OTTER can then find a 37-step proof of DN1\nfrom A1\u2013A4.\n\n9\n\nD-Completeness of Intuitionistic Logic\n\nLet H be the following formulation of intuitionistic propositional calculus in\nterms of implication and negation, denoted by i and n.5\nH1\n\ni(x, i(y, x))\n\nH2\nH3\n\ni(i(x, i(y, z)), i(i(x, y), i(x, z)))\ni(i(x, n(x)), n(x))\n\nH4\n\ni(x, i(n(x), y))\n\nThe inference rules of H are modus ponens and substitution. It is also possible\nto consider H1\u2013H4 with condensed detachment. These two systems have the\nsame theorems, as will be shown in detail below.\nWe note that H does not satisfy strong double elimination. Substituting\nn(y) for x in axiom H3 produces i(i(n(y), n(n(y))), n(n(y))). Cancelling the\ndouble negations produces i(i(n(y), y), y), which is not provable in intuitionistic\nlogic. This same example demonstrates directly that H does not satisfy the\nhypothesis of Theorem 3. Nevertheless, and perhaps surprising, H does satisfy\ndouble negation elimination-but we will need a different proof to show that.\n5 These axioms can be found in Appendix I of [13], as the Lukasiewicz 2-basis in 12.1 plus\nthe two axioms labeled (4) of 3.2, as specified in 12.5. According to [13], if we also add (2) and\n(3) of 3.2, we get the full intuitionistic propositional calculus; but (2) and (3) of 3.2 concern\ndisjunction and conjunction. If they are omitted, the four axioms listed form a 4-basis for the\nimplication-negation fragment. This will be proved in Corollary 2.\n\n22\n\n\fLemma 7 D1\u2013D3 have double-negation-free condensed-detachment proofs from\nH1\u2013H4.\nProof : The following is a double-negation-free condensed-detachment proof of\nD1 from H1\u2013H4 (found by hand):\n5\n6\n\n[H2,H1]\n[5,H1]\n\ni(i(x, y), i(x, x))\ni(x, x)\n\nD2 is i(i(x, x), i(n(x), n(x))). The following is a double-negation-free condenseddetachment proof of D2 from H1\u2013H4, found by using a specially compiled version\nof OTTER. Curiously, H3 is not used.\n94\n95\n97\n100\n107\n111\n113\n116\n213\n220\n753\n783\n785\n833\n903\n1541\n1563\n1605\n1706\n\n[H1,H1]\n[H2,H2]\n[H2,H1]\n[H2,H4]\n[H1,94]\n[95,94]\n[95,97]\n[H1,97]\n[H2,116]\n[H1,100]\n[95,113]\n[753,116]\n[753,107]\n[783,213]\n[785,94]\n[111,220]\n[833,1541]\n[903,1563]\n[213,1605]\n\ni(x, i(y, i(z, y)))\ni(i(i(x, i(y, z)), i(x, y)), i(i(x, i(y, z)), i(x, z)))\ni(i(x, y), i(x, x))\ni(i(x, n(x)), i(x, y))\ni(x, i(y, i(z, i(u, z))))\ni(i(x, i(i(y, x), z)), i(x, z))\ni(i(x, i(x, y)), i(x, y))\ni(x, i(i(y, z), i(y, y)))\ni(i(x, i(y, z)), i(x, i(y, y)))\ni(x, i(i(y, n(y)), i(y, z)))\ni(i(x, i(x, x)), i(x, x))\ni(i(x, x), i(x, x))\ni(i(x, i(y, x)), i(x, i(y, x)))\ni(i(x, i(y, y)), i(x, i(y, y)))\ni(i(x, y), i(y, i(x, y)))\ni(n(x), i(x, y))\ni(n(x), i(x, x))\ni(i(x, x), i(n(x), i(x, x)))\ni(i(x, x), i(n(x), n(x)))\n\nThe following is a double-negation-free condensed-detachment proof of D3\nfrom H1\u2013H4. Again H3 is not used.\n177\n178\n179\n180\n194\n196\n273\n275\n310\n\n[H1,H1]\n[H2,H2]\n[H1,H2]\n[H2,H1]\n[178,177]\n[178,180]\n[2,194]\n[194,179]\n[3,275]\n\ni(x, i(y, i(z, y)))\ni(i(i(x, i(y, z)), i(x, y)), i(i(x, i(y, z)), i(x, z)))\ni(x, i(i(y, i(z, u)), i(i(y, z), i(y, u))))\ni(i(x, y), i(x, x))\ni(i(x, i(i(y, x), z)), i(x, z))\ni(i(x, i(x, y)), i(x, y))\ni(x, i(i(y, i(i(z, y), u)), i(y, u)))\ni(i(x, y), i(i(z, x), i(z, y)))\ni(i(i(x, y), i(z, x)), i(i(x, y), i(z, y)))\n23\n\n\f351\n442\n655\n1010\n1036\n1355\n2170\n2188\n2211\n2335\n2404\n2537\n\n[194,273]\n[351,310]\n[442,442]\n[655,655]\n[655,442]\n[1010,1036]\n[196,275]\n[275,2170]\n[2170,177]\n[2188,275]\n[2211,1355]\n[2404,2335]\n\ni(i(i(x, y), z), i(y, z))\ni(i(x, y), i(i(y, z), i(x, z)))\ni(i(i(i(x, y), i(z, y)), u), i(i(z, x), u))\ni(i(x, i(y, z)), i(i(u, y), i(x, i(u, z))))\ni(i(x, y), i(i(i(x, z), u), i(i(y, z), u)))\ni(i(x, i(i(y, z), u)), i(i(y, v), i(x, i(i(v, z), u))))\ni(i(x, x), i(x, x))\ni(i(x, i(y, y)), i(x, i(y, y)))\ni(i(x, i(y, x)), i(x, i(y, x)))\ni(i(x, x), i(i(y, x), i(y, x)))\ni(i(x, i(i(y, z), u)), i(i(y, y), i(x, i(i(y, z), u))))\ni(i(x, x), i(i(y, y), i(i(x, y), i(x, y))))\n\nTheorem 7 The same theorems are provable from H1\u2013H4 by using condensed\ndetachment as the sole rule of inference as when we use modus ponens and\nsubstitution as rules of inference. Moreover, if b is provable without double\nnegation by modus ponens from substitution instances of axioms, then there is\na double-negation-free condensed-detachment proof of b.\nRemark. The present proof gives no assurance that a general H proof, using\nsubstitution arbitrarily and not just in axioms, can be converted to a condenseddetachment proof without introducing additional double negations. That in\ngeneral it can be so converted will follow from Theorem 8.\nProof : The first claim is an immediate consequence of Theorem 2 and Lemma\n7. To prove the second claim, suppose b has a double-negation-free modus\nponens proof from substitution instances of axioms. By Lemma 3, we can\nsupply double-negation-free condensed-detachment proofs of the substitution\ninstances of axioms that are used in the proof. Adjoining these proofs, we\nobtain a double-negation-free condensed-detachment proof of b as required.\n\n10\n\nH and Sequent Calculus\n\nLet G1 be the intuitionistic Gentzen calculus as given by Kleene [5]. Let G be G1\n(minus cut), restricted to implication and negation; that is, formulas containing\nother connectives are not allowed. The rules of inference of G are the four rules\ninvolving implication and negation, plus the structural rules.6 The rules of G1\nare listed on pp. 442\u2013443 of [5]. They will also be given in the course of the\nproof of Lemma 12. We shall use the notation \u0393 \u21d2 \u2206 for a sequent. We remind\nthe reader that what distinguishes intuitionistic from classical sequent calculus\n6 The\n\ntheorems of G include all theorems of G1 that involve only implication and negation,\nsince by Gentzen's cut-elimination theorem, any theorem has a cut-free proof, and the formulas\nappearing in the proof are all subformulas of the final sequent and hence involve only the\nconnectives that occur in the final sequent.\n\n24\n\n\fis that the consequent \u2206 in a sequent \u0393 \u21d2 \u2206 in the intuitionistic calculus is\nrestricted to contain at most one formula.7\nWe give a translation of H into G: If A is a formula of H, then A0 is a formula\nof G, obtained by the following rules.\ni(a, b)0 = a0 \u2192 b0\nn(a)0 = \u00aca0\nOf course, when a is a proposition letter (variable), then a0 is just a. If \u0393 =\nA0 , . . . , An is a list of formulas of L, then \u03930 is the list A00 , . . . , A0n .\nWe translate G into H in the following manner. First we assign to each\nformula A of G a corresponding formula A\u2032 of H, given by\n(A \u2192 B)\u2032 = i(A\u2032 , B \u2032 )\n(\u00acA)\u2032 = n(A\u2032 ),\nwhere again A\u2032 = A for proposition letters A. We need to define \u0393\u2032 also, where\n\u0393 is a list of formulas; since we are treating only the intuitionistic calculus, we\nneed this definition only for lists occurring on the left of \u21d2. If \u0393 = A1 , . . . , An\nis a list of formulas occurring on the left of \u21d2, then \u0393\u2032 is A\u20321 , . . . , A\u2032n .8\nThese two translations are inverse.\n\u2032\n\nLemma 8 Let A be a formula of H. Then A0 = A.\nProof. By induction on the complexity of A. If A is a variable, then A0 = A\n\u2032\nand A0 = A. We have\ni(x, y)0\n\n\u2032\n\n=\n\n(x0 \u2192 y 0 )\u2032\n\n=\n\ni(x0 , y 0 )\n\n=\n\ni(x, y),\n\n\u2032\n\n\u2032\n\nand we have\nn(x)0\n\n\u2032\n\n= (\u00ac(x0 ))\u2032\n\u2032\n\n= n(x0 )\n= n(x).\n7 The translations given here can also be given for Lukasiewicz's logic L1\u2013L3, but many\nadditional complications are introduced by the necessity of translating a sequent containing\nmore than one formula on the right, and in view of the simpler proofs of double-negation\nelimination given above, we treat the Gentzen translation only for intuitionistic logic. Note\nthat we used OTTER only for the H-proofs of D2 and D3; but if we treat L this way instead\nof H, we need OTTER for twenty-one additional lemmas.\n8 A similar translation has been given in [8] in connection with Lukasiewicz's multivalued\nlogics (which include the infinite-valued logic discussed in Section 7 of this paper). It is\nthe obvious translation of Gentzen calculus into the implication-and-negation fragment of\npropositional calculus. We cannot appeal to any of the results of [8] because we are dealing\nwith different logics, and besides we need to pay attention to double negations.\n\n25\n\n\fHenceforth we simplify our notation by using lower-case letters for formulas\nof H and upper-case letters for formulas of G. Then we can write a instead of A\u2032\nand A instead of a0 . By the preceding lemma, this convenient notation presents\nno ambiguity. Thus, for example, (A \u2192 B)\u2032 is i(a, b). Greek letters are used for\nlists of formulas.\nThe following lemma gives several variations of the deduction theorem for\nH.\nLemma 9 (Deduction theorem for H) (i) If H proves a from assumptions\n\u03b4, b, then i(b, a) is a theorem proved in H from assumptions \u03b4, provided the\nassumptions contain only constant proposition letters.\n(ii) If a is provable from assumptions \u03b4, b by condensed detachment from\nH1\u2013H4, then i(b, a) is derivable by condensed detachment from \u03b4, provided the\nassumptions contain only constant proposition letters.\n(iii) If there exists a proof of a by modus ponens from \u03b4, b and substitution\ninstances of H1\u2013H4, then there exists a proof of i(a, b) by modus ponens from \u03b4\nand substitution instances of H1\u2013H4.\n(iv) In part (i), if the given proof of a has no double negations, then the\nproof of i(b, a) from \u03b4 has no double negations.\n(v) In part (iii), if the given proof of a has no double negations, then the\nproof of i(b, a) from \u03b4 has no double negations.\nRemarks: We do not prove a claim about double negations for condenseddetachment proofs, only for modus ponens proofs. That is, for condenseddetachment proofs, there is no part (vi) analogous to parts (iv) and (v). The\nreason for the restriction to constant assumptions in (i) and (ii) is the following. From the assumption i(n(n(x)), x), we can derive any theorem of classical\nlogic, for instance i(n(n(a)), a), by substitution or condensed detachment. But\nwe cannot derive the proposition that the first of these implies the second,\ni(i(n(n(x)), x), i(n(n(a)), a)). Therefore the deduction theorem is false without\nthe restriction. Proofs by modus ponens from substitution instances of axioms\ndo not suffer from this difficulty, which is one reason they are so technically\nuseful in this paper.\nProof. First we show that (ii) follows from (iii). If we are given a condenseddetachment proof of a from assumptions \u03b4, b using H1\u2013H4, we can find, by\nTheorem 1, a modus ponens proof of a from \u03b4, b and substitution instances of\nH1\u2013H4. Applying (iii), we have a modus ponens proof of i(b, a) from \u03b4 and\nsubstitution instances of H1\u2013H4. By Theorem 7, this proof can be converted\nto a condensed-detachment proof of i(b, a) from \u03b4, completing the derivation of\n(ii) from (iii).\nNext we show that (i) follows from (iii). Suppose we are given a proof of\na from \u03b4, b in H. By Theorem 1, we can find a modus ponens proof of a from\nassumptions \u03b4, b and substitution instances of H1\u2013H4. By (iii) we then can find\na modus ponens proof of i(b, a) from \u03b4 and substitution instances of H1\u2013H4.\n26\n\n\fAdding one substitution step above each such substitution instance, we have a\nproof in H of i(b, a) from \u03b4. That completes the proof that (i) follows from (iii).\nWe now show that (v) implies (iv). To do so requires going over the preceding\nparagraph with attention to double negations. Suppose we are given a doublenegation-free proof of a from \u03b4, b in H. By Theorem 1, we can find a modus\nponens proof of a from assumptions \u03b4, b and substitution instances of H1\u2013H4,\nwhich is also double-negation free. By (v) we then can find a double-negationfree modus ponens proof of i(b, a) from \u03b4 and substitution instances of H1\u2013H4.\nAdding one substitution step above each such substitution instance, we have a\ndouble-negation-free proof in H of i(b, a) from \u03b4. That completes the proof that\n(iv) follows from (v).\nNow we prove (iii) and (v) simultaneously by induction on the number of\nsteps in a pure modus ponens proof of a from \u03b4 and substitution instances of\nH1\u2013H4.\nBase case: a is b, or a member of \u03b4, or a substitution instance of one of\nH1\u2013H4.\nIf a is a substitution instance of an axiom of H1\u2013H4, then by Lemma 3 there\nexists a condensed-detachment proof of a from H1\u2013H4 that contains only double\nnegations already occurring in a.\nIf a is b, then we use the fact that i(b, b) is a theorem of H, provable without\ndouble negations (except those occurring in b) by Lemma 1. Hence by Theorem\n1, it is provable by modus ponens from substitution instances of H1\u2013H4.\nIf a is a member of \u03b4, then consider the formula i(a, i(b, a)), which is a\nsubstitution instance of axiom H1. We can deduce i(b, a) by modus ponens\nfrom this formula and a; adjoining this step to a one-step proof of a from \u03b4 \"by\nassumption\", we have a proof of i(b, a) from \u03b4.\nTurning to the induction step, suppose the last step in the given proof infers\na from i(p, a) and p. By the induction hypothesis, we have proofs of i(b, p) and\ni(b, i(p, a)) from \u03b4. By axiom H2 and modus ponens (which is a special case of\ncondensed detachment) we have i(i(b, p), i(b, a)). Applying modus ponens once\nmore, we have i(b, a) as desired. Note that no double negations are introduced.\nThat completes the proof of the lemma.\nWe shall call a sequent \u0393 \u21d2 \u2206 double-negation free if it contains no double\nnegation.\nWe shall refer to proofs by modus ponens from substitution instances of\nH1\u2013H4 as M-proofs for short. Thus M-proofs use modus ponens only but can\nuse substitution instances of axioms, as opposed to H-proofs, which can use\nsubstitution anywhere as well as modus ponens. We have already shown how\nto convert condensed-detachment proofs to M-proofs (in Theorem 1), and vice\nversa (since every substitution instance of the axioms is derivable by condensed\ndetachment).\nLemma 10 If the final sequent \u0393 \u21d2 \u0398 of a G-proof is double-negation free,\nthen the entire G-proof is double-negation free.\n27\n\n\fProof. By the subformula property of cut-free proofs: Every formula in the\nproof is a subformula of the final sequent.\nLemma 11 The translation from H to G is sound. That is, if H proves a from\nassumptions \u03b4, then G proves the sequent \u2206 \u21d2 A (where A is the translation\na0 , and \u2206 is \u03b4 0 ).\nProof. We proceed by induction on the length of proofs. When the length is\nzero, we must exhibit a proof in G of each of the axioms H1\u2013H4. This is a routine\nexercise in the Gentzen sequent calculus, which we omit. For the induction step,\nsuppose we have proofs in H from assumptions \u03b4 of a and i(a, b). Then by the\ninduction hypothesis, we have proofs in G of \u2206 \u21d2 A and \u2206 \u21d2 A \u2192 B. It is\nanother exercise in Gentzen rules to produce a proof of \u2206 \u21d2 B. One solves this\nexercise by first proving\nA \u2192 ((A \u2192 B) \u2192 B)\nand then using the cut rule twice. This completes the proof of the lemma.\nLemma 12 (i) Suppose G proves the sequent \u0393 \u21d2 A. Then there is an M-proof\nof a from assumptions \u03b3. If G proves \u0393 \u21d2 [], where [] is the empty list, then\nthere is an M-proof of p from assumptions \u03b3, where p is any formula of H.\n(ii) If any double negations occur in subformulas of the given sequent \u0393 \u21d2 \u2206\n(where here \u2206 can be empty or not), then a proof as in (i) can be found that\ncontains no double negations except those arising from the H-translations of\ndouble-negated subformulas of \u0393 \u21d2 \u2206.\n(iii) If in part (i) the H-translation of the given sequent \u0393 \u21d2 \u2206 does not\ncontain any double negations, then the M-proof that is asserted to exist can also\nbe found without double negations.\nProof. We proceed by induction on the length of proof of \u0393 \u21d2 A in G.\nBase case: the sequent has the form \u0393, A \u21d2 A. We must show that a is\nderivable in H from premisses \u03b3, a, which is clear.\nNow for the induction step. We consider one case for each rule of G.\nCase 1, the last inference in the G-proof is by rule \u2192\u21d2:\n\u2206\u21d2A\nB, \u0393 \u21d2 \u0398\nA \u2192 B, \u2206, \u0393 \u21d2 \u0398\nBy the induction hypothesis, we have an M-proof of a from \u03b4, and an Mproof of \u03b8 from b and \u03b3. We must give an M-proof of \u03b8 from i(a, b), \u03b4, and\n\u03b3.\nApplying modus ponens to i(a, b) (which is (A \u2192 B)\u2032 ) and the given proof of\na from \u03b4, we derive b. Copying the steps of the proof of \u03b8 from assumptions b, \u03b3\n(but changing the justification of the step(s) b from \"assumption\" to the line\nnumber where b has been derived), we have derived \u03b8 from assumptions (A \u2192\nB)\u2032 ,\u03b4, \u03b3, completing the proof of case 1. No double negations are introduced by\nthis step.\n28\n\n\fCase 2, the last inference in the G-proof is by rule \u21d2\u2192:\nA, \u0393 \u21d2 B\n\u0393\u21d2A\u2192B\nBy the induction hypothesis, we have an M-proof from H1\u2013H4 of b from \u03b3\nand a. Applying the deduction theorem for H1\u2013H4 with M-proofs, we have an\nM-proof in H of i(a, b) from \u03b3. But (A \u2192 B)\u2032 = i(a, b), completing this case.\nNote that double negations are not introduced by the deduction theorem if they\nare not already present, by part (v) of the deduction theorem. (One sees why\nwe must use M-proofs instead of condensed detachment.)\nCase 3, the last inference in the G-proof introduces negation on the right:\nA, \u0393 \u21d2 []\n\u0393 \u21d2 \u00acA\nBy the induction hypothesis, there is an M-proof of n(a) from a and \u03b3. By the\ndeduction theorem for H1\u2013H4 with M-proofs, there is a proof of i(a, n(a)) from\n\u03b3. Hence, it suffices to show that n(a) is derivable from i(a, n(a)). This follows\nfrom a substitution instance of H3, which is i(i(x, n(x)), n(x)), substituting a\nfor x.\nCase 4, the last inference in the G-proof introduces negation on the left:\n\u0393\u21d2A\n\u00acA, \u0393 \u21d2 []\nBy the induction hypothesis, we have an M-proof of a from \u03b3. We must\nshow that from n(a) and \u03b3, we can deduce b in L, where b is any formula of H.\nWe have i(a, i(n(a), b) as a substitution instance of axiom H4. Applying modus\nponens twice, we have the desired M-proof of b from \u03b3, completing case 4.\nCase 5, the last inference is by contraction in the antecedent:\nC, C, \u0393 \u21d2 \u0398\nC, \u0393 \u21d2 \u0398\nBy the induction hypothesis we have an M-proof of \u03b8 from assumptions c, c,\nwhich also qualifies as a proof from assumptions c, so there is nothing more to\nprove.\nCase 6, the last inference is by thinning in the antecedent:\n\u0393\u21d2\u0398\nC, \u0393 \u21d2 \u0398\nBy the induction hypothesis, we have an M-proof from H1\u2013H4 of \u03b8 from\nassumptions \u0393\u2032 . That counts as an M-proof from assumptions C, \u03b3 as well.\nThat completes case 6.\nCase 7, the last inference is by interchange in the antecedent. This just\nmeans the order of formulas in the assumption list has changed, so there is\nnothing to prove.\nThat completes the proof of part (i) of the lemma. Regarding parts (ii)\nand (iii): by the preceding lemma, any double negations occurring anywhere\n29\n\n\fin the G-proof must occur in the final sequent. No new double negations are\nintroduced in the translation to H, and all the theorems of H that we used have\nbeen given double-negation-free condensed-detachment proofs from H1\u2013H4. By\nTheorem 1, they have double-negation-free M-proofs, too. Although we may not\nhave pointed it out in each case, the argument given produces an M-proof in\nwhich any double negations arise from the translations into H of doubly negated\nsubformulas of the final sequent. In particular, if the final sequent contains no\ndouble negations, then the M-proof produced also contains no double negations.\nCorollary 2 H is a basis for the implication-negation fragment of intuitionistic\nlogic. That is, every intuitionistically valid formula in this fragment is provable\nin H.\nRemark. In [4], this lemma was proved for a different axiomatization of the\nimplication-negation fragment of intuitionistic calculus, so this corollary could\nalso be proved by demonstrating the equivalence of the two fragments directly.\nProof. Suppose A is an intuitionistically valid formula containing no connectives\nother than implication and negation. By Gentzen's cut-elimination theorem,\nthere is a cut-free proof of the sequent [] \u21d2 A (with empty antecedent). By\nLemma 12, A has an M -proof, which in particular is a proof in H.\nRemark. The main idea of the corollary is that by the subformula property of\ncut-free proofs, the cut-free proof contains no connectives other than implication\nand negation.\nTheorem 8 Suppose H proves b from assumptions \u03b4 and neither \u03b4 nor b contains double negation. Then there is a condensed-detachment proof of b from\nH1\u2013H4 and assumptions \u03b4 that does not contain double negation.\nMore generally, if \u03b4 and b are allowed to contain double negation, then there\nis a condensed-detachment proof of b from H1\u2013H4 and assumptions \u03b4 that contains no new double negations. That is, all doubly negated formulas occurring\nin the proof are subformulas of \u03b4 or of b.\nProof. Let b0 = B be the translation of b into G defined earlier. Double\nnegations in B arise only from double negations in b. Suppose b is provable in H\nfrom assumptions \u03b4. By Theorem 1, there is an M-proof of b from \u03b4. By Lemma\n11, the sequent \u2206 \u21d2 B is provable in G. Hence, by Gentzen's cut-elimination\ntheorem, there is a proof in G of \u2206 \u21d2 b. By the previous lemma, there is an\n\u2032\nM-proof of B \u2032 from assumptions \u22060 that contains no new double negations.\nBut by Lemma 8, B \u2032 = b and \u2206\u2032 = \u03b4. Thus we have an M-proof of b from \u03b4.\nBy the d-completeness of H, Theorem 7, there is also a condensed-detachment\nproof of b from \u03b4. The second part of Theorem 7 says that we can find a doublenegation-free condensed-detachment proof of b from \u03b4. It is important that we\nare working with M-proofs here, since the second part of the D-completeness\ntheorem, about double negations, applies only to M-proofs. That completes the\nproof.\n30\n\n\fTheorem 9 Suppose A is provable from H1\u2013H4 by using condensed detachment\nas the only rule of inference. Then A has a proof from H1\u2013H4 using condensed\ndetachment in which no doubly negated formulas occur except those that already\noccur as subformulas of A.\nProof . Suppose A is provable from H1\u2013H4 using condensed detachment. Each\ncondensed-detachment step can be converted to three steps by using substitution\nand modus ponens, so A is provable in H. By the preceding theorem, A has a\ncondensed-detachment proof from H1\u2013H4 in which no doubly negated formulas\noccur except those that already occur in A. That completes the proof.\nRemark . Since the translation back from Gentzen calculus produces M-proofs,\nwe do not need to appeal to d-completeness for arbitrary H-proofs. This is\nfortunate because we do not know a proof of d-completeness that avoids the\npossible introduction of double negations, except when restricted to M-proofs.\nCorollary 3 Let T be any set of axioms for intuitionistic propositional logic.\nSuppose that there exist condensed-detachment proofs of H1\u2013H4 from T in which\nno double negations occur (except those that occur in T , if any). Then the\npreceding theorem is true with T in place of H1\u2013H4.\nProof . Let b be provable from T . Then b is provable from H1\u2013H4, since T is a\nset of axioms for intuitionistic logic. By the theorem, there is a proof of b from\nH1\u2013H4 that contains no double negations (except those occurring in b, if any).\nSupplying the given proofs of H1\u2013H4 from T , we construct a proof of b from T\nthat contains no double negations except those occurring in T or in b (if any).\nThat completes the proof.\n\nAcknowledgments\nWe thank Kenneth Harris, Branden Fitelson, and Dolph Ulrich for their attention to early drafts of this paper. In addition, Ulrich contributed part of the\nproof of D1\u2013D3 from L1\u2013L3.\nThe work of RV was supported in part by National Science Foundation grant\nno. CDA-9503064.\nThe work of LW was supported by the Mathematical, Information, and Computational Sciences Division subprogram of the Office of Advanced Scientific\nComputing Research, U.S. Department of Energy, under Contract W-31-109Eng-38.\n\nReferences\n[1] Chang, C. C., Algebraic analysis of many valued logics, Trans. Amer. Math.\nSoc. 88 (1958) 467\u2013490.\n31\n\n\f[2] Fitelson, B., and Wos, L., Finding missing proofs with automated reasoning, Studia Logica 68, no. 3 (2001) 329\u2013356.\n[3] Hindley, J. R., and Meredith, D., Principal type-schemes and condensed\ndetachment J. Symbolic Logic 55, no. 1 (1990) 90\u2013105.\n[4] Horn, Alfred, The separation theorem of intuitionist propositional calculus.\nJ. Symbolic Logic 27 (1962) 391\u2013399.\n[5] Kleene, S. C., Introduction to Metamathematics, van Nostrand, Princeton,\nNew Jersey, 1952.\n[6] McCune, W. W., Otter 3.0 Reference Manual and Guide, Technical Report\nANL-94/6, Argonne National Laboratory, Argonne, Illinois, 1994.\n[7] Mints, G., and Tammet, T., Condensed detachment is complete for relevance logic: A computer-aided proof, J. Automated Reasoning 7 (1991)\n587\u2013596.\n[8] Prijatelj, Andreja, Bounded contraction and Gentzen-style formulation of\nLukasiewicz logics, Studia Logica 57, no. 2\u20133 (1996) 437\u2013456.\n[9] Prior, A. N., Logicians at play: Or Syll, Simp, and Hilbert, Australasian\nJ. Phil. 34 (1956) 182\u2013192.\n[10] Rose, Alan, and Rosser, J. Barkley, Fragments of many-valued statement\ncalculi, Trans. Amer. Math. Soc. 87 (1958) 1\u201353.\n[11] Wos, L., and Thiele, R., Hilbert's new problem, Bulletin of the Section of\nLogic 30, no. 3 (October 2001) 165\u2013175.\n[12] Ulrich, D., A legacy recalled and a tradition continued, J. Automated Reasoning 27, no. 2 (2001) 97\u2013122.\n[13] Prior, A. N, Formal Logic, 2nd edition, Clarendon Press, Oxford, 1962.\n[14] Veroff, R., Using hints to increase the effectiveness of an automated reasoning program: Case studies, J. Automated Reasoning 16, no. 3 (1996)\n223\u2013239.\n[15] Wos, L., and Pieper, G., A Fascinating Country in the World of Computing:\nYour Guide to Automated Reasoning, World Scientific, Singapore, 1999.\n[16] Wos, L., The resonance strategy, Computers and Mathematics with Applications 29, no. 2 (1996) 133\u2013178.\n[17] Wos, L., Conquering the Meredith single axiom, J. Automated Reasoning\n27 (2001) 175\u2013199.\n\n32\n\n\f"}