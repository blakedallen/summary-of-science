{"id": "http://arxiv.org/abs/1108.1344v1", "guidislink": true, "updated": "2011-08-05T14:54:25Z", "updated_parsed": [2011, 8, 5, 14, 54, 25, 4, 217, 0], "published": "2011-08-05T14:54:25Z", "published_parsed": [2011, 8, 5, 14, 54, 25, 4, 217, 0], "title": "Architecture Of A Identity Based Firewall System", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1108.2769%2C1108.5987%2C1108.4345%2C1108.4817%2C1108.1086%2C1108.2698%2C1108.1798%2C1108.3425%2C1108.4122%2C1108.2184%2C1108.5645%2C1108.3712%2C1108.2051%2C1108.1996%2C1108.1617%2C1108.0048%2C1108.0249%2C1108.0620%2C1108.0455%2C1108.2155%2C1108.0362%2C1108.4713%2C1108.1045%2C1108.6095%2C1108.4024%2C1108.4649%2C1108.0540%2C1108.0926%2C1108.3764%2C1108.3825%2C1108.0393%2C1108.1900%2C1108.2816%2C1108.2917%2C1108.2522%2C1108.0384%2C1108.2986%2C1108.1177%2C1108.2406%2C1108.2224%2C1108.2880%2C1108.6245%2C1108.1629%2C1108.0761%2C1108.1344%2C1108.4827%2C1108.3626%2C1108.3628%2C1108.3014%2C1108.5520%2C1108.5924%2C1108.0692%2C1108.2196%2C1108.6172%2C1108.5712%2C1108.3647%2C1108.5327%2C1108.6024%2C1108.1132%2C1108.4456%2C1108.1578%2C1108.6280%2C1108.5473%2C1108.4744%2C1108.3140%2C1108.4310%2C1108.5317%2C1108.5772%2C1108.5944%2C1108.0783%2C1108.4207%2C1108.2908%2C1108.5222%2C1108.0244%2C1108.2030%2C1108.2437%2C1108.3346%2C1108.2718%2C1108.0035%2C1108.4961%2C1108.1932%2C1108.0653%2C1108.1402%2C1108.3165%2C1108.0598%2C1108.2435%2C1108.0809%2C1108.1512%2C1108.2354%2C1108.4220%2C1108.2567%2C1108.1555%2C1108.1718%2C1108.5640%2C1108.5036%2C1108.1105%2C1108.1944%2C1108.0846%2C1108.5401%2C1108.1833%2C1108.2347&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Architecture Of A Identity Based Firewall System"}, "summary": "Classic firewall systems are built to filter traffic based on IP addresses,\nsource and destination ports and protocol types. The modern networks have grown\nto a level where the possibility for users' mobility is a must. In such\nnetworks, modern firewalls may introduce such complexity where administration\ncan become very frustrating since it needs the intervention of a firewall\nadministrator. The solution for this problem is an identity based firewall\nsystem. In this paper we will present a new design of a firewall system that\nuses the user's identity to filter the traffic. In the design phase we will\ndefine key points which have to be satisfied as a crucial milestone for the\nfunctioning of the whole Identity based firewall system.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1108.2769%2C1108.5987%2C1108.4345%2C1108.4817%2C1108.1086%2C1108.2698%2C1108.1798%2C1108.3425%2C1108.4122%2C1108.2184%2C1108.5645%2C1108.3712%2C1108.2051%2C1108.1996%2C1108.1617%2C1108.0048%2C1108.0249%2C1108.0620%2C1108.0455%2C1108.2155%2C1108.0362%2C1108.4713%2C1108.1045%2C1108.6095%2C1108.4024%2C1108.4649%2C1108.0540%2C1108.0926%2C1108.3764%2C1108.3825%2C1108.0393%2C1108.1900%2C1108.2816%2C1108.2917%2C1108.2522%2C1108.0384%2C1108.2986%2C1108.1177%2C1108.2406%2C1108.2224%2C1108.2880%2C1108.6245%2C1108.1629%2C1108.0761%2C1108.1344%2C1108.4827%2C1108.3626%2C1108.3628%2C1108.3014%2C1108.5520%2C1108.5924%2C1108.0692%2C1108.2196%2C1108.6172%2C1108.5712%2C1108.3647%2C1108.5327%2C1108.6024%2C1108.1132%2C1108.4456%2C1108.1578%2C1108.6280%2C1108.5473%2C1108.4744%2C1108.3140%2C1108.4310%2C1108.5317%2C1108.5772%2C1108.5944%2C1108.0783%2C1108.4207%2C1108.2908%2C1108.5222%2C1108.0244%2C1108.2030%2C1108.2437%2C1108.3346%2C1108.2718%2C1108.0035%2C1108.4961%2C1108.1932%2C1108.0653%2C1108.1402%2C1108.3165%2C1108.0598%2C1108.2435%2C1108.0809%2C1108.1512%2C1108.2354%2C1108.4220%2C1108.2567%2C1108.1555%2C1108.1718%2C1108.5640%2C1108.5036%2C1108.1105%2C1108.1944%2C1108.0846%2C1108.5401%2C1108.1833%2C1108.2347&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Classic firewall systems are built to filter traffic based on IP addresses,\nsource and destination ports and protocol types. The modern networks have grown\nto a level where the possibility for users' mobility is a must. In such\nnetworks, modern firewalls may introduce such complexity where administration\ncan become very frustrating since it needs the intervention of a firewall\nadministrator. The solution for this problem is an identity based firewall\nsystem. In this paper we will present a new design of a firewall system that\nuses the user's identity to filter the traffic. In the design phase we will\ndefine key points which have to be satisfied as a crucial milestone for the\nfunctioning of the whole Identity based firewall system."}, "authors": ["Nenad Stojanovski", "Marjan Gusev"], "author_detail": {"name": "Marjan Gusev"}, "author": "Marjan Gusev", "links": [{"title": "doi", "href": "http://dx.doi.org/10.5121/ijnsa", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/1108.1344v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1108.1344v1", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "9 pages, 3 figures, 1 table; (ISSN: 0975- 2307); International\n  Journal of Network Security & Its Applications July 2011, Volume 3, Number 4", "arxiv_primary_category": {"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1108.1344v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1108.1344v1", "journal_reference": null, "doi": "10.5121/ijnsa", "fulltext": "ARCHITECTURE OF A IDENTITY BASED FIREWALL\nSYSTEM\nNenad Stojanovski1 and Marjan Gu\u0161ev2\n1 Makedonski Telekom AD, Orce Nikolov BB, 1000 Skopje, Macedonia\nnenad.stojanovski@telekom.mk\n2\n\nFaculty of Natural Sciences and Mathematics, Ss. Cyril and Methodius University,\nArhimedova b.b., PO Box 162, 1000 Skopje, Macedonia\nmarjan@ii.edu.mk\n\nABSTRACT\nClassic firewall systems are built to filter traffic based on IP addresses, source and destination ports and\nprotocol types. The modern networks have grown to a level where the possibility for users' mobility is a\nmust. In such networks, modern firewalls may introduce such complexity where administration can\nbecome very frustrating since it needs the intervention of a firewall administrator.\nThe solution for this problem is an identity based firewall system. In this paper we will present a new\ndesign of a firewall system that uses the user's identity to filter the traffic. In the design phase we will\ndefine key points which have to be satisfied as a crucial milestone for the functioning of the whole Identity\nbased firewall system.\n\nKEYWORDS\nIdentity based firewalls, user identity, firewalls, network security, computer networks, firewall systems\ndesign\n\n1. INTRODUCTION\nClassic firewall systems are built to filter traffic based on source and destination IP addresses,\nsource and destination ports and protocol types[11]. As Information technology moves forward\nand advances, classic firewalls start to become very robust and unusable when it comes to the\ntransparent user experience. The main problem that arises from using classic firewalls in a\nmodern dynamic environment is that users have to be mobile and have access to their resources.\nThe issue that is raised by classic firewalls is the one that forces the users to have static IP\naddresses, hence their needs for mobility[10]. This will require the firewall administrator to\nchange the user's IP address in the firewall policy every time it changes. This may reflect on the\nuser experience with the next generation network as it won't be as smooth as it should be, it\nmight even become very frustrating for the end-user.\nThe solution for the problem is presented in the identity based firewall systems. This firewall\nsolution should solve the problems that arise with user mobility so that it will allow users to be\nmobile in such way that there won't be any intervention needed from the firewall admin. Such\nsolutions exist but are very robust because they need agents to be installed on client computers.\nThis paper will focus on defining a new architecture and its components which will tend to\nsolve the need of agents. The main focus of the solution will be to present a solution that won't\nbe dependable on agents installed on the end-user computers. To do this, we need to build a\nvery complex system which consolidates many different components that will aid the agentless\nsystem. In order to do this, we need to define this complex architecture for the identity based\nfirewall and define the core components of that system. Along the way, we will define some\ncrucial questions that have to be answered in the design phase of the solution. The main focus of\nthis paper is to define the key points of the identity based firewall solution for an agentless\n\n\fsolution. Also, we will give some results that we have acquired from the tests conducted on the\nproposed architecture.\n\n2. USER IDENTITY IN THE COMPUTER WORLD\nLike in the real world, the computer world has also needs for identities. These identities are\nneeded to identify the computer users. To ensure this, system need to define schemas that will\nbe used to identify users. These schemas are then used to map the user uniqueness in the\ncomputer world.\nMicrosoft's domain technology allows users to be defined in two different unique ways. Both\nways are unique and both ways are mandatory for a user to be created as a domain user. One of\nthose unique identifiers is called Unique User ID or short UUID[8]. The other unique identifier\nis the domain username. The first identifier is generated randomly by the active directory\nsoftware, where the other one is inserted by an administrator.\nThe use of two unique identifiers for a user is very beneficial in an Active Directory\nenvironment. The most beneficial part is that computer systems are able to identify and\ndistinguish user account. This means that by using the UUID, the operating system is able to\ncheck if the user is a domain user or if the user is a local user on that computer.\nThe other benefit of the Windows domain infrastructure is that every login and logoff operation\nis logged in a central repository. This is very important if there is a need for analyzing those\nevents, the information that is included in them is very descriptive.\nOn the other side, the login process on the unix systems can be done in two different ways. The\nfirst possibility to solve the general question about user identities and logon procces is to use an\nLDAP which stores the login information[18]. This approach allows that the users are checked\nagainst the Microsoft Active Directory server. The second approach is the use of local users on\nthe unix system. This approach doesn't support centralized authentication and is very hard for\nadministration, since all users much be created locally on the unix systems[19].\n\n3. EVENT DRIVEN SECURITY\nPreviously we've seen that almost every action is logged in the Windows domain environment.\nDepending on the definition in the group policy the Event is sometimes classified in a category\nor it's written as an error in the Event log files. By having the knowledge that everything is\nlogged, it is possible to define a way how we will defend the systems based on the events that\narise in those systems. By definition, event driven security is a security system that responds\ninput from the user (mouse movement, keystrokes, menu choices, etc.) or from messages from\nother applications. This is in contrast to a batch operation that continuously processes the next\nitem from a group.\nBy following the definition of event driven security, we can conclude that in order to have event\ndriven security system, we have to monitor the events that arise in the monitored systems[7].\nSince we know that every event is written in some log file we would have to monitor those log\nfiles for certain type of events. The main purpose of the event driven security system is to\nprotect the assets by responding to malicious events. Because it is an event driven security\nsystem, when it detects any of the events that are specified as malicious it will execute the\nappropriate counter-measure to the destination systems.\nFor example, let's say that we have an Event Driven security defence system that protects the\nuser accounts from being locked. That system will monitor the event log on the domain\ncontroller for events of the type \"Event ID 529: Login failed\". In order to protect it, the event\ndriven system will start acting after the third failed login where it will send a command to the\ndomain controller to block the IP address that had 3 failed logins.\nSometimes attacks are much more complicated and they don't appear straight forward as\ndescribed in the example above. The anomaly that happens when they happen is connected with\n\n\fmore than one event, and those events appear in different log files. In order to detect and defend\nagainst this type of attacks the event driven system should use event correlation. By using event\ncorrelation we are able to define sequential list of events that occur during some attacks. This\ntechnique will allow us to stop the attack before the last step of the attack occurs.\nFor example, the attack against our system happens in three steps where the steps are:\n1. login to the operating system\n2. warning in the system log that service X is failing\n3. error in the system log that service X has stopped responding\nIn order for the event driven system to protect against this type of attack we should define a 2\nstep event correlation[22] where the rule will be:\n1. login to the system\n2. warning in the system log that service X is failing after x seconds from the login event\nWhen this rule is detected by the event driven system it should send an action to the attacked\nsystem to block the access from the attacking IP address. Other uses of the event driven security\nparadigm can be that we can define actions that will occur when certain events are written to the\nevent log.\n\n4. IDENTITY BASED FIREWALL\nIn the last few years the Microsoft Windows domain infrastructure has spread rapidly among\ncompanies. This has brought the ability to uniquely identify users in this domain, since every\nuser has been given a unique domain user name. Moreover, with the rapid development of new\ndevices, like smart phones, laptops and the lowering of the prices for them, the need of user\nmobility within these the modern enterprise rises. The whole concept of mobility asks that the\nusers are mobile within their work environment, which forces them to use different IP\naddresses. By using different IP addresses, they are limited in the access to their resources. In\norder to solve the issues with the mobility, security companies have started to design and\ndevelop new concepts that could be implemented into the current firewall technology. These\nconcepts should allow users to extend their mobility and let them be mobile in such ways that\nthey would be able to access resources from where ever they are.\nThe whole concept of identity based firewall systems differs from the classic packet filtering\nsolutions in many ways. The main difference is that identity based firewall systems have to use\nthe layer 7 information to do the filtering, where the classic solutions use the layer 3\ninformation. The whole idea behind the identity based firewall concept is to use the user's\nidentity and allowing that identity access to the needed resources. In a Microsoft Windows\ndomain environment the main identity is the user's domain username. Rules in the case of\nidentity based firewalls are created by assigning permit or deny permissions to user identities.\nThis means that we are embedding the user identity within the standard firewall rules, but\ninstead of using a source IP address, the rule will use the user identity. In the case of the\nwindows domain, the user identity is represented with a domain username. By using this\ndomain username and adding it to the identity rules, the windows domain users will be able to\naccess their resources with the use of their domain username.\n\n5. IDENTITY BASED FIREWALL ARCHITECTURE\nIdentity based firewalls introduce much bigger complexity in the computer network then classic\nfirewall. The complexity of this new architecture is introduced by the use of the Layer 7\ninformation according to which the firewall filtering is done. Namely, the complexity is brought\nto the network by the following requirements:\n\n\f1. A system that will collect the layer 7 data (username) from the central authentication\ndevice\n2. Agentless system when clients are concerned\n3. Optimized system where the introduced identity will have a minimal performance on\nthe user's experience\nThe previous requirements are crucial in building a very optimized and very functional identity\nbased firewall[5]. By fulfilling every requirement from above we will be able to define a very\noptimized identity based firewall.\nIn order to answer the previous requirements we will first describe the \"as-is\" process of the\nuser's access to the network and his/hers access to the needed resources that are in the network.\nThe scenario is based on the assumption that the users are mobile users and that they use IP\naddresses that are being dynamically assigned to the computer and all network resources are in a\nsecure network zone which is behind a firewall. First step in the whole process is the need for\nthe user to log into the computer. In background, the operating system authenticates the user to\na central system. After being authenticated to the system the user wants to access the resources\nin the network. Since the user is a mobile user it is very likely that there will be a problem in the\naccess to the resources. The reason behind this is that the user is being blocked by the firewall,\nbecause his dynamically IP address isn't allowed to the resources. This is true because classic\nfirewalls require that the user is defined by an IP address. Since the IP address is dynamically\nassigned, the firewall admin is required to change the access rules for every user that has a new\nIP address assignment.\nAfter analyzing the previous scenario we can highlight couple of points in the user's activity\ntowards his access to the network resources. We can distinguish three main points which are:\n1. The user's authentication to the central authentication system\n2. Reporting the new issue to the firewall admin\n3. The reconfiguration needed on the firewall with the user's new IP address\nThe following scenario will give a new overview with the implementation of the new identity\nbased firewall with the use of the event driven security paradigm. Our main goal is to build an\nidentity based firewall solution and to do this we will need to redesign the previous scenario to\nfit for our identity based firewall. This means that the following steps need to be done:\n1.\n2.\n3.\n4.\n\nCatch every logon/logoff event on the domain controller\nTranslate the Layer 7 information into Layer 3 information\nRecompile the firewall policy with the changes caused by the logon/logoff event\nInstall the policy on the firewall\n\nBy analyzing the previously defined 4 steps we can derive 4 crucial questions that will define\nthe architecture of the Identity based firewall system in details. The four questions that need to\nbe answered are the following:\n1. How can we know when someone logged to the domain and on which computer did\nhe logged in?\n2. How can we convert the Layer 7 data (username) into something easily filtered (IP\naddress)?\n3. How can we build a firewall policy that will be template like and that will support\nmultiple reconfigurations in a small timeframe?\n4. How can we create a readable policy for the firewall by using the policy template?\n\n\fThe next chapter will concentrate in giving answers to these questions and it will define the\nsystems architecture in detail.\nIn order to comply with the previous 4 steps we will need to introduce four components to the\nclassic firewall and extend it to an identity based firewall. The needed components are: a sensor,\na translator, a compiler and an installer component.\n\n6. IDENTITY BASED FIREWALL ARCHITECTURE IN DETAILS\nWe mentioned before that the key of defining the architecture for the Identity based firewall is\nto answer the questions that concern that system. This chapter will tend to answer those\nquestions in detail as well as give detailed information about the Identity based firewall\narchitecture and its components. The answer to the first question can be found in the Windows\nEvent Log that is generated on the domain controllers. These events are logged into the Security\nEvent Log of the Windows operating system. The information represented in these event logs is\nvery easily extracted since all the crucial data is written in a form of an event message. Login\nand Logoff events are represented with the following event IDs:\n-\n\n540 is the ID of the Login event [7]\n538 is the ID of the Logoff event [7]\n\nThe answer to the second question is in the Event Logs[20]. Namely, the event logs contain the\ninformation of the IP address that was used by the user to Login to the Windows Domain. By\nextracting the username and IP address from the Event Log we have the valid conversion of the\nLayer 7 information into a Layer 3 format. If the systems are non Microsoft Windows and the\nlogin authentication is not done by using the Microsoft Windows Active Directory, then those\nsystems can be also integrated in the Identity firewall. This is done by using the syslog\nfunctionality on the Unix systems in such way that all authentication data is sent in a form of a\nsyslog message[7][18] to the Identity firewall. The syslog messages will contain the username\nthat logged to the system and the IP address of the syslog message sender will be the Layer3\ninformation regarding that username[21]. By knowing the answers to the first two questions we\nintroduce a new component to the Identity Based firewall architecture which we will name\n\"IdentityAgent\". This Identity agent will have the role to read the Event Logs from the domain\ncontrollers, extract the data from the event logs and send all the relevant updates to another\ncomponent that will use that data to trigger some action. The IdentityAgent will read the Event\nLog data via the Windows Management Instrumentation \u2013 WMI[8]. The whole WMI concept\nenables us to create a fully agentless system, since all components will be on the identity\nfirewall. In this way we can read the events in real-time and we can send updates to the other\ncomponent in real-time. By using this methodology we introduce a new way of catching user\nlogins without having the need to install agent on all client computers.\nThe answer to the third question lies in the use of XML files to built policy templates. These\nXML files will hold user based meta policies. In the meta policies, the rules will be based upon\na domain username. In this way, every change of the user's IP address will result in compilation\nof the meta policies with the new changes that happened in the Domain. At this point we will\nintroduce a second component of the Identity Based firewall system. We will name this\ncomponent \"IdentityCompiler\". The primary function of this component will be to receive\nupdates from the first component and after receiving new updates, the IdentityCompiler will\nscan through the meta policy and make the appropriate changes for that user. After the changes\nare made, the IdentityCompiler will compile the meta policy in a firewall readable form. Since\nthe IdentityCompiler creates a firewall readable policy by following the compilation rules we\ncan conclude that the fourth question is also answered and that we can create a reliable method\nfor compilation. By now, we successfully implemented the event driven security paradigm [4]\nin our Identity based firewall architecture.\n\n\fOn the other hand, by using this way of handling the user traffic we create a very limited system\nthat can only handle authenticated traffic. In order to resolve this limitation, we adopted the\nsystem to allow also addition of layer 3 rules. By using this approach we can handle guest\naccess and access through mobile phones and tablets.\n\nFigure 1. Identity based firewall system architecture\n\n7. TESTING RESULTS\nIn the process of testing we tested the time needed for the user policy to become active. The\ntests were done with 10, 15, 20, 25 and 30 clients. Mainly, the tests were focused on measuring\nthe time needed for the new client detection and installation of the policy for that client. After\nwe collected the measures we calculated the average value for every solution. We calculated\nthat the average time for installation of a policy with a classical firewall solution is 120 seconds,\nwhere the agent based identity firewall solution had an average of 7 seconds. This measurement\nis a sum from the time needed for the user to log on the domain and the time needed for the\nlocal agent to send the update to the identity based firewall, since the agent has to be started\nunder the logged on user context. Our proposed solution had an average time of 5 seconds,\nbecause it detects the logged on user right away upon authentication on the domain. In the end,\nwe multiplied the average values with the number of clients used in the test assuming that all of\nthe events occurred at once and all of the policy installation is done one by one for every client.\nFigure 2 and Figure 3 represent the charts that we created from the tests.\n\n\fFigure 2. Charts that include the classic firewall solution in the tests\n\nFigure 3. Charts without the classic firewall\n\n8. ARCHITECTURE PROS AND CONS\nAs one of the key benefits of our proposed architecture is that there is no need of agents on the\nclient operating systems. In this way, the presented design minimizes the network overhead on\nall of the nodes and concentrates that overhead on single points, the domain controllers. In\ncomparison to other solutions[6], our architecture tends to trigger login or logoff updates only\nonce(when the event occurs), whereas other solutions send those updates periodically[20].\nOther benefit of this design is the ease of management. Other solutions add some administrative\neffort in management, since every computer has its own agent. Also, as a big benefit we can\npoint out the ease of troubleshooting and minimization of downtime, since agents that read the\nevent logs are located on the Identity firewall.\nAs a con to this solution we can point out that when the client is powered of by force and when\nthe domain controller doesn't receive a log off event, and then the policy isn't updated to do a\ncleanup of the installed policy.\nIt has to be mentioned that one con for all identity based firewalls is that they don't support\nmultiuser systems like Microsoft Terminal Services or Citrix, because that feature would require\nthat the user information is sent in every packet.\n\n\fTable 1 represents the comparison between our architecture and other solutions. It has to be\nnoted that Microsoft ISA introduces limited firewall filtering without agents (only filtering of\nweb traffic).\nTable 1. Comparison chart between the analyzed solutions and our architecture.\n\nL3, L4 filtering\nIdentity based\nfiltering\nwithout agents\nIdentity based\nfiltering with\nagents\nNetwork\noverhead\nMultiple OS\nSupport\n\nMicrosoft\nISA 2006\n\nNuFW\n\nCheckPoint\nProposed\nUserAuthority Architecture\n\n\uf0fc\n\uf0fc*\n\n\uf0fc\n\uf0fb\n\n\uf0fc\n\uf0fb\n\n\uf0fc\n\uf0fc\n\n\uf0fc\n\n\uf0fc\n\n\uf0fc\n\n\uf0fb\n\n\uf0fb\n\n\uf0fc\n\n\uf0fb\n\n\uf0fc\n\n\uf0fb\n\n\uf0fc\n\n\uf0fb\n\n\uf0fc\n\nCONCLUSION\nThe research presented in this paper develops an innovative approach for identity based firewall\narchitecture. Specifically, it presents an architecture that will enforce identity based firewall\nfiltering without the need of having an agent installed on every computer that participates in the\ncommunication with resources located behind the identity based firewall. Throughout a case\nstudy conducted on a set of users, the architecture can be proven as a very effective.\nThe research has several important contributions. First, the approach is simple and it uses\nexisting resources that exist in the infrastructure to do the job. Second, the core of the identity\nbased firewall is build upon open source technologies, which are extended to exploit existing\nproprietary technologies. Third, the architecture and its core are very flexible, and it can be\nextended with new components. On the other side, this approach minimizes the points of failure\nand pinpoints then on one place, the firewall itself. Finally, the biggest benefit is the\nminimization of the network overhead and minimization of the traffic cost that goes through the\nwire. By making this possible, the low overhead can be valued either as a direct or indirect\nbenefit. Overall, the presented architecture in this research proved that there are benefits with\nthe use of the agentless identity based firewall system. Moreover, it also proves that it is\npossible to implement the solutions for multiplatform environments.\n\nACKNOWLEDGEMENTS\nThe authors would like to thank the reviewers whose constructive critique greatly improved the\nquality of the paper.\n\nREFERENCES\n[1]\n\nAmon, C., Shinder, T., Carasik-Henmi, A.: The Best Damn Firewall Book Period, Syngress,\n2003\n\n[2]\n\nGizem, Aksahya & Ayese, Ozcan (2009) Coomunications & Networks, Network Books, ABC\nPublishers.\n\n[3]\n[4]\n\nNoonan, W., Dubrawsky, I.:Firewall Fundamentals, Cisco Press (2006)\nZwicky, E., Cooper, S., Chapman, D.:Building Internet Firewalls, O'Reilly Media Inc. (2000)\n\n\f[5]\nStojanovski, N., Gu\u0161ev, M.,:Event Driven Security, Conference for Informatics and Information\nTechnology, Bitola. (2010)\n[6]\nStojanovski, N., Gu\u0161ev, M.,:Analysis of Identity based firewall systems, ICEST, Ohrid. (2010)\n[7]\nwww.arcsight.com, Microsoft Windows Event Log\n[8]\nwww.msdn.com, Microsoft Windows API\n[9]\nBlank-Edelman, D.: Perl for System Administrator, O'Reilly (2000)\n[10]\nIngham K., Forrest S.: A History and Survey of Network Firewalls, 2002\n[11]\nHabtamu A.: An Overview of Firewall Technologies, 2000\n[12]\nAvolio, F.: Firewalls and Internet security, the second hundred (Internet) years. The Internet\nProtocol Journal 2, 2 (June), 2002 Feb 20.\n[13]\nLeblond E.: The identity-based firewall or Why using Netfilter is cool !, 2008\n[14]\nLeblond E., Deffontaines V., Tricaud S.: Identity-based firewalling, 2008\n[15]\n\nWiebelitz J., Piger S., Kunz C., Grimm C.: Transparent Identity-based Firewall Transition for\neScience, 2009\n\n[16]\n\nJ. Wiebelitz, C. Kunz, S. Piger, C. Grimm: TCP-AuthN: TCP Inline Authentication to Enhance\nNetwork Security in Grid Environments, 2009\n\n[17]\n\nJ. Wiebelitz, C. Kunz, S. Piger, C. Grimm: TCP-AuthN: An Approach to Dynamic Firewall\nOperation in Grid Environments, 2009\n\n[18]\n\nE. Nemeth, G. Snyder, S. Seebass and T. Hein: UNIX System Administration Handbook (3rd\nEdition), 2000\n\n[19]\n\nSection 6,\nhttp://www.section6.net/wiki/index.php/Setting_up_OpenLDAP_for_Unix_Authentication:\nSetting up OpenLDAP for Unix Authentication, 2005\n\n[20]\n\nS. Al-Fedaghi, F. Mahdi: Event Classification in Log Audit, International Journal of Network\nSecurity & Its Applications, 2010\n\n[21]\n\nM. Abid, S. Song, H. Moustafa, H Afifi: Integrating Identity-Based Cryptography in IMS\nService Authentication, International Journal of Network Security & Its Applications, 2009\n\n[22]\n\nU. Thakar, N. Dagdee, S. Varma: Pattern Analysis and Signature Extraction For Intrusion\nAttacks On Web Services, International Journal of Network Security & Its Applications, 2010\n\n\f"}