{"id": "http://arxiv.org/abs/1105.0545v4", "guidislink": true, "updated": "2013-01-08T08:15:30Z", "updated_parsed": [2013, 1, 8, 8, 15, 30, 1, 8, 0], "published": "2011-05-03T11:02:37Z", "published_parsed": [2011, 5, 3, 11, 2, 37, 1, 123, 0], "title": "On the Degree Distribution of Faulty Peer-to-Peer Overlays", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1105.2215%2C1105.3045%2C1105.1732%2C1105.1403%2C1105.3760%2C1105.5802%2C1105.2686%2C1105.0240%2C1105.2893%2C1105.3732%2C1105.0488%2C1105.0217%2C1105.0910%2C1105.2374%2C1105.1838%2C1105.2553%2C1105.1773%2C1105.3969%2C1105.5962%2C1105.5562%2C1105.1242%2C1105.2477%2C1105.1817%2C1105.0385%2C1105.2664%2C1105.0845%2C1105.0545%2C1105.5355%2C1105.0693%2C1105.1276%2C1105.0054%2C1105.3818%2C1105.4790%2C1105.6028%2C1105.4963%2C1105.3744%2C1105.4984%2C1105.2058%2C1105.2419%2C1105.0501%2C1105.6233%2C1105.1702%2C1105.0610%2C1105.4757%2C1105.4705%2C1105.4702%2C1105.5041%2C1105.3339%2C1105.6143%2C1105.3021%2C1105.4797%2C1105.3253%2C1105.3247%2C1105.1991%2C1105.4069%2C1105.4238%2C1105.2868%2C1105.1656%2C1105.1714%2C1105.0645%2C1105.3478%2C1105.3871%2C1105.2562%2C1105.3262%2C1105.0567%2C1105.0391%2C1105.2336%2C1105.5344%2C1105.2453%2C1105.5048%2C1105.0885%2C1105.2914%2C1105.3080%2C1105.2194%2C1105.1746%2C1105.0151%2C1105.3416%2C1105.3381%2C1105.5628%2C1105.1639%2C1105.3918%2C1105.4315%2C1105.5986%2C1105.1740%2C1105.2238%2C1105.2980%2C1105.5343%2C1105.3774%2C1105.2673%2C1105.1215%2C1105.4806%2C1105.2313%2C1105.4229%2C1105.0600%2C1105.0997%2C1105.3257%2C1105.2743%2C1105.6004%2C1105.2478%2C1105.3271%2C1105.0911&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "On the Degree Distribution of Faulty Peer-to-Peer Overlays"}, "summary": "This paper presents an analytical framework to model fault-tolerance in\nunstructured peer-to-peer overlays, represented as complex networks. We define\na distributed protocol peers execute for managing the overlay and reacting to\nnode faults. Based on the protocol, evolution equations are defined and\nmanipulated by resorting to generating functions. Obtained outcomes provide\ninsights on the nodes' degree probability distribution. From the study of the\ndegree distribution, it is possible to estimate other important metrics of the\npeer-to-peer overlay, such as the diameter of the network. We study different\nnetworks, characterized by three specific desired degree distributions, i.e.\nnets with nodes having a fixed desired degree, random graphs and scale-free\nnetworks. All these networks are assessed via the analytical tool and\nsimulation as well. Results show that the approach can be factually employed to\ndynamically tune the average attachment rate at peers so that they maintain\ntheir own desired degree and, in general, the desired network topology.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1105.2215%2C1105.3045%2C1105.1732%2C1105.1403%2C1105.3760%2C1105.5802%2C1105.2686%2C1105.0240%2C1105.2893%2C1105.3732%2C1105.0488%2C1105.0217%2C1105.0910%2C1105.2374%2C1105.1838%2C1105.2553%2C1105.1773%2C1105.3969%2C1105.5962%2C1105.5562%2C1105.1242%2C1105.2477%2C1105.1817%2C1105.0385%2C1105.2664%2C1105.0845%2C1105.0545%2C1105.5355%2C1105.0693%2C1105.1276%2C1105.0054%2C1105.3818%2C1105.4790%2C1105.6028%2C1105.4963%2C1105.3744%2C1105.4984%2C1105.2058%2C1105.2419%2C1105.0501%2C1105.6233%2C1105.1702%2C1105.0610%2C1105.4757%2C1105.4705%2C1105.4702%2C1105.5041%2C1105.3339%2C1105.6143%2C1105.3021%2C1105.4797%2C1105.3253%2C1105.3247%2C1105.1991%2C1105.4069%2C1105.4238%2C1105.2868%2C1105.1656%2C1105.1714%2C1105.0645%2C1105.3478%2C1105.3871%2C1105.2562%2C1105.3262%2C1105.0567%2C1105.0391%2C1105.2336%2C1105.5344%2C1105.2453%2C1105.5048%2C1105.0885%2C1105.2914%2C1105.3080%2C1105.2194%2C1105.1746%2C1105.0151%2C1105.3416%2C1105.3381%2C1105.5628%2C1105.1639%2C1105.3918%2C1105.4315%2C1105.5986%2C1105.1740%2C1105.2238%2C1105.2980%2C1105.5343%2C1105.3774%2C1105.2673%2C1105.1215%2C1105.4806%2C1105.2313%2C1105.4229%2C1105.0600%2C1105.0997%2C1105.3257%2C1105.2743%2C1105.6004%2C1105.2478%2C1105.3271%2C1105.0911&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "This paper presents an analytical framework to model fault-tolerance in\nunstructured peer-to-peer overlays, represented as complex networks. We define\na distributed protocol peers execute for managing the overlay and reacting to\nnode faults. Based on the protocol, evolution equations are defined and\nmanipulated by resorting to generating functions. Obtained outcomes provide\ninsights on the nodes' degree probability distribution. From the study of the\ndegree distribution, it is possible to estimate other important metrics of the\npeer-to-peer overlay, such as the diameter of the network. We study different\nnetworks, characterized by three specific desired degree distributions, i.e.\nnets with nodes having a fixed desired degree, random graphs and scale-free\nnetworks. All these networks are assessed via the analytical tool and\nsimulation as well. Results show that the approach can be factually employed to\ndynamically tune the average attachment rate at peers so that they maintain\ntheir own desired degree and, in general, the desired network topology."}, "authors": ["Stefano Ferretti"], "author_detail": {"name": "Stefano Ferretti"}, "author": "Stefano Ferretti", "arxiv_comment": "A revised version is published in ICST Transactions on Complex\n  Systems, ICST, Vol.12, 1-20, 2012,\n  http://eudl.eu/doi/10.4108/trans.comsys.2012.10-12.e2", "links": [{"href": "http://arxiv.org/abs/1105.0545v4", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1105.0545v4", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.DC", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.DC", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1105.0545v4", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1105.0545v4", "journal_reference": null, "doi": null, "fulltext": "arXiv:1105.0545v4 [cs.DC] 8 Jan 2013\n\nOn the Degree Distribution of Faulty\nPeer-to-Peer Overlays\nStefano Ferretti\nDepartment of Computer Science, University of Bologna\nMura Anteo Zamboni 4, 40127, Bologna, Italy\nsferrett@cs.unibo.it\nAbstract\nThis paper presents an analytical framework to model fault-tolerance\nin unstructured peer-to-peer overlays, represented as complex networks.\nWe define a distributed protocol peers execute for managing the overlay\nand reacting to node faults. Based on the protocol, evolution equations are\ndefined and manipulated by resorting to generating functions. Obtained\noutcomes provide insights on the nodes' degree probability distribution.\nFrom the study of the degree distribution, it is possible to estimate other\nimportant metrics of the peer-to-peer overlay, such as the diameter of\nthe network. We study different networks, characterized by three specific\ndesired degree distributions, i.e. nets with nodes having a fixed desired\ndegree, random graphs and scale-free networks. All these networks are\nassessed via the analytical tool and simulation as well. Results show that\nthe approach can be factually employed to dynamically tune the average\nattachment rate at peers so that they maintain their own desired degree\nand, in general, the desired network topology.\n\n1\n\nIntroduction\n\nThe mechanics of complex networks represent an insightful research domain for\nthose that try to understand the behavior and the characteristics of a network by\nlooking at its general (statistical) properties. Basically, the focus concerns the\norganization and the interaction among multiple nodes in a dynamical system\n[7, 13, 36]. The theory and methods of analysis can be applied in the same\nfashion to existing real and abstract networks belonging to several domains,\ne.g. biology, sociology, physics, computer science [32, 10, 29, 19, 38]. Examples\nof statistical properties of common interest are the probability that nodes have\na certain degree (i.e. the number of neighbours connected to a given node), the\nprobability that a node has links with the friends of its friends (which allows\nto understand how much the network is organized in clusters), the average\nnumber of second (third, etc.) neighbours (which provides insights on the size\nof the network component of a given node), the network diameter, etc. All these\nmetrics reveal some features of a given network, such as its ability to disseminate\ninformation and/or propagate viruses, its resilience to nodes' departure, its\nconnectivity [36, 4, 35, 12, 31, 44].\n\n1\n\n\fAs for computer networks, modeling peer-to-peer overlays as complex nets\nallows to understand the level of reliability, scalability and tolerance to faults\nof these overlays. This is basically the purpose of this paper. Specifically, we\nprovide a framework to model self-organizing, unstructured peer-to-peer architectures with periodical faults. Nodes of the network simply correspond to\npeers, while edges represent a communication connection between two peers\n[5, 11, 27, 20, 28, 37, 42, 43, 45]. (Since nodes of the modeled network represent peers in the distributed system, hereinafter the terms node and peer will\nbe used as synonyms.) In general, a peer-to-peer network is characterized by\nspecifying: i) the system model, i.e. the environment of execution of the peers,\ntogether with the types of faults they are subject to; and ii) the distributed\ncommunication protocol, i.e. how peers connect and interact with other nodes\nin the net.\nThe peer-to-peer network is unstructured, in the sense that the overlay is\nconstructed based on some general desired topology that does not depend on\nthe contents being disseminated through the net [18]. Rather, local choices are\nmade by each peer to manage its connections. This may lead to a non-optimal\norganization of the overlay, from the view-point of the content distribution.\nHowever, the costs for managing such overlays are very limited. Thus, unstructured systems may have better performances in highly dynamic environments\n[41].\nThe system is composed of a set of peers that may fail during the evolution\nof the network. Node failures are modeled as random variables characterized\nby an average failure rate, as usual. A node failure does not cause the complete\nremoval of the peer from the network. Rather, the peer loses all its links.\nBased on the protocol we define, peers react to these disconnections by actively\ncreating novel links with their non-neighbours, trying to maintain a specific\ndesired degree. As mentioned, the overlay is unstructured; thus, it is assumed\nthat a self-organizing mechanism is employed to govern the network dynamics.\nHence, local decisions are taken by peers to manage disconnections, without the\nintervention of a central entity [27]. The procedure related to the discovery of a\nnon-neighbour and the creation of a novel edge is periodically executed, based\non another rate.\nOnce having defined the system model and the distributed protocol peers\nexecute, we provide a mathematical analysis on the evolution of the nodes'\ndegree. This is accomplished by introducing an infinite set of differential equations. Then, these equations are turned into a single differential equation by\nexploiting generating functions. Its solution allows to calculate the nodes' degree\nprobability.\nThe novelty of this proposal is essentially due to the dynamic behavior of\npeers. Classic works on complex networks usually concentrate on node removals\nwithout the possibility to resort to some counter-mechanism to be executed,\ncorresponding to a dynamic and continuous reconfiguration of the network\n[36, 10, 4, 35]. Indeed, a \"passive\" behavior may perfectly model a viral propagation of diseases in human contact nets, denial of services in computer nets, and\ngeneral sudden attacks in a network, which do not evolve during the period of\nthe attack (or rather, the system evolution proceeds at a pace significantly slower\nthan the attack). Conversely, this kind of approaches cannot model the typical\ninteractions of self-organizing peer-to-peer architectures, commonly exploited in\nunstructured overlay management techniques, with peers being programmed to\n2\n\n\fdynamically react to (or prevent) possible node faults. The framework provided\nin this paper allows to determine the degree distribution at peers in presence\nof node faults (and link creation) which occur during the whole system evolution. Concurrently, all the reasoning related to complex networks theory can be\napplied.\nWe compare the mathematical model with results obtained from a simulative assessment that mimics the corresponding distributed protocol. We vary\nthe nodes' desired degree distribution. Specifically, we study three classic (desired) network topologies: i) uniform networks where all nodes have the same\ndesired degree, ii) random graphs, iii) scale-free networks. Results show that the\ntwo different (theoretical and simulative) approaches provide similar outcomes,\nhence confirming the correctness of the proposal. Not only, they provide insights\non the degree that peers succeed to maintain in presence of node faults. In fact,\nbeing the network continuously affected by node faults, and being nodes able\nto create novel links based on local (self-regulated) choices, it turns out that\npeers can maintain their own desired degree only when a high attachment rate\nis utilized (w.r.t. the failure rate). Once the degree distribution has been calculated, given the system settings, it is possible to estimate the average number of\nsecond (third, etc.) neighbours, as well as the average size of the component a\npeer is connected to. In particular, we estimate the diameter of the considered\nnetworks.\nOf course, ensuring that peers have an actual degree equal (or similar) to\ntheir desired degree is mandatory to guarantee that the structure of the peer-topeer network corresponds to its desired topology. Hence, the provided analytical\ntool can be factually exploited at peers to dynamically identifying a proper attachment rate they might maintain during the distributed interactions, based on\nthe experienced node failure rate. Simple algorithms may be thus implemented,\nthat allow to adapt the attachment rate.\nThe remainder of the paper is organized as follows. Section 2 presents the\ndistributed protocol we consider. Section 3 describes the analytical modeling\nof such a protocol. In Section 4, results coming from a simulation study are\noutlined. These outcomes are compared with the numerical results obtained\nthrough the presented model. Finally, Section 5 provides some concluding remarks.\n\n2\n\nThe Distributed Protocol\n\nConsider a distributed system composed of a set of peers \u03a0. Communication\namong peers occurs through an overlay network. The system is faulty, in the\nsense that nodes may fail during their interaction with other ones. When a\nnode failure happens, the peer loses all its links with its neighbours. After the\nfailure, the peer is instantaneously able to create novel link connections, i.e. the\ntime needed by the peer to restart its local system and re-join the network is\nassumed to be negligible.\nIn the model, we consider node faults, rather that link faults, since in an\nunstructured peer-to-peer system it is more likely that a peer fails, rather than\na single edge of the graph permanently fails. A node may fail because of a\nvoluntarily action taken by the user that decides to leave the network, or when\nthe peer remains isolated from the rest of the network, due for instance to some\n\n3\n\n\fAlgorithm 1 Distributed Protocol: Attachment Process\nvars: actualDegree: current degree of the node executing the protocol\ndd: desired degree of the node executing the protocol\nprecondition: actualDegree < dd\nfound = false;\nwhile (\u00ac found) do\np = NonNeighbourDiscovery();\nsendLinkCreationRequest (p);\nans = receiveAnswer ();\nif (ans == \"ok\") then\nfound = true;\ncreateNovelLink (p);\nactualDegree ++;\nend if\nend while\nwaitRandomTime();\n\ntechnical problems which prevent that node to communicate with its Internet\nService Provider, or when it loses its network coverage (hence losing all its connections with the rest of the world). Conversely, while still possible the removal\nof a single link in a peer-to-peer overlay network (with both peers remaining active) should be less frequent. Of course, TCP/UDP connections among\ntwo hosts, representing the transport-layer implementation of a link among two\npeers, may be interrupted due to several reasons. However, from a networking\npoint of view, several techniques can be exploited such as, for instance, sessionlayer protocols, which augment the reliability of an end-to-end communication\n[21, 24].\nDue to the dynamic and evolving nature of the network, we enable peers\nto create novel links with non-neighbours; this is accomplished through a local,\nrandom choice taken by the peer. Peers have a specific chosen degree and\ntry to maintain it during the system evolution, in spite of nodes' faults. In\nsubstance, nodes select a desired degree (dd), whose value might depend on the\nspecific characteristics of the node, e.g. computational and network capacities,\nrole of the node in the network. When modeling the network, to characterize its\ndesired topology, dd values will be assigned to nodes by utilizing some statistical\ndistribution. As an example, for the sake of load balancing, peers' dds could be\nforced to assume values within a limited range (or a single value). Instead, the\nuse of other desired degree distributions, such as power laws (typical of scale-free\nnets), would mimic hybrid multi-level peer-to-peer networks with the presence\nof hubs/super-peers.\nBased on their dd, during the system evolution peers that have an actual\ndegree lower than such a value periodically start a discovery process to find a\nnovel neighbour. We assume that when a peer asks another one to establish a\nnovel link in the overlay, the latter refuses it only if its actual degree is equal to\nits dd. Otherwise, it accepts the link creation.\nThe distributed protocol discussed above is summarized in Algorithms 1-2.\n\n4\n\n\fAlgorithm 2 Distributed Protocol: Upon Request for a Novel Link\nvars: actualDegree: current degree of the node executing the protocol\ndd: desired degree of the node executing the protocol\nprecondition: message received for link creation\np = sendingPeer ();\nif (actualDegree < dd) then\nsendPositiveAnswer (p);\ncreateNovelLink (p);\nactualDegree ++;\nelse\nsendNegativeAnswer (p);\nend if\nBasically, when the actual degree of a node is lower than dd (the precondition in Algorithm 1), a discovery process is activated to find novel neighbours.\nAlgorithm 1 does not report a specific implementation of the discovery of a nonneighbour, since several alternatives are possible, not strictly dependent on the\nprotocol under consideration. We just basically assume that the selection of the\nnew neighbour is accomplished by randomly picking up a peer, as made in most\nunstructured peer-to-peer overlay networks [25, 26, 30, 34, 40]. To find the novel\nnode, a distributed oracle (or some approximation of it, obtained through local\ninteractions) is employed which provides the complete list of active peers. Once\na novel peer has been found, a request is sent to that peer. If a positive answer\nis received, a novel link is created. Otherwise, the node looks for another peer.\nNote that in the pseudo-code a random sleep has been inserted, to state that\nsuch procedure should be periodically executed while the node seeks to reach\nan actual degree equal to its dd.\nAlgorithm 2 is executed upon request for a novel link from a non-neighbour.\nThe behavior is quite simple, if the receiving node has an actual degree lower\nthan its dd, it accepts the request and a novel link is created. Otherwise, it\nrefuses the request.\n\n3\n\nModeling the System as a Complex Network\n\nIn this section, we show that the presented system can be modeled as a complex\nnetwork, through the use of differential equations and generating functions.\nNodes' failures are modeled as random variables characterized by an average\nrate \u03c6. Moreover, we assume that the rate of creation of a novel link is controlled\nby the parameter \u03b1. It is the difference between \u03b1 and \u03c6 that determines how\npeers react to failures. The attachment and failure rates \u03b1, \u03c6 do not depend\non any specific characteristics of the peers (e.g. node degree). This means that\nthe model does not consider any form of preferential attachment, which would\nprivilege nodes with higher (lower) degrees [36], neither that nodes with higher\n(lower) degrees are likely to fail, i.e. those nodes that have much (less) workload\nin the communication network.\n\n5\n\n\f3.1\n\nPreliminaries and Methodology\n\nHere, a general overview is provided on the methodology employed to model the\ndistributed protocol. The idea is to define the evolution equations describing\nhow the system evolves in time. In practice, for each possible degree, a differential equation is defined which characterizes the probability that a peer, having\nsuch a degree, may change its state. The model will be composed of an infinite\nset of simultaneous linear differential equations (one for each possible degree).\nThese equations will be turned into a single differential equation by exploiting\ngenerating functions.\nP\ni\nA probability generating function is of the form F (x, t) =\ni\u22650 Di (t)x ,\nwhere Di (t) is the set of coefficients composing the power series (in our case,\nthese coefficients are the probabilities of having a certain degree i, at time t),\nwhile x is a dummy variable, employed for pure algebraic purposes. F (x, t)\ncaptures all the information present in the original sequence Di (t), as each of\nthese probabilities can be recovered by simple differentiation:\nDi (t) = [xi ]F =\n\n1 \u2202iF\ni! \u2202xi\n\nx=0\n\n.\n\nThe notation [xi ]F represents the coefficient associated to the term xi in the\npower series.\nIn general, many properties can be obtained by evaluating some manipulation of the generating function, at x = 1. For instance, having probabilities as\ncoefficients of the power series, a check to perform is to assess whether the sum\nof all coefficients in F equals 1, i.e F (1, t) = 1. Moreover, the average of the coefficients composing the generating function can be measured by evaluating\nthe\nP\npartial derivative with respect to x, Fx = \u2202F\niD\n(t).\nat\nx\n=\n1,\ni.e.\nF\n(1,\nt)\n=\ni\nx\ni\n\u2202x\nOther useful algebraic properties, which will be used in the rest of the paper,\nand easy to verify, are the following ones\nX\nX\nX\n(i + 1)Di+1 (t)xi = Fx\niDi (t)xi = xFx ,\nDi\u22121 (t)xi = xF.\ni\u22650\n\ni\u22650\n\ni\u22650\n\n(1)\n\u0002\n\u0002\nThen, rules of power series state that if xi ]A = ai , xi ]B = bi\ni\nX\n\u0002\nA\nxi ]\naj ,\n=\n1 \u2212 x j=0\n\n\u0002\n\nxi ]A* B =\n\ni\nX\n\naj bi\u2212j .\n\n(2)\n\nj=0\n\nThe use of generating functions will hence allow to consider a single differential equation which comprises all the evolution equations of the model. From\nits solution it will be possible to extract the elements of the power series, i.e. the\ndegree distribution.\nIn the following, we will also consider the system in its steady state, i.e. in\nthe limit t \u2192 \u221e. This in fact enables to calculate the probability that a node\nhas a given degree in the stationary state. Moreover, it avoids the presence of\nthe partial derivative of the generating function with respect to the time variable\nt, hence simplifying the mathematical analysis and the related discussion.\n\n6\n\n\f3.2\n\nThe Protocol in Differential Equations\n\nLet Di,j (t) = P (deg = i|dd = j, at time t) denote the probability that a given\nnode at time t has degree equal to i, knowing that its desired degree is j. Note\nthat, following the protocol, peers with an actual degree equal to their desired\ndegree do not accept novel links; hence, a probability higher than 0 is possible\nonly when j \u2265 i. In general, the evolution of the degree of a given peer can be\nmodeled, using Di,j (t), as\n\uf8f1\n\uf8f4\n\uf8f4 \u03c6(i + 1)Di+1,j (t) + \u03c6\u03b4i,0 + 2\u03b1Di\u22121,j (t)+\n\uf8f4\n\uf8f4\n\u2212[\u03c6(i + 1) + 2\u03b1]Di,j (t)\ni<j\n\uf8f4\n\uf8f4\n\u2202Di,j (t) \uf8f2\n(3)\n=\n\u03c6\u03b4i,0 + 2\u03b1Di\u22121,i (t) + \u2212\u03c6(i + 1)Di,i (t)\ni=j\n\uf8f4\n\u2202t\n\uf8f4\n\uf8f4\n\uf8f4\n\uf8f4\n\uf8f4\n\uf8f3\n0\ni>j\n\nIn (3), a distinction is made between three cases, depending on the values of\ni and j. The case i < j corresponds to the case when the node has a degree\nlower than its desired degree. Hence, the first term on the right of the equation\ncorresponds to the probability that the considered peer has degree equal to i + 1\nand one of the i + 1 neighbours fails. As a consequence, the node passes from a\ndegree equal to i+1 to i. The second term considers the probability that the peer\nfails, thus increasing the number of nodes in the network with degree equal to 0.\nThe third term accounts for the probability that the peer has degree i\u22121, and it\neither decides to create a novel connection with a non-neighbour, thus increasing\nits degree of one novel edge, or also that another peer asks the considered one\nto become neighbours. Note that in this case we do not insert any limit on the\nnumber of non-neighbours, assuming that the total number of nodes is high (or\ntends to \u221e); such an assumption is quite common in complex networks theory\n[36]. The remaining terms have the same meaning of the preceding ones, but\naccount for those cases when the node has degree i, and itself or one of its i\nneighbours fail (hence, its degree downgrades to 0 or i \u2212 1, respectively), or\nwhen a new edge is created between the considered peer and another one, and\nthe peer already has i neighbours (hence, its degree upgrades to i + 1). The\ncase i = j considers only those transitions discussed above that correspond to\ndegrees equal to i or i \u2212 1, avoiding the probability of having a transition from\n(to) a degree equal to i + 1 > j (again, not possible). As previously stated, the\ncase i > j (i.e. an actual degree higher than the desired degree) is not possible\ndue to the protocol executed by peers; hence, the probability is 0. As a final\nremark, in (3) it is assumed that the probability that two transitions occur\nsimultaneously is negligible, as usual.\nAs mentioned, it might be interesting to consider the system in its steady\nstate, assuming the existence of the limit Di,j = limt\u2192\u221e Di,j (t), which implies that the variation on the probability to have a certain degree goes to 0,\n\u2202Di,j (t)\n= 0. Equation (3) thus becomes\ni.e.\n\u2202t\n\u03c6(i + 1)Di,i = \u03c6\u03b4i,0 + 2\u03b1Di\u22121,i\n\ni=j\n\n[\u03c6(i + 1) + 2\u03b1]Di,j = \u03c6(i + 1)Di+1,j + \u03c6\u03b4i,0 + 2\u03b1Di\u22121,j\n\n(4)\ni<j\n\n(5)\n\nTo solve these equations using generating functions, consider for the moment\nthe auxiliary system of equations obtained by ignoring the limit imposed by the\n7\n\n\fdesired degree. Let hence use different coefficients D\u0302i,j (it will be possible to\nderive Di,j , once having determined D\u0302i,j ). The equations to manage are\n[\u03c6(i + 1) + 2\u03b1]D\u0302i,j = \u03c6(i + 1)D\u0302i+1,j + \u03c6\u03b4i,0 + 2\u03b1D\u0302i\u22121,j .\n\n(6)\n\nThere are two indexes associated to coefficients D\u0302i,j , i.e. the actual and the\ndesired degree of a given node. Therefore, we employ a 2-variable generating\nfunction\nX\nF (x, y) =\nD\u0302i,j xi y j ,\ni,j\u22650\n\nwhere x controls the actual degree of the peer, while y controls the desired\ndegree of the node.\nNow, multiply (6) by xi and y j and sum over all i, j \u2265 0. The result is that\nthe infinite set of simultaneous differential equations is turned into a single,\nnovel differential equation for the generating function F ,\n\u03c6(x \u2212 1)Fx + [\u03c6 \u2212 2\u03b1(x \u2212 1)]F =\n\n\u03c6\n.\n1\u2212y\n\n(7)\n\nSuch an equation is obtained\nby exploiting properties of generating functions\nP\n1\n(1) and observing that i,j\u22650 \u03b4i,0 xi y j = 1\u2212y\n. As mentioned, Ft is not present\nsince we are considering the system directly in the steady state. It is possible\nto verify that a solution of this differential equation is\n2\u03b1x\n\nF (x, y)\n\n=\n\nF0 e \u03c6\n\u03c6\n,\n\u2212\n2\u03b1(1 \u2212 x)(1 \u2212 y)\n1\u2212x\n\n(8)\n\nwhere F0 is an initial function to be determined, based on the boundary conditions.\n\n3.3\n\nDegree Probability\n\nThe obtained function F is an unfortunate one, since it is not defined for x = 1,\nand we already mentioned that many properties might have been obtained by\nevaluating some manipulation of F measured at x = 1. However, given (8),\nthe elements composing the generating function can be extracted by employing\nclassic results of power series. In particular,\nP we may first assume that F0 can\nbe expanded in power series, i.e. F0 (y) = j\u22650 cj y j . Then, observe that\n\u03c6\n\u03c6 X i j\nxy ,\n=\n2\u03b1(1 \u2212 x)(1 \u2212 y)\n2\u03b1 i,j\nand, due to the mentioned rules (2) of power series, we have\n2\u03b1x\n\nX\nX \u0010 2\u03b1 \u0011\nF0 e \u03c6\n=\ncj y j\nei\nxi ,\n1\u2212x\n\u03c6\nj\u22650\n\ni\u22650\n\nPn\nk\nwhere en (r) is the exponential sum function en (r) = k=0 rk! . By combining\nthese results, a general formula is obtained for the elements of the auxiliary\nsystem, which is\n\u0010 2\u03b1 \u0011\n\u03c6\nD\u0302i,j = [xi yj ]F =\n.\n(9)\n\u2212 cj e i\n2\u03b1\n\u03c6\n8\n\n\fIt is now possible to calculate Di.j from D\u0302i,j , by determining coefficients\ncj in (9), such that Di,j = D\u0302i,j when i \u2264 j, and also in order to satisfy the\nboundary equation (4), considering the case i = j. In particular, when i = j,\ncomparison of equations (4) and (6), shows that if Di,i = D\u0302i,i is true, then it\nmust be\n2\u03b1D\u0302i,i = \u03c6(i + 1)D\u0302i+1,i .\nFrom this last equation, coefficients ci are determined,\nci =\n\n\u03c6\n2\u03b1\n\n\u03c6(i + 1) \u2212 2\u03b1\n\u0010 \u0011i+1 .\n\u0010 \u0011\n\u03c6 2\u03b1\n+\n[\u03c6(i + 1) \u2212 2\u03b1]ei 2\u03b1\n\u03c6\ni!\n\u03c6\n\nThus,\nDi,j =\n\n\u0010 2\u03b1 \u0011\n\u03c6\n.\n\u2212 cj e i\n2\u03b1\n\u03c6\n\n(10)\n\nNow, Di,j represents the probability that a node has an actual degree equal\nto i, knowing that its desired degree is j. To find the probability Di that a node\nhas degree i, it is thus sufficient to employ the formula\nX\nX\nDi,j P (dd = j),\nP (deg = i|dd = j)P (dd = j) =\nDi =\nj\n\nj\n\nonce having specified a desired degree distribution P (dd = j), j > 0, during the\ndesign of the peer-to-peer system.\n\n3.4\n\nNodes at Distance m, Network Diameter\n\nOnce having obtained a degree probability distribution for the considered network, interesting measures to calculate are the mean number of first, second\nneighbours, and generally the number of neighbours at distance m from a given\nchosen peer. These metrics have in fact a great importance to understand how,\nand how fast, the network is able to disseminate information in a peer-to-peer\nnetwork.\nOf course, having the degree probability distribution, the average number\nof first neighbours\nP z1 of a given peer, i.e. the mean degree, can be calculated\nas z1 = hki =\nk kDk . Then, an important result is that if the network\nexhibits a small clustering, the probability that one of the second neighbours of\na peer is also a first neighbour of it, is negligible in (very) large networks [35].\nThis allows to easily calculate the mean number of second neighbours as z2 =\nP\n2\nk (k \u2212 1)kDk = hk i \u2212 hki. In general, the number of neighbours at distance\nm, can be estimated as zm = (z2 /z1 )m\u22121 z1 . Moreover, when z2 > z1 the net\nexhibits a giant component which, roughly speaking, connects the majority of\nnodes in the network (the reader may refer to [35] for a complete discussion).\nA method to construct a network with small clustering, regardless of the\ndesired degree distribution, is as follows. For each node i in the network, assign\nits desired degree ddi , following a desired degree distribution. Then add to it ddi\nstubs, representing the end of the links it would like to maintain. Finally, create\nlinks by randomly connecting stubs of different nodes. This is the approach\nwe adopt to create and simulate networks with different desired topologies (as\n9\n\n\fdiscussed in the next section). Using these networks, it is hence easy to calculate\nzm values. The reader might argue that these nets do not represent \"real\"\nexisting peer-to-peer systems. Indeed, one might think at several examples of\npeer-to-peer architectures which do have clusters. In such a case, the obtained\nresults represent upper bounds of the real estimations of zm .\nIn any case, when z2 /z1 \u226b 1, there is an average distance l representing the\nnumber of hops needed to reach a node, starting from another one [35]. Put in\nother words, the number of nodes reachable within l hops is almost the total\nnumber of nodes in the network |\u03a0|; hence we have\n|\u03a0| \u2243 zl =\n\n\u0010 z \u0011l\u22121\n2\n\nz1\n\nz1 \u21d2 l \u2243\n\nlog(|\u03a0|/z1 )\n+ 1.\nlog(z2 /z1 )\n\n(11)\n\nIn [35] it is argued that based on empirical results, estimations obtained using\nthis last formula are close to correct measurements for several real networks.\nHence, we will use (11) in Section 4, to have an estimation of the diameter of\nour considered peer-to-peer overlays.\n\n4\n\nExperimental Assessment\n\nThis section presents an assessment performed to validate the model discussed\nin the previous section and evaluate the ability of the outlined peer-to-peer system to cope with node faults. A comparison is performed between the analytical\nmodel and results obtained through a simulation of the distributed protocol. As\nshown in the reminder of the section, the two approaches provide very similar\noutcomes. The employed approaches are very different, being the former purely\nanalytic while the latter a simulator that mimics the distributed protocol executed by a number of peers. Hence, the similarity on the obtained results\nconfirms that the final equation of the mathematical model can be easily employed to characterize the fault-tolerance and thus the reliability of a system\nhaving a defined desired topology.\nAs to the desired degree distribution, we consider three different distributions\nand vary their related parameters. Namely, the three considered scenarios are:\ni) a fixed desired degree distribution, which would produce a uniform graph\nwith all nodes having the same number of links; ii) a classic random graph\nwhere nodes are connected with others with a certain probability [35]; iii) a\npower law distribution, which would create a scale-free network [7, 36, 3, 15].\n\n4.1\n\nOn the Simulator\n\nA discrete-event simulator has been built to model the defined distributed protocol. It has been implemented in C code, by exploiting the GNU Scientific\nLibrary (GSL), a library that provides implementation of several mathematical\nroutines for numerical and statistical analysis, such as pseudo-random generators [1]. The simulator provides the possibility of generating a varying number\nof nodes. During the initialization phase, a random network is created based on\nthe chosen desired degree distribution. Different techniques can be employed to\ncreate such a random network [35, 15, 8]. As already discussed in Section 3.4,\nin this case once having assigned a specific desired degree to each node, based\non the specific desired distribution, a random mapping is made so that links\n10\n\n\fare created until each node has reached its own desired degree. Hence, at the\nbeginning of the evolution nodes already have the number of links they would\nlike to maintain (this generally affects only the transient part of the simulation).\nThe simulator creates a network with a fixed number of nodes. This eases\nthe measurement of the degree nodes have in time, without the need to consider\nnovel nodes that join the network during the execution of the protocol. Hence,\nonce a peer fails, it is not removed from the network; rather, all its links are\nremoved. From that moment, the node will try to create novel links with novel\npeers, searching to reach its desired degree.\nAfter the network initialization phase, the evolution of the network starts.\nNodes' failures and the discovery of other nodes for the creation of novel links\nhave been implemented as Poisson processes, whose rates are regulated by the\nparameters \u03b1 and \u03c6, respectively. The shown results represent the status of\nthe system after a specified simulation time. The length of the simulation was\n104 simulation steps. When not differently stated, the number of nodes was set\nequal to 1000. For each specific configuration, we ran 30 different experiments.\nShown outcomes correspond to average results.\n\n4.2\n\nDegree Distribution of Fixed Desired Degree Networks\n\nThe first type of generated networks was based on a fixed dd, i.e. peers have the\nsame value of desired degree dd = n. Forcing peers to have the same desired\ndegree dd allows to model those classic scenarios in peer-to-peer environments\nwhere the software running on peers is configured to have a given number of\nlinks in the overlay, i.e. dd. This is quite common in real peer-to-peer systems\nand it is usually accomplished for load balancing purposes [43].\nThe model restricts the event space to the case when all nodes' desired degree\nis constant, dd = n; an obvious consequence is that Di,j = 0, j 6= n. Moreover,\ndue to the distributed protocol, Di,j = P\n0, i \u2265 j. Hence, the sum of all the values\nof Di,n when i is varied, restricts to\ni\u2264n Di,n = P (deg = i|dd = n) = 1.\nIn this case, we can hence simply consider in the model the values of Di,n =\nP (deg = i|dd = n), for a fixed n.\nFigures 1-2 show the probability that a given node has a certain degree, based\non the parameters \u03b1, \u03c6. All figures report both the node degree probability itself,\nas well as the cumulative probability, i.e. the probability that a node has a degree\nless or equal to the considered value. For these two metrics, two measurements\nare reported, obtained by using Equation (10) and through simulation. We\nconcentrate on two different types of networks, corresponding to two desired\ndegree values, i.e. dd = 30 (Figure 1) and dd = 100 (Figure 2). As shown below,\nthe two networks have similar behaviors for the selected values of the rates \u03b1, \u03c6;\nthe same holds for other similar dds.\nBy looking at figures, a first consideration is that similar results are obtained\nusing simulation and the mathematical model. Then, very different outcomes\nare measured, depending on \u03b1, \u03c6 values. In particular, when the value of the\nfailure rate \u03c6 is higher than attachment rate \u03b1, in the steady state only low\ndegree values have a probability significantly higher than 0. This can be appreciated by looking at the first chart of Figures 1-2, where \u03b1 = 0.1, \u03c6 = 0.2. In\nboth cases, degree values that take some non-negligible probabilities are those\nthat range in the interval 0 \u2212 6. The cumulative probabilities, in the considered\nscenarios, reach values near to 1 at very low values. This basically means that\n11\n\n\fFixed dd, \u03b1 = 0.1, \u03c6 = 0.2, dd = 30\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\nProbability\n\n0.8\n\nProbability\n\nFixed dd, \u03b1 = 0.8, \u03c6 = 0.1, dd = 30\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n0.4\n0.2\n\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n0\n\n5\n\n10\n\nDegree\nFixed dd, \u03b1 = 0.5, \u03c6 = 0.01, dd = 30\n1\n\n25\n\n30\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n0.8\n\n0.7\n\nProbability\n\nProbability\n\n0.8\n\n20\n\nFixed dd, \u03b1 = 0.5, \u03c6 = 0.001, dd = 30\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n\n15\n\nDegree\n\n0.6\n0.5\n0.4\n\n0.7\n0.6\n0.5\n0.4\n\n0.3\n\n0.3\n\n0.2\n\n0.2\n\n0.1\n\n0.1\n\n0\n\n0\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n0\n\nDegree\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\nDegree\n\nFigure 1: Degree probability and cumulative degree probability; results obtained\nthrough simulation (Sim) and the mathematical modeling (Th); \u03b1 = 0.1, \u03c6 =\n0.2, dd = 30\nin the steady state almost all peers tend to have experienced some failures and\nthey do not succeed in maintaining the desired network topology. As mentioned\nbefore, our assumption is that peers instantaneously come back in the system\nand try to create some novel links, yet without being able to gain some noticeable degree. This is due to the low value of \u03b1. Moreover, since non negligible\nvalues are very well below the considered desired degrees, the obtained charts\nreported in Figures 1 and 2 are mostly equal (but they are indeed slightly different), since the dd value does not act as a bound for the link creation. These\nfirst discussed results demonstrate that peers must be able to react to changing\nconditions of the system and self-organize. In fact, \u03b1 can be interpreted as a\nbasic parameter that regulates how a peer is active in the network.\nThings start to change when \u03b1 takes values higher than \u03c6. These settings\nmimic those situations according to which peers actively create links, more\nrapidly than failure rates. The second charts in Figures 1-2 show results when\n\u03b1 = 0.8, while keeping \u03c6 equal to 0.1, lower than \u03b1. In this case, non-negligible\ndegree probabilities may be observed for degree values higher than those obtained before, yet still without reaching the desired degree (this is more evident\nwhen dd = 100). It may be observed that, in this particular scenario, results\nfrom the simulation and the mathematical modeling are not perfectly identical, but slight differences can be appreciated. In substance, simulations show\nthat nodes tend to have a lower degree than that predicted by the mathematical modeling. Nevertheless, obtained results are well below the nodes' desired\ndegree.\nResults completely change when \u03c6 is selected quite below the value of \u03b1. In\nthese scenarios, in the steady state the probability that a node has a certain\ndegree is mostly uniform for all degrees in the range between 0 and the nodes'\n\n12\n\n\fFixed dd, \u03b1 = 0.1, \u03c6 = 0.2, dd = 100\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\nProbability\n\n0.8\n\nProbability\n\nFixed dd, \u03b1 = 0.8, \u03c6 = 0.1, dd = 100\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n0.4\n0.2\n\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n2\n\n4\n\n6\n\n8\n\n10\n\n0\n\n5\n\n10\n\n15\n\nDegree\nFixed dd, \u03b1 = 0.5, \u03c6 = 0.01, dd = 100\n1\n\n30\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n0.8\n\nProbability\n\nProbability\n\n25\n\nFixed dd, \u03b1 = 0.5, \u03c6 = 0.001, dd = 100\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\n20\n\nDegree\n\n0.6\n0.4\n\n0.7\n0.6\n0.5\n0.4\n0.3\n\n0.2\n\n0.2\n0.1\n\n0\n\n0\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nDegree\n\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nDegree\n\nFigure 2: Degree probability and cumulative degree probability; results obtained\nthrough simulation (Sim) and the mathematical modeling (Th); \u03b1 = 0.1, \u03c6 =\n0.2, dd = 100\ndesired degree. This can be appreciated by looking at the two final charts of\nthe considered figures. In particular, with the following setting \u03b1 = 0.5, \u03c6 =\n0.01, dd = 30, it is quite probable that in the steady state nodes have their\ndesired degree, while with dd = 100 probabilities of degree values lower than\ndd are almost uniformly distributed. When \u03c6 = 0.001, instead, the probability\nof having a degree equal to dd in the steady-state reaches a high value also if\ndd = 100. In substance, under this setting, the desired network topology is\nmaintained in the steady state.\nFigure 3 shows the estimated diameter of the networks obtained when running the distributed protocol with an average attachment rate \u03b1 = 0.5, while\nvarying the value of \u03c6, assuming a network composed of 1000 nodes. The chart\nalso reports the average number of first neighbours z1 = hki and of the second\nneighbours z2 (measured through the analytical model). It can be observed that\nthe number of second neighbours is higher than the number of first neighbours,\nwhen \u03b1 > \u03c6. Hence, when employed on large networks, the protocol allows the\ncreation of a giant component. Note that when \u03c6 has low values, the diameter\nis very limited and nodes succeed in maintaining a very high degree value, since\nthe network is composed of only 1000 nodes, while the desired degree of each\npeer is equal to 100. This confirms that a proper attachment rate may guarantee that contents can be rapidly disseminated through the overlay, whatever the\ncommunication strategy employed on top of it. Then, as the failure rate grows,\nthere is a growth also on the network diameter. It is however worth noticing\nthat as \u03c6 grows, the ratio z2 /z1 decreases. Thus, the estimation of the network\ndiameter might be less reliable.\n\n13\n\n\f\u03b1 = 0.5, |\u03a0| = 1000, dd = 100\n60\n\nDiameter\nz1\nz2\n\nDiameter\n\n50\n40\n30\n20\n10\n0\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0.3\n\n\u03c6\n\nFigure 3: Diameter, average number of first and second neighbours of fixed\ndesired degree networks, when varying \u03c6, calculated using Equation (11)\n\n4.3\n\nDegree Distribution of Random Graphs\n\nHere, we consider random graphs to model the desired degree distribution of\nnetworks. This is a generalization of the approach described above, with peers\nall having the same probability to attach to other links. In substance, when a\nrandom graph is generated, a link between each pair of peers is created with a\ncertain probability p. The average degree is thus hki = p|\u03a0|. It is well known\nthat when the number of peers |\u03a0| is large, nodes' degrees of random graphs\ni \u2212hki\n\n. Several works\nmay be well characterized using a Poisson distribution hki ei!\nemploy this construction tool for generating random graphs [35].\nFigure 4 shows the degree distribution through the analytical model (and\nsimulation) obtained in the steady state (after the mentioned number of simulation steps), when the desired degree distribution models a random graph with\na probability p = 0.2 and with a number of nodes |\u03a0| = 1000. Figure 5, instead,\nreports results when p = 0.8. As shown in both figures, when parameters are\nset as \u03b1 = 0.1, \u03c6 = 0.01, a non-negligible probability is obtained only for values lower than 30, being nodes not able to reach the average desired degrees.\nSimilar outcomes are measured when \u03c6 is decreased down to 0.005; in this case,\nnon-negligible values are obtained for degrees up to 50. Hence, in this case the\ndesired topology is lost in the steady state.\nThe two considered types of random graphs behave differently when the\nsetting is \u03b1 = 0.5, \u03c6 = 0.005 (third chart of Figures 4-5). In fact, as shown in\nFigure 4, with p = 0.2, in the steady state peers have a non-negligible probability\nto reach degrees near the average degree hki = 200. Conversely, in the latter\nsetting (hki = 800, Figure 5) the chosen value of \u03b1 does not permit to maintain\nthe nodes' desired degree. Similar considerations can be made for the last\nconsidered setting \u03b1 = 0.8, \u03c6 = 0.005. In this case, when p = 0.2 a peak\nis obtained on the degree probability for the average value 200. Hence, the\nnetwork topology is maintained for p = 0.2, but not for p = 0.8. These results\nonce again confirm that the value of \u03b1 must be properly tuned based on the\naverage nodes' desired degree and the failure rate.\n\n14\n\n\fRG, <k> = 200, \u03b1 = 0.1, \u03c6 = 0.01\n1\n0.9\n0.8\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n0.8\n\n0.7\n\nProbability\n\nProbability\n\nRG, <k> = 200, \u03b1 = 0.1, \u03c6 = 0.005\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n0.5\n0.4\n\n0.7\n0.6\n0.5\n0.4\n\n0.3\n\n0.3\n\n0.2\n\n0.2\n\n0.1\n\n0.1\n\n0\n\n0\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n0\n\n10\n\n20\n\nDegree\n\n50\n\n60\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\nProbability\n\nProbability\n\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\n40\n\nRG, <k> = 200, \u03b1 = 0.8, \u03c6 = 0.005\n\nRG, <k> = 200, \u03b1 = 0.5, \u03c6 = 0.005\n1\n\n30\n\nDegree\n\n0.6\n0.4\n0.2\n\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n50\n\n100\n\n150\n\n200\n\n0\n\n50\n\n100\n\n150\n\n200\n\n250\n\n300\n\n350\n\n400\n\nDegree\n\nDegree\n\nFigure 4: Degree probability varying \u03b1, \u03c6; results obtained through simulation (Sim) and the mathematical modeling (Th); Random Graph model\np = 0.2, |\u03a0| = 1000, hki = 200\n\nRG, <k> = 800, \u03b1 = 0.1, \u03c6 = 0.01\n1\n0.8\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n0.8\n\n0.7\n\nProbability\n\nProbability\n\nRG, <k> = 800, \u03b1 = 0.1, \u03c6 = 0.005\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n\n0.6\n0.5\n0.4\n\n0.7\n0.6\n0.5\n0.4\n\n0.3\n\n0.3\n\n0.2\n\n0.2\n\n0.1\n\n0.1\n\n0\n\n0\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n30\n\n0\n\n10\n\n20\n\nDegree\nRG, <k> = 800, \u03b1 = 0.5, \u03c6 = 0.005\n1\n\n50\n\n60\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\nProbability\n\nProbability\n\n40\n\nRG, <k> = 800, \u03b1 = 0.8, \u03c6 = 0.005\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\n30\n\nDegree\n\n0.6\n0.4\n0.2\n\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n50\n\n100\n\n150\n\n200\n\n0\n\nDegree\n\n50\n\n100\n\n150\n\n200\n\n250\n\n300\n\n350\n\n400\n\nDegree\n\nFigure 5: Degree probability varying \u03b1, \u03c6; results obtained through simulation (Sim) and the mathematical modeling (Th); Random Graph model\np = 0.8, |\u03a0| = 1000, hki = 800\n\n15\n\n\f\u03b1 = 0.5, |\u03a0| = 1000, p = 0.2\n60\n\nDiameter\nz1\nz2\n\nDiameter\n\n50\n40\n30\n20\n10\n0\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0.3\n\n\u03c6\n\nFigure 6: Diameter and average number of first neighbours of random graphs,\nwhen varying \u03c6, calculated using Equation (11)\nFigure 6 shows the estimated diameter (and average number of first and\nsecond neighbours z1 , z2 ) of the considered random graphs, obtained when \u03b1 =\n0.5, while varying \u03c6, again assuming a network composed of 1000 nodes. Similar\nconsiderations can be made with respect to those made for uniform graphs.\nThat is, the diameter grows with \u03c6, hence confirming that a proper attachment\nrate must be employed to face with failures and guarantee that contents can be\nrapidly disseminated through the overlay, whatever the communication strategy\nemployed on top of it.\n\n4.4\n\nDegree Distribution of Scale Free Networks\n\nScale free networks gained a lot of interest in recent years, since it has been\nempirically noticed that power law degree distributions Dk \u223c k \u2212\u03b1 are quite good\nto model several types of real networks [7, 13, 19, 38, 2, 16, 23]. These networks\nare often referred as scale-free networks [36, 15]. They are characterized by the\npresence of hubs, i.e. nodes with degrees higher than the average, that have\nan important impact on the connectivity of the net. Several works assert that\nscale-free networks are quite resilient to random node faults, due to the presence\nof hubs [4, 35]. Indeed, the majority of nodes are those with small degree; thus,\nit is more likely that these ones will fail, while the probability that all hubs are\neliminated is almost negligible.\nThe interest on scale-free networks in this work relates to the fact that\nseveral peer-to-peer systems are indeed scale-free networks. Gnutella is a main\nexample [2]. Moreover, other peer-to-peer architectures exploit super-peers,\nwhich strongly resemble those hubs of scale-free networks [14, 22, 33, 39].\nTo build scale-free networks, our simulator implements a construction method\nwhich has been proposed in [3]. The interesting aspect of this algorithm is that\nit differs from other proposals, which build networks with a power law distribution by continuously adding novel nodes and edges, hence having networks\nthat grow in time [7, 6]. Conversely, the method in [3] employs a network of\nfixed size, characterized by two parameters a, b. Given a, b, a network is built\n\n16\n\n\fNumber of Peers\n\n1000\n\na=6, b=0.4\na=4, b=0.4\na=2.5, b=0.5\n\n100\n\n10\n\n1\n1\n\n10\n\n100\n\n1000\n\n10000\n\nDegree\n\nFigure 7: Degree Distribution of some scale-free networks using the construction\nmethod proposed in [3]\nwhose number of nodes depends on these two parameters. More specifically, the\na\nnumber of nodes y which have a degree x is \u230a exb \u230b. Thus, the total number of\nnodes of the generated network is\na\n\n\u230ae b \u230b\n\nX ea\n,\n|\u03a0| =\nxb\nx=1\na\n\nbeing \u230ae b \u230b the maximum possible degree of the network, since it must be that\n0 \u2264 log y = a \u2212 b log x. Once the number of nodes and their degrees have\nbeen determined, edges are randomly created among nodes until reaching their\ndesired degrees. We remind that, for each node in the network, such an initial\ndegree is set as the desired degree dd of the node.\nFigure 7 shows some examples of networks built with our simulator, implementing the construction method proposed in [3]. In particular, the chart\nreports, for three different settings of a, b, the number of nodes which have a\ngiven degree, in a log-log scale. It is possible to appreciate how such distributions are almost linear in a log-log scale, hence confirming they all follow some\npower law function.\nNext Figures 8-12 show the resulting degree distribution obtained through\nthe analytical model and through simulation, when employed over scale-free\nnetworks. For each setting, we report the degree distribution both in a linear\nscale (with the cumulative probability) and in a log-log scale. The latter type of\ncharts allows to easily understand whether in the steady state the network maintains scale-free properties (i.e. networks have a power law degree distribution)\nwhen running the distributed protocol. In this case, five different types of networks are considered, obtained by employing the following pairs of parameters,\ni.e. a = 3, b = 0.5 (forming scale-free networks with a number of nodes |\u03a0| = 777,\nFigure 8), a = 4.5, b = 0.8 (|\u03a0| = 876, Figure 9), a = 5, b = 0.9 (|\u03a0| = 1079, Figure 10), a = 3.2, b = 0.5 (|\u03a0| = 1167, Figure 11), a = 3.2, b = 0.45 (|\u03a0| = 2196,\n17\n\n\fFigure 12). For these networks, values of \u03b1, \u03c6 were varied.\nResults show that indeed scale-free properties are maintained, in the steady\nstate, when high attachment rates are selected (see the two last scenarios in the\nvarious figures, with \u03c6 = 0.005, while \u03b1 = 0.5, 0.8, respectively). Conversely,\nvalues of \u03b1 reported in the first two scenarios of each figure (\u03b1 = 0.1, \u03c6 =\n0.01, 0.005) demonstrate that when the attachment rate is not sufficiently rapid\nto repair failures, the typical topology of a scale-free network is lost. In fact, the\ndegree distribution in the log-log scale is not linear. These results are common\nto all the considered networks.\nThe reliability of scale-free nets was already demonstrated in other works\n[13, 36, 4, 17]. However, they usually considered attacks while keeping the\nnetwork almost static, without the possibility to react to these nodes/links removals. (The main reason is that these models are often employed for studying,\nfor instance, the spread of viruses or general percolation properties in a net.)\nOur assessment demonstrates that the simple proposed distributed protocol enables the maintenance of scale-free topologies also when nodes are subjected to\nperiodical failures. Once the desired topology of the network has been specified\nand each node has its own assigned degree, it suffices to employ an adequate\nattachment rate to randomly select novel neighbours. As already mentioned,\nwhen nodes are randomly selected to fail, there is a low probability that a major\nportion of hubs of the network is removed from the net (since there are few hubs\nin the network, with respect to other nodes) [36, 35]. Rather, it is more likely\nthat peers which fail are non-hubs with low degrees. Under these circumstances,\nhubs that lose some neighbours have time to react to these failures by finding\nnovel nodes to link with. This allows to maintain a scale-free topology.\nFinally, Figure 13 reports the estimated diameter (together with the average\nnumber of first and second neighbours z1 , z2 ) of scale-free networks, built with\na = 3.2, b = 0.5, |\u03a0| = 1167, obtained when \u03b1 = 0.5, while varying \u03c6. Also in\nthis case the diameter of the network grows with \u03c6. It is worth noting that, as\ndiscussed, in this case the desired topology of these networks is different from\nthat considered for random graphs, being the former a desired topology following\na power law distribution, while the latter follows a Poisson distribution. Our\nresults show that, with these settings, the average number of first neighbours\nz1 is (slightly) lower in scale-free networks (even if the number of nodes in the\nconsidered network is a bit higher than the 1000 nodes of random graphs).\nIt is interesting to observe that theoretical results on scale free nets revealed\nthat, depending on the exponent of the power law characterizing the scale free\nnet, the network diameter ranges from log |\u03a0|/ log log |\u03a0| down to log log |\u03a0|\n[13, 15, 39, 9]. In this case, it is worth noticing that the network diameter of\nthe resulting overlay augments with \u03c6, thus confirming that if the attachment\nrate at a peer is not sufficient, the overlay loses the characteristics of the desired\ntopology.\n\n5\n\nConclusions\n\nThis paper presented a mathematical model of unstructured, self-organizing\noverlay networks in faulty peer-to-peer systems. A distributed protocol has\nbeen considered, where nodes try to maintain a desired degree, coping with node\nfailures. An analysis of the protocol has been provided, and numerical results\n\n18\n\n\fSF, a = 3, b = 0.5, \u03b1 = 0.1, \u03c6 = 0.01\n1\n\nSim Prob\nTh Prob\n\n0.01\n\nProbability (log)\n\n0.8\n\nProbability\n\nSF, a = 3, b = 0.5, \u03b1 = 0.1, \u03c6 = 0.01\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n0.4\n0.2\n\n0.001\n0.0001\n1e-05\n\n0\n\n1e-06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\nSF, a = 3, b = 0.5, \u03b1 = 0.1, \u03c6 = 0.005\n1\n\nProbability (log)\n\nProbability\n\nSim Prob\nTh Prob\n\n0.01\n\n0.6\n0.4\n0.2\n\n0.001\n0.0001\n1e-05\n\n0\n\n1e-06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\n\nProbability (log)\n\n0.6\n\n100\n\nSF, a = 3, b = 0.5, \u03b1 = 0.5, \u03c6 = 0.005\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.7\n\n10\n\nDegree (log)\n\nSF, a = 3, b = 0.5, \u03b1 = 0.5, \u03c6 = 0.005\n0.8\n\nProbability\n\n100\n\nSF, a = 3, b = 0.5, \u03b1 = 0.1, \u03c6 = 0.005\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\n10\n\nDegree (log)\n\n0.5\n0.4\n0.3\n0.2\n\nSim Prob\nTh Prob\n\n0.01\n\n0.1\n0\n\n0.001\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\nSF, a = 3, b = 0.5, \u03b1 = 0.8, \u03c6 = 0.005\n0.7\n\nProbability (log)\n\n0.5\n\nProbability\n\n100\n\nSF, a = 3, b = 0.5, \u03b1 = 0.8, \u03c6 = 0.005\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n\n10\n\nDegree (log)\n\n0.4\n0.3\n0.2\n\nSim Prob\nTh Prob\n\n0.01\n\n0.1\n0\n\n0.001\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nDegree\n\n1\n\n10\n\n100\n\nDegree (log)\n\nFigure 8: Degree probability and cumulative degree probability varying \u03b1, \u03c6\non the left side; degree probability in log scale on the right side; results obtained through simulation (Sim) and the mathematical modeling (Th); Scale\nFree networks a = 3, b = 0.5, |\u03a0| = 777\n\n19\n\n\fSF, a = 4.5, b = 0.8, \u03b1 = 0.1, \u03c6 = 0.01\n1\n\nSim Prob\nTh Prob\n\n0.1\n\nProbability (log)\n\n0.8\n\nProbability\n\nSF, a = 4.5, b = 0.8, \u03b1 = 0.1, \u03c6 = 0.01\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n0.4\n0.2\n\n0.01\n0.001\n0.0001\n1e-05\n\n0\n\n1e-06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n1\n\nDegree\nSF, a = 4.5, b = 0.8, \u03b1 = 0.1, \u03c6 = 0.005\n1\n\nSim Prob\nTh Prob\n\n0.1\n\nProbability (log)\n\nProbability\n\nSF, a = 4.5, b = 0.8, \u03b1 = 0.1, \u03c6 = 0.005\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n0.6\n0.4\n0.2\n\n0.01\n0.001\n0.0001\n1e-05\n\n0\n\n1e-06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\n\nSF, a = 4.5, b = 0.8, \u03b1 = 0.5, \u03c6 = 0.005\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\nSim Prob\nTh Prob\n\n0.1\n\nProbability (log)\n\n0.8\n\n10\n\nDegree (log)\n\nSF, a = 4.5, b = 0.8, \u03b1 = 0.5, \u03c6 = 0.005\n1\n0.9\n\nProbability\n\n10\n\nDegree (log)\n\n0.7\n0.6\n0.5\n0.4\n0.3\n0.2\n\n0.01\n0.001\n0.0001\n1e-05\n\n0.1\n0\n\n1e-06\n0\n\n50\n\n100\n\n150\n\n200\n\n250\n\n1\n\nDegree\nSF, a = 4.5, b = 0.8, \u03b1 = 0.8, \u03c6 = 0.005\n1\n\nProbability (log)\n\nProbability\n\n0.8\n\n100\n\nSF, a = 4.5, b = 0.8, \u03b1 = 0.8, \u03c6 = 0.005\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n\n10\n\nDegree (log)\n\n0.7\n0.6\n0.5\n0.4\n0.3\n0.2\n\nSim Prob\nTh Prob\n\n0.1\n\n0.01\n\n0.001\n\n0.1\n0\n\n0.0001\n0\n\n50\n\n100\n\n150\n\n200\n\n250\n\nDegree\n\n1\n\n10\n\n100\n\nDegree (log)\n\nFigure 9: Degree probability and cumulative degree probability varying \u03b1, \u03c6\non the left side; degree probability in log scale on the right side; results obtained through simulation (Sim) and the mathematical modeling (Th); Scale\nFree networks a = 4.5, b = 0.8, |\u03a0| = 876\n\n20\n\n\fSF, a = 5, b = 0.9, \u03b1 = 0.1, \u03c6 = 0.01\n1\n\nSim Prob\nTh Prob\n\n0.1\n\nProbability (log)\n\n0.8\n\nProbability\n\nSF, a = 5, b = 0.9, \u03b1 = 0.1, \u03c6 = 0.01\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n0.4\n0.2\n\n0.01\n0.001\n0.0001\n1e-05\n\n0\n\n1e-06\n0\n\n10\n\n20\n\n30\n\n40\n\n50\n\n1\n\nDegree\nSF, a = 5, b = 0.9, \u03b1 = 0.1, \u03c6 = 0.005\n1\n\nSim Prob\nTh Prob\n\n0.1\n\nProbability (log)\n\n0.8\n\nProbability\n\nSF, a = 5, b = 0.9, \u03b1 = 0.1, \u03c6 = 0.005\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n\n10\n\nDegree (log)\n\n0.7\n0.6\n0.5\n0.4\n0.3\n0.2\n\n0.01\n0.001\n0.0001\n1e-05\n\n0.1\n0\n\n1e-06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\nSF, a = 5, b = 0.9, \u03b1 = 0.5, \u03c6 = 0.005\n1\n\nSim Prob\nTh Prob\n\n0.1\n\nProbability (log)\n\nProbability\n\n0.8\n\n100\n\nSF, a = 5, b = 0.9, \u03b1 = 0.5, \u03c6 = 0.005\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n\n10\n\nDegree (log)\n\n0.7\n0.6\n0.5\n0.4\n0.3\n0.2\n\n0.01\n0.001\n0.0001\n1e-05\n\n0.1\n0\n\n1e-06\n0\n\n50\n\n100\n\n150\n\n200\n\n250\n\n1\n\nDegree\nSF, a = 5, b = 0.9, \u03b1 = 0.8, \u03c6 = 0.005\n1\n\nProbability (log)\n\nProbability\n\n0.8\n\n100\n\nSF, a = 5, b = 0.9, \u03b1 = 0.8, \u03c6 = 0.005\n1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.9\n\n10\n\nDegree (log)\n\n0.7\n0.6\n0.5\n0.4\n0.3\n0.2\n\nSim Prob\nTh Prob\n\n0.1\n\n0.01\n\n0.001\n\n0.1\n0\n\n0.0001\n0\n\n50\n\n100\n\n150\n\n200\n\n250\n\nDegree\n\n1\n\n10\n\n100\n\nDegree (log)\n\nFigure 10: Degree probability and cumulative degree probability varying \u03b1, \u03c6\non the left side; degree probability in log scale on the right side; results obtained through simulation (Sim) and the mathematical modeling (Th); Scale\nFree networks a = 5, b = 0.9, |\u03a0| = 1079\n\n21\n\n\fSF, a = 3.2, b = 0.5, \u03b1 = 0.1, \u03c6 = 0.01\n1\n\nSim Prob\nTh Prob\n\n0.01\n\nProbability (log)\n\n0.8\n\nProbability\n\nSF, a = 3.2, b = 0.5, \u03b1 = 0.1, \u03c6 = 0.01\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n0.4\n0.2\n\n0.001\n0.0001\n1e-05\n\n0\n\n1e-06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\nSF, a = 3.2, b = 0.5, \u03b1 = 0.1, \u03c6 = 0.005\n1\n\nProbability (log)\n\nProbability\n\nSim Prob\nTh Prob\n\n0.01\n\n0.6\n0.4\n0.2\n\n0.001\n0.0001\n1e-05\n\n0\n\n1e-06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\n\nProbability (log)\n\n0.6\n\n100\n\nSF, a = 3.2, b = 0.5, \u03b1 = 0.5, \u03c6 = 0.005\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.7\n\n10\n\nDegree (log)\n\nSF, a = 3.2, b = 0.5, \u03b1 = 0.5, \u03c6 = 0.005\n0.8\n\nProbability\n\n100\n\nSF, a = 3.2, b = 0.5, \u03b1 = 0.1, \u03c6 = 0.005\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\n10\n\nDegree (log)\n\n0.5\n0.4\n0.3\n0.2\n\nSim Prob\nTh Prob\n\n0.01\n\n0.1\n0\n\n0.001\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\nSF, a = 3.2, b = 0.5, \u03b1 = 0.8, \u03c6 = 0.005\n0.7\n\nProbability (log)\n\n0.5\n\nProbability\n\n100\n\nSF, a = 3.2, b = 0.5, \u03b1 = 0.8, \u03c6 = 0.005\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n\n10\n\nDegree (log)\n\n0.4\n0.3\n0.2\n\nSim Prob\nTh Prob\n\n0.01\n\n0.1\n0\n\n0.001\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nDegree\n\n1\n\n10\n\n100\n\nDegree (log)\n\nFigure 11: Degree probability and cumulative degree probability varying \u03b1, \u03c6\non the left side; degree probability in log scale on the right side; results obtained through simulation (Sim) and the mathematical modeling (Th); Scale\nFree networks a = 3.2, b = 0.5, |\u03a0| = 1167\n\n22\n\n\fSF, a = 3.2, b = 0.45, \u03b1 = 0.1, \u03c6 = 0.01\n1\n\nSim Prob\nTh Prob\n\n0.01\n\nProbability (log)\n\n0.8\n\nProbability\n\nSF, a = 3.2, b = 0.45, \u03b1 = 0.1, \u03c6 = 0.01\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n0.4\n0.2\n\n0.001\n0.0001\n1e-05\n\n0\n\n1e-06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\nSF, a = 3.2, b = 0.45, \u03b1 = 0.1, \u03c6 = 0.005\n1\n\nProbability (log)\n\nProbability\n\nSim Prob\nTh Prob\n\n0.01\n\n0.6\n0.4\n0.2\n\n0.001\n0.0001\n1e-05\n\n0\n\n1e-06\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\n\n100\n\nSF, a = 3.2, b = 0.45, \u03b1 = 0.5, \u03c6 = 0.005\n0.1\n\nProbability (log)\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.6\n\n10\n\nDegree (log)\n\nSF, a = 3.2, b = 0.45, \u03b1 = 0.5, \u03c6 = 0.005\n0.7\n\n0.5\n\nProbability\n\n100\n\nSF, a = 3.2, b = 0.45, \u03b1 = 0.1, \u03c6 = 0.005\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.8\n\n10\n\nDegree (log)\n\n0.4\n0.3\n0.2\n\nSim Prob\nTh Prob\n\n0.01\n\n0.1\n0\n\n0.001\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\n1\n\nDegree\nSF, a = 3.2, b = 0.45, \u03b1 = 0.8, \u03c6 = 0.005\n0.6\n\nProbability (log)\n\nProbability\n\n100\n\nSF, a = 3.2, b = 0.45, \u03b1 = 0.8, \u03c6 = 0.005\n0.1\n\nSim Cum Prob\nSim Prob\nTh Cum Prob\nTh Prob\n\n0.5\n\n10\n\nDegree (log)\n\n0.4\n0.3\n0.2\n\nSim Prob\nTh Prob\n\n0.01\n\n0.1\n0\n\n0.001\n0\n\n20\n\n40\n\n60\n\n80\n\n100\n\nDegree\n\n1\n\n10\n\n100\n\nDegree (log)\n\nFigure 12: Degree probability and cumulative degree probability varying \u03b1, \u03c6\non the left side; degree probability in log scale on the right side; results obtained through simulation (Sim) and the mathematical modeling (Th); Scale\nFree networks a = 3.2, b = 0.45, |\u03a0| = 2196\n\n23\n\n\f\u03b1 = 0.5, |\u03a0| = 1167, a = 3.2, b = 0.5\n60\n\nDiameter\nz1\nz2\n\nDiameter\n\n50\n40\n30\n20\n10\n0\n0\n\n0.05\n\n0.1\n\n0.15\n\n0.2\n\n0.25\n\n0.3\n\n\u03c6\n\nFigure 13: Diameter and average number of first neighbours of scale-free networks, when varying \u03c6, calculated using Equation (11)\ncoming from the obtained mathematical tool have been compared with those\nobtained through simulation. In essence, the two different approaches provide\nsame outcomes. Different types of network topologies have been considered,\ni.e. networks with nodes having the same desired degree, random graphs and\nscale-free networks.\nResults demonstrate that in presence of a non-negligible failure rate, peers\nneed a high attachment rate to cope with node faults. Otherwise, they are not\nbe able to maintain their desired degree. This is important also to control the\ntopology of the evolving network. Hence, a final remark is that the mathematical\ntool provided in this paper can be factually exploited to dynamically adapt the\npeers' attachment rate, based on their desired degree and on the failure rate\nthey are experiencing, so as the preserve the desired topology of the network.\nThe provided model can be extended in several ways. In this model, peers\nwere treated uniformly, all having the same failure and attachment rates. A\npossibility is to replace \u03b1, \u03c6 parameters with functions that may depend on\nseveral factors like, for instance, the gap between the actual and the desired\ndegree, the actual degree itself, etc. When applied to the attachment rate,\nthese parameters would implement some form of preferential attachment. When\napplied to the failure rate, forms of targeted attacks may be modeled. Then,\nthe random selection of novel neighbours could be replaced with mechanisms\nthat employ a local search, e.g. by limiting the peers' selection over 2nd , or 3rd\nneighbours.\n\nReferences\n[1] Gnu scientific ligrary (gsl), January 2010.\n[2] L. A. Adamic, R. M. Lukose, and B. A. Huberman. Local search in unstructured networks. In Handbook of Graphs and Networks, pages 295\u2013317.\nWiley-VCH, 2003.\n\n24\n\n\f[3] W. Aiello, F. Chung, and L. Lu. A random graph model for power law\ngraphs. Experimental Math, 10:53\u201366, 2000.\n[4] R. Albert, H. Jeong, and A.-L. Barab\u00e1si. Error and attack tolerance of\ncomplex networks. Nature, 406:378\u2013382, July 2000.\n[5] S. Androutsellis-Theotokis and D. Spinellis. A survey of peer-to-peer content distribution technologies. ACM Comput. Surv., 36(4):335\u2013371, 2004.\n[6] A.-L. Barab\u00e1si and R. Albert. Emergence of scaling in random networks.\nScience, 286:509\u2013512, 1999.\n[7] A.-L. Barab\u00e1si, R. Albert, and H. Jeong. Scale-free characteristics of random networks: the topology of the world-wide web. Physica A: Statistical\nMechanics and its Applications, 281(1-4):69\u201377, Jun 2000.\n[8] E. A. Bender and E. R. Canfield. The asymptotic number of labeled graphs\nwith given degree sequences. J. Comb. Theory, Ser. A, 24(3):296\u2013307, 1978.\n[9] B. Bollobas and O. Riordan. The diameter of a scale-free random graph.\nCombinatorica, 24(1):5\u201334, 2004.\n[10] A. Broder, R. Kumar, F. Maghoul, P. Raghavan, S. Rajagopalan, R. Stata,\nA. Tomkins, and J. Wiener. Graph structure in the web. Computer Networks, 33(1):309\u2013320, June 2000.\n[11] Y. Chu, S. G. Rao, and H. Zhang. A case for end system multicast. In\nProc. of SIGMETRICS'00.\n[12] R. Cohen, K. Erez, D. ben Avraham, and S. Havlin. Resilience of the\ninternet to random breakdowns. Phys Rev Lett, 85(21):4626\u20138, 2000.\n[13] R. Cohen, S. Havlin, and D. Ben-avraham. Structural properties of scalefree networks. In In Handbook of Graphs and Networks, pages 85\u2013110.\nWiley, 2003.\n[14] B. F. Cooper. An optimal overlay topology for routing peer-to-peer\nsearches. In Middleware '05: Proceedings of the ACM/IFIP/USENIX 2005\nInternational Conference on Middleware, pages 82\u2013101, New York, NY,\nUSA, 2005. Springer-Verlag New York, Inc.\n[15] G. D'Angelo and S. Ferretti. Simulation of scale-free networks. In Simutools\n'09: Proc. of the 2nd International Conference on Simulation Tools and\nTechniques, pages 1\u201310, ICST, Brussels, Belgium, 2009. ICST.\n[16] R. Dobrescu, S. Taralunga, and S. Mocanu. Web traffic simulation with\nscale-free network models. In AIC'07: Proceedings of the 7th Conference\non 7th WSEAS International Conference on Applied Informatics and Communications, pages 275\u2013280, Stevens Point, Wisconsin, USA, 2007. World\nScientific and Engineering Academy and Society (WSEAS).\n[17] D. Dumitriu, E. Knightly, A. Kuzmanovic, I. Stoica, and W. Zwaenepoel.\nDenial-of-service resilience in peer-to-peer file sharing systems. In SIGMETRICS '05: Proceedings of the 2005 ACM SIGMETRICS international\nconference on Measurement and modeling of computer systems, pages 38\u2013\n49, New York, NY, USA, 2005. ACM.\n25\n\n\f[18] J. Ebersp\u00e4cher and R. Schollmeier. First and second generation of peer-topeer systems. In Peer-to-Peer Systems and Applications, volume 3485 of\nLecture Notes in Computer Science, pages 35\u201356, 2005.\n[19] M. Faloutsos, P. Faloutsos, and C. Faloutsos. On power-law relationships\nof the Internet topology. SIGCOMM, pages 251\u2013262, Aug-Sept. 1999.\n[20] S. Ferretti. On the degree distribution of opportunistic networks. In Proceedings of the 2nd International Workshop on Mobile Opportunistic Networking, ACM/SIGMOBILE MobiOpp 2010, New York, NY, USA, 2010.\nACM.\n[21] S. Ferretti and V. Ghini. A web 2.0, location-based architecture for a\nseamless discovery of points of interests. In AICT '09: Proceedings of\nthe 2009 Fifth Advanced International Conference on Telecommunications,\npages 226\u2013231, Washington, DC, USA, 2009. IEEE.\n[22] P. Garbacki, D. H. J. Epema, and M. van Steen. Optimizing peer relationships in a super-peer network. In ICDCS '07: Proceedings of the\n27th International Conference on Distributed Computing Systems, page 31,\nWashington, DC, USA, 2007. IEEE Computer Society.\n[23] B. Garbinato, D. Rochat, and M. Tomassini. Impact of scale-free topologies\non gossiping in ad hoc networks. In NCA, pages 269\u2013272. IEEE Computer\nSociety, 2007.\n[24] V. Ghini, S. Ferretti, and F. Panzieri. Mobile games through the nets:\na cross-layer architecture for seamless playing. In Proceedings of the International Workshop on DIstributed SImulation - Online gaming (DISIO\n2010) - ICST Conference on Simulation Tools and Techniques (SIMUTools\n2010), ICST, Brussels, Belgium, 2010. ICST.\n[25] H. Guclu and M. Yuksel. Limited scale-free overlay topologies for unstructured peer-to-peer networks. IEEE Trans. Parallel Distrib. Syst.,\n20(5):667\u2013679, 2009.\n[26] M. Haridasan and R. van Renesse. Gossip-based distribution estimation\nin peer-to-peer networks. In 7th International Workshop on Peer-to-Peer\nSystems (IPTPS '08), 2008.\n[27] R. Holzer and H. de Meer. On modeling of self-organizing systems. In\nAutonomics '08: Proc. of the 2nd International Conference on Autonomic\nComputing and Communication Systems, pages 1\u20136. ICST, 2008.\n[28] S. Ioannidis and P. Marbach. On the design of hybrid peer-to-peer systems.\nIn SIGMETRICS '08: Proceedings of the 2008 ACM SIGMETRICS international conference on Measurement and modeling of computer systems,\npages 157\u2013168, New York, NY, USA, 2008. ACM.\n[29] H. Jeong, S. Mason, A.-L. Barab\u00e1si, and Z. Oltvai. Lethality and centrality\nin protein networks. Nature, 411, 2001.\n[30] I. Keidar and R. Melamed. Evaluating unstructured peer-to-peer lookup\noverlays. In SAC '06: Proceedings of the 2006 ACM symposium on Applied\ncomputing, pages 675\u2013679, New York, NY, USA, 2006. ACM.\n26\n\n\f[31] D. Leonard, V. Rai, and D. Loguinov. On lifetime-based node failure and\nstochastic resilience of decentralized peer-to-peer networks. In SIGMETRICS '05: Proceedings of the 2005 ACM SIGMETRICS international conference on Measurement and modeling of computer systems, pages 26\u201337,\nNew York, NY, USA, 2005. ACM.\n[32] F. Liljeros, C. Edling, L. Amaral, H. Stanley, and Y. Aberg. The web of\nhuman sexual contacts. Nature, 411:907\u2013907, 2001.\n[33] J.-W. Lin, M.-F. Yang, and J. Tsai. Fault tolerance for super-peers of p2p\nsystems. In PRDC '07: Proceedings of the 13th Pacific Rim International\nSymposium on Dependable Computing, pages 107\u2013114, Washington, DC,\nUSA, 2007. IEEE Computer Society.\n[34] T. Lin, P. Lin, H. Wang, and C. Chen. Dynamic search algorithm in unstructured peer-to-peer networks. Parallel and Distributed Systems, IEEE\nTransactions on, 20(5):654 \u2013666, may 2009.\n[35] M. E. J. Newman. Random graphs as models of networks, pages 35\u201368.\nWiley, first edition, 2003.\n[36] M. E. J. Newman. The structure and function of complex networks. SIAM\nReview, 45:167\u2013256, 2003.\n[37] D. Pompili, C. Scoglio, and L. Lopez. Multicast algorithms in service\noverlay networks. Comput. Commun., 31(3):489\u2013505, 2008.\n[38] D. J. Price. Networks of scientific papers. Science, 149(3683):510\u2013515, July\n1965.\n[39] Y. J. Pyun and D. S. Reeves. Constructing a balanced, (log(n)/loglog(n))diameter super-peer topology for scalable p2p systems. In P2P '04: Proceedings of the Fourth International Conference on Peer-to-Peer Computing, pages 210\u2013218, Washington, DC, USA, 2004. IEEE.\n[40] J. Qi and J. Yu. Scale-free overlay structures for unstructured peer-to-peer\nnetworks. In GCC '08: Proceedings of the 2008 Seventh International Conference on Grid and Cooperative Computing, pages 369\u2013373, Washington,\nDC, USA, 2008. IEEE Computer Society.\n[41] S. Schmid and R. Wattenhofer. Structuring unstructured peer-to-peer networks. In Proceedings of the 14th International Conference on High Performance Computing - HiPC 2007, volume 4873 of Lecture Notes in Computer\nScience, pages 432\u2013442. Springer, 2007.\n[42] C. Shahabi and F. B. Kashani. Modelling peer-to-peer data networks under\ncomplex system theory. In Databases in Networked Information Systems,\n4th International Workshop, DNIS 2005, Aizu-Wakamatsu, Japan, March\n28-30, 2005, Proceedings, volume 3433 of Lecture Notes in Computer Science, pages 238\u2013243. Springer, 2005.\n[43] X. Wang, Y. Zhang, X. Li, and D. Loguinov. On zone-balancing of peer-topeer networks: analysis of random node join. In SIGMETRICS '04/Performance '04: Proceedings of the joint international conference on Measurement and modeling of computer systems, pages 211\u2013222, New York, NY,\nUSA, 2004. ACM.\n27\n\n\f[44] J. Wu, Y. Zhang, Z. M. Mao, and K. G. Shin. Internet routing resilience\nto failures: analysis and implications. In CoNEXT '07: Proceedings of the\n2007 ACM CoNEXT conference, pages 1\u201312, New York, NY, USA, 2007.\nACM.\n[45] X. Zhang, J. Liu, B. Li, and Y. S. P. Yum. Coolstreaming/donet: a datadriven overlay network for peer-to-peer live media streaming. volume 3,\npages 2102\u20132111 vol. 3, 2005.\n\n28\n\n\f"}