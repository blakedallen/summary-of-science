{"id": "http://arxiv.org/abs/1204.4411v2", "guidislink": true, "updated": "2012-04-21T14:17:52Z", "updated_parsed": [2012, 4, 21, 14, 17, 52, 5, 112, 0], "published": "2012-04-19T17:03:04Z", "published_parsed": [2012, 4, 19, 17, 3, 4, 3, 110, 0], "title": "Solutions to the generalized Towers of Hanoi problem", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1204.6090%2C1204.5683%2C1204.2040%2C1204.0569%2C1204.4504%2C1204.6491%2C1204.0353%2C1204.3806%2C1204.6545%2C1204.4640%2C1204.4865%2C1204.4233%2C1204.4709%2C1204.3760%2C1204.0338%2C1204.4684%2C1204.6439%2C1204.6175%2C1204.2682%2C1204.3259%2C1204.4383%2C1204.3356%2C1204.0433%2C1204.0884%2C1204.5272%2C1204.1131%2C1204.3117%2C1204.1017%2C1204.2506%2C1204.0678%2C1204.1481%2C1204.6112%2C1204.3451%2C1204.3292%2C1204.1516%2C1204.0333%2C1204.2887%2C1204.3419%2C1204.2186%2C1204.2364%2C1204.0185%2C1204.3067%2C1204.1140%2C1204.0841%2C1204.3874%2C1204.2982%2C1204.3172%2C1204.3820%2C1204.6461%2C1204.1330%2C1204.3034%2C1204.2552%2C1204.2528%2C1204.0381%2C1204.0851%2C1204.2071%2C1204.2235%2C1204.2259%2C1204.0493%2C1204.4927%2C1204.6216%2C1204.5554%2C1204.4981%2C1204.4955%2C1204.2748%2C1204.0775%2C1204.1177%2C1204.4492%2C1204.2330%2C1204.3176%2C1204.3880%2C1204.5541%2C1204.0015%2C1204.4398%2C1204.1000%2C1204.4411%2C1204.0534%2C1204.0190%2C1204.5663%2C1204.0755%2C1204.5212%2C1204.3706%2C1204.4269%2C1204.1043%2C1204.6283%2C1204.4185%2C1204.4517%2C1204.1368%2C1204.0544%2C1204.6728%2C1204.5672%2C1204.6372%2C1204.1850%2C1204.4187%2C1204.3145%2C1204.1514%2C1204.2863%2C1204.2843%2C1204.0581%2C1204.5128%2C1204.6038&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Solutions to the generalized Towers of Hanoi problem"}, "summary": "The purpose of this paper is to prove the Frame-Stewart algorithm for the\ngeneralized Towers of Hanoi problem as well as finding the number of moves\nrequired to solve the problem and studying the multitude of optimal solutions.\nThe main idea is to study how to most effectively move away all but the last\ndisc and use the fact that the total number of moves required to solve the\nproblem is twice this number plus one.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1204.6090%2C1204.5683%2C1204.2040%2C1204.0569%2C1204.4504%2C1204.6491%2C1204.0353%2C1204.3806%2C1204.6545%2C1204.4640%2C1204.4865%2C1204.4233%2C1204.4709%2C1204.3760%2C1204.0338%2C1204.4684%2C1204.6439%2C1204.6175%2C1204.2682%2C1204.3259%2C1204.4383%2C1204.3356%2C1204.0433%2C1204.0884%2C1204.5272%2C1204.1131%2C1204.3117%2C1204.1017%2C1204.2506%2C1204.0678%2C1204.1481%2C1204.6112%2C1204.3451%2C1204.3292%2C1204.1516%2C1204.0333%2C1204.2887%2C1204.3419%2C1204.2186%2C1204.2364%2C1204.0185%2C1204.3067%2C1204.1140%2C1204.0841%2C1204.3874%2C1204.2982%2C1204.3172%2C1204.3820%2C1204.6461%2C1204.1330%2C1204.3034%2C1204.2552%2C1204.2528%2C1204.0381%2C1204.0851%2C1204.2071%2C1204.2235%2C1204.2259%2C1204.0493%2C1204.4927%2C1204.6216%2C1204.5554%2C1204.4981%2C1204.4955%2C1204.2748%2C1204.0775%2C1204.1177%2C1204.4492%2C1204.2330%2C1204.3176%2C1204.3880%2C1204.5541%2C1204.0015%2C1204.4398%2C1204.1000%2C1204.4411%2C1204.0534%2C1204.0190%2C1204.5663%2C1204.0755%2C1204.5212%2C1204.3706%2C1204.4269%2C1204.1043%2C1204.6283%2C1204.4185%2C1204.4517%2C1204.1368%2C1204.0544%2C1204.6728%2C1204.5672%2C1204.6372%2C1204.1850%2C1204.4187%2C1204.3145%2C1204.1514%2C1204.2863%2C1204.2843%2C1204.0581%2C1204.5128%2C1204.6038&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The purpose of this paper is to prove the Frame-Stewart algorithm for the\ngeneralized Towers of Hanoi problem as well as finding the number of moves\nrequired to solve the problem and studying the multitude of optimal solutions.\nThe main idea is to study how to most effectively move away all but the last\ndisc and use the fact that the total number of moves required to solve the\nproblem is twice this number plus one."}, "authors": ["Mikael Erik J\u00f6rgensen"], "author_detail": {"name": "Mikael Erik J\u00f6rgensen"}, "author": "Mikael Erik J\u00f6rgensen", "arxiv_comment": "9 pages", "links": [{"href": "http://arxiv.org/abs/1204.4411v2", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1204.4411v2", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "math.CO", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "math.CO", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.DM", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "90C27 (Combinatorial optimization)", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1204.4411v2", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1204.4411v2", "journal_reference": null, "doi": null, "fulltext": "Solutions to the generalized Towers of Hanoi problem\nMikael Erik J\u00f6rgensen\nEmail: mijo0856@student.su.se\n\narXiv:1204.4411v2 [math.CO] 21 Apr 2012\n\nAbstract\nThe purpose of this paper is to prove the Frame-Stewart algorithm\nfor the generalized Towers of Hanoi problem as well as finding the number of moves required to solve the problem and studying the multitude\nof optimal solutions. The main idea is to study how to most effectively\nmove away all but the last disc and use the fact that the total number\nof moves required to solve the problem is twice this number plus one.\n\n1\n\n\fPreface\nIt was about four years ago when I first encountered the generalized Towers\nof Hanoi problem. I had used the original one in teaching purposes and simply extended the problem in a natural way. I also found the Frame-Stewart\nalgorithm but I never proved it since it felt obvious and I assumed the problem was since long proved. Only recently it was pointed out to me that\nit was in fact not proved, something I could hardly believe. As I searched\nthe web however I found a solution in [Arif] published only about 100 days\nbefore. At this point I had already thought of a method of proof which is\nthe one that I present in this paper. Hopefully my ideas may be useful in\nsolving related problems as well.\n\n2\n\n\fProporties of the puzzle\nI shall assume familiarity with the rules of the puzzle. For background\ninformation see [wiki] or introduction in [Arif].\nNow we must label the discs: Disc 1 is the smallest disc, disc 2 the second smallest and so on.\nRemark: A number of words will have specific meaning in this text and\nare listed in this remark:\n* The size of a disc is simply it's assigned number.\n* A stack is any number of discs of any sizes located on one and the same\npeg.\n* A tower is a stack such that if disc i is in the tower then either disc i + 1\nis also in the tower or disc i is the largest disc in the tower.\n* The height of a stack is the number of discs in it.\n* A distribution is a collection of stacks.\nDefinition 1: The minimum number of moves required to distribute a\nsingle tower consisting of n discs onto m empty pegs with k pegs available\nis S(n, k, m). We also denote T (n, k) = S(n, k, 1).\nNow let's state some useful proporties of the puzzle.\nBlocking lemma: If a puzzle has k pegs and m pegs are occupied by\nstacks with smallest disc less than i and the i:th disc is on top of it's stack,\nthen the i:th disc may be moved to k \u2212 m \u2212 1 positions.\nProof\n\nThis follows immediately from the rules of the puzzle. Q.E.D.\n\nReversal lemma: It takes the same number of moves to distribute a stack\nonto m empty pegs as it takes to reassemble the stack from the distributed\nposition.\nProof\nThis is obvious since we can simply move each disc to it's immediate previous position in reverse order and thus it cannot take more moves\nto reassemble the tower. Now suppose we managed to distribute the tower\nonto m pegs with a minimal amount of moves i.e. S(n, k, m) moves, then\nif we could reassemble the tower in fewer moves we could use the reverse\nstrategy to distribute the tower which contradicts the minimality of the distribution strategy. Q.E.D.\n\n3\n\n\fCorollary: Bifurcation theorem: The number of moves required to solve\nthe general Towers of Hanoi problem is 2S(n \u2212 1, k, k \u2212 2) + 1.\nProof\nThe first thing we need do is to distribute n \u2212 1 discs onto\nk \u2212 2 pegs using k pegs. For this we need exactly S(n \u2212 1, k, k \u2212 2) moves.\nNext we move the largest disc (disc n) to it's final position, which requires\n1 move. Relabeling the pegs we see that it takes exactly S(n \u2212 1, k, k \u2212 2)\nmoves to assemble the tower containing all discs onto the destination peg.\nQ.E.D.\n\nProof of the algorithm\nNow we have what we need to prove the Frame-Stewart algorithm in the\ngeneral case. Notice that all we need to do is to prove that distributing the\ndiscs, it is indeed an optimal strategy to construct one tower at a time on\nthe intermediate pegs.\nRemark: When counting the number of moves required to build a stack\nwe count how many moves is made by every disc which will form the stack.\nThe tower distribution lemma: S(n, k, m) =\nX\nfor certain choices di where\ndi = n.\n\nm\nX\n\nT (di , k \u2212 i + 1)\n\ni=1\n\nProof\nCase 1: If j \u2212 1 stacks are already in place then it is obvious that to form the j : th stack we need T (dj , k \u2212 j + 1) moves.\nCase 2: If on the other hand we can construct the j : th stack in less than\nT (dj , k \u2212 j + 1) then we must first place at least one of the previous stacks\non top of the other stacks. Then we can redefine the di so that we are back\nat case 1. Q.E.D.\nSince the number of moves required to build a stack is independent of the\ndiscs sizes we can do this in any way such that it minimizes the number of\nmoves. It is easy to see that in particular we can build only towers resulting\nin the Frame-Stewart algorithm.\nCorollary: The Hanoi theorem: The Frame-Stewart algorithm is optimal.\n\n4\n\n\fJourney numbers\nFor reasons to be seen we will from this point reverse the ordering\nof the discs so that disc 1 is the largest disc and disc 2 is the second\nlargest and so on. [Arif] states that the solution given to the Reve\npuzzle is in fact unique. This is not true. Even if we think of each peg,\nexcept the destination peg, as interchangeable there are many ways to\nsolve the problem and not all are by creating only towers but also other\nkinds of stacks. An example is the 4 disc Reve puzzle. We may first\nbuild a tower of disc 3 and 4. If we do then there are 2 ways to solve\nthe problem depending on wether we move disc 4 or disc 2 first after\nhaving moved disc 1. We may also distribute disc 2,3 and 4 onto the 3\navailable pegs with disc 4 on the destination peg. Then we may choose\nwether to move disc 4 onto disc 2 or disc 3 and thus there are even\n2 different choices for distributing the first 3 discs before moving disc\n1. To find the least number of moves required and how many optimal\ndistributions there are we will consider the concept of journey numbers.\nDefinition 2: If a stack is built such that each consecutive disc moves\nthe least number of moves possible provided that the stack itself is still\nbuilt in a minimum number of moves then the disc specific journey\nnumber, jk (i) = number of moves made by the i : th largest disc in the\nstack.\nDefinition 3: Jk (n) = max jk (i) is known as the journey number\ni\u2264n\n\nof a stack with height n, or simply the journey number.\nWhen it is clear from the context the index will be dropped.\nProposition 1: j(n) \u2265 j(n \u2212 1)\nProof\nSuppose j(n) < j(n \u2212 1). Then by the blocking lemma we\nhave jk (i) = jk\u22121 (i) for all i < n which is only possible if jk\u22121 (i) = 2 for\nall 1 < i < n. But j(n) cannot be less than 2 by the blocking lemma\nwhich contradicts that j(n) < j(n \u2212 1). Q.E.D.\nCorollary 1: J(n) = j(n)\nProof\n\nThis is obvious since by proposition 1 max j(i) = j(n).\ni\u2264n\n\nQ.E.D.\nCorollary 2: Jk (n) = T (n, k) \u2212 T (n \u2212 1, k)\n5\n\n\fProof\n\nThis follows directly from corollary 1. Q.E.D.\n\nWhat we want now is some way to calculate the journey number. If\nwe can find a formula to calculate the journey number we also find a\nway to calculate S(n, k, m) and as such the number of moves required\nto solve the general Tower of Hanoi problem. Furthermore we will find\nhow we can distribute the first n\u22121 discs before moving the n : th disc.\nDoubling lemma: Either J(n) = J(n \u2212 1) or J(n) = 2J(n \u2212 1).\nProof\nIt is clear that sometimes J(n) = J(n \u2212 1) and sometimes\nnot. We need to show that when equality doesn't hold J(n) = 2J(n\u22121).\nIt is clear that J(n) \u2264 2J(n \u2212 1) since we can always stack disc n on\nto disc n \u2212 1. Suppose J(n \u2212 1) < J(n) < 2J(n \u2212 1). Then we must\nhave Jk (i) = Jk\u22121(i) for all i \u2264 n \u2212 2. This is only possible if Jk (i) = 2\nfor all 2 \u2264 i \u2264 n \u2212 2. But from the bifurcation theorem and corollary 2\nwe see that J(n) is even and it is easily verified that if Jk\u22121 (n \u2212 2) = 2\nthen Jk (n \u2212 1) = 2 which means that J(n) = 3. A contradiction and\nwe are done. Q.E.D.\nThe\nJourney\nJ(n)\u0013= 2r , whenever\n\u0013 theorem:\n\u0012\n\u0012\nk+r\u22122\nk+r\u22123\n.\n<n\u2264\nk\u22122\nk\u22122\nProof\nFrom the doubling lemma we know that J(n) = 2r for some\nr and as such we only need to prove that r is as stated. It is clear that\nthe statement is true for J(1) = 1 and Jk (n) = 2 if k > n > 1. Suppose\nthe statement is true for Jk (m) = 2s with s < r. By the bifurcation\ntheorem we have J(n) = 2 max Jk\u2212i (ni ) with 2r\u22122 \u2264 Jk\u2212i (ni ) \u2264 2r\u22121\ni\u2208I\nX\nwhere I = {0, 1, 2, * * * , k \u2212 2}. Now n = 1 +\nni so we can calculate\ni\n\nthe maximum possible value of n.\n\u0013\n\u0013 \u0012\n\u0013\n\u0012\n\u0013 \u0012\n\u0012\nk+r\u22122\nr\u22121\nk+r\u22124\nk+r\u22123\n=\n+***+\n+\nn=1+\nk\u22122\n1\nk\u22123\nk\u22122\n\nThe above calculation is actually easiest seen in pascals triangle, however it is not hard to verify it algebraically either. We have thus established the upper bound for n. As for the lower bound we already know\nit since it must be the upper bound for r \u2212 1. Thus the induction is\ncomplete and the theorem is proven. Q.E.D.\n\n6\n\n\fConsequences of the Journey theorem\nFirst consequence of the Journey theorem is that it allows us to calculate the minimum number of moves quite readily. Consider these\nexamples:\nExample 1: Calculate the minimum number of moves for n = 10\nand k = 4.\nWe calculate the journey numbers: J(1) = 1; J(s) = 2, 2 \u2264 s \u2264 3;\nJ(s) = 4, 4 \u2264 s \u2264 6; J(s) = 8, 7 \u2264 s \u2264 10. We have that it takes\n10\nX\nJ(i) = 1 * 1 + 2 * 2 + 4 * 3 + 8 * 4 = 1 + 4 + 12 + 32 = 49 moves.\ni=1\n\nExample 2: Calculate the minimum number of moves for n = 1000\nand k = 30.\nSame as in Example 1 we calculate journey numbers. J(1) = 1;\nJ(s) = 2, 2 \u2264 s \u2264 29; J(s) = 4, 30 \u2264 s \u2264 15 * 29 = 435; J(s) =\n8, 436 \u2264 s \u2264 4495. We have that the minimum number of moves is\n8 * (1000 \u2212 435) + 4 * (435 \u2212 29) + 2 * (29 \u2212 2) + 1 = 6317. Notice that\nthis number is quite a bit smaller that the number of moves it takes to\nsolve the original Towers of Hanoi problem with 13 discs.\nCalculating the number of optimal solutions is hard. Instead of doing this I decided to find a way of calculating the number of main\ndistributions. This is the first step to calculate the actual number of\noptimal solutions and a necessary one, as far as I can tell. A main\ndistribution is the distribution when all but the largest disc has been\nmoved from the source and the destination peg is empty, i.e. there are\nno discs on that peg, and we solve the puzzle in the minimum number\nof moves. We identify any two distributions that has the same stack\nheights. We shall use journey numbers to find the number of main\ndistributions.\nExample 3: Consider the situation when we have 8 discs and 5 pegs.\nThe journey numbers are J(1) = 1, J(2 \u2212 4) = 2, J(5 \u2212 10) = 4. Now if\nwe would have had 10 discs there would have been only one distribution\nsince all the stacks in the main distribution would have had the maximum number of discs for their journey numbers. Now however we have\nsome freedom of placement. We know that in the main distribution\nwe have no stack with journey number greater than 2 and as such we\n\n7\n\n\fcan calculate each stacks maximum height. The first stack cannot be\nhigher than 4 since J5 (5) = 4. The second stack cannot be higher than\n3 since J4 (4) = 4 and the last stack cannot be higher than 2 for a similar reason. We can therefor construct stacks of height 4, 2 and 1 or 3,\n3 and 1 or 3, 2 and 2. We therefor have 3 main distributions in this case.\nAs is clearly noted, journey numbers are crucial in determining the\nnumber of main distributions. While this example was easy, the same\nmethod can be used in more complicated situations as well.\n\nConcluding remarks\nIt is my belief that the tower distribution lemma can be extended to\nmore general Hanoi problems, i.e. problems with the same rules but\nwith different connection between the pegs. In general one may consider a peg as a vertex in a graph. It is my hope that journey numbers\nmay be useful in other Hanoi problems as well. I believe them to be key\nin finding the number of optimal solutions and the number of moves\nrequired to solve such problems. If any of the ideas presented in this\npaper should come to good use it would make me sincerely happy.\n\n8\n\n\fREFERENCES\n\n[Arif] Bijoy Rahman Arif,\nOn the Footsteps to Generalized Tower of Hanoi Strategy\nhttp://arxiv.org/pdf/1112.0631v1.pdf\n[Wiki] Wikipedia article\nhttp://en.wikipedia.org/wiki/Tower of Hanoi\n\n9\n\n\f"}