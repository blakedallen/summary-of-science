{"id": "http://arxiv.org/abs/quant-ph/0307055v1", "guidislink": true, "updated": "2003-07-08T09:39:02Z", "updated_parsed": [2003, 7, 8, 9, 39, 2, 1, 189, 0], "published": "2003-07-08T09:39:02Z", "published_parsed": [2003, 7, 8, 9, 39, 2, 1, 189, 0], "title": "Parallel Quantum Computing in a Single Ensemble Quantum Computer", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=quant-ph%2F0307144%2Cquant-ph%2F0307035%2Cquant-ph%2F0307208%2Cquant-ph%2F0307231%2Cquant-ph%2F0307196%2Cquant-ph%2F0307106%2Cquant-ph%2F0307209%2Cquant-ph%2F0307087%2Cquant-ph%2F0307078%2Cquant-ph%2F0307067%2Cquant-ph%2F0307161%2Cquant-ph%2F0307124%2Cquant-ph%2F0307018%2Cquant-ph%2F0307121%2Cquant-ph%2F0307019%2Cquant-ph%2F0307050%2Cquant-ph%2F0307027%2Cquant-ph%2F0307017%2Cquant-ph%2F0307240%2Cquant-ph%2F0307107%2Cquant-ph%2F0307051%2Cquant-ph%2F0307151%2Cquant-ph%2F0307010%2Cquant-ph%2F0307008%2Cquant-ph%2F0307221%2Cquant-ph%2F0307233%2Cquant-ph%2F0307102%2Cquant-ph%2F0307120%2Cquant-ph%2F0307170%2Cquant-ph%2F0307140%2Cquant-ph%2F0307181%2Cquant-ph%2F0307190%2Cquant-ph%2F0307005%2Cquant-ph%2F0307210%2Cquant-ph%2F0307218%2Cquant-ph%2F0307229%2Cquant-ph%2F0307016%2Cquant-ph%2F0307215%2Cquant-ph%2F0307074%2Cquant-ph%2F0307079%2Cquant-ph%2F0307075%2Cquant-ph%2F0307001%2Cquant-ph%2F0307142%2Cquant-ph%2F0307068%2Cquant-ph%2F0307214%2Cquant-ph%2F0307153%2Cquant-ph%2F0307006%2Cquant-ph%2F0307217%2Cquant-ph%2F0307166%2Cquant-ph%2F0307175%2Cquant-ph%2F0307023%2Cquant-ph%2F0307058%2Cquant-ph%2F0307082%2Cquant-ph%2F0307212%2Cquant-ph%2F0307038%2Cquant-ph%2F0307004%2Cquant-ph%2F0307137%2Cquant-ph%2F0307163%2Cquant-ph%2F0307055%2Cquant-ph%2F0307200%2Cquant-ph%2F0307179%2Cquant-ph%2F0307152%2Cquant-ph%2F0307045%2Cquant-ph%2F0307145%2Cquant-ph%2F0307160%2Cquant-ph%2F0307015%2Cquant-ph%2F0307071%2Cquant-ph%2F0307237%2Cquant-ph%2F0307115%2Cquant-ph%2F0307052%2Cquant-ph%2F0307132%2Cquant-ph%2F0307009%2Cquant-ph%2F0307099%2Cquant-ph%2F0307183%2Cquant-ph%2F0307063%2Cquant-ph%2F0307076%2Cquant-ph%2F0307159%2Cquant-ph%2F0307084%2Cquant-ph%2F0307136%2Cquant-ph%2F0307097%2Cquant-ph%2F0307127%2Cquant-ph%2F0307180%2Cquant-ph%2F0307206%2Cquant-ph%2F0307228%2Cquant-ph%2F0307148%2Cquant-ph%2F0307182%2Cquant-ph%2F0307109%2Cquant-ph%2F0502110%2Cquant-ph%2F0502065%2Cquant-ph%2F0502085%2Cquant-ph%2F0502179%2Cquant-ph%2F0502124%2Cquant-ph%2F0502147%2Cquant-ph%2F0502113%2Cquant-ph%2F0502010%2Cquant-ph%2F0502107%2Cquant-ph%2F0502133%2Cquant-ph%2F0502178%2Cquant-ph%2F0502078%2Cquant-ph%2F0502053%2Cquant-ph%2F0502079&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Parallel Quantum Computing in a Single Ensemble Quantum Computer"}, "summary": "We propose a parallel quantum computing mode for ensemble quantum computer.\nIn this mode, some qubits can be in pure states while other qubits in mixed\nstates. It enables a single ensemble quantum computer to perform\n$\"$single-instruction-multi-data\" type of parallel computation. In Grover's\nalgorithm and Shor's algorithm, parallel quantum computing can provide\nadditional speedup. In addition, it also makes a fuller use of qubit resources\nin an ensemble quantum computer. As a result, some qubits discarded in the\npreparation of an effective pure state in the Schulman-Varizani, and the\nCleve-DiVincenzo algorithms can be re-utilized.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=quant-ph%2F0307144%2Cquant-ph%2F0307035%2Cquant-ph%2F0307208%2Cquant-ph%2F0307231%2Cquant-ph%2F0307196%2Cquant-ph%2F0307106%2Cquant-ph%2F0307209%2Cquant-ph%2F0307087%2Cquant-ph%2F0307078%2Cquant-ph%2F0307067%2Cquant-ph%2F0307161%2Cquant-ph%2F0307124%2Cquant-ph%2F0307018%2Cquant-ph%2F0307121%2Cquant-ph%2F0307019%2Cquant-ph%2F0307050%2Cquant-ph%2F0307027%2Cquant-ph%2F0307017%2Cquant-ph%2F0307240%2Cquant-ph%2F0307107%2Cquant-ph%2F0307051%2Cquant-ph%2F0307151%2Cquant-ph%2F0307010%2Cquant-ph%2F0307008%2Cquant-ph%2F0307221%2Cquant-ph%2F0307233%2Cquant-ph%2F0307102%2Cquant-ph%2F0307120%2Cquant-ph%2F0307170%2Cquant-ph%2F0307140%2Cquant-ph%2F0307181%2Cquant-ph%2F0307190%2Cquant-ph%2F0307005%2Cquant-ph%2F0307210%2Cquant-ph%2F0307218%2Cquant-ph%2F0307229%2Cquant-ph%2F0307016%2Cquant-ph%2F0307215%2Cquant-ph%2F0307074%2Cquant-ph%2F0307079%2Cquant-ph%2F0307075%2Cquant-ph%2F0307001%2Cquant-ph%2F0307142%2Cquant-ph%2F0307068%2Cquant-ph%2F0307214%2Cquant-ph%2F0307153%2Cquant-ph%2F0307006%2Cquant-ph%2F0307217%2Cquant-ph%2F0307166%2Cquant-ph%2F0307175%2Cquant-ph%2F0307023%2Cquant-ph%2F0307058%2Cquant-ph%2F0307082%2Cquant-ph%2F0307212%2Cquant-ph%2F0307038%2Cquant-ph%2F0307004%2Cquant-ph%2F0307137%2Cquant-ph%2F0307163%2Cquant-ph%2F0307055%2Cquant-ph%2F0307200%2Cquant-ph%2F0307179%2Cquant-ph%2F0307152%2Cquant-ph%2F0307045%2Cquant-ph%2F0307145%2Cquant-ph%2F0307160%2Cquant-ph%2F0307015%2Cquant-ph%2F0307071%2Cquant-ph%2F0307237%2Cquant-ph%2F0307115%2Cquant-ph%2F0307052%2Cquant-ph%2F0307132%2Cquant-ph%2F0307009%2Cquant-ph%2F0307099%2Cquant-ph%2F0307183%2Cquant-ph%2F0307063%2Cquant-ph%2F0307076%2Cquant-ph%2F0307159%2Cquant-ph%2F0307084%2Cquant-ph%2F0307136%2Cquant-ph%2F0307097%2Cquant-ph%2F0307127%2Cquant-ph%2F0307180%2Cquant-ph%2F0307206%2Cquant-ph%2F0307228%2Cquant-ph%2F0307148%2Cquant-ph%2F0307182%2Cquant-ph%2F0307109%2Cquant-ph%2F0502110%2Cquant-ph%2F0502065%2Cquant-ph%2F0502085%2Cquant-ph%2F0502179%2Cquant-ph%2F0502124%2Cquant-ph%2F0502147%2Cquant-ph%2F0502113%2Cquant-ph%2F0502010%2Cquant-ph%2F0502107%2Cquant-ph%2F0502133%2Cquant-ph%2F0502178%2Cquant-ph%2F0502078%2Cquant-ph%2F0502053%2Cquant-ph%2F0502079&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We propose a parallel quantum computing mode for ensemble quantum computer.\nIn this mode, some qubits can be in pure states while other qubits in mixed\nstates. It enables a single ensemble quantum computer to perform\n$\"$single-instruction-multi-data\" type of parallel computation. In Grover's\nalgorithm and Shor's algorithm, parallel quantum computing can provide\nadditional speedup. In addition, it also makes a fuller use of qubit resources\nin an ensemble quantum computer. As a result, some qubits discarded in the\npreparation of an effective pure state in the Schulman-Varizani, and the\nCleve-DiVincenzo algorithms can be re-utilized."}, "authors": ["Gui Lu Long", "Li Xiao"], "author_detail": {"name": "Li Xiao"}, "author": "Li Xiao", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1103/PhysRevA.69.052303", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/quant-ph/0307055v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/quant-ph/0307055v1", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "4 pages, no figure", "arxiv_primary_category": {"term": "quant-ph", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "quant-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/quant-ph/0307055v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/quant-ph/0307055v1", "journal_reference": "Physical Review A 69, 052303 (2004)", "doi": "10.1103/PhysRevA.69.052303", "fulltext": "Parallel Quantum Computing in a Single Ensemble Quantum Computer\nGui Lu Long1,2,3,4, L. Xiao1,2\n1\n\nDepartment of Physics, Tsinghua University, Beijing 100084, China\nKey Laboratory For Quantum Information and Measurements, Beijing 100084,China\nCenter for Atomic and Molecular Nanosciences, Tsinghua University, Beijing 100084, China\n(November 24, 2018)\n2\n\narXiv:quant-ph/0307055v1 8 Jul 2003\n\n3\n\nWe propose a parallel quantum computing mode for ensemble quantum computer. In this mode,\nsome qubits can be in pure states while other qubits in mixed states. It enables a single ensemble quantum computer to perform \"single-instruction-multi-data\" type of parallel computation.\nIn Grover's algorithm and Shor's algorithm, parallel quantum computing can provide additional\nspeedup. In addition, it also makes a fuller use of qubit resources in an ensemble quantum computer. As a result, some qubits discarded in the preparation of an effective pure state in the\nSchulman-Varizani, and the Cleve-DiVincenzo algorithms can be re-utilized.\n\nQuantum computer realization schemes can be classified into single-quantum-computer type where only a single\nquantum system is used, e.g. the trap-ion [1], and ensemble quantum computer(EQC) type such as the liquid NMR\nscheme [2,3] and the solid state scheme [4] where many copies of quantum systems are used. Quantum computer uses\nsuperposition of states and possesses quantum parallelism which provides enormous computing power. It achieves\nexponential speedup over existing classical computing algorithms in prime-factorization [5] and simulating quantum\nsystems [6]. However for some problems the speedup is not exponential. For instance, Grover's algorithm [7], shown\noptimal [8], achieves square-root speedup for unsorted database search. In some other problems, quantum computer\ncan not achieve any speedup [9]. It is natural to explore additional speedup by making quantum computers working\nin parallel, as in classical computation. By running many identical quantum computers in parallel, unsorted database\nsearch can be speeded up greatly [10,11]. Using Liouville space computation [12], exponentially fast search can\nbe achieved [13,14]. The speedup is achieved by using more resources. EQC is a potential place to exploit this\nparallelism because there are many molecules in it. Each molecule is potentially a single quantum computer, and\nan EQC is potentially a collection of that number of quantum computers. At present, an EQC is used as a singlequantum-computer using effective pure state technique [2,3], apart from the lack of projective measurement. Though\npreparing effective pure state is tedious, Cleve and DiVincenzo [17], Schulman and Varizani [18] have proposed efficient\nalgorithms to produce a portion of qubits in a pure state and discard some qubits in the completely mixed states.\nIn this Letter, we introduce the idea of parallel quantum computing(PQC) in a single EQC. In the PQC a subset of\nqubits is prepared in pure state while the other qubits in mixed state. In one hand, this enables the \"single-instructionmulti-data\" type of parallel computation in a single EQC for additional speedup, example for the Grover and the\nShor algorithms. In the other hand, the PQC uses qubits in mixed state and makes a fuller use of the qubit resources.\nFor instance those qubits discarded in the Cleve-DiVincenzo [17] and the Schulman-Varizani [18] algorithms can now\nbe re-used. The PQC is the classical parallel operation of many single-quantum-computers.\nWe introduce notations first. We call a term in a superposed state as a component, for instance |\u03c80 i in a|\u03c80 i+b|\u03c81 i;\na term in a density matrix a constituent, for instance |\u03c80 ih\u03c80 | in p0 |\u03c80 ih\u03c80 | + p1 |\u03c81 ih\u03c81 | + p2 |\u03c82 ih\u03c82 |. We can divide\nan n number qubits system into two parts, one with n1 qubits and the other with n2 qubits, and n1 + n2 = n.\nThe state of this n qubits system may be represented by |j1 , j2 i where |j1 i is the first n1 qubits state and |j2 i\nis the latter n2 qubits state. We can also combine the two parts to represent the state as |j12 i \u2261 |j1 j2 i. We use\ninterchangeably binary and decimal representations. For instance a 4 qubits state with n1 = n2 = 2 can be represented\nas |01, 10i = |0110i = |1, 2i = |6i, where the first and third are in the separated binary and decimal forms, whereas\nthe second and fourth are in the combined binary and decimal forms respectively.\nWe then describe the ensemble measurement which is a generalization of that used in Liouville space computation\n[12,15]. Assume that an EQC can detect the transition signal from a single molecule. For a molecule with n + 1\nqubits, one qubit is used as the ancilla qubit and is labelled 0. The Hamiltonian of the ancilla qubit is\nX\n2\u03c0J0k I0z Ikz ,\n(1)\nH = \u03c90 I0z +\nki0\n\nwhere J0k is the J-coupling constant between the ancilla and the k-th qubit. Ijz is the z-component of the spin\noperator for the j-th qubit. The transition frequency of the ancilla qubit depends on the state of the remaining n\nqubits. If the ancilla qubit transition occurs with the n qubits in state |i1 i2 ...in i, its transition frequency is then\n1\n\n\fPn\n\u03c90 + k=1 \u03c0J0k (\u22121)ik . This transition produces a peak in the ancilla\nPnqubit spectrum. For instance, the n qubits\nstate |i1 i2 ...in i = |00...0i corresponds to P\nthe highest frequency \u03c90 + k=1 \u03c0J0k , and the state |i1 i2 ...in i = |11...1i\nn\ncorresponds to the lowest frequency \u03c90 \u2212 k=1 \u03c0J0k . Thus one can tell the state of the n qubits |i1 i2 ...in i by looking\nat this sign of the multiplet component. Moreover, the ancilla qubit state itself is represented by the spectral peak\ndirection. If the ancilla qubit is in the |0i(|1i) state before transition, then the spectral peak is upward(downward).\nPN \u22121\nThe state in the PQC can be a superposition of basis states, say j22=0 cj1 ,j2 |j1 , j2 i. In this state the first n1 qubits\nare in the |j1 i and the latter n2 qubits are in superposed state of the n2 -register. When we measure the ancilla qubit,\nwe will observe only one transition. The transition frequency is random in one of the frequencies corresponding to\nthe n2 qubits states in states |0i,* * *, |N2 \u2212 1i, because the n qubits state will collapse into one of N2 basis states\n|j1 , j2 i = |j1 j2 i randomly with probability |cj1 ,j2 |2 . When the superposed state is transformed into a single basis state,\nthe transition frequency will be definite and determined by equation (1). This ancilla qubit spectrum method will\nserve as the ensemble measurement throughout this paper. It can tell the ancilla qubit state by the peak direction,\nand the n qubits state by the transition frequency.\nOur quantum computer model is an EQC with N1 = 2n1 molecules. Each molecule can be operated and measured.\nIt has n + m + 1 qubits. They are divided into 3 parts: 1 ancilla qubit, a function register with m qubits, and an\nargument register with n qubits. The argument register is further divided into two parts: one part with n1 qubits\ncalled n1 -register and another part with n2 qubits called n2 -register, and n = n1 +n2 . In general before a computation,\nthe function register and ancilla qubit are prepared in the pure state |0i. The argument register is in a mixed state\nwith N1 constituent. Each constituent is characterized by the state of the n1 -register. The n2 -register in a given\nconstituent is in a superposed state of its N2 = 2n2 basis states. The density operator of the ensemble is\n\uf8ee\n\uf8f9\uf8ee\n\uf8f9\nNX\nNX\nNX\n1 \u22121\n2 \u22121\n2 \u22121\n1\n\uf8f0\ncj ,j |0, j1 , j2 i\uf8fb \uf8f0\nc\u2217j1 ,j2 h0, j1 , j2 |\uf8fb ,\n(2)\n\u03c1=\nN1 j =0 j =0 1 2\nj =0\n1\n\n2\n\n2\n\nwhere in |i, j1 , j2 i, i, j1 and j2 are the states for the function, the n1 - and the n2 - registers respectively and\nPN2 \u22121\n2\nj2 =0 |cj1 ,j2 | = 1. The ancilla qubit state is not written out explicitly. In this EQC, there are N1 constituents and\nPN \u22121\nN1 molecules. Each molecule is in a different state, j22=0 cj1 ,j2 |0, j1 , j2 i, which is a superposition of N2 number\nof computational basis states. In general, a quantum computation performs unitary transformations on both the\nargument and the function registers. Denoting this transformation as Uc , the quantum computation on state (2) will\nbe\n\uf8ee\n\uf8f9\uf8ee\n\uf8f9\nNX\nNX\nNX\n1 \u22121\n2 \u22121\n2 \u22121\n1\n\uf8f0\n\u03c1 \u2192 \u03c1c = Uc \u03c1Uc\u22121 = n1\ncj ,j Uc |0, j1 , j2 i\uf8fb \uf8f0\nc\u2217j1 ,j2 h0, j1 , j2 |Uc\u2020 \uf8fb .\n(3)\n2 j =0 j =0 1 2\nj =0\n1\n\n2\n\n2\n\nAn ensemble measurement is then performed to read out the result.\nThe quantum computation represented in Eq. (3) on the ensemble (2) is defined as the parallel quantum computing.\nIn fact it is N1 quantum computers working in parallel. The computation instruction Uc is the same for all molecules,\nbut the databases, numbers represented by different molecules, are different. Hence, the PQC is the single-instructionmulti-data type of parallel computation in classical computation. The state (2) is the most general initial state,\nand\nmost applications, the following simplified state is sufficient: the n1 -register\nthe\np complete mixed state\nPN1 in\nPNin\n\u22121\n2 \u22121\n1/N2 |j2 i. In this case,\n(1/N\n)|j\nihj\n|\nand\nthe\nn\n-register\nin\nthe\nequally\nweighted\nsuperposed\nstate\n2\nj1 =0\nj2 =0\n\u221a1 1 1\ncj1 ,j2 = 1/ N2 for all possible j1 and j2 .\nNow we apply the PQC to the Grover algorithm. Suppose the marked state is |j10 j20 i. Only one qubit is required\nfor the function register in this algorithm. This qubit is also used as the ancilla qubit for the ensemble measurement.\nPreparing the function register in the |0i state, the n2 -register in the equally weighted superposed state, and the\nn1 -register in the complete mixed state, we have then\n\uf8ee\n\uf8f9\uf8ee\n\uf8f9\nr\nN1 \u22121 r\nNX\nNX\n2 \u22121\n2 \u22121\n1 X\n1\n1\n\uf8f0\n\u03c1=\n|0, j1 , j2 i\uf8fb \uf8f0\nh0, j1 , j2 |\uf8fb .\n(4)\nN1 j =0\nN2 j =0\nN2 j =0\n1\n\n2\n\n2\n\nIn this way, we divide the database into N1 sub-databases, each with N2 items. Apply a zero-failure rate Grover\nalgorithm\n[16] to the ensemble with J iterations, where J \u2212 1 is the integer part of ( \u03c02 \u2212 \u03b2)/(2\u03b2) and is approximately\n\u221a\n\u03c0 N2 /4 and \u03b2 = arcsin \u221a1N . In this modified Grover algorithm, each iteration consists of four steps :1) apply the\n2\nquery to the whole n qubits argument register, on condition that the query is satisfied, rotates the phase of the marked\n2\n\n\fstate through angle \u03c6 = 2 arcsin\n\n\u0011\n\u0010\u221a\n\u03c0\n(\u03c6 is slightly smaller than \u03c0); 2) make a Hadmard transformation\nN2 sin (4J+6)\n\non the n2 -register; 3) make a phase rotation through angle \u03c6 on the |0...0i basis state of the n2 -register; 4) make a\nHadmard transformation on the n2 -register again. If a sub-database does not contain the marked state, the above\noperation does not produce any observable effect. The constituent that contains the marked item has its n1 -register in\nstate |j10 i. The modified Grover algorithm transforms its n2 -register from the equally weighted superposed state into a\nsingle state |j20 i so that the constituent is in the marked state |j10 j20 i. At the end of the modified Grover algorithm, one\nmakes a further query and on condition thath the query is satisfied,\na flip on the function\nregister. The density\ni hmakes\ni\nPN2 \u22121 p\nP\nPN2 \u22121 p\nmatrix becomes \u03c1f = (1/N1 )|0ih0| j1 6=j 0\n1/N2 |j1 j2 i\n1/N2 hj1 j2 | + (1/N1 )|1ih1||j10 j20 ihj10 j20 |.\nj2 =0\nj2 =0\n1\nFinally, measuring the ancilla qubit, one obtains N1 transition peaks in the spectrum, each from a constituent. For\nthose constituents without the marked item, each peak is upward and its transition frequency is random in one of\nthose corresponding to states |j1 0i,* * *, |j1 N2 \u2212 1i. The constituent with the marked item is in a unique state and\nproduces a downward peak with definite frequency corresponding to the state |j10 j20 i. It finds the marked state with\ncertainty.\np\n\u221a\n\u221a\nThe number of queries is about \u03c0 N2 /4 = \u03c0 N/N1 /4. This is only 1/ N1 of that a standard Grover algorithm\nrequires. This is so because there are N1 single-quantum-computers\nsearching in parallel, each in a reduced database\np\nwith only N/N1 = N2 items. It requires \u03c0 N/N1 /4 steps for each single- quantum-computer\nto complete the search.\n\u221a\nIn one extreme n1 = 0, there is only a single molecule, the number of query is \u03c0 N /4, which is just that for the\nstandard Grover algorithm. On the other extreme, if n1 = n, n2 = 0, the EQC contains N = 2n molecules in\ncompletely mixed state, only a single query is needed. This is just the Liouville space computer fetching algorithm\nproposed recently [14]. In Liouville space computation [12], no superposition of the computational basis states is used.\nEach molecule can also be viewed as a reversible classical computer that can be realized quantum mechanics [19],\nor simply be implemented directly using classical Turing machine with three tapes [20]. If n1 = n \u2212 1 and n2 = 1,\nthe algorithm finds the marked item with just two queries. Clearly, the speedup is achieved at the expense of more\nmolecules. The number of queries Nq and the number of molecules N1 satisfy Nq2 \u00d7 N1 =constant.\nIf we fix the number of molecules in an EQC, say at NE . Then in order each constituent is occupied by at least one\nmolecule, n1 can not be larger than log2 NE , otherwise there will be constituent without any occupying molecules. We\nassume that the qubit number n is very large, NE \u2264 2n . The maximum value for n1 is log2 NE . A natural estimate\nof the bound is to set NE = NA , the Avogadro constant. This sets to n1 \u2264 79. In principle, we can vary n1 from 0 to\nlog2 NE so that the functioning of the EQC changes. When n1 = 0, all NE molecules are in the same pure state, the\nEQC works as a single-quantum-computer. Most NMR EQC quantum computation experiments done so far manage\nto get this effect using the effective pure state technique. When n1 = 1, the ensemble is divided into two sub-ensembles\neach with NE /2 molecules. Each sub-ensemble works as a single quantum computer. The whole ensemble works as\ntwo single-quantum-computers in parallel. When n1 = log2 NE , the ensemble works as NE single-quantum-computers\nworking in parallel.\nIn the above discussion, a single molecule and an ensemble of many molecules in pure state are all treated as a\nsingle-quantum-computer. We point here that the EQC can do more by implementing the parallel operation proposed\nin Refs. [10,11]. In these work, the Grover algorithm is run on some k identical quantum computers in parallel. It\nis equivalent to repeating the algorithm in a single-quantum-computer k times. We call this parallel algorithm as\nrepetition parallel algorithm(RPA). For instance, in Ref. [10], by running one iteration of Grover's algorithm on k\nnumber of identical quantum computers simultaneously and then measuring these quantum computers simultaneously,\nthe marked state can be found by picking out the one most quantum computers point to. Because the marked state\nwill appear 9k/N times in the outcome, whereas any other state appears k/N times. When k = O(N log N ), the\nprobability that the marked state occurs more than any other state approaches unity. In Ref. [11], k identical quantum\ncomputers are searching in parallel. In each quantum computer, the probability for finding marked state is amplified.\nBecause there are k quantum computers,\n\u221a by using the majority-vote rule, one needs less iterations on each quantum\ncomputer. The speedup scales as O( k). The extent of speedup is the same as the PQC algorithm. But there are\nseveral differences between the PQC and the RPA: 1) in the PQC, the database for each quantum computer is reduced\nfrom N to N/N1 , whereas in repetition parallelism, the database size is always N ; 2) in the PQC, some n1 qubits\nare in mixed state, whereas in the RPA, all qubits are in pure states. This gives the PQC the advantage to make a\nfuller use of qubit resources as we will explain later; 3) the PQC algorithm is of full success rate whereas the RPA is\nprobabilistic. To overcome fluctuation, it requires more resource than that in the PQC. For instance, for single query\nsearching, the PQC algorithm requires N molecules whereas the algorithm in Ref. [10] requires O(N log N ) molecules.\nIn reality, some number, say Ns , of molecules has to be used as a logical molecule. A logical molecule can be viewed\nas the minimum number of molecules that acts as a single-quantum-computer. Then a molecule in the preceding\ndiscussion should be understood as a logical molecule. The number of logical molecules in an EQC is NE /Ns . In\n3\n\n\fpractice, an NMR EQC contains a large number of molecules, say 1016 . Though with effective pure state technique,\nthe number of molecules contributing to quantum computation is reduced, there are still 1010 . This is much more\nthan that needed for a logical molecule. Thus in ensemble quantum computation with effective pure state technique,\nit is possible to see the effect of repetition parallelism. Indeed, it has been pointed out that in ensemble quantum\ncomputation, unsorted database search can be faster than Grover algorith [21] by trading space resources with time\nresources, a reflection of the repetition parallelism. In implementing the PQC, effective pure state technique can also\nbe used to prepare the n2 + m + 1 qubits in pure state.\nShor algorithm can also be run in the PQC. The aim is to find the period r of ax Mod Nb . We need two registers,\none argument register with n qubits where Nb2 < 2n < 2Nb2 , and one function register with similar size. We divide the\nargument register into n1 qubits in the complete mixed state, and n2 qubits in pure state. The ensemble is prepared in\nstate described by (4). We perform ax Mod Nb and store the results in the function register. After performing Fourier\ntransform on only the n2 -register, the states in the n2 -register becomes identical in all constituents. By measuring\nthe n2 -register using an ancilla qubit, the period in the n2 -register N2 /r can be found. The speedup is achieved due\nto two factors. First, the Fourier transform is done on a smaller space in the n2 -register, and it requires only O(n22 )\nsteps as compared with O(n2 ) steps in standard Shor algorithm. Secondly, there are N1 constituents, therefore there\nare N1 transitions by a single ensemble measurements. In standard Shor algorithm, several runs of the algorithm\nare required. In the PQC, this can be reduced by a factor of 1/N1 . We illustrate this in a simple example with\nNb = 15, a = 7, n = 8, n1 = 2, n2 = 6. Shor's algorithm in a single-quantum-computer yields the following state\n|\u03c8i = (|0i + |64i + |128i + ...)(|1i + |7i + |4i + |13i), and the period in the argument register is q/r = 64 where q = 256.\nWith the PQC, the resulting state is \u03c1 = [(|1i + |7i + |4i + |13i)]([00] + [01] + [10] + [11])|[(|0i + |16i + |32i + |48i)].\nUpon measurement, 4 transitions from the n2 -register appear, and this is equivalent to running the algorithm with\n6 qubits 4 times. But for the PQC operation of Shor algorithm, there is a restriction on n1 : it should not be large,\notherwise the Fourier transformation in n2 qubits will not achieve the desired destructive interference.\nThe PQC uses mixed state in general. One can take advantage of this to make a fuller use of the qubit resources\nin EQC. In the Cleve-DiVincenzo\n[17], and the Schulman-Varizani [18] algorithms, O(n) qubits are prepared in pure\n\u221a\nstate while some qubits (O( n) in [17] and O(n) in [18]) have to be in the completely mixed state and be discarded.\nIn the PQC, these qubits can be re-used. This gives a natural criteria for dividing n into n1 and n2 . We can use these\ndiscarded qubits as the n1 -register. This increases considerably the number of qubits usable in an EQC.\nThis work is supported in part by China National Science Foundation, the National Fundamental Research Program,\nContract No. 001CB309308 and the Hang-Tian Science foundation. Helpful discussions with Prof. A. Zeilinger, Drs\nJ. W. Pan, C. Brukner, Ian Glendinning are gratefully acknowledged.\n\n[1]\n[2]\n[3]\n[4]\n[5]\n[6]\n[7]\n[8]\n[9]\n[10]\n[11]\n[12]\n[13]\n[14]\n[15]\n[16]\n[17]\n[18]\n[19]\n[20]\n[21]\n\nS. I. Cirac, P. Zoller, Phys. Rev. Lett., 74, 4019(1995)\nD. G. Cory, A. F. Fahmy, and T. F. Havel, PNAS 94, 1634(1997).\nN. A. Gershenfeld and I. L.Chuang, Science 275, 350 (1997).\nT. D. Ladd et. al.,Phys. Rev. Lett. 89,017901 (2002).\nPeter W. Shor, Proceedings of the 35th Annual IEEE Symposium on Foundations of Computer Science, 1994, pp. 124-134.\nS. Lloyd, Science 273, 1073 (1996).\nL. K. Grover, Phys. Rev. Lett., 79, 325(1997).\nM. Boyer, G. Brassard, P. Hoyer, and A. Tapp, Fortschr. Phys. 46, 493 (1998).\nDiVincenzo and D. Loss, J. Magnetism and Magnetic Matls 200, 202 (1999), and references therein.\nL. K. Grover, Phys. Rev. Lett. 79, 4709 (1998).\nR. M. Gingrich, C. P. Williams, and N. J. Cerf, Phys. Rev. A61, 052313 (2000).\nZ. L. M\u00e1di, R. Br\u00fcswchweiler and R. R. Ernst, J. Chem. Phys., 109,10603,(1998).\nR. Br\u00fcschweiler, Phys. Rev. Lett., 85, 4815 (2000).\nL.Xiao and G. L. Long, Phys. Rev. A66, 052320 (2002).\nL. Xiao, G. L. Long, H. Y. Yan, and Y. Sun, J. Chem. Phys.117, 3310 (2002).\nG. L. Long, Phys. Rev. A64,022307 (2001).\nR. Cleve and D. P. DiVincenzo, Phys. Rev. A54,2636 (1996).\nL. J. Schulman and U. Vazirani, Proc. 31'st ACM STOC (Symp. Theory of Computing), 322, 1999.\nP. Benioff, Phys. Rev. Lett. 48, 1581 (1982).\nC. H. Bennett, IBM J. Res. Develop. 17, 525 (1973).\nD. Collins, Phys. Rev. A65, 052321 (2002).\n\n4\n\n\f"}