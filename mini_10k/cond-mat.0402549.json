{"id": "http://arxiv.org/abs/cond-mat/0402549v1", "guidislink": true, "updated": "2004-02-23T03:31:15Z", "updated_parsed": [2004, 2, 23, 3, 31, 15, 0, 54, 0], "published": "2004-02-23T03:31:15Z", "published_parsed": [2004, 2, 23, 3, 31, 15, 0, 54, 0], "title": "Polymer Simulations with a flat histogram stochastic growth algorithm", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cond-mat%2F0112470%2Ccond-mat%2F0112132%2Ccond-mat%2F0112165%2Ccond-mat%2F0112295%2Ccond-mat%2F0112405%2Ccond-mat%2F0112360%2Ccond-mat%2F0112463%2Ccond-mat%2F0112057%2Ccond-mat%2F0112341%2Ccond-mat%2F0112025%2Ccond-mat%2F0112273%2Ccond-mat%2F0112237%2Ccond-mat%2F0112370%2Ccond-mat%2F0112384%2Ccond-mat%2F0112368%2Ccond-mat%2F0112432%2Ccond-mat%2F0112267%2Ccond-mat%2F0112472%2Ccond-mat%2F0112232%2Ccond-mat%2F0112387%2Ccond-mat%2F0112225%2Ccond-mat%2F0112361%2Ccond-mat%2F0112289%2Ccond-mat%2F0112487%2Ccond-mat%2F0112209%2Ccond-mat%2F0112488%2Ccond-mat%2F0112281%2Ccond-mat%2F0112491%2Ccond-mat%2F0112404%2Ccond-mat%2F0112454%2Ccond-mat%2F0112044%2Ccond-mat%2F0112083%2Ccond-mat%2F0112043%2Ccond-mat%2F0112315%2Ccond-mat%2F0112261%2Ccond-mat%2F0112310%2Ccond-mat%2F0112507%2Ccond-mat%2F0112014%2Ccond-mat%2F0112465%2Ccond-mat%2F0402610%2Ccond-mat%2F0402031%2Ccond-mat%2F0402347%2Ccond-mat%2F0402081%2Ccond-mat%2F0402080%2Ccond-mat%2F0402235%2Ccond-mat%2F0402355%2Ccond-mat%2F0402669%2Ccond-mat%2F0402248%2Ccond-mat%2F0402549%2Ccond-mat%2F0402115%2Ccond-mat%2F0402152%2Ccond-mat%2F0402227%2Ccond-mat%2F0402359%2Ccond-mat%2F0402180%2Ccond-mat%2F0402062%2Ccond-mat%2F0402327%2Ccond-mat%2F0402101%2Ccond-mat%2F0402621%2Ccond-mat%2F0402508%2Ccond-mat%2F0402616%2Ccond-mat%2F0402335%2Ccond-mat%2F0402328%2Ccond-mat%2F0402478%2Ccond-mat%2F0402556%2Ccond-mat%2F0402617%2Ccond-mat%2F0402438%2Ccond-mat%2F0402091%2Ccond-mat%2F0402275%2Ccond-mat%2F0402010%2Ccond-mat%2F0402155%2Ccond-mat%2F0402603%2Ccond-mat%2F0402391%2Ccond-mat%2F0402367%2Ccond-mat%2F0402484%2Ccond-mat%2F0402272%2Ccond-mat%2F0402223%2Ccond-mat%2F0402167%2Ccond-mat%2F0402499%2Ccond-mat%2F0402244%2Ccond-mat%2F0402567%2Ccond-mat%2F0402565%2Ccond-mat%2F0402315%2Ccond-mat%2F0402485%2Ccond-mat%2F0402067%2Ccond-mat%2F0402462%2Ccond-mat%2F0402134%2Ccond-mat%2F0402300%2Ccond-mat%2F0402633%2Ccond-mat%2F0402560%2Ccond-mat%2F0402325%2Ccond-mat%2F0402287%2Ccond-mat%2F0402214%2Ccond-mat%2F0402193%2Ccond-mat%2F0402218%2Ccond-mat%2F0402514%2Ccond-mat%2F0402044%2Ccond-mat%2F0402607%2Ccond-mat%2F0402411%2Ccond-mat%2F0402653%2Ccond-mat%2F0402477%2Ccond-mat%2F0402551&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Polymer Simulations with a flat histogram stochastic growth algorithm"}, "summary": "We present Monte Carlo simulations of lattice models of polymers. These\nsimulations are intended to demonstrate the strengths of a powerful new flat\nhistogram algorithm which is obtained by adding microcanonical reweighting\ntechniques to the pruned and enriched Rosenbluth method (PERM).", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cond-mat%2F0112470%2Ccond-mat%2F0112132%2Ccond-mat%2F0112165%2Ccond-mat%2F0112295%2Ccond-mat%2F0112405%2Ccond-mat%2F0112360%2Ccond-mat%2F0112463%2Ccond-mat%2F0112057%2Ccond-mat%2F0112341%2Ccond-mat%2F0112025%2Ccond-mat%2F0112273%2Ccond-mat%2F0112237%2Ccond-mat%2F0112370%2Ccond-mat%2F0112384%2Ccond-mat%2F0112368%2Ccond-mat%2F0112432%2Ccond-mat%2F0112267%2Ccond-mat%2F0112472%2Ccond-mat%2F0112232%2Ccond-mat%2F0112387%2Ccond-mat%2F0112225%2Ccond-mat%2F0112361%2Ccond-mat%2F0112289%2Ccond-mat%2F0112487%2Ccond-mat%2F0112209%2Ccond-mat%2F0112488%2Ccond-mat%2F0112281%2Ccond-mat%2F0112491%2Ccond-mat%2F0112404%2Ccond-mat%2F0112454%2Ccond-mat%2F0112044%2Ccond-mat%2F0112083%2Ccond-mat%2F0112043%2Ccond-mat%2F0112315%2Ccond-mat%2F0112261%2Ccond-mat%2F0112310%2Ccond-mat%2F0112507%2Ccond-mat%2F0112014%2Ccond-mat%2F0112465%2Ccond-mat%2F0402610%2Ccond-mat%2F0402031%2Ccond-mat%2F0402347%2Ccond-mat%2F0402081%2Ccond-mat%2F0402080%2Ccond-mat%2F0402235%2Ccond-mat%2F0402355%2Ccond-mat%2F0402669%2Ccond-mat%2F0402248%2Ccond-mat%2F0402549%2Ccond-mat%2F0402115%2Ccond-mat%2F0402152%2Ccond-mat%2F0402227%2Ccond-mat%2F0402359%2Ccond-mat%2F0402180%2Ccond-mat%2F0402062%2Ccond-mat%2F0402327%2Ccond-mat%2F0402101%2Ccond-mat%2F0402621%2Ccond-mat%2F0402508%2Ccond-mat%2F0402616%2Ccond-mat%2F0402335%2Ccond-mat%2F0402328%2Ccond-mat%2F0402478%2Ccond-mat%2F0402556%2Ccond-mat%2F0402617%2Ccond-mat%2F0402438%2Ccond-mat%2F0402091%2Ccond-mat%2F0402275%2Ccond-mat%2F0402010%2Ccond-mat%2F0402155%2Ccond-mat%2F0402603%2Ccond-mat%2F0402391%2Ccond-mat%2F0402367%2Ccond-mat%2F0402484%2Ccond-mat%2F0402272%2Ccond-mat%2F0402223%2Ccond-mat%2F0402167%2Ccond-mat%2F0402499%2Ccond-mat%2F0402244%2Ccond-mat%2F0402567%2Ccond-mat%2F0402565%2Ccond-mat%2F0402315%2Ccond-mat%2F0402485%2Ccond-mat%2F0402067%2Ccond-mat%2F0402462%2Ccond-mat%2F0402134%2Ccond-mat%2F0402300%2Ccond-mat%2F0402633%2Ccond-mat%2F0402560%2Ccond-mat%2F0402325%2Ccond-mat%2F0402287%2Ccond-mat%2F0402214%2Ccond-mat%2F0402193%2Ccond-mat%2F0402218%2Ccond-mat%2F0402514%2Ccond-mat%2F0402044%2Ccond-mat%2F0402607%2Ccond-mat%2F0402411%2Ccond-mat%2F0402653%2Ccond-mat%2F0402477%2Ccond-mat%2F0402551&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We present Monte Carlo simulations of lattice models of polymers. These\nsimulations are intended to demonstrate the strengths of a powerful new flat\nhistogram algorithm which is obtained by adding microcanonical reweighting\ntechniques to the pruned and enriched Rosenbluth method (PERM)."}, "authors": ["Thomas Prellberg", "Jaroslaw Krawczyk", "Andrew Rechnitzer"], "author_detail": {"name": "Andrew Rechnitzer"}, "author": "Andrew Rechnitzer", "arxiv_comment": "17th Annual Workshop: Recent Developments in Computer Simulation\n  Studies in Condensed Matter Physics, University of Georgia, GA (February,\n  2004)", "links": [{"href": "http://arxiv.org/abs/cond-mat/0402549v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/cond-mat/0402549v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cond-mat.soft", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cond-mat.soft", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cond-mat.stat-mech", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/cond-mat/0402549v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/cond-mat/0402549v1", "journal_reference": null, "doi": null, "fulltext": "arXiv:cond-mat/0402549v1 [cond-mat.soft] 23 Feb 2004\n\n1 Polymer Simulations with a flat histogram\nstochastic growth algorithm\nThomas Prellberg1, Jaroslaw Krawczyk1, and Andrew Rechnitzer2\n1\n\n2\n\nInstitut f\u00fcr Theoretische Physik, Technische Universit\u00e4t Clausthal, Arnold\nSommerfeld Strasse 6, D-38678 Clausthal-Zellerfeld, Germany,\nDepartment of Mathematics and Statistics, The University of Melbourne,\nParkville 3010, Australia.\n\nSummary. We present Monte Carlo simulations of lattice models of polymers.\nThese simulations are intended to demonstrate the strengths of a powerful new\nflat histogram algorithm which is obtained by adding microcanonical reweighting\ntechniques to the pruned and enriched Rosenbluth method (PERM).\nKey words: flat histogram method, pruned and enriched Rosenbluth method,\npolymers, self-avoiding walks\n\n1.1 Introduction\nMonte Carlo simulations of polymer models have played a significant role in\nthe development of Monte Carlo methods for more than fifty years [1]. We\npresent here results of simulations performed with a powerful new algorithm,\nflatPERM [2], which combines a stochastic growth algorithm, PERM [3], with\numbrella sampling techniques [4]. This leads to a flat histogram in a chosen\nparameterization of configuration space.\nThe stochastic growth algorithm used is the pruned and enriched Rosenbluth method (PERM) [3], which is an enhancement of the Rosenbluth and\nRosenbluth algorithm [5], an algorithm that dates back to the early days of\nMonte Carlo simulations. While PERM already is a powerful algorithm for\nsimulating polymers, the addition of flat-histogram techniques [6] provides a\nsignificant enhancement, as has already been exploited in [7], where it has\nbeen combined with multicanonical sampling [8].\nBefore we describe the algorithm in detail and present results of the simulations, we give a brief motivating introduction to the lattice models considered here.\nIf one wants to understand the critical behavior of long linear polymers in\nsolution, one is naturally led to a course-grained picture of polymers as beads\nof monomers on a chain. There are two main physical ingredients leading to\nthis picture. First, one needs an \"excluded volume\" effect, which takes into\naccount the fact that different monomers cannot simultaneously occupy the\nsame region in space. Second, the quality of the solvent can be modeled by\nan effective monomer-monomer interaction. Monomers in a good solvent are\n\n\f2\n\nThomas Prellberg, Jaroslaw Krawczyk, and Andrew Rechnitzer\n\nsurrounded by solvent molecules and hence experience an effective monomermonomer repulsion. Similarly, a bad solvent leads to an effective monomermonomer attraction.\nConsequently, polymers in a good solvent form swollen \"coils\", whereas\npolymers in a bad solvent form collapsed \"globules\" and also clump together\nwith each other (see Fig. 1.1). In order to study the transition between these\ntwo states, it is advantageous to go to the limit of an infinitely dilute solution,\nin which one considers precisely one polymer in an infinitely extended solvent.\n\nFig. 1.1. Eight lattice polymers in a bad solvent (picture courtesy of H. Frauenkron,\nFZ J\u00fclich)\n\nAs we are interested in critical behavior, it is also possible to further\nsimplify the model by discretizing it. Due to universality, the critical behavior\nis expected to be unchanged by doing so. We therefore consider random walks\non a regular lattice, eg the simple cubic lattice for a three-dimensional model.\nOne can think of each lattice site corresponding to a monomer and the steps\nas monomer-monomer bonds.\nWe model excluded volume effects by considering self-avoiding random\nwalks which are not allowed to visit a lattice site more than once. The quality\nof the solvent is modeled by an attractive short-range interaction between\nnon-consecutive monomers which occupy nearest-neighbor sites on the lattice.\nAt this point we may add more structure to our polymer model by considering\nmonomer-specific interactions. Specific properties of monomers i and j on the\nchain lead to an interaction \u01ebi,j depending on i and j.\n\n\f1 Polymer Simulations with a flat histogram stochastic growth algorithm\n\n3\n\nIn this paper, we will consider three examples in detail. First, we consider as pedagogical example, the problem of simulating polymers in a twodimensional strip. The interaction energy is simply \u01ebi,j = 0, however, the\nintroduction of boundaries makes simulations difficult [9].\nOur second example is the HP model which is a toy model of proteins\n[10]. It consists of a self-avoiding walk with two types of monomers along\nthe sites visited by the walk - hydrophobic (type H) and polar (type P).\nOne considers monomer-specific interactions, mimicking the interaction with\na polar solvent such as water. The interaction strengths are chosen so that\nHH-contacts are favored, eg \u01ebHH = \u22121 and \u01ebHP = \u01ebP H = \u01ebP P = 0. The\ncentral question is to determine the density of states (and to find the ground\nstate with lowest energy) for a given sequence of monomers. An example of\na conjectured ground state is given in Fig. 1.2 for a particular sequence of 85\nmonomers on the square lattice (the sequence is taken from [11]).\n\nFig. 1.2. HP model: shown is the conjectured groundstate of a sequence with 85\nmonomers on the square lattice. The monomers with a lighter shade are of type H\n(hydrophobic), the monomers with a darker shade are of type P (polar).\n\nOur third example is the interacting self-avoiding walk (ISAW) model of\n(homo)-polymer collapse; it is obtained by setting \u01ebi,j = \u22121 independent of\nthe individual monomers. Here, one is interested in the critical behavior in\nthe thermodynamic limit, ie the limit of large chain lengths. An example\nof an 26-step interacting self-avoiding walk with 7 interactions is shown in\nFig. 1.3.\nThe partition function of n-step interacting self-avoiding walks can be\nwritten as\n\n\f4\n\nThomas Prellberg, Jaroslaw Krawczyk, and Andrew Rechnitzer\n\nFig. 1.3. A 26 step interacting self-avoiding walk on a square lattice with 7 interactions.\n\nZn (\u03b2) =\n\nX\n\u03c6\n\ne\u2212\u03b2E(\u03c6) =\n\nX\n\nCn,m e\u03b2m ,\n\n(1.1)\n\nm\n\nwhere E(\u03c6) is the energy of an n-step walk, \u03c6. Note that the second sum is\nover the number m of interactions, and Cn,m is the number of configurations\nof n-step self-avoiding walks with precisely m interactions.\nWhile the motivation for simulations of the various models is different, the\ncentral problems turn out to be similar. For interacting self-avoiding walks,\nthe collapse transition is in principle understood. One has a tri-critical phase\ntransition with upper critical dimension du = 3, so that one can derive the\ncritical behavior from mean-field theory for d \u2265 3 [12], whereas for d = 2\none obtains results from conformal invariance [13]. However, even though\nthis transition is in principle understood, there are surprising observations\nabove the upper critical dimension [14]. Most importantly, there is no good\nunderstanding of the collapsed regime, which is also notoriously difficult to\nsimulate.\nSimilarly, in the HP model one is interested in low-temperature problems,\nie deep inside the collapsed phase. In particular, one wishes to understand\nthe design problem, which deals with the mapping of sequences along the\npolymer chain to specific ground state structures. Again, the most important\nopen question is in the collapsed regime.\nIt is therefore imperative, to find algorithms which work well at low temperatures. In the following section, we present just such an algorithm.\n\n1.2 The Algorithm\nThis section describes our algorithm, as proposed in [2]. The basis of the\nalgorithm is the Rosenbluth and Rosenbluth algorithm, a stochastic growth\nalgorithm in which each configuration sampled is grown from scratch. The\n\n\f1 Polymer Simulations with a flat histogram stochastic growth algorithm\n\n5\n\ngrowth is kinetic, which is to say that each growth step is selected at random\nfrom all possible growth steps. Thus, if there are a possible ways to add a\nstep then one selects one of them with probability p = 1/a.\nFor example, for a self-avoiding walk on the square lattice there may be\nbetween one and three possible ways of continuing, but it is also possible that\nthere are no continuing steps, in which case we say that the walk is trapped\n(see Fig. 1.4).\n\n1/3\n\n1\n\n1/2\n\ntrapped\n\nFig. 1.4. For a self-avoiding walk on the square lattice, there can be between three\nand one ways of continuing, and the next step is chosen with equal probability\nfrom all possible continuations. In the right-most configuration, there is no way to\ncontinue, and the walk is trapped.\n\nAs the number of possible continuations generally changes during the\ngrowth process, different configurations are generated with different probabilities and so one needs to reweight configurations to counter this. If one\nviews this algorithm as \"approximate counting\" then the required weights of\nthe configurations serve as estimates of the total number of configurations.\nTo understand this point of view, imagine that we were to perform a\ncomplete enumeration of the configuration space. Doing this requires that at\neach growth step we would have to choose all the possible continuations and\ncount them each with equal weight. If we now select fewer configurations,\nthen we have to change the weight of these included configurations in order\nto correct for those that we have missed. Thus, if we choose one growth\nstep out of a possible, then we must replace a configurations of equal weight\nby one \"representative\" configuration with a-fold weight. In this way, the\nweight of each grown configuration is a direct estimate of the total number\nof configurations.\nLet the atmosphere, an = a(\u03c6n ), be the number of distinct ways in which\na configuration \u03c6n of size n can be extended by one step. Then, the weight\nassociated with a configuration of size n is the product of all the atmospheres\nak encountered during its growth, ie\nW =\n\nn\u22121\nY\n\nak .\n\n(1.2)\n\nk=0\n\nAfter having started S growth chains, an estimator Cnest for the total number\n(i)\nof configurations Cn is given by the mean over all generated samples, \u03c6n , of\n(i)\nsize n with respective weights Wn , ie\n\n\f6\n\nThomas Prellberg, Jaroslaw Krawczyk, and Andrew Rechnitzer\n\nCnest = hW in =\n\n1 X (i)\nWn .\nS i\n\n(1.3)\n\nHere, the mean is taken with respect to the total number of growth chains\nS, and not the number of configurations which actually reach size n. Configurations which get trapped before they reach size n appear in this sum with\nweight zero.\nThe Rosenbluth and Rosenbluth algorithm suffers from two problems.\nFirst, the weights can vary widely in magnitude, so that the mean may become dominated by very few samples with very large weight. Second, regularly occurring trapping events, ie generation of configurations with zero\natmosphere can lead to exponential \"attrition\", ie exponentially strong suppression of configurations of large sizes.\nTo overcome these problems, enrichment and pruning steps have been\nadded to this algorithm, leading to the pruned and enriched Rosenbluth\nmethod (PERM) [3]. The basic idea is that one wishes to suppress large\n(i)\nfluctuations in the weights Wn , as these should on average be equal to Cn .\nIf the weight of a configuration is too large one \"enriches\" by making\ncopies of the configuration and reducing the weights by an appropriate factor.\nOn the other hand, if the weight is too small, one throws away or \"prunes\"\nthe configuration with a certain probability and otherwise continues growing\nthe configuration with a weight increased by an appropriate factor. Note\nthat neither S nor the expression (1.3) for the estimate, Cnest , are changed\nby either enriching or pruning steps.\nA simple but significant improvement of PERM was added in [15], where\nit was observed that it would be advantageous to force each of the copies of an\nenriched configuration to grow in distinct ways. This increases the diversity\nof the sample population and it is this version of PERM that we consider\nbelow.\nWe still need to specify enrichment and pruning criteria as well as the\nactual enrichment and pruning processes. While the idea of PERM itself\nis straightforward, there is now a lot of freedom in the precise choice of\nthe pruning and the enrichment steps. The \"art\" of making PERM perform\nefficiently is based to a large extent on a suitable choice of these steps - this\ncan be far from trivial! Distilling our own experience with PERM, we present\nhere what we believe to be an efficient, and, most importantly, parameter free\nversion.\nIn contrast to other expositions of PERM (eg [11]), we propose to prune\nand enrich constantly; this enables greater exploration of the configuration\nspace. Define the threshold ratio, r, as the ratio of weight and estimated\n(i)\nnumber of configurations, r = Wn /Cnest . Ideally we want r to be close to 1\nto keep weight fluctuations small. Hence if r > 1 the weight is too large and\nso we enrich. Similarly if r < 1 then the weight is too small and so we prune.\nMoreover, the details of the pruning and enrichment steps are chosen such\nthat the new weights are as close as possible to Cnest :\n\n\f1 Polymer Simulations with a flat histogram stochastic growth algorithm\n\n\u2022\n\n\u2022\n\n7\n\nr > 1 \u2192 enrichment step:\nmake c = min(\u230ar\u230b, an ) distinct copies of the configuration, each with\n(i)\nweight 1c Wn (as in nPERM [15]).\nr < 1 \u2192 pruning step:\n(i)\ncontinue growing with probability r and weight 1r Wn = Cnest (ie prune\nwith probability 1 \u2212 r).\n\nNote that we perform pruning and enrichment after the configuration has\nbeen included in the calculation of Cnest . The new values are used during the\nnext growth step.\nInitially, the estimates Cnest can of course be grossly wrong, as the algorithm knows nothing about the system it is simulating. However, even if\ninitially \"wrong\" estimates are used for pruning and enrichment the algorithm can be seen to converge to the true values in all applications we have\nconsidered. In a sense, it is self-tuning.\nWe also note here, that the number of samples generated for each size is\nroughly constant. Ideally, in order to effectively sample configuration space,\nthe algorithm traces an unbiased random walk in configuration size. This\nmeans that PERM is, in some sense, already a flat histogram algorithm. We\nshall return to this central observation below.\nIt is now straight-forward to change PERM to a thermal ensemble with\ninverse temperature \u03b2 = 1/kB T and energy E (defined by some property of\nthe configuration, such as the number of contacts) by multiplying the weight\nwith the appropriate Boltzmann factor exp(\u2212\u03b2E), which leads to an estimate\nof the partition function, Zn (\u03b2), of the form\nZnest (\u03b2) = hW exp(\u2212\u03b2E)in .\n\n(1.4)\n\nThe pruning and enrichment procedures are changed accordingly, replacing W by W exp(\u2212\u03b2E) and Cnest by Znest (\u03b2). This gives threshold ratio\n(i)\nr = Wn exp(\u2212\u03b2E (i) )/Znest (\u03b2). This is the setting in which PERM is usually\ndescribed.\nAlternatively, however, it is also possible to consider microcanonical estimators for the total number Cn,m of configurations of size n with energy\nest\nis then given\nm (ie the \"density of states\"). An appropriate estimator Cn,m\n(i)\n\nby the mean over all generated samples \u03c6n,m of size n and energy m with\n(i)\nrespective weights Wn,m , ie\nest\nCn,m\n= hW in,m =\n\n1 X (i)\nWn,m .\nS i\n\n(1.5)\n\nAgain, the mean is taken with respect to the total number of growth chains\nS, and not the number of configurations Sn,m which actually reach a configuration of size n and energy m. The pruning and enrichment procedures are\n(i)\nest\nalso changed accordingly, replacing Cn by Cn,m and using r = Wn,m /Cn,m\n.\n\n\f8\n\nThomas Prellberg, Jaroslaw Krawczyk, and Andrew Rechnitzer\n\nAs observed above, the pruning and enrichment criterion for PERM leads\nto a flat histogram in length, ie a roughly constant number of samples being\ngenerated at each size n for PERM. In fact, one can motivate the given pruning and enrichment criteria by stipulating that one wishes to have a roughly\nconstant number of samples, as this leads to the algorithm performing an unbiased random walk in the configuration size. Similarly, in the microcanonical\nversion described above, the algorithm performs an unbiased random walk in\nboth size and energy of the configurations, and we obtain a roughly constant\nnumber of samples at each size n and energy m.\nIt is because of the fact that the number of samples is roughly constant in\neach histogram entry, that this algorithm can be seen as a \"flat histogram\"\nalgorithm, which we consequently call flat histogram PERM, or flatPERM. In\nhindsight in becomes clear that PERM itself can be seen as a flat histogram\nalgorithm, at it creates a roughly flat histogram in size n. Recognizing this\nled us to the formulation of this algorithm in the first place.\nWe have seen that by casting PERM as an approximate counting method,\nthe generalization from PERM to flat histogram PERM is straight-forward\nand (nearly) trivial. One can now add various refinements to this method if\nneeded. For examples we refer the reader to [2]. We close this section with\na summary of the central steps to convert simple PERM to flatPERM by\ncomparing the respective estimators and threshold ratios, r:\n1. athermal PERM: estimate the number of configurations Cn\n\u2022 Cnest = hW in\n(i)\n\u2022 r = Wn /Cnest\n2. thermal PERM: estimate the partition function Zn (\u03b2)\n\u2022 Znest (\u03b2) = hW exp(\u2212\u03b2E)in\n(i)\n(i)\n\u2022 r = Wn exp(\u2212\u03b2Em )/Znest (\u03b2)\n3. flat histogram PERM: estimate the density of states Cn,m\nest\n= hW in,m\n\u2022 Cn,m\n\u2022\n\n(i)\n\nest\nr = Wn,m /Cn,m\n\nOne can similarly generalize the above to several microcanonical parameters,\nm1 , m2 , . . ., to produce estimates of Cn,m1 ,m2 ,... .\nOnce the simulations have been performed the average of an observable,\nQ, defined on the set of configurations can be obtained from weighted sums:\nP (i)\n(i)\nQn,m Wn,m\nhQW in,m\nest\n.\n(1.6)\n= iP\nQn,m =\n(i)\nhW in,m\ni Wn,m\nThese can then be used for subsequent evaluations. For instance, the expectation value of Q in the canonical ensemble at a given temperature \u03b2 can\nnow be computed via\nP\nQest C est exp(\u2212\u03b2Em )\nest\nP n,mestn,m\nQn (\u03b2) = m\n.\n(1.7)\nm Cn,m exp(\u2212\u03b2Em )\n\n\f1 Polymer Simulations with a flat histogram stochastic growth algorithm\n\n9\n\nie only a single simulation is required to compute expectations at any temperature.\nFor many problems we are interested in their behavior at low temperatures\nwhere averages of observables are dominated by configurations with high energy. Such configurations are normally very difficult to obtain in simulations.\nThe flatPERM algorithm is able to effectively sample such configurations\nbecause it obtains a roughly constant number of samples at all sizes and energies (due to the constant pruning and enrichment). This means that it is\npossible to study models even at very low temperatures. Examples of this are\ngiven in the next section.\n\n1.3 Simulations\nA good way of showing how flatPERM works is to simulate two-dimensional\npolymers in a strip. This kind of simulation has previously been performed\nwith PERM using Markovian anticipation techniques [9] which are quite complicated. With flatPERM one simply chooses the vertical position of the endpoint of the walk in the strip as an \"energy\" for the algorithm to flatten\nagainst. We have found that this produces very good results.\n\n\u03c1n(y)\n\nSn,y\n\n0.06\n\n6e+06\n\n0.04\n\n4e+06\n\n0.02\n\n2e+06\n\n0.00\n\n0e+00\n60\n\n0\n\n40\n200\n\n400\nn\n\n600\n\n20\n800\n\n1000\n\n0\n\ny\n\n60\n0\n\n40\n200\n\n400\nn\n\n600\n\n20\n800\n\n1000\n\n0\n\nFig. 1.5. Probability density \u03c1n (y) (left) and number of generated samples Sn,y\n(right) versus length n and vertical endpoint coordinate y for self-avoiding walk on\na strip of width 64 on the square lattice.\n\nFig. 1.5 shows the results of our simulations of 1024-step self-avoiding\nwalks in a strip of width 64. The left-hand figure is the probability density\n\u03c1n (y) of the endpoint coordinate y shown as a function of walk length n.\nThe right-hand figure shows the actual number of samples generated for each\nlength n and end point position y. One sees that the histogram of samples\nis indeed nearly completely flat. One can now extract several quantities from\n\ny\n\n\f10\n\nThomas Prellberg, Jaroslaw Krawczyk, and Andrew Rechnitzer\n\n1.5\n\n\u03c1n(\u03be)\n\n1.0\n0.5\n0.0\n0.0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1.0\n\n\u03be\nFig. 1.6. Endpoint densities (scaled to the interval [0, 1]) for lengths 512, 768, and\n1024. The different curves are indistinguishable.\n\nsuch simulations (see [9]), but we restrict ourselves here to the scaled endpoint density shown in Fig. 1.6.\nNext we show results from simulations of the HP-model. Here, we have\nobtained the whole density of states for small model proteins with fixed sequences. The first sequence considered (taken from [7]) is small enough to\nenable comparison with exact enumeration data. It has moreover been designed to possess a unique ground state (up to lattice symmetries).\nFig. 1.7 shows our results. We find (near) perfect agreement with exact\nenumeration even though the density of states varies over a range of eight\norders of magnitude! The derived specific heat data clearly shows a collapse\ntransition around T = 0.45 and a sharper transition into the ground state\naround T = 0.15.\nThe next sequence (taken from [11]) is the one for which Fig. 1.2 shows a\nstate with the lowest found energy. Fig. 1.8 shows our results for the density\nof states and specific heat. We find the same lowest energy E = 53 as [11]\n(though this is not proof of it being the ground state). The density of states\nvaries now over a range of 30 orders of magnitude! The derived specific heat\ndata clearly shows a much more complicated structure than the previous\nexample.\nFor several other sequences taken from the literature we have confirmed\nprevious density of states calculations and obtained identical ground state\nenergies. The sequences we considered had n = 58 steps (3 dimensions,\nEmin = \u221244) and n = 85 steps (2 dimensions, Emin = \u221253) from [11],\nand n = 80 steps (3 dimensions, Emin = \u221298) from [16]. We studied also a\nparticularly difficult sequence with n = 88 steps (3 dimensions, Emin = \u221272)\nfrom [17], but the lowest energy we obtained was E = \u221269. While we have\nnot been able to obtain the ground state, neither has any other PERM implementation (see [11]).\n\n\f1 Polymer Simulations with a flat histogram stochastic growth algorithm\n9\n\n\u0005\n\n8\n\n\u0005\n\n\u0005\n\n\u0005\n\n7\n\n\u0005\n\u0005\n\n6\n\nCnm )\n\nlog10 (\n\n11\n\n\u0005\n\n5\n4\n\n\u0005\n\n3\n2\n\n\u0005\n\n1\n0\n\n0\n\n1\n\n2\n\n3\n\n4\n\n0.8\n\nm\n\n5\n\n6\n\n7\n\n8\n\n9\n\n0.7\n\n0.6\n\n0.5\n\nC V (T )\nn\n\n0.4\n\n0.3\n\n0.2\n\n0.1\n\n0\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\n\n0.6\n\n0.7\n\n0.8\n\n0.9\n\n1\n\nT\n\nFig. 1.7. Sequence I (14 Monomers, HPHPHHPHPHHPPH, d = 3): density of\nstates versus energy (above) and specific heat CV /n versus temperature T (below).\n\nWe now turn to the simulation of interacting self-avoiding walks (ISAW)\non the square and simple cubic lattices. In both cases have we simulated\nwalks up to length 1024. Here, we encounter a small additional difficulty;\nwhen PERM is initially started it is effectively blind and may produce poor\nestimates of Cn,m and this may in turn lead to overflow problems. It is therefore necessary to stabilize the algorithm by delaying the growth of large\nconfigurations. For this, it suffices to restrict the size of the walks by only\nallowing them to grow to size n once t = cn tours (the number of times the\nalgorithm returns to an object of zero size) has been reached. We found a\nvalue of c \u2248 0.1 sufficient.\nFig. 1.9 shows the equilibration of the algorithm due to the delay. Snapshots are taken after 106 , 107 , and 108 generated samples. While the sample\nhistogram looks relatively rough (even on a logarithmic scale) the density of\nstates is already rather well behaved. In the plots one clearly sees the effect\nof large correlated tours in which large number of enrichments produce many\nsamples with the same initial walk segment.\n\n\f12\n\nThomas Prellberg, Jaroslaw Krawczyk, and Andrew Rechnitzer\n35\n\n\u0005\u0005\n\n\u0005 \u0005\u0005 \u0005\u0005\u0005\u0005 \u0005\u0005 \u0005 \u0005 \u0005 \u0005\n\n\u0005 \u0005\u0005 \u0005\n\n30\n\n\u0005\u0005\u0005\n\n\u0005 \u0005\u0005\n\n\u0005 \u0005\u0005\n\n\u0005\u0005\n\n25\n\nlog10 (\n\nCnm )\n\n\u0005\u0005\n\n\u0005\u0005\n\n\u0005\u0005\n\n20\n\n\u0005\u0005\n\n\u0005\u0005\n\n\u0005\u0005\n\n15\n\n\u0005\u0005\n\n\u0005\u0005\n\n10\n\n\u0005\n\n\u0005\n\n\u0005\n\n\u0005\n\n\u0005\n\n\u0005\n\n5\n0\n\n0\n\n10\n\n20\n\nm\n\n0.6\n\n30\n\n40\n\n\u0005\n\n\u0005\n\n50\n\n0.5\n\n0.4\n\nCV (T )\nn\n\n0.3\n\n0.2\n\n0.1\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n\n0.8\n\n1\n\n1.2\n\n1.4\n\n1.6\n\n1.8\n\n2\n\nT\n\nFig. 1.8. Sequence II (85 Monomers, d = 2): density of states versus energy (above)\nand specific heat CV /n versus temperature T (below).\n\nThe final result of our simulations for interacting self-avoiding walks in\ntwo and three dimensions is shown in Fig. 1.10. It clearly shows the strength\nof flatPERM: with one single simulation can one obtain a density of states\nwhich ranges over more than 300 orders of magnitude!\nFrom these data one can now, for example, compute the specific heat\ncurves Cn = kB (\u03b2\u01eb)2 \u03c3 2 (m)/n. The results for both systems are shown in\nFig. 1.11. We see that the data is well behaved well into the collapsed lowtemperature regime.\n\n1.4 Conclusion and Outlook\nWe have reviewed stochastic growth algorithms for polymers. Describing the\nRosenbluth and Rosenbluth method as an approximate counting method has\nenabled us to present a straight-forward extension of simple PERM to flat\nhistogram PERM. Using this algorithm one can obtain the complete density\nof states (even over several hundred orders of magnitude) from one single\nsimulation.\n\n\f1 Polymer Simulations with a flat histogram stochastic growth algorithm\n\nlog10(Cnm)\n\n13\n\nSnm\n\n450\n400\n350\n300\n250\n200\n150\n100\n50\n0\n\n10000\n1000\n100\n10\n1\n1000\n\n1000\n\n800\n0\n\n800\n\n600\n0.2\n\n0.4\n\n400\n0.6\n\nm/n\n\n0\nn\n\n600\n0.2\n\n200\n0.8\n\n0.4\n\n400\n0.6\n\nm/n\n\n1 0\n\nlog10(Cnm)\n\nn\n\n200\n0.8\n\n1 0\n\nSnm\n\n450\n400\n350\n300\n250\n200\n150\n100\n50\n0\n\n10000\n1000\n100\n10\n1\n1000\n\n1000\n\n800\n0\n\n800\n\n600\n0.2\n\n0.4\n\n400\n0.6\n\nm/n\n\n0\nn\n\n600\n0.2\n\n200\n0.8\n\n0.4\n\n400\n0.6\n\nm/n\n\n1 0\n\nlog10(Cnm)\n\nn\n\n200\n0.8\n\n1 0\n\nSnm\n\n450\n400\n350\n300\n250\n200\n150\n100\n50\n0\n\n10000\n1000\n100\n10\n1\n1000\n\n1000\n\n800\n0\n\n600\n0.2\n\n0.4\nm/n\n\n400\n0.6\n\n200\n0.8\n\n1 0\n\n800\n0\n\nn\n\n600\n0.2\n\n0.4\nm/n\n\n400\n0.6\n\nn\n\n200\n0.8\n\n1 0\n\nFig. 1.9. Number of configurations Cn,m (left) and number of generated samples\n(right) versus internal energy m/n and length n for ISAW on the square lattice, for\nvarious total sample sizes: 106 (top), 107 (middle), and 108 (bottom).\n\nWe demonstrated the strength of the algorithm by simulating self-avoiding\nwalks in a strip, the HP-model of proteins, and interacting self-avoiding walks\nin two and three dimensions as a model of polymer collapse.\nFurther applications are in preparation, eg simulations of branched polymers, and simulations of higher-dimensional densities of states.\n\n\f14\n\nThomas Prellberg, Jaroslaw Krawczyk, and Andrew Rechnitzer\n\nnm)\n\nlog10(C\n450\n400\n350\n300\n250\n200\n150\n100\n50\n0\n\n1e+08\n\nSnm\n\n1e+07\n1e+06\n100000\n10000\n\n1000\n\n1000\n\n800\n0\n\n0.1 0.2\n0.3 0.4\n0.5 0.6\n0.7 0.8\n0.9\n\nm=n\n\n800\n\n600\n400\n200\n\n0\n\nn\n\n600\n\n0.1 0.2\n0.3 0.4\n0.5 0.6\n0.7 0.8\n0.9\n\n400\n200\n\nm=n\n\n1\n\nnm)\n\nn\n\n1\n\nSnm\n\nlog10(C\n700\n\n1e+07\n\n600\n1e+06\n\n500\n400\n\n100000\n\n300\n200\n\n10000\n\n100\n1000\n\n0\n\n1000\n\n1000\n800\n\n800\n0\n\n0.2\n\n0\n\n600\n0.4\n\n0.6\n\n0.8\n\n400\n1\n\nm=n\n\n1.2\n\n1.4\n\n200\n1.6\n\nn\n\n0.2\n\n600\n0.4\n\n0.6\n\n0.8\n\n400\n1\n\nm=n\n\n1.8\n\n1.2\n\n1.4\n\n200\n1.6\n\nn\n\n1.8\n\nFig. 1.10. Number of configurations Cn,m (left) and number of generated samples\n(right) versus internal energy m/n and length n for ISAW on the square lattice\n(above) and simple cubic lattice (below)\n1.2\n5\n\n1.1\n\n1\n\n4\n\n0.9\n\n\u001b (m)\nn\n\n\u001b 2 (m)\nn\n\n2\n\n0.8\n\n0.7\n\n3\n\n2\n\n0.6\n1\n\n0.5\n\n0.4\n0.4\n\n0\n\n0.45\n\n0.5\n\n0.55\n\n0.6\n\n0.65\n\n0.7\n\n0.75\n\n0.8\n\n0.25\n\n0.3\n\n0.35\n\n0.4\n\n0.45\n\nFig. 1.11. Normalized fluctuations \u03c3 2 (m)/n versus inverse temperature \u03b2 = 1/kB T\nfor ISAW on the square lattice (above) and the simple cubic lattice (below) at\nlengths 64, 128, 256, 512, and 1024. The curves for larger lengths are more highly\npeaked. The vertical lines denote the expected transition temperature at infinite\nlength.\n\n\f1 Polymer Simulations with a flat histogram stochastic growth algorithm\n\n15\n\nReferences\n1. G. W. King, in Monte Carlo Method, volume 12 of Applied Mathematics Series,\nNational Bureau of Standards, 1951\n2. T. Prellberg and J. Krawczyk, Phys. Rev. Lett., in print\n3. P. Grassberger, Phys. Rev E 56 3682 (1997)\n4. G. M. Torrie and J. P. Valleau, J. Comput. Phys. 23 187 (1977)\n5. M. N. Rosenbluth and A. W. Rosenbluth, J. Chem. Phys. 23 356 (1955)\n6. F. Wang and D. P. Landau, Phys. Rev. Lett. 86 2050 (2001)\n7. M. Bachmann and W. Janke, Phys. Rev. Lett. 91 208105 (2003)\n8. B. A. Berg and T. Neuhaus, Phys. Lett. B 267 249 (1991)\n9. H.-P. Hsu and P. Grassberger, Eur. Phys. J. B 36 209 (2003)\n10. K. A. Dill, Biochemistry 24 1501 (1985)\n11. H.-P. Hsu and V. Mehra and W. Nadler and P. Grassberger, J. Chem. Phys.\n118 444 (2003)\n12. I. D. Lawrie and S. Sarbach,in Phase Transitions and Critical Phenomena,\nedited by C. Domb and J. L. Lebowitz, volume 9, Academic, London, 1984\n13. J. L. Cardy, in Phase Transitions and Critical Phenomena, edited by C. Domb\nand J. L. Lebowitz, volume 11, Academic Press, New York, 1987\n14. T. Prellberg and A. L. Owczarek, Phys. Rev. E. 62, 3780 (2000)\n15. H.-P. Hsu and V. Mehra and W. Nadler and P. Grassberger, Phys. Rev. E 68\n21113 (2003)\n16. H. Frauenkron and U. Bastolla and E. Gerstner and P. Grassberger and W.\nNadler, Phys. Rev. Lett. 80 3149 (1998)\n17. T.C. Beutler and K.A. Dill, Protein Sci. 5 2037 (1996)\n\n\f"}