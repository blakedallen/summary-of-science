{"id": "http://arxiv.org/abs/1201.4768v1", "guidislink": true, "updated": "2012-01-23T16:59:11Z", "updated_parsed": [2012, 1, 23, 16, 59, 11, 0, 23, 0], "published": "2012-01-23T16:59:11Z", "published_parsed": [2012, 1, 23, 16, 59, 11, 0, 23, 0], "title": "Completion Delay Minimization for Instantly Decodable Network Codes", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1203.6291%2C1203.5458%2C1203.6445%2C1203.4408%2C1203.5431%2C1203.4515%2C1203.5847%2C1203.6143%2C1203.4171%2C1203.0639%2C1203.6485%2C1203.6862%2C1203.2471%2C1203.1906%2C1203.2029%2C1203.0620%2C1203.2070%2C1203.6159%2C1203.0377%2C1203.2499%2C1203.0355%2C1203.6051%2C1203.0008%2C1203.0127%2C1203.0086%2C1203.2764%2C1203.4428%2C1203.0199%2C1203.6390%2C1203.1865%2C1203.4941%2C1203.3802%2C1203.6671%2C1203.6611%2C1203.3279%2C1203.6392%2C1203.1970%2C1203.1156%2C1203.2200%2C1203.3871%2C1203.1063%2C1203.3786%2C1203.3503%2C1203.2953%2C1203.2820%2C1203.6462%2C1203.4650%2C1203.0322%2C1203.5821%2C1203.1962%2C1203.6633%2C1203.1583%2C1203.0585%2C1203.1849%2C1203.2806%2C1203.0737%2C1203.6396%2C1203.1675%2C1203.5877%2C1203.5074%2C1203.3839%2C1201.3841%2C1201.4238%2C1201.3966%2C1201.2661%2C1201.6546%2C1201.5594%2C1201.3615%2C1201.0472%2C1201.5362%2C1201.5793%2C1201.0390%2C1201.1990%2C1201.0689%2C1201.6269%2C1201.5167%2C1201.1801%2C1201.5315%2C1201.4539%2C1201.1721%2C1201.3070%2C1201.4120%2C1201.5719%2C1201.1865%2C1201.6568%2C1201.3403%2C1201.0968%2C1201.5104%2C1201.6018%2C1201.0535%2C1201.5233%2C1201.0670%2C1201.5577%2C1201.4759%2C1201.3339%2C1201.1532%2C1201.4825%2C1201.1437%2C1201.5446%2C1201.4768%2C1201.3057&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Completion Delay Minimization for Instantly Decodable Network Codes"}, "summary": "In this paper, we consider the problem of minimizing the completion delay for\ninstantly decodable network coding (IDNC), in wireless multicast and broadcast\nscenarios. We are interested in this class of network coding due to its\nnumerous benefits, such as low decoding delay, low coding and decoding\ncomplexities and simple receiver requirements. We first extend the IDNC graph,\nwhich represents all feasible IDNC coding opportunities, to efficiently operate\nin both multicast and broadcast scenarios. We then formulate the minimum\ncompletion delay problem for IDNC as a stochastic shortest path (SSP) problem.\nAlthough finding the optimal policy using SSP is intractable, we use this\nformulation to draw the theoretical guidelines for the policies that can\nefficiently reduce the completion delay in IDNC. Based on these guidelines, we\ndesign a maximum weight clique selection algorithm, which can efficiently\nreduce the IDNC completion delay in polynomial time. We also design a quadratic\ntime heuristic clique selection algorithm, which can operate in real-time\napplications. Simulation results show that our proposed algorithms efficiently\nreduce the IDNC completion delay compared to the random and maximum-rate\nalgorithms, and almost achieve the global optimal completion delay performance\nover all network codes in broadcast scenarios.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1203.6291%2C1203.5458%2C1203.6445%2C1203.4408%2C1203.5431%2C1203.4515%2C1203.5847%2C1203.6143%2C1203.4171%2C1203.0639%2C1203.6485%2C1203.6862%2C1203.2471%2C1203.1906%2C1203.2029%2C1203.0620%2C1203.2070%2C1203.6159%2C1203.0377%2C1203.2499%2C1203.0355%2C1203.6051%2C1203.0008%2C1203.0127%2C1203.0086%2C1203.2764%2C1203.4428%2C1203.0199%2C1203.6390%2C1203.1865%2C1203.4941%2C1203.3802%2C1203.6671%2C1203.6611%2C1203.3279%2C1203.6392%2C1203.1970%2C1203.1156%2C1203.2200%2C1203.3871%2C1203.1063%2C1203.3786%2C1203.3503%2C1203.2953%2C1203.2820%2C1203.6462%2C1203.4650%2C1203.0322%2C1203.5821%2C1203.1962%2C1203.6633%2C1203.1583%2C1203.0585%2C1203.1849%2C1203.2806%2C1203.0737%2C1203.6396%2C1203.1675%2C1203.5877%2C1203.5074%2C1203.3839%2C1201.3841%2C1201.4238%2C1201.3966%2C1201.2661%2C1201.6546%2C1201.5594%2C1201.3615%2C1201.0472%2C1201.5362%2C1201.5793%2C1201.0390%2C1201.1990%2C1201.0689%2C1201.6269%2C1201.5167%2C1201.1801%2C1201.5315%2C1201.4539%2C1201.1721%2C1201.3070%2C1201.4120%2C1201.5719%2C1201.1865%2C1201.6568%2C1201.3403%2C1201.0968%2C1201.5104%2C1201.6018%2C1201.0535%2C1201.5233%2C1201.0670%2C1201.5577%2C1201.4759%2C1201.3339%2C1201.1532%2C1201.4825%2C1201.1437%2C1201.5446%2C1201.4768%2C1201.3057&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "In this paper, we consider the problem of minimizing the completion delay for\ninstantly decodable network coding (IDNC), in wireless multicast and broadcast\nscenarios. We are interested in this class of network coding due to its\nnumerous benefits, such as low decoding delay, low coding and decoding\ncomplexities and simple receiver requirements. We first extend the IDNC graph,\nwhich represents all feasible IDNC coding opportunities, to efficiently operate\nin both multicast and broadcast scenarios. We then formulate the minimum\ncompletion delay problem for IDNC as a stochastic shortest path (SSP) problem.\nAlthough finding the optimal policy using SSP is intractable, we use this\nformulation to draw the theoretical guidelines for the policies that can\nefficiently reduce the completion delay in IDNC. Based on these guidelines, we\ndesign a maximum weight clique selection algorithm, which can efficiently\nreduce the IDNC completion delay in polynomial time. We also design a quadratic\ntime heuristic clique selection algorithm, which can operate in real-time\napplications. Simulation results show that our proposed algorithms efficiently\nreduce the IDNC completion delay compared to the random and maximum-rate\nalgorithms, and almost achieve the global optimal completion delay performance\nover all network codes in broadcast scenarios."}, "authors": ["Sameh Sorour", "Shahrokh Valaee"], "author_detail": {"name": "Shahrokh Valaee"}, "author": "Shahrokh Valaee", "links": [{"href": "http://arxiv.org/abs/1201.4768v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1201.4768v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.NI", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.NI", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.IT", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "math.IT", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1201.4768v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1201.4768v1", "arxiv_comment": null, "journal_reference": null, "doi": null, "fulltext": "1\n\nCompletion Delay Minimization\nfor Instantly Decodable Network Codes\n\narXiv:1201.4768v1 [cs.NI] 23 Jan 2012\n\nSameh Sorour, Student Member, IEEE, Shahrokh Valaee, Senior Member, IEEE\n\nAbstract-In this paper, we consider the problem of minimizing\nthe completion delay for instantly decodable network coding\n(IDNC), in wireless multicast and broadcast scenarios. We are\ninterested in this class of network coding due to its numerous\nbenefits, such as low decoding delay, low coding and decoding\ncomplexities and simple receiver requirements. We first extend\nthe IDNC graph, which represents all feasible IDNC coding opportunities, to efficiently operate in both multicast and broadcast\nscenarios. We then formulate the minimum completion delay\nproblem for IDNC as a stochastic shortest path (SSP) problem.\nAlthough finding the optimal policy using SSP is intractable,\nwe use this formulation to draw the theoretical guidelines for\nthe policies that can efficiently reduce the completion delay in\nIDNC. Based on these guidelines, we design a maximum weight\nclique selection algorithm, which can efficiently reduce the IDNC\ncompletion delay in polynomial time. We also design a quadratic\ntime heuristic clique selection algorithm, which can operate in\nreal-time applications. Simulation results show that our proposed\nalgorithms efficiently reduce the IDNC completion delay compared to the random and maximum-rate algorithms, and almost\nachieve the global optimal completion delay performance over\nall network codes in broadcast scenarios.\nIndex Terms-Network Coding, Instantly Decodable Network\nCodes; Completion Delay; Wireless Multicast; Wireless Broadcast; Index Coding.\n\nI. I NTRODUCTION\n\nAND\n\nM OTIVATION\n\nM\n\nULTICAST Broadcast Services (MBS) have become a\ncorner stone in the design of all future wireless and\nmobile standards and networks, such as LTE and WiMAX.\nIt is now very common to find a group of pedestrians or\npeople on a bus watching a soccer match on their smart\nphones while some of them are downloading files, others are\nwatching the breaking news and others are looking for the\nclosest restaurants or using voice over IP applications,... etc.\nDue to the high demand on these MBS applications and their\nhigh bandwidth and delay requirements, it is very important\nfor MBS protocols to not only efficiently utilize the scarce\nbandwidth resources available to the network but to allow\nprogressive packet reception to satisfy delay requirements. In\nother words, while these protocols are minimizing the amount\nof resources (e.g. number of transmissions) consumed by such\napplication to increase the bandwidth efficiency, they should\nalso be able to guarantee the quality of streaming and delayintolerant applications, in which the received packets should\nbe always useful at their reception instant, in order to prevent\ninterruption or flickering of the stream. The simultaneous\nThe authors are with Edward S. Rogers Sr. Department of Electrical and Computer Engineering, University of Toronto, 10 King's\nCollege Road, Toronto, ON, M5S 3G4, Canada, e-mail:{samehsorour,\nvalaee}@comm.utoronto.ca.\nThis work is an extension to our paper [1] in ICC 2010\n\nachievement of these goals calls for new approachs to increase\nthe efficiency of the packet transmission and recovery processes. One major breakthrough in this area came with the\ndevelopment of network coding (NC).\nRecently, NC has shown great abilities to substantially\nimprove transmission efficiency, packet recovery, throughput\nand delay over broadcast erasure channels [2]\u2013[16]. Two trends\nof network coding can be distinguished in the literature,\nnamely random (or full) network coding (RNC) [17] [18] and\nopportunistic network coding (ONC) [19] [20]. The former\ntrend combines all the packets with random non-zero and\nindependent coefficients in each transmission. The latter trend\nexploits the receivers' side information in selecting packets\nto be coded in each transmission to achieve a certain target.\nDespite the great interest in RNC in the literature, its ability\nto recover packets without feedback, and its optimality in\nreducing the number of packet transmissions in broadcast\nscenarios [21], it is only feasible for applications with high\ndelay tolerance, since it does not support progressive packet\ndecoding. It is also inefficient in unicast and multicast scenarios, in which different groups of receivers are interested in\ndifferent subsets of the transmitted packets [14].\nIn this paper, we are interested in a sub-class of opportunistic network coding, called the instantly decodable network\ncoding (IDNC), in which received packets are allowed to be\ndecoded only at their reception instant and cannot be stored for\nfuture decoding. This IDNC approach is currently attracting\nmuch attention [8], [9], [22] due to its numerous desirable\nproperties. First, IDNC provides instant packet recovery upon\nappropriate packet reception, a property that perfectly matches\nthe requirements of the MBS streaming applications, and that\nRNC and general ONC lack. Moreover, the IDNC encoding\ncan be implemented using binary XOR, which eliminates\nthe complicated operations over large Galois fields and the\ncoefficient reporting overhead. This XOR encoding also simplifies the decoding process at the receivers, and eliminates the\nneed for matrix inversion, which represents a computational\nbottleneck in RNC [8]. Finally, no buffers are needed at the\nreceivers to store coded packets for future decoding. These\nsimple decoding and bufferless properties allow the design\nof simple and cost-efficient receivers, which is an important\nrequirement for mobile hand-held devices.\nDespite its attractive properties, IDNC does not guarantee\nservice to all receivers in each transmission, which affects its\nability to both maximize the number of decoding receivers in\neach and every transmission (i.e. capacity) and minimize the\nnumber of transmissions to deliver a frame or packets (i.e.\ncompletion delay). The former problem was deeply investigated in IDNC [8], [9], [22] and ONC [15], [16], whereas\n\n\flimited work has addressed the latter problem only for erasureless channels (a.k.a. the index coding problem [2]\u2013[4]). It has\nbeen shown that this index coding problem is NP-Hard to\nsolve and to approximate [23], [24]. Naturally, this complexity\nbecomes worse in case of erasure channels, which leaves us\nno choice other than designing efficient heuristics to solve it.\nThis fact raises the following question that we address in\nthis paper: What is the efficient heuristic policy that can reduce\nthe expected completion delay in IDNC, over erasure channels,\nfor both multicast and broadcast scenarios? Intuitively, one\nmight think that the best heuristic policy is to maximize\nthe number of receivers that can decode a new packet in\neach transmission, as studied in [8], [9], [15], [16], [22]. In\nthis paper, we show that this intuition is not true and that\nthe solution to the completion delay problem is obtained by\ngiving priority to targeting the receivers with higher demands\nand worse channels. To reach this result, we first extend the\nIDNC graph, which represents all the feasible IDNC packet\ncombinations according to receivers' side information, to suit\nboth multicast and broadcast scenarios. We then formulate the\nminimum completion delay problem in IDNC as a stochastic\nshortest path (SSP) problem, which is a special case of the\nMarkov decision process (MDP), having absorbing states.\nAlthough this formulation is impossible to solve, we mainly\nemploy it to draw the theoretical properties of the policy that\ncan efficiently reduce the completion delay in IDNC.\nBased on these properties, we design a two-stage maximum\nweight clique selection algorithm to reduce the completion\ndelay in IDNC in polynomial time for moderate graph sizes.\nFor further complexity reduction, we design a quadratic time\nheuristic algorithm, based on greedy maximum weight vertex\nsearch, which is more suitable for real-time applications. We\nfinally compare the performance of our proposed optimal and\nheuristic maximum weight clique search algorithms to RNC,\nthe random IDNC algorithm (that selects served receivers randomly) and the maximum clique IDNC algorithm (maximizing\nthe number of decoding receivers).\nThe contributions of this papers are summarized as follows:\n\u2022 To the best of our knowledge, this paper presents the first\nrigorous study on reducing the IDNC completion delay\nover erasure channels. In this study, we do not limit ourselves to maximizing the number of decoding receivers\nas in [8], [9], [15], [16], [22] but rather investigate both\nthe order of receiver service and the evolution of coding\nopportunities along the transmission process, which were\nshown to be the key factors affecting the optimization of\ncompletion delay in IDNC.\n\u2022 We design polynomial and quadratic-time heuristics that\nachieve near optimal completion delay performance.\nThe rest of the paper is organized as follows. We first\nsummarize related works in Section II. In Section III, we\nintroduce the system model and parameters. The IDNC graph\nis illustrated in Section IV. We present the problem formulation in Section V and draw the properties of efficient IDNC\ncompletion delay reduction in Sections VI, VII and VIII. The\nproposed algorithms are introduced in Section IX and their\nperformances are evaluated in Section X. Finally, Section XI\nconcludes the paper.\n\nII. R ELATED W ORK\nSince its first introduction in [25], network coding has\nbeen a great attraction to numerous studies as a routing and\nscheduling scheme that attains maximum information flow\nin a network. In [2]\u2013[4], the problem of determining packet\ncombinations, to minimize the number of transmissions (i.e.\ncompletion delay) over erasure-less channels, was studied\nunder the name of \"index coding\". In [23], it has been shown\nthat finding the optimal solution of the index coding problem is\nNP-hard and thus different heuristics to solve the index coding\nproblem were proposed in [4]. In this paper, we extend the\nstudy to the case of erasure channels. Our problem differs\nfrom index coding in that the feedback status of different\nreceivers changes probabilistically after each transmission over\nerasure channels. Thus, the coded packets cannot be scheduled\nfor the whole transmission process all at once, as in index\ncoding, but rather require to be dynamically scheduled after\neach transmission according to the received feedback.\nIn [5], the authors proposed an online network coding\nalgorithm for the three-receiver case, proved its rate optimality\nand conjectured its asymptotically optimal average delay.\nIn [6] and [7], the decoding delay performance of offline\nalgorithms was analyzed and the decoding delay of several\ngreedy online NC algorithms were compared for i.i.d. erasure\nchannels. These proposed algorithms performed un-prioritized\npacket selection for each NC transmission and did not consider\nthe channel conditions in their selection procedures. [8], [9]\nproposed a prioritized and channel-aware packet selection\nalgorithm that achieves optimal decoding delay for a more\nstrict version of IDNC. All these works are clearly different\nfrom our problem in terms of objective and proposed solutions.\nFor a more general ONC scenario than IDNC, in which undecoded packets can be stored for future use, [15], [16] study\nthe maximization of service rates (i.e. capacity) of multiple\nunicast sessions over 1-to-K broadcast erasure channels. Inner\nand outer capacity bounds were derived and were shown to\nmeet in the special cases of symmetric and spatially independent erasure channels. [15], [16] also proposed capacity\nachieving packet evolution algorithms, serving subsets of\nreceivers with incremental sizes in order to maximize the\nnumber of decoding receivers in every transmission, and thus\ntheir rates. Despite the more general decodability assumption\nconsidered in these works, our paper differs from them in both\nthe optimization objective and proposed algorithms. Unlike\nthe aim of [15], [16] to maximize the achievable unicast rates,\nthrough maximizing the number of decoding receivers in every\ntransmission, our paper studies the problem of minimizing\nthe total number of transmissions (i.e. completion delay) to\ndeliver a frame of multicast or broadcast packets over erasure\nchannels, which makes it an extension to the index coding\nproblem. Moreover, the proposed packet evolution algorithms\nin [15], [16] do not prioritize receiver service, but rather serve\nreceiver subsets, with same size, in an arbitrary sequential\ncyclic or acyclic fashion. Consequently, these algorithms are\nnot suitable solvers to the completion delay minimization\nproblem, whose solution greatly depends on the prioritization\nof receiver service according to their demand and erasure\n2\n\n\fprobabilities, as will be shown in Section VII. Our proposed\nalgorithms focus on implementing this prioritization and are\nthus significantly different from those proposed in [15], [16].\n\ninstantly decodable by any subset or all the receivers. An\ninitial idea about the representation of packet combinations\nwas introduced in the form of a graph, when designing a\nheuristic algorithm to solve the index coding problem [2], [4].\nThis graph, which we will denote by G\u03c1 (V\u03c1 , E\u03c1 ), is constructed\nby first inducing a vertex vij in V\u03c1 for each packet j \u2208 Wi ,\n\u2200 i \u2208 M. Two vertices vij and vkl in G\u03c1 are connected by an\nedge in E\u03c1 if one of the following conditions is true:\n\u2022 C1: j = l \u21d2 The two vertices are induced by the loss of\nthe same packet j by two different receivers i and k.\n\u2022 C2: j \u2208 Hk and l \u2208 Hi \u21d2 The requested packet of each\nvertex is in the Has set of the receiver of the other vertex.\nConsequently, each edge between two vertices in the graph\nrepresents a coding opportunity, which is defined as an opportunity of generating an instantly decodable packet for the\ntwo receivers inducing these vertices. Given this graph, we\ncan easily define the set of all feasible packet combinations in\nIDNC as the set of packet combinations defined by all maximal\ncliques in G\u03c1 (a maximal clique is a clique that is not a subset\nof any larger clique). The sender can generate an IDNC packet\nfor a given transmission by XORing all the packets identified\nby the vertices of a selected maximal clique \u03ba\u03c1 in G\u03c1 .\nThe above formulation of G\u03c1 is suitable when optimizing\npacket combinations in a broadcast setting as in [1]. In\nmulticast scenarios, we can explore the enhancement of coding\nopportunities at receivers that are not considered for primary\npacket reception, by delivering secondary packets to them. Although these packets are not requested at these receivers, their\nreception along the steps of the recovery phase, when they\nare not targeted with primary packets, will enlarge their Has\nsets. According to Condition C2, this will increase chances\nof creating more coding opportunities that can serve these\nreceivers in the future steps towards completion. However, this\nservice of secondary packets should never affect the instant\ndecodability of the primary packets at the other receivers.\nTo achieve both goals, we propose a new two-layered graph\nG(V, E). The primary layer consists of graph G\u03c1 , described\nabove. The secondary layer G\u03c3 (V\u03c3 , E\u03c3 ) is constructed by\ngenerating a vertex vij \u2208 V\u03c3 for each packet j \u2208 L \\ Wi ,\n\u2200 i \u2208 M, and connecting any two vertices satisfying either C1\nor C2. Finally, we connect any two vertices from both layers\nif either C1 or C2 holds. In the rest of the paper, we will refer\nto G\u03c1 , G\u03c3 and G as the primary, secondary and IDNC graphs,\nrespectively. Figure 1 depicts an example of a feedback table\nand its corresponding IDNC graph. It is easy to show that the\noverall complexity of graph construction is O(M 2 N ).\nAccording to the design of G, we can easily infer that each\nreceiver can have at most one primary or secondary vertex\nin each of its maximal cliques. Consequently, the selection\nof a maximal clique for a given transmission is equivalent\nto the selection of a set of targeted receivers. We can thus\nenvision the completion delay minimization problem, given the\nIDNC graph, as a problem of finding the optimal scheduling of\ntargeted receiver subsets under the IDNC constraint, in order to\ncomplete the recovery phase as fast as possible. After selecting\nthe maximal clique determining the targeted receivers for any\ntransmission, the source packets identified by its vertices will\nbe XORed to generate the coded packet.\n\nIII. S YSTEM M ODEL AND PARAMETERS\nThe system model we consider in this paper consists of a\nwireless sender that is required to deliver a frame (denoted\nby N ) of N source packets to a set (denoted by M) of\nM receivers. Each receiver is interested in receiving either a\nsubset or all the packets of N . The former case is referred\nto as \"multicast\" whereas the latter case is referred to as\n\"broadcast\". We will refer to the requested and undesired\npackets of any receiver by its \"primary\" and \"secondary\"\npackets. The sender initially transmits the N packets of the\nframe uncoded in an initial transmission phase. Each receiver\nlistens to all transmitted packets (even the ones that it does not\nwant) and feedbacks to the sender a positive acknowledgement\n(ACK) for each received packet. At the end of the initial\ntransmission phase, three sets of packets are attributed to each\nreceiver i:\n\u2022 The Has set (Hi ) is defined as the set of primary and\nsecondary packets correctly received by receiver i.\n\u2022 The Lacks set (Li = N \\ Hi ) is defined as the set of\nprimary and secondary packets not received by i.\n\u2022 The Wants set (Wi \u2286 Li ) is defined as the set of primary\npackets that receiver i has not yet received.\nThe sender stores this information in a state feedback matrix\n(SFM) F = [fij ] , \u2200 i \u2208 M, j \u2208 N such that fij = 0 if\nj \u2208 Hi , fij = 1 if j \u2208 Wi , and fij = \u22121 if j \u2208 Li \\ Wi .\nAfter the initial transmission phase, a recovery transmission\nphase starts, in which the sender exploits the reception diversity in the SFM to employ NC. These NC packets must include\nat most one source packet from the Wants or Lacks sets of a\nsubset or all of the receivers. The receivers that cannot decode\na new source packet from this NC packet discard it. For each\ndecoded source packet, the receivers send ACK packets that\nare used by the sender to update the SFM and the sets Hi , Li\nand Wi , \u2200 i. This process is repeated until all receivers obtain\ntheir requested packets. We define the completion delay of\na frame as the number of recovery transmissions required to\ndeliver all requested packets to their receivers.\nDefine \u033a = [\u033a1 , . . . , \u033aM ], \u03c6 = [\u03c61 , . . . , \u03c6M ] and \u03c8 =\n[\u03c81 , . . . , \u03c8M ] as the Has, Lacks and Wants vectors, such\nthat \u033ai , \u03c6i and \u03c8i are the cardinalities of Hi , Li and Wi ,\nrespectively. Let pi and qi = 1 \u2212 pi be the packet erasure\nand success probabilities observed by receiver i, respectively.\nWe assume that pi and qi \u2200 i do not change during the\nframe transmission period. Also, let \u03bci be the demand ratio\nof receiver i, defined as the ratio of its primary packets in the\nframe to the frame size N . Given this definition of \u03bci , we can\nfocus on studying the multicast scenario, since the broadcast\nscenario can be viewed as a special case of the multicast\nPM\n1\nscenario, in which \u03bci = 1 \u2200 i. Finally, define \u03bc = M\ni=1 \u03bci\nas the average of the demand ratios of all receivers.\nIV. IDNC GRAPH\nTo form optimized IDNC packets, we should first design\na representation of all feasible packet combinations that are\n3\n\n\fFig. 2: State representation, action space of the example in\nFigure 1 and its possible transitions for action a7 .\n\nB. Problem Formulation\nFig. 1: Example of a feedback matrix and its corresponding\nIDNC multicast graph. The shaded and white boxes and vertices represent the wanted and unwanted packets, respectively.\n\nThe problem of minimizing the expected completion delay\nin IDNC can be formulated as an SSP problem as follows:\n1) State Space S: States are defined by all possibilities of\nSFM F(s) that may occur during the recovery transmission\nphase. For state s, the matrix represents the content of Has,\nLacks and Wants sets in s (i.e. Hi (s), Li (s) and Wi (s)\n\u2200 i \u2208 M) as defined by (??). According\n\u0001 to its definition, the\nstate space has a size of |S| = O 2MN . We can characterize\neach state s by its Has, Lacks and Wants vectors \u033a(s),\n\u03c6(s) and \u03c8(s). Note that several states can have the same\ncardinality vectors. The Wants vector of any absorbing state\nis 1 \u00d7 M , which we denote by \u03c80 .\n\nIn the rest of the paper, we say that a receiver is targeted\nby an IDNC packet if the selected maximal clique includes a\nvertex induced by this receiver. We also define T\u03c1 (\u03ba), T\u03c3 (\u03ba)\nand T (\u03ba) as the set of all primary, secondary and overall\ntargeted receivers of a given maximal clique \u03ba.\nV. P ROBLEM F ORMULATION\nA. The SSP Problem\n\nUSING\n\nSSP\n\nThe stochastic shortest path (SSP) problem is a special\ncase of the infinite horizon MDP, which can model decision\nbased stochastic dynamic systems with terminating situations.\nIn SSP, all the possible situations the system may encounter are\nmodeled as states in a state space S. In each state s \u2208 S, the\nsystem must select an action a from an action space A(s) \u2286 A\nthat will charge it an immediate cost c(s, a) (where A denotes\nthe action space of SSP). The terminating situations of the\nsystem can be thus represented as zero-cost absorbing states.\nOnce an action a is taken at state s, the system can move to a\nstate s\u2032 with probability Pa (s, s\u2032 ), which only depends on the\ncurrent state and the taken action. An SSP policy \u03c0 = [\u03c0(s)]\nis a mapping from S \u2192 A that specifies a given action to each\nof the states. The optimal policy \u03c0 \u2217 of an SSP is the one that\nminimizes the cumulative mean cost until an absorbing state\nis reached.\nThe algorithms that solve SSPs define a value function\nV\u03c0 (s) as the expected cumulative cost until absorption, when\nthe system starts at state s and follows policy \u03c0. It can be\nrecursively expressed \u2200 s \u2208 S as:\nX\nP\u03c0(s) (s, s\u2032 ) V\u03c0 (s\u2032 ) , (1)\nV\u03c0 (s) = c(s, \u03c0(s)) +\n\n2) Action Spaces A(s): For each state s, the action space\nA(s) consists of the set of all possible maximal cliques in\nthe IDNC graph G(s), constructed from the SFM F(s).\n3) State-Action Transition Probabilities: To define the\nstate-action transition probability P\u03ba(s) (s, s\u2032 ) for an action\n\u03ba(s) \u2208 A(s), we first introduce the following two sets:\n\b\nX = i \u2208 T (\u03ba(s)) \u03c6i (s) > \u03c6i (s\u2032 )\n(3)\n\b\n\u2032\nY = i \u2208 T (\u03ba(s)) \u03c6i (s) = \u03c6i (s ) .\n(4)\n\nThe first set includes the targeted receivers whose Lacks\nsets have decreased from state s to state s\u2032 , and thus have\nsuccessfully received the IDNC packet generated from \u03ba(s).\nThe second set includes the targeted receivers that have lost\nthe IDNC packet generated from \u03ba(s) and thus their Lacks\nsets did not change. Based on the definitions of these sets,\nP\u03ba(s) (s, s\u2032 ) can be expressed as follows:\nY\nY\nP\u03ba(s) (s, s\u2032 ) =\nqi *\npi .\n(5)\ni\u2208X\n\ni\u2208Y\n\nFigure 2 depicts the state representation and the action space\nfor the example in Figure 1. It also depicts the possible\ntransitions given that action a7 is performed.\n\ns\u2032 \u2208S(s,a)\n\nwhere S(s, a) is the set of successor states to s when action a\nis taken (i.e. S(s, a) = {s\u2032 |Pa (s, s\u2032 ) > 0}). Consequently, the\noptimal policy at state s can be defined \u2200 s \u2208 S as:\n\uf8fc\n\uf8f1\n\uf8fd\n\uf8f2\nX\nPa (s, s\u2032 ) V\u03c0\u2217 (s\u2032 ) .\n\u03c0 \u2217 (s) = arg min\nc(s, a) +\n\uf8fe\na\u2208A(s) \uf8f3\n\u2032\n\n4) State-Action Costs: The expected completion delay is\ndefined in SSP terms as the expected number of transitions in\nthe process before arriving to an absorbing state. Since any\ntransition (due to any action) takes one packet transmission,\nthe cost payed by the process is one time-slot. Consequently,\n\ns \u2208S(s,a)\n\n(2)\n\n4\n\n\fthe costs of all actions in all states should be set to 1. In other\nwords, c(s, \u03ba(s)) = 1 \u2200 \u03ba(s) \u2208 A(s), s \u2208 S.\n\nFrom Properties 2 and 3, we know that all successors of state\ns are closer to the absorbing state (thus having smaller mean\ncompletion delays) except for itself. Consequently, the optimal\naction at state s is the one that has high probability in moving\nto states with the minimum expected residual completion delay\n(i.e. minimum mean time to absorption), given the optimal\npolicy.\nNow the problem is that there is no close form expression\nfor the optimal value functions V\u03c0\u2217 (s\u2032 ) in IDNC and thus\nthere is no means of accurately computing it to determine the\noptimal policy without solving the SSP. However, based on the\nprevious properties and facts, we can easily infer that the value\nof V\u03c0\u2217 (s\u2032 ) for any s\u2032 , that is successor to state s, depends on\ntwo main factors:\n\u2032\n\u2022 The closeness of the state's Wants vector \u03c8(s ) to that\nof the absorbing states \u03c80 .\n\u2022 The number and sizes of the primary maximal cliques\navailable as actions in state s\u2032 .\nIndeed, the smaller the distance between \u03c8(s\u2032 ) and \u03c80 , the\nsmaller the value function of state s\u2032 . However, this condition\nis not enough as we should also check the availability of\nefficient actions at this state that can bring the system faster to\nan absorbing state. In general, the successor states of s, whose\nprimary graphs include more numerous and larger maximal\ncliques, have more chances of reaching the absorbing state\nfaster than the others. Since all states s\u2032 are successors of a\nsame state s, their graphs are different variants of G(s) depending on the vertices that have been served. Consequently, the\naction at state s, which can maximize the coding opportunities\nin the IDNC primary graph at state s\u2032 , will result in larger and\nmore numerous primary maximal cliques, which will help in\nreaching an absorbing state faster in future steps. Based on\nthese observation, we state that the policy that can efficiently\nreduce the expected completion delay in IDNC should aim, at\nany visited state, to both:\n\u2022 Bring the system Wants vector the closest to the absorbing states vector \u03c80 .\n\u2022 Maximize the coding opportunities in the successor\nstate's primary graph.\nIf we can find a policy that can simultaneously achieve these\ntwo goals, we will employ it to design an algorithm to\nefficiently reduce the expected completion delay for IDNC.\nTo investigate the existence of such policy, we will study\ntwo important features of the problem, namely its geometric\nstructure, and the evolution of coding opportunities in the\nIDNC graph. This will be the target of the next two sections.\n\nC. SSP Solution Complexity\nThe optimal policy of an SSP problem can be computed\nusing the policy iteration and value iteration algorithms.\u0001 The\n3\n2\ncomplexities\n\u0001 of these algorithms are \u0398 |S| + |S| |A| and\n2\n\u0398 |S| |A| . According to the dimensions of S and A(s)\ndescribed in Section V-B, we conclude that computing the\noptimal policy is very difficult in real-time for typical values\nof M and N . Even the simulation based technique proposed\nin [11] will not be able to compute the optimal policy in realtime since its complexity still scales with |S|.\nVI. SSP P ROPERTIES\nDespite the complexity of solving the SSP problem formulated in Section V-B, we can study its properties and structure\nto draw the characteristics of policies that can efficiently\nminimize the expected completion delay. From Section V-B,\nit is easy to infer that the SSP formulation has the following\nproperties:\nProperty 1 (Uniform Cost).\nThe costs of all actions in all states are all the same except\nfor the absorbing state.\nProperty 2 (Non-singleton acyclicity).\nNo state can be revisited once the process moves to a next\nstate, and thus the SSP formulation is acyclic. Indeed, if some\npackets are received by some receivers when an action is taken\nat a given state, there is no means of going back with these\nreceivers not having these packets. However, a state can revisit\nitself (singleton cycles) if none of the targeted receivers by the\ntaken action receives the IDNC packet.\nProperty 3 (Non-increasing successor value functions).\nSince there are no cycles of size more than one, the successor\nstates of a state s are all closer to the absorbing states than\ns. Consequently, the expected cost to absorption starting from\na given state is always greater than or equal to the expected\ncosts to absorption starting from all its successor states.\nThese three properties can be employed to draw the properties of the optimal policy \u03c0 \u2217 minimizing the mean completion\ndelay at any given state s as follows. From the uniform cost\nin Property 1, we have:\n\uf8fc\n\uf8f1\n\uf8fd\n\uf8f2\nX\nP\u03ba (s, s\u2032 ) V\u03c0\u2217 (s\u2032 )\n\u03c0 \u2217 (s) = arg min\n1+\n\uf8fe\n\u03ba(s)\u2208A(s) \uf8f3\ns\u2032 \u2208S(s,\u03ba(s))\n\uf8fc\n\uf8f1\n\uf8fd\n\uf8f2 X\nP\u03ba (s, s\u2032 ) V\u03c0\u2217 (s\u2032 )\n= arg min\n\uf8fe\n\u03ba(s)\u2208A(s) \uf8f3 \u2032\ns \u2208S(s,\u03ba(s))\n\b\n(6)\nE\u03ba(s) [V\u03c0\u2217 (s\u2032 )] ,\n= arg min\n\nVII. G EOMETRIC S TRUCTURE\nIn this section, we will explore the actions, which have high\nchances of moving the system Wants vector closest to that of\nthe absorbing states. Given the representation of the SSP states\nby their Wants vector, we can define a geometric structure as\nfollows. Define an M -dimensional space, and locate to each\npoint \u03a8 = [\u03a81 , . . . , \u03a8M ] in this space all the states having\nWants vectors equal to the coordinates of this point. Although\nmany states can share the same Wants vector and thus can\nbe located at the same point, these states differ from one\n\n\u03ba(s)\u2208A(s)\n\nwhere E\u03ba(s) is the expectation operator over the different\ntransition probabilities when action \u03ba(s) is taken. Thus, the\noptimal action at state s is the action minimizing the expectation of the optimal value functions of the successor states.\n\n5\n\n\fset cardinalities as lower bounds on the completion delay.\nConsequently, serving these receivers first gives hope to reduce\nthis lower bound at each step whereas ignoring them will not\nchange the lower bound.\nHowever, minimizing the maximum of the Wants vector\nentries is not enough to describe the actions with closest\nsuccessor states to absorption. For example, actions a1 and\na3 in Figure 3 have the same value for maxi {\u03c8i (s\u2032 )}, but a1\nbrings the system closer to the absorbing point compared to a3\nin terms of Wants vector, since it serves an additional receiver\nwith smaller Wants set. This is also reflected on the geometric\ndistance from the two destination points to \u03a80 .\nFrom the above example, we can conclude that, in order\nto bring the system closest to the absorbing point in terms of\nWants vector, the sender should give more weight to serving\nthe receivers with largest coordinate entries, while maximizing\nthe number of served receivers with the smaller coordinate\nentries. This weighting can be done through norm expressions.\nFor example, the L2 norm (Euclidian distance) represented the\nstate closeness to absorption, in terms of the Wants vectors,\nin the previous examples. The larger the employed norm, the\nmore biased the weighting in giving service to the receivers\nwith largest coordinate entries.\nFor erasure channels, the effect of packet erasures should be\nreflected on the geometric structure of the problem. Let i and\nk be two receivers having the same Wants set size but pi >\npk . Consequently, i will require on average more targeting\nattempts compared to k in order to deplete its Wants set. Since\nwe assume that erasure probabilities do not change during the\ntransmission of a frame, targeting k and ignoring i is expected\nto result in a higher overall completion delay, especially when\ne\n\u03c8ei (s) is among the largest value in \u03c8(s).\nAccording to these\nfacts and the intuition explained above for the erasure-free\ncase, i should be given a higher priority of service than k.\nTo implement the above prioritization,\nwe define ai channel\nh\ne\nweighted Wants vector \u03c8(s)\n= \u03c8e1 (s), . . . , \u03c8eM (s) , where\n. Based on this new vector definition, we can\n\u03c8ei (s) = \u03c8iq(s)\ni\nredefine our space such that its points \u03a8 are identified by the\ne\ncoordinates of the vectors \u03c8(s)\ninstead of \u03c8(s) \u2200 s \u2208 S. In\nthis case, the actions move the system within hyper-rectangles\n\u0393\u2032 (s) with sides equal to qi\u22121 in the i-th dimension. In other\nwords:\n\u001a\n\u001b\n\u22121\n\u2032\n\u2032\n\u2032\n\u0393 (s) = \u03a8 \u03c8i (s) \u2212 \u03c8i (s ) \u2208 {0, qi } \u2200 i \u2208 M . (8)\n\nFig. 3: Geometric structure of the example in Figure 2 after\nremoving the fourth column\n\nanother by their IDNC graphs. All absorbing states will be\nlocated at the origin \u03a80 of this space. Note that this geometric\nrepresentation has the same non-singleton acyclicity property\nas the SSP (i.e. a point cannot be revisited after it is left).\nSince at most one packet can be decoded by each receiver\nfrom any IDNC transmission, the system can at most move\nfrom the point \u03a8 = \u03c8(s) to a point \u03a8\u2032 = \u03c8(s\u2032 ) which is a\nvertex in the hypercube \u0393(s) defined as:\n\u001a\n\u001b\n\u0393(s) = \u03a8\u2032 \u03c8i (s) \u2212 \u03c8i (s\u2032 ) \u2208 {0, 1} \u2200 i \u2208 M . (7)\nIn other words, \u0393(s) is the hypercube of side length 1, in which\n\u03c8i (s) is the corner having the largest coordinates. In this case,\nthe optimal action at any state is the one that can transitions\nthe system to the opposite diagonal point in the M-dimensional\nhypercube, for which \u03c8i (s) \u2212 \u03c8i (s\u2032 ) = 1 \u2200 i \u2208 M. This\naction means that all M receivers are targeted with primary\npackets. If such actions exist and are applied in all visited\nstates, we will reach completion faster. However, these actions\nwill most probably not exist in most states due to the instantly\ndecodability constraint. Consequently, We need a method to\nestimate the closeness of other points to the absorbing state to\nevaluate our IDNC scheme.\nFigure 3 depicts the geometric structure of the example\nin Figure 2 after removing the fourth column (i.e. removing\nthe fourth packet and the actions it appears in). Consequently the system is at point identified by the Wants vector\n\u03c8(s) = [2, 1, 1]. In this example, there are only five actions\na1 , a2 , a3 , a5 , a6 according to their notation in Figure 2. Assuming that the system is erasure-free, action a3 will lead\nthe system to point [1, 1, 1] whereas action a5 will lead it\nto point [2, 0, 0]. Although a5 targets more receivers than a3\n(which makes it a capacity achieving action as of [15], [16]),\nwe can clearly see that the latter action gives the chance\nto the system to reach absorption with one more erasurefree transmission, if there exists an IDNC packet targeting\nall three receivers at the state located at point [1, 1, 1]. This\ncloseness to absorption in terms of Wants vectors is shown\nthrough the smaller geometric distance from point [1, 1, 1]\nto \u03a80 , compared to point [2, 0, 0]. We can infer from this\nexample that minimizing the maximum entry of the Wants\nvector (i.e. maxi {\u03c8i (s\u2032 )}) brings the system closest to the\nabsorbing point. The intuition behind this finding is that the\nreceivers having the largest Wants sets will impose their Wants\n\nThe sender should then take the action that can reach successor\nstates with minimum Ln norm over this geometry.\nFrom the above observations, we can draw a conclusion that\nthe policies, which efficiently reduce the IDNC completion\ndelay, should always aim at each visited state s to reach a\nstate s\u2032 that is located at the point with minimum distance to\ne (s\u2032 ) .\nthe absorbing point \u03a80 and thus the minimum \u03c8\ni\nn\nConsequently, the receivers with larger values of \u03c8ei will\nhave higher priority to be selected for transmission at state\ns. Now, if we can show that this norm based selection of\nthe receivers also maximizes the coding opportunities in the\nsuccessor states, then this norm based selection policy is our\n6\n\n\fA. Causal Evolution\n\nsearched policy as explained in Section VI. To investigate this\npoint, we will study the evolution of the coding opportunities\nin the IDNC graph with respect to the selection of receivers\nin each transmission in the next section.\n\nVIII. E VOLUTION\n\nOF\n\nThe first term in the right-hand side of (9) is the expected\nedge set cardinality at time t. This means that the edge set\nsize at one time depends on its previous size instances and\nthus the evolution process is causal. Consequently, if the edge\nset cardinality at t + 1 was maximized, the future evolutions\nin visited successor states at times t + 2 and t + 3, ... will also\nbenefit from the maximization that occurred at time t, which\nresults in the maximization of their edge set size, if the same\npolicy is employed in each step.\n\nC ODING O PPORTUNITIES\n\nAs stated in Section VI, one major factor that identifies\nthe efficiency of an action in reducing the completion delay\nis its ability to maximize the coding opportunities in the\nprimary IDNC graph. We know from the IDNC graph structure\nthat the coding opportunities are represented by its edges.\nConsequently, the overall number of coding opportunities in\nthe graph are represented by its edge set size. In [26], we\nstudied the receiver selection strategies, maximizing the coding\nopportunities and density in the IDNC graph for wireless\nbroadcast. This study is done based on ignoring the packet\ncontent of the Has, Lacks and Wants sets and computing the\nexpected edge set size given their cardinalities. In this paper,\nwe will extend this study to the case of wireless multicast\nby first introducing the following theorem. In all upcoming\nanalysis in this section, we assume the system is at an arbitrary\nstate s and all the variables represent their values at this state,\nthus dropping the (s) notation for simplicity.\n\nB. Vertex Disappearance\nThe second term in (9) represents an expected reduction\nin the edge set size due to the possible disappearance of the\nprimary targeted vertices. This disappearance results in the\nremoval of their adjacent edges at time t, which is reflected\nin the E [\u2206ti ] term. It also results in the loss of the potential\nimprovement in these degrees if they were kept in the graph,\nwhich is reflected in the \u03b3i term. This loss is a natural outcome\nof the recovery transmission process and is unavoidable. We\ncannot try to reduce this term by reducing the size of the\nprimary targeted receiver set as this will tend to increase the\nexpected completion delay. However, we can still reduce the\neffect of this loss component by serving the vertices with\nsmaller degrees. The following theorem compares the expected\nvertex degrees of two receivers given the sizes of their Has\nand Wants sets.\n\nTheorem 1. For a given maximal clique \u03ba, chosen for\ntransmission at time t in a multicast scenario, the expected\nedge set cardinality of the IDNC primary graph at time t + 1\nis expressed as:\n\"\n#\n\"\n#\n\u0010 h\ni\n\u0011\n1 X\n(t)\n(t+1)\n(t)\nqi E \u2206i + \u03b3i\nE E\u03c1\n= E E\u03c1\n\u2212\n2\n\nTheorem 2. If \u03c8i > \u03c8h and \u033ai < \u033ah , then E [\u2206h ] > E [\u2206i ].\nProof: The proof can be found in Appendix B\nNow, if qi < qh and \u03c8i > \u03c8h , 12 qi E [\u2206i ] < 12 qh E [\u2206h ].\nConsequently, serving receivers with largest Wants sets and\nerasure probabilities, and smallest Has sets, results in a smaller\nloss in the resulting edge set size.\n\ni\u2208T\u03c1 (\u03ba)\n\n1 X\n1 X\n+\n\u03c8i \u03b1i +\n\u03c8i \u03b2i ,\n2\n2\ni\u2208T (\u03ba)\n\n(9)\n\ni\u2208T\n/ (\u03ba)\n\nwhere\n\u03b1i =\n\nC. Degrees of Remaining Vertices\nM\nX\n\nk=1\nk6=i\n\n\u03b2i = \u2212\n\nqi \u03bek \u2212\nX\n\nX\n\nk\u2208T\u03c1 (\u03ba)\nk6=i\n\n\u03a6ik (0) +\n\n\u03b3i =\n\nk=1\nk6=i\n\n\u03bek \u2212\n\nX\n\n\u039bik (qi ) ,\n\n(11)\n\nThe third and fourth terms in (9) represent the change in\nthe degrees of the remaining vertices in the primary graph,\nwhich are quantified by \u03c8i \u03b1i and \u03c8i \u03b2i for the targeted and\nnon-targeted receivers, respectively. The following theorem\ndescribes the relation between these two terms.\n\n(12)\n\nTheorem 3. The increase in the degrees of the remaining\nvertices of any receiver is larger when it is targeted than when\nit is not. In other words, \u03b1i \u2265 \u03b2i \u2200 i \u2208 M.\n\n(10)\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\n\u039bik (0) ,\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\nk\u2208T\u03c1 (\u03ba)\nk6=i\nM\nX\n\n\u03a6ik (qi ) +\n\nX\n\nX\n\nk\u2208T\u03c1 (\u03ba)\nk6=i\n\n\u03a6ik (1) +\n\nX\n\n\u039bik (1) ,\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\nProof: The proof can be found in Appendix C.\nNow, moving a receiver i from the non-targeted set to\nthe targeted set results in an extra number of edges of\n\u03c8i\n2 (\u03b1i \u2212 \u03b2i ). This term is larger when \u03c8i is larger, and thus\nmoving a receiver with a larger Wants set to the targeted\nreceiver set adds more edges to the primary graph than moving\na receiver with a smaller Wants set. Consequently, a larger\nincrease in the expected edge set size is obtained when\ntargeting the maximum number of receivers having larger\nWants sets.\nAnother important insight about the values of \u03b1i and \u03b2i can\nbe inferred from the analysis of their components \u03a6ik and \u039bik .\n\n\u0012\n\u0013\nqk\n(\u033ak \u2212 \u03c8k + 1) (\u033ai + x)\n\u03a6ik (x) =\n1+\n,\n(13)\nN\nN \u22121\nqk \u03c8k (\u033ai + x)\n\u03c8k \u033ak\n\u039bik (x) =\n,\n\u03bek =\n,\n(14)\nN (N \u2212 1)\nN (N \u2212 1)\ni\nh\n(t)\nis the expected degree of a vertex of receiver i\nand E \u2206i\nat time t.\nProof: The proof can be found in Appendix A.\nFrom the above theorem, we can draw the following observations about the maximization of the edge set size.\n7\n\n\fSince the terms\n\nP\n\nP\n\nk\u2208T\u03c1 (\u03ba) \u03a6ik (qi ) and\nk\u2208T\u03c1 (\u03ba) \u03a6ik (0) are\nk6=i\nk6=i\nfrom \u03b1i and \u03b2i , respectively, then selecting\n\npackets will increase the coding opportunities of their remaining primary (and secondary) vertices, which allows them to get\nserved faster in future transmissions, thus bringing the process\nclosest to absorption.\nGiven the above facts, we conclude this section by stating\nthat the WoRLT strategy is the policy that can efficiently\nreduce the IDNC completion delay, as claimed in Section VI.\nWe will thus design our proposed algorithms according to this\nstrategy in the following section.\n\nsubtractive terms\nthe receivers with smaller values of \u03a6ik (qi ) and \u03a6ik (0) to be\nprimary targeted receivers increases the values of \u03b1i and \u03b2i ,\nrespectively. Now, if qk < qh , \u03c8k > \u03c8h and \u033ak < \u033ah , we\nhave:\nqk (\u033ak \u2212 \u03c8k + 1) < qh (\u033ah \u2212 \u03c8h + 1)\n\u21d2 \u03a6ik (qi ) < \u03a6ih (qi ) and \u03a6ik (0) < \u03a6ih (0)\n\n(15)\n(16)\n\nConsequently, the receivers having larger Wants sets and\nerasure probabilities, and smaller Has sets, have smaller values\nof \u03a6ik (qi ) and \u03a6ik (0). In case of equal demand ratios at all\nreceivers (including the broadcast scenarios), the three above\nconditions are equivalent on average. In other words, the\nreceivers having smaller reception probabilities will on average\nhave larger Wants sets and smaller Has sets. Consequently,\nmaximizing the number of such receivers in the set of primary\ntargeted receiver maximizes\nthe values of both\nP \u03b1i and \u03b2i .\nP\n\u039b\n(q\n)\nand\nSince the terms\nk\u2208T\u03c3 (\u03ba) ik i\nk\u2208T\u03c3 (\u03ba) \u039bik (0)\nk6=i\n\nIX. P ROPOSED A LGORITHMS\nA. Maximum Weight Clique Selection Algorithm\nAccording to the findings of the previous sections, we\npropose a two-step maximal clique selection algorithm that\nshould be executed at any visited state s. In the first step,\nthe algorithm selects the maximal clique \u03ba\u2217\u03c1 (s) in the primary\ngraph that targets receivers with larger channel weighted Want\nset sizes, thus minimizing k\u03c8ei (s)kn for the expected successor\nstate and maximizing the number of edges in its graph. To\nfurther maximize the number of edges, the same process\nshould be done for the secondary subgraph connected to \u03ba\u2217\u03c1\nto find \u03ba\u2217\u03c3 (s). Each of these two steps can be done using a\nmaximum weight clique selection algorithm as follows.\nFor each\n\u0011n vij in the multicast IDNC graph, we assign a\n\u0010 vertex\ne\nweight \u03c8i (s) , where n is the order of the selected norm.\nAfter finding this clique, the secondary subgraph connected\nto \u03ba\u2217\u03c1 is extracted and the maximum weight clique selection\nalgorithm is run on it to obtain \u03ba\u2217\u03c3 . When both cliques are\nfound, the sender sends an IDNC packet that is generated by\nXORing all the source packets identified by the vertices in both\ncliques. After receiving the feedback from the receiver, the\nsender determines the reached successor state and the whole\nprocedure is re-executed. This loop is run until all vertices in\nthe primary graph are depleted.\nIt is well known that the maximum weight clique selection\nproblem is NP-hard [27], and is hard to approximate [28].\nOn the other hand, there exist several algorithms that solve\nthis problem in polynomial time for moderate size graphs\n( [29] and references therein). However, the complexity of\nthese algorithms may still be prohibitive for the applications\nof interest in this paper [29]. Consequently, we will design a\nsimple heuristic in the next section to solve the problem with\nmuch lower complexity.\n\nk6=i\n\nare additive terms to \u03b1i and \u03b2i , respectively, then selecting\nthe receivers with larger values of \u039bik (qi ) and \u039bik (0) to be\nsecondary targeted receivers increases the values of \u03b1i and \u03b2i ,\nrespectively. The values of \u039bik (qi ) and \u039bik (0) are larger for\nreceivers having larger value of qk \u03c8k and thus having larger\nWants sets but lower erasure probabilities.\nD. Overall Maximization Strategy\n\nFrom the above theorems and discussion, we can infer that,\nafter a given transmission, the value of the edge set size in\nthe primary graph is maximized by targeting the receivers,\nhaving the largest Wants sets and erasure probabilities (i.e.\nlargest \u03c8ei values), with primary packets, then targeting the\nremaining receivers, having the largest Want sets and lower\nerasure probabilities, with secondary packets. We will refer to\nthis strategy as the worst receiver layered targeting (WoRLT)\nstrategy.\nIn the primary graph, the WoRLT strategy is equivalent to\na norm minimization of the channel weighted Wants vector\ne Indeed, such minimization will result in targeting the\n\u03c8.\nmaximum number of receivers having the largest Wants sets\nand erasure probabilities. According to the discussion in\nSection VII, this policy perfectly matches the policy bringing\nthe system the closest to the absorbing point \u03a80 .\nFor the secondary graph, the WoRLT strategy is still equivalent to a norm minimization of the channel weighted Wants\ne within the IDNC secondary subgraph, adjacent to\nvector \u03c8\nall selected vertices in the primary graph. Since the receivers\nwith the largest Wants sets and erasure probabilities will be\ntargeted with vertices from the primary graph, and since each\nreceiver can have at most one vertex per clique, applying\nthe norm minimization in the secondary subgraph, adjacent\nto the primary selected vertices, will result in targeting the\nremaining receivers with largest Wants sets and lower erasure\nprobabilities. This step does not conflict with the policy\nbringing the process closest to absorption but rather fosters it\nin future steps. Indeed, serving these receivers with secondary\n\nB. Maximum Weight Vertex Search Algorithm\nIn this section, we design a simple algorithm that performs\nclique selection, using a maximum weight vertex search. For\nthis search to\nthe vertices' weights must not only\n\u0010 be efficient,\n\u0011n\ne\nreflect the \u03c8i (s)\nvalues of their inducing receivers, but\n\u0010\n\u0011n\nalso their adjacency to vertices having high \u03c8ei (s) .\nTo design the vertices' weights, we first define aij,kl (s) as\nthe adjacency indicator of vertices vij and vkl in G(s) such\nthat:\n(\n1\nvij is connected to vkl in G(s)\naij,kl (s) =\n(17)\n0\notherwise .\n8\n\n\fWe then define the weighted degree \u2206ij (s) of vertex vij as:\n\u0010\n\u0011n\nX\ne\na\n(s)\n\u03c8\n(s)\n.\n(18)\n\u2206w\n(s)\n=\nij,kl\nk\nij\n\nAverage Completion Delay (Transmissions)\n\n32\n\n\u2200vkl \u2208G(s)\n\nThus, a large weighted vertex degree reflects its adjacency to\na large number\nof vertices belonging to receivers with large\n\u0010\n\u0011\nn\ne\nvalues of \u03c8i (s) . We finally define the vertex weight wij (s)\nas:\n\u0010\n\u0011n\nwij (s) = \u03c8ei (s)\n\u2206w\n(19)\nij (s) .\n\nConsequently, a vertex vij has\u0010 a large\n\u0011n weight when it both\ne\nbelongs to a receiver with large \u03c8i (s) value and is adjacent\n\u0010\n\u0011n\nto a large number of vertices with large \u03c8ek (s) values.\nBased on these definitions, we can introduce our proposed\npacket selection algorithm as follows. The algorithm operates\nonly for visited states. In each visited state s, the algorithm\nfirst computes a primary maximal clique \u03ba\u2217\u03c1 (s) in G\u03c1 (s). At\nfirst, \u03ba\u2217\u03c1 (s) and \u03ba\u2217\u03c3 (s) are empty sets. The algorithm starts\nby selecting the maximum weight vertex in G\u03c1 (s) to be the\nsource vertex in \u03ba\u2217 (s). For each of the following iterations,\nthe algorithm first recomputes the new vertex weights within\nthe primary subgraph connected to all previously selected\nvertices in \u03ba\u2217\u03c1 (s), then adds the new maximum weight vertex\nto it. When there is no further primary vertices adjacent\nto all vertices in \u03ba\u2217\u03c1 (s), the same process is repeated with\nthe secondary subgraph adjacent to \u03ba\u2217\u03c1 until no vertices are\nremaining in the global graph. The final maximal clique \u03ba\u2217 (s)\nis thus the union of \u03ba\u2217\u03c1 (s) and \u03ba\u2217\u03c3 (s). Once this clique is\ncomputed, the sender forms and sends an IDNC packet by\nXORing the source packets identified by the vertices in \u03ba\u2217 (s).\nAccording to the received feedback, a new state is visited\nand the process is re-executed until the absorbing state is\nreached. Since a maximal clique can have at most M vertices\n(we can target each receiver at most once per transmission),\nand since each iteration in the algorithm requires weight\ncomputations for the O(M N ) graph vertices, the complexity\nof the algorithm is O(M 2 N ).\n\n28\n\nRNC\nRND\nMC\nL\n\n26\n\nL\n\n30\n\n1\n2\n\nL\n24\n\n3\n\nL\n\n5\n\n22\n\nL\n\n10\n\n20\n18\n16\n14\n12\n0.2\n\n0.3\n\n0.4\n\n0.5\n0.6\n0.7\nAverage Demand Ratio (\u03bc)\n\n0.8\n\n0.9\n\n1\n\nFig. 4: Performance comparison of different schemes vs \u03bc\nMulticast, \u03bc = 0.5\n\n30\n28\n26\n\nRNC\nRND\nMC\nL\n1\n\nL\n\n2\n\nL3\n24\n\nL\n\n22\n\nL\n\n5\n10\n\n20\n18\n16\n\nBroadcast, \u03bc = 1.0\n40\n\nAverage Completion Delay (Transmissions)\n\nAverage Completion Delay (Transmissions)\n\n32\n\n35\n\nRNC\nRND\nMC\nL\n1\n\nL\n\n2\n\nL3\n30\n\nL\n\n5\n\nL\n\n10\n\n25\n\n20\n\n14\n12\n20\n\n40\n60\n80\n100\nNumber of Receivers (M)\n\n15\n20\n\n40\n60\n80\n100\nNumber of Receivers (M)\n\nFig. 5: Performance comparison of different schemes vs M\n\ndifferent receivers have different packet erasure probabilities\nand different demand ratios, that change from frame to frame\nwhile keeping the average erasure probability (p) and average\ndemand ratio (\u03bc) constant.\nFigures 4 5, 6 and 7 depict the average completion delay\nperformance of the maximum weight clique selection algorithm with different norms and compare it to the different\nalgorithms against the average demand ratio \u03bc (for M = 60,\nN = 30, p = 0.15), the number of receivers M (for \u03bc = 0.5\nand 1, N = 30, p = 0.15), the number of packets N (for\n\u03bc = 0.5 and 1, M = 60, p = 0.15), and the average erasure\nprobability p (for \u03bc = 0.5 and 1, M = 60, N = 30),\nrespectively.\nFrom all these figures, we can draw the following observations:\n\u2022 Our proposed maximum weight clique selection algorithm with all norms considerably outperforms the RND\nand MC selection algorithms in terms of average completion delay for all comparison parameters (\u03bc, M, N\nand p), Note that the MC is the IDNC version of\nthe algorithms proposed in [15], [16], which shows the\nsuperior performance of our algorithms in the context of\n\nX. S IMULATION R ESULTS\nIn this section, we present simulation results comparing\nthe performance of our proposed algorithms to the following\nalgorithms in both multicast and broadcast scenarios:\n\u2022 Random clique search algorithm (RND), employed in\n[13], which picks a random clique from the graph for\neach transmission .\n\u2022 Maximum clique selection algorithm (MC), which selects\na primary maximum clique \u03bamax\n(s) in G\u03c1 then selects the\n\u03c1\nsecondary maximum clique from the secondary subgraph\nconnected to \u03bamax\n(s) (denoted by MC in figures).\n\u03c1\n\u2022 Prefect RNC, in which we assume full independence\nbetween all transmitted coding coefficient vectors. Thus,\nthis scheme represents the global optimal completion\ndelay in the broadcast scenario.\nFor our proposed algorithm, we consider the L1 , L2 , L3 , L5\nand L10 norms to test the effect of the selection bias on the\nalgorithms' performance. In our simulations, we assume that\n9\n\n\fAverage Completion Delay (Transmissions)\n\n1\n\n30\n\nL\n\n2\n\nL\n\n3\n\n25\n\nL\n\n5\n\nL\n\n10\n\n20\n\n15\n\n10\n\n5\n10\n\n45\n40\n\n32\n\nRNC\nRND\nMC\nL\n1\n\nL\n\n2\n\n35\n30\n\nL\n\n3\n\nL\n\n5\n\nL\n\n10\n\n25\n20\n15\n10\n\n20\n30\n40\nNumber of Packets (N)\n\n5\n10\n\n50\n\n20\n30\n40\nNumber of Packets (N)\n\n1\n\nL\n\n2\n\n40\n\nL\n\n3\n\nL\n\n5\n\n30\n\nL\n\n10\n\n20\n\n10\n\n0\n0.05\n0.1\n0.15\n0.2\n0.25\nAverage Erasure Probability (p)\n\n3\n3\n\nL opt\n24\n\n5\n\nL srh\n5\n\n22\n20\n\nL opt\n10\n\nL srh\n10\n\n18\n16\n\n0.3\n\n0.4\n\n0.5\n0.6\n0.7\nAverage Demand Ratio (\u03bc)\n\n0.8\n\n0.9\n\n1\n\nFig. 8: Performance comparison of optimal and heuristic clique\nsearch algorithms vs \u03bc\n\nBroadcast, \u03bc = 1.0\n80\n\nAverage Completion Delay (Transmissions)\n\nAverage Completion Delay (Transmissions)\n\n50\n\nRNC\nRND\nMC\nL\n\nL srh\n\n12\n0.2\n\n50\n\n70\n60\n\nMulticast, \u03bc = 0.5\n\nRNC\nRND\nMC\nL\n\n28\n\nAverage Completion Delay (Transmissions)\n\nMulticast, \u03bc = 0.5\n\n26\n\n14\n\nFig. 6: Performance comparison of different schemes vs N\n\n60\n\n28\n\nRNC\nMCopt\nMCsrh\nL opt\n\n30\n\n1\n\nL\n\n2\n\n50\n\nL\n\n3\n\nL5\n40\n\nL\n\n10\n\n30\n20\n10\n0\n0.05\n0.1\n0.15\n0.2\n0.25\nAverage Erasure Probability (p)\n\n26\n24\n\nL opt\n5\n\nL srh\n5\n\n20\n\nL opt\n10\n\nL srh\n10\n\n18\n16\n14\n12\n20\n\nFig. 7: Performance comparison of different schemes vs p\n\n3\n\nL srh\n3\n\n22\n\nBroadcast, \u03bc = 1.0\n40\n\nRNC\nMCopt\nMCsrh\nL opt\n\nAverage Completion Delay (Transmissions)\n\nAverage Completion Delay (Transmissions)\n\n35\n\nBroadcast, \u03bc = 1.0\n50\n\nRNC\nRND\nMC\nL\n\nAverage Completion Delay (Transmissions)\n\nMulticast, \u03bc = 0.5\n40\n\n40\n60\n80\n100\nNumber of Receivers (M)\n\nRNC\nMCopt\nMCsrh\nL opt\n\n35\n\n3\n\nL srh\n3\n\nL opt\n5\n\n30\n\nL srh\n5\n\nL opt\n10\n\nL srh\n10\n\n25\n\n20\n\n15\n20\n\n40\n60\n80\n100\nNumber of Receivers (M)\n\nFig. 9: Performance comparison of optimal and heuristic clique\nsearch algorithms vs M\ncompletion delay.\nThe L1 norm algorithm employed in [1] degrades in\nperformance, compared to the other norms, since it represents a very loose upper-bound of V\u03c0\u2217 (s).\n\u2022 For norms higher than 1, the algorithm tends to converge\nto the same performance with the smallest completion\ndelays achieved by the L3 and L5 algorithms. For greater\nnorms like L10 , the performance slightly degrades for all\ncomparison parameters.\n\u2022 For the broadcast case (\u03bc = 1), results show that our\nproposed algorithm almost achieves the optimal performance of random network coding for all comparison\nparameters, with a maximum degradation of less than\n5% only occurring at very high number of receivers.\nThis near-optimal performance is achieved while fully\npreserving the benefits of IDNC compared to perfect\nRNC.\nFigures 8, 9, 10 and 11 compare the average completion delay of our proposed optimal maximum weight clique selection\n(denoted by \"opt\") to that of our proposed maximum weight\nvertex search (denoted by \"srh\") algorithm for L3 , L5 and\nL10 , as well as the maximum clique algorithm, using the same\n\u2022\n\nsimulation parameters in Figures 4 5, 6 and 7, respectively. For\nthe MC approach, the heuristic algorithm is the\n\u0011n as the\n\u0010 same\none described in Section IX-B, in which the \u03c8ei\nvalue of\na vertex is replaced by its absolute primary degree.\nFor all these figures, we can see that the heuristic algorithms\nperform very closely to the optimal clique selection algorithms\nfor all norms and all comparison parameters, with a maximum\ndegradation of less than 5% only occurring for large numbers\nof receivers. We can also observe a considerable improvement\nof our proposed heuristic algorithm with all norms compared\nto both the optimal and heuristic MC algorithms.\nXI. C ONCLUSION\nIn this paper, we studied the problem of minimizing the\ncompletion delay in wireless multicast and broadcast scenarios\nfor IDNC. We formulated the minimum completion delay\nproblem for IDNC as a stochastic shortest path (SSP) problem and showed that it is intractable. Nonetheless, we were\nable to draw the theoretical properties of the policies, which\n10\n\n\fMutlicast, \u03bc = 0.5\n\n30\n\nBroadcast, \u03bc = 1.0\n50\n\nRNC\nMCopt\nMCsrh\nL opt\n\nAverage Completion Delay (Transmissions)\n\nAverage Completion Delay (Transmissions)\n\n35\n\n3\n\nL srh\n3\n\n25\n\nL opt\n5\n\nL srh\n5\n\n20\n\nL opt\n10\n\nL srh\n10\n\n15\n\n10\n\n45\n40\n\nTheorem 4. For given \u033a, \u03c6 and \u03c8 vectors, the expected edge\nset cardinality of the primary graph is equal to:\n\uf8f1\n\uf8fc\n\uf8f4\n\u0012\n\u0013\uf8f4\nM\nM\n\uf8f2\nX\nX\n1\n\u033ak \u033ai \uf8fd\n\u03c8k\nE [|E\u03c1 |] =\n\u03c8i\n1+\n.\n(20)\n2 i=1 \uf8f4\nN \u22121 \uf8f4\n\uf8f3k=1 N\n\uf8fe\n\nRNC\nMCopt\nMCsrh\nL opt\n3\n\nL srh\n3\n\n35\n30\n\nL opt\n5\n\nk6=i\n\nL srh\n5\n\nL opt\n10\n\n25\n\nL srh\n10\n\n20\n\nTheorem 5. For a given maximal clique \u03ba, chosen for\ntransmission at time t, the expected primary degree of a vertex\nof receiver i \u2208 T (\u03ba) at time t + 1 is expressed as:\ni\ni\nh\nh\n(t)\n(t+1)\n(21)\nE \u2206i\u2208T (\u03ba) = E \u2206i + \u03b1i .\n\n15\n10\n\n5\n10\n\n20\n30\n40\nNumber of Packets (N)\n\n5\n10\n\n50\n\n20\n30\n40\nNumber of Packets (N)\n\n50\n\nFor i \u2208\n/ T (\u03ba), it is expressed as:\ni\ni\nh\nh\n(t)\n(t+1)\n+ \u03b2i .\n=\nE\n\u2206\nE \u2206i\u2208T\ni\n/ (\u03ba)\n\nFig. 10: Performance comparison of optimal and heuristic\nclique search algorithms vs N\nMulticast, \u03bc = 0.5\n\n50\n\n3\n\nL3srh\n40\n\nL opt\n5\n\nL srh\n5\n\n30\n\nBroadcast, \u03bc = 1.0\n80\n\nRNC\nMCopt\nMCsrh\nL opt\n\nAverage Completion Delay (Transmissions)\n\nAverage Completion Delay (Transmissions)\n\n60\n\nL opt\n10\n\nL10srh\n20\n\n10\n\n0\n0.05\n0.1\n0.15\n0.2\n0.25\nAverage Erasure Probability (p)\n\n(22)\n\n70\n60\n\nRNC\nMCopt\nMCsrh\nL opt\n\nWhen the maximal clique \u03ba is chosen for transmission at\ntime t, each member k of the targeted receiver set T (\u03ba) may\n(may not) receive the coded packet with probability qk (pk ).\nLet Xk be the random variable representing the reception of\nreceiver k \u2208 T (\u03ba) at time t and X as the random vector of\nall such random variables. From Theorem 4, we can derive\nthe expression of the expected edge set size at time t + 1,\nconditioned on the random vector X, as follows:\n\n3\n\nL srh\n3\n\n50\n\nL opt\n5\n\nL srh\n5\n\n40\n\nL opt\n10\n\nL srh\n10\n\n30\n20\n10\n\ni\nh\nh\ni 1 X\n(t+1)\n(\u03c8i \u2212 Xi ) E \u2206i\u2208T (\u03ba) X\nE E\u03c1(t+1) X =\n2\ni\u2208T\u03c1 (\u03ba)\ni 1 X\ni\nh\nh\n1 X\n(t+1)\n(t+1)\n+\nX\n\u03c8i E \u2206i\u2208T (\u03ba) X +\n\u03c8i E \u2206i\u2208T\n/ (\u03ba)\n2\n2\ni\u2208T\u03c3 (\u03ba)\ni\u2208T\n/ (\u03ba)\ni 1 X\ni\nh\nh\n1 X\n(t+1)\n(t+1)\n=\nX\n\u03c8i E \u2206i\u2208T (\u03ba) X +\n\u03c8i E \u2206i\u2208T\n/ (\u03ba)\n2\n2\ni\u2208T (\u03ba)\ni\u2208T\n/ (\u03ba)\ni\nh\n1 X\n(t+1)\n\u2212\nXi E \u2206i\u2208T (\u03ba) X .\n2\n\n0\n0.05\n0.1\n0.15\n0.2\n0.25\nAverage Erasure Probability (p)\n\nFig. 11: Performance comparison of optimal and heuristic\nclique search algorithms vs p\n\ncan efficiently reduce the IDNC completion delay, using the\nproperties of the formulated SSP and the nature of the IDNC\ngraph evolution. Based on these properties, we designed an\nefficient IDNC algorithm using a maximum weight clique\nselection algorithm, which can be solved in polynomial time.\nFor further complexity reduction, we also designed a quadratic\ntime heuristic algorithm, which can operate in real-time applications. Simulation results showed that our proposed heuristic\ncan both efficiently track the optimal performance and outperform the random and maximum clique algorithms. For the\nbroadcast case, simulations also showed that our proposed\nalgorithms almost achieve the globally optimal performance\nof random network coding, while preserving all the benefits\nand simplicity of IDNC.\n\ni\u2208T\u03c1 (\u03ba)\n\nNow, taking the expectation operator over the random vector\nX, and using the expressions of Theorem 5, we get the\nexpression of the expected edge set size at time t+1 as follows:\nh\ni\nn h\nio\nE E\u03c1(t+1) = EX E E\u03c1(t+1) X\no\ni\nn h\n1 X\n(t)\n\u03c8i E \u2206i + \u03b1i\n=\n2\ni\u2208T (\u03ba)\nn h\ni\no\n1 X\n(t)\n+\n\u03c8i E \u2206i + \u03b2i\n2\ni\u2208T\n/ (\u03ba)\nio\nn\nh\nX\n(t+1)\n(23)\nEX Xi E \u2206i\u2208T (\u03ba) X\n\u2212\n\nA PPENDIX A\nP ROOF OF T HEOREM 1\n\ni\u2208T\u03c1 (\u03ba)\n\ni\nh\n(t+1)\nGrouping similar terms and expanding E \u2206i\u2208T (\u03ba) X , we\nget:\n\nTo prove this theorem, we first introduce the following two\ntheorems, proved in Appendices D and E, respectively.\n\n11\n\n\fh\n\ni\n\nh\n\n\u03b2i in (11), we get:\nX\n\u03b1i = \u03b2i +\n\ni\n\n1 X\n1 X\nE E\u03c1(t+1) = E E\u03c1(t) +\n\u03c8i \u03b1i +\n\u03c8i \u03b2i\n2\n2\ni\u2208T (\u03ba)\ni\u2208T\n/ (\u03ba)\n\b\nM\ni X\nh\n\u03c8k \u033ak EX Xi2\n(t)\n\u2212 EX {Xi } E \u2206i +\nN (N \u2212 1)\n\nk\u2208T\n/ (\u03ba)\nk6=i\n\nX\n\n+\n\nk=1\nk6=i\n\n(\n\nX\nqi \u03c8k \u033ak\n+\nN (N \u2212 1)\n\nk\u2208T\u03c1 (\u03ba)\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\nqi \u03c8k (\u033ak + qi )\nN (N \u2212 1)\n\nqi \u03c8k \u033ak \u2212 qi qk (\u033ak \u2212 \u03c8k + 1)\nN (N \u2212 1)\n\n(28)\n\n\u0001)\n\u0001\nk6=i\nXk (\u033ak \u2212 \u03c8k ) + Xk2 \u033ai Xi + Xi2\nXi Xk\nEX\n\u2212\n+\nSince for \u03c8k > 0, \u033ak \u2265 \u033ak \u2212 \u03c8k + 1 and \u03c8k > qk , the last\nN\nN (N \u2212 1)\nk\u2208T\u03c1 (\u03ba)\nterm in (28) is non-negative and the theorem follows.\nk6=i\n(\n\u0001)\nX\n\u03c8k Xk \u033ai Xi + Xi2\nA PPENDIX D\nEX\n+\nN (N \u2212 1)\nP ROOF OF T HEOREM 4\nX\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\n=E\n\nh\n\ni\n\nE\u03c1(t)\n\nIt is well known from graph theory that the edge set size\nof any graph is equal to half the sum of its vertex degrees.\nConsequently, we will find an expression for the sum of the\nvertex primary degrees as follows. From Appendix F, we know\nthat the primary degree of a vertex vij is expressed as in (37).\nConsequently, the sum \u03a3\u2206i of all the primary degrees of the\nvertices induced by receiver i can be expressed as:\n\u0015\nM \u0014\nX X\n\u03a3\u2206i =\nIj\u2208Wk + Ij\u2208Rk (|Wk | \u2212 |Wk \u2229 Li |)\n\n\u0011\ni\n\u0010 h\n1 X\n(t)\nqi E \u2206i + \u03b3i\n\u2212\n2\ni\u2208T\u03c1 (\u03ba)\n\n1 X\n1 X\n+\n\u03c8i \u03b1i +\n\u03c8i \u03b2i .\n2\n2\ni\u2208T (\u03ba)\n\n(24)\n\ni\u2208T\n/ (\u03ba)\n\nA PPENDIX B\nP ROOF OF T HEOREM 2\n\nj\u2208Wi k=1\nk6=i\n\nTo prove this theorem, we first introduce the following\ntheorem, proved in Appendix F.\n\n=\n\nk=1\nk6=i\n\nTheorem 6. For given \u033a, \u03c6 and \u03c8 vectors, the expected\nprimary degree of any of the vertices induced by receiver i\n(denoted by \u2206i ) is equal to:\n\u0012\n\u0013\nM\nX\n\u033ak \u033ai\n\u03c8k\n1+\n.\n(25)\nE [\u2206i ] =\nN\nN \u22121\n\n=\n\n\uf8f0\uf8ed\n\n\uf8ee\n\nX\n\nj\u2208Wi\n\n\uf8f6\n\nIj\u2208Wk \uf8f8 +\n\n\uf8f0|Wi \u2229 Wk | +\n\nX\n\nj\u2208Wi\n\nk=1\nk6=i,h\n\n\u0012\n\u0013\n\u0012\n\u0013\nM\nX\n\u03c8k\n\u033ak \u033ai\n\u03c8h\n\u033ai \u033ah\n1+\n+\n1+\nN\nN \u22121\nN\nN \u22121\n\nA PPENDIX C\nP ROOF OF T HEOREM 3\n\nk=1\nk6=i\n\n\u2212\n\nX\n\nk\u2208T\u03c1 (\u03ba)\nk6=i\n\nqk\nN\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\n\u2212E \uf8f0\n\n(29)\n\nX\n\nIj\u2208Rk\n\n\uf8f9\uf8fc\n\uf8fd\n* |Wk \u2229 Li |\uf8fb\n\uf8fe\n\n\uf8f1\n\uf8fc\nM M\n\uf8fd\nX\n1 X X \uf8f2 \u03c8i \u03c8k\n\u03c8k \u03c8i \u033ak\n=\n+\n\u2212\nE [Ij\u2208Rk * |Wk \u2229 Li |]\n\uf8f3 N\n\uf8fe\n2 i=1\nN\n\nqk \u03c8k (\u033ai + qi )\nN (N \u2212 1)\n\n\u0012\n\u0013\n(\u033ak \u2212 \u03c8k + 1) (\u033ai + qi )\n1+\nN \u22121\n\nIj\u2208Rk * (\u03c8k \u2212 |Wk \u2229 Li |)\uf8fb .\n\nj\u2208Wi\n\n\uf8ee\n\nj\u2208Wi\n\nX\n\n\uf8f9\n\nM\n\n(26)\n\nqi \u03c8k \u033ak\n+\nN (N \u2212 1)\n\nIj\u2208Rk * (\u03c8k \u2212 |Wk \u2229 Li |)\uf8fb\n\n1X\nE [\u03a3\u2206i ]\n2 i=1\n\uf8f1\n\uf8f9\n\uf8ee\nM M\nX\n1 XX\uf8f2\nIj\u2208Rk \uf8fb\n=\nE [|Wi \u2229 Wk |] + \u03c8k E \uf8f0\n\uf8f3\n2\ni=1 k=1\nk6=i\n\n\u03b1i =\n\nj\u2208Wi\n\n\uf8f9\n\nE [|E\u03c1 |] =\n\nk=1\nk6=i,h\n\nM\nX\n\nX\n\nNow, ignoring the content of the different sets, we can derive\nan expression for the expected edge set size of the primary\ngraph. Note that the cardinality of the intersection of any\ntwo sets of given sizes, whose elements are unknown but are\ndrawn from the same pool of elements, is a hypergeometric\ndistributed random variable. Thus, we get:\n\nExpanding the expression in (25), we get:\n\u0012\n\u0013\n\u0012\n\u0013\nM\nX\n\u03c8k\n\u033ak \u033ah\n\u03c8i\n\u033ai \u033ah\nE [\u2206h ] =\n1+\n+\n1+\nN\nN \u22121\nN\nN \u22121\n\n=E [\u2206i ] .\n\nM\nX\n\nk=1\nk6=i\n\nk=1\nk6=i\n\n>\n\nM\nX\n\n\uf8ee\uf8eb\n\nk=1\nk6=i\n\nj\u2208Wi\n\n(30)\n\n(27)\n\nNote that the indicator function in the last term expectation\ncan be only zero or one. Consequently, the expectation of\nits multiplication with |Wk \u2229 Li | can be only evaluated for\nIj\u2208Rk = 1. If this is the case, this means that packet j\n\nRe-arranging the above expression and using the definition of\n12\n\n\fcannot be in the intersection of Wk and Li . Consequently,\nthis intersection is possible only with the other \u03c6i \u2212 1 packets\nand from the set of the remaining N \u2212 1 packets. Thus, we\nget:\nE [Ij\u2208Rk * |Wk \u2229 Li |] =\n\nN\n\u22121\nX\n\nThe first term in (34) is obviously the expected vertex degree\nof receiver i at time t. Now, we can derive the expected degree\nof receiver i after serving the maximal clique \u03ba as follows:\nio\nn h\ni\nh\n(t+1)\n(t+1)\nE \u2206i\u2208T (\u03ba) = EX E \u2206i\u2208T (\u03ba) X\nM\ni X\nh\n\u03c8k \u033ak EX {Xi }\n(t)\n= E \u2206i +\nN (N \u2212 1)\n\nn P [Ij\u2208Rk = 1, |Wk \u2229 Li | = n]\n\nn=1\n\n=\n=\n\nN\n\u22121\nX\n\nn=1\nN\n\u22121\nX\n\nh\ni\nn P |Wk \u2229 Li | = n Ij\u2208Rk = 1 * P [Ij\u2208Rk = 1]\nn\n\n\u0001\n\n\u0001\n\n\u03c6i \u22121\nn\n\nn=1\n\nN \u22121\u2212\u03c6i +1\n\u03c8k \u2212n\n\u0001\nN \u22121\n\u03c8k\n\n\u033ak \u03c8k (\u03c6i \u2212 1)\n\u033ak\n=\n.\nN\nN (N \u2212 1)\n\nk=1\nk6=i\n\n\u2212\n\nM\n\n(31)\n+\n\nX\n\nEX\n\n\u001a\n\n\u03c8k Xk (\u033ai + Xi )\nN (N \u2212 1)\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\nM\n\n1 X X \u03c8i \u03c8k\n\u03c8k \u03c8i \u033ak\n\u03c8i \u033ak \u03c8k (\u03c6i \u2212 1)\n+\n\u2212\n2\nN\nN\nN (N \u2212 1)\n\nk=1\nk6=i\n\n+\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\nA PPENDIX F\nP ROOF OF T HEOREM 6\nConsider an arbitrary vertex vij in the graph. From the\nadjacency conditions C1 and C2 in Section IV, we can\nconclude the following facts:\n\u2022 Vertex vij is not connected to any vertex of the same\nreceive i.\n\u2022 If j \u2208 Wk , vij cannot be adjacent to any primary vertex\nof receiver k due to violation of C2, except for vertex\nvkj which arises from C1.\n\u2022 If j \u2208 Rk , vij can be connected to any primary vertex\nof receiver k (induced from Wk ), except for all vertices\nvkl for which l \u2208\n/ Ri l \u2208 Li .\nFrom these facts, we can express the primary degree of a\nvertex vij as follows:\n\u0015\nM \u0014\nX\nIj\u2208Wk + Ij\u2208Rk (|Wk | \u2212 |Wk \u2229 Li |)\n(37)\n\u2206ij =\nk=1\nk6=i\n\n(33)\n\nk\u2208T\n/ (\u03ba)\n\nwhere Ix is an indicator function, which is equal to one if x\nis true and zero otherwise.\nNow, ignoring the content of the different sets, we can derive\nthe expression for the expected primary degree of a vertex of\nreceiver i. Consequently, we get:\n\nRe-arranging the terms, we get:\n\u0012\n\u0013 X\nM\nM\ni X\nh\n\u03c8k\n\u033ak \u033ai\n\u03c8k \u033ak Xi\n(t+1)\nE \u2206i\u2208T (\u03ba) X =\n1+\n+\nN\nN \u22121\nN (N \u2212 1)\nk=1\nk6=i\n\n\u2212\n\nX\n\nk\u2208T\u03c1 (\u03ba)\nk6=i\n\n+\n\nX\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\nk=1\nk6=i\n\nE [\u2206i ] = E [\u2206ij ]\n\u0015\nM \u0014\nX\nE [Ij\u2208Wk ] + E [Ij\u2208Rk ] |Wk | \u2212 E [Ij\u2208Rk * |Wk \u2229 Li |]\n=\n\n(34)\n\u0012\n\u0013\n(\u033ak \u2212 \u03c8k + Xk ) (\u033ai + Xi )\nXk\n1+\nN\nN \u22121\n\u03c8k Xk (\u033ai + Xi )\n.\nN (N \u2212 1)\n\n(t+1)\n\ni\n\n(32)\n\n\u0012\n\u0013\n(\u033ak + Xk ) (\u033ai + Xi )\n1+\nN \u22121\n\n\u0013\nX \u03c8k \u0012\n\u033ak (\u033ai + Xi )\n1+\n+\nN\nN \u22121\n\n\u039bik (qi ) .\n\nk\u2208T\u03c3 (\u03ba)\nk6=i\n\nThe expression for E \u2206i\u2208T\n/ (\u03ba) can be derived using the same\napproach.\n\nUsing (25) in Theorem 6, we can derive an expression for\nthe expected primary degree of receiver i \u2208 T (\u03ba) at time t+1,\nconditioned on the random vector X defined in Appendix A,\nas follows:\ni\nh\n(t+1)\nE \u2206i\u2208T (\u03ba) X\n\u0013\nX \u03c8k \u2212 Xk \u0012\n(\u033ak + Xk ) (\u033ai + Xi )\n1+\n=\nN\nN \u22121\n\u03c8k\nN\n\nX\n\n(36)\n\nA PPENDIX E\nP ROOF OF T HEOREM 5\n\nX\n\nk\u2208T\u03c1 (\u03ba)\nk6=i\n\nh\n\nk6=i\n\nk\u2208T\u03c1 (\u03ba)\nk6=i\n\n\u001b\n\nM\ni X\nh\nX\n(t)\n\u03a6ik (qi ) +\nqi \u03bek \u2212\n= E \u2206i +\n\ni=1 k=1\nk6=i\n\n\uf8fc\n\uf8f1\n\uf8f4\n\u0012\n\u0014\n\u0013\u0015\uf8f4\nM\nM\n\uf8f2\nX\nX\n\u03c6i \u2212 1 \uf8fd\n\u03c8k\n1\n\u03c8i\n1 + \u033ak 1 \u2212\n=\n2 i=1 \uf8f4\nN \u22121 \uf8f4\n\uf8fe\n\uf8f3k=1 N\nk6=i\n\uf8f1\n\uf8fc\n\uf8f4M\n\u0012\n\u0013\uf8f4\nM\n\u033ak \u033ai \uf8fd\n1 X \uf8f2X \u03c8k\n\u03c8i\n1+\n.\n=\n2 i=1 \uf8f4\nN \u22121 \uf8f4\n\uf8f3k=1 N\n\uf8fe\n\nEX\n\n)\n\u0001\nXk (\u033ak \u2212 \u03c8k ) + Xk2 (\u033ai + Xi )\nXk\n+\nN\nN (N \u2212 1)\n\nk\u2208T\u03c1 (\u03ba)\nk6=i\n\nSubstituting (31) in (30), we get:\nE [|E\u03c1 |] =\n\nX\n\n(\n\nk=1\nk6=i\n\n(35)\n\n=\n\nk=1\nk6=i\n\n13\n\n\u0015\n\u033ak \u03c8k\n+\n\u2212 E [Ij\u2208Rk * |Wk \u2229 Li |] .\nN\nN\n\nM \u0014\nX\n\u03c8k\n\n(38)\n\n\fSubstituting (31) in (38) and re-arranging, we get:\n\u0012\n\u0014\n\u0013\u0015\nM\nX\n\u03c6i \u2212 1\n\u03c8k\n1 + \u033ak 1 \u2212\nE [\u2206i ] =\nN\nN \u22121\n\n[20] S. Katti, D. Katabi, W. Hu, H. Rahul, and M. M\u00e9dard., \"The importance\nof being opportunistic: Practical network coding for wireless environments,\" Allerton, 2005.\n[21] A. Eryilmaz, A. Ozdaglar, M. M\u00e9dard, and E. Ahmed, \"On the delay and\nthroughput gains of coding in unreliable networks,\" IEEE Transactions\non Information Theory, vol. 54, pp. 5511\u20135524, Dec. 2008.\n[22] D. Traskov, M. Medard, P. Sadeghi, and R. Koetter, \"Joint scheduling\nand instantaneously decodable network coding,\" Global Telecommunications Conference (GLOBECOM'09), Dec. 2009.\n[23] Z. Bar-Yossef, Y. Birk, T. Jayram, and T. Kol, \"Index coding with\nside information,\" 47th Annual IEEE Symposium on Foundations of\nComputer Science (FOCS'06), pp. 197\u2013206, Oct. 2006.\n[24] M. Langberg and A. Sprintson, \"On the hardness of approximating the\nnetwork coding capacity,\" IEEE International Symposium on Information Theory (ISIT'08), pp. 315\u2013319, Jul. 2008.\n[25] R. Ahlswede, N. Cai, S. Li, and R. Yeung, \"Network information flow,\"\nIEEE Transactions on Information Theory, vol. 46, pp. 1204\u20131216, Jul.\n2000.\n[26] S. Sorour and S. Valaee, \"Coding opportunity densification strategies for\ninstantly decodable network coding,\" submitted to IEEE Transactions on\nCommunications, Jan. 2011.\n[27] M. Garey and D. Johonson, Computers and Intractability - A Guide to\nthe Theory of NP-Completeness. Freeman, New York, 1979.\n[28] G. Ausiello, P. Crescenzi, G. Gambosi, V. Kann, A. MarchettiSpaccamela, and M. Protasi, Complexity and Approximation: Combinatorial Optimization Problems and Their Approximability Properties.\nSpringer. Berlin, 1999.\n[29] K. Yamaguchi and S. Masuda, \"A new exact algorithm for the maximum weight clique problem,\" 23rd International Conference on Circuits/Systems, Computers and Communictions (ITC-CSCC'08), 2008.\n\nk=1\nk6=i\n\n\u0012\n\u0013\nM\nX\n\u03c8k\n\u033ak \u033ai\n1+\n.\n=\nN\nN \u22121\n\n(39)\n\nk=1\nk6=i\n\nR EFERENCES\n[1] S. Sorour and S. Valaee, \"On minimizing broadcast completion delay\nfor instantly decodable network coding,\" IEEE International Conference\non Communications (ICC'10), May 2010.\n[2] S. El Rouayheb, M. Chaudhry, and A. Sprintson, \"On the minimum\nnumber of transmissions in single-hop wireless coding networks,\" IEEE\nInformation Theory Workshop (ITW'07), pp. 120\u2013125, Sep. 2007.\n[3] S. El Rouayheb, A. Sprintson, and C. Georghiades, \"On the relation\nbetween the index coding and the network coding problems,\" IEEE\nInternational Symposium on Information Theory (ISIT'08), pp. 1823\u2013\n1827, Jul. 2008.\n[4] M. Chaudhry and A. Sprintson, \"Efficient algorithms for index coding,\"\nIEEE Conference on Computer Communications Workshops (INFOCOM'08), Apr. 2008.\n[5] J. Sundararajan, D. Shah, and M. Medard, \"Online network coding for\noptimal throughput and delay - the three-receiver case,\" International\nSymposium on Information Theory and Its Applications (ISITA'08), Dec.\n2008.\n[6] L. Keller, E. Drinea, and C. Fragouli, \"Online broadcasting with network\ncoding,\" Fourth Workshop on Network Coding, Theory and Applications\n(NetCod'08), Jan. 2008.\n[7] E. Drinea, C. Fragouli, and L. Keller, \"Delay with network coding\nand feedback,\" IEEE International Symposium on Information Theory\n(ISIT'09), pp. 844\u2013848, Jun. 2009.\n[8] P. Sadeghi, D. Traskov, and R. Koetter, \"Adaptive network coding for\nbroadcast channels,\" Fifth Workshop on Network Coding, Theory and\nApplications (NetCod'09), Jun. 2009.\n[9] P. Sadeghi, R. Shams, and D. Traskov, \"An optimal adaptive network\ncoding scheme for minimizing decoding delay in broadcast erasure channels,\" EURASIP Journal of Wireless Communations and Networking,\nApr. 2010.\n[10] D. Nguyen, T. Nguyen, and X. Yang, \"Multimedia wireless transmission\nwith network coding,\" Packet Video Workshop (PV'07), pp. 326\u2013335,\nNov. 2007.\n[11] D. Nguyen and T. Nguyen, \"Network coding-based wireless media\ntransmission using POMDP,\" Packet Video Workshop (PV'09), May\n2009.\n[12] J. Sundararajan, P. Sadeghi, and M. M\u00e9dard, \"A feedback-based adaptive\nbroadcast coding scheme for reducing in-order delivery delay,\" Fifth\nWorkshop on Network Coding, Theory and Applications (NetCod'09),\nJun. 2009.\n[13] S. Sorour and S. Valaee, \"Adaptive network coded retransmission\nscheme for wireless multicast,\" IEEE International Symposium on\nInformation Theory (ISIT'09), pp. 2577 \u2013 2581, Jun. 2009.\n[14] --, \"An adaptive network coded retransmission scheme for singlehop wireless multicast broadcast services,\" IEEE/ACM Transactions on\nNetworking, vol. 19, no. 3, pp. 869\u2013878, Jun. 2011.\n[15] C.-C. Wang, \"Capacity of 1-to-K broadcast packet erasure channels\nwith channel output feedback,\" 48th Annual Allerton Conference on\nCommunication, Control, and Computing (Allerton'10), pp. 1347 \u2013\n1354, Oct. 2010.\n[16] M. Gatzianas, L. Georgiadis, and L. Tassiulas, \"Multiuser broadcast\nerasure channel with feedback capacity and algorithms,\" 4th Workshop\non Network Control and Optimization (NetCoop'10), Dec. 2010.\n[17] T. Ho, R. Koetter, M. M\u00e9dard, D. Karger, and M. Effros, \"The benefits\nof coding over routing in a randomized setting,\" IEEE International\nSymposium on Information Theory (ISIT'03), pp. 442\u2013446, Jun. 2003.\n[18] J. Park, M. Gerla, D. Lun, Y. Yi, and M. M\u00e9dard, \"Codecast: A networkcoding-based ad hoc multicast protocol,\" IEEE Wireless Communications, vol. 13, pp. 76\u201381, Oct. 2006.\n[19] S. Katti, H. Rahul, W. Hu, D. Katabi, M. M\u00e9dard, and J. Crowcroft,\n\"XORs in the air: practical wireless network coding,\" ACM SIGCOMM'06, vol. 36, pp. 243\u2013254, 2006.\n\nSameh Sorour (S '98) received the B.Sc. and M.Sc.\ndegrees in Electrical Engineering from Alexandria\nUniversity, Egypt, in 2002 and 2006, respectively.\nHe then received his Ph.D from at the Wireless\nand Internet Research Laboratory (WIRLab), Department of Electrical and Computer Engineering,\nUniversity of Toronto, Canada. He is currently a\nPostdoctoral Fellow at University of Toronto. In\n2002, he joined the Department of Electrical Engineering, Alexandria University, where he was a\nTeaching and Research Assistant for three years\nand was promoted to Assistant Lecturer in 2006. He is also the chair of\nlocal arrangements for IEEE PIMRC 2011. His research interests include\nopportunistic, random and instantly decodable network coding applications in\nwireless networks, vehicular and high speed train networks, indoor localization, adaptive resource allocation, OFDMA, and wireless scheduling.\n\nShahrokh Valaee (S '88, M '00, SM '02) is\nthe Associate Chair for Undergraduate Studies and\nthe Director of the Wireless and Internet Research\nLaboratory (WIRLab) in the Edward S. Rogers Sr.\nDepartment of Electrical and Computer Engineering,\nUniversity of Toronto, Canada. Prof. Valaee was the\nCo-Chair for the Wireless Communications Symposium of IEEE GLOBECOM 2006, a Guest Editor for\nIEEE Wireless Communications Magazine, a Guest\nEditor for Wiley Journal on Wireless Communications and Mobile Computing, and a Guest Editor of\nEURASIP Journal on Advances in Signal Processing. He is currently an Editor\nof IEEE Transactions on Wireless Communications, an Associate Editor of\nIEEE Signal Processing Letters, and the TPC-Chair of IEEE PIMRC 2011.\nHis current research interests are in wireless, vehicular and sensor networks,\nlocation estimation and cellular networks.\n\n14\n\n\f"}