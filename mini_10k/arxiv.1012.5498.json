{"id": "http://arxiv.org/abs/1012.5498v1", "guidislink": true, "updated": "2010-12-26T08:34:06Z", "updated_parsed": [2010, 12, 26, 8, 34, 6, 6, 360, 0], "published": "2010-12-26T08:34:06Z", "published_parsed": [2010, 12, 26, 8, 34, 6, 6, 360, 0], "title": "Checkable Codes from Group Rings", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1012.4213%2C1012.4816%2C1012.1418%2C1012.0556%2C1012.4024%2C1012.1819%2C1012.3603%2C1012.3431%2C1012.4472%2C1012.3114%2C1012.2995%2C1012.0599%2C1012.2212%2C1012.3516%2C1012.1213%2C1012.5498%2C1012.1946%2C1012.3084%2C1012.4030%2C1012.4822%2C1012.4630%2C1012.5311%2C1012.4571%2C1012.3800%2C1012.2870%2C1012.2176%2C1012.1603%2C1012.4819%2C1012.1178%2C1012.4646%2C1012.3291%2C1012.5527%2C1012.1471%2C1012.3598%2C1012.5551%2C1012.0910%2C1012.0437%2C1012.3230%2C1012.0640%2C1012.4618%2C1012.3746%2C1012.1271%2C1012.0283%2C1012.0645%2C1012.2783%2C1012.2261%2C1012.5600%2C1012.2029%2C1012.5140%2C1012.1561%2C1012.1473%2C1012.1439%2C1012.5243%2C1012.3610%2C1012.0804%2C1012.0234%2C1012.0970%2C1012.1982%2C1012.1061%2C1012.0272%2C1012.0722%2C1012.5098%2C1012.2742%2C1012.3460%2C1012.1173%2C1012.5945%2C1012.1047%2C1012.5940%2C1012.0042%2C1012.2474%2C1012.4117%2C1012.3802%2C1012.5072%2C1012.3462%2C1012.4513%2C1012.5746%2C1012.2123%2C1012.3251%2C1012.0250%2C1012.4619%2C1012.4161%2C1012.0266%2C1012.0725%2C1012.3029%2C1012.2483%2C1012.2155%2C1012.3432%2C1012.3856%2C1012.2159%2C1012.4961%2C1012.3953%2C1012.1382%2C1012.4558%2C1012.4459%2C1012.3750%2C1012.5884%2C1012.1221%2C1012.2741%2C1012.4173%2C1012.1616%2C1012.1204&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Checkable Codes from Group Rings"}, "summary": "We study codes with a single check element derived from group rings, namely,\ncheckable codes. The notion of a code-checkable group ring is introduced.\nNecessary and sufficient conditions for a group ring to be code-checkable are\ngiven in the case where the group is a finite abelian group and the ring is a\nfinite field. This characterization leads to many good examples, among which\ntwo checkable codes and two shortened codes have minimum distance better than\nthe lower bound given in Grassl's online table. Furthermore, when a group ring\nis code-checkable, it is shown that every code in such a group ring admits a\ngenerator, and that its dual is also generated by an element which may be\ndeduced directly from a check element of the original code. These are analogous\nto the generator and parity-check polynomials of cyclic codes. In addition, the\nstructures of reversible and complementary dual checkable codes are established\nas generalizations of reversible and complementary dual cyclic codes.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1012.4213%2C1012.4816%2C1012.1418%2C1012.0556%2C1012.4024%2C1012.1819%2C1012.3603%2C1012.3431%2C1012.4472%2C1012.3114%2C1012.2995%2C1012.0599%2C1012.2212%2C1012.3516%2C1012.1213%2C1012.5498%2C1012.1946%2C1012.3084%2C1012.4030%2C1012.4822%2C1012.4630%2C1012.5311%2C1012.4571%2C1012.3800%2C1012.2870%2C1012.2176%2C1012.1603%2C1012.4819%2C1012.1178%2C1012.4646%2C1012.3291%2C1012.5527%2C1012.1471%2C1012.3598%2C1012.5551%2C1012.0910%2C1012.0437%2C1012.3230%2C1012.0640%2C1012.4618%2C1012.3746%2C1012.1271%2C1012.0283%2C1012.0645%2C1012.2783%2C1012.2261%2C1012.5600%2C1012.2029%2C1012.5140%2C1012.1561%2C1012.1473%2C1012.1439%2C1012.5243%2C1012.3610%2C1012.0804%2C1012.0234%2C1012.0970%2C1012.1982%2C1012.1061%2C1012.0272%2C1012.0722%2C1012.5098%2C1012.2742%2C1012.3460%2C1012.1173%2C1012.5945%2C1012.1047%2C1012.5940%2C1012.0042%2C1012.2474%2C1012.4117%2C1012.3802%2C1012.5072%2C1012.3462%2C1012.4513%2C1012.5746%2C1012.2123%2C1012.3251%2C1012.0250%2C1012.4619%2C1012.4161%2C1012.0266%2C1012.0725%2C1012.3029%2C1012.2483%2C1012.2155%2C1012.3432%2C1012.3856%2C1012.2159%2C1012.4961%2C1012.3953%2C1012.1382%2C1012.4558%2C1012.4459%2C1012.3750%2C1012.5884%2C1012.1221%2C1012.2741%2C1012.4173%2C1012.1616%2C1012.1204&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We study codes with a single check element derived from group rings, namely,\ncheckable codes. The notion of a code-checkable group ring is introduced.\nNecessary and sufficient conditions for a group ring to be code-checkable are\ngiven in the case where the group is a finite abelian group and the ring is a\nfinite field. This characterization leads to many good examples, among which\ntwo checkable codes and two shortened codes have minimum distance better than\nthe lower bound given in Grassl's online table. Furthermore, when a group ring\nis code-checkable, it is shown that every code in such a group ring admits a\ngenerator, and that its dual is also generated by an element which may be\ndeduced directly from a check element of the original code. These are analogous\nto the generator and parity-check polynomials of cyclic codes. In addition, the\nstructures of reversible and complementary dual checkable codes are established\nas generalizations of reversible and complementary dual cyclic codes."}, "authors": ["Somphong Jitman", "San Ling", "Hongwei Liu", "Xiaoli Xie"], "author_detail": {"name": "Xiaoli Xie"}, "author": "Xiaoli Xie", "arxiv_comment": "9 pages, 4 tables, Submitted to IEEE Transactions on Information\n  Theory, December 2010", "links": [{"href": "http://arxiv.org/abs/1012.5498v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1012.5498v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.IT", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.IT", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "math.AC", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "math.IT", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1012.5498v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1012.5498v1", "journal_reference": null, "doi": null, "fulltext": "SUBMITTED TO IEEE TRANSACTIONS ON INFORMATION THEORY, DECEMBER 2010\n\n1\n\nCheckable Codes from Group Rings\n\narXiv:1012.5498v1 [cs.IT] 26 Dec 2010\n\nSomphong Jitman, Student Member, IEEE, San Ling, Hongwei Liu, and Xiaoli Xie\n\nAbstract-We study codes with a single check element derived\nfrom group rings, namely, checkable codes. The notion of a codecheckable group ring is introduced. Necessary and sufficient\nconditions for a group ring to be code-checkable are given\nin the case where the group is a finite abelian group and\nthe ring is a finite field. This characterization leads to many\ngood examples, among which two checkable codes and two\nshortened codes have minimum distance better than the lower\nbound given in Grassl's online table. Furthermore, when a\ngroup ring is code-checkable, it is shown that every code in\nsuch a group ring admits a generator, and that its dual is also\ngenerated by an element which may be deduced directly from\na check element of the original code. These are analogous to\nthe generator and parity-check polynomials of cyclic codes. In\naddition, the structures of reversible and complementary dual\ncheckable codes are established as generalizations of reversible\nand complementary dual cyclic codes.\nIndex Terms-checkable code, group ring, Sylow p-subgroup,\nzero-divisor code, reversible code, complementary dual code.\n\nI. I NTRODUCTION\nA group ring code is originally defined to be an ideal in\nthe group ring FG, where F is a finite field and G is a\nfinite group. When G is cyclic, this concept characterizes the\nclassical cyclic codes over F. In general, when G is abelian,\nthey are called abelian codes and have been studied by many\nauthors (see [2]-[3], [15]-[16], and [5]).\nRecently, new techniques for constructing codes have been\nestablished for an arbitrary group ring RG in [13], where R is\nan associative ring with identity 1 6= 0 and G is a finite group.\nFor a submodule W of the R-module RG and a zero-divisor\nu in RG, a zero-divisor code generated by u relative to W\nis defined to be C := {wu | w \u2208 W } = W u. Many existing\ncodes coincide with special types of zero-divisor codes (cf.\n[13]-[14], and [18]).\nOne of the most interesting is a zero-divisor code determined by a single check element, i.e., there exists v in RG\nsuch that C = W u = {y \u2208 RG | yv = 0}. Such a code is\ncalled a checkable code and the element v is called a check\nelement. A group ring is said to be code-checkable if all its\nnon-trivial ideals are checkable codes. These codes are of\ninterest since they can be viewed as a generalization of the\nS. Jitman, and S. Ling are with the Division of Mathematical Sciences,\nSchool of Physical and Mathematical Sciences, Nanyang Technological University, 21 Nanyang Link, Singapore 637371, Republic of Singapore (emails:\npu738241@e.ntu.edu.sg, lingsan@ntu.edu.sg).\nS. Jitman is also with the Department of Mathematics, Faculty of Science,\nChulalongkorn University, Bangkok 10330, Thailand.\nH. Liu, and X. Xie are with the Department of Mathematics,\nHuazhong Normal University, Wuhan, Hubei 430079, China\n(emails:{h w liu,xiexiaoli 1985}@yahoo.com.cn).\nThe work of S. Jitman and S. Ling was partially supported by the Singapore\nMinistry of Education under Research Grant T208B2206. The work of H. Liu\nand X. Xie was done under the National Natural Science Foundation of China,\nGrant No. 10871079.\n\nclassical cyclic codes. For a finite field F and a cyclic group\nG of order n, FG \u223c\n= F[X]/hX n \u2212 1i is a principal ideal ring,\nwhere F[X] is the ring of polynomials over F. All ideals\nof FG are cyclic codes. Every non-trivial ideal is checkable,\nwhere the ideal is generated by the generator polynomial and\nthe reciprocal polynomial of the parity-check polynomial acts\nas a check element. Therefore, FG is code-checkable.\nWe extend this study to the group ring FG, where F\nis a finite field and G is a finite abelian group. Necessary\nand sufficient conditions for FG to be code-checkable are\ndetermined. This characterization allows us to find various\nexamples of good codes. Four new codes which have minimum distance better than the lower bound given in Grassl's\ntable [10] are presented. Many other examples found also\nhave minimum distance as good as the best known ones\nin [10]. Furthermore, it is also shown that, when FG is a\ncode-checkable group ring, every zero-divisor code in FG\nis of the form FGu = {y \u2208 FG | yv = 0} for some\n(\u22121)\nu, v \u2208 FG, and that its dualP\nis given by FGv (\u22121) , where\nP v\n(\u22121)\nis defined to be v\n=\ng\u2208G vg g.\ng\u2208G vg\u22121 g for v =\nAs seen above, when G is a cyclic group, i.e., in the case\nof cyclic codes over F, u and v (\u22121) may be regarded as\nthe analogs of the generator and parity-check polynomials.\nIn this sense, the class of codes studied in this paper can be\nregarded as a generalization of cyclic codes. Indeed, when G\nis a finite abelian group, the group ring FG is isomorphic\nto some F[X1 , . . . , Xt ]/hX1n1 \u2212 1, . . . , Xtnt \u2212 1i (cf. [6]), so\nthe elements u and v (\u22121) may be regarded as the multivariate generator and parity-check polynomials of a checkable\nabelian code. Moreover, we derive the structures of reversible\nand complementary dual checkable codes which may have\napplication in certain data storage, computing, and retrieval\nsystems. These codes are generalizations of reversible and\ncomplementary dual cyclic codes (cf. [1], [17], and [21]).\nThe paper is organized as follows. Some basic concepts\nand necessary terminologies are introduced in Section II. In\nSection III, we present a characterization of code-checkable\ngroup rings together with some related properties. We provide\nstructural characterizations of reversible and complementary\ndual checkable codes in Section IV. In Section V, some\nexamples from the family of checkable codes and their modifications are discussed, including four new codes and numerous\ngood codes. Finally, we conclude with a summary of results\nin Section VI.\nII. P RELIMINARIES\nIn order for the exposition in this paper to be self-contained,\nwe introduce some basic concepts and necessary terminologies\nused later in this paper. The readers may find further details\nin [7]-[9], [13]-[14], and [19].\n\n\fSUBMITTED TO IEEE TRANSACTIONS ON INFORMATION THEORY, DECEMBER 2010\n\n2\n\nA. Groups and Group Rings\n\nB. Codes from Group Rings\n\nLet G be a finite group and p a prime number. If G is\nof order pa m, where a is a non-negative integer and m is a\npositive integer such that p \u2224 m, then a subgroup of order pa\nis called a Sylow p-subgroup of G.\nThroughout, we assume that G is abelian of order n, written\nmultiplicatively (with identity 1). Let F denote a finite field\nof characteristic p and denote by FG the group\nP ring of G\n\u03b1g g, where\nover F. The elements in FG will be written as\n\nA zero-divisor code has been introduced for arbitrary group\nrings in [14]. We recall this concept for a commutative group\nring FG as follows:\nLet W be a subspace of the F-vector space FG and let u\nbe a zero-divisor in FG. The zero-divisor code C generated by\nu relative to W is defined to be C := {wu | w \u2208 W } = W u.\nThe element u is called a generator element for C.\nGiven a zero-divisor code C = W u, then there exists 0 6=\nv \u2208 FG such that uv = 0 and hence cv = 0 for all c \u2208 C.\nIf there is an element v \u2208 FG such that C = {y \u2208 FG |\nyv = 0} = Ann(v), the code C is said to be checkable and\nthe element v is called a check element of C. We note that\na check element for a code does not need to be unique. The\ngroup ring FG is said to be code-checkable if every non-trivial\nideal of FG is a checkable code.\nLet u be a zero-divisor in FG and U its corresponding\nmatrix defined in (II.1). Assume that W is a subspace of FG\nwith a basis S \u2286 G such that Su is linearly independent.\nIf |S| = k, then rank(U ) = k if and only if the code\nC = W u is an ideal of FG, equivalently, C = FGu (see\n[14, Theorem 7.2]).\nTo determine whether FG is code-checkable, it suffices to\nconsider all zero-divisor codes C where C = FGu. From this\ncharacterization, a generator matrix for C can be defined to be\nany k linearly independent rows of U .\nA zero-divisor u \u2208 FG is called principal if there exists\n0 6= v \u2208 FG such that uv = 0 and rank(V ) = n \u2212 rank(U ),\nwhere U and V are the corresponding matrices of u and v,\nrespectively. The following characterization is proved in [14].\n\ng\u2208G\n\n\u03b1g \u2208 F, and the addition and the multiplication are given by\nX\nX\nX\n\u03b1g g +\n\u03b2g g :=\n(\u03b1g + \u03b2g )g\ng\u2208G\n\nand\n\n\uf8eb\n\uf8ed\n\nX\n\ng\u2208G\n\ng\u2208G\n\n\uf8f6\n\n\u03b1g g \uf8f8\n\nX\n\n\u03b2h h\n\nh\u2208G\n\ng\u2208G\n\n!\n\n:=\n\nX\n\n(\u03b1g \u03b2h )gh.\n\ng,h\u2208G\n\nObviously, FG is an F-vector space with a basis G, where\nthe scalar multiplication is defined by\nX\nX\nr\n\u03b1g g :=\n(r\u03b1g )g,\ng\u2208G\n\nfor all r \u2208 F and\n\nP\n\ng\u2208G\n\n\u03b1g g \u2208 FG. As G is abelian, the group\n\ng\u2208G\n\nring FG is commutative.\nLet {g1 , g2 , . . . , gn } be a fixed list of the elements in G\nand Mn (F) denote the ring of n \u00d7 n matrices over F. For\nn\nP\nugi gi \u2208 FG, let U \u2208 Mn (F) be defined by\nu=\ni=1\n\n\uf8eb\n\n\uf8ec\n\uf8ec\nU =\uf8ec\n\uf8ed\n\nug\u22121 g1\n1\nug\u22121 g1\n2\n..\n.\nugn\u22121 g1\n\nug\u22121 g2\n1\nug\u22121 g2\n2\n..\n.\nugn\u22121 g2\n\n***\n***\n..\n.\n***\n\nThe map \u03c4 : FG \u2192 Mn (F) given by\n\nug\u22121 gn\n1\nug\u22121 gn\n2\n..\n.\nugn\u22121 gn\n\n\uf8f6\n\n\uf8f7\n\uf8f7\n\uf8f7.\n\uf8f8\n\n(II.1)\n\nu 7\u2192 U T ,\nwhere U T is the transpose of U , is well-known as a left regular\nrepresentation of FG (cf. [8, Chapter 2], and [19, Example\n4.1.6]). This representation plays a vital role in studying the\ngenerator and parity-check matrices of codes mentioned later.\nAn element a \u2208 FG is called a unit if there exists b \u2208 FG\nsuch that ab = 1. A non-zero element u \u2208 FG is called a\nzero-divisor if there exists 0 6= v \u2208 FG such that uv = 0. For\na non-empty subset S of FG, the annihilator of S is defined\nto be Ann(S) = {x \u2208 FG | xs = 0, for all s \u2208 S}. Note\nthat Ann(S) is an ideal of FG. When S = {s}, we simply\ndenote by Ann(s) the annihilator Ann(S). An ideal I of FG\nis said to be non-trivial if {0} ( I ( FG and it is said to be\nprincipal if it is generated by a single element. We say that\nFG is a principal ideal ring (PIR) if every ideal of FG is\nprincipal.\nIn the light of the main result in [9], a characterization of\nprincipal ideal group rings is given as follows.\nTheorem 2.1 ([9]): Let G be a finite abelian group and F\na finite field of characteristic p. Then FG is a PIR if and only\nif a Sylow p-subgroup of G is cyclic.\n\nLemma 2.2 ([14, Corollary 4.1]): Let u be a zero-divisor\nin FG. Then the zero-divisor code FGu is checkable if and\nonly if u is principal.\nIn this case, it is easy to see that the corresponding element v\nis a check element of C. As uv = 0, it follows that U V = 0.\nHence, by the rank condition, a parity-check matrix for C can\nbe defined toPbe any n\u2212 k linearly\nP independent columns of V .\nbg g in FG, let ha, bi denote\nag g and b =\nFor a =\ng\u2208G\n\ng\u2208G\n\nthe Euclidean inner product of the coefficient vectors of a and\nb, i.e.,\nX\nha, bi =\nag b g .\ng\u2208G\n\nFor a code C \u2286 FG, the dual code C \u22a5 of C is defined by\nC \u22a5 = {a \u2208 FG | ha, ci = 0 for all c \u2208 C}.\nIII. C HECKABLE C ODES\n\nC ODE -C HECKABLE G ROUP\nR INGS\n\nAND\n\nIn this section, we present the main results of this paper.\nA characterization of code-checkable group rings and some\nrelevant properties are given.\nProposition 3.1: Let F be a finite field and G a finite\nabelian group. Then FG is code-checkable if and only if it\nis a PIR.\nProof: Assume that FG is code-checkable. Let I be an\narbitrary ideal of FG. If I is {0} or FG, it is principal. Assume\n\n\fSUBMITTED TO IEEE TRANSACTIONS ON INFORMATION THEORY, DECEMBER 2010\n\nthat I is non-trivial. Then there exists a zero-divisor v \u2208 FG\nsuch that I = Ann(v). Then\nFG/Ann(v) \u223c\n= FGv.\n\n(III.1)\n\n3\n\nThe typical element in FGu is of the form\n\uf8f6\n\uf8eb\n\uf8f6\n!\uf8eb\nX\nX\nX X\n\uf8ed\nxh h \uf8ed\nug g \uf8f8 =\nug xg\u22121 k \uf8f8 k.\ng\u2208G\n\nh\u2208G\n\nNext, we show I is principal. Since {0} ( FGv ( FG, there\nexists 0 6= u \u2208 FG such that FGv = Ann(u). We claim that\nFGu = Ann(v). It is clear that FGu \u2286 Ann(v). By (III.1),\nwe have that\n|FG/Ann(v)| = |FGv| and |FG/Ann(u)| = |FGu|.\n\nWe have that\nP\n\nk\u2208G\n\nP\n\nug xg\u22121 k\n\ng\u2208G\n\n!\n\nvk\u22121\n\nFGa 7\u2192 Ann(a).\nClearly, for each c \u2208 FG, we have Ann(FGc) = Ann(c).\nHence, if FGa = FGb, then\nAnn(a) = Ann(FGa) = Ann(FGb) = Ann(b).\nThis implies that the mapping \u03c3 is well-defined.\nTo show that \u03c3 is injective, assume that \u03c3(FGa) = \u03c3(FGb),\ni.e., Ann(a) = Ann(b). Since FG is a PIR, there exists 0 6=\nv \u2208 FG such that Ann(a) = Ann(b) = FGv, and hence\nFGa = Ann(v) = FGb.\nSince |J| is finite, \u03c3 is bijective. This implies that every\nnon-trivial ideal of FG is a checkable code.\nA characterization of code-checkable group rings follows\nimmediately from Theorem 2.1 and Proposition 3.1.\nTheorem 3.2: Let G be a finite abelian group and F a finite\nfield of characteristic p, where p is a prime number. Then the\ngroup ring FG is code-checkable if and only if a Sylow psubgroup of G is cyclic.\nWhen FG is a code-checkable group ring, Proposition 3.1\nand its proof also provide a link between a checkable code in\nFG and its dual. The following result is found in [14, Theorem\n4.6]. Here, we\nP\nP give an alternative proof.\nvg\u22121 g.\nvg g \u2208 FG, we define v (\u22121) =\nFor v =\n\nh\u2208G\n\n0 = uv =\n\nk\u2208G\n\nwhich implies that\n\nP\n\ng\u2208G\n\n\uf8ed\n\ng\u2208G\n\n\uf8f6\n\nug vg\u22121 k \uf8f8 k,\n\nug vg\u22121 k = 0 for all k \u2208 G.\n\n\u0013\nxg\u22121 k vk\u22121 ug\nk\u2208G\n!\nP\nug vg\u22121 k xk\u22121\nP\n\ng\u2208G\n\nThis shows that FGv (\u22121) \u2286 C \u22a5 .\nIt is easy to observe that v 7\u2192 v (\u22121) induces an isomorphism\nof groups FGv \u223c\n= FGv (\u22121) . From the proof of Proposition 3.1, we have that |FG|/|FGu| = |FGv| = |FGv (\u22121) |. It\ntherefore follows that FGv (\u22121) = C \u22a5 .\nCorollary 3.4: If FGu is checkable with a check element v,\nthen |FGu| = |FGu(\u22121) |, |FGv| = |FGv (\u22121) |, and |FG| =\n|FGu| * |FGv|.\nProof: It follows immediately from Corollary 3.3 and its\nproof.\nIV. S OME S PECIAL T YPES OF C HECKABLE C ODES\nIn this section, we assume that a group ring FG is codecheckable and study the structure of some special types of\ncheckable codes which may have application in certain data\nstorage, computing, and retrieval systems.\nA. Reversible Checkable Codes\nFor an abelian group G of order n, let L = {g1 , g2 , . . . , gn }\nn\nP\nwi gi , the\ndenote a fixed list of the elements in G. For w =\ni=1\n\nreverse of w with respect to L, denote by rL (w), is defined\nn\nP\nwn+1\u2212i gi . A code C \u2286 FG is said to be\nto be rL (w) :=\ni=1\n\nreversible with respect to L if rL (w) \u2208 C whenever w \u2208 C.\nIf the list L satisfies\nk = gn\u2212(i\u22121) gi ,\n\n(IV.1)\n\nfor some fixed k \u2208 G, and for every i = 1, 2, . . . , n, then\nrL (w) is of the form\n\ng\u2208G\n\ng\u2208G\n\nCorollary 3.3: Let FG be a code-checkable group ring.\nEvery non-trivial ideal in FG is of the form FGu = Ann(v),\nfor some u, v \u2208 FG. Its dual code is given by FGv (\u22121) .\nProof: The fact that every non-trivial ideal in FG is of\nthe form C = FGu = Ann(v) is already shown in the proof\nof Proposition 3.1. For such a code C, we now show that\nC \u22a5 = FGv (\u22121)P\n.\nP\nvh h. Hence\nug g and v =\nWrite u =\nX\n\nP\n\nk\u2208G\n\nHence, I = Ann(v) = FGu. Therefore, FG is a PIR.\nConversely, assume that FG is a PIR. Let J denote the set\nof all non-trivial ideals of FG. From the finiteness of FG, it\nfollows that |J| is finite. Let \u03c3 : J \u2192 J be defined by\n\nX\n\ng\u2208G\n\n\u0012\n\n= 0.\n\n|FGu| = |FG|/|Ann(u)| = |FG|/|FGv| = |Ann(v)|.\n\n\uf8eb\n\nP\n\n=\n=\n\nSince FG is finite, it follows that\n\ng\u2208G\n\ng\u2208G\n\nk\u2208G\n\nrL (w) =\n=\n\nn\nX\n\ni=1\nn\nX\ni=1\n\nwn+1\u2212i gi =\nwi kgi\u22121 = k\n\nn\nX\n\ni=1\nn\nX\n\nwi gn+1\u2212i\nwi gi\u22121 = kw(\u22121) ,\n\n(IV.2)\n\ni=1\n\nfor all w \u2208 FG.\nExample 4.1: Let G = Cn1 \u00d7Cn2 \u00d7* * *\u00d7Cnr denote a finite\nabelian group of order n = n1 n2 . . . nr written as the product\nof cyclic groups Cnj = hxj i. Define the list {g1 , g2 , . . . , gn }\nof G by\ng1+j1 +n1 j2 +n1 n2 j3 +***+n1 n2 ...nr\u22121 jr = xj11 xj22 . . . xjrr , (IV.3)\nwhere 0 \u2264 ji < ni for all 1 \u2264 i \u2264 r. Then g1 = 1, the identity\nof G, and gn = gn\u2212(i\u22121) gi for all 1 \u2264 i \u2264 n. Hence, this list\n\n\fSUBMITTED TO IEEE TRANSACTIONS ON INFORMATION THEORY, DECEMBER 2010\n\nsatisfies (IV.1), where k = gn . Note that if G = hxi is cyclic\nof order n, the list represents {1, x, x2 , . . . , xn\u22121 } which\ncorresponds to the set of monomials {1, X, X 2, . . . , X n\u22121 }\nin F[X]/hX n \u2212 1i.\nThroughout this section, we study reversible checkable\ncodes with respect to a list L satisfying (IV.1).\nTo complete a characterization of reversible checkable\ncodes, we need the following lemmas.\nLemma 4.2 ([11, Lemma 1.1]): Given a \u2208 FG, then the\nset of generators of FGa is U(FG)a, where U(FG) is the set\nof units in FG.\nLemma 4.3: Let a and b be elements in FG. Then FGa =\nFGb if and only if a = f b for some unit f in FG.\nProof: Assume that FGa = FGb. Note that a is a\ngenerator of FGb. Then, by Lemma 4.2, a \u2208 U(FG)b which\nimplies that a = f b for some unit f \u2208 FG.\nConversely, assume that a = f b for some unit f in FG.\nThen FGa = FGf b \u2286 FGb = FGf \u22121 a \u2286 FGa. Therefore,\nFGa = FGb as desired.\nTheorem 4.4: Let L be a fixed list of G satisfying (IV.1).\nLet FGu be a checkable code with a check element v. Then\nthe following statements are equivalent:\ni) FGu is reversible with respect to L.\nii) FGu = FGu(\u22121) .\niii) u = au(\u22121) for some unit a in FG.\niv) v = bv (\u22121) for some unit b in FG.\nv) FGv = FGv (\u22121) .\nvi) FGv is reversible with respect to L.\nProof: We prove i) \u21d2 ii) \u21d2 iii) \u21d2 i), iii) \u21d4 iv),\nand iv) \u21d2 v) \u21d2 vi) \u21d2 iv). To prove i) \u21d2 ii), assume that\nFGu is reversible with respect to L. Since FG contains 1,\nku(\u22121) = rL (u) \u2208 FGu. Then u(\u22121) = k \u22121 rL (u) \u2208 FGu,\ni.e. FGu(\u22121) \u2286 FGu. Since, by Corollary 3.4, they have the\nsame cardinality, we conclude that FGu(\u22121) = FGu.\nThe proof of ii) \u21d2 iii) is immediate from Lemma 4.3.\nTo prove iii) \u21d2 i), assume that there exists a unit a \u2208 FG\nsuch that u = au(\u22121) . Let wu \u2208 FGu. Then\nrL (wu) = k(wu)(\u22121) = kw(\u22121) u(\u22121)\n= (kw(\u22121) a\u22121 )u \u2208 FGu.\nThis shows that FGu is reversible.\nNext, we prove iii) \u21d4 iv). Assume that u = au(\u22121) for\nsome unit a in FG. Since 0 = uv = au(\u22121) v = u(\u22121) (av)\nand v (\u22121) is a check element of FGu(\u22121) , we have av \u2208\nFGv (\u22121) . As a is a unit, v \u2208 FGv (\u22121) . Then, by Corollary\n3.4, FGv = FGv (\u22121) . Therefore, by Lemma 4.3, there exists\na unit b in FG such that v = bv (\u22121) . The converse is proved\nusing similar arguments.\nThe equivalence iv) \u21d2 v) \u21d2 vi) \u21d2 iv) is proved similar\nto iii) \u21d2 ii) \u21d2 i) \u21d2 iii).\nRemark 4.5: To verify whether FGu is reversible, by the\ncondition ii), it is equivalent to checking if u(\u22121) \u2208 FGu.\nWhen G = hxi, we know that any non-trivial cyclic code\ncorresponds to some checkable code in FG. According to\n[17], a cyclic code is said to be reversible if its corresponding checkable code is reversible with respect to the list\n{1, x, x2 , . . . , xn\u22121 }.\n\n4\n\nFor a polynomial f (X) = f0 + f1 X + * * * + X t \u2208 F[X]\nwith f0 6= 0, the reciprocal polynomial of f (X) is defined\n1\nto be f \u2217 (X) := f0\u22121 X t f ( ). The polynomial f (X) is said\nX\nto be self-reciprocal if f (X) = f \u2217 (X). Then the following\ncorollary is immediate from Theorem 4.4.\nCorollary 4.6 ([17, Theorem 1]): The cyclic code generated by a monic polynomial g(X) is reversible if and only\nif g(X) is self-reciprocal.\nB. Complementary Dual Checkable Codes\nIn this subsection, we study the structure of a checkable\ncode FGu with FGu \u2229 (FGu)\u22a5 = {0}, namely, a complementary dual code (cf. [21]). We focus on the case where the\ncharacteristic p of F does not divide the order n of G which\nis a common restriction as in the study of simple root cyclic\ncodes.\nUnder this restriction, the group ring FG is always codecheckable since the Sylow p-subgroup of G is trivial. Moreover, p \u2224 n if and only if FG is semi-simple (cf. [20, Chapter\n2: Theorem 4.2]). See [19] and [20] for further details.\nWe recall a special ideal of FG which is key to characterizing the structure of complementary dual checkable codes. An\nideal A of FG is called a nil ideal if, for each a \u2208 A, there\nexists a positive integer r such that ar = 0. By the finiteness\nof FG and [19, Theorem 2.7.14 and Theorem 2.7.16], the nil\nideal characterizes semi-simplicity of FG as follows.\nLemma 4.7: A finite group ring FG is semi-simple if and\nonly if it has no non-zero nil ideals.\nCorollary 4.8: If FGu is checkable with a check element\nv, then FGu \u2229 FGv = {0}.\nProof: Let w \u2208 FGu \u2229 FGv. Then w = au = bv for\nsome a, b \u2208 FG. Hence, w2 = aubv = (ab)(uv) = 0 which\nimplies that FGu \u2229 FGv is a nil ideal. As FG is semi-simple,\nFGu \u2229 FGv = {0} by Lemma 4.7.\nTheorem 4.9: Let FGu be checkable with a check element v and L a list of G satisfying (IV.1). Then the following\nstatements are equivalent.\ni) FGu is a complementary dual code.\nii) FGu is a reversible code with respect to L.\niii) FGv is a complementary dual code.\nProof: To prove i) \u21d2 ii), assume that FGu is a\ncomplementary dual code. Applying Corollary 3.3, we obtain {0} = FGu \u2229 (FGu)\u22a5 = FGu \u2229 FGv (\u22121) which\nimplies FG = FGu \u2295 FGv (\u22121) . Since, by Corollary 4.8,\nFGu \u2229 FGv = {0}, we have\nFGv = FG \u2229 FGv\n= (FGu \u2229 FGv) \u2295 (FGv (\u22121) \u2229 FGv)\n= FGv (\u22121) \u2229 FGv.\nThus, FGv \u2286 FGv (\u22121) . Since, by Corollary 3.4, they have the\nsame cardinality, it follows that FGv = FGv (\u22121) . Therefore,\nFGu is reversible by Theorem 4.4.\nTo prove ii) \u21d2 i), assume that FGu is reversible with\nrespect to L. Let w \u2208 FGu \u2229 (FGu)\u22a5 . Then, by Corollary\n3.3 and Theorem 4.4, w \u2208 FGu \u2229 FGv (\u22121) = FGu \u2229 FGv.\n\n\fSUBMITTED TO IEEE TRANSACTIONS ON INFORMATION THEORY, DECEMBER 2010\n\nWe have w = 0 by Corollary 4.8. Therefore, FGu is a\ncomplementary dual code.\nBy Theorem 4.4, ii) holds if and only if FGv is reversible,\nwhich is equivalent to that FGv is a complementary dual code.\nThis proves ii) \u21d4 iii).\nCorollary 4.10 ([21, Corollary]): Let F be a finite field of\ncharacteristic p, and n a positive integer such that p \u2224 n. Then\na cyclic code of length n over F is a complementary dual\ncode if and only if it is reversible.\nV. E XAMPLES\nMany different interesting examples arise from the family of\ncheckable codes from group rings. In this section, we discuss\nsome of these examples based on Theorem 3.2. We show that\nvarious Maximum Distance Separable (MDS) codes, [n, k, d]\nlinear codes attaining the Singleton bound d \u2264 n \u2212 k + 1,\nare checkable. Moreover, numerous good checkable codes and\nnew codes are illustrated as well.\nA. Some MDS Checkable Codes\nGiven a positive integer n, we show that [n, 1, n] and [n, n\u2212\n1, 2] MDS codes can be constructed as zero-divisor codes. In\nmany cases, they are checkable.\nLemma 5.1: Given a finite\nP field F and a finite abelian\ng is always a zero-divisor in\ngroup G, then the element\ng\u2208G\n\nthe group ring FG.\nP\ng = 0, for all g \u2032 \u2208\nProof: This follows since (1 \u2212 g \u2032 )\ng\u2208G\n\nG \\ {1}, where 1 is the group identity in G.\nCorollary 5.2: Given a finite field F and a finite abelian\ngroup G of order n, then there exists an [n, 1, n] zero-divisor\nMDS code constructed from the\nPgroup ring FG.\ng is a zero divisor in FG. It\nProof: From Lemma 5.1,\ng\u2208G\nP\ng is the all 1's\nis easy to see that the associated U of u =\ng\u2208G\n\nn \u00d7 n-matrix. Therefore, the code generated by u is obviously\n{\u03bb(11 . . . 1) | \u03bb \u2208 F}, an [n, 1, n] MDS code over F.\nCorollary 5.3: Let F be a finite field of characteristic p\nand let G be a finite abelian group of order n. If a Sylow\np-subgroup of G is cyclic, then there exist checkable [n, 1, n]\nand [n, n \u2212 1, 2] MDS codes from the group ring FG. P\ng\nProof: By Corollary 5.2, the code C generated by\ng\u2208G\n\nis an [n, 1, n] MDS code. Assume that a Sylow p-subgroup of\nG is cyclic. From Theorem 3.2, it follows that C and its dual\nC \u22a5 are checkable. Since C is MDS, C \u22a5 is again MDS with\nparameters [n, n \u2212 1, 2]. P\nP\ng), the [n, 1, n]\ng)(\u22121) = (\nRemark 5.4: Since (\ng\u2208G\ng\u2208G\nP\ng and its dual are reversible by\nMDS code generated by\ng\u2208G\n\nTheorem 4.4. Moreover, if the characteristic of F does not\ndivide n, then, by Theorem 4.9, they are complementary dual.\n\n5\n\nwe know that checkable codes from the group ring Fq G are\nthe classical cyclic codes. Hence, we consider examples only\nin the case where G is a non-cyclic abelian group such that a\nSylow p-subgroup of G is cyclic, i.e., FG is code-checkable.\nWith the help of the computer algebra system MAGMA [4],\ngenerator elements, check elements, and the actual minimum\ndistances of checkable codes from Fq G are computed in many\ncases for q \u2208 {2, 3, 4, 5} and G is a non-cyclic abelian group\ndecomposed as a product of two cyclic groups. In numerous\ncases, the parameters of these codes are as good as the best\nknown ones in [10]. We call such codes good codes. In\nparticular, an optimal [36, 28, 6] code and a [72, 62, 6] code\nover F5 with minimum distances improving by 1 upon [10]\nare found. These are called new codes presented in the next\nsubsection.\nIn Tables I-IV, a group G = Cr \u00d7 Cs of order n = rs\ndenotes the product of cyclic groups Cr = hxi and Cs = hyi.\nA vector u = (u0 u1 u2 . . . un\u22121 ) \u2208 Fnq represents the element\nu(x, y) \u2208 Fq G with respect to the list L defined in (IV.3), i.e.,\nu is the coefficients of\n\nu(x, y) =\n\ns\u22121 X\nr\u22121\nX\n\nujr+i xi y j in Fq G.\n\nj=0 i=0\n\nGiven positive integers n and k, the minimum distance of\nthe [n, k, d] codes displayed in the tables achieve the best\nknown distances [10], except for the two codes with asterisk\nin Table IV, where the distance improves upon that of the\nbest known ones by 1. Based on the characterizations in\nSection IV, the subscripts R and C indicate the reversibility\nand complementary duality of the codes, respectively. To save\nspace, codes with small length, [n, 1, n] and [n, n \u2212 1, 2] MDS\ncodes guaranteed by Corollary 5.3, and codes with minimum\ndistance 2 will be omitted.\n\nC. New Codes from Code-Checkable Group Rings\nA checkable code is determined by a check element. We\ngive the check elements of the two new checkable codes in\nTable IV. In addition, generator elements and the standard\ngenerator matrices of these codes are also provided. Moreover,\nother two optimal codes with minimum distances improving\nby 1 upon [10] are found by shortening a new checkable code.\nThe [36, 28, 6] code C36 over F5 in Table IV improves the\nlower bound on the minimum distance given in [10] by 1\nand it is optimal. The code C36 derived from F5 (C6 \u00d7 C6 ) is\ngenerated by\nu36 = (021242402043131423014123232100132334)\n\nB. Good Codes from Code-Checkable Group Rings\nWe illustrate some good examples of checkable codes. Let\nFq denote the finite field of order q with characteristic p and let\nG be an abelian group of order n. When G is a cyclic group,\n\nwith check element\nv36 = (100004000410431304002224330013242110).\n\n\fSUBMITTED TO IEEE TRANSACTIONS ON INFORMATION THEORY, DECEMBER 2010\n\nThe standard generator matrix of C36 is given by\n\n6\n\nThe standard generator matrix of C72 is given by\n\uf8eb\n\n\uf8eb\n\nG36\n\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n=\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ed\n\nI27\n\n01\u00d727\n\n323044040\n221030034\n400021324\n040013243\n004023041\n122034033\n120024112\n012030244\n312033000\n342022220\n340021142\n034030442\n330022241\n033041113\n242002413\n330041333\n033021300\n242033210\n210021311\n021041020\n430011312\n043034414\n243040132\n213013421\n122043340\n323023204\n221044011\n000111111\n\n\uf8f6\n\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7.\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f8\n\nBy shortening C36 at the 1st position, we obtain a optimal\n[35, 27, 6] code over F5 . Similarly, a optimal [34, 26, 6] code\nover F5 can be obtained by shortening C36 at the 1st and 2nd\npositions. The minimum distances of these codes are improved\nby 1 from the lower bound given in [10].\nThe [72, 62, 6] code C72 over F5 in Table IV improves the\nlower bound on the minimum distance given in [10] by 1. The\ncode C72 derived from F5 (C6 \u00d7 C12 ) is generated by u72 with\ncheck element v72 .\n\nG72\n\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n=\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ec\n\uf8ed\n\nI59\n\n03\u00d759\n\n3000332333012\n3000120312204\n3000440332031\n3000422034014\n3000134032304\n3000314210220\n4000430442022\n4000232442130\n4000421420233\n4000313134222\n4000011233213\n4000322110020\n3000340102141\n3000412011020\n3000133130000\n3000232231224\n3000110002020\n3000444401013\n3000344401441\n3000330402134\n3000411341024\n3000001424234\n3000010432000\n3000434444011\n3000132302413\n3000100414144\n3000443342220\n3000213202441\n3000240343413\n3000402230102\n1000243424244\n1000121011404\n1000400342033\n1000301131320\n1000423404020\n1000144114432\n0000132220334\n0000222100120\n0000231243104\n0000100013131\n0000010101313\n0000001310131\n3000012002001\n3000143234103\n3000233041134\n3000242122332\n3000111341131\n3000021124240\n1000414231330\n1000220231434\n1000333220210\n1000130141001\n1000324411222\n1000211404423\n4000244203433\n4000131434400\n4000334330144\n4000140042121\n4000203302140\n0100423411234\n0010333213031\n0001324443211\n\nu72 = (312411232330313143111221222301122414030013401133430420133323011301020100),\nv72 = (100000000441004102234010043124424101300211324012401114201004023203011413).\n\n\uf8f6\n\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7.\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f8\n\n\fSUBMITTED TO IEEE TRANSACTIONS ON INFORMATION THEORY, DECEMBER 2010\n\nTABLE I\nG OOD C HECKABLE C ODES FROM F2 G\nCode C\n[25, 16, 4]R,C\n\nGroup G\nC5 \u00d7 C5\n\n[25, 17, 4]R,C\n\nC5 \u00d7 C5\n\n27\n\n[27, 18, 4]R,C\n\nC3 \u00d7 C9\n\n45\n\n[45, 28, 8]\n\nC3 \u00d7 C15\n\n[45, 29, 7]\n\nC3 \u00d7 C15\n\n[45, 31, 6]\n\nC3 \u00d7 C15\n\n[45, 32, 6]\n\nC3 \u00d7 C15\n\n[45, 37, 4]R,C\n\nC3 \u00d7 C15\n\n[45, 38, 4]\n\nC3 \u00d7 C15\n\n[45, 39, 3]\n\nC3 \u00d7 C15\n\n[49, 30, 8]\n\nC7 \u00d7 C7\n\n[49, 33, 6]\n\nC7 \u00d7 C7\n\n[49, 34, 6]\n\nC7 \u00d7 C7\n\n[49, 39, 4]\n\nC7 \u00d7 C7\n\n[49, 40, 4]\n\nC7 \u00d7 C7\n\n[49, 42, 4]\n\nC7 \u00d7 C7\n\n[49, 43, 3]\n\nC7 \u00d7 C7\n\n[50, 40, 4]R\n\nC5 \u00d7 C10\n\nn\n25\n\n49\n\n50\n\nGenerator Element u and Check Element v\nu = (0111000101010111000101010),\nv = (1000000001101010111010101)\nu = (1110001101100000111000100),\nv = (1000000001000100010010111)\nu = (011100010001110110000111011),\nv = (010001001001111111111010010)\nu = (011101000001100011101100111101011000010000001),\nv = (110000000000000011001010000001010111000010111)\nu = (001010010100011101100110011101000100110011111),\nv = (100000000000000010001100101111101111011100100)\nu = (010101110110100011110110001010110010100110001),\nv = (110000000000010011001010000110111100110111000)\nu = (000000100011011100100110111001001010000000001),\nv = (110000000000010001001110100100110011100101001)\nu = (010000110101111010010111010001001110011000001),\nv = (100011011011011011100011100100011011100100011)\nu = (000010010011100011011001100110010011010001110),\nv = (100001001010100111100100010111001111111010001)\nu = (100011010001011010000111100001010011110011111),\nv = (101000000011110101101110110110000101110101000)\nu = (0110001101111001110000100010011011100010011001011),\nv = (0001100000000000001110011111111010011001111101100)\nu = (1000011011000111111111011010000110011000100100100),\nv = (1100000000010000000100001100010100001011011110101)\nu = (0000001111010010000010101000001010010110110100110),\nv = (0011000000000000010100000101111011110100110110011)\nu = (0001001101010000111101111010101110100010100011100),\nv = (1000000000101110000001010111010010101001011010111)\nu = (0011000111001111110100100101010010100001000000101),\nv = (0110000000101011101000110110111011101011010100010)\nu = (0010000010000001000001010001001001101011101101101),\nv = (0100011000110111111110001101010001100110100011010)\nu = (0000101001000110100100000111000010001110101010011),\nv = (1000001010100000011110010010110011001101011111011)\nu = (00010000100101011000110010011010111100100111111010),\nv = (10000000001000001001101100111111111011111011001001)\n\nTABLE II\nG OOD C HECKABLE C ODES FROM F3 G\nn\n20\n\nCode C\n[20, 14, 4]R,C\n\nGroup G\nC2 \u00d7 C10\n\n24\n\n[24, 18, 4]R\n\nC2 \u00d7 C12\n\n[24, 19, 3]R\n\nC2 \u00d7 C12\n\n[32, 18, 8]\n\nC4 \u00d7 C8\n\n[32, 21, 6]\n\nC4 \u00d7 C8\n\n[32, 25, 4]\n\nC4 \u00d7 C8\n\n[32, 26, 4]\n\nC4 \u00d7 C8\n\n[32, 27, 3]\n\nC4 \u00d7 C8\n\n[40, 33, 4]\n\nC2 \u00d7 C20\n\n[40, 34, 4]\n\nC2 \u00d7 C20\n\n[44, 36, 4]\n\nC2 \u00d7 C22\n\n[44, 37, 4]\n\nC2 \u00d7 C22\n\n[48, 41, 4]R\n\nC4 \u00d7 C12\n\n[48, 40, 4]R\n\nC4 \u00d7 C12\n\n32\n\n40\n\n44\n\n48\n\nGenerator Element u and Check Element v\nu = (02101221221212221102),\nv = (21010201020121202120)\nu = (112221001100010121120021),\nv = (210202020202212102100221)\nu = (111120120021120102022202),\nv = (100201020120222022111011)\nu = (00010121101222121210121022000001),\nv = (10000002000200020222002101121102)\nu = (10002112121201021100202020221100),\nv = (11000000000211222201002102001212)\nu = (10222220211221211022021101222002),\nv = (21000000021021210021212122110000)\nu = (10202100101020110121210020010012),\nv = (21000011221000222100220011021100)\nu = (10210022020002122120010102210210),\nv = (10010022011000112112002212211122)\nu = (0200221122021020210111021201201122111221),\nv = (1001010101011010221001011001100101222222)\nu = (2200200100210120211221021102120010110101),\nv = (2101020102012120102002012101210102121012)\nu = (10120200202010120121001011010111022100110001),\nv = (21010201020102200212212010121012101221120220)\nu = (20102212121201022202000021222220222021012200),\nv = (01020102010210110120102022202220221110200111)\nu = (110121102110110111001110110220020112122022220001),\nv = (210000110122221110220011120011001022112201221100)\nu = (120122000210012211010202001020120012101002100002),\nv = (121000020001222120212221000100021210222111122221)\n\n7\n\n\fSUBMITTED TO IEEE TRANSACTIONS ON INFORMATION THEORY, DECEMBER 2010\n\nTABLE III\nG OOD C HECKABLE C ODES FROM F4 G, WHERE F4 = {0, 1, a, a2 = 1 + a}\nn\n18\n\nCode C\n[18, 14, 3]\n\nGroup G\nC3 \u00d7 C6\n\n25\n\n[25, 16, 6]R,C\n\nC5 \u00d7 C5\n\n[25, 19, 4]R,C\n\nC5 \u00d7 C5\n\n[25, 20, 4]R,C\n\nC5 \u00d7 C5\n\n[25, 21, 3]R,C\n\nC5 \u00d7 C5\n\n[45, 38, 4]\n\nC3 \u00d7 C15\n\n[45, 39, 4]\n\nC3 \u00d7 C15\n\n[45, 34, 6]\n\nC3 \u00d7 C15\n\n[45, 35, 6]\n\nC3 \u00d7 C15\n\n[45, 40, 3]\n\nC3 \u00d7 C15\n\n[45, 41, 3]\n\nC3 \u00d7 C15\n\n49\n\n[49, 42, 4]\n\nC7 \u00d7 C7\n\n50\n\n[50, 43, 4]R\n\nC5 \u00d7 C10\n\n[50, 44, 4]R\n\nC5 \u00d7 C10\n\n45\n\nGenerator Element u and Check Element v\nu = (a2 aa01011a2 0a2 a2 aaa2 a2 11),\nv = (a1a2 111a2 a10a2 100001a)\nu = (1a2 001a11a0a0a2 a0a2 110111a2 aa2 ),\nv = (a1111111001a2 010a2 10aa2 a100a)\nu = (01a2 001a0aaa2 00a2 111a2 0001a2 a0),\nv = (a2 111a11a2 0a2 0a2 a2 aa1a1a0a2 a2 000)\nu = (0a2 a2 11aa2 a0aa2 0a2 11a0010a2 a11a2 ),\nv = (a2 11a2 a11a2 aa2 a0a2 a2 01a100a2 0a0a2 )\nu = (1101000aa2 aaa2 a0a2 111a2 0a2 0011),\nv = (a11a011a0aa2 a2 101a2 0a2 aa1a2 a2 10)\nu = (0010aa2 aa2 11aaa11aaa2 00a01a2 010aa0100a2 a0aa00a0a00),\nv = (a1111a2 11a10a2 a2 0a2 a2 111aa0a2 0aa2 aa0aa2 a2 1a00a2 1a2 100a2 a2 0)\nu = (1a1aaaa2 10a2 a2 1aaaaaa2 aa2 1a01a1a2 1a2 0a2 1a0a2 a0a2 11011a2 0),\nv = (a2 1111011a2 a00a2 a2 a11a2 0aaaaa2 00aa00aaa2 aa0a2 11a2 a2 a00a)\nu = (a2 aa0aa2 aaa2 1110a01aa0111a2 aa0110a2 1aa2 aa2 a2 a0a2 aa2 a1a2 a2 ),\nv = (1111111111100a2 a2 10a011a0011aa2 1a2 0aa0a010a1aaa2 11)\nu = (1a2 111a000aa2 a2 1a2 a1aaaa2 1000aa2 a10aaa2 1a2 0a2 1a2 aa1a2 10a2 ),\nv = (a2 1111111a2 11a2 11aa1a000aa2 000100aa2 a1a10a2 a2 0101a11)\nu = (101a2 11a2 1aa1a1a2 00a2 a2 a1aa2 0a00a0a0aa2 0aaa2 aaa2 0a1a2 1a),\nv = (a1a2 1101aa2 a2 a2 0a2 a11aa2 0aa0a2 a2 a2 1aa2 a2 00a2 a2 aa2 1a1a2 a2 a1a2 1a)\nu = (0a2 0011a2 11aa2 01a1a2 0a2 aa2 101a0100a2 a2 a00aa2 a0a2 0aaa2 1aa2 ),\nv = (a1a2 10a2 1a2 aa2 0a01aa01a1a2 01a0aa2 0a2 110a2 a010a2 1aa2 01a2 a)\nu = (a2 1a2 a2 011a2 0111a2 1a2 0a2 aa2 1a2 a2 a2 1000010a2 a2 aa2 1a2 110aaaaa0a11a),\nv = (a111a1a111a1aa1a1aa11aaaaaaa11a1aa1aa111a1a1aa111)\nu = (01a2 aaaaa2 a2 00010a2 1a2 a2 0aa110a11aaa2 1a01a11a2 111a2 10a1a2 110),\nv = (a2 11a2 0111111a2 a2 1a11111a2 11a2 000000a00a1aaaaaa00a100000)\nu = (a2 a2 0a0aa1aa01aa2 10a1a2 1a2 0a2 aa001aa2 1a00a2 a2 a2 10aa0001aa2 a2 a2 a),\nv = (a1111110aa2 a1aa2 01a2 01aa01a2 a1aaaaaaa2 101a10a2 a0a2 a11a2 a01)\nTABLE IV\nG OOD C HECKABLE C ODES FROM F5 G\n\nCode C\n[18, 10, 6]R,C\n\nGroup G\nC3 \u00d7 C6\n\n[18, 13, 4]R,C\n\nC3 \u00d7 C6\n\n20\n\n[20, 15, 4]R\n\nC2 \u00d7 C10\n\n24\n\n[24, 19, 4]\n\nC2 \u00d7 C12\n\n32\n\n[32, 26, 4]\n\nC4 \u00d7 C8\n\n[32, 28, 3]\n\nC4 \u00d7 C8\n\n[36, 27, 6]R,C\n\nC6 \u00d7 C6\n\n[36, 28, 6]\u2217R,C\n\nC6 \u00d7 C6\n\n[36, 30, 4]R,C\n\nC6 \u00d7 C6\n\n[36, 31, 4]R,C\n\nC6 \u00d7 C6\n\n[40, 34, 4]\n\nC2 \u00d7 C20\n\n[40, 36, 3]\n\nC2 \u00d7 C20\n\n45\n\n[45, 38, 4]R\n\nC3 \u00d7 C15\n\n48\n\n[48, 37, 6]\n\nC4 \u00d7 C12\n\n[48, 41, 4]\n\nC4 \u00d7 C12\n\n[48, 42, 4]\n\nC4 \u00d7 C12\n\nn\n18\n\n36\n\n40\n\n[48, 44, 3]\n72\n\nC4 \u00d7 C12\n\u2217\n\n[72, 62, 6]\n\nC6 \u00d7 C12\n\nGenerator Element u and Check Element v\nu = (304442010212124112),\nv = (100000004013203240)\nu = (111444121401433042),\nv = (100011044233322344)\nu = (12410122413003142121),\nv = (10010401103443404334)\nu = (223203242014333100004101),\nv = (110103043433032211332104)\nu = (12113331001244204302213311032203),\nv = (14140031004303104242220311044204)\nu = (22111122403344243012322100142431),\nv = (41200324023142132403204113423102)\nu = (320132230330303404122130430344232343),\nv = (100001000434001100141404131131141404)\nu = (021242402043131423014123232100132334),\nv = (100004000410431304002224330013242110)\nu = (430221420433120003111301342330403142),\nv = (100011024142020141102014233433232434)\nu = (414212431211114001024430113141242220),\nv = (100001244134331320112211023133431442)\nu = (1014241440444340241314221310400103102403),\nv = (0104010401313313423124042404242242403322)\nu = (3404442420430414423443124210412401010024),\nv = (1004042121214304324332324310211004321043)\nu = (422214114313301102020432222411013144100033133),\nv = (100000011322000344433444011433222122322444122)\nu = (022401214232343132104344424140031221030041132043),\nv = (100000000003314304224422430430220301424142443412)\nu = (033110404424400223213444240314124301040420320311),\nv = (010001410400041412112313101143034044120221221020)\nu = (200421304403101244441432224311111011301122004343),\nv = (410000230302113004421310322332142021210224312422)\nu = (034043422131413332341002234213011122220221033211),\nv = (100401314123303424134222412344431004422200323034)\nu = (312411232330313143111221222301122414030013401133430420133323011301020100),\nv = (100000000441004102234010043124424101300211324012401114201004023203011413)\n\n8\n\n\fSUBMITTED TO IEEE TRANSACTIONS ON INFORMATION THEORY, DECEMBER 2010\n\nVI. C ONCLUSION\nWe have studied checkable codes derived from the group\nring FG, where F is a finite field and G is a finite abelian\ngroup. We have introduced a notion of code-checkable group\nrings and determined necessary and sufficient conditions for\na group ring FG to be code-checkable. Based on this characterization, we obtained two new codes which have minimum distance better than the lower bound given in Grassl's\ntable [10]. Various codes with minimum distance as good as\nthe best known ones in [10] are also found. By shortening\na new checkable code, we obtain other two optimal codes\nwhich have minimum distance better than the lower bound\nin [10]. In addition, we have proved that many [n, 1, n] and\n[n, n\u22121, 2] MDS codes can be constructed as checkable codes.\nFurthermore, when FG is a code-checkable group ring, the\ndual of a code in FG may be described via a check element of\nthe code. This property generalizes the notions of the generator\nand parity-check polynomials of cyclic codes to the multivariate case. Moreover, we have characterized the structures of\nreversible and complementary dual checkable codes which are\ngeneralizations of reversible and complementary dual cyclic\ncodes, respectively.\nIt would be interesting to study possible generalizations of\nother properties of cyclic codes to this new class of codes.\nR EFERENCES\n[1] T. Abualrub, A. Ghrayeb, and X. N. Zeng, \"Construction of cyclic\ncodes over GF(4) for DNA computing,\" J. Franklin Inst., vol. 343,\npp. 448-457, 2006.\n[2] S. D. Berman, \"On the theory of group codes,\" Kibernetika, vol. 3, pp.\n31\u201339, 1967.\n[3] S. D. Berman, \"Semi-simple cyclic and abelian codes,\" Kibernetika,\nvol. 3, pp. 21\u201330, 1967.\n\n9\n\n[4] W. Bosma, J. J. Cannon, and C. Playoust, \"The Magma algebra\nsystem I: the user language,\" J. Symbolic Comput., vol. 24, pp. 235\u2013\n266, 1997.\n[5] H. Chabanne, \"Permutation decoding of abelian codes,\" IEEE Trans.\nInform. Theory, vol. 38, pp. 1826\u20131829, 1992.\n[6] C. Ding, D. R. Kohel, and S. Ling, \"Split group codes,\" IEEE Trans.\nInform. Theory, vol. 46, pp. 485\u2013495, 2000.\n[7] D. S. Dummit, and R. M. Foote, Abstract Algebra. John Wiley & Sons,\n3rd edition, 2004.\n[8] D. R. Farenick, Algebras of Linear Transformations. Springer, 2001.\n[9] J. L. Fisher and S. K. Sehgal, \"Principal ideal group rings,\" Comm.\nAlgebra, vol. 4, pp. 319\u2013325, 1976.\n[10] M. Grassl, \"Bounds on the minimum distance of linear codes and\nquantum codes,\" Online available at http://www.codetables.de, accessed\non 2010-09-29.\n[11] M. Greferath, and S. E. Schmidt, \"Finite-ring combinatorics and\nMacWilliams Equivalence Theorem,\" J. Combin. Theory Ser. A, vol.\n92, pp. 17\u201328, 2000.\n[12] T. Hurley, \"Group ring and rings of matrices,\" Inter. J. Pure and Appl.\nMath.,\" vol. 31, pp. 319\u2013335, 2006.\n[13] P. Hurley, and T. Hurley, \"Module codes in group rings,\" in Proc. IEEE\nInt. Symp. Information Theory, Nice, France, Jul. 2007, pp. 1981\u20131985.\n[14] P. Hurley, and T. Hurley, \"Codes from zero-divisors and units in group\nrings,\" Int. J. Information and Coding Theory, vol. 1, pp. 57\u201387, 2009.\n[15] F. J. MacWilliams, \"Codes and ideals in group algebras,\" Combinatorial Mathematics and its Applications, pp. 312\u2013328, 1969.\n[16] F. J. MacWilliams, \"Binary codes which are ideals in the group algebra\nof an abelian group,\" Bell Syst. Tech. J., vol. 49, pp. 987\u20131011, 1970.\n[17] J. L. Massey, \"Reversible codes,\" Inform. and control, vol. 7, pp. 369\u2013\n380, 1964.\n[18] I. McLoughlin, and T. Hurley, \"A group ring construction of the\nextended binary Golay code,\" IEEE Trans. Inform. Theory, vol. 54,\npp. 4381\u20134383, 2008.\n[19] C. P. Milies, and S. K. Sehgal, An Introduction to Group Rings. London:\nKluwer Academic Publishes, 2002.\n[20] D. S. Passman, The Algebraic Structure of Group Rings. New York:\nWiley, 1977.\n[21] X. Yang, and J. L. Massey, \"The condition for a cyclic code to have a\ncomplementary dual,\" Discrete Math., vol. 126, pp. 391\u2013393, 1994.\n\n\f"}