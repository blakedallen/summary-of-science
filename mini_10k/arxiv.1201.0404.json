{"id": "http://arxiv.org/abs/1201.0404v3", "guidislink": true, "updated": "2012-05-18T02:40:38Z", "updated_parsed": [2012, 5, 18, 2, 40, 38, 4, 139, 0], "published": "2012-01-02T01:05:34Z", "published_parsed": [2012, 1, 2, 1, 5, 34, 0, 2, 0], "title": "Polyhedral Clinching Auctions and the Adwords Polytope", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1201.2016%2C1201.6107%2C1201.1870%2C1201.4157%2C1201.5294%2C1201.6603%2C1201.4818%2C1201.0404%2C1201.4492%2C1201.0177%2C1201.2908%2C1201.1901%2C1201.6461%2C1201.1447%2C1201.6248%2C1201.5113%2C1201.3248%2C1201.0376%2C1201.5275%2C1201.3417%2C1201.0052%2C1201.5747%2C1201.4365%2C1201.4795%2C1201.3924%2C1201.2793%2C1201.4665%2C1201.5780%2C1201.2495%2C1201.4383%2C1201.4294%2C1201.0429%2C1201.5027%2C1201.3952%2C1201.2607%2C1201.4303%2C1201.0593%2C1201.5466%2C1201.2441%2C1201.2829%2C1201.2591%2C1201.1549%2C1201.3671%2C1201.4683%2C1201.5809%2C1201.0490%2C1201.3331%2C1201.6471%2C1201.2111%2C1201.3875%2C1201.4359%2C1201.2497%2C1201.5180%2C1201.6170%2C1201.1346%2C1201.6545%2C1201.0584%2C1201.5276%2C1201.3982%2C1201.5939%2C1201.1926%2C1201.4058%2C1201.5476%2C1201.3140%2C1201.0658%2C1201.5621%2C1201.4329%2C1201.5133%2C1201.1773%2C1201.1350%2C1201.4583%2C1201.5667%2C1201.5491%2C1201.1669%2C1201.1939%2C1201.2605%2C1201.3930%2C1201.4494%2C1201.6132%2C1201.1087%2C1201.2152%2C1201.4940%2C1201.3992%2C1201.3171%2C1201.2949%2C1201.1400%2C1201.6059%2C1201.0692%2C1201.2566%2C1201.6459%2C1201.3979%2C1201.4603%2C1201.4951%2C1201.2030%2C1201.1557%2C1201.2395%2C1201.4684%2C1201.5201%2C1201.5725%2C1201.0084%2C1201.6012&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Polyhedral Clinching Auctions and the Adwords Polytope"}, "summary": "A central issue in applying auction theory in practice is the problem of\ndealing with budget-constrained agents. A desirable goal in practice is to\ndesign incentive compatible, individually rational, and Pareto optimal auctions\nwhile respecting the budget constraints. Achieving this goal is particularly\nchallenging in the presence of nontrivial combinatorial constraints over the\nset of feasible allocations.\n  Toward this goal and motivated by AdWords auctions, we present an auction for\n{\\em polymatroidal} environments satisfying the above properties. Our auction\nemploys a novel clinching technique with a clean geometric description and only\nneeds an oracle access to the submodular function defining the polymatroid. As\na result, this auction not only simplifies and generalizes all previous\nresults, it applies to several new applications including AdWords Auctions,\nbandwidth markets, and video on demand. In particular, our characterization of\nthe AdWords auction as polymatroidal constraints might be of independent\ninterest. This allows us to design the first mechanism for Ad Auctions taking\ninto account simultaneously budgets, multiple keywords and multiple slots.\n  We show that it is impossible to extend this result to generic polyhedral\nconstraints. This also implies an impossibility result for multi-unit auctions\nwith decreasing marginal utilities in the presence of budget constraints.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1201.2016%2C1201.6107%2C1201.1870%2C1201.4157%2C1201.5294%2C1201.6603%2C1201.4818%2C1201.0404%2C1201.4492%2C1201.0177%2C1201.2908%2C1201.1901%2C1201.6461%2C1201.1447%2C1201.6248%2C1201.5113%2C1201.3248%2C1201.0376%2C1201.5275%2C1201.3417%2C1201.0052%2C1201.5747%2C1201.4365%2C1201.4795%2C1201.3924%2C1201.2793%2C1201.4665%2C1201.5780%2C1201.2495%2C1201.4383%2C1201.4294%2C1201.0429%2C1201.5027%2C1201.3952%2C1201.2607%2C1201.4303%2C1201.0593%2C1201.5466%2C1201.2441%2C1201.2829%2C1201.2591%2C1201.1549%2C1201.3671%2C1201.4683%2C1201.5809%2C1201.0490%2C1201.3331%2C1201.6471%2C1201.2111%2C1201.3875%2C1201.4359%2C1201.2497%2C1201.5180%2C1201.6170%2C1201.1346%2C1201.6545%2C1201.0584%2C1201.5276%2C1201.3982%2C1201.5939%2C1201.1926%2C1201.4058%2C1201.5476%2C1201.3140%2C1201.0658%2C1201.5621%2C1201.4329%2C1201.5133%2C1201.1773%2C1201.1350%2C1201.4583%2C1201.5667%2C1201.5491%2C1201.1669%2C1201.1939%2C1201.2605%2C1201.3930%2C1201.4494%2C1201.6132%2C1201.1087%2C1201.2152%2C1201.4940%2C1201.3992%2C1201.3171%2C1201.2949%2C1201.1400%2C1201.6059%2C1201.0692%2C1201.2566%2C1201.6459%2C1201.3979%2C1201.4603%2C1201.4951%2C1201.2030%2C1201.1557%2C1201.2395%2C1201.4684%2C1201.5201%2C1201.5725%2C1201.0084%2C1201.6012&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "A central issue in applying auction theory in practice is the problem of\ndealing with budget-constrained agents. A desirable goal in practice is to\ndesign incentive compatible, individually rational, and Pareto optimal auctions\nwhile respecting the budget constraints. Achieving this goal is particularly\nchallenging in the presence of nontrivial combinatorial constraints over the\nset of feasible allocations.\n  Toward this goal and motivated by AdWords auctions, we present an auction for\n{\\em polymatroidal} environments satisfying the above properties. Our auction\nemploys a novel clinching technique with a clean geometric description and only\nneeds an oracle access to the submodular function defining the polymatroid. As\na result, this auction not only simplifies and generalizes all previous\nresults, it applies to several new applications including AdWords Auctions,\nbandwidth markets, and video on demand. In particular, our characterization of\nthe AdWords auction as polymatroidal constraints might be of independent\ninterest. This allows us to design the first mechanism for Ad Auctions taking\ninto account simultaneously budgets, multiple keywords and multiple slots.\n  We show that it is impossible to extend this result to generic polyhedral\nconstraints. This also implies an impossibility result for multi-unit auctions\nwith decreasing marginal utilities in the presence of budget constraints."}, "authors": ["Gagan Goel", "Vahab Mirrokni", "Renato Paes Leme"], "author_detail": {"name": "Renato Paes Leme"}, "author": "Renato Paes Leme", "arxiv_comment": "Accepted to STOC'12", "links": [{"href": "http://arxiv.org/abs/1201.0404v3", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1201.0404v3", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.GT", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.GT", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1201.0404v3", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1201.0404v3", "journal_reference": null, "doi": null, "fulltext": "Polyhedral Clinching Auctions and the Adwords Polytope\nGagan Goel\nGoogle Inc., New York\ngagangoel@google.com\n\nVahab Mirrokni\nGoogle Inc., New York\nmirrokni@google.com\n\nRenato Paes Leme\u2217\nCornell University\nrenatoppl@cs.cornell.edu\n\narXiv:1201.0404v3 [cs.GT] 18 May 2012\n\nMay 29, 2018\n\nAbstract\nA central issue in applying auction theory in practice is the problem of dealing with budgetconstrained agents. A desirable goal in practice is to design incentive compatible, individually\nrational, and Pareto optimal auctions while respecting the budget constraints. Achieving this\ngoal is particularly challenging in the presence of nontrivial combinatorial constraints over the\nset of feasible allocations.\nToward this goal and motivated by AdWords auctions, we present an auction for polymatroidal environments satisfying the above properties. Our auction employs a novel clinching\ntechnique with a clean geometric description and only needs an oracle access to the submodular\nfunction defining the polymatroid. As a result, this auction not only simplifies and generalizes all\nprevious results, it applies to several new applications including AdWords Auctions, bandwidth\nmarkets, and video on demand. In particular, our characterization of the AdWords auction as\npolymatroidal constraints might be of independent interest. This allows us to design the first\nmechanism for Ad Auctions taking into account simultaneously budgets, multiple keywords and\nmultiple slots.\nWe show that it is impossible to extend this result to generic polyhedral constraints. This\nalso implies an impossibility result for multi-unit auctions with decreasing marginal utilities in\nthe presence of budget constraints.\n\n\u2217\n\nThis author's contribution to this work was made while he was an intern at Google Inc. He is currently a graduate\nstudent at Cornell University supported by a Microsoft Fellowship.\n\n\f1\n\nIntroduction\n\nA large part of auction theory deals with the problem of designing truthful mechanisms for quasilinear settings. For these settings, the VCG mechanism, or variants of it like affine-maximizers, can\nbe applied to get optimal or near-optimal auctions. However, when we deviate from the quasi-linear\nmodel, very little is known. One of the most natural and practically important feature missing from\nthe quasi-linear model is the presence of budget constraints. Budgets play a major role in several\nreal-world auctions where the magnitude of the transactions involved naturally put a financial\nconstraint on the bidders. Examples of such auctions include those used for the privatization of\npublic assets in eastern Europe, or those for the distribution of radio spectra in the US (for a\ndiscussion on this, see Benoit and Krishna [6]). Another important example is that of Ad Auctions\nwhere advertisers explicitly declare budget constraints. In such settings, respecting the declared\nbudget constraints is a necessary property any mechanism must satisfy. There is much discussion\non the source of budget constraints (we refer to Che and Gale [11] for a detailed discussion on this\ntopic).\nSatisfying budget constraints while keeping incentive compatibility and efficiency is a challenging problem, and it becomes even harder in the presence of complex combinatorial constraints over\nthe set of feasible allocations. In the presence of budgets, individual rationality and truthfulness\ncannot be satisfied at the same time as maximizing social welfare [14], and thus the goal of maximizing efficiency can be achieved mainly through Pareto-optimal auctions 1 . Therefore, a desirable\ngoal under budget constraints is to design incentive-compatible (IC) and individually-rational (IR)\nauctions while producing Pareto-optimal outcomes. The first successful example of such mechanisms was developed in the seminal paper of Dobzinski, Lavi and Nisan [14], where the authors\nadapt the clinching auction framework of Ausubel [5] to give a truthful mechanism that achieves\nPareto-optimality. Their setting, however, captures only a simple allocation constraint: there is a\nlimited supply of k items and each player has a value of vi for each item (and hence value of vi * t\nfor getting t items) and budget Bi .\nAs for more general allocation constraints, there have been a couple of subsequent work capturing special families of allocation constraints, e.g., unit demands [2], or multi-unit demands with\nmatching constraints [18]. Although these results are mainly based on Ausubel's clinching auction,\neach of them need to develop independent techniques to deal with their specific environment - for\nexample, Fiat, Leonardi, Saia, and Sankowski [18] define a complex clinching procedure based on\ntrading paths in a bipartite graph and computing S-avoid matchings. Our goal in this paper is\nto extend these results to a much more general class of polyhedral constraints. In particular, we\nwould like to understand for what polyhedral environments one can design such auctions, and also\nidentify simple environments for which designing such auctions is not possible.\nOur Results and Techniques. Firstly, inspired by an application in Sponsored Search Ad\nAuctions and several other applications, we study polymatroid constraints over feasible allocations\nand give an auction that achieves all the desired properties, i.e., it satisfies IC, IR, and produces\nPareto-optimal outcomes while satisfying the budget constraints. We assume that the budgets\nare public - which was shown in [14] to be a necessary assumption2 . While following Ausubel's\nframework to design this auction, we need to invent the main component of the mechanism, i.e.,\n1\n\nAn auction is Pareto-optimal if it outputs an allocation and payments such that no alternative set of allocation\nand payments improves the utility of at least one agent and keeps the other agents at least as happy as before. Here\nagents include bidders and the auctioneer where the auctioneer's utility is its revenue\n2\nDobzinski et. al. [14] showed that with private budgets, truthfulness and Pareto-optimality cannot be achieved\nusing deterministic mechanisms - not even for multi-unit auctions\n\n1\n\n\fthe clinching step that copes with the polyhedral allocation constraints. Our clinching step uses\nsubmodular minimization as a subroutine and only needs a value oracle access to the submodular\nfunction corresponding to the polymatroid. As a result, our mechanism has a clean geometric\ndescription that abstracts away the combinatorial complications of previous designs. This leaves\nthe auctioneer free to focus on modeling the environment, and then use our mechanism as a blackbox. This general technique not only generalizes (and simplifies) the previously known results like\nmulti-unit auctions with matching constraints [14, 18], but also extend clinching auctions to many\nother applications like the AdWords Auction and settings like spanning tree auctions and video on\ndemand [8]. Our main application is in sponsored search auctions where we model the AdWords\nAuction with multiple keywords and multiple position slots per keyword as a polymatroid called\nthe AdWords polytope (See Section 4.1 for details).\nIn order to extend this result to more general polyhedral constraints, we turn our attention to\n2-player auctions with budget constraints and prove several structural properties of Pareto-optimal\ntruthful auctions for polyhedral environments In particular, we present a characterization of such\nauctions that results in various impossibility results and one positive result. On the positive side,\nwe present a truthful individually rational Pareto-optimal auction for any environment if only one\nplayer is budget-constrained. On the other hand, if more than one player is budget-constrained,\nwe illustrate simple polytope constraints for which it is impossible to achieve a truthful Paretooptimal auction even for two players. Moreover, as a byproduct of this characterization, we get\nan impossibility result for multi-unit auctions with decreasing marginal utilities. This impossibility\nresult disproves an implied conjecture by Ausubel [5] which has been reinforced by follow-up papers\n[14, 21]. In fact, this conjecture was reinforced by the fact that getting such an auction is possible\nwhenever the marginals are flat. In appendix D we provide an explicit counter-example for this case.\nApplications to Sponsored Search. Online advertisement is a growing business that was\nworth 25 billion dollars in 2010. It also has become a central piece in the current internet landscape,\nsince it is the primary way internet companies monetize their services. Large part of this revenue\ncomes from the search advertisement, hence it is not surprising that is has been extensively studied\nin the literature. The basic model of sponsored search ad auctions was proposed simultaneously\nby Edelman, Ostrovky and Schwarz [16] and Varian [31]. The authors model the current auction\nas a non-truthful mechanism and analyze its equilibrium properties. The social welfare of such\nequilibria were studied in [28, 22, 10] and its revenue properties in [23].\nIn search advertising, there are usually multiple keywords and each keyword has multiple slots\nassociated with it. Most of the previous work treat auctions for different keywords as being independent, and therefore focus on a single keyword. A recent paper by Dhangwatnotai [13] approaches\nthe problem of analyzing keyword auctions for multiple keywords, but it is restricted to a special\ncase of one slot per page. Similarly, the work of Fiat et al [18] can be seen as an auction for multiple\nkeywords with only one slot per page.\nTo the best of our knowledge, our work is the first work to combine multiple slots per page and\nmultiple keywords. We do so by giving a non-trivial characterization of the set of all feasible allocations of clicks: we call it the AdWords Polytope. We show it has the structure of a polymatroid\nand therefore we can use our result to generate a truthful Pareto-optimal auction for this setting.\nOther Related Work. There are two streams of related work. The first, like ours, is on designing truthful mechanisms when players have budget constraints with the goal of achieving Paretooptimal outcomes; for example, [14], and [18]. Bhattacharya et al [7] show a budget-monotonicity\nproperty for the clinching auction of [14], therefore arguing that no player can improve his utility by\nunder-reporting his budget. For the case of unit-demand players, Aggrawal et al [2] design auctions\n2\n\n\ffor unit-demand players with budget constraints.\nOn the question of maximizing revenue, Borgs et al [9] gave a truthful auction whose revenue\nis asymptotically within a constant factor of the optimal revenue. These results were improved by\nAbrams [1]. Subsequently, Hafalir, Ravi and Sayedi [20] relax the truthfulness requirement, moving\nto ex-post Nash equilibrium as a solution concept, and give an auction that, in equilibrium, has\ngood efficiency and revenue properties. More recently, Pai and Vohra [29] gave a revenue-optimal\nauction for the Bayesian version of the problem. We would like to highlight that the above work\nfocused on the multi-unit setting only.\nOur auction also generalizes the ascending auction of Bikhchandani et al [8]. The authors\nconsider environments where the set of allocations is defined by a polymatroid, but don't consider\nbudget constraints.\nThe second line of related work relates to the practical problem of designing mechanisms for Ad\nAuctions. The work of Feldman et al [17] design an auction for the environment with one keyword\nand multiple slots. Their model is, however, different from the standard utilitarian utility model.\nInstead of being profit maximizers, the players are clicks maximizers, i.e., the players want to get\nas many clicks as possible without exhausting their budget and without paying more per click than\ntheir value, which is a simpler setting than ours. In order to design their auction, they describe\nthe structure of the set of possible randomized allocations of players to slots. We note that the\nstructure they identify is in fact a polymatroid and use this fact to apply our auction to this setting.\nWe further extend this characterization to the setting with multiple keywords.\nAlso for one keyword and multiple slots, Ashlagi et al [4] design an auction for the usual utility\nmodel but relax the truthfulness requirement and get an auction that is Pareto-optimal for all\nex-post Nash equilibria. The main weakness in the setting of [4] is that the agents are allowed to\nbe allocated only to one slot position for all the different queries of the given keyword. However, in\nreality, agents can be allocated to different slot positions for different queries of a given keyword.\nIn the restricted setting of [4], the Pareto-optimality requirement becomes easier to satisfy.\nIndependently of our work, Colini-Baldeschi et al [12] also study the problem of designing incentive compatible, individually rational, budget feasible and Pareto-optimal auctions for sponsored\nsearch. The authors present two auctions satisfying those properties: one for the case with a single\nkeyword but multiple slots with different click-through-rates and one for the case of multiple keywords and multiple slots with homogeneous click-through-rates (i.e. all slots are identical).\nImpossibility results. The impossibility of a Pareto-optimal auction for heterogeneous goods\nin the budgeted setting was given in [18]. It remained an open problem whether an auction was\npossible if goods where identical, i.e., utilities depended only on the number items acquired and not\non which items they were. A very recent result by Lavi and May [21] shows an impossibility result\nfor the case where the valuation can be an arbitrary function of the number of items - i.e. players\nare allowed to express complementarities. Since their setting is more expressive, an impossibility\nresult is easier. Our impossibility result for multi-unit auctions can be seen as a stronger version\nof their result, since we allow players only to express valuations with diminishing marginals. This\ncame as a surprise to us, since it was generally believed that such a positive result could be achieved\nusing a variation of [14].\n\n3\n\n\f2\n\nAuctions for Polyhedral Environments\n\nConsider n players, where player i has a positive value vi per unit of some good g and a budget\nof Bi . We assume that the valuations are private information of the players, whereas the budgets\nare public. We are also given a subset X \u2286 Rn+ that defines all the possible ways to allocate the\ngood g. We assume that the subset X is a convex set that is bounded and downward closed3 . We\nwill call this set X an environment. Note that if player i receives xi amount of good g and pays\npi , her utility ui is equal to vi xi \u2212 pi if pi \u2264 Bi and \u2212\u221e otherwise. However, since we will require\nthe mechanism to never charge more than the budgets, we won't have to deal with the latter case.\nOur goal is to design an auction mechanism that elicits valuations v from the players and outputs\na feasible allocation x(v) \u2208 X and a feasible payment vector p(v) \u2264 B that satisfies the following\nthree properties:\n\u2022 Individual Rationality (a.k.a. voluntary participation): Each player has net non-negative\nutility from participating in the auction, i.e., ui \u2265 0.\n\u2022 Incentive compatibility (a.k.a. truthfulness) : It is a dominant strategy for each player\nto participate in the auction and report their true value, i.e., vi xi (vi , v\u2212i ) \u2212 pi (vi , v\u2212i ) \u2265\nvi xi (vi\u2032 , v\u2212i ) \u2212 pi (vi\u2032 , v\u2212i ). The characterization of single-parameter truthful mechanisms in\n[25, 3] states that this is equivalent to xi being a non-decreasing function\nof vi (for a fixed\nR vi\nv\u2212i ) and payments being calculated by pi (vi , v\u2212i ) = vi xi (vi , v\u2212i ) \u2212 0 xi (u, v\u2212i )du.\n\u2022 Pareto-optimality: An allocation x(v) \u2208 X and payments p(v) \u2264 B is Pareto-optimal if and\nonly if there is no alternative allocation and payments where all players' utilities and the\nrevenue of the auctioneer do not decrease, and at least one of them increases.\nIn other words,\nP\nP\nthere is no alternative (x\u2032 , p\u2032 ) such that vi x\u2032i \u2212 p\u2032i \u2265 vi xi (v) \u2212 pi (v), i p\u2032i \u2265 i pi (v) and at\nleast one of those inequalities is strict.\nNext we prove a useful lemma about the structure of Pareto-optimal outcomes.\nLemma 2.1 A feasible outcome (x, p), i.e. x \u2208 X and p \u2264 B, is Pareto-optimal iff there is no\nd \u2208 Rn in a dominated direction at x (i.e. x + d \u2208 X 0 := {x\u2032 \u2208 X; \u2203x\u0302 \u2208 X \\ x\u2032 , x\u0302 \u2265 x\u2032 }) such that\ndt v \u2265 0 and di \u2264 0 for all i that have pi = Bi .\nProof : In order to show the \u21d2 direction, assume there is a dominated direction d such that\ndt v \u2265 0 and di \u2264 0 for all i that have pi = Bi . Then define x\u2032i = xiP\n+ di andPp\u2032i = pi + vi di and we\nobtain same utilities and the total payment didn't decrease, since i p\u2032i \u2212 i pi = dt v \u2265 0. Now,\nsince x + d is not in the boundary of the polytope, we can give some more of good g to some players\nwithout charging extra payments and increase their utility. Therefore (x, p) is not Pareto-optimal.\nFor the \u21d0 direction, suppose (x\u2032 , p\u2032 ) is a Pareto improvement. Define d = P\nx\u2032 \u2212 x. First\nclaim\nP we\nt\n\u2032\n\u2032\n\u2032\nthat d v > 0. By the definition of Pareto optimality, vi xi \u2212 P\np i \u2264 vi x i \u2212\nPpi , i pi \u2264 i pi and at\nleast one inequality is strict. Summing them all, we get that i vi xi < i vi x\u2032i , which implies that\ndt v > 0. Now, consider two cases:\nIf x\u2032i \u2264 xi for all i with pi = Bi , then di \u2264 0 for all such i. Simply pick some i for which di > 0\nand decrease di slightly. The result will be a dominated direction d\u2032 (since x + d\u2032 \u2264 x + d and\nx + d\u2032 6= x + d) with d\u2032 t v > 0 and d\u2032i \u2264 0 for all i with pi = Bi .\nIf x\u2032i > xi for some i with pi = Bi . Then define d\u2032 such that d\u2032i = di if pi < Bi and d\u2032i = min{0, di }\nif pi = Bi . Now, consider x\u2032\u2032 = x + d\u2032 and p\u2032\u2032 = p\u2032 . Clearly d\u2032 is a dominated direction (since\n3\n\nThis is without loss of genearality if one is allowed to randomize between outcomes, and can allocate lesser amount\nof the good g to any player.\n\n4\n\n\fx + d\u2032 \u2264 x + d and x P\n+ d\u2032 6= xP\n+ d) andPd\u2032i \u2264 0 for pi = Bi by definition. Now, we will show that\nt\n\u2032\n\u2032\u2032\nd v \u2265 0. Notice that i pi = i p\u2032i \u2265 i pi . Also, except for i with x\u2032i > xi and pi = Bi we have:\n\u2032\u2032\n\u2032\u2032\nvi xi \u2212 p\u2032i \u2265 vi xi \u2212 pi .\nvi x\u2032\u2032i \u2212 p\u2032\u2032i = vi x\u2032i \u2212 p\u2032i \u2265 vi xi \u2212 pi . For theremaining\nP i, one has: vi xi \u2212 pi \u2032=\nP\nt\n\u2032\u2032\nSumming all those inequalities, we get i vi xi \u2265 i vi xi , implying that d v \u2265 0.\n\nAnother simple observation is that if (x, p) is a Pareto-optimal outcome in which no budget\nis fully exhausted, then x = argmaxx\u2208X v t x. For small valuations, any Pareto-optimal mechanism\nthat satisfies individually rationality cannot exhaust budgets, so it must behave like VCG.\n\n2.1\n\nPolymatroidal environments\n\nOur most interesting applications correspond to settings where the environment is a packing polytope P = {x \u2208 Rn+ ; Ax \u2264 b} for some m \u00d7 n matrix with Aij \u2265 0 and b \u2208 Rm\n+ . We call such\nenvironments a polyhedral environment. Examples of polyhedral environments are ubiquitous in\ngame theory (see [26, 27] for many examples).\nA rich subclass of packing P\npolytopes is the class of polymatroids, which are polytopes that can\nbe written as P = {x \u2208 Rn+ ; i\u2208S xi \u2264 f (S)} where f : 2[n] \u2192 R+ is a monotone submodular\nfunction, i.e., a function satisfying:\nf (S \u222a T ) + f (S \u2229 T ) \u2264 f (S) + f (T ), \u2200S, T \u2286 [n]\nf (S) \u2264 f (T ), \u2200S \u2286 T \u2286 [n]\nSuch polymatroidal environments generalize matroid environments. It is easy to see that all previously studied settings are instances of a these environments: Dobzinski et al's result [14] corresponds\nto the uniform matroid and Fiat et al's result [18] corresponds to the transversal matroid. Bikhchandani et al [8] give many examples of polymatroid environments including scheduling with due dates,\nnetwork planning, pairwise kidney exchange, spatial markets, bandwidth markets and multi-class\nqueueing systems [8]. In section 4 we discuss some of those applications in more depth and present\na novel application of polymatroids to sponsored search auctions.\n\n3\n\nClinching Auction for Polymatroids\n\nIn this section, we describe our main positive result, i.e., an auction with all the desirable properties\nfor polymatroidal environments. This auction is based on the clinching auctions framework of\nAusubel [5].\nBefore we study more complicated\nconstraints, let's recall the clinching auction\nP\n[5, 14] for the multi-unit setting, i.e., P = {x; i xi \u2264 s0 }. We begin by setting the supply s = s0\nand Bi the budget available to each agent. We maintain a price clock p that begins at zero and\ngradually ascends. For each price p, the agents are asked how much of the good they demand at\nthe current price. Their demand will be di = Bpi (how much they can afford with their remaining\nbudget) if p \u2264 vi , and zero otherwise (the case\nthe price exceeds their marginal value). Then\nPwhere +\nagent i is able to clinch an amount \u03b4i = [s \u2212 j6=i dj ] , which is the minimum amount we can give\nto player i while we are still able to meet the aggregate demands of the other players. Clinching\nmeans that player i gets \u03b4i amounts of the good, and \u03b4i p is subtracted from his budget. The price\nincreases and we repeat the process until the supply is completely sold.\nThe heart of the mechanism is the clinching step and generalizing it for more complicated environments involves various challenges: how does one define the notion of supply and aggregate\ndemand (it is not a single number anymore, since there are constraints restraining the possible\nallocation)? Finally, we need to make sure the clinching step doesn't violate feasibility.\n\n5\n\n\fClinching Framework. First, in Algorithm 1, we consider a slightly modified version of the\nclinching framework: we maintain a price vector p \u2208 Rn+ and increase the prices one player at a\ntime. The vector \u03c1 \u2208 Rn+ contains the promised allocations in each step and its final value is the\nfinal allocation of the mechanism. The payment of each agent is the total amount that was deducted\nfrom their budget during the execution 4 .\nAlgorithm 1 Polyhedral Clinching Auction\nInput: P, vi , Bi\npi = 0, \u03c1i = 0, \u00ee = 1\ndo\ndi = Bi /pi if pi < vi and di = 0 otherwise,\n\u03b4 = clinch(P, \u03c1, d),\n\u03c1i = \u03c1i + \u03b4i , Bi = Bi \u2212 pi \u03b4i ,\ndi = Bi /pi if pi < vi and di = 0 otherwise,\np\u00ee = p\u00ee + \u01eb , \u00ee = \u00ee + 1 mod n\nwhile d 6= 0\nFor each price, we calculate the demand di of each player, which is the amount of the good\nthey would like to get for price p. Then we invoke a procedure called clinch which decides the\namount to grant to each player at that price. We update the promises, remaining budget and adjust\ndemands5 . Then we increase the price.\nIn order to define clinching, we need to define analogues of the remnant supply and to demands\nfor the case where the the environment is a generic polytope. Instead of being a single number as\nin the multi-unit auctions case, the remnant supply and aggregate demands will be polytopes:\nDefinition 3.1 (aggregate demands) Given P , a vector of promised allocation \u03c1 \u2208 P , the remnant supply is described by the polytope P\u03c1 = {x \u2265 0; \u03c1 + x \u2208 P }. If d \u2208 Rn+ is the demand vector,\nthe aggregate demand is defined by P\u03c1,d = {x \u2265 0; \u03c1 + x \u2208 P, x \u2264 d}.\nIn the multi-unit auctions case, the amount player i clinched was the maximum amount we\ncould give him while still being able to meet the demands of the other players. We generalize this\nnotion to polyhedral environments (the concepts are depicted in Figure 1):\nDefinition 3.2 (polyhedral clinching) The demand set of players [n] \\ i if one allocates xi to\n[n]\\i\ni (x ) = {x\nplayer i is represented by the polytope P\u03c1,d\ni\n\u2212i \u2208 R+ ; (xi , x\u2212i ) \u2208 P\u03c1,d }. Since P is a\ni (x ) \u2287 P i (x\u2032 ) if x \u2264 x\u2032 . The amount player i is able to clinch is the\npacking polytope, clearly P\u03c1,d\ni\ni\ni\n\u03c1,d i\nmaximum amount we can give him without making any allocation for the other players infeasible.\ni (x ) = P i (0)}.\nMore formally, \u03b4i = sup{xi \u2265 0; P\u03c1,d\ni\n\u03c1,d\nWe need to ensure that the clinching step is well-defined, i.e., that after clinching is performed,\nthe vector of promised allocations is still feasible. This is done by the following lemma:\nLemma 3.3 For each step of the auction above, if \u03c1 \u2208 P , then \u03c1 + \u03b4 \u2208 P .\nProof : Let \u03c7i be the i-th coordinate vector. Note that \u03b41 \u03c71 \u2208 P\u03c1,d by definition of \u03b4. Now,\n2 (0) = P 2 (\u03b4 ), so: \u03b4 1 \u03c7 + \u03b4 \u03c72 \u2208 P . By induction, we can show that\nnotice that \u03b41 \u03c71 \u2208 P\u03c1,d\n1\n2\n\u03c1,d\n\u03c1,d 2\n4\n5\n\nNote that the details of the main procedure clinch is not described in this algorithm.\nClearly updating demands is not necessary at this point, but we do in order to make the analysis cleaner.\n\n6\n\n\f\u03c1+d\n\n1\nP\u03c1,d\n(0)\n\n\u03c1+d\n\n1\nP\u03c1,d\n(\u03b41 )\n1\nP\u03c1,d\n(\u03b41 + \u01eb)\n\nP\u03c1,d\n\n\u03c1\n\n\u03c1\n\nFigure 1: Illustration of polyhedral clinching: the first two figures depict the polytopes defined\nin Definitions 3.1 and 3.2. The third depicts the mechanism running on polytope P : during the\nexecution, the vector \u03c1 walks inside the polytope (blue line) and the vector \u03c1 + d walks outside it\n(red line), until they meet at the boundary. The point they meet corresponds to the final allocation.\nPj\n\ni=1 \u03b4i \u03c7\n\ni\n\n\u2208 P\u03c1,d . The induction is easy:\n\nPj\n\ni=1 \u03b4i \u03c7\n\ni\n\nj+1\nj+1\n\u2208 P\u03c1,d\n(0) = P\u03c1,d\n(\u03b4j+1 ), so\n\nPj+1\ni=1\n\nj+1\n\u03b4i \u03c7i \u2208 P\u03c1,d\n.\n\nThis auction is clearly truthful, since each player i reports only vi , and she can stop her participation earlier (which she doesn't want, since she will potentially miss items she are interested in)\nor later (which will potentially give her items for a price higher than her valuation). It is also individually rational, since players only get items for prices below their valuation and respect budgets\nby the definition. Notice that those facts are true regardless of the trajectory of the price vector:\nany process that increases prices (in a potentially non-uniform way) has this property.\nLemma 3.4 The auction in Algorithm 1 along with the clinching step described in Definition 3.2\nis truthful, individually-rational and budget-feasible.\n\nClinching for polymatroids. Notice that we haven't used anything from polymatroids yet,\nso Lemma 3.4 holds for any polytope P . However, two things are left to be shown: (i) that amount\nclinched can be computed efficiently and (ii) that the outcome is Pareto optimal. To show both of\nthese properties, we use the fact that P is a polymatroid.\nLemma 3.5 If the environment is a polymatroid P defined by a submodular function f , then the\namount player i clinches in Algorithm 1 is given by:\n\u03b4i = (maxx\u2208P\u03c1,d 1t x) \u2212 (maxx\u2208P\u03c1,d 1t\u2212i x\u2212i ).\nMoreover, this can be calculated efficiently using submodular minimization.\nThe main ingredients of the proof are the following two facts about polymatroids:\nFact 3.6 (Schrijver [30], sections 44.1 and 44.4) If P is a polymatroid defined by the submodular function f , then P\u03c1,d is also a polymatroid defined by the following submodular function:\nf\u02c6(S) = min{f (T ) \u2212 \u03c1(T ) + d(S \\ T )}.\nT \u2286S\n\nNotice that f\u02c6(*) might not be monotone. However,\nf \u0304(S) = min\nf\u02c6(S \u2032 )\n\u2032\nS \u2287S\n\n7\n\n\fis a monotone submodular function that defines the same polymatroid.\nFact 3.7 Given two monotone submodular functions f, f \u0303, then the polymatroids P, P\u0303 defined by\nthem are equal iff the functions are equal. The (\u21d0) direction is trivial. For the other direction,\nnotice that if f (S) < f \u0303(S) say for S = {1, . . . , i}, notice that the point x such that xj = f \u0303({1..j}) \u2212\nf \u0303({1..j \u2212 1}) for j \u2264 i and zero otherwise is such that x \u2208 P\u0303 \\ P .\ni (x ) is also a polymatroid defined\nProof of Lemma 3.5 : Using the fact 3.6, we know that P\u03c1,d\ni\n \u0303\n \u0304\n \u0304\nover [n] \\ i by the function f (S) = min{f (S), f (S \u222a i) \u2212 xi }. Now, we use Fact 3.7 to see that\ni (x ) = P i (0) iff f \u0304(S) \u2264 f \u0304(S \u222a i) \u2212 x , \u2200S \u2286 [n] \\ i. So, \u03b4 = min\n \u0304\n \u0304\n \u0304\nP\u03c1,d\ni\ni\ni\nS\u2286[n]\\i f (S \u222a i) \u2212 f (S). Since f\n\u03c1,d\nis submodular, the smallest marginal can only be\n\nf \u0304([n]) \u2212 f \u0304([n] \\ i) = max{0, f\u02c6([n]) \u2212 f\u02c6([n] \\ i)}\nwhich is exactly the expression in the statement of the lemma. Now, one can easily see that\nevaluating f\u02c6 is a submodular minimization problem.\nNow we prove that the outcomes are Pareto-optimal in two steps. The first step is to characterize\nPareto-optimal allocations for polymatroids. This characterization is stronger than that of Lemma\n2.1, since it explores the structure of polymatroids. Afterwards, we show that the outcomes of the\nchinching auction defined in Algorithm 1 satisfy the two conditions in the\nP characterization lemma.\nIn the following, for a vector x \u2208 Rn and S \u2286 [n] we denote x(S) = i\u2208S xi .\n\nLemma 3.8 For a polymatroidal environment P defined by a submodular function f , an allocation\n(x, p) is Pareto optimal iff:\n1. All items are sold, i.e., x([n]) = f ([n]), and\n\n2. Given a player i with pi < Bi and player j with vj < vi , then there exists a set S such that\nx(S) = f (S), i \u2208 S and j \u2208\n/S\nThe following elementary facts about submodular functions will be useful in the proof of the\nLemma 3.8:\nFact 3.9 Given a vector x \u2208 P , if two sets S, T are tight (i.e. x(S) = f (S) and x(T ) = f (T )),\nthen S \u2229 T and S \u222a T are also tight. The proof is quite elementary: x(S \u222a T ) = x(S) + x(T ) \u2212\nx(S \u2229 T ) \u2265 f (S) + f (T ) \u2212 f (S \u2229 T ) \u2265 f (S \u222a T ). So, all the inequalities must be tight and therefore\nx(S \u222a T ) = f (S \u222a T ) and x(S \u2229 T ) = f (S \u2229 T ).\nFact 3.10 If x([n]) < f ([n]) then there is one component xi that we can increase by \u03b4 > 0 such\nthat x is still in P . It follows from the previous fact: if all players i were contained in a tight set,\none could take the union of those and [n] would be tight. Then there is some element i which is in\nno tight set.\nProof of Lemma 3.8 : The (\u21d2) direction is easy. If x([n]) < f ([n]) then we can increase some\nxi (Fact 3.10) and still get point P generating a Pareto improvement. Also, if there is pi < Bi and\nvj < vi and no tight set separating them, then we can consider another outcome where we increase\nxi by some \u03b4 > 0, decrease xj by some \u03b4 < 0 and still get a feasible point improving xt v. Now, this\nwould not be Pareto optimal by Lemma 2.1.\nFor the (\u21d0) direction, let (x, p) be an outcome satisfying properties\n2 and suppose (x\u2032 , p\u2032 )\nP 1 and\nP\n\u2032\n\u2032\n\u2032\nis a Pareto-improvement. This means that vi xi \u2212 pi \u2265 vi xi \u2212 pi and i pi \u2265 i pi .\n8\n\n\fLet {i1 , . . . , ik } = {n} \u222a {i; pi < Bi }, sorted in non-increasing order of vi . Using property 2\n(notice it holds for player n trivially) together with fact 3.9, we define the following family of tight\nsets S1 \u2286 S2 \u2286 . . . \u2286 Sk = [n], tight in the sense that x(Si ) = f (Si ). For all vt < vi1 there is a tight\nset S1t that has i1 but not t. Let S1 be the intersection of such sets. Now, given S1 \u2286 . . . \u2286 Sj\u22121 , we\ndefine Sj in the following way: If ij \u2208 Sj\u22121 , take Sj = Sj\u22121 (notice can only happen if vij = vij\u22121 ).\nIf not, for each vt < vij there is a tight set Sjt that has ij but not t. Now, define Sj as the union\nof Sj\u22121 and the intersection of the Sjt sets.\nBy eliminating duplicates and its corresponding elements from {i1 . . . ik }, we get a family S1 \u2282\n. . . \u2282 Sk . Define Tj = Sj \\ Sj\u22121 and it is clear the family obtained has the following properties:\n\u2022 all t \u2208 Sj have vt \u2265 vij\n\u2022 ij \u2208 Tj\n\u2022 for all i \u2208 Tj either vi = vij or pi = Bi .\nLet Tj\u2032 = {i \u2208 Tj ; vi 6= vij } and Tj\u2032\u2032 = {i \u2208 Tj ; vi = vij }. Since the players in Tj\u2032 have exhausted their\nbudget, pi \u2265 p\u2032i . Using that and Pareto-optimality, we get:\nX\npi \u2212 p\u2032i \u2265\ni\u2208Tj\u2032\n\n\u2265\n\npi \u2212 p\u2032i \u2265\n\nX\n\nvij (xi \u2212 x\u2032i ) \u2265\n\nvi (xi \u2212 x\u2032i ) \u2265\n\ni\u2208Tj\u2032 ,xi \u2265x\u2032i\n\ni\u2208Tj\u2032 ,xi \u2265x\u2032i\n\n\u2265\n\n\u2217\n\nX\n\nX\n\n\u2217\u2217\n\nX\n\n(1)\n\nvij (xi \u2212 x\u2032i )\n\ni\u2208Tj\u2032\n\ni\u2208Tj\u2032 ,xi \u2265x\u2032i\n\nNow, we can add the inequality pi \u2212 p\u2032i \u2265 vij (xi \u2212 x\u2032i ) for i \u2208 Tj\u2032\u2032 and obtain:\nX\n\ni\u2208Tj\n\npi \u2212 p\u2032i \u2265\n\nX\n\nvij (xi \u2212 x\u2032i )\n\n(2)\n\ni\u2208Tj\n\nSumming those for all j and get:\nX\nXX\nX\nX\npi \u2212 p\u2032i \u2265\nvij (xi \u2212 x\u2032i ) =\n(vij \u2212 vij+1 )\n(xi \u2212 x\u2032i ) \u2265 0\ni\n\nj\n\nj\n\ni\u2208Tj\n\ni\u2208Sj\n\nP\nP \u2032\nsince x(Sj ) = f (Sj ) \u2265 x\u2032 (Sj ). Therefore\ni pi \u2265\ni pi and therefore equal. This means in\nparticular all of the inequalities in (1) and (2) must be tight. Therefore for all i \u2208 Tj\u2032 we need to\nhave xi = x\u2032i , since if xi > x\u2032i then inequality \u2217 in (1)\nIf xi < x\u2032i , then inequality\nP would be strict.\n\u2032\n\u2217\u2217 would be strict. We use this fact to show that i\u2208Sj vi (xi \u2212 xi ) \u2265 0 by induction on j. If we\nP\nP\nshow that, we can take j = k and then we are done, since this will imply that i vi xi \u2265 i vi x\u2032i\nand therefore (x\u2032 , p\u2032 ) cannot be a Pareto-improvement.\nFor j = 1, this is trivial, since we can write:\nX\nX\nvi (xi \u2212 x\u2032i ) \u2265\nvi1 (xi \u2212 x\u2032i )\ni\u2208S1 ,vi 6=vi1\n\ni\u2208S1 ,vi 6=vi1\n\n9\n\n\fsince both terms are zero, and then sum vi (xi \u2212 x\u2032i ) for the rest of the elements in S1 and use the\nfact that S1 is tight. For other j, we use that:\nX\nvi (xi \u2212 x\u2032i ) \u2265\ni\u2208Sj\n\nX\n\n\u2265 vij\u22121\n\ni\u2208Sj\u22121\n\n\u2265 vi j\n\nX\n\n(xi \u2212 x\u2032i ) +\n\nX\n\nvi (xi \u2212 x\u2032i ) +\n\ni\u2208Tj\u2032\n\nX\n\nvij (xi \u2212 x\u2032i ) \u2265\n\ni\u2208Tj\u2032\u2032\n\n(xi \u2212 x\u2032i ) = vij (x(Sj ) \u2212 x\u2032 (Sj )) \u2265 0,\n\ni\u2208Sj\n\nby the fact that Sj is tight.\nNow, we argue that, for sufficiently small \u01eb, the outcome satisfied the two properties in Lemma\n3.8 and hence is Pareto-optimal. We prove this fact using the following sequence of lemmas:\nLemma 3.11 After the clinching step is executed, and before updating prices, f\u02c6([n]) \u2264 f\u02c6([n] \\\nj), \u2200j \u2208 [n].\nProof : In the clinching step, given an initial f\u02c60 , we define \u03b4i = max{0, f\u02c60 ([n]) \u2212 f\u02c60 ([n] \\ i)}. After\nwe update \u03c1, B, d, f\u02c6 is updated to f\u02c61 (S) = f\u02c60 (S) \u2212 \u03b4(S). Now, it is easy to check that:\nX\nX\nX\nf\u02c61 ([n]) = f\u02c60 ([n]) \u2212\n\u03b4i = f\u02c60 ([n]) \u2212 \u03b4j \u2212\n\u03b4i \u2264 f\u02c60 ([n] \\ j) \u2212\n\u03b4i = f\u02c61 ([n] \\ j)\ni\n\ni6=j\n\ni6=j\n\nLemma 3.12 The outcome (x, p) of the clinching auction is such that x([n]) = f ([n]).\nProof : We show the following invariant: if we define f\u02c6 as in Fact 3.6, updating it each round as\n\u03c1, d changes, we claim that the value of 1t \u03c1 + f\u02c6([n]) remains constant.\nTo do so, we consider the events that can cause it to drop:\n1. clinching: just after clinching occurs (i.e. \u03c1i increases by \u03b4i , budgets decrease by p\u03b4i , demands\nare adjusted, but before the price increases), the amount 1t \u03c1 + f\u02c6([n]) remains the same since\n\u03c1t 1 increases by \u03b4t 1 and for all S, f\u02c6(S) decreases by \u03b4(S), because to each i, \u03c1 increases by\n\u03b4i and di decreases by \u03b4i .\n2. price pi increases and di decreases by \u03b8, 0 \u2264 \u03b8 \u2264 di . If\nsome T, i \u2208\n/ T such that:\n\n1t \u03c1 + f\u02c6([n]) decreased then there was\n\nf\u02c6([n] \\ i) + di \u2212 \u03b8 \u2264 f (T ) \u2212 \u03c1(T ) + d([n] \\ T ) \u2212 \u03b8 < f\u02c6([n])\nUsing Lemma 3.11, we know that f\u02c6([n]) \u2264 f\u02c6([n] \\ i), so di < \u03b8 which is not true.\n\nThe proofs of the previous two lemmas intuitively establishes the maximality of the clinching\nprocedure. Lemma 3.11 can be interpreted as saying that if we apply the clinching procedure\ntwice, without updating prices, then the second time will have no effect. The proof of Lemma 3.12\nidentifies an invariant that is maintained during the execution of the mechanism.\n10\n\n\fLemma 3.13 If \u01eb < minvi 6=vj |vi \u2212 vj |, then property 2 of Lemma 3.8 is satisfied.\nProof : Suppose not and for the final outcome there are vj < vi , pi < Bi and all sets S such that\ni \u2208 S, j \u2208\n/ S are not tight. First, clearly xj 6= 0, otherwise [n] \\ j would be tight by Lemma 3.12.\nThen consider x\u0303 where x\u0303i = xi + \u03b8, x\u0303j = xj \u2212 \u03b8 and x\u0303k = xk for all k 6= i, j. It is feasible for some\nsmall \u03b8.\nNow, consider the promised allocation \u03c1 and demands d just before the last time player j clinched\nan amount \u03b4j > 0. If necessary decrease \u03b8 so that it becomes smaller than this last amount clinched,\nj\nj\nj\ni.e., \u03b8 < \u03b4j . At this point \u03c1 \u2264 x \u2264 \u03c1+d. By the definition of clinching: P\u03c1,d\n(\u03b4j ) = P\u03c1,d\n(\u03b8) = P\u03c1,d\n(0).\nAt this point, \u03c1 \u2264 x and \u03c1j +\u03b8 < \u03c1j +\u03b4j = xj . Therefore x\u0303 \u2265 \u03c1. Also, we have that x\u2212\u03c1 \u2264 d and\nxi \u2212 \u03c1i < di , since agent i hasn't dropped his demand to zero yet and his demand never increases\nand won't be met while vi < pi . Here we are strongly using that \u01eb < minvi 6=vj |vi \u2212 vj | to ensure that\nfor the last time player j clinches, player i demand is not zero yet. This implies that x\u0303 \u2212 \u03c1 \u2208 P\u03c1,d\nj\nj\nj\nso (x\u0303 \u2212 \u03c1)\u2212j \u2208 P\u03c1,d\n(0). Now, the fact that P\u03c1,d\n(0) = P\u03c1,d\n(\u03b4i ) implies that x\u0302 = (xj , x\u0303\u2212j ) \u2208 P . But\nx\u0302([n]) = x([n]) + \u03b8 = f ([n]) + \u03b8 > f ([n]), which is an absurd.\nWe can summarize the results as:\nTheorem 3.14 For a polymatroidal environment, the auction in Algorithm 1 along with the clinching step described in Definition 3.2 has all the desirable properties.\nExtensions and limitations of the clinching framework: The clinching framework described in Algorithm 1 and Definition 3.2 is quite flexible: one can change the way clinching is\ndone or the way prices ascend and obtain an auction that is still truthful, individually rational, and\nrespects budgets. Pareto-optimality, however, is a delicate property to achieve. A natural question\nis for which environments Pareto-optimality is still achievable? In appendix A, we show we can\nextend this framework a little further (to scaled polymatroids), but not further than that.\nFaster clinching: We showed in this section that for a generic polymatroid, we can calculate the\nclinched amount using submodular minimization as a sub-routine. For each individual environment,\nhowever, one can usually find much faster clinching subroutines. We illustrate this in appendix B\nfor the single-keyword AdWords polytope.\n\n4\n\nThe AdWords Polytope and other applications\n\nWe begin by discussing some interesting applications of the auction presented in section 3. Then\nwe introduce a novel application of polymatroidal constraints to sponsored search auctions that\ngeneralizes the classical models of Edelman et al [16] and Varian [31].\n\u2022 Multi-unit auctions [14]: corresponds to the polymatroids associated with constant submodular functions, i.e., f (S) = Q, \u2200S.\n\u2022 Combinatorial auctions with matching constraints [18]: there is a bipartite graph ([m], [n], E)\nbetween items [m] and bidders [n] and each buyer i has additive value 1 for each item j such\nthat (i, j) \u2208 E and value 0 for each item not connected to him. We can represent this setting\nby a polymatroid where f (S) is the number of items connected to some player in S. This is\ncalled the transversal matroid.\n\n11\n\n\f\u2022 Video on demand [8]: Consider company that provides video on demand that is located on a\nnode s of a direct network with capacities on the edges G = (V, E, c). Each buyer corresponds\nto a node in the network. An allocation x is feasible if it is possible to transmit at P\nrate xi for\neach player i simultaneously. This is possible if for each subset S \u2286 [n] of players, i\u2208S xi is\nsmaller then the min-cut from s to S. Using the submodularity of the cut-function, it is easy\nto see that the environment is a polymatroid.\n\u2022 Spanning tree auctions: Consider the abstract setting where the agents are edges of a graph G\nand the auctioneer is allowed to allocate goods to a set only if it has no cycles. This corresponds\nto the graphical matroid of graph G. A more practical setting is when a telecommunication\ncompany owns a network that contains cycles and decides to auction their redundant edges.\nThis setting corresponds to the dual-graphical matroid of G.\n\n4.1\n\nAdWords Polytope\n\nConsider n advertisers and m keywords. Each advertiser i is interested in a subset of the keywords\n\u0393(i) \u2286 [m]. For a keyword k, we denote by \u0393(k), the set of advertisers interested in this keyword.\nWith each keyword k, we associate |\u0393(k)| positions. Position j for keyword k has click-through-rate\n\u03b1kj (possibly zero) such that \u03b1k1 \u2265 \u03b1k2 \u2265 . . . \u2265 \u03b1k|\u0393(k)| for each k.\nAssuming that each keyword gets a large amount of queries, we see \u03b1kj as the sum of number\nof clicks that the j-th position of keyword k gets across all queries that it matches. For now, let's\nassume that the number of clicks a player gets in slot j of keyword k depends only on j, k and not\non the identity of the player. One is able to relax this assumption, as we see later.\nLet Ak = {\u03c0k : \u0393(k) \u0592\u2192 [|\u0393(k)|]} be the set of all allocations (one-to-one maps) from players to\nslots for keyword k. Also, let \u2206(Ak ) be the distributions of such allocations. Given that, we can\ndefine the AdWords polytope in the following way: an allocation of clicks x is feasible if there is a\ndistribution over allocations of players to slots for each keyword such that player i gets xi clicks in\nexpectation. More formally:\nDefinition 4.1 (AdWords Polytope) The AdWords polytope is the set of feasible allocations\nof clicks x = (x1 , . . . , xn ) such that there are distributions Dk \u2208 \u2206(Ak ) for each keyword, and\nX\nxi \u2264\nE\u03c0k \u223cDk [\u03b1k\u03c0k (i) ]\n\n6\n\nk\u2208\u0393(i)\n\nOur main result in this Section is that:\nTheorem 4.2 The AdWords polytope is a polymatroid.\nIn order to prove the theorem, we first consider the setting with a single keyword and all\nadvertisers interested in it. Let the click-through-rates be \u03b11 \u2265 . . . \u2265 \u03b1n . Feldman et al [17]\nrelate the problem of deciding if a vector x is feasible to a classical problem in machine scheduling,\ni.e., scheduling in related machines with preemptions (Q|pmtn|Cmax [19]). What follows is a restatement of their characterization in a format that makes it clear it is a polymatroidal environment.\nLemma 4.3 (Feldman\net al [17]) An allocation vector x is feasible iff for each S, x(S) \u2264\nP\nwhere x(S) = i\u2208S xi for each set S \u2286 [n].\n6\n\nP|S|\n\nj=1 \u03b1j ,\n\nSince the number of clicks is typically very large we treat them as divisible goods and consider also fractional\nallocations.\n\n12\n\n\fP|S|\nNotice that fk (S) = j=1 \u03b1kj is a submodular function, so the set of feasible allocations for the\nsingle-keyword setting is a polymatroid.\nFor\nP the multiple-keyword setting, we say that an allocation vector x is feasible if we can write\nxi = k\u2208\u0393(i) xki in such a way that the vector (xki )i\u2208\u0393(k) is feasible for keyword k, i.e., xk (S) \u2264 fk (S)\nfor every S \u2286 \u0393(k).\nThe fact that this allocation set is a polymatroid is a direct consequence of the following theorem,\nwhich is a polymatroidal version of Rado's Theorem due to McDiarmid [24].\nTheorem 4.4 (McDiarmid [24]) Given a bipartite graph ([n] \u222a [m], E), its neighborhood map\n\u0393(*), m submodular functions f1 , . . . , fm and their respective polymatroids P1 , . . . , Pm , then the set:\nX\nP \u2217 = {x \u2208 Rn+ ; xi =\nxki and xk \u2208 Pk }\nk\u2208\u0393(i)\n\nis a polymatroid defined by the function\nf \u2217 (S) =\n\nX\n\nfk (S \u2229 \u0393(k))\n\nk\n\n.\n\nQuality factors: So far, we assumed that the click-through-rate of player i allocated to slot j\nof keyword k depends solely on k and j. More generally, we would like to consider the click-throughrate of a slot depending also on the player allocated in that slot. Let \u03b1kj,i be the click-through-rate of\nposition j of keyword j when player i is placed there. Traditionally, we consider the click-throughrates in a product form, i.e., \u03b1kj,i = \u03b1kj * \u03b3ik where \u03b3ik is called quality factor. Assuming quality\nfactors are public information, one can, in a similar way, define a polytope of feasible allocations.\nIn general it will not be a polymatroid.\nIf the quality factors are uniform among all queries, i.e., \u03b3ik = \u03b3i , the the set of feasible allocations\nis given by P\u03b3\u2217 = {x; ( x\u03b3ii )i \u2208 P \u2217 } where P \u2217 is the AdWords polytope defined as a function of \u03b1kj .\nIt is a scaled polymatroid, for which a variant of the auction in section 3 satisfies all desirable\nproperties (see appendix A).\n\n5\n\nLimitations of auctions for budget-constrained agents\n\nPreviously, we argued why simple modifications to the clinching auction would not work for polyhedral environments beyond (scaled) polymatroids. Here, we explore the possibility of designing an\nauction of a different format achieving those properties and show that this is not possible even for\ntwo players. We do so through a general characterization of Pareto-optimal auctions with desirable\nproperties. Before stating the characterization, we study the case with one budget-constrained\nplayer and prove some lemmas that are useful in proving the general characterization result later.\n\n5.1\n\nOne budget-constrained player\n\nFor ease of exposition, we first focus on 2 players and assume that the feasible set of allocations\nP has a smooth and strictly-concave boundary, in the sense that for each v \u2208 R2+ there is a single\npoint x\u2217 (v) \u2208 P maximizing v t x such that x\u2217 (v) is a C \u221e -function. In fact, one can approximate any\npolytope by such a set using the technique of Dolev et al [15]. Using compactness arguments, it is\n\n13\n\n\fpossible to get an auction for the original environment by taking the limit of the auctions obtained\nfor its C \u221e -approximations.\nAssume that player 1 is not budget constrained and player 2 has budget B2 and let (x\u2217 , p\u2217 ) be\nthe VCG mechanism for this setting. Now, we can define the function:\n\u03be(v1 ) = min{v2 ; p\u22172 (v1 , v2 ) \u2265 B2 }\nTheorem 5.1 The allocation rule\nx(v1 , v2 ) = x\u2217 (v1 , min{v2 , \u03be(v1 )})\nis monotone. Moreover, when coupled with the appropriate payment rule, it generates a Paretooptimal and budget feasible mechanism\nProof : The main part of the proof is to show that the allocation is monotone. If we show\nthat, it is clearly budget feasible for player 2, since we use the VCG-payment rule until the point\nthe budget of player 2 gets exhausted and from that point on, the allocation is constant. When\nthe budgets of the players are not exhausted, the allocation is efficient (since it mimics VCG) and\ntherefore is Pareto-optimal. The allocation when the budget of player 2 is exhausted is equivalent\nto the VCG allocation of a pair (v1 , v2\u2032 ) with v2\u2032 \u2264 v2 , so player 1 is getting x\u22171 (v1 , v2\u2032 ) \u2265 x\u22171 (v1 , v2 )\nby monotonicity of VCG. This implies Pareto-optimality as a consequence of Lemma 2.1.\nMonotonicity: The allocation rule is clearly monotone for player 2. We need to show it is\nmonotone for player 1, i.e. that the function t 7\u2192 x1 (v1 + t, v2 ) is monotone non-decreasing. It\nis clearly so for intervals where \u03be(v1 + t) \u2265 v2 , so let's assume that for t \u2208 (\u2212\u01eb, +\u01eb) we have\nd \u2217\nx1 (v1 + t, \u03be(v1 + t)) \u2265 0. Since the VCG-allocation\n\u03be(v1 + t) < v2 . Our goal is to show that: dt\nd \u2217\nlies in the boundary of P , this is the same as showing that dt\nx2 (v1 + t, \u03be(v1 + t)) \u2264 0. The crucial\nobservation is that the VCG-payment for player 2 on the curve (v1 + t, \u03be(v1 + t)) is constant, i.e.:\nZ \u03be(v1 +t)\nx\u22172 (v1 + t, u)du\nB2 \u2261 p\u22172 (v1 + t, \u03be(v1 + t)) = \u03be(v1 + t)x\u22172 (v1 + t, \u03be(v1 + t)) \u2212\n0\n\nNow, we can simply derivate it with respect to t. We use the notation \u2202i f (*) for the derivative of\nf with respect to the i-th variable. We also define x\u22172 (t) = x\u22172 (v1 + t, \u03be(v1 + t)). Now,\nZ \u03be(v1 +t)\nd \u2217\n\u2032\n\u2217\n\u2032\n\u2217\n\u22021 x\u22172 (v1 + t, u)du\n0 = \u03be (v1 + t)x2 (t) + \u03be(v1 + t) x2 (t) \u2212 \u03be (v1 + t)x2 (t) \u2212\ndt\n0\nZ \u03be(v1 +t)\nd\n\u22021 x\u22172 (v1 + t, u)du \u2264 0\n\u03be(v1 + t) x\u22172 (t) =\ndt\n0\n\u2217\nsince x2 (v1 , v2 ) decreases with v1 by the definition of the VCG allocation.\nA variant of the proof can be used to show the following result for 2 budget constrained players.\nThis is useful for our general characterization.\nCorollary 5.2 If the functions \u03be1 (v2 ), \u03be2 (v1 ) are such that the regions {v; v2 \u2265 \u03be2 (v1 )} and {v; v1 \u2265\n\u03be1 (v2 )} are disjoint, then one can define\nx(v1 , v2 ) = x\u2217 (min{v1 , \u03be1 (v2 )}, min{v2 , \u03be2 (v1 )})\nZ vi\nxi (u, v\u2212i )du.\npi (v) = vi xi (v) \u2212\n0\n\nIf p2 (v1 , \u03be2 (v1 )) \u2261 B2 and p1 (\u03be1 (v2 ), v2 ) \u2261 B1 , then (x, p) is a mechanism with the desirable properties.\n14\n\n\fThe above corollary has a strong fixed-point flavour and it is tempting to believe one could\nget the existence of such a mechanism from this theorem. This is however not true, as shown in\nthe next section. However, this result remains useful as a tool for searching for such mechanisms\nwhenever they exist. For example, one can extend the above theorem to prove the existence of the\nmechanisms for polyhedral environments when B1 is much larger then B2 .\n\n5.2\n\nCharacterization and impossibility\n\nNow we discuss our main negative result: which states an impossibility of extending the auction\nfor polymatroids to general polyhedral environments.\nTheorem 5.3 (Impossibility) There is no general auction for every polyhedral environment and\nevery pair of budgets that satisfies the desirable properties.\nWe prove it in two steps: first we prove a sequence of lemmas characterizing 2-player auctions\nfor polyhedral environments satisfying all the desirable properties. Then we fix a specific polyhedral\nenvironment and argue that no mechanism can possibly satisfy this characterization.\nFirst, we begin by understanding the format of an auction with the desirable properties where\nthe environment is a packing polytope P \u2286 R2+ . We start by defining a family of VCG auctions.\nVCG-family: We say that a mechanism is in the VCG-family if its allocation x(v) \u2208 P is such\nthat\nx(v) \u2208 X \u2217 (v) := argmaxx\u2208P v t x.\nNotice that there might be more than one such mechanism: if v is normal to an edge of the\npolytope, then the entire edge is in the argmax. Nevertheless, x(v1 +, v2 ) = limv1\u2032 \u2193v1 x(v1\u2032 , v2 ) and\nx(v1 , v2 +) = limv2\u2032 \u2193v2 x(v1 , v2\u2032 ) are common for the entire family, as we see in the following lemma.\nA consequence of this fact is that the payment function might not be unique, but p(v1 +, v2 ) and\np(v1 , v2 +) are unique.\nLemma 5.4 Given a convex set P \u2286 R2+ and two allocation rules x(v), x\u0303(v) \u2208 X \u2217 (v) := argmaxx\u2208P v t x,\nthen x(v1 +, v2 ) = x\u0303(v1 +, v2 ), where x(v1 +, v2 ) = limv1\u2032 \u2193v1 x(v1\u2032 , v2 ).\nThe proof is elementary and can be found in Appendix C. To illustrate this fact, consider the\nsimple case of P = {x \u2208 R2+ ; x1 + x2 \u2264 1}. Then the VCG mechanism is well-defined for x1 6= x2 ,\nwhich is, simply to allocate to the player with the highest value the entire amount. But notice\nthat completing this mechanism with any allocation in the points (v, v) generates a truthful mechanism. The payments of different mechanisms of the VCG family differ on (v, v), for example\npi (v, v) = vxi (v), but notice that the payments everywhere else are well-defined.\nPareto-optimal mechanisms: Now we turn our attention back to Pareto-optimal mechanisms\nfor two budget-constrained players. Let (x, p) be such mechanism. As a direct consequence of the\ncharacterization of Pareto optimal outcomes (Lemma 2.1), we know the following:\n\u2022 if pi (v) < Bi then xi (v) \u2265 min{xi ; x \u2208 X \u2217 (v)}\n\u2022 if p1 (v) < B1 , p2 (v) < B2 then x(v) \u2208 X \u2217 (v)\nAnd a simple consequence of truthfulness:\n\u2022 if pi (v) = Bi then for all vi\u2032 \u2265 vi , x(vi\u2032 , v\u2212i ) = x(vi , v\u2212i ).\n15\n\n\fv2\n\nv\n\nv\u2032\n\nv0\n\nv\u2032\n\nv\n\nv0\n\nv1\n(i)\n\nv\n\nv\u2217\n\n(ii)\n\na\n\nsecond part\n\nFigure 2: Illustration of the proof of Lemma 5.5\nNow, we are ready to start proving the characterization theorem. We will characterize the\nmechanism in terms of the regions in the space of valuations where the budgets get exhausted. For\nformally, we are interested in understanding the sets:\nEi = {v \u2208 R2+ ; pi (v) = Bi }\nLemma 5.5 If mechanism (x, p) has the desirable properties, then either E1 \u2229 E2 = \u2205 or there\nexists some a \u2208 R2+ such that {v; v > a} \u2286 E1 \u2229 E2 \u2286 {v; v \u2265 a}.\nProof : Assume that E1 \u2229 E2 is not empty. Then we will prove the lemma in two parts. For the\nfirst part we will prove two statements: (i) if that if v 0 \u2208 E1 \u2229 E2 and v \u2265 v 0 then x(v) = x(v 0 ) and\n(ii) if v, v \u2032 \u2208 E1 \u2229 E2 and vi\u2217 = min{vi , vi\u2032 } then x(v \u2217 ) = x(v) = x(v \u2032 ). Then for the second part, we\nshow that this whole region that has constant allocation has budget exhausted for the two players.\nSee figure 2 for an illustration of the proof.\nFor (i), let v 1 = (v1 , v20 ) and v 2 = (v10 , v2 ) and notice that x(v 0 ) = x(v 1 ) = x(v 2 ), since budgets\nare exhausted so the allocation can't increase. By monotonicity, x2 (v) \u2265 x2 (v 1 ) = x2 (v 0 ) and\nx1 (v) \u2265 x1 (v 2 ) = x1 (v 0 ). Since all allocations lie in the boundary of the polytope, we must have\nx(v) = x(v 0 ).\nThe proof of (ii) is very similar, define vi0 = max{vi , vi\u2032 }. Then by (i), x(v) = x(v 0 ) = x(v \u2032 ) now,\nby the exact same argument as above we show that x(v \u2217 ) = x(v 0 ).\nNow, if ai = inf{vi ; v \u2208 E1 \u2229E2 }, let us show that for v > a, v \u2208 E1 \u2229E2 . Let us show that v \u2208 E2\nand then E1 is analogous. By definition, there is some v \u2032 \u2208 E1 \u2229E2 with v1\u2032 < v1 . Then (v1\u2032 , v2 ) \u2208 E2\nsince the allocation is constant, for v > a, the budget of 2 is exhausted in (v1\u2032 , v2 ) iff it is exhausted in\n(v1\u2032 , v2\u2032 ). Now, note that by monotonicity x1 (v1\u2032 , u) \u2264 x1 (v1 , u) and since allocation is inR the boundary\nv\nof the polytope x2 (v1\u2032 , u) \u2265 x2 (v1 , u). By the payment formula, p2 (v) = v2 x2 (v) \u2212 0 2 x2 (v1 , u)du\nand by the fact that x2 (v) = x2 (v1\u2032 , v2 ), we have that B2 \u2265 p2 (v) \u2265 p2 (v1\u2032 , v2 ) = B2 , so v \u2208 E2 .\nThe next lemma further describes the regions E1 and E2 :\nLemma 5.6 If P is a packing polytope, there is a finite set of vectors {u1 , u2 , . . . , uk } such that\nfor v 6= tui for some t \u2265 0, the VCG family is uniquely defined. Moreover, if (x, p) is a mechanism\nwith the desirable properties and E1 \u2229 E2 \u2286 {v; v \u2265 a} then if \u03bei (v\u2212i ) = inf{vi ; pi (vi , v\u2212i ) = Bi } and\nv\u2212i < a\u2212i , then (\u03bei (v\u2212i ), v\u2212i ) = tui for some t, i.\nProof : The set of vectors {u1 , u2 , . . . , uk } is simply the set of normals of the edges of the polytope\nas depicted in the first part of Figure 3. If v is not an edge in the polytope, then the point in P\n16\n\n\fv2\n\nv2\n\nu1\n\nE2\nu2\nu3\nv1\n\nv1\n\nFigure 3: Illustration of the proof of Lemma 5.6\nmaximizing v t x is a vertex and therefore uniquely defined. If we draw the lines ui * t for t > 0 we\ndivide the space of all possible valuations in regions (see second part of the figure): the regions\ncorrespond to the vertices and the lines to edges of the polytope.\nNow, given a certain mechanism (x, p), suppose that v1 < a1 the vector (v1 , \u03be2 (v1 )) is not\nnormal to any edge of P . Then clearly x\u2217 (v1 , \u03be2 (v1 )) is well-defined and moreover, for some \u03b4 > 0\nand v2\u2032 \u2208 [\u03be2 (v1 ) \u2212 \u03b4, \u03be2 (v1 ) + \u03b4], x\u2217 (v1 , v2\u2032 ) is well-defined and constant in the v2\u2032 -range. Also\n/ E1 \u2229 E2 , since v1 < a1 . For such v2\u2032 > \u03be2 (v1 ), we know that (v1 , v2\u2032 ) \u2208 E2 , thus it is not\n(v1 , v2\u2032 ) \u2208\n/ E2 so\nin E1 and therefore x2 (v1 , v2\u2032 ) = x2 (v1 , \u03be2 (v1 )) \u2264 x\u22172 (v1 , \u03be2 (v1 )). For v2\u2032 < \u03be2 (v1 ), (v1 , v2\u2032 ) \u2208\nx2 (v1 , v2\u2032 ) \u2265 x\u22172 (v1 , v2\u2032 ). Using that x2 (v1 , v2\u2032 ) is constant in v2\u2032 in this range and taking v2\u2032 \u2191 \u03be2 (v1 ),\nwe get: x2 (v1 , v2\u2032 ) \u2265 x\u22172 (v1 , \u03be2 (v1 )).\nNow, by monotonicity, we have x2 (v1 , v2\u2032 ) = x\u22172 (v1 , \u03be2 (v1 )) for all v2\u2032 in the interval (\u03be2 (v1 ) \u2212\n\u03b4, \u03be2 (v1 ) + \u03b4). Therefore the budget of player 2 could not have been exhausted on \u03be2 (v1 ).\nThe third part of Figure 3 illustrates how the region E2 typically looks like. If u1 , u2 , . . . , uk\nare sorted such that u1 corresponds to the edge that is higher to the left and uk corresponds to\nthe edge that is lower to the right, then we can divide [0, a1 ) in segments [0, r1 ), [r1 , r2 ), . . . , [rk , a1 )\nsuch that for v1 \u2208 [0, r1 ), \u03be2 (v1 ) = \u221e, and for v1 \u2208 [ri , ri+1 ), (v1 , \u03be2 (v1 )) is in the line {t * ui ; t \u2265 0}.\nTo see why this is true, consider v1 < v1\u2032 and assume that (v1 , \u03be2 (v1 )) is in the line {t * ui ; t \u2265 0}.\nThen (v1\u2032 , \u03be2 (v1\u2032 )) cannot be strictly above this line, by a similar argument used in Lemma 5.5: look\nat the allocation curves x2 (v1 , v2 ) \u2265 x2 (v1\u2032 , v2 ) and the payment formula \u2013 then player 2 must be\npaying just above the {t * ui ; t \u2265 0} for v1\u2032 line at least as much as he was paying above this line for\nv1 and hence his budgets must be exhausted.\n\n5.3\n\nProof of the Impossibility Theorem\n\nNow, we are ready to prove Theorem 5.3, which states that there is no general auction with all\nthe desirable properties for all polyhedral environments P . We fix the following setting: a set of\nfeasible allocations\nP = {x \u2208 R2+ ; 2x1 + x2 \u2264 6, x1 + 2x2 \u2264 6}\nand budgets B1 = B2 = 1. Assume that (x, p) is a mechanism with the desirable properties for\nthis setting. We will use the characterization lemmas in Section 5.2 to find a contradiction. We\nillustrate the flow of the proof in Figure 4 (a brief summary of the proof is given in the caption of\nthe figure).\nFact 5.7 In the region [0, 23 ) \u00d7 [0, 23 ), the mechanism (x, p) produces an efficient allocation (i.e., it\nis equal to some mechanism of the VCG family).\n\n17\n\n\fv2\n\nv2\n\n(0, 3)\n4/3\n(2, 2)\n2/3\n\nP\n(3, 0)\n\nv1\n2/3\n\nv1\n\n4/3\n\nFigure 4: Illustration of the proof of the impossibility theorem: in the first part we represent\nthe polytope P , in the second we represent the first main steps: we show that any auction must\nresemble VCG in the red region (Fact 5.7) and extend the definition of the auction to the blue\nregion (Facts 5.8 and 5.9), showing that the budget of player 1 must get exhausted at the point\n1.2381\n( 1.2381\n2 , 1.2381) and the budget of player 2 must get exhausted at the point (1.2381,\n2 ). We use\nthis fact to show that the allocation must be constant in the green region (Fact 5.10), contradicting\nPareto-optimality for allocation of the form (v1 , v2 ) where 1.2381\n< v1 < 23 as v2 \u2192 \u221e.\n2\nProof : First notice that no mechanism in the VCG-family for P exhausts the budget in [0, 23 ) \u00d7\n[0, 32 ). Now, we turn our attention to the mechanism (x, p), which is a mechanism with the desirable\nproperties for this setting.\nIn [0, 31 ) \u00d7 [0, 23 ), player 1 cannot exhaust his budget, since x1 \u2264 3 and v1 < 13 . We claim that\nin this area the mechanism needs to behave like VCG. If there is a point in this region where x(v)\ndoesn't maximize v t x for x \u2208 P , then the budget of player 2 must be exhausted. So, there is some\n(v1 , v2 ) such that for v2\u2032 > v2 , p2 (v1 , v2\u2032 ) = B2 and for v2\u2032 < v2 , x(v1 , v2\u2032 ) is in the VCG family.\nNow, notice that the allocation for v2\u2032 > v2 must be x2 (v2\u2032 , v1 ) \u2264 x\u22172 (v2\u2032 , v1 ). This contradicts the\nfact that the budget is exhausted for v2\u2032 \u2193 v2 . So, this shows that (x, p) must allocate efficiently\non [0, 13 ) \u00d7 [0, 32 ). Now, for [0, 23 ) \u00d7 [0, 31 ), we can do the same argument. Now, what remains are\nthe points in [ 13 , 32 ) \u00d7 [ 31 , 23 ). Let v be such a point. Notice that for ( 13 \u2212 \u01eb, v2 ) and (v1 , 13 \u2212 \u01eb), the\nallocation must be (2, 2) because of the previous argument. By monotonicity, x(v) = (2, 2) which\nis the efficient allocation.\nNow, we know how any mechanism (x, p) with the desirable properties should look like in the\nred region of Figure 4. Next, we try to understand how it should look in the blue region. In order\nto do so, we need some definitions. From Lemma 5.5 we know that there is a \u2208 R2+ \u222a {(\u221e, \u221e)})\nsuch that: {v; v > a} \u2286 E1 \u2229 E2 \u2286 {v; v \u2265 a}. We also define:\nv2\n\u1e7d2 = min{v2 ; p1 ( +, v2 ) = 1}\n2\nv1\n\u1e7d1 = min{v1 ; p2 (v1 , +) = 1}\n2\nAnd we focus on the region R, which we define as the interior of the rectangle between (0, 0) and\n(\u1e7d2 /2, \u1e7d2 ).\nFact 5.8 The budget of player 1 does not get exhausted in R. Also,\n\n2\n3\n\n< \u1e7d2 \u2264 1.2381\n\nProof : First, assume \u1e7d2 < 4/3. Then by Fact 5.7, the budget of player 1 does not get exhausted\nin [0, 23 )\u00d7 [0, 23 ) and by the definition of \u1e7d2 and lemma 5.6 it cannot be exhausted for [0, \u1e7d22 )\u00d7 ( 13 , \u1e7d2 ).\nNotice that a cannot be in this region, because it would also contradict the definition of \u1e7d2 .\n18\n\n\fGiven this fact, let us analyze how the mechanism should be in this setting. We do so, by fixing\nv1 and looking at x2 (v1 , v2 ). We can use the same argument as in the previous fact to argue that\nx(v1 , v2 ) must be the efficient allocation for v2 < 2v1 in R and also for all v1 \u2264 31 . For v1 > 31 and\nv2 > 2v1 , if we allocate as in VCG, we exceed the budget. So, the allocation for those points must\nexactly match the budget of player 2. So, the only possible value must be such that:\n1\n2 * v1 + (x2 (v) \u2212 2)2v1 = 1\n2\nand therefore the allocation must be\nx(v) =\n\n\u0012\n\n1\n1 \u2212 v1\n3 \u2212 ,2 +\nv1\n2v1\n\n\u0013\n\n.\n\nNow, this determines the payment of player 1 in the rectangle. We know that for \u03b4 \u2193 0,\np1 ( \u1e7d22 \u2212 \u03b4, \u1e7d2 \u2212 3\u03b4) < 1, which we can write as:\nlim p1 (\n\u03b4\u21930\n\n\u1e7d2\n\u1e7d2\n\u2212 \u03b4, \u1e7d2 \u2212 3\u03b4) = 2 *\n\u2212\n2\n2\n\nZ\n\n\u1e7d2 /2\n\n1/3\n\n1\n\u1e7d2\n3 \u2212 dz = 1 \u2212\n+ log\nz\n2\n\n\u0012\n\n3\n\u1e7d2\n2\n\n\u0013\n\n\u22641\n\nThis implies that \u1e7d2 \u2264 1.2381. Notice that this excludes the fact that \u1e7d2 > 4/3, otherwise we could\nhave done the same analysis on [0, 32 ] \u00d7 [0, \u1e7d2 ] and arrived in the same conclusion that \u1e7d2 \u2264 1.2381.\n\nFact 5.9 \u1e7d2 = 1.2381 and x( \u1e7d22 +, \u1e7d2 ) = (2, 2).\nProof : Since 23 < \u1e7d2 \u2264 1.2381, we know that x2 ( \u1e7d22 +, \u1e7d2 ) \u2265 2 by using that x2 ( \u1e7d22 +, 13 ) = 2 (Fact\n5.7) and monotonicity. Therefore, x1 ( \u1e7d22 +, \u1e7d2 ) \u2264 2. Writing the payment for player 1 at this point\nwe get:\n\u0012\n\u0013\nZ \u1e7d2 /2\n\u1e7d2\n3\n1\n\u1e7d2\n\u1e7d2\n\u1e7d2\n1 = p1 ( +, \u1e7d2 ) = x1 ( +, \u1e7d2 ) *\n3 \u2212 dz \u2264 1 \u2212\n\u2212\n+ log\n\u1e7d2\n2\n2\n2\nz\n2\n2\n1/3\nwhich implies that \u1e7d2 = 1.2381 and x( \u1e7d22 +, \u1e7d2 ) = (2, 2), since all inequalities must be tight.\nFact 5.10 \u1e7d1 = \u1e7d2 = 1.2381 and x(v) = (2, 2) for all valuation profiles v > ( \u1e7d21 , \u1e7d22 ).\nProof :\nWe can apply the same argument exchanging 1 and 2 and conclude that \u1e7d1 = \u1e7d2 .\nNow, to see that for v1\u2032 , v2\u2032 > \u1e7d2i we have x(v1\u2032 , \u1e7d2 ) = x(\u1e7d1 , v2\u2032 ) = (2, 2), we analyze four regions. If\nv \u2208 (v \u0303i /2, v \u0303i ] \u00d7 (v \u0303i /2, v \u0303i ] or v \u2208 [v \u0303i , \u221e) \u00d7 [v \u0303i , \u221e) we can use the standard monotonicity argument to\nshow that x(v) = (2, 2).\nFor the regions [\u1e7d1 , \u221e) \u00d7 ( \u1e7d21 , \u1e7d1 ) and ( \u1e7d22 , \u1e7d2 ) \u00d7 [\u1e7d2 , \u221e) is a little trickier. We do the analysis for\nthe first one. The second is analogous.\nClearly p2 (\u1e7d1 , \u1e7d2 ) = 1. Now, for v1\u2032 > \u1e7d1 , x(v1\u2032 , \u1e7d2 ) = x(\u1e7d1 , \u1e7d2 ) = (2, 2). And for all v2 we\n\u2032\n\u2032\nhave\nsince p2 (v1 , v2 ) = v2 x2 (v) \u2212\nR v2 x1 (v1 , v2 ) \u2265 x1 (\u1e7d1 , v2 ) \u2032and therefore x2 (v1 , v2 ) \u2264 x2 (\u1e7di , v2 ). Now,\n\u2032\n0 x2 (v1 , u)du clearly p2 (v1 , \u1e7d2 ) \u2265 p2 (\u1e7d1 , \u1e7d2 ) = 1. Therefore p2 (v1 , \u1e7d2 ) = 1, since the mechanism\nrespects budgets. Notice that the only way it can be true is that if x2 (v1\u2032 , v2 ) = x2 (\u1e7di , v2 ), so we\nmust have x2 (v1\u2032 , v2 ) = (2, 2) for v1\u2032 \u2208 [\u1e7di , \u221e).\nWe can use the exact same argument for region: ( \u1e7d2i , \u1e7di ) \u00d7 [\u1e7di , \u221e).\n19\n\n\fNow we are ready to prove Theorem 5.3:\nProof of Theorem 5.3 : Now, by putting Fact 5.10 and Fact 5.7 together, we get a contradiction\nwith the Pareto-optimality: consider \u1e7d2i < v1 < 32 then by facts 5.10 and 5.7 combined, we know\nthat x2 (v1 , v2 ) = 0 for v2 < v21 and x2 (v1 , v2 ) = 2 for v2 > v21 , so the budget of player 2 never gets\nexhausted even for v2 \u2192 \u221e. This contradicts Pareto-optimality for v2 > 2v1 , since if his budget is\nnot exhausted, he should get allocated at least as much as he gets in VCG.\n\n5.4\n\nMulti-unit auctions with decreasing marginals\n\nAs a by-product of Theorem 5.3, we can answer in a negative way the question of the existence of\ntruthful Pareto-optimal auctions for multi-unit auctions with decreasing marginals. Consider the\nfollowing setting:\nSetting: Consider a supply of s of a certain divisible good and two players in such a way that the\nfeasible allocations are (x1 , x2 ) such that x1 + x2 \u2264 s. Player i has a public budget Bi and a private\nvaluation which is a increasing concave function Vi : [0, s] \u2192 R+ . Upon getting xi units of the good\nand paying pi , player i has utility ui = Vi (xi ) \u2212 pi .\nIt is tempting to believe that one could adapt the clinching framework in Algorithm 1 to deal\nwith this setting, by simply redefining the demand function as something like:\n\u001a\n\u001b\nBi\ndi = min\n, max{xi ; \u2202Vi (\u03c1i + xi ) \u2264 p}\np\nwhere \u2202Vi (xi ) is the marginal valuation at xi . Indeed, if Vi (xi ) = vi * xi , this recovers the original\nway of calculating demands. In appendix D we give a counter-example showing that the clinching\nframework with this new demand function results in a non-truthful mechanism. The intuition\nbehind the counter example is that some player can increase his declared value on items he won't\nget anyway in order to increase the payment of his opponent, exhausting his budget earlier. This\nway, he is able to get items for cheaper in the end.\nIn the following theorem, we show that no auction mechanism can satisfy all the desirable\nproperties for this setting:\nTheorem 5.11 There is no truthful, Pareto-optimal and budget-feasible auction for this setting.\nProof : Suppose that (x\u0302(V1 , V2 ), p\u0302(V1 , V2 )) is a mechanism satisfying all the desirable properties\nfor multi-unit auctions with decreasing marginals. Then we can use it as a black-box to construct\na mechanism for a general polyhedral environment, contradicting Theorem 5.3. Given a certain\npolyhedral environment, we can describe\nP = {x \u2208 [0, \u03b1] \u00d7 [0, \u03b2]; x2 \u2264 h(x1 )}\nwhere h : [0, \u03b1] \u2192 [0, \u03b2] is a monotone non-increasing concave function, h(0) = \u03b2 and h(\u03b1) = 0.\nNow, using (x\u0302, p\u0302) for s = 1, build the following mechanism: if players report valuations v1 , v2 build\nthe following concave functions: V1 (x1 ) = v1 * \u03b1x1 and V2 (x2 ) = v2 * h(\u03b1 \u2212 \u03b1x2 ).\nNow, simply define\nx(v1 , v2 ) = (\u03b1x\u03021 , h(\u03b1x\u03021 ))\np(v1 , v2 ) = p\u0302(V1 , V2 ).\n20\n\n\fThe mechanism is clearly truthful, individually rational and budget-feasible. It is also easy to see\nthat sets of allocation can me mapped 1-1 between those two settings, preserving Pareto-optimality.\n\nReferences\n[1] Z. Abrams. Revenue maximization when bidders have budgets. In SODA, pages 1074\u20131082,\n2006.\n[2] G. Aggarwal, S. Muthukrishnan, D. P\u00e1l, and M. P\u00e1l. General auction mechanism for search\nadvertising. In WWW, pages 241\u2013250, 2009.\n[3] A. Archer and \u00c9. Tardos. Truthful mechanisms for one-parameter agents. In FOCS, pages\n482\u2013491, 2001.\n[4] I. Ashlagi, M. Braverman, A. Hassidim, R. Lavi, and M. Tennenholt. Position auctions with\nbudgets: Existence and uniqueness. In B.E. journal of Theoretical Economics Advances,\nforthcoming, 2011.\n[5] L. M. Ausubel. An efficient ascending-bid auction for multiple objects. American Economic\nReview, 94, 1997.\n[6] J.-P. Benoit and V. Krishna. Multiple-object auctions with budget constrained bidders. Review\nof Economic Studies, 68(1):155\u201379, January 2001.\n[7] S. Bhattacharya, V. Conitzer, K. Munagala, and L. Xia. Incentive compatible budget elicitation\nin multi-unit auctions. In SODA, pages 554\u2013572, 2010.\n[8] S. Bikhchandani, S. de Vries, J. Schummer, and R. V. Vohra. An ascending vickrey auction\nfor selling bases of a matroid. Operations Research, 59(2):400\u2013413, 2011.\n[9] C. Borgs, J. T. Chayes, N. Immorlica, M. Mahdian, and A. Saberi. Multi-unit auctions with\nbudget-constrained bidders. In ACM Conference on Electronic Commerce, pages 44\u201351, 2005.\n[10] I. Caragiannis, P. Kanellopoulos, C. Kaklamanis, and M. Kyropoulou. On the efficiency of\nequilibria in generalized second price auctions. In EC'11, 2011.\n[11] Y.-K. Che and I. Gale. Standard auctions with financially constrained bidders. Review of\nEconomic Studies, 65(1):1\u201321, January 1998.\n[12] R. Colini-Baldeschi, M. Henzinger, S. Leonardi, and M. Starnberger. On multiple round sponsored search auctions with budgets. CoRR, abs/1112.6361, 2011.\n[13] P. Dhangwatnotai. Multi-keyword sponsored search. In ACM Conference on Electronic Commerce, pages 91\u2013100, 2011.\n[14] S. Dobzinski, R. Lavi, and N. Nisan. Multi-unit auctions with budget limits. In FOCS, pages\n260\u2013269, 2008.\n[15] D. Dolev, D. G. Feitelson, J. Y. Halpern, R. Kupferman, and N. Linial. No justified complaints:\non fair sharing of multiple resources. In ICTS, pages 68\u201375, 2012.\n\n21\n\n\f[16] B. Edelman, M. Ostrovsky, and M. Schwarz. Internet advertising and the generalized secondprice auction: Selling billions of dollars worth of keywords. The American Economic Review,\n97(1):242\u2013259, March 2007.\n[17] J. Feldman, S. Muthukrishnan, E. Nikolova, and M. P\u00e1l. A truthful mechanism for offline ad\nslot scheduling. In SAGT, pages 182\u2013193, 2008.\n[18] A. Fiat, S. Leonardi, J. Saia, and P. Sankowski. Single valued combinatorial auctions with\nbudgets. In ACM Conference on Electronic Commerce, pages 223\u2013232, 2011.\n[19] R. L. Graham, E. L. Lawler, J. K. Lenstra, and A. H. G. R. Kan. Optimization and approximation in deterministic sequencing and scheduling: a survey. Ann. Discrete Math., 4:287\u2013326,\n1979.\n[20] I. Hafalir, R. Ravi, and A. Sayedi. Sort-cut: A pareto optimal and semi-truthful mechanism\nfor multi-unit auctions with budget-constrained bidders. Ad Auctions Workshop.\n[21] R. Lavi and M. May. A note on the incompatibility of strategy-proofness and pareto-optimality\nin quasi-linear settings with public budgets. WINE.\n[22] B. Lucier and R. Paes Leme. Gsp auctions with correlated types. In EC'11, 2011.\n[23] B. Lucier, R. Paes Leme, and \u00c9va Tardos. On revenue in the generalized second price auction.\nIn Ad Auctions Workshop, 2011.\n[24] C. J. H. McDiarmid. Rado's theorem for polymatroids. Mathematical Proceedings of the\nCambridge Philosophical Society, 78(02):263\u2013281, 1975.\n[25] R. Myerson. Optimal auction design. Mathematics of Operations Research, 6(1):58\u201373, 1981.\n[26] T. Nguyen and \u00c9. Tardos. Approximately maximizing efficiency and revenue in polyhedral\nenvironments. In ACM Conference on Electronic Commerce, pages 11\u201319, 2007.\n[27] T. Nguyen and M. Vojnovic. The weighted proportional sharing mechanisms. In SIGMETRICS,\n2011.\n[28] R. Paes Leme and E. Tardos. Pure and bayes-nash price of anarchy for generalized second price\nauctions. In FOCS10: 51st Annual IEEE Symposium on Foundations of Computer Science,\n2010.\n[29] M. M. Pai and R. Vohra. Optimal auctions with financially constrained bidders. Discussion\npapers, Northwestern University, Center for Mathematical Studies in Economics and Management Science, Aug 2008.\n[30] A. Schrijver. Combinatorial Optimization - Polyhedra and Efficiency. Springer, 2003.\n[31] H. R. Varian. Position auctions. International Journal of Industrial Organization, 2006.\n\n22\n\n\fA\n\nExtensions and Limitations of the clinching framework\n\nScaled polymatroids: If P \u2286 Rn+ is a polymatroid, \u03b3 \u2208 Rn+ , then we call P\u03b3 = {x; ( x\u03b3ii )i \u2208 P } a\nscaled polymatroid. If the environment is P\u03b3 , it is easy to see that a truthful, individually-rational,\nPareto-optimal and budget-feasible auction is obtained by running the polymatroid clinching auction on P with inputs \u03b3i vi instead of vi . It is simple to see that this is equivalent to a standard\nclinching auction with input values vi but price clocks advancing on a different speed for each player.\nScaled polymatroids are important since they correspond to the setting of AdWords with Quality\nFactors discussed at the end of section 4.1).\nBeyond scaled polymatroids: one could change the way clinching is done and one could\nchange the price trajectories, maybe in a more sophisticated way then the one we did for the scaled\npolymatroids. If the trajectory is such that it only depends on P and budgets (not on values)\nand pi never decreases, the auction retains truthfulness and budget feasibility. Here we argue that\nnone of such changes would generate a Pareto-optimal auction when P is not a scaled polymatroid.\nAssume n = 2 for simplicity and imagine that there is trajectory for the price vector p and a\nclinching procedure. Also assumes valuations are much smaller than budgets in such a way that\nthe mechanism cannott exhaust budgets and therefore the auction must allocate like VCG. Any\nsuch mechanism must decide on the whole allocation the first time pi = vi for some component,\nhaving only the information that vj \u2265 pj for the other component, since at this point he needs to\nallocate to the second player. So, the environment must be such that there is a price trajectory\np(t), where the optimal allocation is constant for all points (p1 , v2 ) for all v2 > p2 . And also, it\nshould be constant for all (v1 , p2 ) for all v1 > p1 . Notice that scaled polymatroids are exactly those\nenvironments.\n\nB\n\nFaster clinching sub-routines\n\nIn Lemma 3.5 we showed that for any generic polymatroidal environment P we can perform the\nclinching step in polynomial time if we have oracle access to the submodular function defining the\npolymatroid. In order to do so, we solve a submodular minimization problem. For most practical\napplications, however, one can design much simpler and faster algorithms for clinching. Clinching\ninvolves solving the following problem: given an environment P , \u03c1 \u2208 P and d \u2208 Rn+ we want to\ncompute:\nmax{1t x; x + \u03c1 \u2208 P, 0 \u2264 x \u2264 d}\n\n(3)\n\nWe illustrate how to solve this problem efficiently for the single-keyword AdWords polytope:\ngiven \u03b11 \u2265 \u03b12 \u2265 . . . \u2265 \u03b1n , consider the environment:\nP = {x \u2208 Rn+ ; x(S) \u2264\n\nP|S|\n\nj=1 \u03b1j , \u2200S\n\n\u2286 [n]}\n\nLemma B.1 For the single-keyword AdWords polytope, the optimization problem defined in equation (3) can be solved using the following greedy algorithm: we can assume wlog that the components\nare sorted such that \u03c11 + d1 \u2265 \u03c12 + d2 \u2265 . . . \u2265 \u03c1n + dn . Now, define inductively\nP\nP\nzi = min{\u03c1i + di , ij=1 \u03b1j \u2212 i\u22121\nj=1 zj }.\nP\nThen i zi \u2212 \u03c1i is the solution to the problem.\n23\n\n\fProof : If we drop the restriction that x \u2265 0 in (3), then it is easy to see that x = z \u2212 \u03c1 is an\noptimal solution to this problem using, for example, a local exchange argument. Now, we show\nthat we can fix this problem, by modifying z such that z \u2265 \u03c1.\nIn order to fix that,\nthe smaller P\ni such thatPzi < \u03c1i . By the definition of zi , it must\nPiconsider P\ni\u22121\nbe the case that zi = j=1 \u03b1j \u2212 j=1 zj , so ij=1 zj = ij=1 \u03b1j . Then there must be some k < i\nP\nP\nsuch that zk > \u03c1k , otherwise we would have ij=1 \u03c1j > ij=1 \u03b1j contradicting the fact that \u03c1 \u2208 P .\nNotice we can increase zi by some small \u03b4 and decrease zk by a small \u03b4. And obtain another vector\nz which is also such that z \u2208 P, z \u2264 \u03c1 + d and has the same 1t z value (the fact that z \u2208 P after\nthis transformation is due to the nature of the constraints). We can repeat this process until we\nget z \u2265 \u03c1.\n\nC\n\nMissing proofs in Section 5\n\nProof of Lemma 5.4 : Suppose that x(v1 +, v2 ) 6= x\u0303(v1 +, v2 ), then say that x1 (v1 +, v2 ) >\nx\u03031 (v1 +, v2 ). Since both are in the boundary of the polytope, it means that for all (v1\u2032 , v2 ) with\nv1\u2032 > v1 , x\u03031 (v1\u2032 , v2 ) \u2265 x1 (v1 +, v2 ), since the points to the right of x(v1 +, v2 ) are clearly better then\nthe ones to the left of it. So x\u03031 (v1\u2032 , v2 ) can't converge to x\u03031 (v1 +, v2 ) < x1 (v1 , x2 ).\n\nD\n\nCounter-example to clinching with decreasing marginals\n\nConsider the setting of multi-unit auctions with decreasing marginals described in section 5.4, and\nthe variant of the clinching auction in Algorithm 1 where demands are calculated by:\n\u001b\n\u001a\nBi\n, max{xi ; \u2202Vi (\u03c1i + xi ) \u2264 p}\ndi = min\np\nOur main claim here is that this auction is not truthful. We show that by providing an example:\nconsider an initial supply of s = 2 budgets B1 = \u221e, B2 = 4 and valuations:\n(\n4x, x \u2208 [0, 1]\nV1 (x) =\nV2 (x) = 3x, x \u2208 [0, 2]\n4 + x, x \u2208 [1, 2]\nThe outcome of that is x1 = 1, x2 = 1 and p1 = 3, p2 = 1 since budgets never get exhausted.\nNow, we show that player 1 has a profitable deviation. He could report the following valuation\ninstead:\n(\n4x, x \u2208 [0, 1]\n\u1e7c1 (x) =\n4 + 2x, x \u2208 [1, 2]\nThe the price clock increases up to 2 without any clinching. For 2+, the demand of player 1 drops\nand player 2 is able to clinch one unit by the price of 2, remaining with budget 2. Now, as price\ngoes up, player 2's demand keeps decreasing, since his leftover budget is only 2 and the price is\ngreater than 2. As a result, player 1 will be able to start clinching at price p = 2+ and therefore\nwill have x\u03031 = 1, p\u03031 < 3, which is a strict improvement over the truth-telling strategy.\n\n24\n\n\f"}