{"id": "http://arxiv.org/abs/1006.2811v1", "guidislink": true, "updated": "2010-06-14T19:28:47Z", "updated_parsed": [2010, 6, 14, 19, 28, 47, 0, 165, 0], "published": "2010-06-14T19:28:47Z", "published_parsed": [2010, 6, 14, 19, 28, 47, 0, 165, 0], "title": "High Speed Reconfigurable FFT Design by Vedic Mathematics", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1006.1772%2C1006.4750%2C1006.3832%2C1006.4068%2C1006.5212%2C1006.0689%2C1006.0871%2C1006.2761%2C1006.2448%2C1006.5847%2C1006.3845%2C1006.5537%2C1006.4181%2C1006.1483%2C1006.1544%2C1006.2159%2C1006.0678%2C1006.0828%2C1006.2045%2C1006.0894%2C1006.4562%2C1006.0101%2C1006.1998%2C1006.4023%2C1006.0062%2C1006.2840%2C1006.3666%2C1006.0854%2C1006.5823%2C1006.0501%2C1006.0954%2C1006.5415%2C1006.4699%2C1006.5677%2C1006.5907%2C1006.2192%2C1006.5441%2C1006.4166%2C1006.5928%2C1006.1391%2C1006.2170%2C1006.1491%2C1006.3179%2C1006.5574%2C1006.2476%2C1006.4323%2C1006.2209%2C1006.3302%2C1006.3111%2C1006.4155%2C1006.3391%2C1006.0608%2C1006.2701%2C1006.3350%2C1006.5640%2C1006.2815%2C1006.4988%2C1006.5959%2C1006.3517%2C1006.3075%2C1006.3753%2C1006.4886%2C1006.2509%2C1006.0783%2C1006.0469%2C1006.2342%2C1006.4082%2C1006.5435%2C1006.3066%2C1006.2478%2C1006.0709%2C1006.5491%2C1006.4837%2C1006.5406%2C1006.2837%2C1006.2811%2C1006.0220%2C1006.2055%2C1006.4748%2C1006.4413%2C1006.4385%2C1006.2156%2C1006.5164%2C1006.0708%2C1006.4157%2C1006.3941%2C1006.1000%2C1006.4915%2C1006.1322%2C1006.0577%2C1006.0975%2C1006.0696%2C1006.0371%2C1006.4599%2C1006.0013%2C1006.3889%2C1006.0324%2C1006.4045%2C1006.3515%2C1006.2318%2C1006.4465&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "High Speed Reconfigurable FFT Design by Vedic Mathematics"}, "summary": "The Fast Fourier Transform (FFT) is a computationally intensive digital\nsignal processing (DSP) function widely used in applications such as imaging,\nsoftware-defined radio, wireless communication, instrumentation. In this paper,\na reconfigurable FFT design using Vedic multiplier with high speed and small\narea is presented. Urdhava Triyakbhyam algorithm of ancient Indian Vedic\nMathematics is utilized to improve its efficiency. In the proposed\narchitecture, the 4x4 bit multiplication operation is fragmented reconfigurable\nFFT modules. The 4x4 multiplication modules are implemented using small 2x2bit\nmultipliers. Reconfigurability at run time is provided for attaining power\nsaving. The reconfigurable FFT has been designed, optimized and implemented on\nan FPGA based system. This reconfigurable FFT is having the high speed and\nsmall area as compared to the conventional FFT.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1006.1772%2C1006.4750%2C1006.3832%2C1006.4068%2C1006.5212%2C1006.0689%2C1006.0871%2C1006.2761%2C1006.2448%2C1006.5847%2C1006.3845%2C1006.5537%2C1006.4181%2C1006.1483%2C1006.1544%2C1006.2159%2C1006.0678%2C1006.0828%2C1006.2045%2C1006.0894%2C1006.4562%2C1006.0101%2C1006.1998%2C1006.4023%2C1006.0062%2C1006.2840%2C1006.3666%2C1006.0854%2C1006.5823%2C1006.0501%2C1006.0954%2C1006.5415%2C1006.4699%2C1006.5677%2C1006.5907%2C1006.2192%2C1006.5441%2C1006.4166%2C1006.5928%2C1006.1391%2C1006.2170%2C1006.1491%2C1006.3179%2C1006.5574%2C1006.2476%2C1006.4323%2C1006.2209%2C1006.3302%2C1006.3111%2C1006.4155%2C1006.3391%2C1006.0608%2C1006.2701%2C1006.3350%2C1006.5640%2C1006.2815%2C1006.4988%2C1006.5959%2C1006.3517%2C1006.3075%2C1006.3753%2C1006.4886%2C1006.2509%2C1006.0783%2C1006.0469%2C1006.2342%2C1006.4082%2C1006.5435%2C1006.3066%2C1006.2478%2C1006.0709%2C1006.5491%2C1006.4837%2C1006.5406%2C1006.2837%2C1006.2811%2C1006.0220%2C1006.2055%2C1006.4748%2C1006.4413%2C1006.4385%2C1006.2156%2C1006.5164%2C1006.0708%2C1006.4157%2C1006.3941%2C1006.1000%2C1006.4915%2C1006.1322%2C1006.0577%2C1006.0975%2C1006.0696%2C1006.0371%2C1006.4599%2C1006.0013%2C1006.3889%2C1006.0324%2C1006.4045%2C1006.3515%2C1006.2318%2C1006.4465&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The Fast Fourier Transform (FFT) is a computationally intensive digital\nsignal processing (DSP) function widely used in applications such as imaging,\nsoftware-defined radio, wireless communication, instrumentation. In this paper,\na reconfigurable FFT design using Vedic multiplier with high speed and small\narea is presented. Urdhava Triyakbhyam algorithm of ancient Indian Vedic\nMathematics is utilized to improve its efficiency. In the proposed\narchitecture, the 4x4 bit multiplication operation is fragmented reconfigurable\nFFT modules. The 4x4 multiplication modules are implemented using small 2x2bit\nmultipliers. Reconfigurability at run time is provided for attaining power\nsaving. The reconfigurable FFT has been designed, optimized and implemented on\nan FPGA based system. This reconfigurable FFT is having the high speed and\nsmall area as compared to the conventional FFT."}, "authors": ["Ashish Raman", "Anvesh Kumar", "R. K. Sarin"], "author_detail": {"name": "R. K. Sarin"}, "author": "R. K. Sarin", "arxiv_comment": "Submitted to Journal of Computer Science and Engineering, see\n  http://sites.google.com/site/jcseuk/volume-1-issue-1-may-2010", "links": [{"href": "http://arxiv.org/abs/1006.2811v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1006.2811v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.OH", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.OH", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1006.2811v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1006.2811v1", "journal_reference": "Journal of Computer Science and Engineering, Volume 1, Issue 1,\n  p59-63, May 2010", "doi": null, "fulltext": "JOURNAL OF COMPUTER SCIENCE AND ENGINEERING, VOLUME 1, ISSUE 1 MAY 2010\n59\n\nHigh Speed Reconfigurable FFT Design by\nVedic Mathematics\nAshish Raman, Anvesh Kumar and R.K.Sarin\nAbstract-The Fast Fourier Transform (FFT) is a computationally intensive digital signal processing (DSP) function widely used\nin applications such as imaging, software-defined radio, wireless communication, instrumentation. In this paper, a reconfigurable\nFFT design using Vedic multiplier with high speed and small area is presented. Urdhava Triyakbhyam algorithm of ancient Indian\nVedic Mathematics is utilized to improve its efficiency. In the proposed architecture, the 4x4 bit multiplication operation is\nfragmented reconfigurable FFT modules. The 4x4 multiplication modules are implemented using small 2x2bit multipliers.\nReconfigurability at run time is provided for attaining power saving. The reconfigurable FFT has been designed, optimized and\nimplemented on an FPGA based system. This reconfigurable FFT is having the high speed and small area as compared to the\nconventional FFT.\nIndex Terms-Digital Signal Processing, FPGA, Urdhava Triyakbhyam, FFT\n\n---------- \uf075 ----------\n\n1. INTRODUCTION\n\nDigital\n\nsignal processing (DSP) is the\n\ntechnology that is omnipresent in almost every\nengineering discipline. Faster additions and\nmultiplications are of extreme importance in DSP\nfor convolution, discrete Fourier transform, digital\nfilters, etc. The core computing process is always a\nmultiplication routine; therefore, DSP engineers\nare constantly looking for new algorithms and\nhardware to implement them. Vedic mathematics\nis the name given to the ancient system of\nmathematics, which was rediscovered, from the\nVedas between 1911 and 1918 by Sri Bharati\nKrishna Tirthaji. The whole of Vedic mathematics\nis based on 16 sutras (word formulae) and\nmanifests a unified structure of mathematics. As\nsuch, the methods are complementary, direct and\neasy.\n\nA.Raman is with National Institute of Technology,Jalandhar\nAnvesh\nkumar\nis\nwith\nNational\nInstitute\nof\nTechnology,Jalandhar\nR.K.Sarin is with National Institute of Technology,Jalandhar\n\nDue to a growing demand for such complex DSP\napplication, high speed, low cost system-on-a-chip\n(SOC) implementation of DSP algorithm are\nreceiving increased the attention among the\nresearchers and design engineer. Fast Fourier\nTransform (FFT) is the one of the fundamental\noperations that is typically performed in any DSP\nsystem. Basic formula of computation of FFT is\nX (k) =\n\nWNnk 0 \u2264 k \u2264 N-1\n\nThe Fast Fourier Transform (FFT) is a\ncomputationally intensive digital signal processing\n(DSP) function widely used in applications such as\nimaging,\nsoftware-defined\nradio,\nwireless\ncommunication, instrumentation and machine\ninspection. Historically, this has been a relatively\ndifficult function to implement optimally in\nhardware leading many software designers to use\ndigital signal processors in soft implementations.\nVedic Mathematics is the ancient system\nof mathematics which has a unique technique of\ncalculations based on 16 Sutras. Employing these\ntechniques in the computation algorithms of the\ncoprocessor will reduce the complexity, execution\ntime, area, power etc. In this paper reconfigurable\nFFT is proposed to design by Vedic mathematics.\nUrdhva\ntiryakbhyam,\nbeing\na\ngeneral\nmultiplication formula, is equally applicable to all\n\n\fJOURNAL OF COMPUTER SCIENCE AND ENGINEERING, VOLUME 1, ISSUE 1 MAY 2010\n60\n\ncases of multiplication. Nikhilam algorithm with\nthe compatibility to different data types. This sutra\nis to be used to build a high speed power efficient\nreconfigurable FFT.\nPaper is organized as follow: section II\ndescribes the integration of two fields i.e., FPGA\ntechnology and DSP and discusses the role FPGA\nhas played in implementing DSP algorithm.\nSection III describe the basic and introduction to\nthe Vedic algorithm and how this algorithm are\nused to solve the different problem of mathematics\nand this chapter also include the review of\nliterature survey. Section IV describes the basic\nintroduction of the FFT and how the different\nmodules of the FFT are designed by Vedic\nalgorithm. Section V describes the various results.\n\n2. INTEGRATION OF DSP WITH\nFPGA\nIn electronic system design, the main\nattraction of microprocessors/microcontrollers is\nthat it considerably lessens the risk of system\ndevelopment by reducing design complexity. As\nthe hardware is fixed, all of the design effort can be\nconcentrated on developing the code which will\nmake the hardware work to the required system\nspecification.\nThis\nsituation\nhas\nbeen\ncomplemented by the development of efficient\nsoftware compilers which have largely removed\nthe need for designer to create assembly language;\nto some extent, this can absolve the designer from\nhaving a detailed knowledge of the microprocessor\narchitecture (although many practitioners would\nargue that this is essential to produce good code).\nThis concept has grown in popularity and\nembedded microprocessor courses are now\nessential parts of any electrical/electronic or\ncomputer engineering degree course.\nA lot of this process has been down to the\nsoftware developer\u2016s ability to exploit underlying\nprocessor architecture, the Von Neumann\narchitecture. However, this advantage has also\nbeen the limiting factor in its application to the\ntopic of this text, namely digital signal processing\n(DSP). In the Von Neumann architecture,\noperations are processed sequentially, which\nallows relative Straight forward interpretation of\nthe hardware for programming purposes;\nhowever, this severely limits the performance in\nDSP applications which exhibit typically, high\nlevels of parallelism and in which, the operations\nare highly data independent \u2013 allowing for\noptimizations to be applied.\n\nThis limitation is overcome in FPGAs as\nthey allow what can be considered to be a second\nlevel of programmability, namely programming of\nthe underlying processor architecture. By creating\narchitecture that best meets the algorithmic\nrequirements, high levels of performance in terms\nof area, speed and power can be achieved. In high\nvolumes, ASIC implementations have resulted in\nthe most cost effective, fastest and lowest energy\nsolutions. However, increasing mask costs and\nimpact of \u2015right first time\u2016 system realization have\nmade the FPGA, a much more attractive\nalternative. In this sense, FPGAs capture the\nperformance\naspects\noffered\nby\nASIC\nimplementation, but with the advantage of\nprogrammability\nusually\nassociated\nwith\nprogrammable processors. Thus, FPGA solutions\nhave emerged which currently offer several\nhundreds of giga operations per second (GOPS) on\na single FPGA for some DSP applications which is\nat least an order of magnitude better performance\nthan microprocessors.\n\n3. VEDIC ALGORITHM\nThe proposed Vedic multiplier is based on the\nVedic multiplication formulae (Sutras). These\nSutras have been traditionally used for the\nmultiplication of two numbers in the decimal\nnumber system. In this work, we apply the same\nideas to the binary number system to make the\nproposed algorithm compatible with the digital\nhardware. Vedic multiplication based on some\nalgorithms, some are discussed below:\n\n3.1 URDHVA TIRYAKBHYAM SUTRA\nUrdhva Tiryakbhyam (Vertically and\nCrosswise), deals with the multiplication of\nnumbers. This Sutra has been traditionally used for\nthe multiplication of two numbers in the decimal\nnumber system. In this project, we apply the same\nidea to the binary number system to make it\ncompatible with the digital hardware. Let us first\nillustrate this Sutra with the help of an example in\nwhich two decimal numbers are multiplied. Line\ndiagram for the multiplication of two numbers\n(234\u00d7 316) is shown in Fig. 1. The digits on the two\nends of the line are multiplied and the result is\nadded with the previous carry. When there are\nmore lines in one step, all the results are added to\nthe previous carry. The least significant digit of the\nnumber thus obtained acts as one of the result\n\n\fJOURNAL OF COMPUTER SCIENCE AND ENGINEERING, VOLUME 1, ISSUE 1 MAY 2010\n61\n\ndigits and the rest act as the carry for the next step.\nInitially the carry is taken to be zero.\n\nTable. 1 delay comparision\nArchitecture\n\nFig. 1. Multiplication of two decimal numbers by\nUrdhva Tiryakbhyam Sutra.\n\n4. RECONFIGURABLE\nARCHITECTURE\n\nConventional\nFFT\n8.532ns\n12.543ns\n\n2-point\n4-point\n\n2-point FFT\n\n8.251ns\n11.947ns\n\nTable. 2 delay comparision for reconfigurable\narchitecture\nArchitecture\nReconfigurable FFT\nVedic Reconfigurable FFT\n\nThe basic architecture of the reconfigurable FFT is\nto be shown in Fig.2. It can calculate Fourier\ntransform either 2-point or 4-point depending\nupon the select line which is to be given by the\nprogrammer. Its calculate 2-point and 4-point FFT\nwithout changing the hardware of the system. This\nparticular reconfigurable FFT is to be designed by\nusing Vedic adder, Vedic sub tractor, and Vedic\nmultiplier. The delay produced by the Vedic\nreconfigurable FFT is smaller than the delay\nproduced by the conventional reconfigurable FFT.\n\nVedic FFT\n\nDelay\n13.931 ns\n13.325 ns\n\nTable 3. area comparision\nType of the\nArchitecture\nReconfigurable\nFFT\nVedic\nReconfigurable\nFFT\n\nArea used\nNumber\nof\nSlices:\n81\nout of\n1408 5%\n69\nout of\n1408 4%\n\nNumber of 4\ninput LUTs:\n147\nout of\n2816 5%\n127\nout of\n2816 4%\n\nOUT\n\nIN\n\n4-point FFT\nFig.2 Reconfigurable architecture\n\n14\n12\n10\n\n5. RESULT AND DISCUSSION:\nFrom this table it\u2016s clear that how the Vedic\nreconfigurable FFT having less delay and small\narea as compare to the reconfigurable FFT. Fig.5.\nshow the simulation result of Vedic reconfigurable\nFFT. The Vedic reconfigurable FFT is implemented\ninto the Vertex 2 pro, Device-XC2VP2, package FG256, speed:-6.\n\nconventional\n\n8\n\nvedic\n\n6\n4\n2\n0\n2-Point\n\n4-point\n\nreconfigurable\n\nFig3. Graph of delay comparisons\n\n\fJOURNAL OF COMPUTER SCIENCE AND ENGINEERING, VOLUME 1, ISSUE 1 MAY 2010\n62\n\nREFERENCES:\n\nFig4. RTL result of reconfigurable FFT\n\nFig5. Simulation result of reconfigurable FFT\n\nCONCLUSION:\nAn FFT circuit has been described that provides\nthe high performance (throughput), dynamic\nrange, Small area, functionality, and flexibility that\ncan\nbenefit\nfuture\nneeds\nof\nwireless\ncommunications systems. In particular it provides\nfor run-time FFT transform length selection,\npruning to support OFDMA protocols, and nonpower-of-two FFT sizes. This is achieved with a\nsimple, localized, regular circuit which minimizes\noverall system support costs associated with\ndesign, test and maintenance.\n\n[1] F. Rivet, Y. Deval, D. Dallet, JB. Begueret and D.\nBelot, \"65nm CMOS Circuit Design of a Sampled\nAnalog Signal Processor dedicated to RF\nApplications,\" in Proc. IEEE NEWCAS'08,\nMontreal, Quebec, pp. 233\u2013 236, June 2008.\n[2] Yutian Zhao, Erdogan, A.T., Arslan, T., \"A novel\nlow-power reconfigurable FFT processor,\" Int.\nSymp. Circuits and Systems, ISCAS 2005, pp. 41- 44.\n[3]J. G. Nash, \"Computationally efficient systolic\narchitecture for computing the discrete Fourier\ntransform,\" IEEE Transactions on Signal\nProcessing, Volume 53, Issue 12, Dec. 2005, pp.\n4640 \u2013 4651.\n[4] Liu Zhaohui, Han Yueqiu. \"Research of\nImplementing FFT in FPGA,\" Journal of Beijing\nInstitute of Technology, 1999, 19(2). 234-238.\n[5] Anvesh kumar,Ashish Raman,R K Sarin,Arun\nKhosla \"Small Area Reconfigurable FFT Design by\nVedic\nMathematics\n\"\nin\nProc\nIEEE\nICAAE'10,Singapoure, vol 5,pp. 836-838,Feb. 2010.\n[6] Anvesh kumar,Ashish Raman\"Low Power ALU\nDesign by Ancient Mathematics \" in Proc IEEE\nICAAE'10,Singapoure,vol 5,pp. 862-865,Feb. 2010.\nDr Rakesh Kumar Sarin was born on September\n5, 1955 at New Delhi, India. He did his BSc (Engg) ECE,\nfrom NIT\u2013Kurukshetra in 1978, ME (ECE) from IIT-Roorkee\nin 1980 and PhD from A F Ioffe Physico Technical Institute\nSt Petersburg (Russia) in 1987. He has interests in\nsemiconductors, optoelectronics, microelectronics /VLSI,\nmicrowaves and RF ; and has published papers in these\nareas. He had worked at IIT-Kharagpur and at SAMEER in\nIndia ; and at University of Sheffield in the UK. He joined\nElectronics and Communication Engineering (ECE)\nDepartment of NIT-Jalandhar (India) in 1994. He has been\nworking as Head of the ECE Department since November\n1994.\nDr Sarin has been associated with IEEE since 1978-79, first\nas a Student Member and subsequently, as a Member. At\nIIT-Kharagpur He was Executive Member in 1988-89 of\nLocalI IEEE body He is an FIETE, also.\nAshish Raman was born on May 15, 1983 at\nMoradabad, India. He did his BE ,(ECE), from MIT\u2013\nMoradabad in 2003, M.Tech (Microelectronics and VLSI\nDesign) from SGSITS -Indore in 2005 and persuing PhD\nfrom NIT Jalandhar under the guidance of Dr Rakesh\nKumar Sarin . He has interests in semiconductors,\nmicroelectronics /VLSI, RF,Embedded System,DSP ; and\nhas published papers in these areas. He had worked at NIT\n-Durgapure and IMSEC Ghaziabad India. He joined\nElectronics and Communication Engineering (ECE)\nDepartment of NIT-Jalandhar (India) in 2007. He has been\nworking as Assistant Professor the ECE Department. He\nhas been associated with IACSIT since 2010\nAnvesh Kumar was born on April 12, 1987 at\nDelhi, India. He did his BE ,(ECE), from DNP COE\u2013\nShahada in 2008, persunig M.Tech (VLSI Design) from NIT Jalandhar under the guidance of Ashish Raman . He has\ninterests in microelectronics /VLSI, Embedded System,DSP\n\n\fJOURNAL OF COMPUTER SCIENCE AND ENGINEERING, VOLUME 1, ISSUE 1 MAY 2010\n63\n\n,ASIC Design,Digital System Design; and has published\npapers in these areas\n\n\f"}