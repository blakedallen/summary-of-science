{"id": "http://arxiv.org/abs/1012.4062v1", "guidislink": true, "updated": "2010-12-18T06:09:40Z", "updated_parsed": [2010, 12, 18, 6, 9, 40, 5, 352, 0], "published": "2010-12-18T06:09:40Z", "published_parsed": [2010, 12, 18, 6, 9, 40, 5, 352, 0], "title": "Improved Approximation for the Directed Spanner Problem", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1012.4165%2C1012.2877%2C1012.0463%2C1012.0097%2C1012.4859%2C1012.4299%2C1012.4845%2C1012.1607%2C1012.4987%2C1012.3585%2C1012.5139%2C1012.5451%2C1012.5128%2C1012.4150%2C1012.2861%2C1012.4451%2C1012.3209%2C1012.4022%2C1012.4101%2C1012.5138%2C1012.4757%2C1012.2137%2C1012.0210%2C1012.5425%2C1012.3121%2C1012.4240%2C1012.5782%2C1012.0708%2C1012.1115%2C1012.3628%2C1012.4518%2C1012.0469%2C1012.2456%2C1012.3149%2C1012.1035%2C1012.4705%2C1012.2767%2C1012.3309%2C1012.0807%2C1012.6025%2C1012.3420%2C1012.1630%2C1012.4172%2C1012.3949%2C1012.5967%2C1012.1277%2C1012.3370%2C1012.5392%2C1012.4378%2C1012.1480%2C1012.4553%2C1012.2784%2C1012.2885%2C1012.2141%2C1012.3632%2C1012.1799%2C1012.1112%2C1012.5566%2C1012.0513%2C1012.2976%2C1012.4840%2C1012.1388%2C1012.0835%2C1012.2433%2C1012.5997%2C1012.1108%2C1012.5612%2C1012.4336%2C1012.3424%2C1012.4176%2C1012.1038%2C1012.2923%2C1012.1243%2C1012.5302%2C1012.4290%2C1012.3676%2C1012.3282%2C1012.4661%2C1012.0275%2C1012.4062%2C1012.2509%2C1012.0175%2C1012.5581%2C1012.5489%2C1012.0179%2C1012.3837%2C1012.4348%2C1012.4909%2C1012.2426%2C1012.2219%2C1012.2647%2C1012.1292%2C1012.4109%2C1012.1005%2C1012.5115%2C1012.5905%2C1012.3028%2C1012.5150%2C1012.0086%2C1012.5361%2C1012.2284&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Improved Approximation for the Directed Spanner Problem"}, "summary": "We prove that the size of the sparsest directed k-spanner of a graph can be\napproximated in polynomial time to within a factor of $\\tilde{O}(\\sqrt{n})$,\nfor all k >= 3. This improves the $\\tilde{O}(n^{2/3})$-approximation recently\nshown by Dinitz and Krauthgamer.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1012.4165%2C1012.2877%2C1012.0463%2C1012.0097%2C1012.4859%2C1012.4299%2C1012.4845%2C1012.1607%2C1012.4987%2C1012.3585%2C1012.5139%2C1012.5451%2C1012.5128%2C1012.4150%2C1012.2861%2C1012.4451%2C1012.3209%2C1012.4022%2C1012.4101%2C1012.5138%2C1012.4757%2C1012.2137%2C1012.0210%2C1012.5425%2C1012.3121%2C1012.4240%2C1012.5782%2C1012.0708%2C1012.1115%2C1012.3628%2C1012.4518%2C1012.0469%2C1012.2456%2C1012.3149%2C1012.1035%2C1012.4705%2C1012.2767%2C1012.3309%2C1012.0807%2C1012.6025%2C1012.3420%2C1012.1630%2C1012.4172%2C1012.3949%2C1012.5967%2C1012.1277%2C1012.3370%2C1012.5392%2C1012.4378%2C1012.1480%2C1012.4553%2C1012.2784%2C1012.2885%2C1012.2141%2C1012.3632%2C1012.1799%2C1012.1112%2C1012.5566%2C1012.0513%2C1012.2976%2C1012.4840%2C1012.1388%2C1012.0835%2C1012.2433%2C1012.5997%2C1012.1108%2C1012.5612%2C1012.4336%2C1012.3424%2C1012.4176%2C1012.1038%2C1012.2923%2C1012.1243%2C1012.5302%2C1012.4290%2C1012.3676%2C1012.3282%2C1012.4661%2C1012.0275%2C1012.4062%2C1012.2509%2C1012.0175%2C1012.5581%2C1012.5489%2C1012.0179%2C1012.3837%2C1012.4348%2C1012.4909%2C1012.2426%2C1012.2219%2C1012.2647%2C1012.1292%2C1012.4109%2C1012.1005%2C1012.5115%2C1012.5905%2C1012.3028%2C1012.5150%2C1012.0086%2C1012.5361%2C1012.2284&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We prove that the size of the sparsest directed k-spanner of a graph can be\napproximated in polynomial time to within a factor of $\\tilde{O}(\\sqrt{n})$,\nfor all k >= 3. This improves the $\\tilde{O}(n^{2/3})$-approximation recently\nshown by Dinitz and Krauthgamer."}, "authors": ["Arnab Bhattacharyya", "Konstantin Makarychev"], "author_detail": {"name": "Konstantin Makarychev"}, "author": "Konstantin Makarychev", "links": [{"href": "http://arxiv.org/abs/1012.4062v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1012.4062v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.DS", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.DS", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "math.CO", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1012.4062v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1012.4062v1", "arxiv_comment": null, "journal_reference": null, "doi": null, "fulltext": "Improved Approximation for the Directed Spanner Problem\n\narXiv:1012.4062v1 [cs.DS] 18 Dec 2010\n\nArnab Bhattacharyya\u2217\nCSAIL, MIT\nabhatt@mit.edu\n\nKonstantin Makarychev\nIBM T.J. Watson Research Center\nkonstantin@us.ibm.com\n\nAbstract\nWe prove that the size of the sparsest directed\nk-spanner of a graph can be approximated\n\u221a\nin polynomial time to within a factor of \u00d5( n), for all k \u2265 3. This improves the \u00d5(n2/3 )approximation recently shown by Dinitz and Krauthgamer [DK10].\n\n1\n\nIntroduction\n\nA spanner of a graph generally denotes a sparse subgraph which preserves all pairwise distances\nup to a given approximation. More specifically, given a graph G = (V, E) and an integer k \u2265 1,\ndefine the k-spanner of G = (V, E) to be a subgraph H = (V, EH ) such that, for any two vertices\nu, v \u2208 V ,\ndistH (u, v) \u2264 k * distG (u, v)\nIf each edge of graph G has an associated nonnegative length, then distG (u, v) denotes the smallest\nsum of the lengths of edges along a path from u to v. Spanners have numerous applications, such\nas efficient routing [Cow01, CW04, PU89b, RTZ02, TZ01], simulating synchronized protocols in\nunsynchronized networks [PU89a], parallel, distributed and streaming algorithms for approximating\nshortest paths [Coh98, Coh00, Elk01, FKM+ 08], and algorithms for distance oracles [BS06, TZ05].\nFor integer k \u2265 1, the computational problem Directed k-Spanner is the task of finding the\nminimum number of edges in a k-spanner of an input directed graph G. Peleg and Sch\u00e4ffer [PS89]\nand Cai [Cai93] show that Directed k-Spanner is NP-hard for every k \u2265 2. The approximability\nof Directed k-Spanner has also been well-studied. When k = 2, Kortsarz and Peleg [KP94],\nand Elkin and Peleg [EP01], showed a tight O(log n) approximation. For k = 3 and k = 4,\n\u221a\nBerman, Raskhodnikova and Ruan [BRR10] designed an \u00d5( n)-approximation algorithm. Dinitz\n\u221a\nand Krauthgamer [DK10] independently showed \u00d5( n) approximability for k = 3 and gave an\n\u00d5(n2/3 )-approximation algorithm valid for all k \u2265 4, thus obtaining for the first time for this\nproblem an approximation ratio that does not degrade with increasing k. It is known [EP07] that\nfor every \u03b5, \u03b4 \u2208 (0, 1), Directed k-Spanner with 3 \u2264 k = o(n1\u2212\u03b4 ) is inapproximable in polynomial\n1\u2212\u03b5\ntime to within a factor of 2log n , unless NP \u2286 DTIME(npolylog n ).\nOur main result is the following.\nTheorem 1 For any integer k \u2265 3, there is a polynomial time algorithm that, in expectation, finds\n\u221a\nan \u00d5( n)-approximation for the Directed k-Spanner problem.\n\u2217\n\nSupported in part by NSF Awards 0514771, 0728645, and 0732334. Part of the work was completed during a\nvisit to the IBM T.J. Watson Research Center.\n\n1\n\n\f\u221a\nThis matches the \u00d5 n) bound conjectured by Dinitz and Krauthgamer. Our algorithm, similar to\nthat of [DK10] and the earlier [BGJ+ 09], operates by letting the edges of the directed k-spanner\nbe the union of two subsets of edges of the original graph, the first obtained by rounding the\nsolution to a linear programming (LP) relaxation of the problem and the second obtained by edges\nof shortest-path trees growing from randomly selected vertices. Our main technical innovation is\nin designing and analyzing a new rounding algorithm that selects each edge of the original graph\nindependently with probability proportional to its LP value.\n\n2\n2.1\n\nProof of Main Result\nThe LP Relaxation\n\nThe LP relaxation that we use for the Directed k-Spanner problem is exactly the same as the\nflow-based LP introduced by Dinitz and Krauthgamer [DK10]. Let us reproduce it here. Suppose\nwe are given a directed graph G = (V, E) with a length function l : E \u2192 R\u22650 . For every edge\n(u, v) \u2208 E, define Pu,v to be the set of all directed paths p in G from u to v such that the length of p\nis at most k times the length of the shortest path in G from u to v. Thus, for every edge (u, v) \u2208 E,\nthe k-spanner of G must contain at least one path from Pu,v . The LP will have variables xe for\neach edge eS\u2208 E, representing whether or not e is included in the spanner, and variables fp for each\npath P in (u,v)\u2208E Pu,v , representing the flow along the path P . The LP is then as follows:\nmin\n\nX\n\nxe\n\ne\u2208E\n\nsubject to:\nX\n\nP \u2208Pu,v :e\u2208P\n\nX\n\nP \u2208Pu,v\n\nf p \u2264 xe\n\n\u2200(u, v) \u2208 E, \u2200e \u2208 E\n\nfp \u2265 1\n\nxe \u2265 0\n\nfp \u2265 0\n\n\u2200(u, v) \u2208 E\n\u2200e \u2208 E\n\n\u2200(u, v) \u2208 E, \u2200P \u2208 Pu,v\n\nNotice that the number of variables can be exponential for large k, and hence, a priori, it might\nnot be clear that the LP can be solved optimally in polynomial time. However, by a separation\noracle argument, one can find an approximate solution in polynomial time for any k.\nTheorem 2 (Theorem 2.1 in Dinitz and Krauthgamer [DK10]) There is a polynomial time\n(1 + \u03b5)-approximation algorithm for the above LP for any constant \u03b5 > 0.\n\n2.2\n\nConstructing the k-spanner\n\nGiven a fractional solution (x, f ) to the above LP, we now describe how to construct a k-spanner\nH = (V, EH ) for the input graph G = (V, E). The edge set EH \u2286 E is constructed via the following\nsimple randomized algorithm (with a parameter \u03b1):\n\n2\n\n\f1. Let EH = \u2205.\n\u221a\n2. For each edge e \u2208 E independently, add e to EH with probability min(\u03b1xe n, 1).\n3. Let S be a set of vertices, each chosen independently at random from V with proba\u221a\nbility min(\u03b1/ n, 1). For each v \u2208 S, add the edges of the outward shortest-path tree\nand the inward shortest-path tree rooted at v to EH .\nWe first give a proof for a special case when all edges have unit lengths (i.e., l(e) = 1 for all\ne \u2208 E) and k is upper-bounded by a constant. Then, we give an alternative proof that works for\ngeneral edge lengths and arbitrary k.\n\n2.3\n\nUnit length edges\n\nTheorem 3 For graphs with\u221aunit edge lengths,\n\u221a the approximation ratio of the randomized algorithm\ndescribed above (with \u03b1 = 10 k log n) is 30 nk log n.\n\u221a\nProof We first show that the expected cost of the solution is at most 30 nk log n times the\noptimal cost. Then, we prove that the obtained solution is feasible.\u221a\nThe expected number of edges sampled at the second step is 10 nk log n LP , where LP is the\ncost of the LP. The cost of every shortest-path tree is at most the cost of the optimal solution, since\nthe optimal solution must contain at least (n \u2212 1) edges (here we assume that G is connected, since\nwe can handle different connected components\nseparately). Thus, the expected number of edges\n\u221a\nadded at\u221athe third step is at most 20 nk log n OP T . The total expected cost of the solution is at\nmost 30 nk log n OP T .\nWe now prove that the solution returned by the algorithm is feasible with probability 1 \u2212 n\u22123 .\nIt suffices to show that with probability at least 1 \u2212 n\u22123 , for every adjacent vertices u and v\n((u, v) \u2208 E) there exists a path in H of length at most k connecting u and v. Fix an arbitrary\n(u, v) \u2208 E.\nLet as before Pu,v be the set of all paths of length at most k going from u to v, and let\n[\np\nVu,v =\np\u2208Pu,v\n\np\nbe the set of vertices covered by these paths. We consider two cases. If |Vu,v | \u2265 n/k, then the set\nS sampled at the third step of the algorithm contains at least one vertex from Vu,v with probability\n\u221a\n\u221a\n\u0010\n\u0010\n10 log n \u0011 n/k\n10 k log n \u0011|Vu,v |\n\u221a\n\u22651\u2212 1\u2212 p\n\u2265 1 \u2212 e\u221210 log n = 1 \u2212 n\u221210 .\n1\u2212 1\u2212\nn\nn/k\nIf S \u2229 Vu,v 6= \u2205, we pick an s \u2208 S \u2229 Vu,v . Since, s \u2208 Vu,v , distG (u, s) + distG (s, v) \u2264 k. Hence, the\nunion of the inward and outward shortest-path trees rooted at s (that the algorithm adds to EH\nat the third step) contains a path going\np from u to v of length at most k.\nWe now consider the case |Vu,v | \u2264 n/k. Perform a mental experiment. Make k copies of each\nvertex w \u2208 Vu,v \\ {u}: (w, 1), (w, 2), . . . , (w, k); and make a copy of vertex u: (u, 0). For every path\np \u2208 Pu,v define a new path p\u0303 from u to v as\np\u0303i = (pi , i)\n3\n\n\fwhere p\u0303i and pi are the i-th vertices of p\u0303 and p respectively. We assign flow fp to p\u0303. The total\nflow going from (u, 0) to (v, k \u2032 ) (for k\u2032 \u2264 k) in the new graph is at least 1. We now start removing\ne = Vu,v \u00d7 {1, 2, . . . , k} \u222a {(u, 0)} (i.e., V\ne is the\n\"light\" vertices from the new graph. Initially, let V\n\u221a\ne \u2264 |V| \u00d7 k \u2264 nk. At every step\nset of all \"copies\" (w, i)) and Pe = {p\u0303 : p \u2208 Pu,v }. Note, that |V|\n\u221a\ne w 6= v the flow through which is less than 1/ 2nk (we call this vertex\nwe find a vertex (w, i) \u2208 V,\ne w 6= v such that\na \"light\" vertex) i.e., a vertex (w, i) \u2208 V,\nX\n1\n.\nfp \u2264 \u221a\n2nk\ne\np\u0303\u2208P:w\u2208p\n\ne and all paths p\u0303 \u220b (w, i) from P.\ne We stop when there are no more\nWe then remove (w, i) from V\nsuch vertices (w, i) left. Note, that after removing each vertex w and all paths going through it,\nwe recompute the flow going\nthrough the remaining vertices.\n\u221a\ne (simply because before removing \"light\" vertices the\nWe remove at most\u221a nk vertices from \u221a\nV\n\u221a\n\u221a\ne was at most nk), and at most nk/ 2nk = 2/2 units of flow. Thus, the remaining\nsize of V\n\u221a\ne\nweight of paths p\u0303 \u2208 Pe is at least 1 \u2212 2/2 > 1/4; and thus (u, 0) \u2208 V.\ne Observe, that if w 6= v,\nNow, pick an arbitrary vertex (w, i) \u2208 V.\nX\nX\nX\n1\n.\nfp \u2265\nfp \u2265 \u221a\nx(w,w\u2032 ) \u2265\n2nk\n\u2032\n\u2032\ne\ne\ne\n(w,w )\u2208E : (w ,i+1)\u2208V\n\np : pi =w, pi+1 \u2208V, p\u2208Pu,v\n\np\u0303\u2208P:w\u2208p\n\nHence, the set EH contains at least one edge (w, w\u2032 ) such that (w\u2032 , i + 1) \u2208 Ve with probability\n\u221a\nY\nY\n\u221a\n1\u2212\n(1 \u2212 10x(w,w\u2032 ) nk log n) \u2265 1 \u2212\ne\u221210x(w,w\u2032 ) nk log n\ne\n(w,w \u2032 ) : (w \u2032 ,i+1)\u2208V\n\ne\n(w,w \u2032 ) : (w \u2032 ,i+1)\u2208V\n\u221a\n\u22125 2 log n\n\n\u2265 1\u2212e\n\n> 1 \u2212 n\u22127 ,\n\n\u221a\ne x(w,w\u2032 ) \u2264 (10 nk log n)\u22121 ; and with probability 1, otherwise. By the union\nif for all (w\u2032 , i + 1) \u2208 V,\nbound, with probability at least 1 \u2212 n\u22125 for all (w, i) \u2208 Ve there is such (w, w\u2032 ) in EH . Thus, there\nexists a path w1 = u, w2 , . . . , wk\u2032 = v of length at most k such that (wi , i) \u2208 Ve and (wi , wi+1 ) \u2208 EH\nfor every i. Hence, u and v are connected with a path of length at most k with probability at least\n1 \u2212 n\u22125 .\nWe showed that for every (u, v) \u2208 E, with probability 1\u2212n\u22125 , there exists a path in H = (V, EH )\nof length at most k connecting u and v; and therefore, with probability at least 1 \u2212 1/n\u22123 , EH is\na k-spanner.\n\n2.4\n\nGeneral case\n\nTheorem 4 The approximation ratio of the randomized algorithm described above (with \u03b1 =\n\u221a\n5 log n) is 15 n log n.\nRemark The first several steps in the proof are the same as in the proof of Theorem 3. However,\n\u221a\nthe proof of the main case (|Vu,v | \u2264 n) is very different from the previous proof.\n\u221a\nProof The expected number of edges sampled at the second step is 5 n log n LP , where LP is\nthe cost of the LP. The cost of every shortest-path tree is at most the cost of the optimal solution,\n4\n\n\fsince the optimal solution must contain at least (n \u2212 1) edges (here we assume that G is connected,\nsince we can handle different connected components separately). In expectation, we add the edges\n\u221a\n\u221a\nof at most 2\u03b1 n = 10 n log n shortest-path trees, and so, the expected number of edges added\n\u221a\nat the third step is at most 10 n log n OP T . The total expected cost of the solution is at most\n\u221a\n15 n log n OP T .\nWe now prove that the solution returned by the algorithm is feasible with probability at least\n1 \u2212 n\u22123 . Consider two arbitrary adjacent vertices u and v ((u, v) \u2208 E). We show that with\nprobability 1 \u2212 n\u22125 , there exists a path in H of length at most\nS kl(u, v) connecting u and\u221av.\nAs in Theorem 3 we consider two cases: the set Vu,v = p\u2208Pu,v p is large (|Vu,v | \u2265 n|) and\n\u221a\n\u221a\nsmall (|Vu,v | \u2264 n|). For the case |Vu,v | \u2265 n, we use exactly the same proof as before to show\nthat u and v are connected with a short path which is contained in the union of two shortest-path\ntrees (see Theorem 3).\n\u221a\nSo, consider the second case, |Vu,v | \u2264 n. Let G\u2032 = G[Vu,v ] be the graph induced on the vertex\nset Vu,v . We denote the set of edges of G\u2032 by E \u2032 = {(w1 , w2 ) \u2208 G : w1 , w2 \u2208 Vu,v }, H \u2032 = H \u2229 G\u2032 and\n\u2032 = E \u2229 E \u2032 . We show that the set E satisfies the dual LP constraints with high probability.\nEH\nH\nH\nConsider an arborescence T \u2282 G\u2032 rooted at u. Let dT be the shortest path metric on T . Define\na function LT : Vu,v \u2192 R+ ,\nLT (w) = dT (u, w),\nand let\nST = {(w1 , w2 ) \u2208 E \u2032 : LT (w2 ) > LT (w1 ) + l(w1 , w2 )}.\nIn Section 2.5, we prove the following claims.\nClaim 5 A subgraph H \u2032 \u2282 G\u2032 contains a directed path of length at most K connecting u and v, if\nand only if for every arborescence T \u2282 G\u2032 rooted at u with dT (u, v) > K,\n\u2032\nEH\n\u2229 ST 6= \u2205.\n\nRemark This claim is an analog of the special case of min-cut/max-flow theorem: A subgraph\nH \u2032 contains a directed path connecting u and v, if and only if every cut separating u and v in G\u2032\n\u2032 .\ncontains an edge from EH\nClaim 6 For every arborescence T \u2282 G\u2032 rooted at u with dT (u, v) > k * l(u, v),\nX\nxe \u2265 1,\ne\u2208ST\n\nwhere {xe } is the LP solution.\nWe show that for every arborescence T \u2282 G\u2032 rooted at u with dT (u, v) > k * l(u, v),\n\u2032\nEH\n\u2229 ST 6= \u2205\n\nwith high probability; and, thus, by Claim 5 there exists a path in EH of length at most k * l(u, v)\nconnecting u and v. Let Xe be the indicator random variable defined as follows: Xe = 1 if e \u2208 EH ;\n\u221a\nXe = 0 otherwise. If for some e \u2208 ST , xe \u2265 1/(\u03b1 n), then Xe = 1 with probability 1. Otherwise,\n\u221a\nfor every e \u2208 ST , Pr(Xe = 1) = \u03b1 nxe .\n5\n\n\fEstimate the probability that for all e \u2208 ST , Xi = 0,\nY\nY\nPr(Xe = 0 for all e \u2208 ST ) =\n(1 \u2212 Pr(Xe = 1)) \u2264\ne\u2212 Pr(Xe =1)\ne\u2208ST\nP\n\u2212 e\u2208S Pr(Xe =1)\n\n= e\n\nT\n\n\u0010\n\nP\n\u221a\n\u2212\u03b1 n\ne\u2208S xe\n\n= e\nBy Claim 6,\n\nX\n\ne\u2208ST\n\nT\n\n\u2212\n\n\u0011= e\n\ne\u2208ST\nP\ne\u2208ST\n\n\u221a\n\u03b1xe n\n\n.\n\nxe \u2265 1,\n\n\u221a\n\n\u221a\nn.\n\nthus, Pr(Xe = 0 for all e \u2208 ST ) \u2264 e\u2212\u03b1 n . Hence, Pr(\u222ae\u2208ST {Xe = 1}) \u2265 1 \u2212 e\u2212\u03b1\nfor a fixed arborescence T ,\n\u221a\n\u2032\nPr(ST \u2229 EH\n) \u2265 1 \u2212 e\u2212\u03b1 n .\n\nIn other words,\n\nThe total number of arborescences can be bounded by\n\u221a\n\u221a \u221an\n|Vu,v ||Vu,v | \u2264 n = e1/2 n log n ,\nsince for every vertex w \u2208 Vu,v there at most |Vu,v | possible ways to choose a parent node w\u2032 \u2208 Vu,v .\nHence, by the union bound with probability at least\n\u221a\n\n1 \u2212 e\u2212\u03b1\n\nn 1/2\n\ne\n\n\u221a\nn log n\n\n\u2265 1 \u2212 e\u2212\n\n\u221a\n\nn log n\n\nthere exists a path of length at most k * l(u, v) between u and v in H.\n\n2.5\n\nProofs of Claim 5 and Claim 6\n\nClaim 5 A subgraph H \u2032 \u2282 G\u2032 contains a directed path of length at most K connecting u and v, if\nand only if for every arborescence T \u2282 G\u2032 rooted at u with dT (u, v) > K,\n\u2032\nEH\n\u2229 ST 6= \u2205.\n\nProof\nI. Suppose that there is a path p of length at most K connecting u and v in H \u2032 . Consider an\narbitrary arborescence T \u2282 G\u2032 rooted at u with dT (u, v) > K. Write,\nlength(p) \u2261\n\n|p|\u22121\n\nX\ni=1\n\nl(pi , pi+1 ) \u2264 K.\n\nThen,\n|p|\u22121\n\nX\ni=1\n\n(LT (pi+1 ) \u2212 LT (pi )) = LT (p|p| ) \u2212 LT (p1 ) = LT (v) \u2212 LT (u) > K.\n\nHence, for some i,\nl(pi , pi+1 ) < LT (pi+1 ) \u2212 LT (pi ),\n\n\u2032 , S \u2229 E \u2032 6= \u2205.\nand therefore, (pi , pi+1 ) \u2208 ST (by the definition of ST ). Since, (pi , pi+1 ) \u2208 EH\nT\nH\n\n6\n\n\fII. Now, assume that for every arborescence T \u2282 G\u2032 rooted at u with dT (u, v) > K,\n\u2032\nEH\n\u2229 ST 6= \u2205.\n\u2032 rooted at u. We claim that S \u2229 E \u2032 = \u2205 and\nLet T be the directed shortest path tree in EH\nT\nH\n\u2032 ,\nthus dT (u, v) \u2264 K. Indeed, for all (w1 , w2 ) \u2208 EH\n\nLT (w2 ) \u2261 dT (u, w2 ) \u2264 dT (u, w1 ) + l(w1 , w2 ) \u2261 LT (w1 ) + l(w1 , w2 ),\nhere we have used that T is the shortest path tree and thus dT (u, w2 ) \u2264 dT (u, w1 ) + l(w1 , w2 ).\nTherefore, (w1 , w2 ) \u2208\n/ ST .\n\nClaim 6 For every arborescence T \u2282 G\u2032 rooted at u with dT (u, v) > k * l(u, v),\nX\nxe \u2265 1,\ne\u2208ST\n\nwhere {xe } is the LP solution.\nProof\n\nSince {xe } is part of an LP solution:\nX\nX\nxe \u2265\n\nX\n\nfp\n\ne\u2208ST p\u2208Pu,v :e\u2208p\n\ne\u2208ST\n\n\u2265\n\nX\n\nfp\n\np\u2208Pu,v\n\n\u22651\nThe first and third inequalities are from the definition of the LP. The second inequality follows\nbecause, by Claim 5, every path p \u2208 Pu,v contains at least one edge in ST and because each fp is\nnonnegative.\n\n3\n\nConclusion\n\n\u221a\nWe proved above an \u00d5( n)-approximation for Directed k-Spanner. This settles the conjecture\nof Dinitz and Krauthgamer [DK10]. Note that Elkin and Peleg [EP07] have shown that the approximation ratio for this problem cannnot be expected to be O(n1/k ) or even O(n1/ log k ), in contrast\nto the situation for undirected graphs.\nOur algorithm obviously applies to special cases of the Directed k-Spanner problem, such\nas the k-Transitive Closure Spanner problem [BGJ+ 09]. It also straightforwardly extends to\nthe Client-Server k-Spanner problem and the k-Diameter Spanning Subgraph problem.\nSee [EP05] for definitions and motivation; we omit details here. Finally, consider the General\nDirected k-Spanner problem, defined in [EP07]. Here, each edge of the input directed graph has\na nonnegative weight as well as a length, and the objective is to minimize the sum of the weights\n\u221a\nof the edges in the k-spanner. We note that our \u00d5( n) approximation ratio still applies to this\nproblem, as long as the weight of each edge is lower-bounded by a positive constant.\n7\n\n\fReferences\n[BGJ+ 09] Arnab Bhattacharyya, Elena Grigorescu, Kyomin Jung, Sofya Raskhodnikova, and\nDavid P. Woodruff. Transitive-closure spanners. In Proceedings of the Twentieth Annual\nACM-SIAM Symposium on Discrete Algorithms (SODA), pages 932\u2013941, 2009.\n[BRR10]\n\nPiotr Berman, Sofya Raskhodnikova, and Ge Ruan. Finding sparser directed spanners. In Proceedings of the 30th Annual Conference on Foundations of Software Technology and Theoretical Computer Science (to appear), 2010. Preprint available at\nhttp://www.cse.psu.edu/~sofya/brr-spanners-lipics.pdf.\n\n[BS06]\n\nSurender Baswana and Sandeep Sen. Approximate distance oracles for unweighted\ngraphs in expected \u00d5(n2 ) time. ACM Transactions on Algorithms, 2(4):557\u2013577, 2006.\n\n[Cai93]\n\nLeizhen Cai. NP-completeness of minimum spanner problems. Discrete Applied Math,\n9:81\u2013100, 1993.\n\n[Coh98]\n\nEdith Cohen. Fast algorithms for constructing t-spanners and paths with stretch t.\nSIAM J. Comput., 28(1):210\u2013236, 1998.\n\n[Coh00]\n\nEdith Cohen. Polylog-time and near-linear work approximation scheme for undirected\nshortest paths. JACM, 47(1):132\u2013166, 2000.\n\n[Cow01]\n\nLenore Cowen. Compact routing with minimum stretch. J. Algorithms, 38(1):170\u2013183,\n2001.\n\n[CW04]\n\nLenore Cowen and Christopher G. Wagner. Compact roundtrip routing in directed\nnetworks. J. Algorithms, 50(1):79\u201395, 2004.\n\n[DK10]\n\nMichael Dinitz and Robert Krauthgamer. Directed spanners via flow-based linear programs. Preprint available at http://arxiv.org/abs/1011.3701, November 2010.\n\n[Elk01]\n\nMichael Elkin. Computing almost shortest paths. In PODC, pages 53\u201362, 2001.\n\n[EP01]\n\nMichael Elkin and David Peleg. The client-server 2-spanner problem with applications\nto network design. In SIROCCO, pages 117\u2013132, 2001.\n\n[EP05]\n\nMichael Elkin and David Peleg. Approximating k-spanner problems for k \u2265 2. Theor.\nComput. Sci., 337(1-3):249\u2013277, 2005.\n\n[EP07]\n\nMichael Elkin and David Peleg. The hardness of approximating spanner problems.\nTheory Comput. Syst., 41(4):691\u2013729, 2007.\n\n[FKM+ 08] Joan Feigenbaum, Sampath Kannan, Andrew McGregor, Siddharth Suri, and Jian\nZhang. Graph distances in the data-stream model. SIAM J. Comput., 38(5):1709\u2013\n1727, 2008.\n[KP94]\n\nGuy Kortsarz and David Peleg. Generating sparse 2-spanners. J. Algorithms, 17:222\u2013\n236, 1994.\n\n[PS89]\n\nDavid Peleg and Alejandro A. Sch\u00e4ffer. Graph spanners. Journal of Graph Theory,\n13(1):99\u2013116, 1989.\n8\n\n\f[PU89a]\n\nDavid Peleg and Jeffrey D. Ullman. An optimal synchronizer for the hypercube. SIAM\nJ. Comput., 18(4):740\u2013747, 1989.\n\n[PU89b]\n\nDavid Peleg and Eli Upfal. A trade-off between space and efficiency for routing tables.\nJACM, 36(3):510\u2013530, 1989.\n\n[RTZ02]\n\nLiam Roditty, Mikkel Thorup, and Uri Zwick. Roundtrip spanners and roundtrip routing in directed graphs. In SODA, pages 844\u2013851, 2002.\n\n[TZ01]\n\nMikkel Thorup and Uri Zwick. Compact routing schemes. In ACM Symposium on\nParallel Algorithms and Architectures, pages 1\u201310, 2001.\n\n[TZ05]\n\nMikkel Thorup and Uri Zwick. Approximate distance oracles. JACM, 52(1):1\u201324, 2005.\n\n9\n\n\f"}