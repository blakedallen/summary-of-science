{"id": "http://arxiv.org/abs/math/0412375v1", "guidislink": true, "updated": "2004-12-19T04:00:30Z", "updated_parsed": [2004, 12, 19, 4, 0, 30, 6, 354, 0], "published": "2004-12-19T04:00:30Z", "published_parsed": [2004, 12, 19, 4, 0, 30, 6, 354, 0], "title": "Longest common subsequences and the Bernoulli matching model: numerical\n  work and analyses of the r-reach simplification", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=math%2F0412199%2Cmath%2F0412319%2Cmath%2F0412309%2Cmath%2F0412378%2Cmath%2F0412542%2Cmath%2F0412258%2Cmath%2F0412315%2Cmath%2F0412032%2Cmath%2F0412372%2Cmath%2F0412261%2Cmath%2F0412422%2Cmath%2F0412266%2Cmath%2F0412534%2Cmath%2F0412518%2Cmath%2F0412087%2Cmath%2F0412504%2Cmath%2F0412434%2Cmath%2F0412269%2Cmath%2F0412121%2Cmath%2F0412201%2Cmath%2F0412374%2Cmath%2F0412103%2Cmath%2F0412100%2Cmath%2F0412489%2Cmath%2F0412344%2Cmath%2F0412424%2Cmath%2F0412329%2Cmath%2F0412042%2Cmath%2F0412509%2Cmath%2F0412272%2Cmath%2F0412014%2Cmath%2F0412069%2Cmath%2F0412519%2Cmath%2F0412303%2Cmath%2F0412419%2Cmath%2F0412385%2Cmath%2F0412051%2Cmath%2F0412072%2Cmath%2F0412074%2Cmath%2F0412439%2Cmath%2F0412140%2Cmath%2F0412196%2Cmath%2F0412520%2Cmath%2F0412471%2Cmath%2F0412431%2Cmath%2F0412189%2Cmath%2F0412007%2Cmath%2F0412560%2Cmath%2F0412335%2Cmath%2F0412563%2Cmath%2F0412540%2Cmath%2F0412310%2Cmath%2F0412247%2Cmath%2F0412059%2Cmath%2F0412494%2Cmath%2F0412510%2Cmath%2F0412511%2Cmath%2F0412206%2Cmath%2F0412464%2Cmath%2F0412408%2Cmath%2F0412396%2Cmath%2F0412397%2Cmath%2F0412550%2Cmath%2F0412412%2Cmath%2F0412061%2Cmath%2F0412117%2Cmath%2F0412516%2Cmath%2F0412039%2Cmath%2F0412055%2Cmath%2F0412104%2Cmath%2F0412078%2Cmath%2F0412311%2Cmath%2F0412180%2Cmath%2F0412172%2Cmath%2F0412375%2Cmath%2F0412498%2Cmath%2F0412208%2Cmath%2F0412298%2Cmath%2F0412500%2Cmath%2F0412130%2Cmath%2F0412118%2Cmath%2F0412445%2Cmath%2F0412506%2Cmath%2F0412214%2Cmath%2F0412415%2Cmath%2F0412019%2Cmath%2F0412024%2Cmath%2F0412458%2Cmath%2F0412153%2Cmath%2F0412122%2Cmath%2F0412248%2Cmath%2F0412391%2Cmath%2F0412166%2Cmath%2F0412135%2Cmath%2F0412514%2Cmath%2F0412336%2Cmath%2F0412170%2Cmath%2F0412354%2Cmath%2F0412381%2Cmath%2F0412455%2Cmath%2F0412274&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Longest common subsequences and the Bernoulli matching model: numerical\n  work and analyses of the r-reach simplification"}, "summary": "The expected length of longest common subsequences is a problem that has been\nin the literature for at least twenty five years. Determining the limiting\nconstants \\gamma_k appears to be quite difficult, and the current best bounds\nleave much room for improvement. Boutet de Monvel explores an independent\nversion of the problem he calls the Bernoulli Matching model. He explores this\nproblem and its relation to the longest common subsequence problem. This paper\ncontinues this pursuit by focusing on a simplification we term r-reach. For the\nstring model, L_r(u,v) is the longest common subsequence of u and v given that\neach matched pair of letters is no more than r letters apart.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=math%2F0412199%2Cmath%2F0412319%2Cmath%2F0412309%2Cmath%2F0412378%2Cmath%2F0412542%2Cmath%2F0412258%2Cmath%2F0412315%2Cmath%2F0412032%2Cmath%2F0412372%2Cmath%2F0412261%2Cmath%2F0412422%2Cmath%2F0412266%2Cmath%2F0412534%2Cmath%2F0412518%2Cmath%2F0412087%2Cmath%2F0412504%2Cmath%2F0412434%2Cmath%2F0412269%2Cmath%2F0412121%2Cmath%2F0412201%2Cmath%2F0412374%2Cmath%2F0412103%2Cmath%2F0412100%2Cmath%2F0412489%2Cmath%2F0412344%2Cmath%2F0412424%2Cmath%2F0412329%2Cmath%2F0412042%2Cmath%2F0412509%2Cmath%2F0412272%2Cmath%2F0412014%2Cmath%2F0412069%2Cmath%2F0412519%2Cmath%2F0412303%2Cmath%2F0412419%2Cmath%2F0412385%2Cmath%2F0412051%2Cmath%2F0412072%2Cmath%2F0412074%2Cmath%2F0412439%2Cmath%2F0412140%2Cmath%2F0412196%2Cmath%2F0412520%2Cmath%2F0412471%2Cmath%2F0412431%2Cmath%2F0412189%2Cmath%2F0412007%2Cmath%2F0412560%2Cmath%2F0412335%2Cmath%2F0412563%2Cmath%2F0412540%2Cmath%2F0412310%2Cmath%2F0412247%2Cmath%2F0412059%2Cmath%2F0412494%2Cmath%2F0412510%2Cmath%2F0412511%2Cmath%2F0412206%2Cmath%2F0412464%2Cmath%2F0412408%2Cmath%2F0412396%2Cmath%2F0412397%2Cmath%2F0412550%2Cmath%2F0412412%2Cmath%2F0412061%2Cmath%2F0412117%2Cmath%2F0412516%2Cmath%2F0412039%2Cmath%2F0412055%2Cmath%2F0412104%2Cmath%2F0412078%2Cmath%2F0412311%2Cmath%2F0412180%2Cmath%2F0412172%2Cmath%2F0412375%2Cmath%2F0412498%2Cmath%2F0412208%2Cmath%2F0412298%2Cmath%2F0412500%2Cmath%2F0412130%2Cmath%2F0412118%2Cmath%2F0412445%2Cmath%2F0412506%2Cmath%2F0412214%2Cmath%2F0412415%2Cmath%2F0412019%2Cmath%2F0412024%2Cmath%2F0412458%2Cmath%2F0412153%2Cmath%2F0412122%2Cmath%2F0412248%2Cmath%2F0412391%2Cmath%2F0412166%2Cmath%2F0412135%2Cmath%2F0412514%2Cmath%2F0412336%2Cmath%2F0412170%2Cmath%2F0412354%2Cmath%2F0412381%2Cmath%2F0412455%2Cmath%2F0412274&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The expected length of longest common subsequences is a problem that has been\nin the literature for at least twenty five years. Determining the limiting\nconstants \\gamma_k appears to be quite difficult, and the current best bounds\nleave much room for improvement. Boutet de Monvel explores an independent\nversion of the problem he calls the Bernoulli Matching model. He explores this\nproblem and its relation to the longest common subsequence problem. This paper\ncontinues this pursuit by focusing on a simplification we term r-reach. For the\nstring model, L_r(u,v) is the longest common subsequence of u and v given that\neach matched pair of letters is no more than r letters apart."}, "authors": ["Jonah Blasiak"], "author_detail": {"name": "Jonah Blasiak"}, "author": "Jonah Blasiak", "arxiv_comment": "20 pages", "links": [{"href": "http://arxiv.org/abs/math/0412375v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/math/0412375v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "math.PR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "math.PR", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "math.CO", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "05A16 (Primary), 60C05 (Secondary)", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/math/0412375v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/math/0412375v1", "journal_reference": null, "doi": null, "fulltext": "arXiv:math/0412375v1 [math.PR] 19 Dec 2004\n\nLongest common subsequences and the Bernoulli\nmatching model: numerical work and analyses of\nthe r-reach simplification\nJonah Blasiak\nOctober 20, 2018\nAbstract\nThe expected length of longest common subsequences is a problem that\nhas been in the literature for at least twenty five years. Determining the\nlimiting constants \u03b3k appears to be quite difficult, and the current best\nbounds leave much room for improvement. Boutet de Monvel explores an\nindependent version of the problem he calls the Bernoulli Matching model.\nHe explores this problem and its relation to the longest common subsequence\nproblem. This paper continues this pursuit by focusing on a simplification\nwe term r-reach. For the string model, Lr (u, v) is the longest common\nsubsequence of u and v given that each matched pair of letters is no more\nthan r letters apart.\n\n1\n\nIntroduction\n\nIn our technology oriented society fast processing of digital data is becoming\nincreasingly important. String comparison is a kind of data processing that has\napplications in a wide range of fields including molecular biology, human speech\nrecognition, computer spelling correction, and gas chromatography [4]. A robust,\nextensively studied, method for comparing two strings, u and v say, is to compute\nthe length of one of their longest common subsequences (denote this length by\nL(u, v)). A subsequence of a string u is a string obtained by deleting some elements\nof u. For example, netra is a subsequence of cinematography. A longest common\nsubsequence of two strings u and v is a subsequence of u and v of maximum\nlength. For example, netra is an longest common subsequence of cinematography\nand neurotransmitter because there is no longer string that is a subsequence of\nboth strings.\n\n1.1\n\nThe Random String model\n\nThe following notation will be useful for working with strings:\n\n1\n\n\fk\n2\n3\n4\n5\n6\n7\n8\n\nlower\nbound\n\n.77391\n.63376\n.55282\n.50952\n.47169\n.44502\n.42237\n\napproximation\n\n.8123\n.7176\n.6544\n.6075\n.5707\n.5405\n.5152\n\nupper\nbound\n\n.83763\n.76581\n.70824\n.66443\n.62932\n.60019\n.57541\n\nk\n9\n10\n11\n12\n13\n14\n15\n\nupper\nbound\n\n.40321\n.38656\n.37196\n.35899\n.34737\n.33687\n.32732\n\napproximation\n\n.4936\n.4747\n.4580\n.4432\n.4297\n.4176\n.4066\n\nlower\nbound\n\n.55394\n.53486\n.51785\n.50260\n.48880\n.47620\n.46462\n\nFigure 1: Current best bounds and Monte Carlo approximations of \u03b3k . Lower\nbounds are from [3] and [1]. Upper bounds are from [3]. Approximations are\nfrom [2] and were computed using Monte Carlo simulations extrapolated to large\nCk\n\u221a Ak\nn using ELn\nn = \u03b3k + n ln n + n ln n , for real numbers Ak , Ck that don't depend\non n.\nDefinition. Define an alphabet \u03a3 of size k to be {0, 1, . . . , k \u2212 1}. Let \u03a3n be the\nset of all sequences of length n on alphabet \u03a3.\nDefinition. If u = u1 u2 . . . un and ui \u2208 \u03a3, define u(i . . . j) to be the substring\nui ui+1 . . . uj.\nA very interesting and difficult problem is to compute the average length of\nlongest common subsequences over all possible pairs of strings. Or more precisely,\ndefine\n1 X\nEL(k)\nL(u, v)\nn = 2n\nk\nn\nu,v\u2208\u03a3\n\nAn open problem is to compute the following limit:\nEL(k)\nn\nn\u2192\u221e\nn\n\n\u03b3k = lim\n\nKlarner and Rivest established that ELn is superadditive\u2013ELn+m \u2265 ELn +ELm \u2013\nand from this it can be shown that the above limit exists (see e.g., [1]).\nThe current best lower and upper bounds as well as Monte Carlo approximations of \u03b3k are shown in Figure (1).\nLongest common subsequence computations can also be formulated as a dynamic programming algorithm or as a directed time passage percolation model\n(see e.g. [3],[2]). In the directed time passage percolation model, we work with the\ntwo dimensional lattice in the first quadrant: vertices exist at the points (i, j) for\ni, j \u2208 {0, 1, 2, ...}. On each vertex (i, j) Di,j will is an integer, and Di,0 and D0,i\nare initialized to 0. Given two strings u and v, L(u, v) is computed by preserving\nDi,j = L(u(1 . . . i), v(1 . . . j)). The necessary recurrence is\n\u001a\nDi\u22121,j\u22121 + 1\nif \u03b4u(i),v(j) = 1\nDi,j =\nmax{Di,j\u22121 , Di\u22121,j } if \u03b4u(i),v(j) = 0\nWhere \u03b4u(i),v(j) is the Kronecker delta (the motivations for this notation will\nbecome clear in the next section). Another way of looking at this recurrence is\n2\n\n\fto make bonds between adjacent vertices in the lattice directed in the positive x\nand y directions. A diagonal bond from (i \u2212 1, j \u2212 1) to (i, j) is added if and only\nif \u03b4u(i),v(j) = 1. If the horizontal and vertical bonds are given weight 0, and the\ndiagonal bonds are given weight 1, L(u, v) is the weight of a maximum weight\npath from (0, 0) to (|u|, |v|).\n\n1.2\n\nThe Bernoulli Matching model\n\nA related problem called the Bernoulli Matching model is named and well explored\nby Boutet de Monvel in [2]. It is most readily seen as a modification of the\ndirected time passage percolation model. Instead of placing diagonal bonds based\non a match in a pair of strings, diagonal bonds are placed independently at each\nlocation with probability 1/k. In the random string model, the probability of\na bond between (i \u2212 1, j \u2212 1) and (i, j) is 1/k, but these probabilities are not\nindependent. The recurrence for the Bernoulli Matching model is\n\u001a\nDi\u22121,j\u22121 + 1\nif \u01ebij = 1\nDi,j =\nmax{Di,j\u22121 , Di\u22121,j } if \u01ebij = 0\nwhere the \u01ebij are independent random variables with Pr(\u01ebij = 1) = 1/k and\nPr(\u01ebij = 0) = 1\u22121/k. Let ELB(k)\nbe the expected value of Dn,n given this model.\nn\nB(k)\n(k)\nELn , like ELn , is superadditive [2] and therefore the following limit exists:\nELB(k)\nn\nn\u2192\u221e\nn\n\n\u03b3kB = lim\n\nBoutet de Monvel [2] has conjectured that \u03b3kB = 1+2\u221ak and gives a more\ngeneral conjecture for the off diagonal lattice positions (Steele conjectured this\nfor the Random String model in 1982, Boutet de Monvel refined it in 1999). He\nalso presents a nice derivation of this result based on cavity methods typically used\nfor the mean field theory of disordered systems, which he does not try to justify\nrigorously. Though not yet a proof, the method appears to solve the problem\nquite elegantly and agrees well with numerical approximations.\n\n1.3\n\nThe r-reach simplification\n\nA straight-forward way of obtaining a lower bound for EL(k)\nn is to only consider\ncommon subsequences that do not match letters \"too far\" from each other. This\nis equivalent to restricting the lattice to a diagonal band of fixed width with center\nline x = y. More precisely, let Lr (u, v) be the length of a common subsequence of\nu and v as long as possible given that if u(i) = v(j) are paired by the subsequence,\nthen |i \u2212 j| \u2264 r. We will use R instead of D when working with r-reach. The\nrecurrence is modified as follows (Ri,0 , and R0,i are initialized to 0 as before):\n\uf8f1\nRi\u22121,j\u22121 + 1\nif \u03b4u(i),v(j) , (\u01ebij ) = 1\n\uf8f4\n\uf8f4\n\uf8f2\nmax{Ri,j\u22121 , Ri\u22121,j } if \u03b4u(i),v(j) , (\u01ebij ) = 0 and |i \u2212 j| < r\nRi,j =\nRi,j\u22121\nif \u03b4u(i),v(j) , (\u01ebij ) = 0 and j \u2212 i \u2265 r\n\uf8f4\n\uf8f4\n\uf8f3\nRi\u22121,j\nif \u03b4u(i),v(j) , (\u01ebij ) = 0 and i \u2212 j \u2265 r\n3\n\n\f\u0011\n\u0010\nbe the expected value of Rn,n given this model. SuLet ELn,k,r , ELB\nn,k,r\n\nperadditivity still holds in this model (i.e. ELn,k,r + ELm,k,r \u2264 EL(n+m),k,r )\nbecause a maximum weight path from (0, 0) to (n + m, n + m) has weight at least\nas large as (weight of maximum weight path from (0, 0) to (n, n))+(weight of\nmaximum weight path from (n, n) to (n + m, n + m)). The same argument applies\nto ELB\nn,k,r . Now define\nB\n\nELn,k,r\nELn,k,r B\n, \u03b3k,r = lim\nn\u2212\u2192\u221e\nn\u2212\n\u2192\u221e\nn\nn\n\n\u03b3k,r = lim\n\nA simple but quite interesting fact is\nClaim 1\nlim \u03b3 B\nr\u2212\u2192\u221e k,r\n\n= \u03b3kB and\n\nlim \u03b3k,r = \u03b3k\n\nr\u2212\u2192\u221e\n\nProof. r-reach effectively reduces the allowable paths. It is easy to see that for\nfixed values of \u01ebij , Dn,n > Rn,n , and therefore\nB(k)\nB\nB\nELB\n=\u21d2 \u03b3k,r\n\u2264 \u03b3kB =\u21d2 lim \u03b3k,r\n\u2264 \u03b3kB\nn,k,r \u2264 ELn\nr\u2212\u2192\u221e\n\nB(k)\nNext apply superadditivity and ELB\nto show\nr,k,r = ELr\nB\n\u03b3k,r\n\nELB\nELB\nELB(k)\nr,k,r\nn,k,r\nr\n>\n=\n.\n= lim\nn\u2212\u2192\u221e\nn\nr\nr\n\nTaking the limit of both sides yields\nELB(k)\nr\n= \u03b3kB\nr\u2212\u2192\u221e\nr\n\nB\nlim \u03b3k,r\n> lim\n\nr\u2212\u2192\u221e\n\nThe analogous result for the Random String model is proved the same way.\n\n2\n\nSolutions to Bernoulli Matching model r-reach\nfor small r\n\nFor small r, the percolation problem can be dissected in full detail. The approach\nused is fairly straight-foward and computationally intensive. Unfortunately it\nappears that the r-reach problem is not as elegant as the original\u2013possibly because\nof the \"discontinuous\" boundary effects at the displaced diagonals (i, i + r) and\n(i + r, i). There are several reasons this problem is worth studying, however. First\nof all it gives lower bounds for the original problem. Also, it is an interesting\nsetting to compare the Random String model with the Bernoulli Matching model.\nThe methods outlined below seem very difficult to use to solve the problem for\ngeneral r, however they provide foundations for numerical work on large r.\nThe basic idea of the following analyses is to break the lattice into sections consisting of the 2r + 1 vertices (n \u2212 r, n), (n \u2212 r + 1, n), ...(n, n), (n, n \u2212 1), ...(n, n \u2212 r)\n4\n\n\fand then compute probabilities that R takes on specific values at these vertices.\nWe only need to know the distribution of the nth section to compute the distribution of the (n + 1)st section. More formally, let Pn (z) be the probability\nthat Rn,n = z. For notational convenience let x0 = y0 = z. For (n > r) let\nRn (z, x1 , y1 , x2 , y2 , ..., xr , yr ) be the event that (Rn\u2212i,n = xi and Rn,n\u2212i = yi\n\u2200i \u2208 {0, 1, ..., r}). Also define\nPn (z, x1 , y1 , x2 , y2 , ..., xr , yr ) = Pr(Rn (z, x1 , y1 , x2 , y2 , ..., xr , yr )).\n\u2212\u2212\u2212\u2192\nLet Pn (z) be a row vector of length 22r whose set of components is\n{Pn (z, x1 , y1 , x2 , y2 , ..., xr , yr ) : \u2200i \u2208 {1, 2, ..., r},\n\nxi = xi\u22121 \u2212 dxi and yi = yi\u22121 \u2212 dyi for some dxi , dyi \u2208 {0, 1}}.\n\nThe order of these components in the vector is not important; we will need to\npick an order later to do matrix multiplication, but for now we will leave this\nunspecified. The values of R at adjacent lattice points can only differ by 1 or 0\n\u2212\u2212\u2212\u2192\nso the vector Pn (z) contains all possible values for vertices in the same section as\n(n, n). Thus\n22r\nX\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192\nPn (z)i = Pn (z)1\nPn (z) =\ni=1\n\u2032\n\nwhere 1 is the column vector (1, ..., 1) .\n\u2212\u2212\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192\nNow we look at the relationship between Pn (z) and Pn\u22121 (z). Let x\u20320 = y0\u2032 = z \u2032 .\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2212\u2212\u2192\nIf Pn (z)j = Pn (z, x1 , y1 , x2 , y2 , ..., xr , yr ) and Pn\u22121 (z \u2032 )i = Pn\u22121 (z \u2032 , x\u20321 , y1\u2032 , x\u20322 , y2\u2032 , ..., x\u2032r , yr\u2032 )\nand z \u2032 \u2208 {z, z \u2212 1} define\n\u001a\nMij if z \u2032 = z\n\u2032\n\u2032\n\u2032\n\u2032\n\u2032\n\u2032\n\u2032\nPr(Rn (z, x1 , y1 , x2 , y2 , ..., xr , yr ) and Rn\u22121 (z , x1 , y1 , x2 , y2 , ..., xr , yr )) =\nNij if z \u2032 = z \u2212 1\n(1)\nIt sufficed to define this only for z \u2032 = z or z \u2212 1 because otherwise the probability\nis 0. Therefore summing over all possibilites for Rn\u22121 () in the above expression\n\u2212\u2212\u2212\u2192\ngives us Pn (z)j :\nX \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192\nX \u2212\u2212\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192\nPn\u22121 (z \u2212 1)i Nij = Pr(Rn (z, x1 , y1 , x2 , y2 , ..., xr , yr )) = Pn (z)j\nPn\u22121 (z)i Mij +\ni=1\n\ni=1\n\n\u2212\u2212\u2212\u2192\nTaking the convention that Pn (z) is the zero vector for n < r, this yields the\nrecurrence that is true for all n 6= r:\n\u2212\u2212\u2212\u2192 \u2212\u2212\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192\nPn (z) = Pn\u22121 (z)M + Pn\u22121 (z \u2212 1)N (n 6= r)\n\n(2)\n\nNow we will construct some generating functions. The convention made above\nallows the generating function variables n and z to extend over X\nall integers. We\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192 z\nwill work with the two different generating functions Hn (b) =\nPn (z)b and\nz\n\n\u2212\u2212\u2212\u2212\u2192 X \u2212\u2212\u2212\u2192 n z\nPn (z)a b .\nG(a, b) =\nn,z\n\n5\n\n\f2.1\n\n\u2212\u2212\u2212\u2212\u2192\nThe generating function G(a, b)\n\nMultiplying (2) by an bz and summing over all n 6= r and all z yields\nX \u2212\u2212\u2212\u2212\u2212\u2192\nX \u2212\u2212\u2212\u2192\nX \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192\nPn (z)an bz =\n(Pn\u22121 (z)Man bz ) +\n(Pn\u22121 (z \u2212 1)Nan bz )\nn6=r,z\n\nn6=r,z\n\nn6=r,z\n\n\u2212\u2212\u2212\u2192\nAdd ar Hr (b) to both sides to obtain\n\uf8eb\n\uf8f6\n\uf8eb\n\uf8f6\nX \u2212\u2212\u2212\u2212\u2212\u2192\nX \u2212\u2212\u2212\u2192\nX \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192\nPn (z)an bz = \uf8ed\nPn\u22121 (z)an bz \uf8f8 M+\uf8ed\nPn\u22121 (z \u2212 1)an bz \uf8f8 N+ar Hr (b)\nn,z\n\nn6=r,z\n\nn6=r,z\n\n\u2212\u2212\u2212\u2212\u2212\u2192\nSince Pr\u22121 (z) is the zero vector, this becomes\n\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2212\u2192\nG(a, b) = aG(a, b)M + abG(a, b)N + ar Hr (b).\nThen\n\n2.2\n\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2212\u2192\nG(a, b)(I \u2212 aM \u2212 abN) = ar Hr (b).\n\n(3)\n\n\u2212\u2212\u2212\u2192\nThe generating function Hn (b)\n\n.We can also multiply (2) by bz and sum over all z to obtain\n!\n!\nX \u2212\u2212\u2212\u2192\nX \u2212\u2212\u2212\u2212\u2212\u2192\nX \u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2212\u2192\nz\nz\nz\nPn (z)b =\nPn\u22121 (z)b M +\nPn\u22121 (z \u2212 1)b N (n 6= r) =\u21d2\nz\n\nz\n\nz\n\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2212\u2212\u2192\nHn (b) = Hn\u22121 (b)M+bHn\u22121 (b)N (n 6= r)\n\n\u2212\u2212\u2212\u2192\nThis shows we can obtain Hn (b) by successive multiplications by M + bN; that\nis, let T(b) = M + bN.\n\u2212\u2212\u2212\u2192 \u2212\u2212\u2212\u2192\nHn (b) = Hr (b)T(b)n\u2212r\nTo obtain the behavior of T(b)n\u2212r as n \u2212\u2192 \u221e we assume from now on b > 0.\nWe can then apply results about positive matrices (see e.g. [5]). Let det(T(b) \u2212\n\u03bbI) =g(\u03bb, b), a polynomial in \u03bb and b. g(\u03bb, b) = (\u03bb\u2212f1 (b))(\u03bb\u2212f2 (b))...(\u03bb\u2212f22r (b)).\nLet e(b) = (e1 (b), ..., er (b))\u2032 > 0 be s.t. T(b)e(b) = e(b)f1 (b) and let e\u2217 (b) =\n(e\u22171 (b), ..., e\u2217r (b)) > 0\u2032 s.t. e\u2217 (b)f1 (b) = e\u2217 (b)T(b). Normalize e(b) and e\u2217 (b) so\nthat e(b)1 =1, e\u2217 (b)1 =1. Applying results for positive matrices,\nn\n\nn\n\n(T(b) )ij\nT(b)\n\u2217\nn = e(b)e (b) \u21d2 lim\nn = 0\nn\u2212\u2192\u221e nf1 (b)\nn\u2212\u2192\u221e f1 (b)\nlim\n\n(4)\n\nWhen b = 1, this becomes\nn\n\nlim T(1) = 1e\u2217 (1)\n\nn\u2212\u2192\u221e\n\n6\n\n(5)\n\n\f\u2212\u2212\u2212\u2212\u2212\u2192\nsince T(1) is the transition matrix between probability distributions Hn\u22121 (1)\n\u2212\u2212\u2212\u2192\nand Hn (1).\n(T(b)n )\nLet hn (b) = nf1 (b)nij . We need the following limit result to complete the\nanalysis. It appears that it should follow from (4), but a proof eludes us. For\nnow, we will assume it to complete the analysis.\nClaim 2\nlim\n\nn\u2212\u2192\u221e\n\ndhn (b)\n=0\ndb\n\nThe next step is\nn\n\nn\n\n1\n(T(b) )ij df1 (b)\ndhn (b)\nd(T(b) )ij\n=\n\u2212\n\u21d2\nn\ndb\ndb\nnf1 (b)\nf1 (b)n+1 db\ndhn (b)\ndb\nlim\n\nn\u2212\u2192\u221e\n\n=\nb=1\nn\n\n1 d(T(b) )\nn\ndb\n\n1 d(T(b)n )ij\nn\ndb\n\nn\n\nb=1\n\n\u2212 (T(1) )ij\nn\n\n= lim (T(1) )\nb=1\n\nn\u2212\u2192\u221e\n\ndf1 (b)\ndb\n\ndf1 (b)\ndb\n\nb=1\n\n=1e\u2217 (1)\nb=1\n\n\u21d2\n\ndf1 (b)\ndb\n\n(6)\nb=1\n\nWhere the last implication follows from the unproven claim and (5). Now we can\n\u2212\u2212\u2212\u2192\napply this result to find EPn (z) which is defined below\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192 X \u2212\u2212\u2212\u2192 dHn (b)\nEPn (z) \u2261\nz Pn (z) =\ndb b=1\nz\n\nDividing by n and taking the limit of both sides yields\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192\n1 d(Hr (b)T(b)n\u2212r )\n1 dHn (b)\nEPn (z)\n= lim\n=\n= lim\nlim\nn\u2212\u2192\u221e n\nn\u2212\u2192\u221e\nn\ndb b=1 n\u2212\u2192\u221e n\ndb\nb=1\n!\n\u2212\u2212\u2212\u2192\nn\u2212r\n\u2212\n\u2212\n\u2212\n\u2192\n1\nd(T(b)\n)\nd(\nH\n(b))\n1\nr\nlim\nT(1)n\u2212r\n=\n+ Hr (1)\nn\u2212\u2192\u221e\nn\ndb\nn\ndb\nb=1\nb=1\n!\n\u2212\u2212\u2192 1 \u2212\u2212\u2212\u2192 d(T(b)n\u2212r )\n1\nn\u2212r \u2212\n=\nT(1)\nEPr (z) + Hr (1)\nlim\nn\u2212\u2192\u221e\nn\nn\ndb\nb=1\n!\nn\u2212r\n\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192\n)\n1 d(T(b)\ndf1 (b)\ndf1 (b)\nHr (1) lim\n= Hr (1)1e\u2217 (1)\n= e\u2217 (1)\nn\u2212\u2192\u221e\nn\ndb\ndb b=1\ndb b=1\nb=1\nX \u2212\u2212\u2212\u2192\nX\n\u2212\u2212\u2212\u2192\nThis last line uses (6) and Hn (1)1 =\nPn (z)1 =\nPn (z) = 1. The equality\nz\n\nz\n\nabove and the equation obtained by multiplying it by 1 are stated below; they\nwill be useful later.\n\u2212\u2212\u2212\u2192\nELB\nEPn (z)\ndf1 (b)\ndf1 (b)\nn,k,r\nB\nand lim\n(7)\nlim\n= e\u2217 (1)\n= \u03b3k,r\n=\nn\u2212\u2192\u221e\nn\u2212\u2192\u221e\nn\ndb b=1\nn\ndb b=1\nThe following claim makes computing\n7\n\ndf1 (b)\ndb b=1\n\neasier.\n\n\fClaim 3 Let f1 (b) be the root of g with f1 (1) = 1. Then\n\ndf1 (b)\ndb b=1\n\n= \u2212 dg(1,b)\ndb\n\nb=1\n\n\u03bb\u22121\ng(\u03bb,1)\n\nProof.\nd(1 \u2212 f1 (b))\nd((1 \u2212 f2 (b))...(1 \u2212 f22r (b)))\ndg(1, b)\n=\n(1\u2212f2 (b))...(1\u2212f22r (b))+(1\u2212f1 (b))\ndb\ndb\ndb\nevaluating at b = 1 yields\n\u2212\n\ndf1 (b)\ndb\n\nb=1\n\n(1 \u2212 f2 (1))...(1 \u2212 f22r (1)).\n\ng(\u03bb, 1) = (\u03bb \u2212 1)(\u03bb \u2212 f2 (1))...(\u03bb \u2212 f22r (1)) so \u03bb \u2212 1 divides g(\u03bb, 1). g(\u03bb, 1) has only\none root at \u03bb = 1 because this root corresponds to the eigenvector 1 of T(1); 1\n\u03bb\u22121\nis defined at\nis the unique positive eigenvector of T(1) (see e.g. [5]). Thus g(\u03bb,1)\n\u03bb = 1 and equals\n1\n(1 \u2212 f2 (1))...(1 \u2212 f22r (1))\n\nfrom which the claim follows directly.\n\n2.3\n\nDetailed analysis of 1-reach\n\n\u2212\u2212\u2212\u2192\nWhen r = 1, Pn (z) = (Pn (z, z, z), Pn (z, z, z \u2212 1), Pn(z, z \u2212 1, z), Pn(z, z \u2212 1, z \u2212 1)).\nThe matrices M and N are not difficult to compute by hand; they are\n\nPn\u22121 (z, z, z)\nPn\u22121 (z, z, z \u2212 1)\nPn\u22121 (z, z \u2212 1, z)\nPn\u22121 (z, z \u2212 1, z \u2212 1)\n\uf8ee\nPn\u22121 (z \u2212 1, z \u2212 1, z \u2212 1) k12\nPn\u22121 (z \u2212 1, z \u2212 1, z \u2212 2) \uf8ef\n\uf8ef0\nPn\u22121 (z \u2212 1, z \u2212 2, z \u2212 1) \uf8f0 0\nPn\u22121 (z \u2212 1, z \u2212 2, z \u2212 2)\n0\n\n\uf8ee (k\u22121)3\n\nk3 2\n\uf8ef (k\u22121)\n\uf8ef k2\n\uf8ef (k\u22121)2\n\uf8f0 2\nk\nk\u22121\nk\n\nk\u22121\nk2\n1\nk\n\n0\n0\n\nk\u22121\nk2\n\n0\n1\nk\n\n0\n\n0\n0\n0\n0\n\n\uf8f9\n0\n\uf8fa\n0\uf8fa =\n\uf8fa\n0\uf8fb\n0\n\uf8f9\n(k\u22121)2\n0\n0\n0\n0\n\nk3\nk\u22121\nk2\nk\u22121\nk2\n1\nk\n\n\uf8fa\n\uf8fa =\n\uf8fb\n\nM\n\nN\n\nThe expressions to the left of each matrix label the rows according to the\ncomponent order defined above; the columns correspond to Pn (z, z, z), Pn (z, z, z \u2212\n1), Pn (z, z \u2212 1, z), Pn (z, z \u2212 1, z \u2212 1) in that order. We can also easily compute by\n\u2212\u2212\u2212\u2192\nb\nhand H1 (b) = ( k\u22121\nk , 0, 0, k ).\n2.3.1\n\nThe two variable generating function\n\n(3) gives us\n\u2212\u2212\u2212\u2212\u2192\nG(a, b) = a\n\n\u0012\n\nk\u22121\nb\n, 0, 0,\nk\nk\n8\n\n\u0013\n\n(I \u2212 aM \u2212 abN)\u22121 .\n\n\u0001\n\n\u03bb=1\n\n\fSolving this problem with the two variable generating function is computationally\nintensive, but it's nothing Maple can't handle. We obtain\n\uf8f9\n\uf8ee\nak 2 (k \u2212 1)(\u2212k + ab)\n\uf8fa\n\u2212\u2212\u2212\u2212\u2192\u2032 \uf8ef\n\u2212a2 b(k \u2212 1)2 k\n\uf8fa\u00f7\nG(a, b) = \uf8ef\n2\n2\n\uf8fb\n\uf8f0\n\u2212a b(k \u2212 1) k\n2 2\n2\n3\n\u2212ab(a b \u2212 abk \u2212 abk + k )\n\n(a3 b3 \u2212a2 b2 (k 2 +2k)+a2b(k 3 \u22123k 2 +3k\u22121)+ab(2k 3 +k 2 )+a(k 4 \u22123k 3 +3k 2 \u2212k)\u2212k 4 )\n\nThis potentially gives us the entire distribution of the twoX\nvariables. The gener\u2212\u2212\u2212\u2192 \u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2192\nating function for the expected value of Pn (z), EPn (z) =\nz Pn (z), is found by\nz\n\ndifferentiating with respect to b and then evaluating at b = 1. We restrict to the\nk = 2 case to make the expression simpler and more readable.\n\uf8f9\n\uf8ee\n\u22128a2 (a3 \u2212 7a2 + 14a \u2212 12)\nX \u2212\u2212\u2212\u2192\n\uf8ef 4a2 (a3 \u2212 4a2 \u2212 a + 8) \uf8fa 3\n2\n\u22122\n\uf8fa\nEPn (z)\u2032 an = \uf8ef\n\uf8f0 4a2 (a3 \u2212 4a2 \u2212 a + 8) \uf8fb (a \u2212 7a + 22a \u2212 16)\nn\n8a(3a3 \u2212 16a2 + 26a \u2212 16)\n\nUsing Mathematica's Discrete Math Rsolve package and a little computation\nby hand, we get\n\uf8ee 32\n\uf8f9\n344\n\u22122n\nO(n)\n121 n \u2212 1331 + 2\n\uf8ef 16 n \u2212 40 + 2\u22122n O(n)\uf8fa\n\u2212\u2212\u2212\u2192\n121\n1331\n\uf8fa\nEPn (z)\u2032 = \uf8ef\n\uf8f0 16 n \u2212 40 + 2\u22122n O(n)\uf8fb\n121\n1331\n24\n72\n\u22122n\nO(n)\n121 n + 1331 + 2\nwhere the O(n) terms vary like n cos(n\u03b8). Summing these components gives us\n\n8\n32\nn\u2212\n+ 2\u22122n O(n).\n11\n121\nMathematica can also solve the case for general k, but the expression is difELB\nn,2,1 =\n\nELB\n\nn,k,1\nficult to pick apart because it's so long. To get the behavior of\ndivide\nn\nX\nB\nn\nELn,k,1 a by a and integrate with respect to a. This generating function has\n\nn\n\nthe form\n\nX ELB\nn,k,1\nn\n\nn\n\nan =\n\nc1 (k)\n+ c2 (k) ln(a \u2212 1) \u2212 c3 (k) ln(O(a2 )) + c4 (k)arctanh(O(a))\n1\u2212a\n\nwhere ci (k) are functions only of k; the O(a2 ) and O(a) are quadratic and\nlinear polynomials in a with coefficients a function of k. Inferring from the k = 2\ncase, we guess that\n\u22122n\nELB\nO(n)c5 (k).\nn,k,1 = c1 (k)n \u2212 c2 (k) + 2\n\nAnd Maple tells us that\nc1 (k) =\n\n(k 2\n\nk(2k 2 + 3k + 2)\n3k + 2\n, c2 (k) = 4\n+ 3k + 1)\n(k + 6k 3 + 11k 2 + 6k + 1)\n9\n\n\f2.3.2\n\nThe one variable generating function\n1\n(\u2212\u03bbk + b)\u00d7\nk5\n\ndet(T(b) \u2212 \u03bbI)=g(\u03bb, b) =\n\n(b3 \u2212b2 k\u03bb(k+2)+b\u03bb(k 3 +2k 3 \u03bb\u22123k 2 +k 2 \u03bb+3k\u22121)+\u03bb2 k(k 3 \u2212\u03bbk 3 \u22123k 2 +3k\u22121) (8)\nBy (3)\n\u0013\n\u0012\ndg(1, b)\n\u03bb\u22121\n=\ndb b=1 g(\u03bb, 1) \u03bb=1\nb=1\n\u0013\n\u0012\n\u0013\u0012\n3k + 2\n1\nk5\n= 2\n\u2212 \u2212 5 (k \u2212 1)3 (3k + 2)\n.\nk\n(k 2 + 3k + 1)(k \u2212 1)3\n(k + 3k + 1)\ndf1 (b)\ndb\n\n=\u2212\n\nNext we compute e\u2217 (1) (using Maple even though it's not necessary)\n\u0002\ne\u2217 (1) = N k\n\nlim\n\n=n\nb=1\n\nSumming all the components gives us\nB\n\u03b3k,1\n=\n\n1\n\nk\nk2 +3k+1 .\n\nChoose N so that e\u2217 (1)1 =1 \u21d2 N =\n\u2212\u2212\u2212\u2192\nEPn (z)\ndf1 (b)\n= e\u2217 (1)\nn\u2212\u2192\u221e\nn\ndb\n\n1\n\n(k 2\n\n1+k\nk\n\n\u0003\n\nFrom (7) we have\n\nk(3k + 2) \u0002\nk\n+ 3k + 1)2\n\n(k 2\n\n1\n\n1\n\n1+k\nk\n\n\u0003\n\n3k + 2\n+ 3k + 1)\n\nThis does not give us as much asymptotic information as the two variable generating function, but it is much less messy and allows us to easily see the limiting\n\u2212\u2212\u2212\u2192\nbehavior of EPn (z).\nIt is interesting to compare\nbehavior\n\u221a this limiting behavior to the conjectured\nB\n\u2212\u2192 3 as\nfor \u03b3kB . It is guessed that k\u03b3kB \u2212\u2192 2 as k \u2212\u2192 \u221e, whereas k\u03b3k,1\nk \u2212\u2192 \u221e.\n\n2.4\n\n2 and 3 reach\n\nWhen r = 2, M and N are matrices of size 16 \u00d7 16. For the two variable generating function approach, we will restrict to the case k = 2. Maple can solve\n\u2212\u2212\u2212\u2212\u2192 \u2212\u2212\u2212\u2212\u2192\nfor G(a, b); G(a, b)1 is a polynomial in a and b with leading term a11 b11 di10 10\nvided by a polynomial\n! with leading term a b . As with 1-reach, we can find\nZ X\nn\u22121\nELB\nda to obtain the limiting behavior of ELB\nn,2,2 a\nn,2,2 . The result\nn\n\nis an expression about a page long that is very difficult to read. But it appears\nthat most relevant parts of it to the asymptotic behavior are:\n152\n16872(1 \u2212 a)\na(1 \u2212 a)\n+\n+\nln(a \u2212 1)\n2(1 \u2212 a) 197(1 \u2212 a) 38809(1 \u2212 a)\n10\n\n\fFrom which we conclude\n152\n16872\nn\u2212\n.\n197\n38809\nThis seems to be consistent with the Monte Carlo approximations, as will be seen\nlater.\nNow for the one variable generating function approach. This can be solved for\ngeneral k. g(\u03bb, b) is too large an expression to be of much worth written down\n1 (b)\nis surprisingly simple however.\nhere. The resulting expression for dfdb\nb=1\n\u0013\n\u0012\ndf1 (b)\ndg(1, b)\n\u03bb\u22121\n=\n=\u2212\ndb b=1\ndb b=1 g(\u03bb, 1) \u03bb=1\n\u0013\n\u0012\n1\n\u2212 \u2212 28 (k + 1)(5k 3 + 20k 2 + 15k + 2)(k 4 + k 3 + 3k 2 + k + 1)(k \u2212 1)15 (k 4 + 3k 3 + 5k 2 + 3k + 1) \u00d7\nk\nELB\nn,2,2 \u223c\n\n\u0012\n\nk 28\n(k 4 + 3k 3 + 5k 2 + 3k + 1)(k \u2212 1)15 (k + 1)(k 4 + k 3 + 3k 2 + k + 1)(k 4 + 10k 3 + 20k 2 + 10k + 1)\n\n5k 3 + 20k 2 + 15k + 2\nB\n= \u03b3k,2\n.\nk 4 + 10k 3 + 20k 2 + 10k + 1\nB\nwhen k = 2, this gives 152\n197 which confirms part of the guess for ELn,2,2 found by\n\u2217\nthe two variable generating function approach. e (1) is illustrated as follows: We\nreshape the vector into a matrix so that it is easier to read. The component of\n\u2212\u2212\u2212\u2192\ne\u2217 (1) that corresponds to Pn (z, z \u2212dx1 , z \u2212dy1 , z \u2212dx2 , z \u2212dy2 ) in Pn (z) is represented\ndx2 dx1 0\nby\ndy1 .\ndy2\n\uf8f9\n\uf8ee\n0 0 0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\uf8ef\n0\n0\n1\n1 \uf8fa\n\uf8fa\n\uf8ef\n\uf8ef\n0\n1\n1\n2 \uf8fa\n\uf8fa\n\uf8ef\n\uf8ef 1 0\n0\n1 0\n0\n1 0\n0\n1 0\n0 \uf8fa\n\uf8fa\n\uf8ef\n\uf8ef\n0\n0\n1\n1 \uf8fa\n\uf8fa\n\uf8ef\n\uf8ef\n0\n1\n1\n2 \uf8fa\n\uf8fa\n\uf8ef\n\uf8ef 1 1 0\n1 1 0\n1 1 0\n1 1 0 \uf8fa\n\uf8fa\n\uf8ef\n\uf8ef\n0\n0\n1\n1 \uf8fa\n\uf8fa\n\uf8ef\n\uf8ef\n0\n1\n1\n2 \uf8fa\n\uf8fa\n\uf8ef\n\uf8ef 2 1 0\n2 1 0\n2 1 0\n2 1 0 \uf8fa\n\uf8fa\n\uf8ef\n\uf8f0\n0\n0\n1\n1 \uf8fb\n0\n1\n1\n2\nm\n\uf8ee 2\n\uf8f9\nk\n2k\nk\n1\n2\n(k+1)\n\uf8ef2k k + 4 k + 2\n\uf8fa\nk\n\uf8ef\n\uf8fa\n2k+1 \uf8fb\n\uf8f0k\nk+2 k+1\nk\n2k+1\nk2 +4 k+1\n1 2 (k+1)\nk\nk\nk2\n11\n\n\u0013\n\n=\n\n\fTo normalize e\u2217 (1), the above matrix must be multiplied by\nwhich finally gives\nk2\n2\n3\n2\n\uf8ef\n\u2212\u2212\u2212\u2192\nk (5k + 20k + 15k + 2) \uf8ef2k\nEPn (z) \u223c n 4\n(k + 10k 3 + 20k 2 + 10k + 1)2 \uf8f0 k\n1\n\uf8ee\n\nk2\nk4 +10k3 +20k2 +10k+1\n\n2k\nk+4\nk+2\n\nk\nk+2\nk+1\n\n2 (k+1)\nk\n\n2k+1\nk\n\n1\n\n\uf8f9\n\n2 (k+1) \uf8fa\nk\n\uf8fa\n2k+1 \uf8fb\nk\nk2 +4 k+1\nk2\n\nThe case r = 3, k = 2 is also computable in a reasonable amount of time (it\ntook Maple about a half an hour on a 1992 Mega Hertz Dell). The result is\nB\n\u03b32,3\n=\n\n3\n\n3376\n.\n4279\n\nApplications to the Random String model\n\nThe machinery developed for r-reach with the Bernoulli matching model can be\napplied to 1-reach with the Random String model when k = 2. For r > 1, it\nappears this same brute force conditional probability approach is so complicated\nas to be almost useless. r = 1 and k > 2 seems significantly more difficult than\nr = 1, k = 2, which is rather surprising. We get an interesting reduction for\nthe k = 2 case, as will be seen shortly. The reason for pursuing this approach\ndespite its appearance of being difficult to generalize, is that it may lead to a short\nB\nproof of \u03b32,1\n> \u03b3 , which may be generalizable. It has been conjectured that\n\u221a 2,1\n\u221a\nB\nlimn\u2212\u2192\u221e \u03b3k k =\n\u221a limn\u2212\u2192\u221e \u03b3k k (actually Sankoff and Mainville conjectured\nthat limn\u2212\u2192\u221e\n\u221a \u03b3k k = 2 (see e.g. [3]) and Boutet de Monvel [2] conjectured that\nlimn\u2212\u2192\u221e \u03b3kB k = 2). If 1-reach is solved for general k, it may provide some\ninsights into this problem.\n\n3.1\n\nDetailed analysis of 1-reach\n\nThe reduction for the case k = 2 is not difficult, but it requires a fair amount of\nnotation to discuss.\nDefinition. If \u01ebij is defined for |i \u2212 j| \u2264 r and 1 \u2264 i, j \u2264 n, \u01ebij is a string\nrealizable configuration of weight w if \u01ebij = \u03b4u(i),v(j) for w distinct (u, v)\u01eb\u03a3n x\u03a3n .\nIt is easy to convince oneself of the following claim by doing a case by case\nanalysis for n = 3. Such an analysis extends easily to general n.\nClaim 4 Let k = 2 and let \u01ebij be defined for |i \u2212 j| \u2264 1 and 1 \u2264 i, j \u2264 n. \u01ebij is a\nstring realizable configuration of weight 2 if\n\u2200i \u2208 {1, ..., n}, \u01ebi\u22121,i\u22121 + \u01ebi,i\u22121 + \u01ebi\u22121,i + \u01ebi,i \u2208 {0, 2, 4}\nand is a string realizable configuration of weight 0 otherwise.\n\n12\n\n(9)\n\n\fProof. k = 2 means the alphabet, \u03a3, is {0, 1} so that\n\n\u0014\n\n\u03b4u(i\u22121),v(i)\n\n\u03b4u(i),v(i)\n\n\u03b4u(i\u22121),v(i\u22121)\n\n\u03b4u(i),v(i\u22121)\n\nX(u(i \u2212 1, i), v(i \u2212 1, i)) must be in the set\n\u001a\u0014\n\u0015 \u0014\n\u0015 \u0014\n\u0015 \u0014\n\u0015 \u0014\n\u0015 \u0014\n1 1\n0 1\n0 0\n1 0\n0 0\n1\nY\u2261\n,\n,\n,\n,\n,\n1 1\n1 0\n1 1\n1 0\n0 0\n0\n\n\u0015\n\n\u2261\n\n\u0015 \u0014\n\u0015 \u0014\n0\n1 1\n0\n,\n,\n1\n0 0\n0\n\n\u0015\u001b\n1\n.\n1\n(10)\nis a string realizable configuration\n\nThis shows that if the condition in (9) fails, \u01ebij\nof weight 0.\nFor the other part of the claim we proceed by induction on n. The case n = 1\ncan be seen by noting that each element of Y is equal to 2 of the 16 possibilities\nfor X(u(i \u2212 1, i), v(i \u2212 1, i)). Suppose n > 1 and the claim holds for n \u2212 1. Let\nu, v, u\u2032 , v \u2032 be the strings of length n\u22121 such that \u2200i, j \u0014\u2208 {1, ..., n\u22121} and\u0015|i\u2212j| \u2264 1,\n\u01ebn\u22121,n\n\u01ebnn\nis one of\n\u01ebij = \u03b4u(i),v(j) = \u03b4u\u2032 (i),v\u2032 (j) . By hypothesis, Zn \u2261\n\u01ebn\u22121,n\u22121 \u01ebn,n\u22121\nthe eight matrices belonging to Y. For each matrix in Y, we can choose u(n) and\nv(n) as shown below so that \u2200i, j \u2208 {1, ..., n} and |i \u2212 j| \u2264 1, \u01ebij = \u03b4u(i),v(j) . The\nsame goes for u\u2032 and v \u2032 .\nZn\nu(n)=,\nv(n)=\n\n1\n1\n\n1\n1\n\nu(n\u22121),\nv(n\u22121)\n\n0\n1\n\n1\n0\n\n1\u2212u(n\u22121),\n1\u2212v(n\u22121)\n\n0\n1\n\n0\n1\n\n1\n1\n\n1\u2212u(n\u22121),\nv(n\u22121)\n\n0\n0\n\nu(n\u22121),\n1\u2212v(n\u22121)\n\n0\n0\n\n0\n0\n\nu(n\u22121),\nv(n\u22121)\n\n1\n0\n\n0\n1\n\n1\u2212u(n\u22121),\n1\u2212v(n\u22121)\n\n1\n0\n\n1\n0\n\n1\u2212u(n\u22121),\nv(n\u22121)\n\n0\n0\n\nu(n\u22121),\n1\u2212v(n\u22121)\n\nThis shows \u01ebij is a string realizable configuration of weight at least 2. The weight\ncannot exceed 2 because then \u01ebij restricted to i, j \u2208 {1, ..., n \u2212 1} would have\nweight greater than 2.\nThis claim lets us count the probabilities Pn (z, x1 , y1 ) much like we did for\nthe Bernoulli Matching model. We define the analogous probability vector but\nwe have to break Pn (z, x1 , y1 ) into two pieces: Pn (z, x1 , y1 ) = Pnon (z, x1 , y1 ) +\nPnoff (z, x1 , y1 ).\nPnon (z, x1 , y1 ) = Pr(Rn (z, x1 , y1 ) and \u01ebnn = 1), Pnoff (z, x1 , y1 ) = Pr(Rn (z, x1 , y1 ) and \u01ebnn = 0).\nThe reason for this split is that we need to know \u01ebn\u22121,n\u22121 to determine how\n{Rn\u22121,n\u22121 , Rn\u22122,n\u22121 , Rn\u22121,n\u22122 } affects {Rn,n , Rn\u22121,n , Rn,n\u22121 }. The computation of M and N was done by hand and was a little trickier than for the Bernoulli\nMatching model.\n\uf8ee\n\uf8f9\noff\nPn\u22121\n(z, z, z)\n1/4 0 0 0 0 0 0 0\noff\n\uf8ef1/4 0 0 0 0 0 0 0\uf8fa\nPn\u22121\n(z, z, z \u2212 1)\n\uf8ef\n\uf8fa\noff\n\uf8ef1/4 0 0 0 0 0 0 0\uf8fa\nPn\u22121 (z, z \u2212 1, z)\n\uf8ef\n\uf8fa\noff\n\uf8fa\nPn\u22121\n(z, z \u2212 1, z \u2212 1) \uf8ef\n\uf8ef1/2 0 0 0 0 0 0 0\uf8fa = M\non\n\uf8ef\n\uf8fa\nPn\u22121 (z, z, z)\n\uf8ef 0 0 0 0 0 0 0 0\uf8fa\non\n\uf8ef\n\uf8fa\nPn\u22121 (z, z, z \u2212 1)\n\uf8ef1/4 0 0 0 0 0 0 0\uf8fa\non\n\uf8f0\n1/4 0 0 0 0 0 0 0\uf8fb\nPn\u22121 (z, z \u2212 1, z)\non\nPn\u22121 (z, z \u2212 1, z \u2212 1) 1/2 0 0 0 0 0 0 0\n13\n\n1\n1\n\n\foff\nPn\u22121\n(z \u2212 1, z \u2212 1, z \u2212 1)\noff\nPn\u22121 (z \u2212 1, z \u2212 1, z \u2212 2)\noff\nPn\u22121\n(z \u2212 1, z \u2212 2, z \u2212 1)\noff\nPn\u22121 (z \u2212 1, z \u2212 2, z \u2212 2)\non\nPn\u22121\n(z \u2212 1, z \u2212 1, z \u2212 1)\non\nPn\u22121 (z \u2212 1, z \u2212 1, z \u2212 2)\non\nPn\u22121\n(z \u2212 1, z \u2212 2, z \u2212 1)\non\nPn\u22121 (z \u2212 1, z \u2212 2, z \u2212 2)\n\n\uf8ee\n\uf8f9\n1/4 0\n0 0 0 1/4 1/4 0\n\uf8ef 0 1/4 0 0 0 1/4 0 1/4\uf8fa\n\uf8ef\n\uf8fa\n\uf8ef 0\n0 1/4 0 0\n0 1/4 1/4\uf8fa\n\uf8ef\n\uf8fa\n\uf8ef 0\n0\n0 0 0\n0\n0 1/2\uf8fa\n\uf8ef\n\uf8fa=N\n\uf8ef 0 1/4 1/4 0 1/4 0\n0 1/4\uf8fa\n\uf8ef\n\uf8fa\n\uf8ef 0 1/4 0 0 0 1/4 0 1/4\uf8fa\n\uf8ef\n\uf8fa\n\uf8f0 0\n0 1/4 0 0\n0 1/4 1/4\uf8fb\n0\n0\n0 0 0\n0\n0 1/2\n\nThe two variable generating function approach determines the fine limiting behavior:\nX\na(a2 \u2212 2a + 8)\nELn,2,1 an =\n2\n2(a \u2212 4a + 8)(a \u2212 1)2\nn\n\nUsing Mathematica's Discrete Math Rsolve package and a little computation by\nhand, we obtain\n7\n7\nELn,2,1 =\nn\u2212\n+ 2\u22123n/2 O(1).\n10\n25\nwhere the O(1) term varies like cos(n\u03b8). We will compare this result to numerical\napproximations.\nThe one variable generating function produces\n\ndet(T(b)\u2212\u03bbI)=g(\u03bb, b) = \u2212\nand\n\n1 3\n\u03bb (b\u22122\u03bb)(b\u22124\u03bb)(b3 +b2 (\u22128\u03bb+1)+2b\u03bb(\u22121+10\u03bb)+4\u03bb2(\u22124\u03bb+1))\n128\n\n\u0012\n\u0013\ndg(1, b)\n\u03bb\u22121\n=\ndb b=1 g(\u03bb, 1) \u03bb=1\nb=1\n\u0012\n\u0013\u0012 \u0013\n21\n7\n64\n\u2212 \u2212\n=\n128\n15\n10\n\u0002\n\u0003\n1\n\u2217\ne (1) = 20 8 1 1 0 0 3 3 4 .\nWe can also \"blow up\" the 1-reach Bernoulli Matching model, so that we work\n\u2212\u2212\u2212\u2212\u2192\n\u2212\u2212\u2212\u2212\u2192\nwith Pnon (z) and Pnoff (z) even though we don't need to. The resulting matrices are\nincluded in the appendix. It is interesting to note that the matrices only differ in\nthe two rows corresponding to Pn\u22121 (z \u2212 1, z \u2212 1, z \u2212 1). The result is\ndf1 (b)\ndb\n\ng B (\u03bb, b) =\n\n=\u2212\n\n1 4\n\u03bb (b \u2212 2\u03bb)(b3 \u2212 8b2 \u03bb + b\u03bb(1 + 20\u03bb) + 2\u03bb2 (1 \u2212 8\u03bb))\n32\n\nand this polynomial is the same as one obtained earlier (in (8)) except for the \u03bb4\nterm. Also,\n\u0002\n\u0003\n1\n7 2 2 0 1 2 2 6 which is more precise behavior than\neB\u2217 (1) = 22\nthat determined by the 4 \u00d7 4 matrix method.\nIt is unclear whether there is a more direct way to see that the difference in\nthe matrices for the Random String model and the Bernoulli Matching model lead\nB\nto the conclusion \u03b32,1 < \u03b32,1\n14\n\n\f4\n\nNumerical Work\n\nWe ran Monte Carlo simulations for k = 2 and r = 1, 2...10, 15, 20, 25, 35, 40.\n10000 trials were computed up to n = 1000 for each r. To obtain behavior\nvarying with n, approximations of ELB\nn,2,r and ELn,2,r for all n from 1 to 1000\nwere computed for each trial. Ideally, we should have computed separate trials\nfor each n, but these results appear to lead to good extrapolations to large n.\nB\nFollowing the work in [2], we extrapolate to \u03b32,r\nfrom the small n simulations\nbased on;\nB\nB\nELn,2,r \u223c \u03b32,r n \u2212 Ar , ELB\n(11)\nn,2,r \u223c \u03b32,r n \u2212 Ar .\nWhere Ar (AB\nr ) is a constant, and was found by minimizing the variance of\nELn,2,r +Ar\nn\n\nELB\n\n+AB\n\nr\nB\n( n,2,r\n). Extrapolations for \u03b32,r\n, AB\nr , and \u03b32,r , Ar based on\nn\nMonte Carlo simulations are shown below. We did this extrapolation from n =\n50...1000 to minimize the effect of the 2\u22122n O(n) term (we only saw this for r = 1,\nbut there are probably similar terms for larger r).\n\nr\nB\n\u03b32,r\nAB\nr\n\u03b32,r\nAr\nr\nB\n\u03b32,r\nAB\nr\n\u03b32,r\nAr\n\n1\n0.72726\n0.2771\n0.70014\n0.2652\n10\n0.81592\n1.2653\n0.79180\n1.2877\n\n2\n0.77166\n0.4626\n0.73767\n0.4335\n\n3\n0.78898\n0.5641\n0.75610\n0.5748\n\n15\n0.81994\n1.5253\n0.79819\n1.6377\n\n4\n0.79813\n0.6852\n0.76718\n0.7048\n\n20\n0.82182\n1.6814\n0.80149\n1.8753\n\n25\n0.82290\n1.7536\n0.80340\n2.028\n\nMonteCarlo(ELB\n\n)\n\n5\n0.80396\n0.8033\n0.77467\n0.8195\n30\n0.82355\n1.8058\n0.80462\n2.1273\n\n6\n0.80796\n0.9399\n0.78004\n0.9218\n\n7\n0.81119\n0.9931\n0.78408\n1.0163\n\n35\n0.82406\n1.8368\n0.80546\n2.1939\n\nMonteCarlo(ELB\n\n8\n0.81284\n1.0814\n0.78726\n1.1121\n\n40\n0.82415\n1.8395\n0.80603\n2.2371\n\n)+Ar\n\nn,2,r\nn,2,r\nShown in figure (2) are\nand\nand the\nn\nn\ncorresponding Random String model data is shown in (3). It appears that the approximation ELn,2,r \u223c \u03b32,r n \u2212 Ar gets increasingly worse for larger r and likewise\nfor the Bernoulli Matching model.\nFor the Bernoulli Matching model we also can compute ELB\nn,2,r exactly for\n\u2212\u2212\u2212\u2192\nsmall n by applying (2) directly beginning with Pr (z). This allows us to do two\nchecks on the quality of the Monte Carlo approximations. Firstly, we can observe\n\nthe difference\n\nMonteCarlo(ELB\nn,2,r )\nn\n1000\n1 X\nSr \u2261\n1000 j=1\n\n\u2212\n\nELB\nn,2,r\n.\nn\n\nThe statistic\n\nM onteCarlo(ELB\nELB\nn,2,r )\nn,2,r\n\u2212\nn\nn\n\n!2\n\ngives us an idea of how crude an approximation we get with 10000 trials. Also,\nB\nB\nwe can see how good the approximation ELB\nn,2,r \u223c \u03b32,r n \u2212 Ar is by using that\n\n15\n\n9\n0.81458\n1.1900\n0.78976\n1.2044\n\n\f(Bernoulli Matching model) Monte Carlo approximations of ELn/n for 16 values of r\n0.84\n\nr = 40\n0.82\n\n~ELn/n\n\n0.8\n\n0.78\n\n0.76\n\n0.74\nr=1\n0.72\n\n0\n\n100\n\n200\n\n300\n\n400\n\n500\nn\n\n600\n\n700\n\n800\n\n900\n\n1000\n\n(Bernoulli Matching model) Approximations of gammar for 16 values of r\n0.84\n\nr = 40\n0.82\n\n~gamma r\n\n0.8\n\n0.78\n\n0.76\n\n0.74\nr=1\n0.72\n\n0\n\n100\n\n200\n\n300\n\n400\n\n500\nn\n\n16 of\nFigure 2: The Monte Carlo approximations\nby (11) to obtain the limiting behavior.\n\n600\n\nELB\nn,2,r\nn\n\n700\n\n800\n\n900\n\n1000\n\nand this same data corrected\n\n\f(Random String model) Monte Carlo approximations of ELn/n for 16 values of r\n0.82\n\nr = 40\n0.8\n\n0.78\n\n~ELn/n\n\n0.76\n\n0.74\n\n0.72\n\nr=1\n0.7\n\n0.68\n\n0\n\n100\n\n200\n\n300\n\n400\n\n500\n\n600\n\n700\n\n800\n\n900\n\n1000\n\nn\n\n(Random String model) Approximations of gammar for 16 values of r\n0.82\nr = 40\n0.8\n\n~gamma r\n\n0.78\n\n0.76\n\n0.74\n\n0.72\n\nr=1\n0.7\n\n0.68\n\n0\n\n100\n\n200\n\n300\n\n400\n\n500\nn\n\n17\nFigure 3: The Monte Carlo approximations of\nby (11) to obtain the limiting behavior.\n\n600\n\nELn,2,r\nn\n\n700\n\n800\n\n900\n\n1000\n\nand this same data corrected\n\n\fB\non the exact values of ELB\nn,2,r to extrapolate \u03b32,r (for this extrapolation we use\nn = 1...2000).\n\nr\n1\n2\n3\n4\nr\n1\n2\n3\n4\n\nSr\n5.2994 \u00d7 10\u22128\n5.0758 \u00d7 10\u22128\n1.0180 \u00d7 10\u22128\n1.5954 \u00d7 10\u22128\n\nMonte Carlo AB\nr\n0.2771\n0.4626\n0.5641\n0.6852\n\nB\nMonte Carlo \u03b32,r\n0.7272634\n0.7716676\n0.7889874\n0.7981354\nB\nAB\nr from ELn,2,r\n0.264463\n0.434745\n0.574312\n0.696534\n\nB\n\u03b32,r\nfrom ELB\nn,2,r\n0.7272727273\n0.7715736043\n0.7889693851\n0.7982222051\n\nfrom fractions\nB\n\u03b32,r\nderived previously\n0.7272727272\n0.7715736040\n0.7889693853\n\u2212\n\nfrom fractions\nAB\nr derived previously\n0.2644628\n0.4347445\n\u2212\n\u2212\n\nWe also note that M onteCarlo(\u03b32,1 ) = 0.7001417 compared to \u03b32,1 = .7 and\nM onteCarlo(A2,1 ) = 0.2652 compared to A2,1 = .28\n\n5\n\nConclusions and future work\n\nIt is hoped that the results presented in this paper lead the way to more significant\nresults. In particular, it is hoped that the Random String model analysis may\nB\nB\nlead to a short proof of \u03b32,1 < \u03b32,1\n. The limiting behavior of \u03b3k,1 \u2212 \u03b3k,1\nwould also\nB\nbe of interest. We seek a conjecture for the quantities \u03b3k,r , though it is unclear if\nB\n= \u03b3kB is a good idea.\ntrying to determine \u03b3kB via limr\u2212\u2192\u221e \u03b3k,r\nThe pseudoproof of \u03b3kB = 1+2\u221ak given by Boutet de Monvel may provide a\nway to simplify the r-reach computations. The limiting behavior of r-reach may\nbe describable only by differences between adjacent values of R, thereby reducing\nthe \"problemsize\" from 22r to 2r. Preliminary investigations suggest that this\nreduction may be possible but not as straight forward as the argument in the\npseudoproof.\n\n6\n\nAppendix\n\nThe expanded version of the Bernoulli Matching model r = 1, k = 2 case has\nmatrices as follows. These are given for comparison with the matrices for the\nRandom String model r = 1, k = 2 case.\n\n18\n\n\f\uf8ee\noff\nPn\u22121\n(z, z, z)\n1/8\noff\n\uf8ef1/4\nPn\u22121\n(z, z, z \u2212 1)\n\uf8ef\noff\n\uf8ef1/4\nPn\u22121\n(z, z \u2212 1, z)\n\uf8ef\noff\nPn\u22121 (z, z \u2212 1, z \u2212 1) \uf8ef\n\uf8ef1/2\non\n\uf8ef1/8\nPn\u22121\n(z, z, z)\n\uf8ef\non\n\uf8ef1/4\nPn\u22121 (z, z, z \u2212 1)\n\uf8ef\non\n\uf8f01/4\nPn\u22121 (z, z \u2212 1, z)\non\nPn\u22121 (z, z \u2212 1, z \u2212 1) 1/2\n\uf8ee\noff\nPn\u22121 (z \u2212 1, z \u2212 1, z \u2212 1) 1/8 1/8\noff\nPn\u22121\n(z \u2212 1, z \u2212 1, z \u2212 2) \uf8ef\n\uf8ef 0 1/4\noff\n0\nPn\u22121 (z \u2212 1, z \u2212 2, z \u2212 1) \uf8ef\n\uf8ef 0\noff\n0\n0\nPn\u22121\n(z \u2212 1, z \u2212 2, z \u2212 2) \uf8ef\n\uf8ef\non\nPn\u22121\n(z \u2212 1, z \u2212 1, z \u2212 1) \uf8ef\n\uf8ef1/8 1/8\non\nPn\u22121\n(z \u2212 1, z \u2212 1, z \u2212 2) \uf8ef\n\uf8ef 0 1/4\non\n0\nPn\u22121\n(z \u2212 1, z \u2212 2, z \u2212 1) \uf8f0 0\non\n0\n0\nPn\u22121\n(z \u2212 1, z \u2212 2, z \u2212 2)\n\n19\n\n0\n0\n0\n0\n0\n0\n0\n0\n\n0\n0\n0\n0\n0\n0\n0\n0\n\n1/8\n0\n1/4\n0\n1/8\n0\n1/4\n0\n\n0\n0\n0\n0\n0\n0\n0\n0\n\n0\n0\n0\n0\n0\n0\n0\n0\n\n0\n0\n0\n0\n0\n0\n0\n0\n\n0\n0\n0\n0\n0\n0\n0\n0\n\n\uf8f9\n0\n0\uf8fa\n\uf8fa\n0\uf8fa\n\uf8fa\n0\uf8fa\n\uf8fa=M\n0\uf8fa\n\uf8fa\n0\uf8fa\n\uf8fa\n0\uf8fb\n0\n\n\uf8f9\n0 1/8 1/8 1/8 1/8\n0 0 1/4 0 1/4\uf8fa\n\uf8fa\n0 0\n0 1/4 1/4\uf8fa\n\uf8fa\n0 0\n0\n0 1/2\uf8fa\n\uf8fa=N\n0 1/8 1/8 1/8 1/8\uf8fa\n\uf8fa\n0 0 1/4 0 1/4\uf8fa\n\uf8fa\n0 0\n0 1/4 1/4\uf8fb\n0 0\n0\n0 1/2\n\n\fReferences\n[1] R. A. Baeza-Yates, R. Gavald\u00e0, G. Navarro, and R. Scheihing. Bounding the\nExpected Length of Longest Common Subsequences and Forests, Theory Comput. Systems 32 (1999), 435-452.\n[2] Boutet de Monvel, J. Extensive Simulations for Longest Common Subsequences. Europ. Phys. J. B 7 (1999), 293-308.\n[3] V. Dan\u010d\u0131\u0301k. Expected Length of Longest Common Subsequences. Ph.D. Thesis,\nCS Dept., University of Warwick, Warwick, England, 1994.\n[4] D. Sankoff and J. B. Kruskal. Time Warps, String Edits, and Macromolecules:\nThe Theory and Practice of Sequence Comparison, Addison-Wesley, Reading,\nMA, 1983.\n[5] Y. Sinai. Probability Theory, Springer-Verlag, Berlin, 1992.\n\n20\n\n\f"}