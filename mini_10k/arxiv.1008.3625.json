{"id": "http://arxiv.org/abs/1008.3625v1", "guidislink": true, "updated": "2010-08-21T11:20:33Z", "updated_parsed": [2010, 8, 21, 11, 20, 33, 5, 233, 0], "published": "2010-08-21T11:20:33Z", "published_parsed": [2010, 8, 21, 11, 20, 33, 5, 233, 0], "title": "Vulnerability Analysis of PAP for RFID Tags", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1008.4707%2C1008.0821%2C1008.2822%2C1008.3358%2C1008.0069%2C1008.0294%2C1008.4348%2C1008.2090%2C1008.0910%2C1008.2668%2C1008.1779%2C1008.3650%2C1008.1036%2C1008.1772%2C1008.2165%2C1008.5390%2C1008.1413%2C1008.2208%2C1008.0575%2C1008.4187%2C1008.2507%2C1008.5361%2C1008.2488%2C1008.3052%2C1008.3822%2C1008.2658%2C1008.1294%2C1008.2404%2C1008.4887%2C1008.1872%2C1008.5250%2C1008.4396%2C1008.2091%2C1008.0015%2C1008.1657%2C1008.1156%2C1008.3186%2C1008.4859%2C1008.3718%2C1008.0797%2C1008.3649%2C1008.4486%2C1008.3066%2C1008.4865%2C1008.2716%2C1008.1117%2C1008.1911%2C1008.1448%2C1008.3935%2C1008.1805%2C1008.3970%2C1008.0847%2C1008.2827%2C1008.3132%2C1008.1806%2C1008.0546%2C1008.2300%2C1008.1440%2C1008.1137%2C1008.3410%2C1008.3876%2C1008.2089%2C1008.0800%2C1008.2934%2C1008.4499%2C1008.4126%2C1008.4062%2C1008.1096%2C1008.3372%2C1008.3457%2C1008.2767%2C1008.3856%2C1008.3062%2C1008.0489%2C1008.1132%2C1008.4634%2C1008.3715%2C1008.2425%2C1008.4485%2C1008.5342%2C1008.3868%2C1008.2493%2C1008.2702%2C1008.0545%2C1008.4692%2C1008.3609%2C1008.3265%2C1008.1582%2C1008.1712%2C1008.3274%2C1008.0404%2C1008.1349%2C1008.0302%2C1008.2914%2C1008.4684%2C1008.4115%2C1008.2421%2C1008.1821%2C1008.3625%2C1008.4568%2C1008.3427&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Vulnerability Analysis of PAP for RFID Tags"}, "summary": "In this paper, we analyze the security of an RFID authentication protocol\nproposed by Liu and Bailey [1], called Privacy and Authentication Protocol\n(PAP), and show its vulnerabilities and faulty assumptions. PAP is a privacy\nand authentication protocol designed for passive tags. The authors claim that\nthe protocol, being resistant to commonly assumed attacks, requires little\ncomputation and provides privacy protection and authentication. Nevertheless,\nwe propose two traceability attacks and an impersonation attack, in which the\nrevealing of secret information (i.e., secret key and static identifier) shared\nbetween the tag and the reader is unnecessary. Moreover, we review all basic\nassumptions on which the design of the protocol resides, and show how many of\nthem are incorrect and are contrary to the common assumptions in RFID systems.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1008.4707%2C1008.0821%2C1008.2822%2C1008.3358%2C1008.0069%2C1008.0294%2C1008.4348%2C1008.2090%2C1008.0910%2C1008.2668%2C1008.1779%2C1008.3650%2C1008.1036%2C1008.1772%2C1008.2165%2C1008.5390%2C1008.1413%2C1008.2208%2C1008.0575%2C1008.4187%2C1008.2507%2C1008.5361%2C1008.2488%2C1008.3052%2C1008.3822%2C1008.2658%2C1008.1294%2C1008.2404%2C1008.4887%2C1008.1872%2C1008.5250%2C1008.4396%2C1008.2091%2C1008.0015%2C1008.1657%2C1008.1156%2C1008.3186%2C1008.4859%2C1008.3718%2C1008.0797%2C1008.3649%2C1008.4486%2C1008.3066%2C1008.4865%2C1008.2716%2C1008.1117%2C1008.1911%2C1008.1448%2C1008.3935%2C1008.1805%2C1008.3970%2C1008.0847%2C1008.2827%2C1008.3132%2C1008.1806%2C1008.0546%2C1008.2300%2C1008.1440%2C1008.1137%2C1008.3410%2C1008.3876%2C1008.2089%2C1008.0800%2C1008.2934%2C1008.4499%2C1008.4126%2C1008.4062%2C1008.1096%2C1008.3372%2C1008.3457%2C1008.2767%2C1008.3856%2C1008.3062%2C1008.0489%2C1008.1132%2C1008.4634%2C1008.3715%2C1008.2425%2C1008.4485%2C1008.5342%2C1008.3868%2C1008.2493%2C1008.2702%2C1008.0545%2C1008.4692%2C1008.3609%2C1008.3265%2C1008.1582%2C1008.1712%2C1008.3274%2C1008.0404%2C1008.1349%2C1008.0302%2C1008.2914%2C1008.4684%2C1008.4115%2C1008.2421%2C1008.1821%2C1008.3625%2C1008.4568%2C1008.3427&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "In this paper, we analyze the security of an RFID authentication protocol\nproposed by Liu and Bailey [1], called Privacy and Authentication Protocol\n(PAP), and show its vulnerabilities and faulty assumptions. PAP is a privacy\nand authentication protocol designed for passive tags. The authors claim that\nthe protocol, being resistant to commonly assumed attacks, requires little\ncomputation and provides privacy protection and authentication. Nevertheless,\nwe propose two traceability attacks and an impersonation attack, in which the\nrevealing of secret information (i.e., secret key and static identifier) shared\nbetween the tag and the reader is unnecessary. Moreover, we review all basic\nassumptions on which the design of the protocol resides, and show how many of\nthem are incorrect and are contrary to the common assumptions in RFID systems."}, "authors": ["Mu'awya Naser", "Pedro Peris-Lopez", "Mohammd Rafie", "Jan van der Lubbe"], "author_detail": {"name": "Jan van der Lubbe"}, "author": "Jan van der Lubbe", "arxiv_comment": "18 pages, 4 figures", "links": [{"href": "http://arxiv.org/abs/1008.3625v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1008.3625v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1008.3625v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1008.3625v1", "journal_reference": null, "doi": null, "fulltext": "Vulnerability Analysis of PAP for RFID Tags\n\narXiv:1008.3625v1 [cs.CR] 21 Aug 2010\n\nMu'awya Naser\nSchool of Computer Sciences, Main Campus, Universiti Sains Malaysia, Penang\nMalaysia 11700, E-mail: Muawya.cod08@student.usm.my\n\nPedro Peris-Lopez\nInformation Security and Privacy Lab, Delft University of Technology, Mekelweg 4, 2628\nCD, Delft, The Netherlands, Email: P.PerisLopez@tudelft.nl\n\nMohammd Rafie\nSchool of Computer Sciences, Main Campus, Universiti Sains Malaysia, Penang\nMalaysia 11700, E-mail: Rafie@cs.usm.my\n\nJan van der Lubbe\nInformation Security and Privacy Lab, Delft University of Technology, Mekelweg 4, 2628\nCD, Delft, The Netherlands, Email: J.C.A.vanderLubbe@tudelft.nl\n\nAbstract\nIn this paper, we analyze the security of an RFID authentication protocol\nproposed by Liu and Bailey [1], called Privacy and Authentication Protocol\n(PAP), and show its vulnerabilities and faulty assumptions. PAP is a privacy and authentication protocol designed for passive tags. The authors\nclaim that the protocol, being resistant to commonly assumed attacks, requires little computation and provides privacy protection and authentication.\nNevertheless, we propose two traceability attacks and an impersonation attack, in which the revealing of secret information (i.e., secret key and static\nidentifier) shared between the tag and the reader is unnecessary. Moreover,\nwe review all basic assumptions on which the design of the protocol resides,\nPreprint Version\n\nMay 21, 2018\n\n\fand show how many of them are incorrect and are contrary to the common\nassumptions in RFID systems.\nKeywords: RFID, authentication, privacy, cryptanalysis, impersonation\nattack, tractability attack\n1. Introduction\nNumerous RFID protocols have been proposed with the goal of providing secure contact between readers and tags over the open radio channel.\nNevertheless, tags have severe limitations in terms of circuitry (gate equivalents), storage, and power consumption; thus, designing an efficient and\nsecure mutual authentication protocol is still a great challenge. There are\nmany security risks linked to RFID technology, and of these, privacy and\ntracking are the most important. We will explain these in detail. Nevertheless, readers are urged to consult [2, 3, 4, 5] to have a complete overview of\nthe risks and threats linked to RFID technology.\nPrivacy: Tag content, which may include sensitive information, is revealed\nwhen insecure tags are interrogated by readers. Tags and readers should\nthus be authenticated to overcome this problem. However, readers are\nfrequently not authenticated, and tags usually answer in a completely\ntransparent and indiscriminate way.\nTracking: A problem closely related to privacy is tracking or violations of\nlocation privacy. Even if access of tag content were only allowed to\nauthorized readers, non-tracking might still not be guaranteed. The\nanswer provided by tags is usually a constant value (i.e., a static identifier). Under this assumption, an attacker will be able to establish an\n2\n\n\fassociation between tags and their owners. Additionally, we can relax\nour conditions and assume that tags only contain product codes rather\nthan unique identifiers. Nevertheless, Weis et al. claimed that tracking\nis still be possible by using a constellation of tags [2].\nPrivacy and authentication protocol (PAP), like many proposed protocols\n[6, 7, 8, 9], can be categorized under the class of a simple mutual authentication protocol [10], in which tags can generate a random number and have\ncomputation recourses to compute a hash function. However, unlike other\nprotocols in the area of simple mutual authentication protocol, PAP is designed in four sub-protocols based on the specific location of the tag.\nFor the rest of this paper, we first present a full review of PAP and\nillustrate the functionality of the four proposed sub-protocols. Then, we\nintroduce and discuss the vulnerability analysis of the protocol and its assumptions categorized under conceptual and operational view, respectively.\nThereafter, we propose two traceability attacks, followed by an impersonation attack. Finally, we offer some conclusions.\n2. Review of PAP\nPAP claims to have a protocol, which is compliant with the Electronic\nProduct Code Class-1 Generation-2 (EPC-C1G2) standard [11] or ISO/IEC\n18006-C [12] equivalently, in which the entities involved consist of tags, readers, and a back-end database. The basic communication of the protocol\nis between tags and readers, and the authors do not discuss the matter of\nreader-database communication. Furthermore, compared with the original\n\n3\n\n\fEPC-C1G2 standard, it is assumed that RFID tags support on-chip, a secure hash function, to provide stronger security guarantees.\nEach tag in PAP has a secret key k shared with the reader, a generic\nname (i.e., product type), a static ID (i.e., unique identifier), and a privacy\nbit that can be switched between 0 and 1 (the 0/1 value denotes that the tag\nis in a secure/insecure location). Readers are classified into three categories,\nnamely, inventory, checkout, and return readers. The implementation scenario considers four locations for the tag to be in: 1) inside the store; 2) at\nthe checkout counter; 3) outside the store; and 4) at the return counter. Each\nlocation has its own sub-protocol in PAP in terms of maintaining privacy and\nauthentication for the tags all the time and at any location.\nThe basic difference among the four PAP sub-protocols is that the privacy bit value is equal to zero, as in the cases of in-store and checkout subprotocols. Here, the tag is assumed to be inside the store and sends its\nID during communication with the reader. Otherwise, the generic name,\nwhich is a numeric representation of the product type, communicates with\nthe reader when the privacy bit value is set to 1 as in the cases of the out-store\nand return sub-protocols.\nThe in-store and out-store sub-protocols both share the same exchanged\nmessages. Basically, tags send back one message after being queried by a\nreader. However, the exception for the message is that the tag sends a static\nidentifier ID in the former and the tag sends a generic name in the latter. In\nboth cases, a random number is sent in the tag response, but this does not\nhave any security purpose. The in-store sub-protocol does not offer authentication or privacy protection because its main goal is efficiency. It assumes\n\n4\n\n\fthat the store provides other mechanisms to prevent malicious readers from\nentering. In the out-store sub-protocol, privacy protection is achieved by\nsending a generic name number, not the ID, where an unauthorized reader\ncan read a tag but will not know what specific item is being read at that\ntime.\nThe checkout sub-protocol and the return sub-protocol are sequels to the\nin-store and out-store sub-protocols, respectively; they also differ in terms\nof dealing with the ID of the former and in the generic name of the latter.\nThese protocols share the same exchanged messages to establish mutual authentication between the tag and the reader. The first two messages (i.e.,\nthose that are used in the in-store and out-store sub-protocols) are identical. Next, the reader retrieves the secret key k from the database using\nthe ID or the generic name received from the tag. The reader computes a\none-way hash function on k and the random number nt received from the\ntag (H1 = hash(nt , k)). It then computes a new nonce nr and sends both\nvalues (H1 , nr ) to the tag. The tag checks the hash value received. If so, it\nauthenticates the reader and switches the privacy bit from 0 to 1. Finally,\nthe tag computes H2 = hash(nr , k) and forwards this value to the reader.\nUpon checking its correctness, the reader authenticates the tag. Figure (1)\nillustrates these four sub-protocols.\n3. Vulnerability Analysis of PAP\nThe PAP threat model presents several assumptions that are considered\nessential for the protocol to ensure the privacy and authentication guarantees\nthat it offers when applied in real-life scenarios. The authors partially justi5\n\n\ffied these assumptions based on previous works, but they failed to mention\nthese references. Furthermore, many of these assumptions are not compliant with the standard (EPC-C1G2 or ISO/IEC 18006-C) that the proposed\nprotocol claims to be compatible with. For example, Chien [10] categorized\nRFID mutual authentication protocols into four classes, namely, full-fledged,\nsimple, lightweight, and ultra lightweight. EPC-C1G2-friendly protocols support only the last two categories when PAP uses a hash function and a random number generator that are supported by the first two categories only.\nThe criticisms of these assumptions are summarized in two views: 1)\nconceptual view (to analyze the design incompatibilities) and 2) operation\nview (to examine inaccuracies within the implementation assumptions). We\nexplain these views below.\nConceptual view: PAP aims to provide authentication and privacy for the\ntag when it resides inside or outside the store using the privacy bit.\nMore precisely, the authors ensure these by not sending the tag's ID\noutside the store. When the realization of the privacy bit is technically straightforward, its activeness against rouge readers is questionable [22, 23]. PAP categorizes readers into three types, namely, inventory, checkout, and return readers. An inventory reader is capable\nof querying a tag, but is not connected to a database. Nevertheless,\nthis assumption is mistaken because these readers will not be able to\nauthenticate (legitimate or dishonest) tags and, therefore, counterfeit\ntags are never detected. This is claimed to be the only difference between the inventory reader and the other two discriminated readers.\nIn fact, the other two readers have the same capabilities, but have dif6\n\n\fferent label names. On the other hand, PAP is disseminated into four\nsub-protocols. This dissemination is unnecessary when there is one\nprotocol with different states. In-store and out-store sub-protocols are\nno more than the first part of the protocol. The return sub-protocol is\na special case of the original checkout sub-protocol when the privacy\nbit value is equal to one and, accordingly, tags send a numerical generic\nname instead of the tag's ID. Finally, PAP aims to lessen the cost of\nthe tags by sending the random value nt once at the beginning of every\nsub-protocol so that the tag would not need further programming for\neach sub-protocol. Although this might be true when using the four\nsub-protocols of PAP, it does not, however, reduce the initial cost of the\ntag. More precisely, it also does not justify the relatively high cost of\nimplementing on-chip of low-cost tags a secure hash function [13, 14].\nOperation view: Given that PAP was designed for RFID tags, capable\nof computing a secure hash function, PAP cannot be implemented on\nEPC-C1G2 tags, as claimed by the authors. Specifically, EPC-C1G2\nlow-cost tags do not support hash functions; it only supports simple operations, a 16-bit cyclic redundancy check, and a 16-bit pseudorandom\nnumber generator. Furthermore, the authors state that the short-range\ntransmission between a reader and a tag provides a secure channel because an adversary cannot get in-between. This assumption is contrary\nto most studies on the security of channels, where it is commonly assumed that an adversary is capable of eavesdropping on the forward\n(reader-to-tag) and backward (tag-to-reader) channels [15, 16]. The\nauthors misconstrue this assumption based on studies implemented on\n7\n\n\fdifferent types of tags, and mostly on different application areas or\nmodels than the ones proposed in the paper (e.g., place-on readers\nwhere the distance between the tagged object, such as contactless ID\ncards, and the reader allows no such space for malicious readers to be\nplaced in the middle). Nevertheless, in the applications referred to in\nPAP, the nature of the objects holding the tags and real-life implementation scenarios cannot support this assumption. As such, the protocol\npresumes that the store ensures extra security measures to prevent any\nreader from getting inside the store, and that is unacceptable for publicrelated applications (e.g., Wal-Mart). It is also unrealistic to exclude\neavesdropping attacks for the same reason, because an adversary could\nbe outside the store and still be able to eavesdrop on a tag inside the\nstore when the privacy bit value is zero. To the best of our knowledge,\nthere are no proper ways to detect or prevent malicious readers from\ngetting inside the store (remember, we are using non-secure and public radio channel). Furthermore, PAP claims that real-time message\ncompromising (i.e., interception/alteration) is difficult and is therefore\ndiscarded. However, numerous studies [17, 18, 19, 20] considered it an\neffective threat in many applications, giving it an important role in\nprotocol design.\n3.1. Tractability Attacks\nOne of the main concerns linked to privacy is the location-privacy or\ntractability protection, which indicates that unauthorized readers are unable\nto identify the location of the tag (or the tag's holder) by tracing the tag's\ntransmitted data. PAP uses strong cryptographic primitives on the tag,\n8\n\n\fsuch as a pseudorandom number generator and a hash function, that are\nconsidered relatively costly (especially the latter) in terms of gate equivalents\n(circuit area), and whose support increases significantly in the final cost of the\nchip. The use of these primitives should offer a highly non-traceable protocol.\nNevertheless, PAP does not fully utilize the computing capabilities that are\nsupported on-chip of the tag and prefers efficiency over security in some of its\nsub-protocols (i.e., in-store and out-store sub-protocols). The check-out and\nreturn sub-protocols are designed weakly and are vulnerable to traceability\nattacks despite using random numbers and computing authentication tokens\nby running a hash function. The traceability deficiencies are described in the\nsections below.\n1. In the in-store and out-store protocols, the tag always sends fixed values\ncorresponding to the tag's ID and tag names, respectively. In the\nformer, the tag's holder can be tracked because the ID is unique and\nconstant. In the latter, tag name is constant but not a unique value.\nNevertheless, the tag's holder can be tracked using constellations of\ntag names that are unequivocally linked to a specific user. The use of\nthe random numbers, nt , avoids further programming in the different\nsub-protocols. However, in these sub-protocols, the nt value is not\nused for any security purpose. Furthermore, the security of these subprotocols depends solely on the cover-coding protection mechanism,\nwhich is considered completely ineffective and insecure [21] compared\nwith the use of the hash function \u2013 specially when the hash function\nis used properly. More precisely, the use of a cover-coding mechanism\ndoes not protect the values transmitted by the tag (i.e., ID or tag\n9\n\n\fname). In fact, the tag is insecure and is traceable if an attacker can\neavesdrop on the forward or backward channels, which is the most\ncommon assumption in RFID systems.\n2. In the check-out and return sub-protocols, the adversary can track the\ntag by setting one of the random numbers used in the protocol (i.e.\nnt or nr ) to a constant value \"c\". There are two alternatives; we can\ntrack either the reader's answer or the tag's answer. In a forwardchannel tractability attack, the adversary can intercept the tag's reply\nto the reader's query. Then, he/she replaces nt with constant value\nc, and finally forwards the message (ID/name, c) to the reader. The\nrest of the protocol would conclude normally. We emphasize here that\nthe hashed value H1 is the same every time the attack is executed\nbecause the adversary fixes nt to c (H1 = hash(c, k)). If the adversary\nruns the attack twice, as illustrated in Figure (2), he/she is able to\ntrack the tag by checking the equality between the H1 values. In the\nbackward-channel tractability attack, the reader receives the tag's reply\non its query, hashes nt (H1 = hash(nt , k)), and sends the hashed value\naccompanied by a new random number nr to the tag (H1 , nr ). The\nadversary intercepts the message, replaces nr with a c constant and\nforwards the message (H1 , c) to the tag. The rest of the protocol would\nconclude normally. As the adversary sets nr to c, the hashed value H2\nis the same every time the attack is executed, and the adversary is able\nto track the tag by checking the equality between H2 values. Figure 3\nshows the two executions of the described attack.\n\n10\n\n\f3.2. Impersonation Attacks\nPAP claims that an adversary cannot impersonate a tag because the value\nof the secret key k is never sent over the insecure radio channel and that the\nadversary cannot compute the authentication tokens (H2 = hash(nr , k)).\nHowever, an adversary can impersonate a tag using the answers provided\nby a second legitimate reader. More precisely, the adversary exploits the\nsymmetry of the messages computed by the reader and the tag in the PAP.\nIn other words, the values of H1 = hash(nt , k) and H2 = hash(nr , k) have\nthe same structure. We describe the attack in detail below.\nAn impersonation attack can be conducted between an adversary and\ntwo legitimate readers. The second reader generates the messages of the\nsupplanted tag. We assume that before launching the attack, the adversary\neavesdrops on the ID/name of its target tag. First, reader1 sends a request\nquery to the adversary. The adversary replies with {ID/name, nt }, where\nnt represents an arbitrary random value. Then, reader1 computes its authentication token H1 , generates a random value nr , and sends both values\nto the adversary. The adversary simulates that he/she received a request\nfrom reader2 and sends the {ID/name, nr }. The adversary uses the random\nnumber nr received from reader1 . The reader2 computes its authentication\ntoken (H1\u2217 = hash(nr , k)) and sends it to the adversary. Finally, the adversary forwards H1\u2217 value to reader1 . The reader1 checks the token received\nand authenticates the adversary. So, impersonation is viable by forwarding\nmessages of a second legitimate reader and without disclosing the secret key\nof the tag. The attack is illustrated in Figure 4.\n\n11\n\n\f4. Conclusions\nWe introduced a vulnerability analysis of PAP for RFID tags. As shown\nin the paper, the assumption that PAP is an EPC-C1G2-friendly protocol\nis not well founded due to the excessive resources needed to support a hash\nfunction on board. Therefore, the proposed protocol is not suitable for lowcost RFID tags.\nThe paper first scrutinized the basis on which the protocol has been\nfounded and then showed how two of its main security objectives can be compromised. More precisely, the assumptions determining how PAP provides\na secure (privacy and authentication) RFID protocol have been discussed\nand determined to be incorrectly assumed during the design of the protocol.\nThen, we analyzed the protocol for traceability attacks, after which we illustrated respective attacks on the forward and backward channels. Finally, we\nconducted an impersonation attack by forwarding the messages computed by\na second legitimate reader. In summary, protocol designers should check carefully a protocol's compatibility with standards (e.g., EPC-C1G2 or ISO/IEC\n18006-C). Moreover, the design of a secure and efficient RFID authentication\nprotocol remains to be a challenge and not a completely resolved issue.\nReferences\n[1] Liu, A.X. and L.R.A. Bailey, PAP: A privacy and authentication protocol for passive RFID tags. Computer Communications, 2009. 32(7-10):\np. 1194-1199.\n[2] Juels, A., RFID security and privacy: A research survey. IEEE Journal\non Selected Areas in Communications, 2006. 24(2): p. 381-394.\n12\n\n\f[3] Knospe, H. and H. Pohl, RFID security. Information Security Technical\nReport, 2004. 9(4): p. 39-50.\n[4] P. Peris-Lopez, J. Hernandez-Castro, J. Estevez-Tapiador, and A. Ribagorda, \"RFID systems: A survey on security threats and proposed\nsolutions,\" in Personal Wireless Communications: Springer, 2006, pp.\n159-170.\n[5] A. Mitrokotsa, M. R. Rieback, and A. S. Tanenbaum. Classifying RFID\nAttacks and Defenses. Springer Science & Business Media, LLC, 2009.\n[6] Jeon, J.O., et al., Strong Authentication Protocol for RFID Tag Using\nSHA-1 Hash Algorithm. Computational Science and Its ApplicationsICCSA 2007, 2007: p. 634-643.\n[7] Chatmon, C., T. van Le, and M. Burmester, Secure anonymous RFID\nauthentication protocols. Florida State University, Department of Computer Science, Tech. Rep, 2006.\n[8] Ohkubo, M., K. Suzuki, and S. Kinoshita. Cryptographic approach to\n\"privacy-friendly\" tags. in RFID Privacy Workshop,MIT, MA, USA,\n2003.\n[9] Lee, S., T. Asano, and K. Kim. RFID mutual authentication scheme\nbased on synchronized secret information. in Symposium on Cryptography and Information Security 2006.\n[10] Chien, H.Y., SASI: A new ultralightweight RFID authentication protocol providing strong authentication and strong integrity. IEEE Transactions on Dependable and Secure Computing, 2007. 4(4):\n13\n\n\f[11] EPCglobal, EPCglobal website, Available from: http:// www. EPCglobalinc .org.\n[12] International Organization for Standards (ISO), ISO/IEC 18000-6: Radio frequency identification for item management \u2013 Part 6: Parameters\nfor air interface communications at 860 MHz to 960 MHz.\n[13] M. Feldhofer and C. Rechberger, \"A case against currently used hash\nfunctions in RFID protocols\", in Hand. of RFIDSec'06, 2006.\n[14] A. Bogdanov, G. Leander, C. Paar, A. Poschmann, Matt J.B. Robshaw,\nand Y. Seurin. \"Hash functions and RFID tags: mind the gap\", in Proc.\nof CHES'08, vol. 5154 of LNCS, pp. 283\u2013299, 2008.\n[15] Ohkubo, M., K. Suzuki, and S. Kinoshita. Cryptographic approach to\n\"privacy-friendly\" tags. in RFID Privacy Workshop2003.\n[16] Weis, S., et al., Security and privacy aspects of low-cost radio frequency\nidentification systems. Security in Pervasive Computing, 2004: p. 50-59.\n[17] Seo, Y., et al. A lightweight protocol enabling ownership transfer and\ngranular data access of RFID tags. in ye Symposium on Cryptography\nand Information Security Sasebo 2007.\n[18] van Deursen, T. and S. Radomirovic, Security of RFID Protocols-A Case\nStudy. Electronic Notes in Theoretical Computer Science, 2009. 244: p.\n41-52.\n[19] Yang, J., K. Ren, and K. Kim. Security and Privacy on Authentication\nProtocol for Low-cost RFID. 2005.\n14\n\n\f[20] Lim, C. and T. Kwon, Strong and robust RFID authentication enabling\nperfect ownership transfer. Information and Communications Security,\n2006: p. 1-20.\n[21] P. Peris-Lopez, J. C. Hernandez-Castro, J. M. Estevez-Tapiador, and A.\nRibagorda. \"RFID Specification Revisited\". Book Chapter in The Internet of Things: From RFID to the Next-Generation Pervasive Networked\nSystems, 6:pp.127156. Auerbach Publications, Taylor & Francis Group,\n2008.\n[22] A. Juels and J. Brainard, \"Soft blocking: Flexible blocker tags on the\ncheap\", in Proceedings of the 2004 ACM workshop on Privacy in the\nelectronic society 2004, pp. 1-7.\n[23] K. Nohl and D. Evans, \"Quantifying information leakage in tree-based\nhash protocols (short paper)\", Information and Communications Security, pp. 228-237, 2006.\n\n15\n\n\fFigure 1: PAP sub-protocols\n\n16\n\n\fFigure 2: Forward-channel tractability attack\n\nFigure 3: Backward-channel tractability attack\n\n17\n\n\fFigure 4: Impersonation attack\n\n18\n\n\f"}