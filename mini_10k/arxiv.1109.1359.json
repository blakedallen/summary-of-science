{"id": "http://arxiv.org/abs/1109.1359v1", "guidislink": true, "updated": "2011-09-07T05:57:20Z", "updated_parsed": [2011, 9, 7, 5, 57, 20, 2, 250, 0], "published": "2011-09-07T05:57:20Z", "published_parsed": [2011, 9, 7, 5, 57, 20, 2, 250, 0], "title": "Representation for alphanumeric data type based on space and speed case\n  study: Student ID of X university", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1109.5869%2C1109.4814%2C1109.1182%2C1109.0003%2C1109.1816%2C1109.4779%2C1109.5356%2C1109.6274%2C1109.3251%2C1109.0363%2C1109.1442%2C1109.5378%2C1109.6325%2C1109.3624%2C1109.3690%2C1109.2945%2C1109.0735%2C1109.6564%2C1109.2829%2C1109.1359%2C1109.1027%2C1109.5014%2C1109.4648%2C1109.3544%2C1109.2226%2C1109.6273%2C1109.4464%2C1109.4903%2C1109.4738%2C1109.3891%2C1109.0433%2C1109.4244%2C1109.5077%2C1109.4417%2C1109.2706%2C1109.4567%2C1109.4162%2C1109.5972%2C1109.6419%2C1109.5662%2C1109.0081%2C1109.5166%2C1109.0220%2C1109.1522%2C1109.4325%2C1109.2562%2C1109.6696%2C1109.1891%2C1109.5249%2C1109.0502%2C1109.2448%2C1109.4249%2C1109.3417%2C1109.6495%2C1109.4816%2C1109.1566%2C1109.1059%2C1109.3884%2C1109.0757%2C1109.4910%2C1109.3651%2C1109.4606%2C1109.0128%2C1109.0913%2C1109.1944%2C1109.2274%2C1109.1225%2C1109.5495%2C1109.6197%2C1109.4695%2C1109.0930%2C1109.1896%2C1109.5107%2C1109.3681%2C1109.5060%2C1109.3324%2C1109.6246%2C1109.2210%2C1109.2154%2C1109.4984%2C1109.5741%2C1109.6455%2C1109.4792%2C1109.6376%2C1109.1069%2C1109.5393%2C1109.1829%2C1109.1167%2C1109.5551%2C1109.0287%2C1109.2206%2C1109.0024%2C1109.6007%2C1109.4275%2C1109.6319%2C1109.4654%2C1109.6852%2C1109.2614%2C1109.6194%2C1109.3932%2C1109.1012&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Representation for alphanumeric data type based on space and speed case\n  study: Student ID of X university"}, "summary": "ID is derived from the word identity, derived from the first two characters\nin the word. ID is used to distinguish between an entity to another entity.\nStudent ID (SID) is the key differentiator between a student with other\nstudents. On the concept of database, the differentiator is unique. SID can be\nnumbers, letters, or a combination of both (alphanumeric). Viewed from the\ndaily context, it is not important to determine which a SID belongs to the type\nof data. However, when reviewed on database design, determining the type of\ndata, including SID in this case, is important. Problems arise because there is\na contradiction between the data type viewed from the data characteristic and\npractical needs. Type of data for SID is a string, if it is evaluated from the\nbasic concepts and its characteristic. It is acceptable because SID consists of\na set of numbers which will not be meaningful if applied arithmetic operations\nlike addition, subtraction, multiplication and division. But in terms of\ncomputer organization, data representation type will determine how much data\nspace requirements, speed of access, and speed of operation. By considering the\nconstraints of space and speed on the experiments conducted, SID is better\nexpressed as an integer rather than a set of characters.\n  KEYWORDS aphanumeric,representation, string, integer, space, speed", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1109.5869%2C1109.4814%2C1109.1182%2C1109.0003%2C1109.1816%2C1109.4779%2C1109.5356%2C1109.6274%2C1109.3251%2C1109.0363%2C1109.1442%2C1109.5378%2C1109.6325%2C1109.3624%2C1109.3690%2C1109.2945%2C1109.0735%2C1109.6564%2C1109.2829%2C1109.1359%2C1109.1027%2C1109.5014%2C1109.4648%2C1109.3544%2C1109.2226%2C1109.6273%2C1109.4464%2C1109.4903%2C1109.4738%2C1109.3891%2C1109.0433%2C1109.4244%2C1109.5077%2C1109.4417%2C1109.2706%2C1109.4567%2C1109.4162%2C1109.5972%2C1109.6419%2C1109.5662%2C1109.0081%2C1109.5166%2C1109.0220%2C1109.1522%2C1109.4325%2C1109.2562%2C1109.6696%2C1109.1891%2C1109.5249%2C1109.0502%2C1109.2448%2C1109.4249%2C1109.3417%2C1109.6495%2C1109.4816%2C1109.1566%2C1109.1059%2C1109.3884%2C1109.0757%2C1109.4910%2C1109.3651%2C1109.4606%2C1109.0128%2C1109.0913%2C1109.1944%2C1109.2274%2C1109.1225%2C1109.5495%2C1109.6197%2C1109.4695%2C1109.0930%2C1109.1896%2C1109.5107%2C1109.3681%2C1109.5060%2C1109.3324%2C1109.6246%2C1109.2210%2C1109.2154%2C1109.4984%2C1109.5741%2C1109.6455%2C1109.4792%2C1109.6376%2C1109.1069%2C1109.5393%2C1109.1829%2C1109.1167%2C1109.5551%2C1109.0287%2C1109.2206%2C1109.0024%2C1109.6007%2C1109.4275%2C1109.6319%2C1109.4654%2C1109.6852%2C1109.2614%2C1109.6194%2C1109.3932%2C1109.1012&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "ID is derived from the word identity, derived from the first two characters\nin the word. ID is used to distinguish between an entity to another entity.\nStudent ID (SID) is the key differentiator between a student with other\nstudents. On the concept of database, the differentiator is unique. SID can be\nnumbers, letters, or a combination of both (alphanumeric). Viewed from the\ndaily context, it is not important to determine which a SID belongs to the type\nof data. However, when reviewed on database design, determining the type of\ndata, including SID in this case, is important. Problems arise because there is\na contradiction between the data type viewed from the data characteristic and\npractical needs. Type of data for SID is a string, if it is evaluated from the\nbasic concepts and its characteristic. It is acceptable because SID consists of\na set of numbers which will not be meaningful if applied arithmetic operations\nlike addition, subtraction, multiplication and division. But in terms of\ncomputer organization, data representation type will determine how much data\nspace requirements, speed of access, and speed of operation. By considering the\nconstraints of space and speed on the experiments conducted, SID is better\nexpressed as an integer rather than a set of characters.\n  KEYWORDS aphanumeric,representation, string, integer, space, speed"}, "authors": ["Agus Pratondo"], "author_detail": {"name": "Agus Pratondo"}, "author": "Agus Pratondo", "links": [{"title": "doi", "href": "http://dx.doi.org/10.5121/ijdms.2011.3303", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/1109.1359v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1109.1359v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.DB", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.DB", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1109.1359v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1109.1359v1", "arxiv_comment": null, "journal_reference": null, "doi": "10.5121/ijdms.2011.3303", "fulltext": "International Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n\nREPRESENTATION FOR ALPHANUMERIC DATA\nTYPE BASED ON SPACE AND SPEED\nCASE STUDY: STUDENT ID OF X UNIVERSITY\nAgus Pratondo\nDepartment of Information Technology, Telkom Polytechnic, Bandung, Indonesia\nagus@politel.ac.id\n\nABSTRACT\nID is derived from the word identity, derived from the first two characters in the word. ID is used to\ndistinguish between an entity to another entity. Student ID (SID) is the key differentiator between a\nstudent with other students. On the concept of database, the differentiator is unique. SID can be numbers,\nletters, or a combination of both (alphanumeric). Viewed from the daily context, it is not important to\ndetermine which a SID belongs to the type of data. However, when reviewed on database design,\ndetermining the type of data, including SID in this case, is important. Problems arise because there is a\ncontradiction between the data type viewed from the data characteristic and practical needs. Type of\ndata for SID is a string, if it is evaluated from the basic concepts and its characteristic. It is acceptable\nbecause SID consists of a set of numbers which will not be meaningful if applied arithmetic operations\nlike addition, subtraction, multiplication and division. But in terms of computer organization, data\nrepresentation type will determine how much data space requirements, speed of access, and speed of\noperation. By considering the constraints of space and speed on the experiments conducted, SID is better\nexpressed as an integer rather than a set of characters.\n\nKEYWORDS\naphanumeric,representation, string, integer, space, speed\n\n1. INTRODUCTION\nX University currently has a number of students about 3600 students. As a higher education that\nimplements Information and Communication Technology (ICT), X University has an Academic\nInformation System to manage all activities related to academic, good facilities and\ninfrastructure. All data relating to the academic process is stored in a Database Management\nSystem that integrates with various applications.\nStudent is an entity which has a large amount totally and continue to grow from time to time.\nVarious attributes of the entity are attached to the student and the total are 46 attributes. Table 1\nbelow describes some attributes attached to a student.\n\nDOI: 10.5121/ijdms.2011.3303\n\n34\n\n\fInternational Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n\nTable 1. The Atributes of A Student\nNo\n1\n2\n3\n4\n5\n6\n...\n46\n\nField\nSID\nUNIT_CODE\nNAME\nPLACE_BIRTH\nDATE_BIRTH\nSEX\n...\nPRIM_CLASS\n\nType\nvarchar(10)\nvarchar(100)\nvarchar(255)\nvarchar(100)\nDate\nchar(1)\n...\nvarchar(100)\n\nIn addition, the amount of data students continue to increase each year as new admissions. The\nfollowing table shows the growth significantly from year to year since 2007.\nTable 2. Student Body of X University\nYear\n2007\n2008\n2009\n2010\n\nComp. Acc.\n65\n157\n122\n121\n\nDepartment\nComp. Eng.\n150\n380\n337\n328\n\nInf. System\n207\n593\n486\n422\n\nTotal\n422\n1130\n945\n871\n\nAcademic Information System of X University can serve a variety of daily academic process.\nHowever, several access for certain web pages are still slow and need to be improved for better\nperformance.\nAn important issue in the improvement of the Academic Information System is Database design\nimprovement. In the existing database structure, Student ID (SID) which is the primary key for\nthe entity of student and became an important key in table operation of database manipulation,\nis still represented as strings. SID is a set of alphanumeric digits that indicate the personal\nidentity of a student. SID contains of information of the level degree, the study program, the\nentry year, and the serial number for a certain year.\nAlphanumeric is a series of numbers but it does not have semantics value as a number. Thus,\nalphanumeric data should not be given arithmetic operators such as addition, subtraction,\nmultiplication, and division. For example, the addition operation SID, SID multiplication with a\ncertain number, or find the average of SID at a particular class will not give any meaning.\nThis paper will discuss which data type should be chosen for alphanumeric by using SID as case\nstudy. The considerations are based on performance speed of the process and the use of storage\nspace.\n\n2. DATA REPRESENTATION\nAll data on the computer basically expressed as binary numbers which are called bits (derived\nfrom the word binary digits), such as number in base 2 consisting of the digits 0 and 1. Bit\nrepresentation is the simplest representation in number systems when implemented in electronic\n35\n\n\fInternational Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n\ncircuits. The difference values 0 and 1 can be identified by the presence or absence of electric\ncurrent with a certain threshold limit [5-12].\nIn the representation of data, units used for a number of bits of data are bytes, where 1 byte\nequals to 8 bits of data. All digital data on a computer are represented by bytes of data. The\nmore bytes of data are used, the larger the data can be represented. For example, there are n-bit\nvector as follows:\nB = bn-1bn-2 . . . b1b0\nwhere bi = 0 or 1 for 0 < i < n-1, then this vector can represent unsigned integer V in the range 0\nto 2n \u2013 1. The value of V in base 10 can be calculated by applying the following formula:\n\u0be1\n\nV(B) = \u0dcc\u0bdc\u0b40\u0b35 b\u0b6c\u0b3f\u0b67 \u00d7 2\u0be1\u0b3f\u0bdc\n\n(1)\n\nThe description of 1 byte data can be viewed at the following figure:\n1 0 1 0 0 0 1 1\n7\n\n6\n\n5\n\n4\n\n3\n\n2\n\n1\n\n0\n\nFigure 1. A Byte of Bits\nIn the figure 1, an integer that is represented by 1 byte data with a value 10100011 in base 2\n(binary) can be calculated the value in base 10 (decimal) as follows:\n101000112 = 1x27 +0x26 +1x25 +0x24\n+0x23 + 0x22 +1x21 +1x20\n= 128+0+32+0+0+0+2+1\n= 16310\nThe longer the byte representation of the data, the greater the value that will represent, but the\ngreater the storage media will be required.\nThe following table descibes the representation of integers in My SQL[2].\nTable 3. Representation of Integer in MySQL\nType Data\nTINYINT\nSMALLINT\nMEDIUMINT\nINT\nBIGINT\n\nByte\n1\n2\n3\n4\n8\n\nEach integer data type consists of two types of numbers which are represented, ie Signed Integer\n(S / I) and Unsigned Integer (U / I). Each affects the value that represents as follows (Min =\nMinimum, Max = Maximum):\n\n36\n\n\fInternational Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n\nTable 4. Sign Integer in MySQL\nNo\n\nInteger Type\n\nSigned Integer (S/I)\nMaximum\n-128\n127\n-32768\n32767\n-8388608\n8388607\n-2147483648\n2147483647\n-9223372036854775808\n9223372036854775807\nMinimum\n\n1\n2\n3\n4\n5\n\nTINYINT\nSMALLINT\nMEDIUMINT\nINT\nBIGINT\n\nTable 5. Unsign Integer in MySQL\nNo\n1\n2\n3\n4\n5\n\nInteger Type\nMinimum\n0\n0\n0\n0\n0\n\nTINYINT\nSMALLINT\nMEDIUMINT\nINT\nBIGINT\n\nUnsigned Integer (U/I)\nMaximum\n255\n65535\n16777215\n4294967295\n18446744073709551615\n\nMySQL recognizes not only integer data type, but also a string data type that is implemented as\na CHAR and VARCHAR[1]. Both are used to store strings. The difference is how to represent\nthe data. VARCHAR has additional attributes that will store the string length, while CHAR\ndoes not have this attribute. The length of the string that is stored by CHAR is always a fixed\nlength. CHAR and VARCHAR types are declared by including a maximum length of characters\nthat can be saved. For example, VARCHAR (30) means that total characters stored is maximum\n30. The fixed length of CHAR is defined once when the table strucutre is created. CHAR\nlength is in the range 0 to 255. While VARCHAR length varies according to length of its stored\ndata. The length of VARCHAR is in the range 0 to 255 for MySQL 5.0.3 and 0 up to 65,535 for\nthe next version. In principle, VARCHAR stores data string plus one or two bytes. The bytes are\nused to save the information of string length. If the length of string is less than 255, VARCHAR\nwill require only 1 byte, but if the characters are more than or equal to 255, it will require two\nbytes to store the string length. The following table describes the differences between the\nCHAR (4) and VARCHAR (4). Because the length is less then 255, VARCHAR requires a\nsingle byte addition in its representation.\nTable 6. The Data Representation of CHAR(4)\nData\n``\n`ab`\n`abcd`\n`abcdefgh`\n\nCHAR(4)\n`\n`\n`ab `\n`abcd`\n`abcd`\n\nJumlah Byte\n4\n4\n4\n4\n\nTable 7. The Data Representation of VARCHAR(4)\nData\n``\n`ab`\n`abcd`\n`abcdefgh`\n\nVARCHAR(4)\n`\n`\n`ab `\n`abcd`\n`abcd`\n\nJumlah Byte\n1\n3\n5\n5\n37\n\n\fInternational Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n\n2. THE DATA REPRESENTATION OF STUDENT ID (SID)\nAlphanumeric representation is interesting to be explored because it may effect to access speed\nand disk space usage. In case of Student ID (SID), alphanumeric of SID has some rule as\nfollows:\n1. It contains 8 digit.\n2. The first digit represents the level degree, as follows:\n3 : for Diploma 3\n4 : for Diploma 4\n3. The second and third digits represent the study program, as follows:\n01 : Information System\n02 : Computer Engineering\n03 : Computerization Accountancy\n4. The fourth and fifth digits represent the entry year, as follows:\n08 : Year 2008\n09 : Year 2009\n10 : Year 2010\n5. The sixth, seventh, and eighth digit represent the sequence in a certian year.\n001 : number 1\n002 : number 2\n189 : number 189\n\nSID, basically is an alphanumeric. In the concept of data, it should be expressed as a set\nof characters, which is represented as a VARCHAR in MySQL. In Academic\nInformation System of X University, SID is represented by VARCHAR(10).\n\n3. COMPARISON OF STORAGE SPACE\nSID can be represented into alphanumeric data in MySQL as CHAR(8) or VARCHAR(8) as a\nsequence of characters. If this alphanumeric is represented as integers, it can be stored by\nconsidering the range of integer values, according to the integer type. Integer values to represent\nSID is the largest integer that can be built with 8 digits.\n* * * * * * * *\n1 2 3 4 5 6 7 8\nFigure 2. A Sequence of Number\nThe largest integer that can be formed from 8 single digits occurs if each single number for each\n* has the maximum value. The maximum value of one single digit is 9, so the maximum value\nof the integer representation for the SID is 99,999,999.\nBy considering the range limits of each integer, the available integer representation is described\nas follows:\nTable 8. The Representation of 99.999.999 in MySQL\nData Type\nIn the Range\nRequired Bytes\nTINYINT\nNo\n1\nSMALLINT\nNo\n2\nMEDIUMINT\nNo\n3\nINT\nYes\n4\nBIGINT\nYes\n8\n38\n\n\fInternational Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n\nBy considering the available integers,CHAR, and VARCHAR, the required bytes can be\ncompared as afollows:\nTable 9. SID Representation\nData\n`99999999`\n`99999999`\n99999999\n99999999\n\nData Type\nCHAR(8)\nVARCHAR(8)\nINT\nBIGINT\n\nRequired Bytes\n8\n9\n4\n8\n\nFrom table 9, it can be infered that the minimum required bytes for SID are 4 bytes. It\noccurs when the data type is INT. This type is the most efficient compared with other\ntype. The efficiency for SID which is represented by INT reaches 50% compared to\nCHAR(8), and 56% compared to VARCHAR(8). Based on the case study in table 1, the\nefficiency of INT reachs 64% compared to VARCHAR(10).\n\n4. COMPARISON OF SPEED ACCESS\nViewed from the use of storage space, data representation of SID by using integer is more\nefficient. However, another important dimension of quality in web applications is the speed of\naccess. To simulate this access speed, two tables are made to compare the speed between SID as\nVARCHAR (8) and as INT. The structure of the tables is describe as follows:\nTable 10. Table SID_STR\nField\nsid\nname\n\nType\nVARCHAR(8)\nVARCHAR(100)\n\nTable 11. Tabel SID_INT\nField\nsid\nname\n\nType\nINT\nVARCHAR(100)\n\nEach table is filled with the same data. In this experiment, the two tables filled with data as\nmuch as 100,000 with SID sorted from 10100000 to 10200000. Field \"name\" is filled with a\nuniform name for all data. To generate the data for the experiment, the following PHP script is\napplied[3].\n$sid = 10100001;\nwhile ($sid < 10200001){\n$querystring = \"insert into sid_str values ('\".$sid.\"','Ananda\nPutera Perkasa')\";\n$queryint\n= \"insert into sid_int values (\".$sid.\",'Ananda\nPutera Perkasa')\";\n$sid++;\n}\nFigure 2.Code to Generate Data\n39\n\n\fInternational Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n\nFurthermore, Each tables are filled with 100.000 data, then a SELECT query command is\napplied to access to the table with the SID with type VARCHAR (8) and INT. To get data as\naccurate as possible, the total SELECT query in each experiment is set up as much as possible.\nIn this case,the total query is 100.000 commands [4].\nfunction getmicrotime(){\nlist($usec, $sec) = explode(\" \",microtime());\nreturn ((float)$usec + (float)$sec);\n}\n\n$i=0;\n$t1 =0;\n$t2 =0;\nwhile ($i < 100000){\n$q=\"select * from sid_str where sid='10200000'\";\n$time_start = getmicrotime();\nmysql_query($q);\n$time_end = getmicrotime();\n$time = $time_end - $time_start;\n$t1=$t1+$time;\n//INTEGER\n$q=\"select * from sid_int where sid=10200000\" ;\n$time_start = getmicrotime();\nmysql_query($q);\n$time_end = getmicrotime();\n$time = $time_end - $time_start;\n$t2=$t2+$time;\n$i++;\n}\necho \"TOTAL TIME FOR STRING: $t1\";\necho \"TOTAL FOR INTEGER\n: $t2\";\n\nFigure 3.Code to Query The Tables\nFinally, the result of the experiment is listed below:\nTable 12. Test Result\nNo.\n1\n2\n3\n4\n5\n6\n7\n8\n\nSID Type\nVARCHAR(8)\n23,735124826431\n24,585271120071\n23,454295873642\n24,026872873306\n23,368565320969\n23,883385658264\n23,488732099533\n24,059506416321\n\nINT\n23,480888843536\n24,313096523285\n23,258988857269\n23,827021121979\n23,145508527756\n23,567368268967\n23,276761293411\n23,790077209473\n40\n\n\fInternational Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n\n9\n10\n11\n12\n13\n14\n15\n\n23,642956495285\n23,850153207779\n23,538511991501\n23,894111633301\n23,469617605209\n23,740539550781\n24,282388448715\n\n23,390990972519\n23,539158582687\n23,300233840942\n23,704314231873\n23,224228143692\n23,503800630569\n23,967983245850\n\nThe chart for the table above is described as follows:\n\nFigure 4.Query Time Results\nThe graph in Figure 4 shows that the total time for 100.000 query commands on the SID with\ntype VARCHAR (8) located above the SID with the type INT. The meaning of this graph is the\naccess time for the SID with type VARCHAR(8) is longer than that with the type INT.\nThe total time is 357,020033121108 for VARCHAR(8) and 353,290420293808 for INT. The\nefficiency of time using INT data type can be calculated as follows[9]:\n\u07df\n\n=\n=\n\n\u0be7\u0cc7\u0cb2\u0cc3\u0cb4\u0cb9\u0cb2\u0cc3\u123a\u0c34\u123b \u0b3f\u0be7\u0cba\u0cbf\u0cc5\n\u0be7\u0cc7\u0cb2\u0cc3\u0cb4\u0cb9\u0cb2\u0cc3\u123a\u0c34\u123b\n\u0b37\u0b39\u0b3b,\u0b34\u0b36\u0b34\u0b34\u0b37\u0b37\u0b35\u0b36\u0b35\u0b35\u0b34\u0b3c\u0b3f\u0b37\u0b39\u0b37,\u0b36\u0b3d\u0b34\u0b38\u0b36\u0b34\u0b36\u0b3d\u0b37\u0b3c\u0b34\u0b3c\n\u0b37\u0b39\u0b3b,\u0b34\u0b36\u0b34\u0b34\u0b37\u0b37\u0b35\u0b36\u0b35\u0b35\u0b34\u0b3c\n\n\u00d7 100%\n\n= 1,04%\n\nThe calcualtion indicates that in SID, Data Type INT is 1,04 faster than VARCHAR(8).\n\n41\n\n\fInternational Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n\n5. CONCLUSION\nSID data, in this case alfanumeric data type, can be expressed as a string or integer. Seen from\nthe standpoint of numbers, alfanumeric should be represented as a string. However, a practical\napproach shows that the speed and data storage space is more important than the definition of\nnumbers. From the discussion on the comparison of storage space and access speed, the SID\nwill be better if it is represented by an integer (INT) instead of a string (VARCHAR(8)). The\nrepresentation with integer is 54% more efficient than VARCHAR (8) for space. In speed of\naccess, the representation with integer is only 1,04% faster than VARCHAR (8). The integer\ntype is still better than string type. Thus it can be concluded that SID with alphanumeric data\ntype, the data representation using integer is better than that using string.\n\nACKNOWLEDGEMENTS\nThe authors would like to thank Mr. Christanto Triwibisono, for the discusiion about the better\nperformanace of Information System.\n\nREFERENCES\n[1] Anonymous. The CHAR and VARCHAR Type. 2011.\ndoc/refman/5.0/en/char.html, accessed on 3rd December 2010.\n\nURL:\n\nhttp://dev.mysql.com/\n\n[2] Anonymous. Numeric Type. 2000. URL: http://dev.mysql.com/doc/refman/5.0/en/ numerictypes.html, accessed on 5th December 2010.\n[3] A.\nPratondo,Tutorial\nIntegrasi\nPHP\ndi\nMySQL.\n2007.\nURL:\nhttp://direktori.\nicttemanggung.org/index.php?action=downloadfile&filename=tutorial.pdf&directory=BUKUDIGIT\nAL/Database&PHPSESSID=026d99821c54428d2731da5b8fe4a835, accessed on 5th December\n2010.\n[4] R. Ari, Cara Mengetahui Lama Eksekusi (Execution Time) Sebuah Script PHP. 2010. URL:\nhttp://blog.rosihanari.net/cara-mengetahui\n-lama-eksekusi-execution-time-sebuah-script-php\n,\naccessed on 5th December 2010.\n[5] K. Malik, P. Choudhary, \"Software Quality, A Practitioner's Approach\", Tata Mc Graw-Hill\nCompany Limited., New Delhi, 2008\n[6] R.S. Pressman, \"Software Engineering, A Practitioner's Approach, Sixth Edition\", Mc Graw-Hill\nCompanies Inc., New Delhi, 2005\n[7] R.S. Pressman, \"Software Engineering, A Practitioner's Approach, Sixth Edition\", Mc Graw-Hill\nCompanies Inc., New Delhi, 2005\n[8] C. Hamacher, Z. Vranesic, S. Zaky, \"Computer Organization, Fifth Edition\", Mc Graw-Hill\nCompanies Inc., 2002\n[9] D. A. Patterson and John L. Hennessy, \"Computer Organization and Design:\nHardware/Software Interface\", Third Edition, Morgan Kaufman Publisher Inc., 1998.\n\nThe\n\n[10] W. Stallings, \"Computer Organization and Architecture \u2013 Designing for Performance\", Sixth\nEdition, Pearson Education, 2003.\n[11] J. P. Hayes, \"Computer Architecture and Organization\", Third Edition, TataMcGraw Hill, 1998.\n\n42\n\n\fInternational Journal of Database Management Systems ( IJDMS ), Vol.3, No.3, August 2011\n[12] V.P. Heuring, H.F. Jordan, \"Computer Systems Design and Architecture\", Second Edition, Pearson\nEducation, 2004.\n\nAuthors\nAgus Pratondo received his bachelor degree in\nInformatics, Insitute of Technology\nBandung (ITB), in 2001. He has\nseveral industrial experiences in some\njobs position e.g. programming in C,\nPHP, and Manager of Software Quality\nAssurance. He joined the Department\nof Information System, Telkom\nPolytechnic in September 2007. He\nreceived master degree in Information\nTechnology in 2008 from ITB. His\nresearch focused on\ninformation\nsystem, mobile application, and\nforecasting.\n\n43\n\n\f"}