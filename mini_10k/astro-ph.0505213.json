{"id": "http://arxiv.org/abs/astro-ph/0505213v1", "guidislink": true, "updated": "2005-05-10T23:26:25Z", "updated_parsed": [2005, 5, 10, 23, 26, 25, 1, 130, 0], "published": "2005-05-10T23:26:25Z", "published_parsed": [2005, 5, 10, 23, 26, 25, 1, 130, 0], "title": "Hybrid Characteristics: 3D radiative transfer for parallel adaptive mesh\n  refinement hydrodynamics", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=astro-ph%2F0505294%2Castro-ph%2F0505477%2Castro-ph%2F0505408%2Castro-ph%2F0505155%2Castro-ph%2F0505333%2Castro-ph%2F0505573%2Castro-ph%2F0505163%2Castro-ph%2F0505096%2Castro-ph%2F0505476%2Castro-ph%2F0505173%2Castro-ph%2F0505143%2Castro-ph%2F0505041%2Castro-ph%2F0505589%2Castro-ph%2F0505157%2Castro-ph%2F0505544%2Castro-ph%2F0505483%2Castro-ph%2F0505469%2Castro-ph%2F0505197%2Castro-ph%2F0505315%2Castro-ph%2F0505241%2Castro-ph%2F0505300%2Castro-ph%2F0505250%2Castro-ph%2F0505379%2Castro-ph%2F0505583%2Castro-ph%2F0505270%2Castro-ph%2F0505256%2Castro-ph%2F0505095%2Castro-ph%2F0505547%2Castro-ph%2F0505392%2Castro-ph%2F0505349%2Castro-ph%2F0505307%2Castro-ph%2F0505455%2Castro-ph%2F0505430%2Castro-ph%2F0505582%2Castro-ph%2F0505330%2Castro-ph%2F0505385%2Castro-ph%2F0505255%2Castro-ph%2F0505125%2Castro-ph%2F0505246%2Castro-ph%2F0505590%2Castro-ph%2F0505578%2Castro-ph%2F0505002%2Castro-ph%2F0505184%2Castro-ph%2F0505218%2Castro-ph%2F0505103%2Castro-ph%2F0505413%2Castro-ph%2F0505239%2Castro-ph%2F0505051%2Castro-ph%2F0505028%2Castro-ph%2F0505559%2Castro-ph%2F0505066%2Castro-ph%2F0505527%2Castro-ph%2F0505606%2Castro-ph%2F0505131%2Castro-ph%2F0505204%2Castro-ph%2F0505213%2Castro-ph%2F0505216%2Castro-ph%2F0505065%2Castro-ph%2F0505596%2Castro-ph%2F0505171%2Castro-ph%2F0505619%2Castro-ph%2F0505111%2Castro-ph%2F0505571%2Castro-ph%2F0505272%2Castro-ph%2F0505101%2Castro-ph%2F0505388%2Castro-ph%2F0505610%2Castro-ph%2F0505426%2Castro-ph%2F0505031%2Castro-ph%2F0505516%2Castro-ph%2F0505287%2Castro-ph%2F0505290%2Castro-ph%2F0505463%2Castro-ph%2F0505615%2Castro-ph%2F0505182%2Castro-ph%2F0505358%2Castro-ph%2F0505356%2Castro-ph%2F0505240%2Castro-ph%2F0505336%2Castro-ph%2F0505417%2Castro-ph%2F0505492%2Castro-ph%2F0505442%2Castro-ph%2F0505233%2Castro-ph%2F0505364%2Castro-ph%2F0505285%2Castro-ph%2F0505149%2Castro-ph%2F0505367%2Castro-ph%2F0505087%2Castro-ph%2F0505258%2Castro-ph%2F0505254%2Castro-ph%2F0505029%2Castro-ph%2F0505323%2Castro-ph%2F0505359%2Castro-ph%2F0505252%2Castro-ph%2F0505165%2Castro-ph%2F0505110%2Castro-ph%2F0505375%2Castro-ph%2F0505176%2Castro-ph%2F0505260%2Castro-ph%2F0505537%2Castro-ph%2F0505565&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Hybrid Characteristics: 3D radiative transfer for parallel adaptive mesh\n  refinement hydrodynamics"}, "summary": "We have developed a three-dimensional radiative transfer method designed\nspecifically for use with parallel adaptive mesh refinement hydrodynamics\ncodes. This new algorithm, which we call hybrid characteristics, introduces a\nnovel form of ray tracing that can neither be classified as long, nor as short\ncharacteristics, but which applies the underlying principles, i.e. efficient\nexecution through interpolation and parallelizability, of both. Primary\napplications of the hybrid characteristics method are radiation hydrodynamics\nproblems that take into account the effects of photoionization and heating due\nto point sources of radiation. The method is implemented in the hydrodynamics\npackage FLASH. The ionization, heating, and cooling processes are modelled\nusing the DORIC ionization package. Upon comparison with the long\ncharacteristics method, we find that our method calculates the column density\nwith a similarly high accuracy and produces sharp and well defined shadows. We\nshow the quality of the new algorithm in an application to the photoevaporation\nof multiple over-dense clumps. We present several test problems demonstrating\nthe feasibility of our method for performing high resolution three-dimensional\nradiation hydrodynamics calculations that span a large range of scales. Initial\nperformance tests show that the ray tracing part of our method takes less time\nto execute than other parts of the calculation (e.g. hydrodynamics and adaptive\nmesh refinement), and that a high degree of efficiency is obtained in parallel\nexecution. Although the hybrid characteristics method is developed for problems\ninvolving photoionization due to point sources, the algorithm can be easily\nadapted to the case of more general radiation fields.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=astro-ph%2F0505294%2Castro-ph%2F0505477%2Castro-ph%2F0505408%2Castro-ph%2F0505155%2Castro-ph%2F0505333%2Castro-ph%2F0505573%2Castro-ph%2F0505163%2Castro-ph%2F0505096%2Castro-ph%2F0505476%2Castro-ph%2F0505173%2Castro-ph%2F0505143%2Castro-ph%2F0505041%2Castro-ph%2F0505589%2Castro-ph%2F0505157%2Castro-ph%2F0505544%2Castro-ph%2F0505483%2Castro-ph%2F0505469%2Castro-ph%2F0505197%2Castro-ph%2F0505315%2Castro-ph%2F0505241%2Castro-ph%2F0505300%2Castro-ph%2F0505250%2Castro-ph%2F0505379%2Castro-ph%2F0505583%2Castro-ph%2F0505270%2Castro-ph%2F0505256%2Castro-ph%2F0505095%2Castro-ph%2F0505547%2Castro-ph%2F0505392%2Castro-ph%2F0505349%2Castro-ph%2F0505307%2Castro-ph%2F0505455%2Castro-ph%2F0505430%2Castro-ph%2F0505582%2Castro-ph%2F0505330%2Castro-ph%2F0505385%2Castro-ph%2F0505255%2Castro-ph%2F0505125%2Castro-ph%2F0505246%2Castro-ph%2F0505590%2Castro-ph%2F0505578%2Castro-ph%2F0505002%2Castro-ph%2F0505184%2Castro-ph%2F0505218%2Castro-ph%2F0505103%2Castro-ph%2F0505413%2Castro-ph%2F0505239%2Castro-ph%2F0505051%2Castro-ph%2F0505028%2Castro-ph%2F0505559%2Castro-ph%2F0505066%2Castro-ph%2F0505527%2Castro-ph%2F0505606%2Castro-ph%2F0505131%2Castro-ph%2F0505204%2Castro-ph%2F0505213%2Castro-ph%2F0505216%2Castro-ph%2F0505065%2Castro-ph%2F0505596%2Castro-ph%2F0505171%2Castro-ph%2F0505619%2Castro-ph%2F0505111%2Castro-ph%2F0505571%2Castro-ph%2F0505272%2Castro-ph%2F0505101%2Castro-ph%2F0505388%2Castro-ph%2F0505610%2Castro-ph%2F0505426%2Castro-ph%2F0505031%2Castro-ph%2F0505516%2Castro-ph%2F0505287%2Castro-ph%2F0505290%2Castro-ph%2F0505463%2Castro-ph%2F0505615%2Castro-ph%2F0505182%2Castro-ph%2F0505358%2Castro-ph%2F0505356%2Castro-ph%2F0505240%2Castro-ph%2F0505336%2Castro-ph%2F0505417%2Castro-ph%2F0505492%2Castro-ph%2F0505442%2Castro-ph%2F0505233%2Castro-ph%2F0505364%2Castro-ph%2F0505285%2Castro-ph%2F0505149%2Castro-ph%2F0505367%2Castro-ph%2F0505087%2Castro-ph%2F0505258%2Castro-ph%2F0505254%2Castro-ph%2F0505029%2Castro-ph%2F0505323%2Castro-ph%2F0505359%2Castro-ph%2F0505252%2Castro-ph%2F0505165%2Castro-ph%2F0505110%2Castro-ph%2F0505375%2Castro-ph%2F0505176%2Castro-ph%2F0505260%2Castro-ph%2F0505537%2Castro-ph%2F0505565&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We have developed a three-dimensional radiative transfer method designed\nspecifically for use with parallel adaptive mesh refinement hydrodynamics\ncodes. This new algorithm, which we call hybrid characteristics, introduces a\nnovel form of ray tracing that can neither be classified as long, nor as short\ncharacteristics, but which applies the underlying principles, i.e. efficient\nexecution through interpolation and parallelizability, of both. Primary\napplications of the hybrid characteristics method are radiation hydrodynamics\nproblems that take into account the effects of photoionization and heating due\nto point sources of radiation. The method is implemented in the hydrodynamics\npackage FLASH. The ionization, heating, and cooling processes are modelled\nusing the DORIC ionization package. Upon comparison with the long\ncharacteristics method, we find that our method calculates the column density\nwith a similarly high accuracy and produces sharp and well defined shadows. We\nshow the quality of the new algorithm in an application to the photoevaporation\nof multiple over-dense clumps. We present several test problems demonstrating\nthe feasibility of our method for performing high resolution three-dimensional\nradiation hydrodynamics calculations that span a large range of scales. Initial\nperformance tests show that the ray tracing part of our method takes less time\nto execute than other parts of the calculation (e.g. hydrodynamics and adaptive\nmesh refinement), and that a high degree of efficiency is obtained in parallel\nexecution. Although the hybrid characteristics method is developed for problems\ninvolving photoionization due to point sources, the algorithm can be easily\nadapted to the case of more general radiation fields."}, "authors": ["Erik-Jan Rijkhorst", "Tomasz Plewa", "Anshu Dubey", "Garrelt Mellema"], "author_detail": {"name": "Garrelt Mellema"}, "author": "Garrelt Mellema", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1051/0004-6361:20053401", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/astro-ph/0505213v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/astro-ph/0505213v1", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "15 pages, 15 figures, submitted to A&A", "arxiv_primary_category": {"term": "astro-ph", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "astro-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/astro-ph/0505213v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/astro-ph/0505213v1", "journal_reference": null, "doi": "10.1051/0004-6361:20053401", "fulltext": "Astronomy & Astrophysics manuscript no. hybridCharMethodPaper\n(DOI: will be inserted by hand later)\n\nOctober 16, 2018\n\nHybrid Characteristics: 3D radiative transfer for parallel\nadaptive mesh refinement hydrodynamics\n\narXiv:astro-ph/0505213v1 10 May 2005\n\nE.-J. Rijkhorst1 , T. Plewa2,3 , A. Dubey2,3 , and G. Mellema4,1\n1\n2\n3\n4\n\nSterrewacht Leiden, P.O. Box 9513, 2300 RA, Leiden, The Netherlands\nCenter for Astrophysical Thermonuclear Flashes, University of Chicago, 5640 South Ellis Avenue, Chicago, IL 60637\nDepartment of Astronomy & Astrophysics, University of Chicago, 5640 South Ellis Avenue, Chicago, IL 60637\nASTRON, P.O. Box 2, 7990 AA Dwingeloo, The Netherlands\n\nReceived * / Accepted *\nAbstract. We have developed a three-dimensional radiative transfer method designed specifically for use with parallel adaptive\nmesh refinement hydrodynamics codes. This new algorithm, which we call hybrid characteristics, introduces a novel form of\nray tracing that can neither be classified as long, nor as short characteristics, but which applies the underlying principles, i.e.\nefficient execution through interpolation and parallelizability, of both.\nPrimary applications of the hybrid characteristics method are radiation hydrodynamics problems that take into account the\neffects of photoionization and heating due to point sources of radiation. The method is implemented in the hydrodynamics\npackage FLASH. The ionization, heating, and cooling processes are modelled using the DORIC ionization package. Upon\ncomparison with the long characteristics method, we find that our method calculates the column density with a similarly high\naccuracy and produces sharp and well defined shadows. We show the quality of the new algorithm in an application to the\nphotoevaporation of multiple over-dense clumps.\nWe present several test problems demonstrating the feasibility of our method for performing high resolution three-dimensional\nradiation hydrodynamics calculations that span a large range of scales. Initial performance tests show that the ray tracing part\nof our method takes less time to execute than other parts of the calculation (e.g. hydrodynamics and adaptive mesh refinement),\nand that a high degree of efficiency is obtained in parallel execution. Although the hybrid characteristics method is developed\nfor problems involving photoionization due to point sources, the algorithm can be easily adapted to the case of more general\nradiation fields.\nKey words. radiative transfer \u2013 hydrodynamics \u2013 ISM: HII regions \u2013 planetary nebula: general\n\n1. Introduction\nCurrent multi-dimensional parallel adaptive mesh refinement\n(AMR, see Berger & Oliger (1984); Berger & Colella (1989))\nhydrodynamics codes, include more and more physical processes like (self-) gravity, nuclear burning, and composition\ndependent equations of state. Furthermore, a wealth of different solvers for relativistic or magneto-hydrodynamics, have\nbecome available. These codes are in general implemented\nas a modular framework, facilitating a rather straightforward\ninclusion of new physics modules, and are often distributed\nfreely for scientific use (Fryxell et al. 2000; O'Shea et al. 2004;\nNorman 2000).\nSince astrophysical applications are many times dominated\nby radiative processes, it is highly desirable that radiative transfer in some form is included in these codes. Efforts to solve the\nfull equations of radiative transfer (using the Eddington tensor formalism in combination with short characteristics, see\nSend offprint requests to: E.-J. Rijkhorst\ne-mail: rijkhorst@strw.leidenuniv.nl\n\nStone et al. 1992), or in the flux-limited diffusion approximation (Turner & Stone 2001; Whitehouse & Bate 2004), together with the hydrodynamics have been made, but it remains\na complex task to create a parallel algorithm which combines\nradiative transfer and hydrodynamics for multi-dimensional\ncalculations that runs efficiently on todays multi-processor supercomputers (e.g. Hayes & Norman 2003).\nFor many astrophysical applications however, it is not necessary to solve the full set of radiative transfer equations; for\nthese specific cases it is sufficient to just determine the optical\ndepth due to absorption along a line of sight from the source to\na certain location in the computational domain. For the purpose\nof our application of ionization calculations, the optical depth is\nused to determine the photoionization and heating rates. When\nthis is combined with detailed calculations of radiative cooling,\nmany applications come within reach, such as the evolution of\nplanetary nebulae (Frank & Mellema 1994), photoevaporation\nof cosmological mini-haloes (Shapiro et al. 2004), photoevaporation of cometary knots (Lim & Mellema 2003), the evolution of proplyds (e.g. Richling & Yorke 2000), or even simpli-\n\n\f2\n\nE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\nfied scenarios of explosions of massive stars (Janka & Mueller\n1996), to name just a few.\nIn creating a method that combines radiative transfer\nand hydrodynamics, one in general starts with an existing hydrodynamics code and adds the necessary radiation\nprocesses to it (e.g. Mellema et al. 1998; Turner & Stone\n2001; Whitehouse & Bate 2004; Heinemann et al. 2005;\nLiebend\u00f6rfer et al. 2005). In this paper we describe the addiPSfrag\ntion of a new radiative transfer algorithm, which we\ncallreplacements\nhybrid\ncharacteristics, to the parallel 3D AMR hydrodynamics packa\nb\nage FLASH (Fryxell et al. 2000).\nMost of the radiative transfer methods that were success- Fig. 1. Comparing the long (a) and short (b) characteristics\nfully combined with extant hydrodynamics codes apply some method. For the long characteristics method, the closer one gets\nform of ray tracing to find the optical depth at each location to the source, the more rays pass through (approximately) the\nin the computational domain. Apart from ray tracing one could same part of a cell, resulting in a large number of redundant\nalso use statistical methods to find the solution to the radia- calculations. The short characteristics method does not suffer\ntive transfer equations (e.g. Maselli et al. 2003). Yet another from this, since here column densities are interpolated from\napproach could be the use of Fourier transforms (Cen 2002), cells that have been dealt with previously, so only the contribuor unstructured grids (Ritzerveld et al. 2004), to determine the tions to the column density of the short ray sections that pass\nradiation field.\nfrom cell to cell need to be computed.\nFor a one-dimensional, non-AMR, serial code, ray tracing\nbecomes a rather straightforward procedure which requires little second thought. Equivalently, the case of a plane parallel However, none of these methods resulted in parallel algorithms\nradiation field on a Cartesian grid, or a single point-source at used in applications in which radiation is coupled to hydrodythe centre of a spherically symmetric grid, for which all rays namics.\nEfforts to create a parallel radiation hydrodynamrun parallel to a coordinate axis, can be handled quite easily.\nAlthough this type of implementation can readily be used to ics code were presented by e.g. Nakamoto et al. (2001);\nstudy a number of interesting astrophysical phenomena, it is Hayes & Norman (2003), and, more recently, a threestill highly desirable to have a code that can treat the more dimensional method by Heinemann et al. (2005), who degeneral case of a point source of ionizing radiation on a 3D veloped a ray tracing algorithm for decomposed domains.\nCartesian domain. Such more general methods were for ex- However, none of these two methods uses AMR.\nOur presentation begins with Sect. 2 in which we describe\nample implemented by Raga et al. (2000); Richling & Yorke\n(2000); Lim & Mellema (2003), but none of these methods our new method. This method can not be classified as either\nwas explicitly parallelized for distributed memory machines short or long characteristics, but does have the desired properties, namely high parallel and computational efficiency, of\nthough.\nThe aim of this work is to create a characteristics-based ra- its two predecessors. We also compare our method to two rediative transfer method that can handle multiple sources of ion- cent ones which share similar features with ours. Supplemental\nizing radiation in AMR enabled simulations to be run on dis- physics components required by our primary target application\ntributed memory parallel machines. For this, a radical rethink (gas ionization, heating, and cooling) are presented in Sect.\nof the concept of ray tracing is necessary, since, for this type 3, where we give a brief description of the DORIC routines\nof parallel AMR codes, the computational domain is not only (Mellema & Lundqvist 2002, and references therein). In Sect.\nsub-divided into a hierarchy of patches, but is also distributed 4 we first compare the accuracy with which our method calover a number of processors. The first choice one therefore has culates column densities to results obtained with a standard\nto make is which flavour of ray tracing one wants to apply: ei- long characteristics approach. Then we present a pure radiation\nther long or short characteristics. Since these two methods have transport problem aimed at testing the accuracy of the ionizarather different properties when it comes to efficiency and par- tion state calculations and shadow casting. This is followed by\nallelizability, this choice will determine the success of the final a coupled radiation hydrodynamics calculation of a photoevaporation flow. Sect. 5 presents some initial performance results.\nalgorithm.\nWe are aware of a number of other methods that use some Discussion of possible extensions and future applications for\nform of adaptivity to solve the radiative transfer equations: our method together with the conclusions are given in Sect. 6.\nAbel & Wandelt (2002) designed a method where the ray itself is adaptively split into sub-rays, but the underlying grid\n2. Characteristics based radiative transfer\nis still regular. Steinacker et al. (2002) employed second order finite differencing of the full radiative transfer equations When calculating the effects of ionizing radiation due to a point\non an oct-tree AMR grid, and, more recently, Juvela & Padoan source, the radiation field is often dominated by this source, and\n(2005) implemented a ray tracing method for cell-based AMR. one can safely ignore contributions to the radiation field due to\nJessee et al. (1998) presented a radiative transfer method for the ambient gas. This means that the radiative transfer equapatch-based AMR that uses the discrete ordinates approach. tions assume a particularly simple form, since we can take the\n\n\fE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\n3\n\ntotal emission coefficient (and thereby the source function) to\nbe equal to zero. Furthermore, when we also ignore the effects\nof scattering, the solution to the radiative transfer equations for\nthe specific intensity I at location r is given by\nI(r) = I(0) exp(\u2212\u03c4 (r)) ,\n\n(1)\n\nand only depends on the optical depth \u03c4 , which is defined by\n\u03c4 (r) = a0 N (r) ,\n\n(2)\n\nPSfrag replacements\n\nwith a0 the absorption cross section, and N the column density\nat r.\nOnce the optical depth is known at every location in the\ncomputational domain, one can use it to find the ionization,\nheating, and cooling rates, and calculate the ionization state and\ntemperature of the gas. Since, for finite-volume hydrodynamics codes, the computational domain is discretized into cells,\nthe optical depth, or, equivalently, the column density for a certain cell, is found by adding the contributions from all cells that\nlie between the source and the destination cell under consideration. This can be achieved by casting a ray, or long characteristic, from the source to the cell, accumulating contributions\nto the total column density along the way. In case of an AMR\nhierarchy, the algorithm first needs to identify the patches and\ncells contained within the patches that are traversed by the ray,\nand then calculate their local contributions to the total column\ndensity.\nAlthough the method of long characteristics is very accurate, it is also rather inefficient, since, the closer a cell is\nto the source, the more rays cut through (approximately) the\nsame part of the cell, introducing a lot of redundant calculations (see Fig. 1a). A way to eliminate this redundancy is to\nuse the method of short characteristics. Here, the total column\ndensity for a certain cell is calculated by interpolating upwind\nvalues of column density calculated in a previous step, thereby\ncreating some diffusion, but removing the redundant calculations inherent in the long characteristics method (Fig. 1b). For\nthis to work, the appropriate information from upwind cells\nneeds to be available at all times, which means one needs to\nsweep the numerical grid outwards from the source. This necessity of having to traverse the grid in a certain order makes\nthis method intrinsically serial, since values of column density\nin cells now depend on one another. The long characteristics\nmethod does not suffer from this restriction, because here contributions to the total column density from cells cut by a ray do\nnot depend on column densities in other cells. Therefore, the\nlong characteristics method is fully parallelizable, since calculations of contributions to the column density along each ray\ncan be performed independently. For our method we combine\nthe desirable qualities of both these approaches; the idea of interpolation is adopted from the short characteristics method,\nwhile parallelism is obtained following principles of the long\ncharacteristics method.\nIn what follows, we start with a general description of the\nalgorithm used to trace rays on AMR hierarchies. We explain\nhow the long characteristics method is exploited to make this\na parallel algorithm, and where the interpolation comes in to\nincrease the efficiency of the calculation.\n\nprocessor 0\n\nprocessor 1\n\nFig. 2. Two-dimensional example of an AMR hierarchy distributed over two different processors. Here, each patch contains 4 \u00d7 4 cells.\nAlthough our algorithm is designed for three dimensions,\nmany features of its implementation can be explained using\ntwo-dimensional analogues. Whenever the generalization from\ntwo to three dimension is non-trivial, we will supply the full,\nthree-dimensional, description. Since the algorithm is naturally\nsubdivided into a number of steps, we will expand on these separately.\n\n2.1. The distributed computational domain\nConsider a computational domain that is distributed over Np\nprocessors (for a two-dimensional example, see Fig. 2). Rays\nare traced over these different sub-domains and must therefore\nbe split up into independent ray sections. Naturally, these sections are in the first place defined by the boundaries of each\nprocessor's sub-domain, and in the second place by the boundaries of the patches contained within that sub-domain.\nSo first each processor calculates for all the patches it owns\nthe local column densities \u2206N . These local contributions are\nfound by tracing ray sections that originate at the patch faces\nthat are located closest to the source, and that terminate at the\ncentres of the cells (see Fig. 3). Since finding these contributions is a local process, this part of the algorithm is fully parallel, and can be implemented using either the short or long\ncharacteristics method. Details on how the ray tracing for individual patches is implemented are given in Sect. 2.2. Note\nhowever that, before each processor can calculate its \u2206N , it\nneeds to know the physical location of the source, so this information is made available first.\nSince in general rays traverse more than one processor domain, exchange of information has to take place at some point\nin the algorithm. After this communication step has finished,\neach processor should have available all contributions of column density to the rays that terminate in its domain. By interpolating and accumulating all these contributions for all rays,\none ultimately obtains the total column density for each cell\n(see Sect. 2.3.1 for a more elaborate description of the communication patterns involved). Details on the procedure applied to\nfind the patches cut by a ray, and the way in which their contributions to the total column density are subsequently calculated,\nare given in Sect. 2.3.2 and Sect. 2.3.3, respectively.\n\n\f4\n\nreplacements\n\nE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\na\n\nb\n\nFig. 3. Two-dimensional example of ray sections for a single\npatch. Local contributions to the column density are indicated\nby ray sections that terminate at cell centres (a), whereas contributions that are to be communicated between processors, and\nare subsequently used in an interpolation step, terminate at cell\ncorners (b). The source lies outside of the patch in the direction\nof the lower left corner.\n\n2.2. Ray tracing a single patch\nIn this section we will explain how the contribution to the total\ncolumn density along a local ray section in a single patch can\nbe calculated (see Fig. 3 and Fig. 7). As explained above, each\npatch can be dealt with independently, which makes this part\nof the calculation fully parallel.\nThe local column density contributions are calculated from\nX\n\u2206N =\nx(HI)n(H)\u2206s ,\n(3)\ncells\n\nwith x(HI) the ionization fraction of neutral hydrogen, n(H)\nthe hydrogen number density, and \u2206s the physical path length\nthrough the cell.\nThese contributions are found by casting a ray section from\nthe faces of the patch that are located closest to the source towards each cell centre (see Fig. 3). Column density contributions by the cells that lie inside the patch along each section\nare calculated using the 'fast voxel traversal algorithm' from\nAmanatides & Woo (1987) (for more details on this traversal\nmethod, see App. A). Besides ray sections that terminate at cell\ncentres, we also need to calculate the column density contribution for ray sections that lead to cell corners located at those\npatch faces that are farthest away from the source (see Fig. 3).\nThese are the contributions to the column density that need to\nbe communicated (Sect. 2.3.1), and interpolated (Sect. 2.3.3) in\nsubsequent steps of the algorithm.\nCalculating these ray sections is similar to the method of\nlong characteristics, but since the number of cells per patch is\nlow relative to the effective resolution of the full computational\ndomain, this actually does not impair the performance of the\nmethod too much (see Sect. 5 for an analytical comparison of\nour method with the short and long characteristics one for a\nregular grid).\nWe also considered using short instead of long characteristics to ray trace a single patch (see App. B for a description\nof a possible implementation). However, although the short\ncharacteristics method executes presumably more efficiently\n\nthan the long characteristics one, the first requires interpolation, whereas the latter simply adds up column density contributions by individual cells. When the number of cells that\nneed to be traversed is relatively small, as is the case when\nray tracing the single patches, these extra calculations may render the short characteristics method even less efficient than the\nlong characteristics one. Furthermore, the interpolation introduces undesirable diffusion. We therefore decided to implement the more accurate and straightforward ray tracing approach of Amanatides & Woo (1987).\n\n2.3. Hybrid Characteristics\nAs was mentioned above, in AMR hydrodynamics codes, each\nprocessor owns a sub-domain of the computational volume\nwhich is covered by a collection of patches. In order to obtain\nthe total column density for a certain ray that traverses these\nsub-domains, individual local contributions by the patches need\nto be accumulated. This can be interpreted as applying the\nmethod of long characteristics, in this case not to add up contributions from individual cells, but instead to add up contributions from individual patches. So here our algorithm does again\nmake use of long characteristics but now at the level of patches.\nSince each processor knows the direction of its rays and the\nco-ordinates where they terminate, it can find the patches cut\nby these rays and perform the required calculations. For certain flavours of AMR, patches from different refinement levels\nmay partially overlap. In such cases, one would have to make\nsure that only parts of the patches that contain valid data (i.e.,\nthe data from regions resolved to the highest resolution) are\nconsidered in the calculation of the column density. One way\nto eliminate the overlap is to apply a procedure called 'grid homogenization', as described by Kreylos et al. (2002).\nFor the oct-tree type of AMR implemented in FLASH,\npatches from different refinement levels do not overlap. Patches\nare either fully covered by still more refined patches or otherwise contain valid data (the latter are the so-called 'leaf\npatches' in terminology of FLASH). Therefore, a simple check\nto see if a patch is a 'leaf patch' is sufficient to determine\nwhether or not it should contribute to the total column density\nalong the ray.\nOnce the list of patches traversed by a ray is known, we\nloop through it, and determine the local column density contributed by each patch to the total column density for the ray.\nUnless the ray terminates in the patch under consideration, it\nwill in general not exit a patch exactly at a cell corner. This\nmeans that we need to interpolate the values of column density contribution \u2206N , obtained earlier (using either the short\nor long characteristics method as described in Sect. 2.2) at that\nface of the patch where the ray leaves it.\nWe would like to emphasize that, although our method\nmakes use of some form of long characteristics, nowhere in\nthe algorithm is a ray traced on a cell-by-cell basis over the full\ncomputational domain. To the contrary, ray sections are traced\nthrough the cells of each patch and it is these local contributions which are combined through interpolation by performing\nanother ray trace, this time not over cells but over patches, as\n\n\fE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\ndescribed in Sect. 2.3.2. This is why we call our algorithm hybrid characteristics.\nBelow, we first explain how the local column density contributions \u2206N , obtained with one of the methods from Sect.\n2.2, are communicated between processors. Then we describe\nhow the list of patches traversed by a ray is constructed, after\nwhich we show the way in which this list is used to calculate\nthe contributions to the total column density N .\n\n2.3.1. Communicating local column density\ncontributions\nSince, for a parallel AMR hydrodynamics code, the patches are\ndistributed over a number of processors, communication bePSfrag replacements\ntween processors is inevitable at certain points in the algorithm.\nIn particular, as soon as the local contributions to the column\ndensity have been calculated (Sect. 2.2), values of these \u2206N\nlocated at patch faces that are farthest away from the source are\ncommunicated between processors. In this way, each processor\nhas the information regarding the face values of local column\ndensity from all patches in existence (i.e. the so called 'gather'\noperation is used). Apart from these face values, all processors\nalso need information about the location and size of each patch\nand its refinement level in order to determine if a particular\nray cuts a patch. This information is communicated using the\n'gather' operation as well.\nThe size of the messages to be communicated and the memory needed for storage of this information is given by\nPtot pmax S ,\n\nprocessor 0\n5\n\n8\n6 7\n\n3\n\n4\n\n5\n5\n3\n3\n1\n1\n1\n1\n\n8\n6\n4\n4\n1\n1\n1\n1\n\nprocessor 1\n1 6 7\n4 5\n2\n\n1\n\n5\n5\n3\n3\n1\n1\n1\n1\n\n5\n\n8\n3\n\n2\n\n7\n4\n4\n1\n1\n1\n1\n\n1 6\n4\n2\n2\n2\n2\n2\n2\n\n2\n2\n2\n2\n\n2\n2\n2\n2\n\n5\n5\n3\n3\n1\n1\n1\n1\n\n7 8 8\n5 8 8\n2 3 3\n2 3 3\n\n2\n2\n2\n2\n\n5\n5\n3\n3\n1\n1\n1\n1\n\n8\n6\n4\n4\n1\n1\n1\n1\n\n9\n7\n4\n4\n1\n1\n1\n1\n\n14\n12\n10\n10\n2\n2\n2\n2\n\n15\n13\n10\n10\n2\n2\n2\n2\n\n16\n16\n11\n11\n2\n2\n2\n2\n\n16\n16\n11\n11\n2\n2\n2\n2\n\n(4)\n\nwhere Ptot is the total number of processors, pmax is the maximum number of patches in existence on any processor, and S\nis the required storage space per patch. In three dimensions, S\nshould contain the values of \u2206N from the three patch faces\nlocated farthest away from the source, as well as the location,\nsize, and refinement level information of each patch.\nFor an initial test of the performance of the algorithm as\na whole, and of its communication patterns in particular, see\nSect. 5.\n\n2.3.2. Constructing the list of patches cut by a ray\nA straightforward approach to constructing the list of patches\ntraversed by a ray would be to simply check for all patches\nwhether or not they are cut by the ray under consideration.\nSince this would have to be done for all rays, and since there\nare as many rays as there are cells, this approach quickly becomes prohibitively slow. We therefore developed a new, more\nelaborate, but much faster method to find the list of patches cut\nby a ray.\nFirst, each processor creates a so called 'patch-mapping'\nwhich consists of an integer array representing the full computational domain that stores the id (i.e. a unique integer identifier) of all patches containing valid data. In Fig. 4 we show an\nexample of such a mapping. These local patch-mapping arrays\nthen need to be communicated and merged (using a so called\n'reduce' communication operation) after which each processor\n\nFig. 4. Two-dimensional example of a 'patch-mapping' for a\ncomputational domain that is split over two different processors. In the top row the local ids of the patches on the different processors are shown. The mapping of these patch ids onto\nthe patch-mapping array is shown in the middle row. The bottom row shows the global patch-mapping after the local patchmappings have been communicated. Tracing the depicted ray\nresults in the patch list {1, 4, 10, 13, 16}. The patch-mapping\nentries visited during the ray tracing are shown in grey.\nhas the same global patch-mapping corresponding to the full\ncomputational domain.\nIn order to discern patches that are on different processors\nwe use the following coding for the global patch id:\npG = pL + P pmax ,\n\n(5)\n\nwith pG the global patch id, pL the local patch id, and P the\nprocessor id.\nWe then trace the ray, again using the 'fast voxel traversal\nalgorithm' (Amanatides & Woo (1987), see App. A), but now\nto trace through the global patch-mapping array. This results\nin the list of patches cut by the ray, which is used to accumulate their local contributions, which were already communicated earlier, to arrive at the total column density (as described\nin Sect. 2.3.3).\nAlthough this approach to ray tracing can be a potential\nbottle-neck in the algorithm, one needs to keep in mind that\n\n\f6\n\nE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\n4\ne\n\nPSfrag replacements\nl2\n\nc2\ne\n\nle\n\nc1\n\nreplacements\n\n1\n\nthe maximum\n\u221a number of patch-mapping entries along a ray is\ngiven by 3C/c, with C 3 the total number of cells if the computational domain would be fully refined, and c3 the number of\ncells per patch.\nFor a typical three-dimensional oct-tree type AMR simulation with C = 512 and c = 16, we find a maximum amount of\n\u223c 55 patch-mapping entries that are cut by a ray. Note however\nthat this is an upper limit. The number of entries is drastically\nsmaller when the source and destination of the ray are not located at opposite sides of the domain (which will be the case for\nmost rays). Note also that, although we have to trace through\nthe patch-mapping entries, the actual number of patches that\nends up in the list is strongly reduced due to the adaptive nature of the discretization. In the example given in Fig. 4, the\nnumber of patch-mapping entries visited by the ray is 13, but\nthe number of patches that end up in the list is only 5. It is this\nlatter number which determines how many interpolations are\nneeded when accumulating the local column density contributions.\n\n2.3.3. Accumulating local column density\ncontributions\nNow that we have the list of patches traversed by a ray (Sect.\n2.3.2) and the values of local column density at the patch faces\nlocated farthest away from the source have been made available\nto all processors (Sect. 2.3.1), we can proceed and calculate the\nlocal contributions to the total column density through interpolation.\nThe calculations that need to be performed for a ray r\ntraversing a patch p can be broken up into the following steps\n(two-dimensional case, see Fig. 5):\n1 Find the location e where r exits p.\n2 Use this to find the two cell corners c1 and c2 that are closest to e and store their corresponding local column density\ncontributions \u2206N1 and \u2206N2 .\n3 Calculate the geometrical path lengths of the ray sections\nthat terminate in c1 , c2 , and e, and denote these by l1 , l2 ,\nand le , respectively.\n\n3\n\ne\n\n7\n\nl1\n\nFig. 5. Two-dimensional illustration of the linear interpolation\nscheme used to accumulate local column density contributions.\nShown are the ray sections used in the interpolation (see text for\nfurther details).\n\n6\n\n5\n\n8\n\n2\n\nFig. 6. Illustration of the interpolation scheme in three dimensions. For clarity we show outlines of cells on patch faces only.\nIn the left image we show a ray r that exits the patch at location\ne through a cell face, together with the ray sections used in the\ninterpolation that terminate at the corners of this cell face. The\nimage on the right shows the cell face in more detail, where\nwe indicated the cell corners by 1, 2, 3, and 4. In addition to\nthese cell corners, ray sections used in the interpolation that\nterminate at 5, 6, 7, and 8 are also indicated (see text for further\ndetails).\n4 Use these path lengths to calculate the following normalized interpolation weights:\nw1 = |l2 \u2212 le |/(l1 + l2 ), w2 = |l1 \u2212 le |/(l1 + l2 ) . (6)\n5 Calculate the desired value of local column density at e\nthrough linear interpolation:\n\u2206Ne = w1 \u2206N1 + w2 \u2206N2 .\n\n(7)\n\nAfter all \u2206Ne for each patch in the list of patches cut by r are\ncalculated, we simply need to sum them to arrive at the total\ncolumn density for r:\nX\nN (r) =\n\u2206Ne (p) [p \u2208 list(r)] .\n(8)\np\n\nThe interpolation weights given above were constructed using the conditions\nw1 l1 + w2 l2 = le , and w1 + w2 = 1 ,\n\n(9)\n\nwhich, for the case of a homogeneous density distribution, results in the exact solution for the column density (i.e., apart\nfrom a constant factor, the path length itself). Other weights,\nlike ones derived from the distances between the exit locations\ne, c1 , and c2 , can also be used, but this leads to \u223c 10% errors\nfor rays that enter a patch close to a patch corner (as is depicted\nby the example ray section of Fig. 5).\nIn three dimensions (see Fig. 6) it is not straightforward to\nderive weights that are a generalization of the two-dimensional\nones described above. We therefore give a more intuitive\nderivation of these weights, using a procedure where we apply\nthe weights for the two-dimensional case twice in succession:\n1 Find the location e where r exits p.\n\n\fE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\n7\n\nFig. 7. Summary of steps taken in the hybrid characteristics method. On the left we show ray sections that represent local\ncontributions to the column density (summary step 3), whereas ray sections that represent values of column density that need to\nbe communicated are shown at the centre image (summary step 4). Note that only those values on patch faces located farthest\naway from the source need to be communicated. On the right we show an example of the interpolation of these local values for\na particular destination cell (summary step 6). Note that there is no need to interpolate the value for the final ray section in the\ndestination patch since its value was already calculated previously (summary step 3).\n2 Use this to find the four cell corners c1 , c2 , c3 , and c4 that\nare closest to e and store their corresponding local column\ndensity contributions \u2206N1 , \u2206N2 , \u2206N3 , and \u2206N4 .\n3 Calculate the geometrical path lengths of the ray sections\nthat terminate in c1 , c2 , c3 , c4 , and e and denote these by\nl1 , l2 , l3 , l4 , and le , respectively. Also calculate the path\nlengths l5 and l6 of the ray sections that terminate in c5 and\nc6 respectively (see Fig. 6).\n4 Use these path lengths to calculate the following normalized interpolation weights:\nw1 = |l2 \u2212 l5 |/(l1 + l2 ), w2 = |l1 \u2212 l5 |/(l1 + l2 ) ,\nw3 = |l4 \u2212 l6 |/(l3 + l4 ), w4 = |l3 \u2212 l6 |/(l3 + l4 ) ,\nw5 = |l6 \u2212 le |/(l5 + l6 ), w6 = |l5 \u2212 le |/(l5 + l6 ) .\n(10)\n5 Calculate the values of local column density \u2206N5 and \u2206N6\nat c5 and c6 through linear interpolation:\n\u2206N5 = w1 \u2206N1 + w2 \u2206N2 ,\n\u2206N6 = w3 \u2206N3 + w4 \u2206N4 .\n\n(11)\n\n6 Calculate the desired value of local column density at e\nthrough linear interpolation of \u2206N5 and \u2206N6 :\n\u2206Ne = w5 \u2206N5 + w6 \u2206N6 .\n\n(12)\n\nOur choice of using the values of local column density at\nc5 and c6 to arrive at \u2206Ne is arbitrary. Instead, one may also\n\nuse the ones from c7 and c8 (cf. Fig. 6) in the steps described\nabove.\nThe main difficulty in finding an interpolation scheme for\nthe three-dimensional case lies in the fact that we need to weigh\nwith the lengths of the ray sections to avoid the errors which\nwill otherwise occur when the ray under consideration enters\nthe patch close to a patch corner. Since in general all these path\nlengths are different from one another, this introduces quite\na number of independent variables into the equations. So, although the two-step procedure just described is not unique, it\nis simple and fast, and it gives good results in practice.\n\n2.4. Summary of the algorithm\nThe steps taken in the algorithm can be summarized as follows\n(see Fig. 7):\n1 Each processor checks if its sub-domain contains the\nsource. The processor that owns the source stores its patch\nand processor id and makes it available to all other processors (broadcast). Note that this id may change during a\nsimulation due to changes in refinement and the consequent\nredistribition of patches among processors.\n2 On each processor, create the local patch-mapping and\ncommunicate (reduce) it so that each processor ends up\nwith the global patch-mapping (Sect. 2.3.2).\n\n\f8\n\nE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\n3 On each processor, calculate local column density contributions \u2206N for each patch using the 'fast voxel traversal\nalgorithm' (Sect. 2.2 and Fig. 7 left).\n4 Communicate (gather) all \u2206N values at patch faces located farthest away from the source (Fig. 7 centre). Also,\nthe coordinates and refinement levels of all patches need to\nbe gathered. This communication is done most efficiently\nwhen this information is combined in a single data type of\nsize S (Sect. 2.3.1).\n5 On each processor, construct for each ray the list of patches\nthat are traversed by that ray (Sect. 2.3.2).\n6 On each processor, interpolate and accumulate the local\ncontributions \u2206N from the patches that are in the list to arrive at the total column density N (cf. Sect. 2.3.3 and Fig.\n7 right) .\n\n2.5. Comparison to other methods\nTo conclude this section, we compare our method to two more\nrecent ones that either use some form of adaptivity to trace rays\n(Juvela & Padoan 2005), or that are parallelized for distributed\nmemory architectures (Heinemann et al. 2005). Unlike ours,\nthese methods are intended to solve for the full radiation field,\nand therefore need to employ multiple sets of rays to sample\nthe angular parameter space. Depending on the adopted form\nof the source function, (lambda-)iteration is to be performed as\nwell in order to obtain a converging solution.\nJuvela & Padoan (2005) proposed a ray tracing method for\ncell based AMR intended to be used in calculations of line\nemission. Their method uses sets of parallel (in the geometrical sense) long characteristics to find the intensity at cell faces,\nwhich are then interpolated to get the intensity at the cell centre using a short characteristic. This is repeated for a number of\ndirections after which angle averaged quantities are obtained.\nThis process is then lambda-iterated to get converging line intensities.\nSince their method refines on a cell-by-cell basis, and ours\nemploys patches structured in an oct-tree hierarchy, there is a\none-to-one correspondence between the procedures of ray tracing used in the two methods: their long characteristics correspond to our ray tracing of the patch-mapping, whereas their\nshort characteristics correspond to our ray tracing of a single\npatch.\nMore recently, Heinemann et al. (2005) developed a\nmethod for tracing rays through a decomposed computational\ndomain (i.e. sub-domains that are distributed over a number of\nprocessors). To sample the radiation field, rays are traced that\nare either parallel or diagonal to a regular patch. As they mention, this means that there is no need for them to interpolate\nlocal values. Furthermore, since their source function acts only\nlocally, their is no need to iterate the solution.\nAs in our approach, Heinemann et al. (2005) first obtain all\nlocal contributions (which they call 'intrinsic') and add these\nup to arrive at the total solution. However, in contrast to our\nmethod, the communication pattern of Heinemann et al. (2005)\nis intrinsically serial (i.e. processors have to wait for one another, see their Fig. 1). In their case of a decomposed regu-\n\nlar domain, the performance penalty due to the serial nature of\ntheir algorithm is small, but in case of an AMR type of grid,\nthe performance would be severely degraded. Heinemann et al.\n(2005) also consider the special case of periodic boundary conditions with rays running only parallel along a coordinate axis.\nIn such a situation, the boundary values are broadcasted and\nthe inter-processor communication is more efficient than in the\nserial case.\nAlthough our method is designed to study the effects of\nionization due to point sources of radiation, it can be easily adapted to trace sets of parallel rays instead. Depending\non the application, a prescription for the source function and\n(lambda-)iteration would need to be implemented. This would\nmake our method suitable for solving the radiative transfer\nequation in a more general way, similar to the methods just\ndiscussed. The added advantage of such an approach is that our\nmethod is highly parallel and coupled to an AMR hydrodynamics code.\n\n3. Ionization, heating, cooling\nWhen the column density from the source up to each cell face\nis known, the ionization fractions and temperature can be computed. For this we use a simplified version of the DORIC\nroutines (see Mellema & Lundqvist 2002; Frank & Mellema\n1994). In what follows, we summarize the way in which these\nroutines calculate the ionization, heating, and cooling rates\n(for more details, please refer to Frank & Mellema (1994)).\nAlthough the DORIC package is capable of handling a large\nnumber of species (H, He, C, N, O, and Ne), we use hydrogen\nas the only gas component in order to keep the complexity of\nour tests cases at a minimum, and we will therefore describe\njust this case.\nThe ionization fractions of hydrogen are given by\nx(HI) =\n\nn(HII)\nn(HI)\n, x(HII) =\n,\nn(H)\nn(H)\n\n(13)\n\nwith\nn(H) = n(HI) + n(HII)\n\n(14)\n\nthe total hydrogen number density. The electron number density follows from\nne = n(HII) + n(C),\n\n(15)\n\nwhere the number density of carbon is included to prevent the\npossibility of ne = 0, by assuming that carbon is always at\nleast singly ionized due to the interstellar UV field.\nFor hydrogen, the number of photoionizations per second\nis given by (Osterbrock 1989)\nZ \u221e\n4\u03c0J\u03bd\nAp =\na0 d\u03bd,\n(16)\nh\u03bd\n\u03bd0\nwith J\u03bd the local mean intensity of the radiation field, a0 =\n6.3 \u00d7 10\u221218 cm2 the cross section (which we take to be frequency independent, or 'grey', for simplicity) and \u03bd0 the ionization threshold frequency.\n\n\fE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\nThe number of collisional ionizations per second is calculated using\n\u221a\nAc = Ac (HI)ne T exp(\u2212I(HI)/kT )\n(17)\nwith Ac (HI) = 5.84 \u00d7 10\u221211 cm3 K\u22121/2 , and I(HI) the hydrogen ionization potential (Cox 1970).\nFor the on-the-spot approximation, the radiative recombination rate is given by (cf. Osterbrock 1989)\n\u0012\n\u0013\u22120.7\nT\n4\n\u03b1R = \u03b1R (10 K)\n,\n(18)\n104\nwith \u03b1R (104 K) = 2.59 \u00d7 10\u221213 cm3 s\u22121 . The temperature is\ndetermined from the pressure using\np = (n(H) + ne )kT.\n\n(19)\n\nThe rate equation for the hydrogen ionization fraction is\ngiven by\ndx(HII)\n= x(HI)A \u2212 x(HII)ne \u03b1R ,\n(20)\ndt\nwith A = Ap + Ac the total number of photo- and collisional\nionizations per second.\nWhen one assumes that the electron density is constant, an\nanalytic solution for x(HII) can be found, and iterating for ne\ngives the time dependent solution (Schmidt-Voigt & Koeppen\n1987). Since Ac and \u03b1R are both temperature dependent, the\nchange in temperature due to heating and cooling needs to be\nrecalculated for each iteration step as well.\nThe photoionization heating rate is given by\nZ \u221e\n4\u03c0J\u03bd\na0 h(\u03bd \u2212 \u03bd0 ) d\u03bd,\n(21)\n\u0393p = n(HII)\nh\u03bd\n\u03bd0\nand for the cooling rate we use a collisional equilibrium\ncooling curve from Dalgarno & McCray (1972) (more general composition-dependent cooling is available in the DORIC\npackage).\nFor calculating the local mean intensity of the radiation\nfield we use a blackbody spectrum, so we have\n\u0012 \u00132\nRS\nh\u03bd 3\n2\u03c0\n4\u03c0J\u03bd (r) =\nexp(\u2212\u03c4 (r)). (22)\nh\u03bd\n|r|\nc2 exp( kT\n)\u22121\nS\nHere, RS is the radius, and TS is the effective temperature of\nthe source. The optical depth \u03c4 at position r of equation (2) is\ncalculated using the total column density N (r) from equation\n(8). Since evaluating the integrals for the photoionization and\nheating rate [equations (16) and (21)] is too time consuming to\nperform for every value of \u03c4 , they are stored in look-up tables\nfor a range of optical depths and interpolated when needed.\nThe hydrodynamics and ionization calculations are coupled through operator splitting. To avoid having to take time\nsteps that are the minimum of the hydrodynamics, ionization, and heating/cooling time scales, we use the fact that the\nequations for the ionization and heating/cooling can be iterated to convergence. Since these are so called 'stiff' equations (e.g. Press et al. 1992), we use a special iteration scheme\n(Frank & Mellema 1994). This means that the only restriction on the time step comes from the hydrodynamics (i.e. the\nCourant condition). See Frank & Mellema (1994) for an assessment of the validity of this approach.\n\n9\n\n4. Tests\nIn this section we present a number of tests for our new algorithm. First, we discuss the accuracy with which column\ndensities and ionization fractions are calculated. We compare\nthe results obtained with the hybrid characteristics method to\nthose calculated using long characteristics. Since the interpolation scheme of our method is designed to give the exact result\nfor the column density in case of a homogeneous density distribution (Sect. 2.3.3), we also consider its performance in case\nof a more general density field.\nWe conclude this section by testing the shadow casting capabilities of our method and apply it to a 'real-world' application of photoevaporating flows. This last test demonstrates\nthe performance of out method when used in combination with\nhydrodynamics.\n\n4.1. Column density\nWe performed two-dimensional calculations where we placed a\nsingle point source at the centre of a 1/r2 density distribution,\nthe result of which is shown in Fig. 8. In order to prevent an\nunder-resolved singularity at the location of the source, we used\na constant density sphere with a radius of 5 \u00d7 1014 at the source\nlocation.\nThe left panel of Fig. 8 shows the column density distribution along a line y = const cutting through the exact location of the source. Since for this special case no interpolation is\nnecessary, only very small differences between the two methods are found. These differences are due to uneven sampling of\nthe 1/r2 density distribution on the adaptive mesh. The errors\nincrease only slightly (< 0.5%) when interpolation is used, as\nindicated by the results obtained along the y = const line located at 3/4 of the horizontal extent of the domain (the right\npanel in Fig. 8).\n\n4.2. Shadow casting\nTo test the shadow casting capabilities of our algorithm, we calculate the column density and ionization fractions for a homogeneous environment containing higher density clumps, which\nare taken to be spherical and neutral. The ionization state is\nfound by iterating the ionization fractions over a period equal\nto a few recombination time scales, while keeping the temperature fixed.\nThe computational domain spans the region\n(2.0, 1.0, 1.0) \u00d7 1018 cm. The ambient medium has a\nnumber density nenv = 102 cm\u22123 and a temperature\nTenv = 5000 K. The source of ionizing radiation is located\nat (x, y, z) = (0.0, 0.5, 0.5) \u00d7 1018 cm. It has a luminosity\nLS = 7000 L\u2299 and an effective temperature Teff = 50000 K.\nThe resulting Str\u00f6mgren sphere has a radius that is larger\n(\u223c 3 \u00d7 1018 cm) than the physical size of the computational\ndomain. Two identical clumps are placed at a distance of\n\u223c 1018 cm from the source. Each clump has a density\nnclump = 104 cm\u22123 , a temperature Tclump = 100 K, and a\nradius rclump = 4 \u00d7 1016 cm. We used 6 levels of refinement\n\n\f10\n\nE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\nFig. 8. Values of column density for the case of a single point source in a two-dimensional domain with a 1/r2 density distribution. Shown are one-dimensional cuts along the y-direction through the source located at the centre of the domain (left panels) and\nat 3/4 of the domain (right panels). In the top panels, the solid line indicates the result for the long, whereas the crosses indicate\nthe result for the hybrid characteristics method. The bottom panels show the ratio (hybrid/long) of column density values.\nwith patches of 163 cells. The effective resolution in this test\nwas 1024 \u00d7 5122 cells.\n\nThe results of the shadow casting test are shown in Fig. 9.\nAs one can see, our hybrid characteristics method is capable\nof casting shadows with very sharp boundaries, indicating a\nlow numerical diffusivity of the scheme. We note that since the\ninitial conditions do not contain any density gradient, column\ndensities calculated in this test are identical to the ones one\nwould obtain using a long characteristics method.\n\n4.3. Application: photoevaporating clumps\nTo illustrate that our hybrid radiative transfer algorithm can\nbe used efficiently in combination with hydrodynamics, we\npresent a first 3D application of the evolution of over-dense\nclumps being photoevaporated. We use the parameters of the\nsimulation setup described in Sect. 4.2 as initial conditions and\nfollow the dynamical evolution for \u223c 4000 yr. This simulation is similar to the ones presented by Lim & Mellema (2003),\nwith this difference that in our simulation both the source and\nthe clumps are inside the computational domain, and that our\nradiation field is not approximated by parallel rays.\nThese computations are relevant to the shaping and evolution of cometary knots which are observed in objects like the\nHelix (NGC 7293), Eskimo (NGC 2392), and Dumbbell (M27)\nnebula. Another application is the interaction zone that is observed between binary proplyds in HII regions like NGC 3603\n\n(Brandner et al. 2000) and the Orion Nebula (Graham et al.\n2002).\nFig. 10 shows a sequence of snapshots 1 of the density and\nneutral hydrogen fraction at different times during the simulation. One sees that the interaction of the photoevaporation\nflows coming from the clumps results in a zone of higher\ndensity between the clumps, which, as was already found by\nLim & Mellema (2003), can explain the excess emission observed between some cometary knots and binary proplyds. This\ninteraction zone recombines, becomes optically thick, and casts\na shadow. It is interesting to see that the zone, and the shadow\nregion behind it, persist even after the two clumps have been\nfully evaporated. This mechanism for creating extra shadows\nmay influence the evolution and survival time of clumps that\nlie farther away from the star, an effect not taken into account\nin previous numerical studies. We are currently investigating\nfurther into this kind of flows and will present our findings in a\nforthcoming publication.\n\n5. Performance analysis\nWe start this section by comparing our hybrid characteristics\nmethod to the more traditional long and short characteristics\nmethods for regular grids. In order to do this, we distinguish\nbetween two types of computations: first we determine how\nmany calculations are needed to arrive at the local contribution\n1\n\nMovies of the simulations are available with the electronic version\nof this paper at http://www.edpsciences.org\n\n\fE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n21.0\n\n1.0 \u00d7 1018\n\n17.0\n\n0.8 \u00d7 10\n\n18\n\n\u22121.4\n\n0.6 \u00d7 10\n\n18\n\n\u22122.8\n\n0.4 \u00d7 10\n\n18\n\n\u22124.2\n\u22125.6\n\n13.0\n\n0.4 \u00d7 10\n\n18\n\n9.0\n\n0.2 \u00d7 1018\n\n5.0\n\n0.2 \u00d7 1018\n\n1.0\n\n0.0 \u00d7 1018\n0.0 \u00d7 1018\n\n0.0 \u00d7 1018\n0.0 \u00d7 1018\n\n0.4 \u00d7 1018\n\n0.8 \u00d7 1018\n\n1.2 \u00d7 1018\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\ny [cm]\n\n0.6 \u00d7 10\n\n18\n\n0.0\n\n0.4 \u00d7 1018\n\nx [cm]\n\n0.8 \u00d7 10\n\n\u22121.4\n\n0.6 \u00d7 10\n\n18\n\n\u22122.8\n\n0.4 \u00d7 1018\n\n\u22124.2\n\u22125.6\n\ny [cm]\n\ny [cm]\n\n17.0\n\n18\n\n13.0\n9.0\n\n0.2 \u00d7 1018\n\n5.0\n\n0.2 \u00d7 1018\n\n1.0\n\n0.0 \u00d7 1018\n0.0 \u00d7 1018\n\n0.4 \u00d7 1018\n\n0.8 \u00d7 1018\n\n1.2 \u00d7 1018\n\n\u22127.0\n\n1.0 \u00d7 1018\n\n0.4 \u00d7 1018\n\n0.0 \u00d7 1018\n0.0 \u00d7 1018\n\n2.0 \u00d7 1018\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\nx [cm]\n\n0.0\n\n0.4 \u00d7 1018\n\n0.8 \u00d7 1018\n\n1.2 \u00d7 1018\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\nlog10 (x)\n\n0.6 \u00d7 10\n\n18\n\n1.6 \u00d7 1018\n\n21.0\n\nlog10 (x)\n\n0.8 \u00d7 10\n\n1.2 \u00d7 1018\n\nx [cm]\n\n1.0 \u00d7 1018\n18\n\n0.8 \u00d7 1018\n\nlog10 (x)\n\n0.8 \u00d7 10\n\n18\n\nlog10 (x)\n\ny [cm]\n\n1.0 \u00d7 1018\n\n11\n\n\u22127.0\n\nx [cm]\n\nFig. 9. Values of log10 of the column density (left) and log10 of the HI ionization fraction (right) for the case of a single point\nsource in an environment with a homogeneous density distribution containing neutral clumps with higher density. Shown are\ncolor coded plots of xy-cuts through the centre of the domain (top row) and xz-cuts through the centre of the bottom clump\n(bottom row). The bottom left image shows the AMR patch distribution superimposed, where each patch contains 163 cells.\neach cell makes to the column density along a ray, and second\nwe look at the number of interpolations the different methods\nhave to perform to compute the total column density up to each\ncell.\nConsider a computational domain with a resolution of C 3\ncells and a source located at one of the corners of the domain.\nFor the case of a regular grid, the maximum\n\u221a number of cells\na long characteristic would encounter is 3C, and, since we\nassume that a ray is cast to all cells, the number of calculations\nneeded to provide the total column density is therefore . C 4 .\nFor our hybrid characteristics method, which employs an\noct-tree type of AMR grid, the\u221amaximum number of cells a local ray section encounters is 3c, where c3 is the number of\ncells in a single patch (cf. Sect. 2.2). So in this case, for a fully\nrefined grid, the total number of calculations would amount to\n. c C 3 . But, since in general the domain would be refined by\na factor r, with 0 \u2264 r \u2264 1, this number reduces to . r c C 3 .\nThis means that when r c \u2243 1, our method needs \u223c C 3 calculations to arrive at the local contributions to the column density\nfor each cell, which is of the same order a short characteristics\nmethod would need on a regular grid. However, the local values\nof column density still need to be communicated and interpolated to arrive at the total column density for each cell. On the\nother hand, a short characteristics method also needs to interpolate local values when it sweeps through the grid, whereas\na long characteristics method, although it executes a factor C\nmore calculations, does not need to perform any interpolations\nat all.\nThe number of interpolations to be performed by our\nmethod is determined by the number of patches that are encountered when ray tracing through the patch-mapping\n(cf.\n\u221a\nSect. 2.3.2 and 2.3.3). This number is at most 3C/c, since,\nfor a fully refined grid, there are C/c patches along a coordinate axis. For a grid that is not fully refined this number is again\n\nreduced by a factor r. A ray trace through the patch-mapping\nis to be performed for every cell, which brings the total number of interpolations to . r2 (C/c)C 3 , where one factor of r\ncomes from the number of patches cut by a ray, whereas the\nother factor comes from the total number of cells that exist in\nthe computational domain.\nA short characteristics method needs to do an interpolation\nfor every cell, so, for a regular grid, the total number of interpolations is C 3 . This implies that when r2 C/c \u2243 1, our method\nneeds to compute a similar number of interpolations as a short\ncharacteristics one. Note that we assume that the calculations\nneeded to do the interpolations are comparable in execution\nspeed for the short and hybrid characteristics methods, which\nmay actually not be the case.\nAs an example, a typical AMR calculation has C = 512,\nc = 16 (i.e. 6 levels of refinement), and r = 0.25, which results in rc = 4 and r2 C/c = 2. This shows that, for a single\nprocessor calculation with a proper choice of the ratio C/c and\na reasonable amount of refinement, our hybrid characteristics\nmethod is expected to perform equally well as a short characteristics method on a regular grid. It also means that, when\nour method is used in parallel, a better performance will be obtained when increasing the number of processors.\nTo investigate this aspect in some more detail we have conducted a preliminary performance analysis using the photoevaporating clumps test case described in Sect. 4.3 as the underlying physics problem. We used 5 levels of refinement irrespectively of the number of processor used in the test run (i.e., the\nproblem had a fixed total work). Calculations have been terminated after reaching 10% of the nominal simulation time.\nOtherwise the simulation parameters were identical to those\nused in the calculations presented in Sect. 4.3.\nThe results of our performance study are shown in Fig. 11,\nwhere we compare the overall performance of the hydrodynam-\n\n\f12\n\nE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n1.0 \u00d7 1018\n\n0.0\n\n\u22122.8\n\n0.4 \u00d7 10\n\n18\n\n\u22124.2\n\n0.2 \u00d7 1018\n\n\u22125.6\n\n0.2 \u00d7 1018\n\n\u22127.0\n\n0.0 \u00d7 1018\n0.0 \u00d7 1018\n\n0.0 \u00d7 1018\n0.0 \u00d7 1018\n\n\u22121.4\n\n0.4 \u00d7 1018\n\n0.8 \u00d7 1018\n\n1.2 \u00d7 1018\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\ny [cm]\n\n0.6 \u00d7 10\n\n18\n\n0.0\n\n0.8 \u00d7 10\n\n18\n\n\u22121.4\n\n0.6 \u00d7 10\n\n18\n\n\u22122.8\n\n0.4 \u00d7 10\n\n18\n\n\u22124.2\n\u22125.6\n\n0.4 \u00d7 1018\n\nx [cm]\n\n\u22124.2\n\n0.2 \u00d7 1018\n\n\u22125.6\n\n0.2 \u00d7 1018\n\n\u22127.0\n\n0.0 \u00d7 1018\n0.0 \u00d7 1018\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\ny [cm]\n\ny [cm]\n\n\u22122.8\n\n0.4 \u00d7 1018\n\n\u22121.4\n\n1.2 \u00d7 1018\n\n0.0\n\n0.8 \u00d7 10\n\n\u22121.4\n\n0.6 \u00d7 10\n\n18\n\n\u22122.8\n\n0.4 \u00d7 1018\n\n\u22124.2\n\u22125.6\n\n0.4 \u00d7 1018\n\n0.4 \u00d7 1018\n\n\u22124.2\n\n0.2 \u00d7 1018\n18\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\n0.0\n\u22121.4\n\n0.6 \u00d7 10\n\n18\n\n\u22122.8\n\n0.4 \u00d7 1018\n\n\u22124.2\n\n\u22125.6\n\n0.2 \u00d7 1018\n\n\u22125.6\n\n\u22127.0\n\n18\n\n0.0 \u00d7 10\n0.0 \u00d7 1018\n\n0.4 \u00d7 1018\n\nx [cm]\n\n0.4 \u00d7 1018\n\n\u22124.2\n\n0.2 \u00d7 1018\n\ny [cm]\n\n18\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\n0.0\n\u22121.4\n\u22122.8\n\n0.4 \u00d7 1018\n\n\u22124.2\n\n\u22125.6\n\n0.2 \u00d7 1018\n\n\u22125.6\n\n\u22127.0\n\n18\n\n0.8 \u00d7 10\n\n0.0 \u00d7 10\n0.0 \u00d7 1018\n\n0.4 \u00d7 1018\n\nx [cm]\n\n\u22122.8\n\n0.4 \u00d7 1018\n\n\u22124.2\n\n18\n\ny [cm]\n\n\u22127.0\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\n0.0\n\u22121.4\n\n0.6 \u00d7 1018\n\n\u22122.8\n\n0.4 \u00d7 1018\n\n\u22124.2\n\n18\n\n\u22125.6\n\n0.2 \u00d7 10\n\n\u22125.6\n\n18\n\n18\n\n0.0 \u00d7 10\n0.0 \u00d7 1018\n\n\u22127.0\n\n0.4 \u00d7 1018\n\nx [cm]\n\n0.8 \u00d7 1018\n\n1.2 \u00d7 1018\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\n\u22127.0\n\nx [cm]\n\n1.0 \u00d7 1018\n\n0.0\n\n0.8 \u00d7 1018\n\n\u22121.4\n\n0.8 \u00d7 1018\n\n\u22121.4\n\n0.6 \u00d7 1018\n\n\u22122.8\n\n0.6 \u00d7 1018\n\n\u22122.8\n\n0.4 \u00d7 1018\n\n\u22124.2\n\n0.4 \u00d7 1018\n\n\u22124.2\n\n18\n\n\u22125.6\n\n0.2 \u00d7 10\n\n18\n\n\u22125.6\n\n18\n\n\u22127.0\n\n0.0 \u00d7 10\n0.0 \u00d7 1018\n\n0.4 \u00d7 1018\n\n0.8 \u00d7 1018\n\n1.2 \u00d7 1018\n\nx [cm]\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\ny [cm]\n\n0.0\n\n0.2 \u00d7 10\n\n18\n\n0.0 \u00d7 10\n0.0 \u00d7 1018\n\n0.4 \u00d7 1018\n\n0.8 \u00d7 1018\n\n1.2 \u00d7 1018\n\n1.6 \u00d7 1018\n\n2.0 \u00d7 1018\n\nlog10 (x)\n\n1.0 \u00d7 1018\n\nlog10 (\u03c1) [g cm\u22123 ]\n\ny [cm]\n\n2.0 \u00d7 1018\n\n18\n\n0.8 \u00d7 10\ny [cm]\n\n0.6 \u00d7 1018\n\n1.2 \u00d7 1018\n\n1.6 \u00d7 1018\n\nlog10 (x)\n\n\u22121.4\n\nlog10 (\u03c1) [g cm\u22123 ]\n\n18\n\n0.8 \u00d7 1018\n\n1.2 \u00d7 1018\n\n1.0 \u00d7 1018\n\n0.0\n\n0.4 \u00d7 1018\n\n0.8 \u00d7 1018\n\nx [cm]\n\n1.0 \u00d7 1018\n\n0.0 \u00d7 10\n0.0 \u00d7 1018\n\n\u22127.0\n\n0.6 \u00d7 1018\n\ny [cm]\n\n\u22122.8\n\n0.2 \u00d7 10\n\n2.0 \u00d7 1018\n\nlog10 (x)\n\n\u22121.4\n\n0.6 \u00d7 1018\n\n0.8 \u00d7 10\n\n1.6 \u00d7 1018\n\n18\n\nlog10 (\u03c1) [g cm\u22123 ]\n\n18\n\n1.2 \u00d7 1018\n\n1.2 \u00d7 1018\n\n1.0 \u00d7 1018\n\n0.0\n\n0.8 \u00d7 1018\n\n0.8 \u00d7 1018\n\nx [cm]\n\n1.0 \u00d7 1018\n\n0.4 \u00d7 1018\n\n\u22127.0\n\n0.8 \u00d7 10\ny [cm]\n\ny [cm]\n\n0.6 \u00d7 10\n\n\u22122.8\n\n0.0 \u00d7 10\n0.0 \u00d7 1018\n\n2.0 \u00d7 1018\n\nlog10 (x)\n\n\u22121.4\n\n18\n\n0.8 \u00d7 10\n\n1.6 \u00d7 1018\n\n18\n\nlog10 (\u03c1) [g cm\u22123 ]\n\n0.8 \u00d7 10\n\n18\n\n1.2 \u00d7 1018\n\n1.2 \u00d7 1018\n\n1.0 \u00d7 1018\n\n0.0\n\n0.8 \u00d7 1018\n\n0.8 \u00d7 1018\n\nx [cm]\n\n1.0 \u00d7 1018\n\n0.4 \u00d7 1018\n\n\u22127.0\n\n18\n\nx [cm]\n\n0.0 \u00d7 10\n0.0 \u00d7 1018\n\n2.0 \u00d7 1018\n\nlog10 (x)\n\n0.6 \u00d7 10\n\n18\n\nlog10 (\u03c1) [g cm\u22123 ]\n\n0.8 \u00d7 10\n\n0.8 \u00d7 1018\n\n1.6 \u00d7 1018\n\n1.0 \u00d7 1018\n\n0.0\n\n18\n\n0.4 \u00d7 1018\n\n1.2 \u00d7 1018\n\nx [cm]\n\n1.0 \u00d7 1018\n\n0.0 \u00d7 1018\n0.0 \u00d7 1018\n\n0.8 \u00d7 1018\n\nlog10 (x)\n\n0.8 \u00d7 10\n\n18\n\nlog10 (\u03c1) [g cm\u22123 ]\n\ny [cm]\n\n1.0 \u00d7 1018\n\n\u22127.0\n\nx [cm]\n\nFig. 10. Snapshots of the evolution of the log10 of the mass density (left) and the log10 of the HI ionization fraction (right) for\nthe case of a single point source in an environment with a homogeneous density distribution containing two neutral clumps with\nhigher density. The source is located at (0.0, 0.5, 0.5) \u00d7 1018 cm. Shown are color coded plots of xy-cuts through the centre of\nthe domain at t = 0 yr (first row), t = 792 yr (second row), t = 1584 yr (third row), t = 2377 yr (fourth row), t = 3169 yr (fifth\nrow), and t = 3961 yr (sixth row).\n\n\fE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\nhydro\nrefinement\nradiation\n\ntime [s]\n\n1000\n\n100\n\n10\n\n100\n# processors\n\nFig. 11. Performance of the main components of a radiation\nhydrodynamics calculation.\n\nlocal ray trace\ncommunicate\naccumulate/interpolate\nionization\n\ntime [s]\n\n100\n\n13\n\nand, of course, keep the filling factor of the finest AMR level at\na minimum.\nFig. 12 shows performance results for the radiation module\nincluding the ionization package for our fixed size problem. As\none can see, the time required to calculate the column densities\nis about the same as the time needed to calculate the ionization\nstate of the gas. Furthermore, both these calculations are local\nand therefore perform very well. On the other hand, we notice\nthat the communication part of our algorithm does not perform\nperfectly. This is somewhat expected since, with the increasing\nnumber of processors, the efficiency of our algorithm becomes\nlimited by the efficiency of the global gather operation (used to\ncollect column densities from patch faces). The results for this\nspecific test indicate that communication is likely to dominate\nthe runtime when more than \u223c 64 processors participate in the\ncomputations. We expect that this limitation becomes less severe when larger patches are used in the simulation. In this case\nthe cost of communication may still be lower than, for example, the time needed to accumulate and interpolate the column\ndensities. To determine whether this is indeed the case, more\nelaborate performance tests involving a larger number of processors (of the order of \u223c 1000) are required, and such tests are\ncurrently underway.\n\n6. Conclusions\n10\n\n1\n10\n\n100\n# processors\n\nFig. 12. Performance of the different steps in our hybrid characteristics method. For this specific test, the communication\ntakes as much time as the rest of the calculation when using\n64 processors. As is explained in the text, for patches with a\nlarger number of cells, this constraint may become less severe.\n\nics, AMR, and radiation calculations. Detailed results for the\nradiation part are presented in Fig. 12, where the timings for\nthe individual components of our hybrid characteristics method\n(local ray trace, communication, accumulation/interpolation,\nand ionization) are shown.\nPerformance data obtained for our realistic test problem indicates that the ray tracing part of the calculation takes less time\nthan either the hydrodynamics or grid adaptation. Furthermore,\nit shows that most of the computational time during ray tracing\nis spent in interpolating and accumulating the local contributions to the column density (i.e. step 6, Sect. 2.4). Following the\nanalytical assessment made above, we conclude that in order to\nreduce the number of interpolations required during calculation one should try to minimize the value of r2 C/c rather than\nrc when setting up a simulation. This suggest that one should\nuse patches that contain a relatively large number of cells compared to the effective resolution of the computational domain,\n\nWe described a new radiative transfer algorithm for parallel\nAMR hydrodynamics codes, called hybrid characteristics. We\npresented details of several aspects of the algorithm: ray tracing, communication, and interpolation.\nThe ray tracing is performed in two steps. First, local long\ncharacteristics are used to calculate column density contributions for each patch. A second ray trace is then performed\nwhere a so called patch-mapping is used to find the patches cut\nby each ray. When the list of patches cut by a ray is known, interpolation of local column density values is required to find the\ntotal column density up to each cell. For this, one needs the values of local column density contribution at patch faces, which\nare communicated to all processors. The coefficients used in\nthe interpolation are chosen such that the exact solution for the\ncolumn density is retrieved when there are no gradients in the\ndensity distribution.\nFor the case where the distribution is not constant but has\na 1/r2 profile we find deviations of the order of \u223c 0.5% when\ncomparing our method with a long characteristics one. This\nhigh accuracy with which column densities values are calculated results in well defined and sharp shadows.\nWe showed that our method can be used efficiently for parallel radiation hydrodynamics calculations in three dimensions\non AMR grids. We presented preliminary results for our new\nmethod in application to the problem of the photoevaporation\nof two over-dense clumps due to the ionization by a single\nsource of radiation. The results of this simulation offer a possible explanation for the excess emission observed in between\ncometary knots seen in for example the Helix Nebula, and the\ninteraction zone observed in binary proplyds found in HII regions like NGC 3603 and the Orion Nebula. These simulations\nalso suggest a possible mechanism for the creation of extra\n\n\f14\n\nE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\n\u2206y\n\nshadows by the high density interaction zone forming between\n\u2206x\nthe clumps. This additional shadowing may influence the evolution and survival time of clumps that lie farther away from\nthe source. We are currently investigating further into this kind\nof interactions between photoevaporating flows, and their con\u03b4tx\nsequences for the dynamics, and will report our findings in a\nfuture publication.\n\u03b4ty\nAn initial performance test showed that our method\nworks\nPSfrag replacements\nvery well when used for calculations on a parallel machine.\ntmax\nFor this specific test, the communication part of our algorithm\nstarts to dominate the calculation when more than \u223c 64 procestix i\nty\nsors are used. However, we showed analytically that a careful\nchoice of the ratio of the number of cells per patch to the total number of cells in the computational domain controls the\namount of communication used in the calculation. This analysis can be used to optimize the design of our method. More Fig. A.1. Explanation of different quantities used in the fast\nin-depth performance and scaling studies are currently under- voxel traversal method. Shown is a single patch with a local\nway, using large (\u223c 1000) number of processors, and these will long characteristic ray section.\nalso be used to further optimize the current implementation.\nBecause of the modular nature of the FLASH code and the twice in our method, once to ray trace through the cells ('voxDORIC routines, additional elements like more sophisticated els') of a single patch (local long characteristics, Sect. 2.2),\ncooling or multiple species can easily be added. Also, multi- and once to ray trace the patch-mapping (hybrid characterisple point sources can be handled by our method, and in prin- tics, Sect. 2.3). The idea behind the algorithm is to keep track\nciple moving sources could be implemented. Furthermore, it of three different ray parameters tx , ty , and tz , one for each\nshould be straightforward to extend the hybrid characteristics co-ordinate direction, and to use these to determine how to step\nmethod so that it can be used to solve for a more general radia- from cell to cell through the patch, ensuring that all cells cut\ntion field, with the added advantage that our method is already by the ray are visited (see Fig. A.1). First, values for the increparallelized and coupled to an AMR hydrodynamics code.\nments in ray parameter t needed to step from cell to cell in the\nAnother possible application for our method is the calcu- x-, y-, and z-direction, indicated by \u03b4tx , \u03b4ty , and \u03b4tz , respeclation of the propagation of ionization fronts in a cosmolog- tively, are determined:\nical context. For these calculations photon conservation is an\n\u03b4tx = tmax /\u2206x , \u03b4ty = tmax /\u2206y , \u03b4tz = tmax /\u2206z , (A.1)\nimportant issue. Recently, Mellema et al. (2005) developed a\np\nmethod for following R-type ionization fronts that may move\n\u2206x2 + \u2206y 2 + \u2206z 2 is the final ray parameter\nwhere\nt\n=\nmax\nmore than one cell per time step, where a special formulation of\nthe equations ensures photon conservation. Although the paral- (i.e. the total path length of the ray). Next, the ray parameters\ntz are set to their respective initial values, indicated\nlel nature of our algorithm may complicate the implementation tx , tiy , and\ni\nby\nt\n,\nt\n,\nand\ntiz , after which a loop is entered where the minx\ny\nof such an approach, we may still benefit from the ideas preimum of these three values is determined. This gives the cosented by Mellema et al. (2005).\nordinate direction in which the cell lies that is to be visited next\nWe intend to make our method publicly available in a future\nby the ray. For example, if min(tx , ty , tz ) = tx , the next cell\nFLASH release.\nthe ray will enter lies in the x-direction, and we have to increment the ray parameter for the x-direction accordingly, i.e.\nAcknowledgements. EJR wishes to thank the ASC Flash Center for its\ntx = tx +\u03b4tx . We loop as long as all ray parameters are smaller\nhospitality during a very enjoyable and productive visit when most of\nthan the final ray parameter tmax . As a by-product, the algothe work presented in this paper was done.\nThis work is supported in part by the U.S. Department of rithm produces the path length of the ray section for each cell\nEnergy under Grant No. B523820 to the Center for Astrophysical that is crossed, which is obtained by subtracting the previous\nfrom the current ray parameter.\nThermonuclear Flashes at the University of Chicago.\nEJR was sponsored by the National Computing Foundation (NCF)\nfor the use of supercomputer facilities, with financial support from the\nNetherlands Organization for Scientific Research (NWO), under Grant\nNo. 614.021.016.\nThe work of GM is partly supported by the Royal Netherlands\nAcademy of Arts and Sciences (KNAW).\n\nAppendix A: Fast voxel traversal\nHere we briefly discuss the 'fast voxel traversal algorithm'\nfrom Amanatides & Woo (1987). We have used this algorithm\n\nAppendix B:\nRay tracing a single patch: short characteristics\nAs an alternative to the 'fast voxel traversal algorithm' for ray\ntracing a single patch as presented in Sect. 2.2, we here briefly\ndescribe the short characteristics method, which could be used\nfor the same purpose. Since the method of short characteristics\nuses interpolation from neighbouring cells, upwind values need\nto be available at all times, so cells need to be swept in a certain\norder. This sweeping sequence is determined by the physical\n\n\fE.-J. Rijkhorst et al.: Hybrid Characteristics: 3D radiative transfer for parallel AMR hydrodynamics\n\n15\n\nFor the three-dimensional case the ray pierces a cell face,\nso four instead of two quantities need to be interpolated. The\nnormalized weights are chosen to correspond to the partial areas of the cell face defined by the corners of this face and the\nlocation at which the ray leaves the cell (cf. Fig. B.2):\nreplacements\n\n2\n\n1\n\n4\n\n3\n\nw1 = (1 \u2212 d1 )(1 \u2212 d2 ); w2 = d1 (1 \u2212 d2 );\nw3 = (1 \u2212 d1 ) d2 ;\nw4 = d1 d2 .\n\n(B.3)\n\n1\n\nReferences\nFig. B.1. Two examples of short characteristics sweeping sequences for a single patch that may occur in practice. For the\nillustration on the left, the source is located inside the patch at\nthe starting point of curve 1. In this case the four space filling\ncurves shown should be swept in the order indicated. For the\npatch on the right, the source is external to the patch, and lies\nin the direction of the lower left corner, so there is only one\ncurve that needs to be swept.\n\nreplacements\n\n\u2206\n\nd\nc1\n\nc4\n\nc3\n\nc2\n\n\u2206\n\nr\n\nd2\nc1\n\nc\n\nr\n\nc2\nc\nd1\n\nFig. B.2. Illustration of the interpolation scheme for a single\ncell used in the short characteristics method for the 2D (left)\nand 3D (right) case.\nlocation of the patch relative to the source position (see Fig.\nB.1). Using the known physical location of the source, the geometrical path length of the ray section that crosses a cell is\ncalculated for every cell contained in the patch. The short characteristics method then sweeps the patch in a direction away\nfrom the source, interpolating upwind column density contributions for each cell along the way.\nFor the two-dimensional case, Fig. B.2 illustrates which\ntwo cells, indicated by c1 and c2 , are used in this interpolation.\nSimple linear interpolation weights\nw1 = 1 \u2212 d; w2 = d\n\n(B.1)\n\ncould be used to arrive at the column density contribution at\ncell c, using\nX\nwi \u2206Ni + \u2206r n ,\n(B.2)\n\u2206Nc =\ni\n\nwith \u2206Ni the upwind values of column density that need to\nbe interpolated, d the normalized distance from c1 to the location where the ray pierces the line connecting c1 and c2 , \u2206r\nthe physical path length of the short characteristic ray section,\nand n the number density inside the cell crossed by this short\ncharacteristic.\n\nAbel, T. & Wandelt, B. D. 2002, MNRAS, 330, L53\nAmanatides, J. & Woo, A. 1987, in Proc. Eurographics, 1\nBerger, M. & Colella, P. 1989, J. Comp. Phys., 82, 64\nBerger, M. & Oliger, J. 1984, J. Comp. Phys., 53, 484\nBrandner, W., Grebel, E. K., Chu, Y., et al. 2000, AJ, 119, 292\nCen, R. 2002, ApJS, 141, 211\nCox, D. P. 1970, Ph.D. Thesis\nDalgarno, A. & McCray, R. A. 1972, ARA&A, 10, 375\nFrank, A. & Mellema, G. 1994, A&A, 289, 937\nFryxell, B., Olson, K., Ricker, P., et al. 2000, ApJS, 131, 273\nGraham, M. F., Meaburn, J., Garrington, S. T., et al. 2002, ApJ, 570,\n222\nHayes, J. C. & Norman, M. L. 2003, ApJS, 147, 197\nHeinemann, T., Dobler, W., Nordlund, A., & Brandenburg, A. 2005,\nastro-ph/0503510\nJanka, H.-T. & Mueller, E. 1996, A&A, 306, 167\nJessee, J. P., Fiveland, W. A., Howell, L. H., Colella, P., & Pember,\nR. B. 1998, J. Comp. Phys., 139, 380\nJuvela, M. & Padoan, P. 2005, ApJ, 618, 744\nKreylos, O., Weber, G. H., Bethel, W., et al. 2002, Remote Interactive\nDirect Volume Rendering of AMR Data, Tech. Rep. LBNL 49954,\nLawrence Berkeley National Laboratory\nLiebend\u00f6rfer, M., Rampp, M., Janka, H.-T., & Mezzacappa, A. 2005,\nApJ, 620, 840\nLim, A. J. & Mellema, G. 2003, A&A, 405, 189\nMaselli, A., Ferrara, A., & Ciardi, B. 2003, MNRAS, 345, 379\nMellema, G., Iliev, I., Alvarez, M., & Shapiro, P. 2005, in preparation\nMellema, G. & Lundqvist, P. 2002, A&A, 394, 901\nMellema, G., Raga, A. C., Canto, J., et al. 1998, A&A, 331, 335\nNakamoto, T., Umemura, M., & Susa, H. 2001, MNRAS, 321, 593\nNorman, M. L. 2000, in Revista Mexicana de Astronomia y\nAstrofisica Conference Series, 66\u201371\nO'Shea, B., Bryan, G., Bordner, J., et al. 2004, in Adaptive Mesh\nRefinement - Theory and Applications, Eds. T. Plewa, T. Linde &\nV. G. Weirs\nOsterbrock, D. E. 1989, Astrophysics of gaseous nebulae and active\ngalactic nuclei (University Science Books, 1989)\nPress, W. H., Teukolsky, S. A., Vetterling, W. T., & Flannery, B. P.\n1992, Numerical recipes in FORTRAN. The art of scientific computing (Cambridge: University Press, -c1992, 2nd ed.)\nRaga, A., L\u00f3pez-Mart\u0131\u0301n, L., Binette, L., et al. 2000, MNRAS, 314,\n681\nRichling, S. & Yorke, H. W. 2000, ApJ, 539, 258\nRitzerveld, J., Icke, V., & Rijkhorst, E.-J. 2004, astro-ph/0312301\nSchmidt-Voigt, M. & Koeppen, J. 1987, A&A, 174, 211\nShapiro, P. R., Iliev, I. T., & Raga, A. C. 2004, MNRAS, 348, 753\nSteinacker, J., Bacmann, A., & Henning, T. 2002, Journal of\nQuantitative Spectroscopy and Radiative Transfer, 75, 765\nStone, J. M., Mihalas, D., & Norman, M. L. 1992, ApJS, 80, 819\nTurner, N. J. & Stone, J. M. 2001, ApJS, 135, 95\nWhitehouse, S. C. & Bate, M. R. 2004, MNRAS, 353, 1078\n\n\f"}