{"id": "http://arxiv.org/abs/1105.1764v1", "guidislink": true, "updated": "2011-05-09T19:50:24Z", "updated_parsed": [2011, 5, 9, 19, 50, 24, 0, 129, 0], "published": "2011-05-09T19:50:24Z", "published_parsed": [2011, 5, 9, 19, 50, 24, 0, 129, 0], "title": "Generating p-extremal graphs", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1105.1630%2C1105.4094%2C1105.3000%2C1105.5411%2C1105.3684%2C1105.1355%2C1105.1181%2C1105.5975%2C1105.4095%2C1105.0350%2C1105.4349%2C1105.1222%2C1105.1853%2C1105.0394%2C1105.1646%2C1105.1484%2C1105.0179%2C1105.3756%2C1105.4718%2C1105.1030%2C1105.4639%2C1105.0440%2C1105.1086%2C1105.4348%2C1105.0706%2C1105.1998%2C1105.2140%2C1105.2793%2C1105.3333%2C1105.1638%2C1105.5580%2C1105.2755%2C1105.0572%2C1105.3978%2C1105.3173%2C1105.3546%2C1105.5659%2C1105.0528%2C1105.1764%2C1105.0829%2C1105.2023%2C1105.3623%2C1105.4110%2C1105.4942%2C1105.5115%2C1105.2853%2C1105.1984%2C1105.2823%2C1105.1091%2C1105.3005%2C1105.1549%2C1105.3389%2C1105.6175%2C1105.6198%2C1105.2953%2C1105.2714%2C1105.0534%2C1105.1931%2C1105.1718%2C1105.3505%2C1105.4720%2C1105.4203%2C1105.5388%2C1105.0614%2C1105.5987%2C1105.1885%2C1105.3302%2C1105.5905%2C1105.5013%2C1105.2049%2C1105.1506%2C1105.2357%2C1105.6206%2C1105.2222%2C1105.3531%2C1105.5126%2C1105.2314%2C1105.1554%2C1105.1191%2C1105.1143%2C1105.2978%2C1105.2267%2C1105.4249%2C1105.2977%2C1105.3509%2C1105.1468%2C1105.3515%2C1105.1085%2C1105.2340%2C1105.2530%2C1105.1634%2C1105.2497%2C1105.0154%2C1105.1391%2C1105.6289%2C1105.0649%2C1105.0675%2C1105.0447%2C1105.1128%2C1105.2320%2C1105.3051&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Generating p-extremal graphs"}, "summary": "Define f(n,p) to be the maximum number of edges in a graph on n vertices with\np perfect matchings. Dudek and Schmitt proved there exist constants n_p and c_p\nso that for even n >= n_p, f(n,p) = (n^2)/4+c_p. A graph is p-extremal if it\nhas p perfect matchings and (n^2)/4+c_p edges. Based on Lovasz's Two Ear\nTheorem and structural results of Hartke, Stolee, West, and Yancey, we develop\na computational method for determining c_p and generating the finite set of\ngraphs which describe the infinite family of p-extremal graphs. This method\nextends the knowledge of the size and structure of p-extremal graphs from p <=\n10 to p <= 27. These values provide further evidence towards a conjectured\nupper bound and prove the sequence c_p is not monotonic.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1105.1630%2C1105.4094%2C1105.3000%2C1105.5411%2C1105.3684%2C1105.1355%2C1105.1181%2C1105.5975%2C1105.4095%2C1105.0350%2C1105.4349%2C1105.1222%2C1105.1853%2C1105.0394%2C1105.1646%2C1105.1484%2C1105.0179%2C1105.3756%2C1105.4718%2C1105.1030%2C1105.4639%2C1105.0440%2C1105.1086%2C1105.4348%2C1105.0706%2C1105.1998%2C1105.2140%2C1105.2793%2C1105.3333%2C1105.1638%2C1105.5580%2C1105.2755%2C1105.0572%2C1105.3978%2C1105.3173%2C1105.3546%2C1105.5659%2C1105.0528%2C1105.1764%2C1105.0829%2C1105.2023%2C1105.3623%2C1105.4110%2C1105.4942%2C1105.5115%2C1105.2853%2C1105.1984%2C1105.2823%2C1105.1091%2C1105.3005%2C1105.1549%2C1105.3389%2C1105.6175%2C1105.6198%2C1105.2953%2C1105.2714%2C1105.0534%2C1105.1931%2C1105.1718%2C1105.3505%2C1105.4720%2C1105.4203%2C1105.5388%2C1105.0614%2C1105.5987%2C1105.1885%2C1105.3302%2C1105.5905%2C1105.5013%2C1105.2049%2C1105.1506%2C1105.2357%2C1105.6206%2C1105.2222%2C1105.3531%2C1105.5126%2C1105.2314%2C1105.1554%2C1105.1191%2C1105.1143%2C1105.2978%2C1105.2267%2C1105.4249%2C1105.2977%2C1105.3509%2C1105.1468%2C1105.3515%2C1105.1085%2C1105.2340%2C1105.2530%2C1105.1634%2C1105.2497%2C1105.0154%2C1105.1391%2C1105.6289%2C1105.0649%2C1105.0675%2C1105.0447%2C1105.1128%2C1105.2320%2C1105.3051&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Define f(n,p) to be the maximum number of edges in a graph on n vertices with\np perfect matchings. Dudek and Schmitt proved there exist constants n_p and c_p\nso that for even n >= n_p, f(n,p) = (n^2)/4+c_p. A graph is p-extremal if it\nhas p perfect matchings and (n^2)/4+c_p edges. Based on Lovasz's Two Ear\nTheorem and structural results of Hartke, Stolee, West, and Yancey, we develop\na computational method for determining c_p and generating the finite set of\ngraphs which describe the infinite family of p-extremal graphs. This method\nextends the knowledge of the size and structure of p-extremal graphs from p <=\n10 to p <= 27. These values provide further evidence towards a conjectured\nupper bound and prove the sequence c_p is not monotonic."}, "authors": ["Derrick Stolee"], "author_detail": {"name": "Derrick Stolee"}, "author": "Derrick Stolee", "arxiv_comment": "25 pages, 2 figures, 3 tables", "links": [{"href": "http://arxiv.org/abs/1105.1764v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1105.1764v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "math.CO", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "math.CO", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "05C35, 05C85", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1105.1764v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1105.1764v1", "journal_reference": null, "doi": null, "fulltext": "arXiv:1105.1764v1 [math.CO] 9 May 2011\n\nGenerating p-extremal graphs\nDerrick Stolee\u2217\nDepartment of Mathematics\nDepartment of Computer Science\nUniversity of Nebraska\u2013Lincoln\ns-dstolee1@math.unl.edu\nDecember 6, 2018\n\nAbstract\nDefine f (n, p) to be the maximum number of edges in a graph on n vertices with p perfect\nmatchings. Dudek and Schmitt proved there exist constants np and cp so that for even n \u2265 np ,\n2\n2\nf (n, p) = n4 + cp . A graph is p-extremal if it has p perfect matchings and n4 + cp edges. Based\non Lov\u00e1sz's Two Ear Theorem and structural results of Hartke, Stolee, West, and Yancey, we\ndevelop a computational method for determining cp and generating the finite set of graphs which\ndescribe the infinite family of p-extremal graphs. This method extends the knowledge of the\nsize and structure of p-extremal graphs from p \u2264 10 to p \u2264 27. These values provide further\nevidence towards a conjectured upper bound and prove the sequence cp is not monotonic.\n\n1\n\nIntroduction\n\nA perfect matching is a set of disjoint edges which cover all vertices. Let \u03a6(G) be the number of\nperfect matchings in a graph G. For even n and positive p, the function f (n, p) is the maximum\nnumber of edges in a graph G on n vertices with \u03a6(G) = p. The exact behavior of f (n, p) is not\ncompletely understood. This work extends the current knowledge on this problem by applying\nLov\u00e1sz'a Two Ear Theorem [4] and structure theorems of Hartke, Stolee, West, and Yancey [3]\nwith an isomorph-free generation scheme [9] in order to compute f (n, p) for all p \u2264 27 as well as\ndetermine the exact structure of graphs meeting these extremal values.\nHetyei first characterized the extremal graphs with a single perfect matching and n vertices\n(unpublished; see [5, Corollary 5.3.14]) giving f (n, 1) =\n\nn2\n4\n\nfor all even n. Dudek and Schmitt [1]\n\ngeneralized the problem for an arbitrary constant p and found the general form of f (n, p) for\nsufficiently large n.\nTheorem 1.1 (Dudek, Schmitt [1]). For every p \u2265 1, there exist constants cp , np so that for all\neven n \u2265 np , f (n, p) =\n\u2217\n\nn2\n4\n\n+ cp .\n\nThe author is supported in part by the National Science Foundation grants CCF-0916525 and DMS-0914815.\n\n1\n\n\fFrom this theorem, understanding the behavior of f (n, p) relies on understanding the sequences\nnp and cp . An important step to proving Theorem 1.1 is that if a graph exists with p perfect\nmatchings, n vertices, and\n\nn2\n4\n\n+ c edges, then f (m, p) \u2265\n\nm2\n4\n\n+ c for all even m \u2265 n [1, Lemma 2.1]).\n\nThis motivates defining the excess of G to be c(G) = e(G) \u2212 41 n(G)2 , since any graph G with p\nperfect matchings gives a lower bound c(G) \u2264 cp . A graph G with \u03a6(G) = p is p-extremal if it has\nn2\n4\n\n+ cp edges. In other words, p-extremal graphs have the largest excess out of all graphs with p\n\nperfect matchings.\nDudek and Schmitt [1] computed cp for 2 \u2264 p \u2264 6 and provided the exact structure of pextremal graphs for p \u2208 {2, 3}. Hartke, Stolee, West, and Yancey [3] analyzed the structure of\np-extremal graphs and found that for a fixed p, the infinite family is constructable from a finite set\nof fundamental graphs. Using McKay's graph generation program geng [7], they discovered these\nfuncdamental graphs then computed cp for 7 \u2264 p \u2264 10 and described the structure of p-extremal\ngraphs for 4 \u2264 p \u2264 10. These values of cp are given in Table 1. The current-best known upper\nbound1 is cp \u2264 p \u2212 6 for p \u2265 11, while the best known lower bound is cp \u2265 1 for all p \u2265 2 [3,\nTheorem 2.3].\np\nnp\ncp\n\n1\n2\n0\n\n2\n4\n1\n\n3\n4\n2\n\n4\n6\n2\n\n5\n6\n2\n\n[1]\n\n6\n6\n3\n\n7\n6\n3\n\n8\n6\n3\n\n9\n6\n4\n[3]\n\n10\n6\n4\n\nTable 1: Known values of np and cp .\nFor an integer n, the double factorial n!! is the product\u0012of all numbers\nat most n with the same\n\u0010\n\u00112 \u0013\nln p\n, given below.\nparity. The values of cp are conjectured to be on order O\nln ln p\nConjecture 1.2 (Hartke, Stolee, West, Yancey [3]). Let p, k, t be integers so that k \u2208 {1, . . . , 2t}\nand k(2t \u2212 1)!! \u2264 p < (k + 1)(2t \u2212 1)!! and set Cp = t2 \u2212 t + k \u2212 1. Always cp \u2264 Cp .\nWhen p = k(2t \u2212 1)!!, a construction shows that cp \u2265 t2 \u2212 t + k \u2212 1 [3].\nThis work utilizes the structure of the fundamental graphs to design a computer search. By\nexecuting this search, we compute the sequence cp and describe the structure of p-extremal graphs\nfor all p \u2264 27. We begin by discussing the structure of p-extremal graphs in Section 2. Sections\n3 through 7 contain the description of the computational technique, which are described in more\ndetail at the end of Section 2. In Section 8, we discuss the results of executing the computer search.\n\nNotation\nIn this work, H and G are graphs, all of which will are simple: there are no loops or multi-edges.\nFor a graph G, V (G) is the vertex set and E(G) is the edge set. The number of vertices is denoted\nn(G) while e(G) is the number of edges.\n1\n\nThis upper bound is given by cp \u2264 maxq<p cq + 1 [1, Lemma 2.4] and that cp \u2264 4 for all p \u2264 10 [3].\n\n2\n\n\f2\n\nStructure of p-Extremal Graphs\n\nIn this section, we describe the structure of p-extremal graphs as demonstrated by Hartke, Stolee,\nWest, and Yancey [3].\nA graph is matchable if it has a perfect matching. An edge e \u2208 E(G) is extendable if there\nexists a perfect matching of G which contains e. Otherwise, e is free. The extendable subgraph (free\nsubgraph) of G is the spanning subgraph containing all extendable (free) edges of G.\nIf the extendable subgraph of a matchable graph G is connected, then G is elementary. A set\nS \u2282 V (G) is a barrier 2 if the number of connected components with an odd number of vertices in\nG \u2212 S (denoted odd(G \u2212 S)) is equal to |S|. Recall Tutte's Theorem [11] states G is matchable if\nand only if |S| \u2265 odd(G \u2212 S) for all subsets S \u2286 V (G), so barriers are the sets which make this\ncondition sharp. Note that the singletons {v} for each v \u2208 V (G) is a barrier.\nElementary graphs and their barriers share important structure, which will be investigated\nthoroughly in Section 5. If G is both elementary and p-extremal, then n(G) is bounded by a\nfunction of p and cp .\nTheorem 2.1 (Corollary 5.8 [3]). Let p \u2265 2. If G is a p-extremal elementary graph, then G has\np\nat most Np vertices, where Np is the largest even integer at most 3 + 16p \u2212 8cp \u2212 23.\nAny excess c(G) for a graph G with \u03a6(G) = p can replace cp in Theorem 2.1 to give an upper\nbound on the order of a p-extremal elementary graph.\nLet G be a graph with \u03a6(G) > 0. A chamber is a subgraph of G induced by a connected\ncomponent of the extendable subgraph of G. Chambers are the maximal elementary subgraphs of\nG. Let G1 , . . . , Gk be elementary graphs and for each i let Xi \u2286 V (Gi ) be a barrier in Gi . The\nspire generated by G1 , . . . , Gk on X1 , . . . , Xk is the graph given by disjoint union of G1 , . . . , Gk and\nedges xi vj for all xi \u2208 Xi and vj \u2208 V (Gj ), whenever i < j. The following theorem states that all\np-extremal graphs are spires with very specific conditions on G1 , . . . , Gk and X1 , . . . , Xk .\nTheorem 2.2 (Theorem 5.9 [3]). Consider p \u2265 1. For each p-extremal graph G in Fp :\n1. G is a spire generated by elementary graphs G1 , . . . , Gk on barriers X1 , . . . , Xk .\n2. The chambers of G are G1 , . . . , Gk .\n3. For each i < k, Xi is a barrier of maximum size in Gi .\n4. For all i < j,\n\n|Xi |\nn(Gi )\n\n\u2265\n\n|Xj |\nn(Gj )\n\nand if equality holds, Gi and Gj can be swapped to form another\n\np-extremal graph.\nP\n5. c(G) \u2264 ki=1 c(Gi ). Equality holds if and only if\nQ\n6. Let pi = \u03a6(Gi ). p = ki=1 pi .\n7. For all i, n(Gi ) \u2264 Npi .\n8. If pi = 1, then Gi \u223c\n= K2 , |Xi | = 1.\n2\n\nWe take the convention that the empty set is a barrier.\n\n3\n\n|Xi |\nn(Gi )\n\n=\n\n1\n2\n\nfor all i < k.\n\n\fTheorem 2.2 provides an automated procedure for describing all p-extremal graphs. Begin by\ndetermining all q-extremal elementary graphs for each factor q of p. Then, compute the maximumQ\nsize barriers for these graphs. For all factorizations p = ki=1 pi and combinations of pi -extremal\nelementary graphs Gi with maximum-size barrier Xi , compute c(G) for the spire generated by\nG1 , . . . , Gk on X1 , . . . , Xk . The maximum excess of these graphs is the value cp . Larger graphs are\nbuilt by adding elementary graphs isomorphic to K2 and ordering the list of elementary graphs by\nthe relative barrier size\n\n|Xi |\nn(Gi ) .\n\nThe most difficult part of this procedure is determining all q-extremal elementary graphs, which\nis the focus of the remainder of this work. In [3], the authors found the q-extremal elementary graphs\nby enumerating all graphs of order Nq using McKay's geng program [7] until Nq \u2265 14 for q \u2265 11,\nwhere this technique became infeasible. Our method greatly extends the range of computable\nvalues. We split elementary graphs into extendable and free subgraphs, which are generated in\ntwo stages of a computer search. We begin by investigating the structure of extendable subgraphs\nin Section 3. In Section 4, we utilize this structure to design an algorithm for generating all\npossible extendable subgraphs of q-extremal elementary graphs which focuses the search to a very\nsparse family of graphs. In Section 5, we investigate the structure of free subgraphs and design an\nalgorithm to generate maximal graphs with a given extendable subgraph. This algorithm requires\nthe full list of barriers for an extendable subgraph, so we describe in Section 6 an on-line algorithm\nfor computing this list. In Section 7, we combine these techniques to bound the possible excess\nreachable from a given graph in order to significantly prune the search space. These algorithms are\ncombined to a final implementation and the results of the computation are summarized in Section\n8.\n\n3\n\nStructure of Extendable Subgraphs\n\nA connected graph is 1-extendable if every edge is extendable3 . By the definition of elementary\ngraph, the extendable subgraph of an elementary graph is 1-extendable.\nA graph H with n(H) \u2265 3 is 2-connected if there is no vertex x \u2208 V (G) so that H \u2212 x is\ndisconnected.\nProposition 3.1. If H is 1-extendable with \u03a6(H) \u2265 2, then H is 2-connected.\nProof. Since \u03a6(H) \u2265 2, there are at least four vertices in H. Suppose H was not 2-connected.\nThen, there exists a vertex x \u2208 V (H) so that H \u2212 x has multiple components. Since H has an even\nnumber of vertices, at least one component of H \u2212 x must have an odd number of vertices. Since H\nhas perfect matchings, Tutte's Theorem implies exactly one such component C has an odd number\nof vertices. Moreover, in every perfect matching of H, x is matched to some vertex in C. Hence,\nthe edges from x to the other components never appear in perfect matchings, contradicting that H\nwas 1-extendable.\n3\n\nThis term comes from k-extendable graphs, where every matching of size k extends to a perfect matching.\n\n4\n\n\f2-connected graphs are characterized by ear decompositions. An ear is a path given by vertices\nx0 , x1 , . . . , xk so that x0 and xk have degree at least three and xi has degree exactly two for all\ni \u2208 {1, . . . , k \u2212 1}. The vertices x0 and xk are branch vertices while x1 , . . . , xk\u22121 are internal\nvertices. In the case of a cycle, the entire graph is considered to be an ear. For an ear \u03b5, the length\nof \u03b5 is the number of edges between the endpoints and its order is the number of internal vertices\nbetween the endpoints. We will focus on the order of an ear. An ear of order 0 (length 1) is a single\nedge, called a trivial ear.\nAn ear augmentation is the addition of a path between two vertices of the graph. This process is\ninvertible: an ear deletion takes an ear x0 , x1 , . . . , xk in a graph and deletes all vertices x1 , . . . , xk\u22121\n(or the edge x0 x1 if k = 1). For a graph H, an ear augmentation is denoted H + \u03b5 while an ear\ndeletion is denoted H \u2212\u03b5. Every 2-connected graph H has a sequence of graphs H1 \u2282 * * * \u2282 H` = H\nso that H1 is a cycle and for all i \u2208 {1, . . . , ` \u2212 1}, H (i+1) = H (i) + \u03b5i for some ear \u03b5i [13].\nLov\u00e1sz's Two Ear Theorem gives the vital structural decomposition of 1-extendable graphs\nusing a very restricted type of ear decomposition. A sequence H0 \u2282 H1 \u2282 H2 \u2282 * * * \u2282 Hk of ear\naugmentations is a graded ear decomposition if each H (i) is 1-extendable. The decomposition is\nnon-refinable if for all i < k, there is no 1-extendable graph H 0 so that H (i) \u2282 H 0 \u2282 H (i+1) is a\ngraded ear decomposition.\nTheorem 3.2 (Two Ear Theorem [4]; See also [5, 10]). If H is 1-extendable, then there is a nonrefinable graded ear decomposition H0 \u2282 H1 \u2282 * * * \u2282 Hk so that H0 \u223c\n= C2` for some ` and each\near augmentation H (i) \u2282 H (i+1) uses one or two new ears, each with an even number of internal\nvertices.\nWe will consider making single-ear augmentations to build 1-extendable graphs, so we classify\nthe graphs which appear after the first ear of a two-ear augmentation. A graph H is almost 1extendable if the free edges of H appear in a single ear of H. The following corollary is a restatement\nof the Two Ear Theorem using almost 1-extendable graphs.\nCorollary 3.3. If H is 1-extendable, then there is an ear decomposition H0 \u2282 H1 \u2282 * * * \u2282 Hk so\nthat H0 \u223c\n= C2` for some `, each ear augmentation H (i) \u2282 H (i+1) uses a single ear of even order,\neach H (i) is either 1-extendable or almost 1-extendable, and if H (i) is almost 1-extendable then\nHi\u22121 and H (i+1) are 1-extendable.\nAn important property of graded ear decompositions is that \u03a6(H (i) ) < \u03a6(H (i+1) ), since the\nperfect matchings in H (i) extend to perfect matchings of H (i+1) using alternating paths within the\naugmented ear(s) and the other edges must appear in a previously uncounted perfect matching.\nWe use this theorem to develop our search space for the canonical deletion technique, forming\nthe first stage of the search. The second stage adds free edges to a 1-extendable graph with p\nperfect matchings. The structure of free edges is even more restricted, as shown in the following\nproposition.\n\n5\n\n\fProposition 3.4 (Theorems 5.2.2 & 5.3.4 [5]). Let G be an elementary graph. An edge e is free\nif and only if the endpoints are in the same barrier. If adding any missing edge to G increases the\nnumber of perfect matchings, then every barrier in G of size at least two is a clique of free edges.\nIn Section 5, we describe a technique for adding free edges to a 1-extendable graph. In order\nto better understand the first stage, we investigate what types of ear augmentations are allowed in\na non-refinable graded ear decomposition.\nLemma 3.5. Let H \u2282 H + \u03b5 be a one-ear augmentation between 1-extendable graphs H and H + \u03b5.\nThe endpoints of \u03b5 are in disjoint maximal barriers.\nProof. If the endpoints of \u03b5 were not in disjoint maximal barriers, then they are contained in the\nsame maximal barrier. If an edge were added between these vertices, Proposition 3.4 states that\nthis edge would be free. Since \u03b5 is an even subdivision of such an edge, the edges incident to the\nendpoints are not extendable, making H + \u03b5 not 1-extendable.\nLemma 3.6. Let H \u2282 H + \u03b51 + \u03b52 be a non-refinable two ear augmentation between 1-extendable\ngraphs.\n1. The endpoints of \u03b51 are within a maximal barrier of H.\n2. The endpoints of \u03b52 are within a different maximal barrier of H.\nProof. (1) If the endpoints a, b of \u03b51 span two different maximal barriers, adding the edge ab would\nadd an extendable edge by Proposition 3.4. The perfect matchings of H + ab and H + \u03b51 would be\nin bijection depending on if ab was used: if a perfect matching M in H + ab does not contain ab,\nM extends to a perfect matching in H + \u03b51 by taking alternating edges within \u03b51 , with the edges\nincident to a and b not used; if M used ab, the alternating edges along \u03b51 would use the edges\nincident to a and b. Hence, H + \u03b51 is 1-extendable and this is a refinable graded ear decomposition.\nThis contradiction shows that \u03b51 spans vertices within a single maximal barrier.\n(2) The endpoints x, y of \u03b52 must be within a single maximal barrier by the same proof as (2),\nsince otherwise H + \u03b52 would be 1-extendable and the augmentation is refinable. However, if both\n\u03b51 and \u03b52 span the same maximal barrier, H + \u03b51 + \u03b52 is not 1-extendable. By Proposition 3.4,\nedges within a barrier are free. Hence, the perfect matchings of H + \u03b51 + \u03b52 do not use the internal\nedges of \u03b51 and \u03b52 which are incident to their endpoints. This contradicts 1-extendability, so the\nendpoints of \u03b52 are in a different maximal barrier than the endpoints of \u03b51 .\n\n4\n\nSearching for p-extremal elementary graphs\n\nGiven p and c, we aim to generate all elementary graphs G with \u03a6(G) = p and c(G) \u2265 c. If c \u2264 cp ,\n\u221a\nTheorem 2.1 implies n(G) \u2264 Np \u2264 3 + 16p \u2212 8c \u2212 23. In order to discover these graphs, we use\nthe isomorph-free generation algorithm of [9] to generate 1-extendable graphs with up to p perfect\nmatchings and up to Np vertices. This algorithm is based on Brendan McKay's canonical deletion\n\n6\n\n\ftechnique [6] and generates graphs using ear augmentations while visiting each unlabeled graph\nonly once. This technique will generate 1-extendable graphs and almost 1-extendable graphs. Let\nMp be the set of 2-connected graphs G with \u03a6(G) \u2208 {2, . . . , p} that are either 1-extendable or\nalmost 1-extendable. MpNp is the set of graphs in Mp with at most Np vertices.\nThe following lemma is immediate from Corollary 3.3.\nLemma 4.1. For each graph H \u2208 Mp , either H is an even cycle or there exists an ear \u03b5 so that\nH \u2212 \u03b5 is in Mp .\nWith this property, all graphs in MpNp can be generated by a recursive process: Begin at an\neven cycle H0 = C2` . For each H (i) , try adding each all ears \u03b5 of order r to all pairs of vertices in\nH (i) where 0 \u2264 r \u2264 Np \u2212 n(H i ) to form H (i+1) + \u03b5. If H (i+1) is 1-extendable or H (i) is 1-extendable\nand H (i+1) is almost 1-extendable, recurse on H (i+1) until \u03a6(H (i+1) ) > p. While this technique\nwill generate all graphs in MpNp , it will generate each unlabeled graph several times. In fact, the\nnumber of times an unlabeled H \u2208 MpNp appears is at least the number of ear decompositions\nH0 \u2282 * * * \u2282 Hk \u2282 H which match the conditions of Corollary 3.3.\nWe will remove these redundancies in two ways. First, we will augment using pair orbits of\nvertices in H (i) . Second, we will reject some augmentations if they do not correspond with a\n\"canonical\" ear decomposition of the larger graph. This technique is described in detail in [9].\nLet del(H) be a function which takes a graph H \u2208 Mp and returns an ear \u03b5 in H so that H \u2212 \u03b5\n\u223c H2 ,\nis in Mp . This function del(H) is a canonical deletion if for any two H1 , H2 \u2208 Mp so that H1 =\nthere exists an isomorphism \u03c3 : H1 \u2192 H2 that maps del(H1 ) to del(H2 ).\nGiven a canonical deletion del(H), the canonical ear decomposition at H is given by the following\niterative construction: (i) Set H0 = H and i = 0. (ii) While H (i) is not a cycle, define Hi\u22121 =\nH (i) \u2212del(H (i) ) and decrement i. When this process terminates, what results is an ear decomposition\nH\u2212k \u2282 H\u2212(k\u22121) \u2282 * * * \u2282 H\u22121 \u2282 H0 where H\u2212k is isomorphic to a cycle and H0 = H.\nA simple consequence of this definition is that if H\u22121 = H \u2212 del(H), then the canonical ear\ndecomposition of H begins with the canonical ear decomposition of H\u22121 then proceeds with the\naugmentation H\u22121 \u2282 H\u22121 + del(H) = H. Applying isomorph-free generation algorithm of [9] will\ngenerate all unlabeled graphs in Mp without duplication by generating ear decompositions using\nall possible ear augmentations and rejecting any augmentations which are not isomorphic to the\ncanonical deletion.\nIn order to guarantee the canonical deletion del(H) satisfies the isomorphism requirement, the\nchoice will depend on a canonical labeling. A function lab(H) which takes a labeled graph H and\noutputs a bijection \u03c3H : V (H) \u2192 {1, . . . , n(H)} is a canonical labeling if for all H1 \u223c\n= H2 the map\n\u22121\n\u03c0 : V (H1 ) \u2192 V (H2 ) defined as \u03c0(x) = \u03c3H\n(\u03c3H1 (x)) is an isomorphism. The canonical labeling\n2\n\n\u03c3H = lab(H) on the vertex set induces a label \u03b3H on the ears of H. Given an ear \u03b5 of order\nr between endpoints x and y, let \u03b3H (\u03b5) be the triple (r, min{\u03c3H (x), \u03c3H (y)}, max{\u03c3H (x), \u03c3H (y)}).\nThese labels have a natural lexicographic ordering which minimizes the order of an ear and then\nminimizes the pair of canonical labels of the endpoints. In this work, the canonical labeling lab(H)\nis computed using McKay's nauty library [7, 2]. We now describe the canonical deletion del(H)\n7\n\n\fwhich will generate a canonical ear decomposition matching Corollary 3.3 whenever given a graph\nH \u2208 Mp .\nBy the proof of Lemma 4.1, we need all almost 1-extendable graphs H to have H \u2212 \u03b5 be 1extendable, but 1-extendable graphs H may have H \u2212 \u03b5 be 1-extendable or almost 1-extendable,\ndepending on availability. Also, since we are only augmenting by ears of even order, we must select\nthe deletion to have this parity.\nThe following sequence of choices describe the method for selecting a canonical ear to delete\nfrom a graph H in MpNp :\n1. If H is almost 1-extendable, select an ear \u03b5 so that H \u2212 \u03b5 is 1-extendable. By the definition\nof almost 1-extendable graphs, there is a unique such choice.\n2. If H is 1-extendable and there exists an ear \u03b5 so that H \u2212 \u03b5 is 1-extendable, then select such\nan ear with minimum value \u03b3H (\u03b5).\n3. If H is 1-extendable and no single ear \u03b5 has the deletion H \u2212 \u03b5 1-extendable, then select\nan even-order ear \u03b5 so that there is a disjoint even-order ear \u03b50 so that H \u2212 \u03b5 is almost 1extendable and H \u2212 \u03b5 \u2212 \u03b50 is 1-extendable. Out of these choices for \u03b5, select \u03b5 with minimum\nvalue \u03b3H (\u03b5).\nSee [9] for a more detailed description of the isomorph-free properties of the canonical deletion\nstrategy.\nThe full generation algorithm, including augmentations, checking canonical deletions, as well\nas some optimizations and pruning techniques, is described in Section 8. We now investigate how\nto find p-extremal elementary graphs using 1-extendable graphs in Mp . In the following section,\nwe discuss how to fill a 1-extendable graph H with free edges without increasing the number of\nperfect matchings.\n\n5\n\nStructure of Free Subgraphs\n\nBy Proposition 3.4, the free edges within an elementary graph have endpoints within a common\nbarrier. This implies that the structure of the free edges is coupled with the structure of barriers in\nG. In this section, we demonstrate that the structure of the free subgraph of a p-extremal elementary\ngraph depends entirely on the structure of the barriers in the extendable subgraph. This leads to\na method to generate all maximal sets of free edges that can be added to a 1-extendable graph.\nSection 6 describes a method for quickly computing the list of barriers of a 1-extendable graph\nusing an ear decomposition. In particular, this provides an on-line algorithm which is implemented\nalong with the generation of canonical ear decompositions. Finally, Section 7 combines the results\nof these sections into a very strict condition which is used to prune the search tree.\nLet G be an elementary graph. The barrier set B(G) is the set of all barriers in G. The barrier\npartition P(G) is the set of all maximal barriers in G. The following lemmas give some properties\nof P(G) and B(G) when G is elementary.\n8\n\n\fLemma 5.1 (Lemma 5.2.1 [5]). For an elementary graph G, P(G) is a partition of V (G).\nLemma 5.2 (Theorem 5.1.6 [5]). For an elementary graph G and B \u2208 B(G), B 6= \u2205, all components\nof G \u2212 B have odd order.\nGiven an elementary graph H, let E(H) be the set of elementary supergraphs with the same\nextendable subgraph: E(H) = {G \u2287 H : V (G) = V (H), \u03a6(G) = \u03a6(H)}. We will refer to maximal\nelements of E(H) using the subgraph relation \u2286, giving a poset (E(H), \u2286). Note that (E(H), \u2286)\nhas a unique minimal element, H.\nProposition 5.3. Let H be a 1-extendable graph. If G is a maximal element in E(H), then every\nbarrier in P(G) is a clique of free edges in G.\nProof. If some maximal barrier X in P(G) is not a clique, then there is a missing edge e between\nvertices x, y of X. Since |X| = odd(G \u2212 X), all perfect matchings of G + e must match at least\none vertex of each odd component to some vertex in X, saturating X. This means that e is not\nextendable in G + e, and G + e \u2208 E(H). This contradicts that G was maximal in E(H).\nBy Proposition 3.4, the edges within the barriers are free.\nLemma 5.4. Let H be a 1-extendable graph and G \u2208 E(H) be an elementary supergraph of H.\nEvery barrier B of G is also a barrier of H.\nProof. Each odd component of G \u2212 B is a combination of components of H \u2212 B, an odd number\nof which are odd components, giving odd(H \u2212 B) \u2265 odd(G \u2212 B). There are no new vertices in G,\nso the components of G \u2212 B partition V (H) \u2212 B so that the partition of components of H \u2212 B is\na refinement of G \u2212 B.\nSince B is a barrier of G, odd(G \u2212 B) = |B|. Since H is matchable, Tutte's Theorem implies\nodd(H \u2212 B) \u2264 |B|. Thus |B| = odd(G \u2212 B) \u2264 odd(H \u2212 B) \u2264 |B| and equality holds, making B a\nbarrier of H.\nGiven a 1-extendable graph H, barriers B1 and B2 conflict if (a) B1 \u2229 B2 6= \u2205, (b) B1 spans\nmultiple components of H \u2212 B2 , or (c) B2 spans multiple components of H \u2212 B1 . A set I of barriers\nin B(H) is a cover set if each pair B1 , B2 of barriers in I are non-conflicting and I is a partition\nof V (H). Let C(H) be the family of cover sets in B(H). If I1 , I2 \u2208 C(H) are cover sets, let the\nrelation I1 \u0016 I2 hold if for each set B1 \u2208 I1 there exists a set B2 \u2208 I2 so that B1 \u2286 B2 . This\ndefines a partial order on C(H) and the poset (C(H), \u0016) has a unique minimal element given by\nthe partition of V (H) into singletons.\nTheorem 5.5. Let H be a 1-extendable graph. A graph G \u2208 E(H) is maximal in (E(H), \u2286) if and\nonly if each B \u2208 P(G) is a clique, P(G) is a cover set, and P(G) is maximal in (C(H), \u0016).\nProof. We define a bijection between C(H) and a subset of elementary supergraphs in E(H), as\ngiven in the following claim.\n\n9\n\n\fClaim 5.6. Cover sets I \u2208 C(H) are in bijective correspondence with elementary graphs G \u2208 E(H)\nwhere the free subgraph of G is a disjoint union of cliques, each of which is a (not necessarily\nmaximal) barrier of G.\nLet G be a graph in E(H) where the free subgraph of G is a disjoint union of cliques X1 , X2 , . . . ,\nXk , where each Xi is a barrier of G. Then, let I = {X1 , . . . , Xk } be the set of barriers. Note that\nI is a partition of V (H), each part of which is a barrier of G which is a barrier of H by Lemma 5.4.\nConsider two barriers B1 , B2 \u2208 I. Since we selected I to be a partition, B1 \u2229 B2 = \u2205. If B2 spans\nmultiple components of H \u2212 B1 , then the vertices from these components are a single component in\nG\u2212B1 , where B2 is a clique of edges. However, Lemma 5.2 gives that all components of H \u2212B1 and\nG \u2212 B1 are odd, since B1 is a barrier. This implies that |B1 | = odd(H \u2212 B1 ) > odd(G \u2212 B1 ) = |B1 |,\na contradiction. Hence, B2 is contained within a single component of H \u2212 B1 , so B1 and B2 do not\nconflict in H. This gives that I is a cover set in C(H).\nThis map from G \u2208 E(H) to I \u2208 C(H) is invertible by taking a cover set I \u2208 C(H) and filling\neach barrier B \u2208 I with edges, forming a graph HI . Since each pair of barriers B1 , B2 in I are\nnon-conflicting, the components of H \u2212 B1 do not change by adding edges between vertices in B2 .\nTherefore, each set B \u2208 I is also a barrier in HI . By Proposition 3.4, the edges within each barrier\nof HI are free, so all extendable edges of HI are exactly those in H. This gives that \u03a6(HI ) = \u03a6(H)\nand HI \u2208 E(H). The map from I to HI is the inverse of the earlier map from G \u2208 E(H) with free\nedges forming disjoint cliques to I \u2208 C(H). Hence, this is a bijection, proving the claim.\nAn important point in the previous claim is that the free edges formed cliques which are barriers,\nbut those cliques were not necessarily maximal barriers. We now show that the above bijection\nmaps edge-maximal graphs in E(H) to maximal cover sets in C(H).\nClaim 5.7. Let I be a cover set in C(H). The following are equivalent:\n(i) I is maximal in (C(H), \u0016).\n(ii) HI is maximal in (E(H), \u2286).\n(iii) P(HI ) = I.\n(ii) \u21d2 (iii) This is immediate from Proposition 5.3.\n(iii) \u21d2 (ii) If P(HI ), then any edge e \u2208\n/ E(HI ) must span two maximal barriers. By Proposition\n3.4, e is allowable in HI + e, so HI is maximal in (E(H), \u2286).\n(i) \u21d2 (ii) Let I be a maximal cover set of barriers in B(H) and HI the corresponding elementary\nsupergraph in E(H). Suppose there exists a supergraph H 0 \u2283 HI in E(H). Then, there is an edge\ne in E(H 0 ) \\ E(HI ) so that e is free in HI + e. This implies that e spans vertices within the same\nbarrier B of HI + e (by Proposition 3.4), and B is also a barrier of HI . However, B is split into\nk barriers B1 , . . . , Bk in I, for some k \u2265 2. Therefore, the set I 0 = (I \\ {B1 , . . . , Bk }) \u222a {B} is a\nrefinement of I.\nWe now show that I 0 is a cover set in C(H). Note that any two barriers X1 , X2 \u2208 I 0 where\nneither is equal to B is still non-conflicting. For any barrier X 6= B in I 0 , notice that X does not\nspan more than one component of H \u2212 B, since B is a barrier in HI and HI 0 . Also, if B spanned\n10\n\n\fmultiple components of H \u2212 X, then those components would be combined in HI 0 \u2212 X, but since\nX is a barrier, |X| = odd(HI 0 \u2212 X) \u2264 odd(H \u2212 X) = |X|. Therefore, B does not conflict with any\nother barrier X in I 0 giving I 0 is a cover set and I \u0016 I 0 . This contradicts maximality of I, so HI\nis maximal.\n(ii) \u21d2 (i) By (iii), I = P(HI ). Let I 0 be a cover set so that I \u0016 I 0 . I 0 also partitions V (H), so\nP(HI ) is a refinement of I 0 . Then, the graph HI 0 is a proper supergraph of G. By the maximality\nof G, HI 0 must not be an elementary supergraph in E(H). By the bijection of Claim 5.6, I 0 must\nnot be a cover set of H. Therefore, I is a maximal covering set in C(H).\nThis proves the claim and the theorem follows.\nThe previous theorem provides a method to search for the maximum elements of E(H) by\n\u0001\nP\ngenerating all cover sets {B1 , . . . , Bk } in C(H) and maximizing the sum ki=1 |B2i | .\nThe na\u0131\u0308ve independent set generation algorithm runs with an exponential blowup on the number\nof barriers. This can be remedied in two ways. First, we notice empirically that the number of\nbarriers frequently drops as more edges and ears are added, especially for dense extendable graphs.\nSecond, the number of barriers is largest when the graph is bipartite, as there are exactly two\nmaximal barriers each containing half of the vertices, with many subsets which are possibly barriers.\nWe directly adress the case when H is bipartite as there are exactly two maximum elements of E(H).\nLemma 5.8 (Corollary 5.2 [3]). The maximum number of free edges in an elementary graph with\n\u0001\nn vertices is n/2\n2 .\nNot only is this a general bound, but it is attainable for bipartite graphs. In a bipartite graph\nH, there are exactly two graphs in E(H) which attain this number of free edges.\nLemma 5.9. If H is a bipartite 1-extendable graph, then there are exactly two maximal barriers,\nX1 and X2 . Also, there are exactly two maximum elements G1 , G2 of E(H). Each graph Gi is given\nby adding all possible edges within Xi .\nProof. Let X1 and X2 be the two sides of the bipartition of H. Since H is matchable, |X1 | = |X2 |\nand V (H \u2212 X1 ) = X2 and V (H \u2212 X2 ) = X1 . Thus X1 and X2 are both barriers which partition\nV (H) and by Lemma 5.1 these must be the maximal barriers of H.\nThe sets I1 = {X1 } \u222a {{v} : v \u2208 X2 } and I2 = {X2 } \u222a {{v} : v \u2208 X1 } are maximal cover sets in\nC(H). Using the bijection of Theorem 5.5, I1 corresponds with the maximal elementary graph G1\nin E(H) where all possible edges are added to X1 . Similarly, I2 corresponds to adding all possible\n\u0001\nedges to X2 , producing G2 . Each of these graphs has n(H)/2\nfree edges, the maximum possible\n2\nfor graphs in E(H) by Lemma 5.8.\nWe must show that any other graph G in E(H) has fewer free edges. We again use the bijection\nof Theorem 5.5 in order to obtain a maximal cover set I in B(H) which are filled with free edges\n\u0001\nP\nin G. Then, the number of free edges in G is given by s(I) = B\u2208I |B|\n2 .\nWithout loss of generality, the barrier A of largest size within I is a subset of X1 . For convenience, we use m = n(H)/2 to be the size of each part X1 , X2 and k = |A|, with 1 \u2264 k < m. Note\n11\n\n\fthat in HI , no free edges have endpoints in both A and X1 \\ A, leaving at least k(m \u2212 k) = mk \u2212 k 2\n\u0001\nfewer free edges within X1 in G than in G1 . If HI has n(H)/2\nedges, then the barriers in X2 add\n2\nat least mk \u2212 k 2 free edges.\nThe problem of maximizing s(I) over all maximal cover sets can be relaxed to a linear program\nwith quadratic optimization function as follows: First, fix the barriers of I within X1 , including\nthe largest barrier, A. Then, fix the number of barriers of I within X2 to be some integer `. Then,\nlet {B1 , . . . , B` } be the list of barriers in X2 . Now, create variables xi = |Bi | for all i \u2208 {1, . . . , `}.\n\u0001\nP\nThe barriers in X1 are fixed, so to maximize s(I), we must maximize `i=1 x2i .\nWe now set some constraints on the xi . Since the barriers Bi are not empty, we require xi \u2265 1.\nSince Bi does not conflict with A, each Bi is within a single component of H \u2212 A. Since there\nare |A| such components, there are at least |A| \u2212 1 other vertices in X2 that are not in Bi , giving\nxi \u2264 m \u2212 k + 1. Also, since A is the largest barrier, xi \u2264 k. Finally, the barriers Bi partition X2 ,\nP\ngiving `i=1 xi = m and that there are is at least one barrier per component, giving ` \u2265 k.\n\u0001\n\u0001\n\u0001\n\u0001\ny\nx\ny+1\n+\n>\n+\nSince for x < y, x\u22121\n2 , optimium solutions to this linear program have\n2\n2\n2\nmaximum value when the maximum number of variables have maximum feasible value. Suppose\n\u0001\nt\n1 \u2264 xi \u2264 t are the tightest bounds on the variables x1 , . . . , x` . Then m\u2212`\nt\u22121 2 is an upper bound on\nthe value of the system.\nP\nCase 1: Suppose k \u2265 m \u2212 k + 1. Now, the useful constraints are `i=1 xi = m, 1 \u2264 xi \u2264 m \u2212 k + 1\n\u0001\n\u0001\nP\nm\u2212` m\u2212k+1\nand we are trying to maximize `i=1 x2i . The optimum value is bounded by m\u2212k\n. As\n2\na function of `, this bound is maximized by the smallest feasible value of `, being ` = k. Hence,\n\u0001\nm\u2212k (m\u2212k+1)(m\u2212k)\nwe have an optimum value at most m\u2212k\n= 12 m (m + 1) \u2212 m + 12 k \u2212 12 k 2 . Since\n2\nk \u2265 m \u2212 k + 1, the inequality k \u2265\n\n1\n2 (m\n\n+ 1) holds, and (ii) \u21d2 (iii) This is immediate from\n\nProposition 5.3.\nthe optimum value of this program is at most\n\u0012\n\u0013 \u0012\n\u0013\n1\n1\n1\n1\nm m+\n\u2212 m+\nk \u2212 k2 \u2264\n2\n2\n2\n2\nTherefore, HI must not have\n\nn(H)/2\n2\n\n\u0001\n\nmk\n|{z}\n\nk\u2265 21 (m+1)\n\n1\n\u2212 |{z}\nk 2 \u2212 k 2 < mk \u2212 k 2 .\n2\nk\u2264m\n\nfree edges.\n\nP\nCase 2: Suppose k < m\u2212k+1. The constraints are now `i=1 xi = m, 1 \u2264 xi \u2264 k while maximizing\n\u0001\n\u0001\nP`\nxi\nm\u2212` k\ni=1 2 . This program has optimum value bounded above by k\u22121 2 , which is maximized by\nthe smallest feasible value of `. If m/k > k and ` < m/k, the program is not even feasible, as a\nsum of ` integers at most k could not sum to m. Hence, ` \u2265 max{k, m/k}.\n\u0001 1\nk\nCase 2.a: Suppose k \u2265 m/k. Setting ` = k gives a bound of m\u2212k\n= 2 (mk \u2212 k 2 ). This is clearly\nk\u22121\n2\n\u0001\nn(H)/2\nbelow mk \u2212 k 2 , so HI does not have\nfree edges.\n2\n\u0001 1\nk\nCase 2.b: Suppose k < m/k. Setting ` = dm/ke gives a bound of m\u2212dm/ke\nk\u22121\n2 = \u00012 (mk \u2212 m). Since\nk < m/k, k 2 < m and 21 (mk \u2212 m) \u2264 mk \u2212 k 2 . Hence, HI does not have n(H)/2\nfree edges.\n2\nExperimentation over the graphs used during the generation algorithm for p-extremal graphs\nshows that a na\u0131\u0308ve generation of cover sets in C(H) is sufficiently fast to compute the maximum\n\n12\n\n\fexcess in E(H) when the list of barriers B(H) is known. The following section describes a method\nfor computing B(H) very quickly using the canonical ear decomposition.\n\n6\n\nThe Evolution of Barriers\n\nIn this section, we describe a method to efficiently compute the barrier list B(H) of a 1-extendable\ngraph H utilizing a graded ear decomposition. Consider a non-refinable graded ear decomposition\nH0 \u2282 H1 \u2282 H2 \u2282 * * * \u2282 Hk = H of a 1-extendable graph H starting at a cycle C2` = H0 . Not only\nare the maximal barriers of C2` easy to compute (the sets X, Y forming the bipartition) but also\nthe barrier list (every non-empty subset of X and Y is a barrier).\nLemma 6.1. Let H (i) \u2282 H (i+1) be a non-refinable ear decomposition of a 1-extendable graph\nH (i+1) from a 1-extendable graph H (i) using one or two ears. If B 0 is a barrier in H (i+1) , then\nB = B 0 \u2229 V (H) is a barrier in H (i) .\nProof. There are |B 0 | odd components in H (i+1) \u2212 B 0 . There are at most |B| odd components in\nH (i) \u2212 B, which may combine when the ear(s) are added to make H (i+1) .\nLet x1 , x2 , . . . , xr be the vertices in B 0 \\ B. Each xi is not in V (H (i) ) so it is an internal vertex\nof an augmented ear. Therefore, xi has degree two in H (i+1) , so removing xi from H (i+1) \u2212 (B \u222a\n{x1 , . . . , xi\u22121 }) increases the number of odd components by at most one. Hence, the number of odd\ncomponents of H (i+1) \u2212 B 0 is at most the number of odd components of H (i) \u2212 B plus the number\nof vertices in B 0 \\ B. These combine to form the inequalities\n|B 0 | = odd(H (i+1) \u2212B 0 ) \u2264 odd(H (i+1) \u2212B)+|B 0 \\B| \u2264 odd(H (i) \u2212B)+|B 0 \\B| \u2264 |B|+|B 0 \\B| = |B 0 |.\nEquality holds above, so B is a barrier in H (i) .\nAs one-ear augmentations and two-ear augmentations are applied to each H (i) , we update the\nlist B(H (i+1) ) of barriers in H (i+1) using the list B(H (i) ) of barriers in H (i) .\nLemma 6.2. Let B be a barrier of a 1-extendable graph H (i) . Let H (i) \u2282 H (i+1) be a 1-extendable\near augmentation of H (i) using one (\u03b51 ) or two (\u03b51 , \u03b52 ) ears.\n1. If any augmenting ear connects vertices from different components of H (i) \u2212 B, then B is not\na barrier in H (i+1) , and neither is any B 0 \u2283 B where B = B 0 \u2229 V (H (i) ).\n2. Otherwise, if B does not contain any endpoint of the augmented ear(s), then B is a barrier\nof H (i+1) , but B \u222a S for any non-empty subset S \u2286 V (H (i+1) ) \\ V (H (i) ) is not a barrier of\nH (i+1) .\n3. If B contains both endpoints of some ear \u03b5i , then B is not a barrier in H (i+1) and neither is\nany B 0 \u2283 B.\n4. If B contains exactly one endpoint (x) of one of the augmented ears (\u03b5j ), then\n(a) B is a barrier of H (i+1) .\n13\n\n\f(b) For S \u2286 V (H (i+1) ) \\ V (H (i) ), B \u222a S is a barrier of H (i+1) if and only if S contains only\ninternal vertices of \u03b5j of even distance from x along \u03b5j .\n5. If B = \u2205, then for any subset S \u2286 V (H (i+1) ) \\ V (H (i) ) B \u222a S is a barrier of H (i+1) if and\nonly if the vertices in S are on a single ear \u03b5j and the pairwise distances along \u03b5j are even.\nProof. Let B 0 be a barrier in H (i+1) . Lemma 6.1 gives B = B 0 \u2229 V (H (i) ) is a barrier of H (i) , and\nH (i) \u2212 B has |B| odd connected components. Thus, the barriers of H (i+1) are built from barriers\nB in H (i) and adding edges from the new ear(s).\nCase 1: If an ear \u03b5j spans two components of H (i) \u2212 B, then the number of components in\nH (i+1) \u2212 B is at most |B| \u2212 2. Any vertices from \u03b5j added to B can only increase the number of\nodd components by at most one at a time, but also increases the size of B by one. Hence, vertices\nin V (H (i+1) ) \\ V (H (i) ) can be added to B to form a barrier in H (i+1) .\nCase 2: If each ear \u03b5j spans points in the same components of H (i) \u2212 B, then the number of\nodd connected components in H (i+1) \u2212 B is the same as in H (i) \u2212 B, which is |B|. Hence, B is a\nbarrier of H (i+1) . However, adding a single vertex from any ei does not separate any component\nof H (i+1) \u2212 B, but adds a count of one to |B|. Adding any other vertices from \u03b5j to B can only\nincrease the number of components by one but increases |B| by one. Hence, no non-empty set of\nvertices from the augmented ears can be added to B to form a barrier of H (i+1) .\nCase 3: Suppose B contains both endpoints of an ear \u03b5j . If \u03b5j is a trivial ear, then it is an\nextendable edge. If B 0 \u2287 B is a barrier in H (i+1) , this violates Proposition 3.4 which states edges\nwithin barriers are free edges. If \u03b5j has internal vertices, they form an even component in H (i+1) \u2212B.\nBy Lemma 5.2, this implies that B is not a barrier. Any addition of internal vertices from \u03b5j to form\nB 0 \u2283 B will add at most one odd component each, but leave an even component in H (i+1) \u2212 B 0 . It\nfollows that no such B 0 is a barrier in H (i+1) .\nCase 4: Note that If an ear \u03b5j has an endpoint within B, then in H (i+1) \u2212 B, the internal vertices\nof \u03b5j are attached to the odd component of H (i+1) \u2212 B containing the opposite endpoint. Since\nthere are an even number of internal vertices on \u03b5j , then H (i+1) \u2212 B has the same number of odd\nconnected components as H (i) \u2212 B, which is |B|. Hence, B is a barrier in H (i+1) .\nLet the ear \u03b5j be given as a path of vertices x0 x1 x2 . . . xk , where x0 = x and xk is the other\nendpoint of \u03b5j . Let S be a subset of {x1 , . . . , xk\u22121 }, the internal vertices of \u03b5j . The number of\ncomponents given by removing S from the path x1 x2 * * * xk\u22121 xk is equal to the number of gaps in\nS: the values a so that xa is in S and xa+1 is not in S. These components are all odd if and only\nif for each xa and xa0 in S, |a \u2212 a0 | is even. Thus, B \u222a S is a barrier in H (i+1) if and only if S is a\nsubset of the internal vertices which are an even distance from x0 .\nLemma 6.2 describes all the ways a barrier B \u2208 B(H) can extend to a barrier B 0 \u2208 B(H + \u03b51 ) or\nB 0 \u2208 B(H + \u03b51 + \u03b52 ). Note that the barriers B 0 which use the internal vertices of \u03b51 are independent\nof those which use the internal vertices of \u03b52 , unless one of the ears spans multiple components of\nH + \u03b51 + \u03b52 \u2212 B 0 . This allows us to define a pseudo-barrier list B(H + \u03b5) for almost 1-extendable\ngraphs H + \u03b5, where H is 1-extendable. During the generation algorithm, we consider a single-ear\n14\n\n\faugmentation H (i) \u2282 H (i) + \u03b5i = H (i+1) . Regardless of if H (i) or H (i+1) is almost 1-extendable, we\ncan update B(H (i+1) ) by taking each B \u2208 B(H (i) ) and adding each B \u222a S that satisfies Lemma 6.2\nto B(H (i+1) ). This process generates all barriers B 0 \u2208 B(H (i+1) ) so that B 0 \u2229 V (H (i) ) = B, so each\nbarrier is generated exactly once.\nIn addition to updating the barrier list in an ear augmentation H (i) \u2282 H (i+1) , we determine\nthe conflicts between these barriers.\nLemma 6.3. Let H (i) \u2282 H (i+1) be a 1-extendable ear augmentation using one (\u03b51 ) or two (\u03b51 , \u03b52 )\nears. Suppose B10 and B20 are barriers in H (i+1) with barriers B1 = V (H (i) ) \u2229 B10 and B2 =\nV (H (i) ) \u2229 B20 of H (i) . The barriers B10 and B20 conflict in H (i+1) if and only if one of the following\nholds: (1) B10 \u2229 B20 6= \u2205, (2) B1 and B2 conflict in H (i) , or (3) B10 and B20 share vertices in some\near (\u03b5j ), with vertices x0 x1 x2 . . . xk , and there exist indices 0 \u2264 a1 < a2 < a3 < a4 \u2264 k so that\nxa1 , xa3 \u2208 B10 and xa2 , xa4 \u2208 B20 .\nProof. Note that by definition, if B10 \u2229 B20 6= \u2205, then B10 and B20 conflict. We now assume that\nB10 \u2229 B20 = \u2205.\nIf B1 or B2 conflict in H (i) , then without loss of generality, B2 has vertices in multiple components of H (i) \u2212 B1 . Since B10 is a barrier in H (i+1) , Lemma 6.2 gives that no ear \u03b5j spans multiple\ncomponents of H (i) \u2212B1 , and the components of H (i) \u2212B1 correspond to components of H (i+1) \u2212B1 .\nHence, B2 also spans multiple components of H (i+1) \u2212 B1 and B10 and B20 conflict in H (i+1) .\nNow, consider the case that the disjoint barriers B1 and B2 did not conflict in H (i) . Since B1 and\nB2 are barriers of H (i) , then the vertices in B10 \\ B1 are limited to one ear \u03b5j1 of the augmentation,\nand similarly the vertices of B20 \\ B2 are within a single ear \u03b5j2 . Since B1 and B2 do not conflict,\nall of the vertices within B2 lie in a single component of H (i) \u2212 B1 : the component containing the\near \u03b5j1 . Similarly, the vertices of B1 are contained in the component of H (i) \u2212 B2 that contains the\nendpoints of \u03b5j2 .\nThe components of H (i+1) \u2212B1 are components in H (i+1) \u2212B10 except the component containing\nthe ear \u03b5j1 is cut into smaller components for each vertex in \u03b5j1 and B10 . In order to span these\nnew components, B20 must have a vertex within \u03b5j1 . Therefore, the ears \u03b5j1 and \u03b5j2 are the same\near, given by vertices x0 , x1 , . . . , xk .\nSuppose there exist indices 0 \u2264 a1 < a2 < a3 < a4 \u2264 k so that xa1 and xa3 are in B10 and xa2\nand xa4 are in B20 . Then, the vertices xa1 and xa3 of B10 are in different components of H (i+1) \u2212 B20 ,\nsince every path from xa3 to xa1 in H (i+1) passes through one of the vertices xa2 or xa4 . Hence, B10\nand B20 conflict.\nIf B10 and B20 do not admit such indices a1 , . . . , a4 , then listing the vertices x0 , x1 , x2 , . . . , xk in\norder will visit those in B10 and B20 in two contiguous blocks. In H (i+1) \u2212 B10 , the block containing\nthe vertices in B20 remain connected to the endpoint closest to the block, and hence B20 will not span\nmore than one component of H (i+1) \u2212 B10 . Similarly, B10 will not span more than one component\nof H (i+1) \u2212 B20 . B10 and B20 do not conflict in this case.\nThe following corollary is crucial to the bound in Lemma 7.1.\n15\n\n\fCorollary 6.4. Let H (i) \u2282 H (i+1) be a 1-extendable ear augmentation using one (\u03b51 ) or two (\u03b51 , \u03b52 )\nears. Let I be a maximal cover set in C(H (i+1) ) and S be the set of internal vertices x of an ear\n\u03b5j such that the barrier in I containing x has at least one vertex in V (H (i) ). Then, S contains at\nmost half of the internal vertices of \u03b5j .\nProof. Let A0 \u2282 I be the set of barriers containing a vertex x in \u03b5j and a vertex y in V (H (i) ).\nFor a barrier B to contain an internal vertex of \u03b5j and a vertex in V (H (i) ), Lemma 6.2 states that\nB must contain at least one of the endpoints of the ear \u03b5j . Since each barrier in A0 contains and\nendpoint of \u03b5j and non-conflicting barriers are non-intersecting, there are at most two barriers in\nA0 .\nIf there is exactly one barrier B in A0 , by Lemma 6.2 it must contain vertices an even distance\naway from the endpoint contained in B, and hence at most half of the internal vertices of \u03b5j are\ncontained in B.\nIf there are two non-conflicting barriers B1 and B2 in A0 , then by Lemma 6.3 the vertices of B1\nand B2 within \u03b5j come in two consecutive blocks along \u03b5j . Since each barrier includes only vertices\nof even distance apart, B1 contains at most half of the vertices in one block and B2 contains at\nmost half of the vertices in the other block. Hence, there are at most half of the internal vertices\nof \u03b5j in S.\n\n7\n\nBounding the maximum reachable excess\n\nIn order to prune search nodes, we wish to detect when it is impossible to extend the current 1extendable graph H with q perfect matchings to a 1-extendable graph H 0 with p perfect matchings\nso that H 0 has an elementary supergraph G0 \u2208 E(H 0 ) with excess c(G0 ) \u2265 c. The following lemma\ngives a method for bounding c(G0 ) using the maximum excess c(G) over all elementary supergraphs\nG in E(H).\nLemma 7.1. Let H be a 1-extendable graph on n vertices with \u03a6(H) = q. Let H 0 be a 1-extendable\nsupergraph of H built from H by a graded ear decomposition. Let \u03a6(H 0 ) = p > q and N = n(H 0 ).\nChoose G \u2208 E(H) and G0 \u2208 E(H 0 ) with the maximum number of edges in each set. Then,\n1\nc(G0 ) \u2264 c(G) + 2(p \u2212 q) \u2212 (N \u2212 n)(n \u2212 2).\n4\nProof. Let\nH = H (0) \u2282 H (1) \u2282 * * * \u2282 H (k\u22121) \u2282 H (k) = H 0\nbe a non-refinable graded ear decomposition as in Theorem 3.2. For each i \u2208 {0, 1, . . . , k}, let\nG(i) \u2208 E(H (i) ) be of maximum size. Without loss of generality, assume G(0) = G and G(k) = G0 .\nThe following claims bound the excess c(G(i) ) in terms of c(G(i\u22121) ) using the ear augmentation\nH (i\u22121) \u2282 H (i) .\n\n16\n\n\fClaim 7.2. If H (i\u22121) \u2282 H (i) is a single ear augmentation H (i) = H (i\u22121) + \u03b51 where \u03b51 has order\n`(i) , then\n3\n1\n1\nc(G(i) ) \u2264 c(G(i\u22121) ) + 1 + `(i) \u2212 (`(i) )2 \u2212 `(i) n(H (i\u22121) ).\n4\n8\n4\nBy Lemma 3.5, \u03b51 spans two maximal barriers X, Y \u2208 P(H (i) ). H (i) has `(i) +1 more extendable\nedges than H (i\u22121) .\nWe now bound the number of free edges G(i) has compared to the number of free edges in G(i\u22121) .\nThe elementary supergraph G(i) has a clique partition of free edges given by a maximal cover set I\nin C(H (i) ). For each barrier B \u2208 I, the set B \u2229 V (H (i\u22121) ) is also a barrier of H (i\u22121) , by Lemma 6.1.\nThrough this transformation, the maximal cover set I admits an cover set I 0 = {B \u2229 V (H (i\u22121) ) :\n(i\u22121)\n\nB \u2208 I} in C(H (i\u22121) ). This cover set I 0 generates an elementary supergraph G\u2217\n\n\u2208 E(H (i\u22121) )\n\nthrough the bijection in Claim 5.6. The free edges in G(i) which span endpoints within V (H (i\u22121) )\n(i\u22121)\n\nare exactly the free edges of G\u2217\n\n(i\u22121)\n\n. By the selection of G(i\u22121) , e(G\u2217\n\n) \u2264 e(G(i\u22121) ).\n\nWhen `(i) > 0, the `(i) internal vertices of \u03b51 may be incident to free edges whose other endpoints\nlie in the barriers X and Y . By Corollary 6.4, at most half of the vertices in \u03b51 have free edges to\nvertices in X and Y . Since the barriers X and Y are in H (i\u22121) , they have size at most\nthere\nAlso,\n\n(i\u22121)\nare at most 2 n(H 2 )\n\u0001\n(i)\nthere are at most ` 2/2\n\n`(i)\n\nn(H (i\u22121) )\n.\n2\n\nSo,\n\nfree edges between these internal vertices and the rest of the graph.\n= 18 (`(i) )2 \u2212 41 `(i) free edges between the internal vertices themselves.\n\nCombining these edge counts leads to the following inequalities:\n(n(H (i\u22121) ) + `(i) )2\n4\n#\n\u0011 n(H (i\u22121) )`(i) 1\n\u0010\n1\n(i\u22121)\n\u2264 e(G\u2217\n) + 1 + `(i) +\n+ (`(i) )2 \u2212 `(i)\n2\n8\n4\n\"\n#\nn(H (i\u22121) )2 n(H (i\u22121) )`(i) (`(i) )2\n\u2212\n+\n+\n4\n2\n4\n\nc(G(i) ) = e(G(i) ) \u2212\n\"\n\nn(H (i\u22121) )2 1 (i) 2\n3\n\u2212 (` )\n\u2264 e(G(i\u22121) ) + 1 + `(i) \u2212\n4\n4\n8\n3 (i) 1 (i) 2 1 (i)\n(i\u22121)\n= c(G\n) + 1 + ` \u2212 (` ) \u2212 ` ni\u22121 .\n4\n8\n4\nThis proves Claim 7.2. We now investigate a similar bound for two-ear autmentations.\nClaim 7.3. Let H (i\u22121) \u2282 H (i) be a two-ear augmentation H (i) = H (i\u22121) + \u03b51 + \u03b52 where the ears\n(i)\n\n(i)\n\n(i)\n\n(i)\n\n\u03b51 and \u03b52 have `1 and `2 internal vertices, respectively. Set `(i) = `1 + `2 . Then,\n1\n1 (i) (i) 1\n3\nc(G(i) ) \u2264 c(G(i) ) + 2 + `(i) \u2212 (`(i) )2 \u2212 `1 `2 \u2212 `(i) n(H (i\u22121) .\n4\n8\n4\n4\nBy Lemma 3.6, the first ear spans endpoints x1 , x2 in a maximal barrier X \u2208 P(H (i) ) and the\nsecond ear spans endpoints y1 , y2 in a different maximal barrier Y \u2208 P(H (i) ). Note that after these\naugmentations, x1 and x2 are not in the same barrier, and neither are y1 and y2 , by Lemma 6.2.\nThe graph G(i) is an elementary supergraph of H (i) given by adding cliques of free edges\n17\n\n\fcorresponding to a maximal cover set I in C(H (i) ). By Lemma 6.1, each barrier B \u2208 I generates\nthe barrier B \u2229 V (H (i\u22121) ) in V (H (i\u22121) ). This induces a cover set I 0 = {B \u2229 V (H (i\u22121) ) : B \u2208 I}\n(i\u22121)\n\nin C(H (i\u22121) ) which in turn defines an elementary supergraph G\u2217\n5.6. By the choice of\n\n(i\u22121)\nG(i\u22121) , e(G\u2217\n)\n\nthrough the bijection in Claim\n\n\u2264 e(G(i\u22121) ).\n(i\u22121)\n\nConsider the number of free edges in G(i) compared to the free edges in G\u2217\n(i)\n`1\n\n(i)\n`2\n\n. First, the\n\nn(H (i\u22121) )\n\nnumber\nof \u0013\nedges between the\n+\nnew vertices and the\noriginal vertices is at most\n\u0012 (i)\n(i)\n`1\n`2\nn(H (i\u22121) )\n, since the additions must occur within barriers, at most half of the internal\n2 + 2\n2\nvertices of each ear can be used (by Corollary 6.4), and barriers in H (i\u22121) have at most\n(i)\n\n(i)\n\nn(H (i\u22121) )\n2\n\nvertices. Second, consider the number of free edges within the `1 + `2 vertices. Note that no\nfree edges can be added between \u03b51 and \u03b52 since the internal vertices of \u03b51 and \u03b52 are in different\n(i) \u0001\n(i) \u0001\nmaximal barriers of H (i) . Thus, there are at most `1 2/2 + `2 2/2 free edges between the internal\n(i)\n(i)\n\u0001\n\u0001\n(i)\n(i)\n(i)\n(i)\n(i) (i)\nvertices. Since `1 2/2 + `2 2/2 = 81 (`1 + `2 )2 \u2212 41 (`1 + `2 + `1 `2 ), we have\n(i)\n\n(i)\n\n(ni\u22121 ) + `1 + `2 )2\n4\n\u0010\n\u0011 n(H (i\u22121) )(`(i) + `(i) )\n(i\u22121)\n(i)\n(i)\n1\n2\n\u2264 e(G\u2217\n) + 1 + `1 + 1 + `2 +\n4\n\u0011\n\u0011\n1 \u0010 (i)\n1 \u0010 (i)\n(i) 2\n(i)\n(i) (i)\n+\n`1 + `2\n\u2212\n`1 + `2 + `1 `2\n4\n#\n\"8\n(i)\n(i)\n(i)\n(i)\n(i\u22121)\n2\nn(H (i\u22121) )(`1 + `2 ) (`1 + `2 )2\nn(H\n)\n+\n+\n\u2212\n4\n2\n4\n\u0011\nn(H (i\u22121) )2 \u0010\n(i)\n(i)\n\u2264 e(G(i\u22121) ) \u2212\n+ 2 + `1 + `2\n4\n\u0011 1\u0010\n\u0011\n1 \u0010 (i)\n1 (i) (i) 1\n(i)\n(i)\n(i) 2\n\u2212\n`1 + `2 \u2212\n`1 + `2\n\u2212 `1 `2 \u2212 n(H (i\u22121) )`(i)\n4\n8\n4\n4\n\u0010 \u0011 (`(i) )2 1\n3\n1\n(i) (i)\n= c(G(i\u22121) ) + 2 +\n`(i) \u2212\n\u2212 `1 `2 \u2212 n(H (i\u22121) )`(i) .\n4\n8\n4\n4\n\nc(G(i) ) = e(G(i) ) \u2212\n\nWe have now proven Claim 7.3. We now combine a sequence of these bounds to show the global\nbound.\nSince each ear augmentation forces \u03a6(H (i) ) > \u03a6(H (i\u22121) ), there are at most p\u2212q augmentations.\nMoreover, the increase in c(G(i) ) at each step is bounded by 1 + 34 `(i) \u2212 18 (`(i) )2 \u2212 41 `(i) n(H (i\u22121) )\n(i) (i)\n\nin a single ear augmentation and 2 + 34 `(i) \u2212 18 (`(i) )2 \u2212 41 `1 `2 \u2212 14 `(i) n(H (i\u22121) ) in a double ear\naugmentation. Independent of the number of ears,\n1\n1\nc(G(i) ) \u2212 c(G(i\u22121) ) \u2264 2 + `(i) \u2212 (`(i) )2 \u2212 `(i) n(H (i\u22121) ).\n8\n4\n\n18\n\n\fNote also that if `(i) is positive, then it is at least two. Combining those inequalities gives\nc(G0 ) \u2264 c(G) +\n\n\u0013\nk \u0012\nX\n3\n1\n1\n2 + `(i) \u2212 (`(i) )2 \u2212 `(i) n(H (i\u22121) )\n4\n8\n4\ni=1\n\n\u2264 c(G) +\n\nk\nX\ni=1\n\nk\n\n2+\n\nk\n\nk\n\n3 X (i) 1 X (i) 2 1 X (i)\n` \u2212\n(` ) \u2212\n` n(H (i\u22121) )\n4\n8\n4\ni=1\n\n3\n1\n\u2264 c(G) + 2k + (N \u2212 n) \u2212\n4\n8\n\ni=1\nk\nX\n\n2`(i) \u2212\n\ni=1\n\n1\n4\n\ni=1\nk\nX\n(i)\n\n` n\n\ni=1\n\n1\n\u2264 c(G) + 2(p \u2212 q) \u2212 (N \u2212 n)(n \u2212 2).\n4\nThis proves the result.\nCorollary 7.4. Let p, c \u2265 1 be integers. If H is a 1-extendable graph with q = \u03a6(H), c0 is the\nmaximum excess c(G) over all graphs G \u2208 E(H), and c0 + 2(p \u2212 q) < c, then there is no 1-extendable\ngraph H \u2282 H 0 reachable from H by a graded ear decomposition so that \u03a6(H 0 ) = p and there exits\na graph G0 \u2208 E(H 0 ) with excess c(G0 ) \u2265 c.\nCorollary 7.4 gives the condition to test if we can prune the current node, since there does not\nexist a sequence of ear augmentations that lead to a graph with excess at least our known lower\nbound on cp . Moreover, Lemma 7.1 provides a dynamic bound on the number N of vertices that\ncan be added to the current graph while maintaining the possibility of finding a graph with excess\nat least the known lower bound on cp , by selecting N to be maximum so that c0 + 2(p \u2212 \u03a6(H)) \u2212\n1\n4 (N\n\n\u2212 n)(n \u2212 2) \u2265 c.\n\n8\n\nResults and Data\n\nThe full algorithm to search for p-extremal elementary graphs combines three types of algorithms.\nFirst, the canonical deletion from Section 3 is used to enumerate the search space with no duplication of isomorphism classes. Second, the pruning procedure from Section 7 greatly reduces the\nnumber of generated graphs by backtracking when no dense graphs are reachable. Third, Section 5\nprovided a method for adding free edges to a 1-extendable graph with p perfect matchings to find\nmaximal elementary supergraphs.\nThe recursive generation algorithm Search(H (i) , N, p, c) is given in Algorithm 1. Given a previously computed lower bound c \u2264 cp , the full search Generate(p, c) (Algorithm 2) operates by\nrunning Search(C2k , Np , p, c) for each even cycle C2k with 4 \u2264 2k \u2264 Np . All elementary graphs G\nwith \u03a6(G) = p and c(G) \u2265 c are generated by this process.\nTheorem 8.1. Given p and c \u2264 cp , Generate(p, c) (Algorithm 2) outputs all unlabeled elementary\ngraphs with p perfect matchings and excess at least c.\n\n19\n\n\fAlgorithm 1 Search(H (i) , N (i) , p, c)\nCheck all pairs of vertices, up to symmetries\nfor all vertex-pair orbits O in H (i) do\n{x, y} \u2190 representative pair of O\nAugment by ears of all even orders\nfor all orders r \u2208 {0, 2, . . . , N (i) \u2212 n(H (i) )} do\nH (i+1) \u2190 H (i) + Ear(x, y, r)\nif H (i) is almost 1-extendable and H (i+1) is not 1-extendable then\nSkip H (i+1) (decomposition is not graded).\nelse if \u03a6(H (i+1) ) > p then\nSkip H (i+1) .\nelse\nCheck the canonical deletion\n(x0 , y 0 , r0 ) \u2190 del(H (i+1) )\nif r = r0 and {x0 , y 0 } \u2208 O then\nThis augmentation matches the canonical deletion\nn(i+1) \u2190 n(H (i+1) ).\np(i+1) \u2190 \u03a6(H (i+1)\n\u0010 ).\n\u0011\n(i+1)\n(i+1)\nc\n\u2190 max{c HI\n: I \u2208 C(H (i+1) )}.\nif p(i+1) = p and c(i+1) \u2265 c then\nThere are solutions within E(H (i+1) ).\n(i+1) ) do\nfor all\u0010cover sets\n\u0011 I \u2208 C(H\n(i+1)\nif c HI\n\u2265 c then\nOutput HI .\nend if\nend for\nelse if q < p and c(i+1) + 2(p \u2212 p(i+1) ) \u2265 c then\nUse Lemma 7.1 to bound the number of vertices for future augmentations.\nN (i+1) = max{N 0 : c(i+1) + 2(p \u2212 p(i+1) ) \u2212 41 (N 0 \u2212 n(i+1) ))(n(i+1) \u2212 2) \u2265 c}.\nSearch(H (i+1) , N (i+1) , p, c).\nend if\nend if\nend if\nend for\nend for\nreturn\n\nAlgorithm 2 Generate(p, c)\n\u221a\nN \u2190 max{2r : 2r \u2264 3 + 16p \u2212 8c \u2212 23}.\nfor r \u2208 {1, . . . , N/2} do\nSearch(C2r , N, p, c)\nend for\nreturn\n\n20\n\n\fp\nnp\ncp\nCp\n\n11\n8\n3\n4\n\n12\n6\n5\n5\n\n13\n8\n3\n5\n\n14\n8\n4\n5\n\n15\n6\n6\n6\n\n16\n8\n4\n6\n\n17\n8\n4\n6\n\n18\n8\n5\n6\n\n19\n8\n4\n6\n\n20\n8\n5\n6\n\n21\n8\n5\n6\n\n22\n8\n5\n6\n\n23\n8\n5\n6\n\n24\n8\n6\n6\n\n25\n8\n5\n6\n\n26\n8\n5\n6\n\n27\n8\n6\n6\n\nTable 2: New values of np and cp . Conjecture 1.2 states that cp \u2264 Cp .\nProof. Given an unlabeled graph G with \u03a6(G) = p and c(G) \u2265 c, note that Theorem 2.1 implies\n\u221a\nn(G) \u2264 3 + 16p \u2212 8c \u2212 23. With respect to the canonical deletion del(H), let H (0) \u2282 H (1) \u2282\n* * * \u2282 H (k) be the canonical ear decomposition of the extendable subgraph H in G. By the choice\nof canonical deletion, this decomposition takes the form of Corollary 3.3. Moreover, H (0) is an even\ncycle C2r for some r. The Generate(p, c) method initializes Search(C2r , N, p, c).\nBy the definition of canonical ear decomposition, the canonical ear \u03b5(i) = del(H (i) ) of H (i)\nis the ear used to augment from H (i\u22121) to H (i) . Let x(i) , y (i) be the endpoints of \u03b5(i) . When\nSearch(H (i) , N (i) , p, c) is called, the pair orbit O containing {x(i+1) , y (i+1) } is visited and an ear \u03b5\n(i+1)\n(i+1) \u223c\nof the same order as \u03b5(i+1) is augmented to H (i) to form a graph H\u2217\n. Note that H\u2217\n= H (i+1)\nwith an isomorphism mapping \u03b5 to \u03b5(i+1) . By the definition of the canonical deletion del(H), the\nalgorithm accepts this augmentation.\nFor each i, let G(i) be a maximum-size elementary supergraph in E(H (i) ). By Theorem 5.5,\n(i)\n\nthere exists a maximal cover set I \u2208 C(H (i) ) so that G(i) = HI . Since c(G(k) ) = c(G) \u2265 c, Lemma\n7.1 gives c(G) \u2264 c(G(i+1) ) + 2(p \u2212 p(i+1) ) \u2212 14 (n(G) \u2212 n(H (i+1) ))(n(H (i+1) ) \u2212 2), so the algorithm\nrecurses with N (i+1) \u2265 n(G).\nWhen H (k) is reached, the algorithm notices that \u03a6(H (k) ) = p and enumerates all cover sets\n(k)\n\nI \u2208 C(H (k) ) which generates the elementary supergraphs HI\n\n\u2208 E(H (k) ) with excess at least c.\n\nSince H (k) is the extendable subgraph of G and c(G) \u2265 c, this procedure will output G.\nThe framework for this search was implemented within the EarSearch library4 . This implementation was executed on the Open Science Grid [8] using the University of Nebraska Campus\nGrid [12]. The nodes available on the University of Nebraska Campus Grid consist of Xeon and\nOpteron processors with a speed range of between 2.0 and 2.8 GHz.\nCombining this algorithm with known lower bounds on cp for p \u2208 {11, . . . , 27} provided a full\nenumeration of p-extremal graphs for this range of p. The resulting values of cp and np are given\nin Table 2. The computation time for these values ranged from less than a minute to more than 10\nyears. Table 3 gives the full list of computation times. The resulting p-extremal elementary graphs\nfor 11 \u2264 p \u2264 27 are given in Figure 1.\nTo describe the complete structural characterization of p-extremal graphs on n vertices for all\neven n \u2265 np , we apply Theorem 2.2. An important step in applying Theorem 2.2 is to consider every\nQ\nfactorization p = pi and to check which spires are generated by the pi -extremal elementary graphs.\nWe describe these structures based on the types of constructions given by these factorizations. It\nis necessary to consider the p-extremal elementary graphs for 1 \u2264 p \u2264 10, in Figure 2.\n4\n\nThe EarSearch library is available at https://github.com/derrickstolee/EarSearch\n\n21\n\n\fp\n5\n6\n7\n8\n9\n10\n11\n12\n13\n14\n15\n\nNp\n8\n10\n10\n12\n12\n12\n14\n14\n14\n16\n16\n\ncp\n2\n3\n3\n3\n4\n4\n3\n5\n3\n4\n6\n\nTotal CPU Time\n0.02s\n0.04s\n0.18s\n0.72s\n1.46s\n5.95s\n43.29s\n44.01s\n6m 39.80s\n12m 10.40s\n12m 42.72s\n.\n\np\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n26\n27\n\nNp\n16\n16\n18\n18\n18\n18\n20\n20\n20\n20\n20\n22\n\ncp\n4\n4\n5\n4\n5\n5\n5\n5\n6\n5\n5\n6\n\nTotal CPU Time\n2h 07m\n6h 46m\n11h 45m\n2d 17h 12m\n4d 05h 28m\n13d 17h 29m\n42d 20h 40m\n118d 07h 38m\n209d 10h 09m\n2y 187d 21h 48m\n7y 75d 13h 55m\n10y 247d 21h 3m\n\n58.60s\n07.72s\n01.95s\n31.85s\n11.79s\n12.45s\n30.41s\n36.84s\n54.98s\n46.31s\n10.27s\n13.94s\n\nTable 3: Time analysis of the search for varying p values.\nFor p \u2208 {11, 13, 17, 19, 23}, p is prime, and there is no non-trivial factorization of p. Hence, a\np-extremal graph is a spire using exactly one p-extremal elementary graph with all other vertices\nwithin chambers isomorphic to K2 . In most cases, the p-extremal elementary graph must appear\nat the top of the spire. Only when p = 11 and the 11-extremal elementary graph chosen is the one\nwith a barrier of size 4 can this chamber be positioned anywhere in the spire.\nFor each p \u2208 {15, 22, 25, 26}, p has at least one non-trivial factorization p =\n\nQ\n\npi , but the sum\n\nof cpi over the factors is strictly below cp . Hence, no p-extremal spire could contain more than\none non-trivial chamber. Also, all p-extremal elementary graphs have a barrier with relative size\nstrictly below 12 , so the non-trivial chamber must appear at the top of the spire.\nQ\nP\nFor each p \u2208 {21, 27}, there exists at least one factorization p = pi , all with\ncpi \u2264 cp , and\nat least one factorization which reaches cp with equality. For example, 21 = 3 * 7, and c3 + c7 =\n2 + 3 = 5 = c21 . However, in these cases of equality, pi -extremal elementary graphs with large\nbarriers do not exist and it is impossible to achieve an excess of cp over the entire spire using\nmultiple non-trivial chambers. Hence, the p-extremal graphs for these values of p have exactly one\nnon-trivial chamber with p perfect matchings and these chambers have small barriers, so they must\nappear at the top of the spire.\nFor each p \u2208 {14, 18, 20, 24}, there is at least one factorization p =\n\nQ\n\npi so that\n\nP\n\ncpi = cp\n\nand there are pi -extremal graphs with large enough barriers to admit a spire with excess cp . These\nfactorizations are 14 = 2 * 7, 18 = 3 * 6 = 2 * 9, 20 = 2 * 10, and 24 = 2 * 12. There are also the\np-extremal spires with exactly one non-trivial chamber, most of which must appear at the top of\nthe spire. For p \u2208 {14, 24}, there exists one p-extremal elementary graph with a large barrier that\ncan appear anywhere in a p-extremal spire.\nThe case p = 16 is special: every factorization admits at least one configuration for a 16-extremal\nspire. The q-extremal elementary graphs for q \u2208 {1, 2, 4, 8} as found by Hartke, Stolee, West, and\nYancey [3] are given in Figure 2. Note that for each such q, there exists at least one q-extremal\ngraph with a barrier with relative size\n\n1\n2.\n\nThis allows any combination of values of q that have\n\n22\n\n\fp = 11\n\np = 11\n\np = 12\n\np = 13\n\np = 13\n\np = 13\n\np = 13\n\np = 13\n\np = 13\n\np = 14\n\np = 14\n\np = 15\n\np = 16\n\np = 16\n\np = 16\n\np = 16\n\np = 17\n\np = 17\n\np = 18\n\np = 18\n\np = 19\n\np = 19\n\np = 19\n\np = 19\n\np = 19\n\np = 19\n\np = 20\n\np = 21\n\np = 21\n\np = 21\n\np = 22\n\np = 23\n\np = 24\n\np = 24\n\np = 25\n\np = 25\n\np = 26\n\np = 26\n\np = 26\n\np = 27\n\nFigure 1: The p-extremal elementary graphs where 1 \u2264 p \u2264 27.\nproduct 16 give a spire with 16 perfect matchings and excess equal to the sum of the excesses of\nthe chambers, which always adds to c16 = 4. There are two 8-extremal elementary graphs and\nthree 16-extremal elementary graphs which have small barriers and must appear at the top of a\n16-extremal spire. All other chambers of a 16-extremal spire can take any order.\n\n9\n\nFuture work\n\n\u221a\nThe O( p) bound Np on the number of vertices in a p-extremal elementary graph was sufficient\nfor the computational technique described in this work to significantly extend the known values of\ncp . However, all of the elementary graphs we discovered to be p-extremal for p \u2264 27 have at most\n10 vertices, which could be generated using existing software, such as McKay's geng program [7].\nWith a smaller Np value, the distributed search can also be improved. Computation time would\nstill be exponential in p because the depth of the search is a function of p, but the branching\nfactor at each level would be reduced. This delays the exponential behavior and potentially makes\nsearches over larger values of p become tractable. This motivates the following conjecture.\nConjecture 9.1. Every p-extremal elementary graph has at most 2 log2 p vertices.\n\n23\n\n\fp=1\n\np=2\n\np=3\n\np=4\n\np=5\n\np=5\n\np=6\n\np=6\n\np=7\n\np=8\n\np=8\n\np=8\n\np=9\n\np = 10\n\nFigure 2: The p-extremal elementary graphs with 1 \u2264 p \u2264 10 [1, 3].\nThis conjecture is tight for p = 2k , with k \u2208 {1, 2, 3, 4} and holds for all p \u2264 27. Note that\nn8 = 6, but there is an 8-extremal elementary graph with eight vertices. Similarly, n16 = 8, but\nthere is a 16-extremal elementary graph with ten vertices.\nThe structure theorem requires searching over all factorizations of p in order to determine which\nfactorizations yield a spire with the largest excess. However, all known values of p admit p-extremal\nelementary graphs. Moreover, all composite values p = p1 p2 admit cp \u2265 cp1 + cp2 . Does this always\nhold?\nConjecture 9.2. For all p \u2265 1, there exists a p-extremal elementary graph.\nConjecture 9.3. For all products p =\n\nQk\n\ni=1 pi\n\nwith p \u2265 1, cp \u2265\n\nThe closest known bound to Conjecture 9.3 is cp \u2265 cp1 +\n\nPk\n\nPk\n\ni=1 cpi .\n\ni=2 w(pi ),\n\nwhere w(n) is the number\n\nof 1's in the binary representation of n [3, Proposition 7.1].\n\nAcknowledgements\nThis work was completed utilizing the Holland Computing Center of the University of Nebraska.\nThanks to the Holland Computing Center faculty and staff including Brian Bockelman, Derek\nWeitzel, and David Swanson. Thanks to the Open Science Grid for access to significant computer\nresources. The Open Science Grid is supported by the National Science Foundation and the U.S.\nDepartment of Energy's Office of Science.\n\nReferences\n[1] A. Dudek and J. Schmitt. On the size and structure of graphs with a constant number of\n1-factors, 2010. preprint.\n\n24\n\n\f[2] S. G. Hartke and A. Radcliffe. Mckay's canonical graph labeling algorithm. In Communicating\nMathematics, volume 479 of Contemporary Mathematics, pages 99\u2013111. American Mathematical Society, 2009.\n[3] S. G. Hartke, D. Stolee, D. B. West, and M. Yancey. On extremal graphs with a given number\nof perfect matchings, 2011. preprint.\n[4] L. Lovasz. Ear-decompositions of matching-covered graphs. Combinatorica, 3(1):105\u2013117,\n1983.\n[5] L. Lov\u00e1sz and M. Plummer. Matching theory. Elsevier Science Ltd, 1986.\n[6] B. D. McKay. Isomorph-free exhaustive generation. J. Algorithms, 26(2):306\u2013324, 1998.\n[7] B. D. McKay. nauty user's guide (version 2.4). Dept. Computer Science, Austral. Nat. Univ.,\n2006.\n[8] R. Pordes, D. Petravick, B. Kramer, D. Olson, M. Livny, A. Roy, P. Avery, K. Blackburn,\nT. Wenaus, et al. The Open Science Grid. In Journal of Physics: Conference Series, volume 78,\npages 12\u201357. IOP Publishing, 2007.\n[9] D. Stolee. Isomorph-free generation of 2-connected graphs with applications, 2011. preprint.\nAvailable as arXiv:1104.5261v1.\n[10] Z. Szigeti. The two ear theorem on matching-covered graphs. J. Combin. Theory Ser. B,\n74(1):104\u2013109, 1998.\n[11] W. T. Tutte. The factorization of linear graphs. J. London Math. Soc., 22:107\u2013111, 1947.\n[12] D. J. Weitzel. Campus Grids: A framework to facilitate resource sharing. Masters thesis,\nUniversity of Nebraska - Lincoln, 2011.\n[13] H. Whitney. Congruent Graphs and the Connectivity of Graphs. Amer. J. Math., 54(1):150\u2013\n168, 1932.\n\n25\n\n\f"}