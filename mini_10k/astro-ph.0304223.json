{"id": "http://arxiv.org/abs/astro-ph/0304223v1", "guidislink": true, "updated": "2003-04-11T18:39:20Z", "updated_parsed": [2003, 4, 11, 18, 39, 20, 4, 101, 0], "published": "2003-04-11T18:39:20Z", "published_parsed": [2003, 4, 11, 18, 39, 20, 4, 101, 0], "title": "Forward Symplectic Integrators for Solving Gravitational Few-Body\n  Problems", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=astro-ph%2F0304172%2Castro-ph%2F0304388%2Castro-ph%2F0304132%2Castro-ph%2F0304535%2Castro-ph%2F0304421%2Castro-ph%2F0304235%2Castro-ph%2F0304531%2Castro-ph%2F0304497%2Castro-ph%2F0304551%2Castro-ph%2F0304410%2Castro-ph%2F0304375%2Castro-ph%2F0304418%2Castro-ph%2F0304542%2Castro-ph%2F0304080%2Castro-ph%2F0304411%2Castro-ph%2F0304243%2Castro-ph%2F0304395%2Castro-ph%2F0304419%2Castro-ph%2F0304331%2Castro-ph%2F0304167%2Castro-ph%2F0304191%2Castro-ph%2F0304500%2Castro-ph%2F0304126%2Castro-ph%2F0304064%2Castro-ph%2F0304510%2Castro-ph%2F0304204%2Castro-ph%2F0304503%2Castro-ph%2F0304293%2Castro-ph%2F0304079%2Castro-ph%2F0304088%2Castro-ph%2F0304100%2Castro-ph%2F0304017%2Castro-ph%2F0304555%2Castro-ph%2F0304180%2Castro-ph%2F0304351%2Castro-ph%2F0304065%2Castro-ph%2F0304325%2Castro-ph%2F0304053%2Castro-ph%2F0304264%2Castro-ph%2F0304344%2Castro-ph%2F0304025%2Castro-ph%2F0304254%2Castro-ph%2F0304062%2Castro-ph%2F0304288%2Castro-ph%2F0304139%2Castro-ph%2F0304436%2Castro-ph%2F0304020%2Castro-ph%2F0304340%2Castro-ph%2F0304507%2Castro-ph%2F0304127%2Castro-ph%2F0304513%2Castro-ph%2F0304040%2Castro-ph%2F0304335%2Castro-ph%2F0304223%2Castro-ph%2F0304230%2Castro-ph%2F0304545%2Castro-ph%2F0304516%2Castro-ph%2F0304247%2Castro-ph%2F0304560%2Castro-ph%2F0304072%2Castro-ph%2F0304016%2Castro-ph%2F0304076%2Castro-ph%2F0304323%2Castro-ph%2F0304518%2Castro-ph%2F0304378%2Castro-ph%2F0304227%2Castro-ph%2F0304494%2Castro-ph%2F0304135%2Castro-ph%2F0304469%2Castro-ph%2F0304210%2Castro-ph%2F0304260%2Castro-ph%2F0304205%2Castro-ph%2F0304004%2Castro-ph%2F0304071%2Castro-ph%2F0304561%2Castro-ph%2F0304474%2Castro-ph%2F0304045%2Castro-ph%2F0304169%2Castro-ph%2F0304450%2Castro-ph%2F0304303%2Castro-ph%2F0304175%2Castro-ph%2F0304437%2Castro-ph%2F0304428%2Castro-ph%2F0304454%2Castro-ph%2F0304207%2Castro-ph%2F0304401%2Castro-ph%2F0304250%2Castro-ph%2F0304195%2Castro-ph%2F0304124%2Castro-ph%2F0304048%2Castro-ph%2F0304302%2Castro-ph%2F0304084%2Castro-ph%2F0304155%2Castro-ph%2F0304554%2Castro-ph%2F0304524%2Castro-ph%2F0304229%2Castro-ph%2F0304276%2Castro-ph%2F0304176%2Castro-ph%2F0304044%2Castro-ph%2F0304259%2Castro-ph%2F0304218&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Forward Symplectic Integrators for Solving Gravitational Few-Body\n  Problems"}, "summary": "We introduce a class of fourth order symplectic algorithms that are ideal for\ndoing long time integration of gravitational few-body problems. These\nalgorithms have only positive time steps, but require computing the force\ngradient in additional to the force. We demonstrate the efficiency of these\nForward Symplectic Integrators by solving the circularly restricted three-body\nproblem in the space-fixed frame where the force on the third body is\nexplicitly time-dependent. These algorithms can achieve accuracy of\nRunge-Kutta, backward time step and corrector symplectic algorithms at step\nsizes five to ten times as large.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=astro-ph%2F0304172%2Castro-ph%2F0304388%2Castro-ph%2F0304132%2Castro-ph%2F0304535%2Castro-ph%2F0304421%2Castro-ph%2F0304235%2Castro-ph%2F0304531%2Castro-ph%2F0304497%2Castro-ph%2F0304551%2Castro-ph%2F0304410%2Castro-ph%2F0304375%2Castro-ph%2F0304418%2Castro-ph%2F0304542%2Castro-ph%2F0304080%2Castro-ph%2F0304411%2Castro-ph%2F0304243%2Castro-ph%2F0304395%2Castro-ph%2F0304419%2Castro-ph%2F0304331%2Castro-ph%2F0304167%2Castro-ph%2F0304191%2Castro-ph%2F0304500%2Castro-ph%2F0304126%2Castro-ph%2F0304064%2Castro-ph%2F0304510%2Castro-ph%2F0304204%2Castro-ph%2F0304503%2Castro-ph%2F0304293%2Castro-ph%2F0304079%2Castro-ph%2F0304088%2Castro-ph%2F0304100%2Castro-ph%2F0304017%2Castro-ph%2F0304555%2Castro-ph%2F0304180%2Castro-ph%2F0304351%2Castro-ph%2F0304065%2Castro-ph%2F0304325%2Castro-ph%2F0304053%2Castro-ph%2F0304264%2Castro-ph%2F0304344%2Castro-ph%2F0304025%2Castro-ph%2F0304254%2Castro-ph%2F0304062%2Castro-ph%2F0304288%2Castro-ph%2F0304139%2Castro-ph%2F0304436%2Castro-ph%2F0304020%2Castro-ph%2F0304340%2Castro-ph%2F0304507%2Castro-ph%2F0304127%2Castro-ph%2F0304513%2Castro-ph%2F0304040%2Castro-ph%2F0304335%2Castro-ph%2F0304223%2Castro-ph%2F0304230%2Castro-ph%2F0304545%2Castro-ph%2F0304516%2Castro-ph%2F0304247%2Castro-ph%2F0304560%2Castro-ph%2F0304072%2Castro-ph%2F0304016%2Castro-ph%2F0304076%2Castro-ph%2F0304323%2Castro-ph%2F0304518%2Castro-ph%2F0304378%2Castro-ph%2F0304227%2Castro-ph%2F0304494%2Castro-ph%2F0304135%2Castro-ph%2F0304469%2Castro-ph%2F0304210%2Castro-ph%2F0304260%2Castro-ph%2F0304205%2Castro-ph%2F0304004%2Castro-ph%2F0304071%2Castro-ph%2F0304561%2Castro-ph%2F0304474%2Castro-ph%2F0304045%2Castro-ph%2F0304169%2Castro-ph%2F0304450%2Castro-ph%2F0304303%2Castro-ph%2F0304175%2Castro-ph%2F0304437%2Castro-ph%2F0304428%2Castro-ph%2F0304454%2Castro-ph%2F0304207%2Castro-ph%2F0304401%2Castro-ph%2F0304250%2Castro-ph%2F0304195%2Castro-ph%2F0304124%2Castro-ph%2F0304048%2Castro-ph%2F0304302%2Castro-ph%2F0304084%2Castro-ph%2F0304155%2Castro-ph%2F0304554%2Castro-ph%2F0304524%2Castro-ph%2F0304229%2Castro-ph%2F0304276%2Castro-ph%2F0304176%2Castro-ph%2F0304044%2Castro-ph%2F0304259%2Castro-ph%2F0304218&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We introduce a class of fourth order symplectic algorithms that are ideal for\ndoing long time integration of gravitational few-body problems. These\nalgorithms have only positive time steps, but require computing the force\ngradient in additional to the force. We demonstrate the efficiency of these\nForward Symplectic Integrators by solving the circularly restricted three-body\nproblem in the space-fixed frame where the force on the third body is\nexplicitly time-dependent. These algorithms can achieve accuracy of\nRunge-Kutta, backward time step and corrector symplectic algorithms at step\nsizes five to ten times as large."}, "authors": ["Siu A. Chin", "C. R. Chen"], "author_detail": {"name": "C. R. Chen"}, "author": "C. R. Chen", "arxiv_comment": "21 pages, 10 figures, use aastex; submitted to The Astronomical\n  Journal", "links": [{"href": "http://arxiv.org/abs/astro-ph/0304223v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/astro-ph/0304223v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "astro-ph", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "astro-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "physics.comp-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/astro-ph/0304223v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/astro-ph/0304223v1", "journal_reference": null, "doi": null, "fulltext": "Forward Symplectic Integrators for Solving\nGravitational Few-Body Problems\n\narXiv:astro-ph/0304223v1 11 Apr 2003\n\nSiu A. Chin and C. R. Chen\nCenter for Theoretical Physics, Department of Physics,\nTexas A&M University, College Station, TX 77843\ns-a-chin@tamu.edu\nABSTRACT\nWe introduce a class of fourth order symplectic algorithms that are ideal\nfor doing long time integration of gravitational few-body problems. These algorithms have only positive time steps, but require computing the force gradient\nin additional to the force. We demonstrate the efficiency of these Forward Symplectic Integrators by solving the circularly restricted three-body problem in the\nspace-fixed frame where the force on the third body is explicitly time-dependent.\nThese algorithms can achieve accuracy of Runge-Kutta, backward time step and\ncorrector symplectic algorithms at step sizes five to ten times as large.\nSubject headings: symplectic integrators, higher order, trajectory computation,\nlong time simulation\n\n1.\n\nIntroduction\n\nSymplectic Integrators (SI) (Yoshida 1993; Channell and Neri 1996) conserve all Poincar\u00e9\ninvariants when integrating classical trajectories. For periodic orbits, their energy errors are\nbounded and periodic, in contrast to Runge-Katta type algorithms whose energy error increases linearly with integration time (Gladman, Duncan and Candy 1991). Symplectic\nalgorithms are therefore better long time integrators of astrophysical many-body problems\n(Wisdom and Holman 1991; Saha and Tremaine 1992) and have been studied extensively\nin the literature (Candy and Rozmus 1991; Yoshida 1993; McLachlan 1995; Koseleff 1996;\nBlanes et al. 1999). However, current higher order SI seem to suffer two disadvantages. First,\nthe number of force evaluations require by these algorithms proliferates much more rapidly\nthan non-symplectic algorithms. For example, a six order Runge-Kutta-Nystr\u00f6m algorithm\n(Albrecht 1955) requires only five force evaluations; a six order symplectic algorithm with\n\n\f\u20132\u2013\nnegative intermediate time steps requires at least seven force evaluations (Yoshida 1990).\nSecond, they seem to have a shorter stability range. This may also due to the use of negative time steps for cancelling lower order errors. In this work, we consider a class of fourth\norder Forward Symplectic Integrators (FSI), which have only positive time steps (Chin 1997;\nChin and Chen 2002). (We have referred to these as gradient symplectic algorithms previously.) The price for having only positive time steps is that one must compute the force\ngradient in additional to the force. This additional effort for gravitational few-body problems\nis very modest, but the resulting gain in numerical efficiency and stability is tremendous.\nWe will show below that these FSI can achieve accuracy of existing symplectic integrators\nat step sizes five to ten times as large. These very powerful algorithms should be considered\nby colleauges doing long time few-body simulations.\nDespite the fact that Wisdom and Holman (1991) have questioned in 1991 why there\nwere no FSI beyond second order, this class of algorithms has been unrecognized and overlooked until recently. The reason for this is simple; classical dynamics is time reversible, there\nis no compelling demand for purely positive time steps. The demand for positive time steps\nonly arises when one has to solve time-irreversible equations, such the diffusion (Auer et al.\n2001), Fokker-Planck (Forbert and Chin 2001), and Navier-Stoke equations. However, once\nFSI have been derived, they can be used to solve both time-reversible and time-irreversible\nevolution equations. For time-irreversible systems, they are the only decomposition algorithm possible, but even for time-reversible equations, they give rise to algorithms of great\nefficiency and stability.\nIn the next Section, we will describe in detail how this class of algorithms fits into the\nlarge picture of symplectic integrator development. We will show that our FSI traces it\nlineage to Ruth's seldom used third order algorithm (Ruth 1983). In Section 3, we describe\nour fourth order FSI and the one-parameter family of integrators. In Section 4, we compare\nvarious algorithms by computing a lengthy and intricate closed orbit of a circularly restricted\nthree-body problem. Physical three-body problems, such as the Sun-Earth-Moon, or SunJupiter-Saturn, are too \"tame\" for discriminating the merit of these very powerful algorithms.\nHere, we also note a puzzling fact that some algorithms can appear to converge at higher\norder than expected. We summarize our conclusions and suggest some future direction of\nresearch in Section 5.\n\n\f\u20133\u2013\n2.\n\nRelation to Existing Symplectic Integrators\n\nTo give context to our work, we will review the development of symplectic integrators\nin the general contex of solving any evolution equation of the form\n\u2202w\n= (T + V )w,\n\u2202t\n\n(1)\n\nwhere T and V are non-commuting operators. Classically, the evolution of a dynamical\nvariable w(qi , pi ) is given by the Poisson bracket (sum over repeated indices),\n\u0010 \u2202w \u2202H\nd\n\u2202w \u2202H \u0011\n.\n(2)\nw(qi , pi ) = {w, H} \u2261\n\u2212\ndt\n\u2202qi \u2202pi\n\u2202pi \u2202qi\nFor a Hamiltonian of the form,\n1\nH(p, q) = pi pi + v(qi ),\n2\n\n(3)\n\nequation (2) is of the form (1) with T and V given by\nT = pi\n\n\u2202\n,\n\u2202qi\n\nV = Fi\n\n\u2202\n,\n\u2202pi\n\n(4)\n\nwhere Fi = \u2212\u2202v/\u2202qi . For this case, the constituent evolution operators e\u01ebT and e\u01ebV displace\nqi and pi forward in time via\nqi \u2192 qi + \u01ebpi\n\nand pi \u2192 pi + \u01ebFi .\n\n(5)\n\nIn general, the evolution equation (1) can be solved iteratively via\nw(t + \u01eb) = e\u01eb(T +V ) w(t),\n\n(6)\n\nprovided that one has a suitable approximation for the short time evolution operator e\u01eb(T +V ) .\nIf e\u01ebT and e\u01ebV can be exactly implemented individually, then e\u01eb(T +V ) can be decomposed to\narbitrarily high order in the form\nY\neai \u01ebT ebi \u01ebV .\n(7)\ne\u01eb(T +V ) =\ni\n\nFor example, from the second order factorization\n1\n\n1\n\ne\u01eb(T +V ) \u2248 e 2 \u01ebT e\u01ebV e 2 \u01ebT = T (2) ,\n\n(8)\n\none can construct a fourth order approximation via\n(4)\n\nTF R (\u01eb) = T (2) (e\n\u01eb)T (2) (\u2212se\n\u01eb)T (2) (e\n\u01eb),\n\n(9)\n\n\f\u20134\u2013\nwhere s = 21/3 is chosen to cancel the third order error in T (2) , and e\n\u01eb = \u01eb/(2 \u2212 s) rescales the\nsum of forward-backward-forward time steps back to \u01eb. This fourth order Forest-Ruth (FR)\nscheme (Forest and Ruth 1990) has been independently derived many times (Campostrini\nand Rossi 1990; Candy and Rozmus 1991). The above construction, while widely known\nthrough the work of Yoshida (1990), was first published by Creutz and Gocksch (1989).\nThe middle time step in (9) is negative. This is not accidental. Sheng (1989) and\nSuzuki (1991) have independently proved that, beyond second order, any factorization of\nthe form (7) must contain some negative coefficients in the set {ai , bi }. Goldman and Kaper\n(1996) later proved that any factorization of the form (7) must contain at least one negative\ncoefficients for both operators. This means that for any evolution equations containing an\nirreversible operator, such as the diffusion kernel T = 21 \u22072 , no algorithms of the form (7)\n\u2032\n2\nis possible beyond second order. This is because hr\u2032 |eai \u01ebT |ri \u221d e\u2212(r \u2212r) /(2ai \u01eb) is the diffusion\nkernel only if ai is positive. If ai were negative, then the kernel would be unbound and\nunnormalizable, reflecting the fact that diffusion is a time-irreversible process. Positive\ncoefficients are therefore absolutely essential for solving any evolution equation having an\nirreversible component. We have shown, and will further domonstrate below, that even\nfor time-reversible systems such as quantum (Chin and Chen 2002) or classical dynamics\n(Chin 1997), purely positive coefficients give rises to very efficient algorithms with excellent\nconvergence properties.\nWhile Sheng's proof is slightly more general, Suzuki's proof provides insight into how to\ncircumvent this negative coefficient problem. The essence of Suzuki's proof is to note that,\nfor example, one has the following operator respresentation of the velocity form of the Verlet\nalgorithm,\n1\n1\n\u2032\ne 2 \u01ebV e\u01ebT e 2 \u01ebV = e\u01ebH ,\n(10)\nwith\n\n1\n1 2\n\u01eb [T, [V, T ]] + \u01eb2 [V, [T, V ]] + O(\u01eb4 ).\n(11)\n12\n24\nIn order to obtain a fourth order algorithm, one must eliminate the two double commutator\nerror terms above. With purely positive coefficients ai and bi , one can eliminate either one,\nbut not both. Thus to obtain a fourth order factorization with only positive coefficients,\none must keep one of the two double commutators. With T and V as defined by (4), the\ncommutator\n\u2202Fi \u2202\n\u2202\n[V, [T, V ]] = 2Fj\n= \u2207i (|F|2 )\n,\n(12)\n\u2202qj \u2202pi\n\u2202pi\nH\u2032 = T + V \u2212\n\nsimply give rises to a new force defined by the gradient of the square of the force modulus.\nThis commutator can therefore be kept. The use of this force gradient is not new. Ruth\n(1983) in his pioneering paper paper has derived a third order derivative algorithm on the\n\n\f\u20135\u2013\nbasis of canonical transformations. However, this algorithm was universally ignored (Channell and Neri 1996) with no follow-up discussion. In 1997 one of us (Chin 1997) noted that\nRuth's algorithm actually corresponds to a time-asymmetric operator decomposition and\nthat his force derivative is precisely the force gradient given by [V, [T, V ]]. The importance\nof Suzuki's proof is that it draws a clear connection between the demands for positive time\nsteps and the necessity of keeping higher order commutators, such as [V, [T, V ]].\nIf one were to keep [V, [T, V ]], then there are two distinct ways of eliminating the other\ndouble commutator [T, [V, T ]]. Despite the lack of an operator formalism, Rowland (1991)\nalso noted that the velocity form of the Verlet algorithm has error terms of the form (11).\nHe proposed to get rid of the [T, [V, T ] term by an explicit transformation and to view the\nalgorithm as fourth order for a Hamiltonian with a modified potential\nV\u2032 =V +\n\n1 2\n\u01eb [V, [T, V ]].\n24\n\n(13)\n\nThe reinterpretation of the potential is easy, the tricky part here is that since one has\nperformed a transformation to eliminate [T, [V, T ]], one must transform back correctly to\npreserve fourth order accurracy for the original variables. This transformation is often more\ncomplicated than the original algorithm. This way of eliminating [T, [V, T ]] is tantamount\nto applying operators\n1\n1\n(14)\neC(\u01eb) e 2 \u01ebV e\u01ebT e 2 \u01ebV e\u2212C(\u01eb)\nwhere e\u2212C(\u01eb) and eC(\u01eb) are the initial and final transformations respectively. They can be\nQ\nfurther decomposed into the product form, eC(\u01eb) = i eci \u01ebT edi \u01ebV . This class of \"process\"\n(Lopez-Marcos et al. 1996, 1997; Blanes et al. 1999) or \"corrector\" (Wisdom, Holman and\nTouma 1996; McLachlan 1996) symplectic algrithms has the distinct advantage that when\none iterates the algorithm, only the kernel algorithm needs to be iterated. If there is no need\nto keep track of intermediate results, then a fourth order algorithm is possible with only a\nsingle evaluation of the modified force (Lopez-Marcos et al. 1996, 1997; Wisdom, Holman\nand Touma 1996; Blanes et al. 1999). However, by its very construction, either e\u2212C(\u01eb) or eC(\u01eb)\nmust contain negative time steps, and cannot be applied to equations with an irreversible\noperator. Nevertheless they are valuable addition to the symplectic repertoire for solving\nreversible dynamical problems. More recent process algorithms also uses a modified potential,\nbut only in the form (13) and only in the context of a second order kernel algorithm (Blanes\net al. 1999). Lopez-Marcos et al. (1997) have used a two-fold Rowland kernel that could\nhave been fourth order, but the correct parameter values for that were never considered.\nIn the operator formalism, a more direct way of eliminating [T, [V, T ]] is to add more\noperators symmetrically. In this approach, the elimination of [T, [V, T ]] is built-in, with no\nneed of an extrinsic transformation. McLachlan (1995) has done this for algorithms 4A and\n\n\f\u20136\u2013\n4B (described below) in the context of a slightly perturbed Hamiltonian system. But his\nalgorithms were not truly fourth order because he did not bother to keep the commutator\n[V, [T, V ]]. These pseudo-higher order algorithms (McLachlan 1995; Chambers and Murison\n2000; Laskar and Robutel 2000), which only require a single error commutator to vanish at\neach order, are much simpler than regular higher order algorithms, which require all error\ncommutators to vanish at each order. There is also a widely cited reference by Koseleff\n(1993) that purported to contain a fourth order scheme using modified potentials. Koseleff's\nalgorithm would have been algorithm 4A discussed below, unfortunately, his coefficient for\nthe commutator [V, [T, V ]] is incorrect. It should be 1/72 rather than 1/24.\n\n3.\n\nFourth Order Forward Symplectic Integrators\n\nSuzuki, on the basis of McLachan's work (McLachlan 1995), retained the commutator\n[T, [V, T ]] and wrote down two fourth order factorization schemes 4A and 4B with purely\npositively coefficients (Suzuki 1996). He did not implement them classically or quantum\nmechanically, nor in anyway demonstrated their usefulness. One of us (Chin 1997) derived\nschemes 4A and 4B by elementary means independent of McLachan's work, and have explicitly implemented them classically and demonstrated their effectiveness in solving the Kepler\nproblem. Moreover, algorithms 4C (Chin 1997), which is the direct descendant of Ruth's\nthird order algorithm Ruth (1983), in all cases tested, has have much smaller error coefficients than 4A and 4B. Prior to Chin's work, we are not aware of any implementation of\nfourth order FSI for solving any problem.\nSince the commutator and the gradient force term occur frequently in the following, we\nwill define\nU(t) \u2261 [V (t), [T, V (t)]] and Gi (t) \u2261 \u2207i (|F(t)|2 )\n(15)\nto simplify notations. The time-dependent form of the four FSI derived in Chin and Chen\n(2002) are:\n1\n1\n2 e\n1\n1\n(4)\nTA (\u01eb) \u2261 e 6 \u01ebV (t+\u01eb) e 2 \u01ebT e 3 \u01ebV (t+\u01eb/2) e 2 \u01ebT e 6 \u01ebV (t) ,\n(16)\nwith Ve defined by\n\ncorresponding to a modified force\n\n1\nVe (t) = V (t) + \u01eb2 U(t),\n48\n\n(17)\n\ne = F(t) + 1 \u01eb2 G(t).\nF(t)\n48\n\n(18)\n\nGiven p0 = p(t) and q0 = q(t), transcribing each operator in (16) according to (5) yields\n\n\f\u20137\u2013\nthe following explicit algorithm 4A for advancing the system forward to from t to t + \u01eb,\n1\np1 = p0 + \u01eb F(q0 , t)\n6\n1\nq1 = q0 + \u01eb p1\n2\n2 e\np2 = p1 + \u01eb F(q\n1 , t + \u01eb/2)\n3\n1\nq2 = q1 + \u01eb p2\n2\n1\np3 = p2 + \u01eb F(q2 , t + \u01eb).\n6\n\n(19)\n\nThe last p and q are the updated variables, i.e., q(t + \u01eb) = q2 and p(t + \u01eb) = p3 . For\nlong time integration, when intermediate time results are not needed, the first and last force\nevaluation are the same and only need to be evaluated once. Thus algorithm 4A only requires\ntwo evalutations of the force and one evaluation of the force gradient to be fourth order. Note\nthat forces are to be evaluated at an intermediate time equals to the sum of time steps of\nall the preceding T operators (Suzuki 1993; Chin and Chen 2002).\nSimilarly algorithm 4B in operator form is\n1\n\n1\n\n(4)\n\nTB (\u01eb) \u2261 et2 \u01ebT e 2 \u01ebV\u0304 (t+a2 \u01eb) et1 \u01ebT e 2 \u01ebV\u0304 (t+a1 \u01eb) et0 \u01ebT ,\n\n(20)\n\nwhere\n1\n1\nt0 = t2 = (1 \u2212 \u221a ),\n2\n3\n\n1\nt1 = \u221a ,\n3\n\n1\n1\na1 = (1 \u2212 \u221a ),\n2\n3\n\n1\n1\na2 = (1 + \u221a ),\n2\n3\n\n(21)\n\nand with V\u0304 given by\nV\u0304 (t) = V (t) + c0 \u01eb2 U(t).\n\n(22)\n\u221a\n\n1\n(2 \u2212 3). The transcription\nThis is just a modified force with a different coefficient c0 = 24\nto an explicit algorithm is similar to the 4A case and will not be repeated. Algorithm 4B\nrequires two evaluations of the force and two evalutation of the force gradient. After we have\ndiscovered the one-parameter family of algorithms discussed below, we realize that one can\nimprove 4B by eliminating one evaluation of the gradient force. This is done by concentrating\nthe commutator term at the center of algorithm:\n(4)\n\n1\n\n1\n\nTB\u2032 (\u01eb) \u2261 et2 \u01ebT e 2 \u01ebV (t+a2 \u01eb) e 2 t1 \u01ebT ec0 \u01eb\n\n3 U (t+\u01eb/2)\n\n1\n\n1\n\ne 2 t1 \u01ebT e 2 \u01ebV (t+a1 \u01eb) et0 \u01ebT .\n\nJust to be sure that there is no confusions, we transcribe this algorithm 4B\u2032 as follows\n\n(23)\n\n\f\u20138\u2013\n\nq1 = q0 + t0 \u01eb p0\n1\np1 = p0 + \u01eb F(q1 , t + a1 \u01eb)\n2\n1\nq2 = q1 + t1 \u01eb p1\n2\np2 = p1 + c0 \u01eb3 G(q2 , t + \u01eb/2)\n1\nq3 = q2 + t1 \u01eb p2\n2\n1\np3 = p2 + \u01eb F(q3 , t + a2 \u01eb).\n2\nq4 = q3 + t2 \u01eb p3 .\n\n(24)\n\nAgain, the last two variables are the updated variables, q(t + \u01eb) = q4 and p(t + \u01eb) = p3 . In\ncontrast to algorithm 4A, 4B\u2032 only requires two force and one gradient evaluations for every\nupdate and can be used to produce continuous outputs.\nOne of us has shown (Chin 1997) that Ruth's orginal third order algorithm (Ruth 1983)\nsimply corresponds to the following asymmetric third order decomposition:\n1\n\n3\n\n2\n\n1\n\n\u2032\n\ne\u01eb(T +V ) = e\u01eb 3 T e\u01eb 4 V e\u01eb 3 T e\u01eb 4 V ,\n\n(25)\n\n1 2\n\u01eb [V, [T, V ]]. The power of the operator approach is that one immediately\nwith V \u2032 = V + 12\nrealizes that the third order error in (25) can be eliminated by symmetrization, since a\nsymmetric decomposition can only have errors of even order in \u01eb. To symmetrize, take two\nthird order algorithms (25) at half the time step, flip one over and concatenate. Algorithms\n4C and 4D correspond to the two possible ways of concatenation:\n(4)\n\n1\n\n(4)\n\n1\n\n3\n\n1\n\n1\n\ne\n\n1\n\n3\n\n1\n\nTC (\u01eb) \u2261 e 6 \u01ebT e 8 \u01ebV (t+5\u01eb/6) e 3 \u01ebT e 4 \u01ebV (t+\u01eb/2) e 3 \u01ebT e 8 \u01ebV (t+\u01eb/6) e 6 \u01ebT ,\ne\n\n1\n\n3\n\n1\n\n3\n\n1\n\n1\n\ne\n\nTD (\u01eb) \u2261 e 8 \u01ebV (t+\u01eb) e 3 \u01ebT e 8 \u01ebV (t+2\u01eb/3) e 3 \u01ebT e 8 \u01ebV (t+\u01eb/3) e 3 \u01ebT e 8 \u01ebV (t) ,\n\n(26)\n(27)\n\nwhere Ve (t) is the same modified force (17) used in algorithm 4A.\n\nAlgorithms 4A, 4C and 4B\u2032 are special cases of a one-parameter family of algorithms\n(4)\n\nTACB\u2032 (\u01eb) \u2261 et3 \u01ebT ev3 \u01ebV (t+a3 \u01eb) et2 \u01ebT e\u01ebW (t+a2 \u01eb) et1 \u01ebT ev1 \u01ebV (t+a1 \u01eb) et0 \u01ebT\n\n(28)\n\nparametrized by t0 . Given t0 , the rest of the coefficients are:\nt1 = t2 =\n\n1\n\u2212 t0 ,\n2\n\nt3 = t0 ,\n\nv1 = v3 =\n\n1\n1\n,\n6 (1 \u2212 2t0 )2\n\nv2 = 1 \u2212 (v1 + v3 ),\n\n(29)\n\n\f\u20139\u2013\na1 = t0 , a2 = 1/2, a3 = 1 \u2212 t0 , with W (t) defined by\nW (t) = v2 V (t) + u0 \u01eb2 U(t),\nand\nu0 =\n\ni\n1h\n1\n1\n1\u2212\n.\n+\n12\n1 \u2212 2t0 6(1 \u2212 2t0 )3\n\n(30)\n\n(31)\n\nAll coefficients are positive for t0 in the range [0, 21 (1 \u2212 \u221a13 ) \u2248 0.21]. At t0 = 0, one has\nalgorithm 4A. At t0 = 1/6 \u2248 0.167, one has algorithm 4C. At the upper limit of t0 =\n1\n(1 \u2212 \u221a13 ), v2 = 0, and one recovers algoirthm 4B\u2032 . One can therefore changes continuously\n2\nfrom algorithm 4A to 4C to 4B\u2032 by varying the parameter t0 . This is very useful in cases\nwhere any two of the above algorithms have convergence errors of opposite signs. By varying\nt0 , one can set that error to zero with no additional computational effort. For solving the\ngravitational three-body problem in the next section, we use t0 = 0.138, which is intermediate\nbetween that of 4A and 4C.\nThere is also a one parameter family of algorithms connecting algorithms 4B, a variant\nof 4D and 4A (Chin and Chen 2002). This family generally requires four force evaluations\nplus the force gradient. We will not consider it further in this work.\n\n4.\n\nThe Circularly Restricted Three-Body Problem\n\nWe compare the efficiency of these FSI by solving the planar circularly restricted 3-body\nproblem defined by\ni\n1h\nd2 r\na\n(r,\nt)\n+\na\n(r,\nt)\n(32)\n=\na(r,\nt)\n\u2261\n\u2212\n1\n2\ndt2\n2\nwhere for i = 1, 2,\nr \u2212 ri (t)\nai (r, t) =\nand Si = |r \u2212 ri (t)|.\nSi3\nThe two attractive centers r1 (t) and r2 (t) orbit about the origin in circles with angular\nvelocity \u03c9 = 1:\n1\nr1 (t) = \u2212 ( cos(t), sin(t) ),\n2\n1\nr2 (t) = ( cos(t), sin(t) ).\n2\nThe gradient term is no more complicated than the force itself,\ni\n1h\n(33)\n\u2207(|a|2 ) = \u2212 C1 a1 + C2 a2\n2\n\n\f\u2013 10 \u2013\nwith\nC1 = 2S1\u22123 + 3S1 a1 * a2 \u2212 S2\u22123\nC2 = 2S2\u22123 + 3S2 a1 * a2 \u2212 S1\u22123\nWe solve the problem directly in the space-fixed frame in which the force, or the acceleration field as defined above, is explicitly time-dependent. The initial condition r0 =\n(0, 0.0580752367) and v0 = (0.489765446, 0) produce an intricate and lengthy \"Chinese\nCoin\" orbit, useful for testing algorithms. The actual period is 18\u03c0, but in the present\ncase where the two attracting centers are indistinguishable, the orbit repeats after 9\u03c0. For\nthis work we will consider the orbital period to be P = 9\u03c0.\nIn Fig. 1 we compare the trajectory after three periods (t = 27\u03c0) using the ForestRuth algorithm and the our 4B\u2032 algorithm. In Figure 2 we compare the same trajectory\nusing algorithm M and algorithm 4C. M is McLachan's fourth order, four force-evaluation\nalgorithm (McLachlan 1995):\n(4)\n\nTM (\u01eb) \u2261 et5 \u01ebT ev1 \u01ebV (t+a4 \u01eb) et4 \u01ebT ev2 \u01ebV (t+a3 \u01eb) et3 \u01ebT ev2 \u01ebV (t+a2 \u01eb) et2 \u01ebT ev1 \u01ebV (t+a1 \u01eb) et1 \u01ebT ,\nwhere v1 = 6/11, v2 = 1/2 \u2212 v1 , ai =\n\u221a\n642 + 471\n,\nt1 = t5 =\n3924\n\nPi\n\nj=1 tj\n\nt2 = t4 =\n\n(34)\n\nand\n\n\u221a\n121\n(12 \u2212 471),\n3924\n\nt3 = 1 \u2212 2(t1 + t2 ).\n\nAlgorithms RF and M are representative fourth order symplectic algorithms with negative\nintermediate time steps. Both are outperformed by 4B\u2032 , which only requires two force and\none gradient evaluations. We have also tested the standard four force-evaluation RungeKutta and the three force-evaluation Runge-Kutta-Nystr\u00f6m algorithm (Battin 1999). At\nthe same step size, both Rung-Kutta type algorithms are unstable and cannot produce a\nbounded trajectory. Algorithm 4A and 4B are comparable to 4B\u2032 , with 4D besting even 4C\nbecause it uses one more force evaluation.\nThe accuracy of each algorithm can be quantitatively assessed by monitoring the Jacobi\nconstant. The Jacobi constant is usually given in the co-rotationg frame in which the two\nattractive centers are at rest. However, it is just as easy to transform the Jacobi constant back\nto the space-fixed frame where it has a simple interpretation. For our circularly restricted\nthree-body problem defined by (32), the Jocabi constant J is given by\nJ = v2 \u2212\n\n1\n1\n\u2212\n\u2212 2r \u00d7 v,\n|r \u2212 r1 (t)| |r \u2212 r2 (t)|\n\n(35)\n\nwhich is twice the difference between the energy and the angular momentum. For fourth\norder algorithms, we expect J(t) = J0 +\u01eb4 J4 (t) and the step-size independent error coefficient\n\n\f\u2013 11 \u2013\nJ4 (t) can be extracted from\n(J \u2212 J0 )\n.\n\u01eb4\nAs one decreases the step size, J4 (t) converges to a fixed shape characteristic of the algorithm. In Fig. 3 we show this coefficient function for the regular fourth order Runge-Kutta\nalgorithm at a step size of \u01eb = P/50000 \u2248 0.00056. In the course of one period, the third\nbody has five close encounters with the two attractive centers, resulting in five error spikes\nat t/P=1/10, 3/10, 5/10, 7/10, and 9/10. Between each close encounter there are also\nfour minor encounters, resulting in barely discernable error blips. Fig. 3 demonstrates the\ndistinction between symplectic and non-symplectic algorithm. For symplectic algorithms,\nthe error recovers back to zero after each close encounter and remain bounded after each\nperiod. For Runge-Kutta type algorithms, each encounter produces an irrecoverable error.\nThe accumulating error then grows linearly in time without limit.\nJ4 (t) = lim\n\n\u01eb\u21920\n\nFig. 3 shows the qualitative difference between symplectic and non-symplectic algorithms. In Fig. 4, we show the quantitative difference between forward and non-forward\nintegrators by examining the detail shape of the error spike at t/P=1/10. In Fig. 4a, the\nleft figure, we compare the error function J4 (t) generated by algorithms FR, M and Cor with\nthat of 4A. Cor is a processor or corrector algorithm of the form:\n(4)\n\n(2)\n\nTCor (\u01eb) \u2261 eC(\u01eb) T2M (\u01eb)e\u2212C(\u01eb) ,\n\n(36)\n\nwhere the kernel is a second order algorithm (2M)\n(2)\n\n1\n\nT2M (\u01eb) \u2261 e 2 \u01ebT e\u01ebV\n\n\u2032 (t+\u01eb/2)\n\n1\n\ne 2 \u01ebT\n\n(37)\n\nwith same modified force V \u2032 as defined by (13). This second order kernel has been used in\nmost processor or corrector algorithms (Lopez-Marcos et al. 1996, 1997; Wisdom, Holman\nand Touma 1996; Blanes et al. 1999). However, a fourth order corrector with analytical\ncoefficients seems to have been overlooked in all of the above references. This corrector is\n(Chin 2002)\neC(\u01eb) = ev2 \u01ebV (t+[t1 +t2 ]\u01eb) et2 \u01ebT ev1 \u01ebV (t+t1 \u01eb) et1 \u01ebT ,\n\n(38)\n\ne\u2212C(\u01eb) = e\u2212t1 \u01ebT e\u2212v1 \u01ebV (t\u2212t2 \u01eb) e\u2212t2 \u01ebT e\u2212v2 \u01ebV (t) ,\nwith\n\n1\nt1 = \u221a ,\n2 3\n\nt2 = \u2212\n\n1\n\u221a ,\n3\n\n21/3\n\n1\n1\n\u221a ,\nv1 = \u221a \u2212\n4/3\n2 3 2\n3\n\nv2 = \u2212\n\n(39)\n1\n\u221a .\n3\n\n24/3\n\nNote that at the end of e\u2212C(\u01eb) , time is to be set to t\u2212(t1 +t2 )\u01eb. This corrector is unexpectedly\nshort because two error terms having identical coefficients can be eliminated by a single\ncorrector operator. This is the fastest fourth order algorithm when no intermediate results\n\n\f\u2013 12 \u2013\nare needed, requiring only one evaluation of the force and its gradient. When continuous\noutput is needed, as it is here, it is the slowest algorithm with five force and one gradient\nevaluations. Its error function is a factor of two smaller than RF's, comparable to that of M,\nbut an order of magnitude greater than that of 4A. In Fig.4b, the right figure, we compare\nall the FSI considered in this work. Algorithm 4B\u2032 , with one less force gradient evaluation,\nhas only half the error of 4B. The one-parameter family algorithm ACB\u2032 with t0 = 0.138 has\nonly one-third the error of 4C. The error height of ACB\u2032 is fully two orders of magnitude\nsmaller than those of non-forward symplectic integrators. In table 1, we give the inverse\nerror height of each algorithm, 1/|hi |, normalized to that of RF. Thus, algorithm ACB\u2032 's\nerror height is \u2248 300 times smaller than that of RF and \u2248 150 times smaller than that of\nalgorithm M.\nTo further assess the convergence properties of these algorithms, we examine the convergence of the third body's energy after one period as a function of the step size \u01eb. The\nresults are plotted in Fig.5. All can be very well fitted by single fourth order monomial ci \u01eb4\nas shown by solid lines. One can basically read off the efficiency ranking of each algorithm\nfrom left to right following flatness of the convergence curve. The convergences of RK and\nRKN are similar, despite the fact that RK uses one more force evaluation. For this calculation, algorithm Cor is very efficient, requiring only one evaluation of the force and its\ngradient to best FR. But surprisingly, the second order kernel algorithm 2M seemed fourth\norder even without the use of correctors! It is nearly indistinguishable from the complete\ncorrector algorithm Cor. There is a plausible explanation for this behavor. The choice of the\nmodified force (13) is such that the second order error terms [T,[V,T]] and [V,[T,V]] have\nexactly the same coefficient but opposite in sign.\ne 2 \u01ebT e\u01ebV e 2 \u01ebT = e\u01eb( T +V + 24 \u01eb\n1\n\n\u2032\n\n1\n\n1\n\n2\n\n1 2\n[T,[V,T ]]\u2212 24\n\u01eb [V,[T,V ]]+*** )\n\n,\n\n(40)\n\nEvidently, the magnitudes of [T,[V,T]] and [V,[T,V]] are very nearly equal and their associated errors cancel one another. We have explicitly checked that depending on whether the\ncoefficient of the modified force is less or greater than 1/24, the energy error is positive or\nnegative respectively, in accordance with (40).\nAs in the Jacobi constant case, all forward symplectic algorithms perform better than\nnon-forward ones. Interestingly, algorithm 4ACB\u2032 is substantially better than 4A but not\n4C. Algorithm 4C and 4D appear to be anomalous; their error is definitely fourth order, but\nwith exceedingly small coefficients ci . In table 1, we give the inverse of error coefficient 1/|ci |\nnormalized to that of RF. Thus the error coefficient of RK or RKN is ten times larger than\nthat of RF, while the error coefficient of 4C is nearly 2200 times smaller than that of RF. To\ngive an more quantitative comparison, one should factor in the number of force and gradient\nevaluations. Although it is not unreasonable to assume that the gradient would require more\n\n\f\u2013 13 \u2013\neffort than evaluting the force, when the force and gradient are evaluted at the same time,\nthe additional effort to compute the gradient, as shown by (33), is minimal. A comparison\nwith RF and M, which requires three and four force evaluations respectively, should give a\nreasonable gauge of FSI's effectiveness. Taking the fourth root of 1/|ci | gives the effective\nstep size relative to RF for attaining the same error. Thus in the case of 4C one can use\nsteps size (2200)1/4 \u2248 7 times as large as RF's, four times as large as M's and 12 times as\nlarge as RF's.\nSome of the observed anomalous behavior may be due to the fact that we have choosen\nan end point that is too \"tame\". After one period, the third body returns to a position\nthat's far from both attractors with no substantial error in the Jacobi constant. To test\nthis hypothesis, we compute the energy again at mid period, when the third body has a\nclose encounter and the error in the Jacobi constant is at a peak. This is shown in Fig.6.\nOne immediately sees that in this case the kernel algorithm 2M converges quardratically\nas it should and is distinct from the fourth order corrector algorithm Cor. Moreover, the\nconvergence of both 4C and 4D is now clearly fourth order and bested by the optimized\nalgorithm 4ACB\u2032 . However, fourth order fits to 4B\u2032 and 4ACB\u2032 are exceedingly unnatural,\nwith very small coefficients. Both can be well fitted with a single eighth order curve as shown.\nThe inverse of the error coefficient is a again given in Table 1. Despite some inexplicable\nbehaviors, it is clear from Table 1 that forward symplectic integrator as a class, can be orders\nof magnitude more efficient than non-forward integrators.\n\n5.\n\nConclusions\n\nForward symplectic algorithms are the only composition algorithms possible for solving evolution equations with a time-irreversible kernel (Forbert and Chin 2001; Auer et al.\n2001). However, even for reversible equations FSI have been shown to be far more efficient\nthan non-forward symplectic integrators (Chin 1997; Chin and Chen 2002). In this work,\nwe have further demonstrated their efficiency in solving classical dynamical problems with\ntime-dependent forces. In the circularly restricted three-body problem, this class of FSI\ncan have errors orders of magnitude smaller than non-symplectic or non-forward algorithms.\nWhile FSI can be used for any classical calculations, such as molecular dynamcis (Omelyan,\nMryglod and Folk 2002), they are particularly ideal for doing long time, high precision evolution of gravitational few-body problems. The force gradient is easily calculable and no more\ntime consuming than evaluating the force. In comparison to other algoirithms, FSI showed\nexcellent convergence behavior even at close encounters. The existence of a parametrized\nfamily of algorithms allows one to optimize the algorithm for individual applications. This\n\n\f\u2013 14 \u2013\nfamily of FSI should be applied to more realistic and more complex astrophysical problems.\nWhile FSI have been largely overlooked in the development of classical symplectic integrators, they are precisely in accordance with McLachlan and Scovel's recommendation\n(McLachlan and Scovel 1996) that \"derivative\" symplectic algorithms should be developed.\nThis work suggests that a systematic way of deriving higher order \"derivative\" algorithms\nis to devise factorization schemes that retain higher order commutators.\nProcess or corrector algorithms can achieve fourth order accurracy with only one evalutation of the force and its gradient. If 4A or 4B\u2032 are used as kernels, one should be able\nto achieve sixth order accuaracy with only two evalutions of the force and one evaluation of\nthe gradient. The use of fourth order FSI as kernel algorithms would generate a new family\nof sixth order process symplectic algorithms with minimal numbers of force evaluation. This\nwork is currently in progress. If one does not insist on having purely forward time steps,\nthen many higher order algorithms can be generated on the basis of these fourth order FSI.\nSee extensive constructions by Omelyan, Mryglod and Folk (2002).\nAt this time, despite intense effort, no sixth order FSI has been found. At the other\nhand, no proof has been presented that this cannot be done. Clearly research in FSI is still\nin its infancy and deserves further studies.\nThis work was supported, in part, by the National Science Foundation grants No. PHY0100839.\nPresent address: Department of Mathematics, Texas A&M University, College Station,\nTX 77840.\n\u2217\n\nREFERENCES\nAlbrecht, J. 1955, as cited in An Introduction to the Mathematics and Methods of Astrodynamics, Reviesed Edition, by Richard H. Battin, AIAA, 1999, P.568 and P.603.\nAuer, J., Krotscheck, E. and Chin, S. A. 2001, J. Chem. Phys. 115, 6841.\nBattin, Richard H., An Introduction to the Mathematics and Methods of Astrodynamics,\nReviesed Edition, AIAA, 1999.\nBlanes, S., Casas, F., and Ros, J. 1999, Siam J. Sci. Comput., 21, 711.\nChambers, J, and Murison, M. A. 2000, AJ, 119, 425.\n\n\f\u2013 15 \u2013\nCampostrini, M. and Rossi, P. 1990, Nucl. Phys. B329, 753.\nCandy, J. and Rozmus, W. 1991, J. Comp. Phys. 92, 230.\nChannell, P.J. and Neri, F.R. 1996, An introduction to symplectic integrators, Integration\nalgorithms and classical mechanics (Toronto, ON, 1993), Fields Inst. Commun., 10,\nAmer. Math. Soc., Providence, RI, P.45.\nChin, S. A. 1997, Phys. Lett. A226, 344.\nChin, Siu A. and C. R. Chin 2002, J. Chem. Phys. 117, 1409.\nChin, S. A. 1997, unpublished.\nCreutz, M. and Gocksch, A. 1989, Phys. Rev. Letts. 63, 9.\nForbert, H. A. and Chin, S. A. 2001, Phys. Rev. E 63, 016703.\nForest, E., and Ruth, R. D. 1990, Physica D 43, 105.\nGladman, B., Duncan, M. and Candy, J. 1991, Celest. Mech. 52, 221.\nGoldman, D. and Kaper T. J 1996, SIAM J. Numer. Anal., 33, 349.\nKoseleff, P. V. 1993, in Applied algebra, algebraic algorithms and error-correcting codes (San\nJuan, PR, 1993), Lecture Notes in Comput. Sci., 673, Springer, Berlin, P.213.\nKoseleff, P.V. 1996, in Integration algorithms and classical mechanics, Fields Inst. Commun.,\n10, Amer. Math. Soc., Providence, RI, P.103.\nLaskar, J. and Robutel, P. 2000, \"Higher order symplectic integrators for perturbed Hamiltonian systems\", arXiv:astro-ph/0005074.\nLopez-Marcos, M. A., Sanz-Serna, J. M., and Skeel R. D. 1996, in Numerical Analysis 1995,\nD. F. Griffiths and G. A. Watson, eds., Longman, Harlow, UK, P.107.\nLopez-Marcos, M. A., Sanz-Serna, J. M., and Skeel R. D. 1997, SIAM J. Sci. Comput., 18\n223.\nMcLachlan R.I., and Atela, P. 1991, Nonlinearity, 5, 542.\nMcLachlan, R. I. 1995, SIAM J. Sci. Comput. 16, 151.\nMcLachlan, R. 1995, BIT 35, 258.\n\n\f\u2013 16 \u2013\nMcLachlan, R. I. 1996, \"More on symplectic correctors\", in Integration Algorithms and Classical Mechanics, J. E. Marsden, G. W. Patrick, and W. F. Shadwick, eds., American\nMathematical Society, Providence, RI.\nMcLachlan, R. I. and C. Scovel 1996, ibid.\nOmelyan, I. P., Mryglod I. M., Folk, R. 2002, Phys. Rev. E66, 026701.\nRowlands, G. 1991, J. Comput. Phys., 97, 235.\nRuth, R. 1983, IEEE Transactions on Nuclear Science, 30, 2669.\nSaha, P. and Tremaine, S. 1992, Astron. J. 104, 1633.\nSheng, Q. 1989, IMA Journal of numberical anaysis, 9, 199.\nSuzuki, M. 1990, Phys. Lett. A146, 319.\nSuzuki, M. 1991, J. Math. Phys. 32, 400.\nSuzuki, M. 1993, Proc. Japan Acad. Ser. B, 69, 161.\nSuzuki, M. 1996, Computer Simulation Studies in Condensed Matter Physics VIII, eds, D.\nLandau, K. Mon and H. Shuttler (Springler, Berlin, 1996).\nWisdom, J., Holman, M. 1991, Astron. J., 102, 1528.\nWisdom, J., Holman, M., and Touma, J. 1996, \"Symplectic correctors\", in Integration Algorithms and Classical Mechanics, J. E. Marsden, G. W. Patrick, and W. F. Shadwick,\neds., American Mathematical Society, Providence, RI.\nYoshida, H. 1990, Phys. Lett. A150, 262.\nYoshida, H. 1993, Celest. Mech. Dyn. Astron. 56, 27.\n\nThis preprint was prepared with the AAS LATEX macros v5.0.\n\n\f\u2013 17 \u2013\n\nAlgorithm 4B'\n1\n\n0.5\n\n0.5\n\n0\n\n0\n\ny\n\ny\n\nAlgorithm FR\n1\n\n-0.5\n\n-0.5\n\n-1\n\n-1\n-1\n\n-0.5\n\n0\nx\n\n0.5\n\n1\n\n-1\n\n-0.5\n\n0\nx\n\n0.5\n\n1\n\nFig. 1.- The trajectory of the third body in the space-fixed frame after three orbits in a\ncircularly restricted three-body problem. The time step used is very large, \u01eb = 9\u03c0/5000 \u2248\n0.0057. FR is the Forest-Ruth algorithm which uses three force evaluations per update.\nAlgorithm 4B\u2032 , Eq.(23), uses two force and one force gradient evaluations. At this large step\nsize, both fourth order Runge-Kutta and the Runge-Kutta-Nystr\u00f6m algorithms are unstable,\nproducing only chaotic trajectories shooting off to infinity.\nAlgorithm 4C\n1\n\n0.5\n\n0.5\n\n0\n\n0\n\ny\n\ny\n\nAlgorithm M\n1\n\n-0.5\n\n-0.5\n\n-1\n\n-1\n-1\n\n-0.5\n\n0\nx\n\n0.5\n\n1\n\n-1\n\n-0.5\n\n0\n\n0.5\n\n1\n\nx\n\nFig. 2.- Same number of orbit and time step size as in Fig.1. M is McLachan's fourth order\nalgorithm which uses four force evaluations per update. Algorithm 4C, Eq.(26), uses three\nforce and one force gradient.\n\n\f\u2013 18 \u2013\n\nAlgorithm RK\n\nAlgorithm 4C\n\n2e+07\n\n2e+05\n\n1e+07\n0\n\n(J - J0) / \u03b5 4\n\n(J - J0) / \u03b5 4\n\n0\n\n-1e+07\n\n-2e+05\n\n-2e+07\n-4e+05\n-3e+07\n\n-4e+07\n\n-6e+05\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\nt/P\n\n0.6\n\n0.7\n\n0.8\n\n0.9\n\n1\n\n0\n\n0.1\n\n0.2\n\n0.3\n\n0.4\n\n0.5\nt/P\n\n0.6\n\n0.7\n\n0.8\n\n0.9\n\n1\n\nFig. 3.- The error coefficient of the Jacobi constant as computed by the fourth order\nRunge-Kutta algorithm and the forward symplectic algorithm 4C. Note the relative scale,\nalgorithm 4C's error coefficient is two orders of magnitude smaller.\n\n2e+07\n\n4e+06\n\nCor\nM\n\n2e+06\n\n4B'\n\n0\n4C\n4A\n0\n(J - J0) / \u03b5 4\n\n(J - J0) / \u03b5 4\n\n4ACB'\n-2e+07\n\nFR\n\n-4e+07\n\n4D\n\n-2e+06\n\n4A\n\n-4e+06\n\n-6e+06\n-6e+07\n\n0.099\n\n4B\n\n0.0995\n\n0.1\nt/P\n\n0.1005\n\n0.101\n\n-8e+06\n0.099\n\n0.0995\n\n0.1\n\n0.1005\n\n0.101\n\nt/P\n\nFig. 4.- The error coefficient of the Jacobi constant at t/p=1/10 due to non-forward\nsymplectic algorithms FR, M and Cor (left figure) and forward symplectic algorithms (right\nfigure). Algorithm 4A is drawn with dotted lines in both for comparison.\n\n\f\u2013 19 \u2013\n\nEnergy After One Period\n1.6e-04\n\n1.2e-04\n\nE - E0\n\n2M\nCor\n0.8e-04\nFR\n\nM\n\nRK\nRKN\n\n4A\n4B\n\n0.4e-04\n\n4C\n4B'\n4ACB'\n\n4D\n\n0\n\n0\n\n0.001\n\n0.002\n\n0.003\n\n0.004\n\n0.005\n\n0.006\n\n\u03b5\nFig. 5.- The convergence of the energy after one period. For the ease of comparion, the\nsigns of 4B\u2032 , RK, and RKN have been changed from negative to positive. All can be very\nwell fitted by solid lines of the form ci \u01eb4 . Though not visible, the convergence curves for\n4C and 4D definitely has a negative fourth order bend before turning positive. The plus\nsign corresponding to the kernel algorithm 2M, which is nearly indistinguishable from the\ncomplete corrector algorithm Cor denoted by hollow circles.\n\n\f\u2013 20 \u2013\n\nEnergy at Half Period\n-2.0379\n\nE - E0\n\n-2.0381\n2M\nRKN\n\nCor\n\n-2.0383\nRK\n4B'\n4A\n\n4ACB'\n\n-2.0385\nFR\nM\n\n4C\n\n4B\n4D\n\n-2.0387\n0\n\n0.001\n\n0.002\n\n0.003\n\n0.004\n\n0.005\n\n0.006\n\n\u03b5\nFig. 6.- The convergence of the energy at mid period where the error in the Jacobi constant\nis at its peak. The solid lines are fourth order fits. The dotted line is a quadratic fit to the\nkernel algorithm 2M. The dashed lines are eighth order fits to 4B\u2032 and 4ACB\u2032 whose fourth\norder coefficients are exceedingly small. The upright solid triangles are FR's results, which\nhas an initial negative fourth order slope, very close to that of M, before turning positive.\n\n\f\u2013 21 \u2013\n\nTable 1: The inverse error height in the Jacobi constant and the inverse fourth order error\ncoefficient in term of RF's value. For example, algorithm 4ACB\u2032 's maximum error in the\nJacobi constant is 295 times smaller than that of FR's and 118 times smaller than that of\nM, McLachlan's alorithm. After one period, algorithm 4C's energy error coefficient is 2200\ntimes smaller than that of FR and 1100 times smaller than that of Cor. At mid period, the\nfourth order error coefficient of 4B\u2032 and 4ACB\u2032 are too small to be extracted with confidence.\nBoth can be well fitted with an eighth order error term as shown in Fig.6.\n\n|hi |\u22121\n|ci |\u22121 (t=P)\n|ci |\u22121 (t=P/2)\n\nRK/RKN RF Cor M\n1 2.5\n2\n0.1\n1\n2 4.9\n0.3\n1 1.1 0.9\n\n4A 4B\n4B\u2032\n13\n8\n26\n12 23\n28\n4.3 4.3 \u223c250\n\n4C\n4D 4ACB\u2032\n94\n45\n295\n2200 2300\n140\n46\n21 \u223c2000\n\n\f"}