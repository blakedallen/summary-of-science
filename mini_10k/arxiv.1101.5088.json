{"id": "http://arxiv.org/abs/1101.5088v1", "guidislink": true, "updated": "2011-01-26T15:42:01Z", "updated_parsed": [2011, 1, 26, 15, 42, 1, 2, 26, 0], "published": "2011-01-26T15:42:01Z", "published_parsed": [2011, 1, 26, 15, 42, 1, 2, 26, 0], "title": "On Sharing Viral Video over an Ad Hoc Wireless Network", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1101.0391%2C1101.5016%2C1101.1625%2C1101.5929%2C1101.4700%2C1101.3911%2C1101.2841%2C1101.3775%2C1101.3510%2C1101.4065%2C1101.5455%2C1101.2135%2C1101.0791%2C1101.4174%2C1101.5917%2C1101.3882%2C1101.1764%2C1101.0276%2C1101.2582%2C1101.4901%2C1101.5945%2C1101.3318%2C1101.1127%2C1101.5643%2C1101.1470%2C1101.2918%2C1101.0225%2C1101.3941%2C1101.4341%2C1101.2447%2C1101.4036%2C1101.0761%2C1101.5088%2C1101.0210%2C1101.3351%2C1101.2606%2C1101.0819%2C1101.5179%2C1101.2643%2C1101.4350%2C1101.0243%2C1101.5624%2C1101.2989%2C1101.5671%2C1101.0124%2C1101.3751%2C1101.5848%2C1101.1217%2C1101.3857%2C1101.2590%2C1101.2698%2C1101.3757%2C1101.5670%2C1101.5594%2C1101.3507%2C1101.4122%2C1101.4926%2C1101.3764%2C1101.2250%2C1101.3674%2C1101.4395%2C1101.5219%2C1101.5998%2C1101.4662%2C1101.3365%2C1101.5727%2C1101.5920%2C1101.0192%2C1101.2077%2C1101.1585%2C1101.0900%2C1101.1373%2C1101.0019%2C1101.5131%2C1101.5744%2C1101.4896%2C1101.4619%2C1101.1958%2C1101.4714%2C1101.1716%2C1101.0384%2C1101.1953%2C1101.2248%2C1101.0094%2C1101.4468%2C1101.1363%2C1101.1523%2C1101.0389%2C1101.5622%2C1101.4542%2C1101.4728%2C1101.3491%2C1101.2707%2C1101.2058%2C1101.4536%2C1101.1555%2C1101.2722%2C1101.3406%2C1101.2667%2C1101.1454%2C1101.0831&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "On Sharing Viral Video over an Ad Hoc Wireless Network"}, "summary": "We consider the problem of broadcasting a viral video (a large file) over an\nad hoc wireless network (e.g., students in a campus). Many smartphones are GPS\nenabled, and equipped with peer-to-peer (ad hoc) transmission mode, allowing\nthem to wirelessly exchange files over short distances rather than use the\ncarrier's WAN. The demand for the file however is transmitted through the\nsocial network (e.g., a YouTube link posted on Facebook).\n  To address this coupled-network problem (demand on the social network;\nbandwidth on the wireless network) where the two networks have different\ntopologies, we propose a file dissemination algorithm. In our scheme, users\nquery their social network to find geographically nearby friends that have the\ndesired file, and utilize the underlying ad hoc network to route the data via\nmulti-hop transmissions. We show that for many popular models for social\nnetworks, the file dissemination time scales sublinearly with n; the number of\nusers, compared to the linear scaling required if each user who wants the file\nmust download it from the carrier's WAN.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1101.0391%2C1101.5016%2C1101.1625%2C1101.5929%2C1101.4700%2C1101.3911%2C1101.2841%2C1101.3775%2C1101.3510%2C1101.4065%2C1101.5455%2C1101.2135%2C1101.0791%2C1101.4174%2C1101.5917%2C1101.3882%2C1101.1764%2C1101.0276%2C1101.2582%2C1101.4901%2C1101.5945%2C1101.3318%2C1101.1127%2C1101.5643%2C1101.1470%2C1101.2918%2C1101.0225%2C1101.3941%2C1101.4341%2C1101.2447%2C1101.4036%2C1101.0761%2C1101.5088%2C1101.0210%2C1101.3351%2C1101.2606%2C1101.0819%2C1101.5179%2C1101.2643%2C1101.4350%2C1101.0243%2C1101.5624%2C1101.2989%2C1101.5671%2C1101.0124%2C1101.3751%2C1101.5848%2C1101.1217%2C1101.3857%2C1101.2590%2C1101.2698%2C1101.3757%2C1101.5670%2C1101.5594%2C1101.3507%2C1101.4122%2C1101.4926%2C1101.3764%2C1101.2250%2C1101.3674%2C1101.4395%2C1101.5219%2C1101.5998%2C1101.4662%2C1101.3365%2C1101.5727%2C1101.5920%2C1101.0192%2C1101.2077%2C1101.1585%2C1101.0900%2C1101.1373%2C1101.0019%2C1101.5131%2C1101.5744%2C1101.4896%2C1101.4619%2C1101.1958%2C1101.4714%2C1101.1716%2C1101.0384%2C1101.1953%2C1101.2248%2C1101.0094%2C1101.4468%2C1101.1363%2C1101.1523%2C1101.0389%2C1101.5622%2C1101.4542%2C1101.4728%2C1101.3491%2C1101.2707%2C1101.2058%2C1101.4536%2C1101.1555%2C1101.2722%2C1101.3406%2C1101.2667%2C1101.1454%2C1101.0831&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We consider the problem of broadcasting a viral video (a large file) over an\nad hoc wireless network (e.g., students in a campus). Many smartphones are GPS\nenabled, and equipped with peer-to-peer (ad hoc) transmission mode, allowing\nthem to wirelessly exchange files over short distances rather than use the\ncarrier's WAN. The demand for the file however is transmitted through the\nsocial network (e.g., a YouTube link posted on Facebook).\n  To address this coupled-network problem (demand on the social network;\nbandwidth on the wireless network) where the two networks have different\ntopologies, we propose a file dissemination algorithm. In our scheme, users\nquery their social network to find geographically nearby friends that have the\ndesired file, and utilize the underlying ad hoc network to route the data via\nmulti-hop transmissions. We show that for many popular models for social\nnetworks, the file dissemination time scales sublinearly with n; the number of\nusers, compared to the linear scaling required if each user who wants the file\nmust download it from the carrier's WAN."}, "authors": ["Yi-Ting Chen", "Constantine Caramanis", "Sanjay Shakkottai"], "author_detail": {"name": "Sanjay Shakkottai"}, "author": "Sanjay Shakkottai", "links": [{"href": "http://arxiv.org/abs/1101.5088v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1101.5088v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.SI", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.SI", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1101.5088v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1101.5088v1", "arxiv_comment": null, "journal_reference": null, "doi": null, "fulltext": "On Sharing Viral Video Over an Ad Hoc Wireless\nNetwork\n\narXiv:1101.5088v1 [cs.SI] 26 Jan 2011\n\nYi-Ting Chen, Constantine Caramanis and Sanjay Shakkottai\nDepartment of Electrical and Computer Engineering\nThe University of Texas at Austin\nEmail: {yiting.chen, caramanis, shakkott}@mail.utexas.edu\nAbstract-We consider the problem of broadcasting a viral\nvideo (a large file) over an ad hoc wireless network (e.g., students\nin a campus). Many smartphones are GPS enabled, and equipped\nwith peer-to-peer (ad hoc) transmission mode, allowing them to\nwirelessly exchange files over short distances rather than use the\ncarrier's WAN. The demand for the file however is transmitted\nthrough the social network (e.g., a YouTube link posted on\nFacebook).\nTo address this coupled-network problem (demand on the\nsocial network; bandwidth on the wireless network) where\nthe two networks have different topologies, we propose a file\ndissemination algorithm. In our scheme, users query their social\nnetwork to find geographically nearby friends that have the\ndesired file, and utilize the underlying ad hoc network to route\nthe data via multi-hop transmissions. We show that for many\npopular models for social networks, the file dissemination time\nscales sublinearly with n, the number of users, compared to\nthe linear scaling required if each user who wants the file must\ndownload it from the carrier's WAN.\n\nI. I NTRODUCTION\nThe proliferation of mobile devices that can stream video\n(laptops, smartphones, tablets) has marked a dramatic increase\nin demand for streaming video. At the same time, content\ngeneration and dissemination has become dramatically easier \u2013\nmost phones have installed video-cameras, and knowledge of a\nvideo can spread extremely rapidly to vast numbers of people,\nthrough social networks including e-mail, Facebook, Twitter,\nand the like. As deployed capacity approaches saturation, we\nneed new transmission architectures to guarantee our wireless\nnetworks continue to deliver traffic effectively and efficiently.\nThis paper addresses precisely this problem. More specifically: we consider the simple, yet increasingly common\nsetting, where a user (e.g., a student on a college campus)\ngenerates a large file (a short video, for example) and wants\nto spread it to her social network \u2013 her friends, their friends,\nand so on. In the current paradigm, the file creator uploads the\nfile to a central server (e.g., YouTube) and then spreads word\nof its existence through Facebook, Twitter, etc. Upon learning\nof the file's existence, interested (we call them \"eager\") users\nthen download the file from the server, using their provider's\nwide area network (WAN). Since the WAN has bounded\nbandwidth, the file dissemination time will necessarily scale\nlinearly in the number of users who ultimately receive the\nfile. Particularly in a dense setting like a college campus, this\ninherently limited centralized scheme for file dissemination\n\nmay be highly suboptimal. The central question in this paper\nis: how much better can we do?\nIncreasingly, smartphones and similar technology, are\nequipped with both GPS and peer-to-peer transmission modes.\nIn dense environments, this opens the possibility of forming\na wireless ad hoc network in which users communicate with\neach other through several hops of short distance transmissions. As shown in Gupta and Kumar's seminal work [1],\n\u221a the\nspatial capacity of a wireless ad hoc network scales as n \u2013\na sharp contrast to the fixed capacity of a WAN. While this\nscaling spatial capacity of ad hoc networks provides a potential\nway forward, naive implementation presents severe problems\nthat may leave us worse off than the currently implemented\nWAN solution. We may have severe congestion caused by\nsubsets of users getting a high number of requests, hence\nresulting in hot-spots in the network. This will occur, for\ninstance, if users request the file from neighbors on their social\nnetwork, as most social networks exhibit the presence of supernodes with very high degree. This is particularly true in the\nbroadcast setting we have here, when we expect there to be\nsuch hot spots, which can potentially reduce network capacity\nby a significant factor [17].\nA. Main contributions\nIn this paper we propose a simple and distributed file\ndissemination algorithm that takes advantage of two main\nideas: (i) knowledge of the file spreads quickly because of\nthe structure of the social network \u2013 we can use the same\nto manage file dissemination; (ii) in dense settings where ad\nhoc networks make sense, exploiting geographic proximity\ncan provide additional benefits. With these ideas in mind, we\ndevise a file dissemination algorithm that works by passing\nmessages through the social network, and requires limited\ncommunication and computation overhead. In particular, the\nmain features of our algorithm are as follows:\n1) Load balancing: users receiving a large amount of requests distribute them to nearby users on the social\nnetwork, in such a way that we can guarantee no user\nhas to serve\n\u221a more than six other users. Our algorithm\nachieves n-scaling with the number of users receiving\nthe file \u2013 sublinear, in sharp contrast to the linear scaling\nrequired in the WAN file dissemination architecture.\n2) Exploiting geographic proximity: We extend our loadbalancing algorithm to exploit geographic proximity.\n\n\f2\n\nBecause of the structure of the social network, we show\nthat by searching a few hops deeper in their social\nnetwork, most users are able to download the file from\nanother user at close range.\u221a\nThis idea allows us to further\nreduce the scaling below n, depending on the depth\nof the social-network a user may search.\n3) Social Networks: We analyze our algorithm on popular\nmodels for social networks (power law graphs). We show\nthat the file dissemination time scales sublinearly with\nn for a broad range of social-network parameters. In\naddition, we show that the performance of our algorithm is comparable to the best possible dissemination\ntime of any algorithm \u2013 even those not constrained by\ncommunication or computation time.\nB. Related work\nSingle piece file dissemination problems were first studied\nin [18][19]. In [20]-[22], they provide analytic results for\nmulti-piece file dissemination problems. Other topics related\nto influence spreading, epidemics, and content distribution in\nsocial networks can be found, for example, in [23]-[25] and\nreferences therein.\nMulti-hop transmission in a wireless network has been\nstudied extensively since Gupta and Kumar's seminal work\n[1]. Subsequently,\np [3] provides a simple proof and [2] closes\nthe gap of 1/ log(n). Multicast and broadcast capacities are\nconsidered in, e.g., [11]-[13]. On the other hand, [14]-[17] use\nrandomized schemes to balance the traffic load and achieve\nthroughput optimal routing.\nC. Paper organization\nWe introduce the system model in Section II. In Section\nIII, we present our algorithm and main results. Some lemmas\nregarding random placement and random graphs are included\nin Section IV. We analyze the performance of our algorithm in\nSection V. Conclusions are provided in Section VI. The proofs\nof various lemmas and theorems in Section III and Section IV\ncan be found in Appendix A and Appendix B.\nII. S YSTEM\n\nDESCRIPTION\n\nIn this section we describe the basic system model, including the model for the wireless network and the placement of\nthe nodes, and the model for the social network.\nA. Random wireless network and Gaussian channel model\nWe model our network as n static nodes, placed\nindepen\u221a\ndently and uniformly on a square of width n. Thus the\n(expected) density of the network stays constant. Each node\nhas a transmitter and a receiver. All nodes can communicate\nwith each other with fixed power P . The interference model\nis described by a Gaussian channel model defined below.\nDefinition 1: (Gaussian channel model) Index nodes by 1,\n2, . . . , n. Let xi be the location of node i. Let A be the set of\nactive transmitters at this time instant. The transmission rate\n\nR(xi , xj ) from node i to node j is\nP l(xi , xj )\nP\nR(xi , xj ) = log 1 +\nN0 + k\u2208A\\{i} P l(xk , xj )\n\n!\n\n. (1)\n\nHere, l(x, y) represents the power attenuation function between points x and y on the square, and is given by\n\u001a\n\u001b\ne\u2212\u03b3||xi \u2212xj ||\nl(xi , xj ) = min 1,\n(2)\n||xi \u2212 xj ||\u03b1\nwhere as usual, ||x \u2212 y|| is the Euclidean distance between x\nand y.\nIn this paper, we consider either \u03b3 > 0 or \u03b3 = 0 and \u03b1 > 2.\n\nB. Model for social networks\nAs we identify users with their devices (e.g. cell phones/\nPDA), the n nodes in the wireless network also form a social\nnetwork. A social network is described as a graph G = (V, E)\nwhere V is the set of nodes with cardinality n and E is the\nset of edges. Two nodes are joined by an edge if (and only\nif) the corresponding users are friends in the social network.\nThe distance between two nodes x and y on the social-graph\nG is the minimum number of hops between x and y in the\nsocial network. Thus a node's neighbors are the nodes one\nhop away on the social graph, and its k-neighborhood are the\nnodes within k hops away on the social graph. A key property\nwe exploit is that distance between two nodes on the social\nnetwork is generally unrelated to geographic distance between\nthe corresponding users in the wireless network.\nEmpirical studies of many social (and other) networks have\nshown them to satisfy so-called power law graph structure,\nincluding many collaboration networks, but also the Internet\nand many communication networks (see e.g. [7] [8] [9] [10]).\nAs a consequence, power law graphs (which we define below)\nare a popular choice for modeling social networks.\nA graph G is called a power law graph with parameter \u03b2 if\nthe number of nodes with degree k is proportional to k \u2212\u03b2 . We\nwill consider social networks generated by random power law\ngraphs [4]. These random graphs satisfy an important property:\neach node has only small number of neighbors, i.e., small\ndegree (small relative to the size of the overall network) while\nthe diameter of the random graph (the maximum number of\nhops between the vast majority of the nodes) is still small, with\noverwhelming probability. This property is consistent with\nproperties of most social networks, and in particular, with the\nfamous observation known as the small world phenomenon,\nfirst discussed in [6].\nAs is common, we generate random graphs and in particular\nrandom power law graphs, according to expected degree\nsequences [4].\nDefinition 2: ([4]) Let w = (w1 , w2 , . . . , wnP\n) be an expected degree sequence satisfying max{wk2 } \u2264 1\u2264k\u2264n wk .\nWe say G = (V, E) is a random graph generated by the degree\nsequence\nP w if edge (i, j) \u2208 E is present with probability\nwi wj / 1\u2264k\u2264n wk .\nDefinition 3: ([4]) A random graph generated by Definition\n2 is a random power law graph with parameter \u03b2, average\n\n\f3\n\ndegree d \u0304 and maximum expected degree M if wi is chosen\nby\nwi = c(io + i)\u22121/(\u03b2\u22121) ,\n(3)\n\u0011\u03b2\u22121\n\u0010  \u0304\n \u0304 1/(\u03b2\u22121) and i0 = n d(\u03b2\u22122)\n.\nwhere c = \u03b2\u22122\n\u03b2\u22121 dn\nM(\u03b2\u22121)\nThe well-known Erd\u00f6s-R\u00e9nyi graph, denoted by G(n, p), is\nthe graph where each edge is present with probability p. It\nis thus a random graph with expected degree sequence w =\n(np, np, . . . , np).\nFor convenience, we further introduce the following notation.\nP Given a subset S \u2286 V , let the volume of S be vol(S) =\nsum of weights of nodes in S. Similarly,\ni\u2208S wi , i.e., theP\ndefine volk (S) = i\u2208S wik and d \u0303 = vol2 (G)/vol(G).\n\nnearby nodes. Moreover, they are allowed to search for such\nnearby nodes beyond their immediate neighbors in the social\nnetwork.\nOur algorithm accommodates both settings \u2013 the first, by\nadjusting the \"preferred distance\" to infinite and the number\nof search-hops to 1, and the second, by limiting the preferred\ndistance, and by expanding the number of allowed searchhops. In Section III-B we consider the first setting: no geographic information available. We\n\u221a show that for most social\nnetworks, our algorithm gives n-scaling. We consider the\nsecond setting in Section III-C, where nodes have access to\ngeographic position information. We show that again for many\nsocial networks, the dissemination\ntime can be further reduced\n\u221a\nto scale more slowly than n.\n\nC. Assumption on file length\n\nThe transmission time consists of two parts: propagation\ndelay and file receiving time. The propagation delay is the\ntime required to receive the first bit since the start of the\ntransmission. The file receiving time is the time required to\nfinish the transmission since then. For simplicity, we assume\nthe file length F is large, and we ignore the propagation\ndelay in the analysis. We note in passing that we can formally\nincorporate both propagation delay as well as the file receiving\ntime in our analysis by scaling F such that the propagation\ndelay terms will be sub-dominant to the file receiving time.\nIII. A LGORITHM\n\nAND MAIN RESULTS\n\nWe are now ready to present our algorithm and state our\nmain results. At some initial time, the file generator (the\nsource) creates the file, and advertises it on her social network.\nAt any given time, a node either has the file (active node),\nknows about the file and wants it because one of its socialnetwork neighbors has it (eager node), or is oblivious to its\nexistence (inactive node).\nThe algorithm proceeds in three phases. In the Requesting\nPhase, eager nodes use their social network to request the file\nfrom active nodes \u2013 if knowledge of geographic location is\navailable, nodes favor (geographically) nearby active nodes.\nIn the Scheduling Phase, again the social network is used\nto schedule a sequence of transmissions whereby each eager\nnode is assigned a transmission node from which it will obtain\nthe file. In the Transmission Phase, nodes transmit the file\nto their appointed requestors, employing established routing\ntechniques [2]. This final third phase is conceptually distinct\nfrom the first two phases, and it is important to emphasize this\npoint here. The routing techniques used are independent of\nthe social network structure, and follow the multi-hop ad hoc\nnetwork protocols described in, e.g., [1], [2]. Thus, while the\nrequesting and scheduling in Phases 1 and 2 are constrained\nby the social network, the routing in Phase 3 is not.\nWe present a single algorithm that accommodates two\nsettings: in the first, simpler setting, nodes have no notion of\ngeography, and may not request the file from active nodes\nmore than a single hop away on their social network. In\nthe second setting, nodes are aware of geography and hence\ndistance, and \"prefer\" to request the file from geographically\n\nA. Algorithm\nOur algorithm takes the input as the diameter of the social\nnetwork, D, as well as two parameters which we specify: \u01eb,\nand L, whose roles are as follows. Nodes are allowed to search\nfor another node in the social network from which to download\nthe file, at a distance of at most 2\u01ebD + 1 hops away. Thus\nif \u01eb = 0, they cannot look beyond a single hop away, and if\n\u01eb = 0.5, they have access to the entire social network. Thus the\nparameter \u01eb controls the search depth. The parameter L is used\nto exploit geographic proximity: most nodes will download the\nfile from nodes that are at a geographic distance of at most L.\nIf nodes have no notion of geography, we set L = \u221e, hence\nall nodes are within L. Otherwise, we set L to a smaller value.\nGiven parameters (\u01eb, L, D) as described above, the algorithm finds active nodes from which eager nodes can download\nthe file. This is accomplished through coordination through the\nsocial network.\nThe main idea is the following: eager nodes send requests\nto one of their social-network neighbors with the file. Since a\nsingle node may get many such requests, it does not serve all of\nthem, but rather finds other active nodes nearby in the social\nnetwork to serve them, and also enlists the receiving nodes\nthemselves to forward along the file. The theorems given in\nSections III-B and III-C show that for the specific choices of\nparameters \u01eb and L given, the algorithm succeeds in delivering\nthe file to all nodes, and moreover does so in the advertised\ntime scaling.\nWhen L is set to a non-infinite value, it may not always\nbe possible for nodes to obtain the file from geographically\nproximate neighbors \u2013 for instance, suppose the generator has\nno neighbors in her geographic proximity. In such cases, we\nallow file transfers that exceed geographic distance L, and\nthese happen from two or one-hop neighbors on the social\nnetwork. We call transfers within geographic distance L, Ltransfers, and all other transfers S-transfers, since they are\nnear in the social-network distance. Similarly we refer to Lrequests and S-requests.\nALGORITHM 1:\nInput: parameter \u01eb, distance threshold L, and the diameter\nof the social network D.\nRequesting Phase: Consider an eager node, x, at time t.\n\n\f4\n\nStep 1: Let Nx (t) denote node x's 2\u01ebD + 1-neighborhood\nin the social-graph at time t. Let NxL (t) \u2286 Nx (t) be the set\nof nodes in Nx (t) that have the file and whose Euclidean\n(geographic) distance to x does not exceed L.\nStep 2: If NxL (t) is not empty, x sends an L-request to a\nrandomly picked node in NxL (t).\nStep 3: If NxL (t) is empty and the distance from x to the\nsource on the social-graph is smaller than \u01ebD +1, then x sends\nan S-request to a one-hop neighbor in the social-graph which\nhas the file.\nStep 4: Otherwise, x waits and goes back to step 1 at time\nt + 1.\nScheduling Phase: Consider an active node y. It maintains\ntwo balanced binary trees, an L-tree and an S-tree, constructed\nfrom its L-requests and S-requests, respectively. It builds these\ntrees by adding requesting nodes sequentially, as the requests\narrive. This sequential building of the binary trees is depicted\nin Figure 1.\nWhen node y receives an L-request, node y adds the eager\nnode to the L-tree and asks its parent on the tree to deliver\nthe file, and similarly for S-requests.\nTransmission Phase: An eager node waits until the node\ndesignated as its transmitting node in the Scheduling Phase\nhas the file. It then sets up a wireless transmission, and routes\ndata through a highway system described in [2]. Note that the\ntransmitter will have to serve at most 6 nodes: 2 from its own\nL-tree, 2 from its own S-tree, and 2 from the tree it joins\nwhen it is an eager node (which could be either an L-tree\nor an S-tree). Thus, we divide a time slot into six and each\ntransmitter serves all nodes in a round robin fashion.\n\nFig. 1. Each active node maintains balanced binary trees and adds requesting\nnodes to trees sequentially. Suppose the active node depicted at the root gets\nfour requests at time t, and two more at time t + 1. The resulting tree might\nlook as depicted. The original active node would then serve nodes 1 and 2,\nsubsequently node 1 would serve nodes 3 and 4, and node 2 would serve\nnodes 5 and 6.\n\nB. Main results: load balancing\nIn this section we show that the load-balancing\n\u221a accomplished by the L-binary trees is enough to give n-scaling,\nwithout any geographic information. We show that our result\nholds, as long as the social network has the properties of a\nrandom power law graph with \u03b2 > 2, minimum expected\ndegree m > 3 and\n\u221a maximum expected degree M satisfying\nlog(n) \u226a M \u226a n (many social networks have values of \u03b2\nlarge than this \u2013 see, for example, collaboration graphs in [9]).\nIn this case, the diameter of the social-graph is O(log(n)) and\nthe size of the largest component is of \u0398(n) [4][5].\n\nAs discussed, we set L = \u221e, and \u01eb = 0, thus nodes are only\nallowed to request the file from nodes at most one hop away\non the social network, and they entirely ignore geography.\nIn this case, for any eager node x, we have NxL (t) 6= \u2205 at\nthe time t node x becomes eager, and hence the Requesting\nPhase of the algorithm uses only Step 1 and Step 2. There are\nonly L-requests, and thus the algorithm requires each node\nto transmit to at most 4 other nodes. Indeed, the point of\nthis algorithm is to distribute the load evenly on the wireless\nnetwork.\nIn Theorem\n\u221a 4, we show that the file dissemination time\nscales like n (sublinearly). In addition, we show that the\nperformance only differs from algorithm independent lower\nbounds with a factor n\u03be for any \u03be > 0. Since the proofs of\nthe following two theorems are similar to those for Theorem\n7 and Theorem 8, we defer the full details to the Appendix B.\nTheorem 4: Consider the file dissemination problem with\nwireless network and social network as defined above. Suppose the file length is F . Then the file dissemination time for\nAlgorithm 1 is\n\u221a\nO( n log2 (n)F )\n(4)\nwith high probability.\nTheorem 5: Consider the file dissemination problem with\nwireless network and social network as defined above. Suppose the file length is F . Then, for any algorithm that allows\nnodes to download the file from their 1- and 2-hop neighbors\non the social network, the file dissemination time is lower\nbounded by\n\u03a9(n1/2\u2212\u03be F ),\n(5)\nfor any \u03be > 0 with high probability.\nRemark 6: Significantly, the only properties of power law\ngraphs we use are the size of the diameter and the maximum\ndegree. Specifically, given a graph G with diameter lmax\nand\u221amaximum degree dmax , the file dissemination time is\nO( n log(dmax )lmax F ) if nodes are only allowed to download the file from nodes at most 2 hops away. The proof of\nthis follows immediately from the proof of the theorem.\nC. Main results: exploiting geography\nIntuitively, increasing the number of geographically proximal downloads should decrease transmission time. We show\nthat this can be accomplished, at the cost of deeper searching\nof the social network, as long as the social network has the\nproperties of a random power law graph with \u03b2 > 3 (again,\nmany graphs have this property, see, e.g., the collaboration\ngraphs in [10]). We assume that the minimum expected\ndegree is m = K log(n) where K is a constant greater\nthan 10, and the maximum\nexpected degree is M , satisfying\n\u221a\nlog2 (n) \u226a M \u226a n. Thus, almost all nodes are in the largest\ncomponent and the diameter of the graph is D \u2248 logd\u0303 (n)\n[4][5] (recall the definition of d \u0303 from Section II).\nSetting \u01eb to a positive value translates to allowing nodes to\nsearch for an active node in their 2\u01eb logd\u0303 (n)+1-neighborhood,\nand because of our load-balancing architecture, ultimately\n\n\f5\n\ndownload the file from nodes in their 4\u01eb logd\u0303 (n) + 2 neighborhood. With more active nodes available, eager nodes can\nmore easily\np find geographically proximal active nodes. We\nset L = 8 n1\u2212\u01eb\u2032 log(n)/\u03c3\u03c0 for any \u01eb\u2032 < \u01eb. The value of \u01eb\nis chosen to be small, \u01eb < 1/10, allowing nodes to search\na neighborhood that is large, but nevertheless a vanishing\nfraction of the size of the entire network.\nAs load-balancing alone\n\u221a was able to achieve file dissemination time scaling of n, we show now that by additionally\nexploiting geography, the file dissemination time can be further\nreduced by a factor n\u01eb/2 compared to the result in Theorem\n4. Proofs of the two theorems can be found in Section V.\nTheorem 7: Suppose the source is chosen uniformly at\nrandom from the nodes in the largest component and the\nfile length is F . Consider the setting described above. Then\nthe file dissemination time under Algorithm 1 with parameter\n0 < \u01eb < 0.1 is\n\u221a\n(6)\nO( n1\u2212\u01eb\u2032 log2.5 (n)F ),\n\nfor any \u01eb\u2032 < \u01eb with high probability.\nTheorem 8: Consider the file dissemination problem under\nthe setting described above. Let F be the file length. Then,\nfor any algorithm that allows nodes to download the file\nfrom their 4\u01eb logd \u0303(n) + 2-neighborhood with \u01eb < 0.1, the file\ndissemination time is lower bounded by\n\u03a9(n1/2\u22122\u01eb\u2212\u03be F ),\n\n(7)\n\nwith high probability for any \u03be > 0.\nIV. R ANDOM P LACEMENT AND R ANDOM G RAPHS\nIn preparation for the proof in the next section, we give\nsome lemmas that characterize the behavior of randomly\nplaced nodes in a square, and also give properties of random\ngraphs.\nA. Results about random placement of nodes in a square\nTwo properties in particular, are important. For our scheme\nto work, we need to show that with overwhelming probability,\nwe will not have a very high clustering of nodes (some\nclustering will occur). We also need to show that when nodes\nlook in their social network for geographically proximate\nactive nodes, they will be able to find at least one, with\nhigh probability. The next two lemmas show precisely these\nproperties.\nIn the first lemma, we show we control the minimum\ndistance between a node and k other nodes. We use this\nlemma to ensure that each node can find a node close to\nit on the wireless-square. In the second lemma, we show a\nconcentration result about the number of nodes falling into a\nsmall rectangle, thus showing it is not too big. The proofs of\nthese lemmas are also available in Appendix B.\n\u221a\nLemma 9: Place k + 1 nodes on a square of width n\nindependently and uniformly. Let \u03c4 be the minimum distance\nfrom the first node to the others. Then, we have\np\n(8)\nP(\u03c4 \u2265 64n log(n)/\u03c0k) \u2264 n\u22122 .\n\n\u221a\nLemma 10: Place n nodes on a square of width n independent and uniformly. Given a rectangle of area A where\nA = \u03c9(log(n)), let X be the number of nodes in the rectangle.\nThen,\nP(X \u2265 2A) \u2264 n\u22122 .\n(9)\nB. Results about the neighborhood behavior of random graphs\nIn the following lemma, we address the relation between\nweights and the number of neighbors. Specifically, we show\nthat if a node has weight wi greater than 10 log(n), then the\nnumber of one-hop neighbors the node can reach in the socialgraph is between wi /2 and 2wi . We use this lemma as it\nprovides a relationship between weights and the number of\nnodes.\nLemma 11: Suppose wi \u2265 10 log(n). Let X be the number\nof one-hop neighbors in the social-graph of node i. Then,\nwi /2 < X < 2wi with probability 1 \u2212 o(n\u22121 ).\nThe next two lemmas characterize the local behavior of\nrandom power law graphs. Specifically, we are interested\nin how the size of neighborhoods of nodes in the largest\ncomponent grows. We show that for any node in the largest\ncomponent, the number of nodes in a small neighborhood\ngrows like a factor d \u0303 if we explore one more step. We prove\nthis by providing upper and lower bounds that only differ by a\nfactor of n\u03be for any \u03be > 0. The proofs are shown in Appendix\nA.\nLemma 12: Consider a random power law graph with parameter \u03b2 > 3. Suppose the minimum expected degree is\nm = K log(n) for some K \u2265 10 and the maximum expected\n\u2032\ndegree is M \u226b log2 (n). Then, there are at least \u03c3n\u01eb nodes in\na node's \u01eb logd\u0303 (n)-neighborhood with probability 1 \u2212 o(n\u22121 ),\nfor any \u01eb\u2032 < \u01eb < 0.1. Here, \u03c3 is a constant depending on \u03b2\nand K.\nLemma 13: Consider a random power law graph with parameter \u03b2 > 3. Suppose the minimum expected degree is\nm = K log(n) for some K \u2265 10, the maximum expected\ndegree is M \u226b log2 (n), and \u01eb < 0.4. Consider a node\neither picked randomly or with weight smaller than W . Then,\n\u2032\nthere are at most 2W d \u0303\u03bb n\u01eb / log(n) nodes in this node's\n\u01eb logd\u0303 (n)+\u03bb-neighborhood, with probability 1\u2212O(log\u22121 (n)),\nfor any \u01eb\u2032 > \u01eb and any fixed constant \u03bb where\n(\nlog\u03b2/\u03b2\u22123 (n)\nif 3 < \u03b2 \u2264 4\nW =\nmax{log5/\u03b2\u22124 (n), log2 (n)} if\n4<\u03b2\n(10)\nV. P ERFORMANCE A NALYSIS\nA. Proof of Theorem 7\nIn this section, we first prove Theorem 7 which states the\nperformance of our algorithm when geographic information\nis available, and when nodes can download the file from a\nneighborhood of radius 4\u01eb logd\u0303 (n) + 2. The proof of the more\nsimple load-balancing case (where we set L = \u221e and \u01eb =\n0) is essentially a consequence of this proof \u2013 for the full\ndetails we refer to Appendix B.\u221aSpecifically, we show the file\ndissemination time is roughly n1\u2212\u01eb F .\n\n\f6\n\nThe proof of the theorem consists of two main parts:\nshowing the existence of a geographically nearby neighbor\nin the wireless-graph and the analysis of transmission rates.\nIn addition, the transmission phase of our algorithm relies on\nsome routing results from [2] and [12] which we summarize\nhere. For the full details, we refer readers to those individual\npapers. In the routing scheme, packets are routed through a\nhighway system consisting of horizontal highways and vertical\nhighways. Each highway serves nodes in a stripe on the\nwireless-square. An illustration is shown in Fig. 2. The results\nin [2] and [12] guarantee the following properties of this\nhighway system.\n1) Nodes can reach their highways in a hop of length\nO(log(n)).\n2) The highways are almost straight. For example, if a flow\non a horizontal highway starts from x-coordinate a1 with\ndestination at x-coordination a2 > a1 , it will not reach\nany node with x-coordinate smaller than a1 \u2212 H where\nH = O(log(n)).\n3) Highway nodes can communicate with neighboring\nhighway nodes with a constant rate. A highway node\nserves flows through it with equal rate.\n\nFig. 2. An illustration of the highway system and routing. Packets are first\nrouted through horizontal highways to vertical highways corresponding to\ndestinations.\n\nWe now move to the proof of the theorem. We first state the\nexistence of an \"intermediate node\" in the following lemma.\nLemma 14: Consider a random power law graph with \u03b2 >\n3 and m = K log(n) where K > 10 is a constant. For some\n\u01eb < 0.1, consider a node x in the largest component, such\nthat the distance from x to the source on the social network\nis greater than \u01eb logd\u0303 (n). Then, there exists a node y which\nsatisfies the follows with probability at least 1 \u2212 o(n\u22121 ):\n1) y is in the 2\u01eb logd \u0303(n)+1-neighborhood of x in the socialgraph.\n2) The distance from y to the source on the social network\nis smaller than that from x to the source.\n3) The Euclidean distance from x to y on the wirelesssquare is smaller than L.\n\u2032\nProof. We first show that there exist \u03c3n\u01eb nodes satisfying 1)\nand 2) with probability 1\u2212o(n\u22121 ). Let dx be the distance from\nx to the source on the social network. Since dx > \u01eb logd \u0303(n),\nthere exists a node z such that the distance from z to x on the\ngraph is \u01eb logd\u0303 (n) + 1 and the distance from z to the source\n\non the graph is dx \u2212 \u01eb logd\u0303 (n) \u2212 1. Therefore, nodes in the\n\u01eb logd\u0303 (n)-neighborhood of z in the social-graph satisfy 1) and\n2). In addition, by Lemma 12, the size of such a neighborhood\n\u2032\nis greater than \u03c3n\u01eb with probability 1 \u2212 o(n\u22121 ).\n\u2032\nThus, by Lemma 9, there exists a node y among the \u03c3n\u01eb\nnodes whose Euclidean distance to x on the wireless-square\nis smaller than L with probability 1 \u2212 o(n\u22121 ).\nProof. (Theorem 7) Recall that our algorithm classifies\ntransmissions as those chosen because they are geographically\nwithin distance L, called L-transmissions, and those chosen\nbecause they are within two hops on the social network, called\nS-transmissions. S-transmissions are those whose Euclidean\ndistances between transmitters and receivers on the wirelesssquare are not guaranteed to be less than 2L, as are Ltransmissions. Note that the number of S-transmissions is\nsmaller than the number of nodes in \u01eb logd\u0303 (n)-neighborhood\nof the source in the social-graph which is smaller than\n\u2032\u2032\n2W n\u01eb / log(n) for any \u01eb\u2032\u2032 > \u01eb with high probability by\nLemma 13.\nNow, we bound the number of flows through a highway\nnode at any time. Consider a transmission between two\nnodes with Euclidean distance less than 2L. By the fact\nthat highways are almost straight and the first and last hops\nare of length O(log(n)), the transmission passes through\na horizontal (vertical) highway node only if the horizontal\n(vertical) distance between the transmitter (receiver) and the\nnode is smaller than 3L on the wireless-square. In other words,\nL-transmissions through a horizontal (vertical) highway node\nmust fall in a rectangle of side 6L \u00d7 h in the corresponding\nhorizontal (vertical) strip where h is a constant provided in [2].\nSince, by Lemma 10, the total number of nodes falling into\nthis region is O(L) with probability 1\u2212o(n\u22121 ) and each node\ngenerates at most a constant number of flows, using the union\nbound we can conclude that all highway nodes have at most\nO(L) L-flows with probability 1 \u2212 o(1). In addition, since\n\u2032\u2032\nthere are at most 2W n\u01eb / log(n) S-transmissions, the total\nnumber of flows through each highway node is O(L) with\nprobability 1 \u2212 o(1). Therefore, each flow has a rate \u03a9(1/L)\nwith high probability and each node can receive the file in\nc0 LF time slots for some constant c0 > 0 from the time\nwhen the transmission begins.\nWe prove the theorem by induction on k: the distance\nfrom a node to the source on the social-graph. Let Nk\ndenote nodes whose distance to the source is k on the\nsocial-graph. The claim of the induction is that a node in Nk\ncan receive the file in at most kc0 log2 (n)LF time slots. By\nour notation, N0 is the source node. First note, that the base\ncase k = 1 of the induction clearly holds. Now, we suppose\nit is true for k \u2212 1 and consider nodes in Nk . Note that\nno nodes in Nk are inactive at time (k \u2212 1)c0 log2 (n)LF .\nFurther, by Algorithm 1 and Lemma 14, all nodes in Nk\ncan request the file, according to the algorithm, from an\nk\u22121\nactive node in \u222ai=0\nNi . Thus, these nodes have to wait at\nmost log2 (n) \u2212 1 successful transmissions before starting\nto receive the file, since the depth of any binary tree is at\n\n\f7\n\nmost log2 (n). Therefore, they can receive the file before time\nkc0 log2 (n)LF\n\u221a . Hence, by induction, the file dissemination\ntime is O( n1\u2212\u01eb\u2032 log2.5 (n)F ) as the diameter of the socialgraph is O(log(n)).\n\nsince the probability that a node is close is smaller than\n\u2032\n1/2W d\u03032 n4\u01eb and the second term comes from the probability\n\u2032\nthat |Ni | \u2265 2W d \u03032 n4\u01eb / log(n). Therefore, we have\n\"\n#\nX\nE\n(13)\nXi \u2264 2c1 (1 \u2212 21\u2212\u03b2 )n/ log(n)\ni\u2208M\n\nB. Proof of Theorem 8\nWe proceed by first providing some definitions and a lemma.\nGiven a transmission pair with rate r over an Euclidean\ndistance \u03c1 on the wireless-square, define the bit-meter rate\nof the transmission pair as r\u03c1. The total bit-meter product a\nnetwork can transmit is the supremum of the sum of bit-meter\nproducts of all transmission pairs.\nLemma 15: The total bit-meter product the network can\ntransmit in a time slot is \u0398(n).\nProof. From (1), we know the bit-meter product a transmission pair (xi , xj ) can transmit is\n!\nP l(xi , xj )\nP\n||xi \u2212 xj || log 1 +\nN0 + k6=i P l(xk , xj )\n\u2264 P l(xi , xj )||xi \u2212 xj ||/N0 .\n\n(11)\n\nRecall that l(xi , xj )||xi \u2212 xj || is bounded by a constant either\nfor \u03b3 > 0 or \u03b3 = 0 and \u03b1 > 2. Since there are at most n/2\ntransmission pairs, the total bit-meter product the system can\ntransmit is \u0398(n) in a time slot.\nTo prove the lower bound, we place no restrictions on\ncomputation or communication overhead. Moreover, we make\n(overly) optimistic assumptions throughout in order to guarantee a bound. For instance, we assume nodes only download\nfrom their nearest social-network neighbors.\nProof. (Theorem 8) Define the transport load as the infimum\nof the total bit-meter product required to disseminate the\nfile under the problem setting. To apply Lemma 15, we just\nneed to show that the transport load is \u03a9(n3/2\u22122\u01eb\u2212\u03be F ) with\nprobability 1 \u2212 o(1).\nLet M be the set of nodes in the largest component with\nexpected degree in the range [K log(n) 2K log(n)]. Then,\nR 2K log(n)\nK log(n)\n\n|M| \u2248 R M\n\nx\u2212\u03b2 ndx\n\n\u2212\u03b2 dx\nK log(n) x\n\n= (1 + o(1))(1 \u2212 21\u2212\u03b2 )n. (12)\n\nsince almost all nodes are in the largest component.\nFix any \u01eb\u2032 > \u01eb. Let Ni be the set of nodes that node i can\nreach in 4\u01eb logd\u0303 (n)+ 2 hops in the social-graph. Let Xi be the\nindicator that the Euclidean distance\nq from node i to Ni on the\nwireless-square is smaller than n/2\u03c0W d\u03032 n4\u01eb\u2032 . Therefore,\nwe have, for i \u2208 M and n large enough and some constant\nc1 ,\nP(Xi = 1) \u2264\n\u2264\n\n\u2032\nP({Xi = 1} \u2229 {|Ni | \u2264 2W d \u03032 n4\u01eb / log(n)})\n\u2032\n+P(|Ni | > 2W d \u03032 n4\u01eb / log(n))\n\n1/ log(n) + O(1/ log(n)) \u2264 c1 / log(n)\n\nP\nP\n\u2265\nWe claim that P(| i\u2208M Xi \u2212 E[ i\u2208M Xi ]|\nn/ log1/3 (n)) = o(1). Indeed, by Chebyshev's inequality, we\nhave\n\"\n#\n!\nX\nX\nP\nXi \u2212 E\nXi \u2265 n/ log1/3 (n)\ni\u2208M\n\n\u2264\n\ni\u2208M\n\nP\nE[( i\u2208M Xi )2 ]\n\nn2 / log2/3 (n)\nc1 n2 / log(n)\n\u2264\n= o(1)\nn2 / log2/3 (n)\n\n(14)\n\nwhere the last inequality follows from E[Xi Xj ] \u2264 E[Xi ].\nBy the above claims, |M| = \u0398(n) while the number of\nnodes with geographically close neighbors in the wirelesssquare is o(n). Hence, the transport load is \u03a9(n3/2\u22122\u01eb\u2212\u03be F ).\nVI. C ONCLUSIONS\nNew technology (smartphones, etc.) has made content creation easy \u2013 just a press of a button. Social networks, meanwhile, make wide dissemination of the knowledge of that file,\njust as easy \u2013 a press of another button. Yet actual dissemination of large files to many users can seriously burden a\nwireless network. In the WAN setting, the time to disseminate\nmust scale linearly in the number of users. In this paper, we\nconsider simple, low-overhead file dissemination algorithm\nthat exploits peer-to-peer capabilities of many smartphones\nand similar devices, and, critically, exploits the very social\nnetworks that spread knowledge of the file. We give a loadbalancing algorithm that uses the social network to schedule\ntransmissions so that spatial-capacity of the ad hoc network is\nexploited without creating congestion\n\u221a or hot spots. We show\nthat dissemination time scales like n - significantly slower\nthan the linear time for WAN. Then, we show that if nodes\nhave knowledge of geographic position, this can be exploited\nto further decrease file dissemination time. Finally, we show in\nboth cases that our algorithm performs close to an algorithmindependent lower bound.\nVII. A PPENDIX A\nA. Proof for Lemma 12\nWe first quote lemma 3.2 from [4]. This useful lemma\naddresses how a neighborhood of a set in the random power\nlaw graph grows. Specifically, if we have two sets S and T ,\nwhat is the sum of weights of neighbors of S which are also in\nT ? One important application is the setting where T \u2248 G, i.e.,\nT is almost the entire graph. In this case, we get an increase\n \u0303\nfactor of roughly d.\n\n\f8\n\nLemma 16: ([4]) Given a random graph and two subsets S\nand T , if\n2c vol3 (T )\nvol(S)\n,\n(15)\n\u2264\n2\n2\n\u03b4 vol2 (T )\nvol(G)\nvol2 (T )\nvol(S)\n\u2264\u03b4\n,\nvol(G)\nvol3 (T )\n\n(16)\n\nwe have\nvol(\u0393(S) \u2229 T ) \u2265 (1 \u2212 2\u03b4)\n\nvol2 (T )\nvol(S)\nvol(G)\n\n(17)\n\nwith probability 1 \u2212 e\u2212c where \u0393(S) is the set of one-hop\nneighbors of S.\nUsing this lemma, we provide a proof to Lemma 12, which\nwe used to lower bound the size of a node's immediate\nneighborhood.\nProof. (Lemma 12) Consider node x's neighborhood. Let\nSi be the set of nodes whose distance to x is i and S0 =\n \u0303\n{x}. We will show that vol(Si+1 ) \u2265 (1 \u2212 2\u03b4)dvol(S\ni ) for\n\u22122\n\u03b4 = 1/4 with probability 1 \u2212 o(n ). To do this we need to\napply Lemma 16 inductively and choose c = 3 log(n). We\nmay assume vol(Si ) < n2\u01eb in the first \u01eb logd\u0303 (n) steps. Since\nvol2 (T )\nvol3 (T ) vol(G) = \u03a9(n/M ) for all T , (16) holds for all \u03b2 > 3.\nWe have only to verify (15).\nFirst notice that vol(S1 ) = \u03a9(log2 (n)) with probability 1 \u2212\no(n\u22121 ). This is true since, by Lemma 11, the node x has at\nleast K log(n)/2 neighbors with probability 1 \u2212 o(n\u22121 ) and\neach neighbor has weight at least K log(n).\nWe next verify (15) for \u03b2 > 4. Let Ti be the set of all\npotential nodes whose distance to x is i + 1, i.e., Ti = G \\\n\u222aik=0 Sk . Then, vol2 (Ti ) = (1 + o(1))vol2 (G) and vol3 (Ti ) =\n(Ti )vol(G)\n(1+o(1))vol3 (G). Thus, vol3vol\n= \u0398(1). Therefore, we\n2 (T )\ni\n2\nhave the result by induction.\n(k)\nFor the case 3 < \u03b2 \u2264 4, let Ti be the intersection of Ti\nand the set of nodes with weight smaller than k log(n). Then,\nwe have\n(k)\n2c vol3 (Ti )\nvol(G) = O(log(n))\n(18)\n\u03b4 2 vol22 (T (k) )\ni\n\nand\nR k log(n) 2\u2212\u03b2\n(k)\nx\ndx\nvol2 (Ti )\nK log(n)\n\u2248 RM\nvol2 (G)\nx2\u2212\u03b2 dx\nK log(n)\n\nk 3\u2212\u03b2\n)\n).\n(19)\nK\nTherefore, by (18), we have (16) is true by induction. On\n(k)\nthe other hand, vol2 (Ti )/vol(G) \u2248 d \u0303 as k becomes large\nenough, by (19).\nWith the above results, we can conclude that the size of\n \u0303 with\nthe neighborhood grows by roughly a factor of d/2\n\u22122\nprobability 1 \u2212 o(n ) for each step, from the second one to\nthe \u01eb logd\u0303 (n)th step. Since vol(S\u01eb logd\u0303 (n)\u22121 ) \u2265 2\u03c3n\u01eb(1\u2212o(1))\n\u2032\nfor some constant \u03c3, there are at least \u03c3n\u01eb nodes within\ndistance \u01eb logd\u0303 (n) of x in the social network.\n= (1 + o(1))(1 \u2212 (\n\nB. Proof for Lemma 13\nThe proof of Lemma 13 depends on the following lemma\nfrom [5], that provides large deviation results for both an upper\nbound and a lower bound for the sum of Bernoulli random\nvariables.\nLemma 17: ([5]) Let Xi be a Bernoulli random variable\nwith\n{Xi } are independent. Let X =\nPn parameter pi . Suppose\nPn\n2\na\nX\nand\n\u03bd\n=\na\npi . Then, we have\ni\ni\ni\ni=1\ni=1\nP(X \u2264 E[X] \u2212 c) \u2264 exp(\u2212c2 /2\u03bd)\n2\n\nP(X \u2265 E[X] + c) \u2264 exp(\u2212c /2(\u03bd + ac/3))\n\n(20)\n(21)\n\nwhere a = max{a1 , a2 , . . . , an }.\nProof. (Lemma 13) We first state the flow of the proof. In the\nbeginning, we show that we only need to consider an initial\nnode x with weight W . We next define Si as the set of nodes\nat distance i from node x and show that, for any \u03b4 > 0,\n \u0303 i.\nvol(Si ) \u2264 W ((1 + \u03b4)d)\n\n(22)\n\n \u0303\nWe in fact show vol(Si+1 ) \u2264 (1 + \u03b4)dvol(S\ni ) with probability\n\u22122\n1 \u2212 O(log (n)). To do so, we construct a set T i which\ncontains nodes with large weight and show T i \u2229 Si+1 = \u2205\nwith overwhelming probability. On the other hand, we use\nLemma 17 to bound the sum of weights in Si+1 contributed\nby nodes with small weight. To do this, we have to consider\nthree cases depending on \u03b2.\nWe now present the details of the proof. We first show the\ncondition, vol(S0 ) \u2264 W . Since S0 = {x}, we need to show\nthe weight of x does not exceed W if x is picked randomly.\nZ M\n1 + o(1)\n(log2 (n))1\u2212\u03b2\nx\u2212\u03b2 dx/C1 =\nC1 (\u03b2 \u2212 1)\nlog2 (n)\n\no(log\u22122 (n)),\n(23)\nR M \u2212\u03b2\nwhere C1 is the normalization constant m x dx. Thus, a\nrandomly picked node x has weight smaller than W with high\nprobability. Since by standard coupling arguments we see that\nthe growth of the neighborhood of x is dominated by a node\nwith weight W , we simply take the weight of x to be W in\nwhat follows.\n \u0303\nWe turn to show vol(Si+1 ) \u2264 (1 + \u03b4)dvol(S\ni ) with prob\u22122\nability 1 \u2212 O(log (n)). First, we give some definitions. Let\nm\u0303i = (vol(Si ) log\u03b2 (n))1/(\u03b2\u22122) and define T i to be the set\nof nodes with weight greater than m\u0303i . We first show that\nT i \u2229 Si+1 = \u2205 with probability 1 \u2212 O(log\u22122 (n)). Indeed,\n=\n\nP(Si+1 \u2229 T i 6= \u2205) \u2264\n\u2248\n=\n\nvol(Si )vol(T i )/vol(G)\nZ M\nx1\u2212\u03b2 ndx/C1 vol(G)\nvol(Si )\nm\u0303i\n\nO(log\u22122 (n)),\n\n(24)\n\nwhere the first inequality follows from the union bound.\nTherefore, with high probability, Si+1 \u2229 T i = \u2205.\nDefine T\u0303i to be the set of unexplored nodes with weight\nsmaller than m\u0303 in the i-th step, i.e., T\u0303i = V \\ (T i \u222a \u222aij=0 Sj ).\nThus, Si+1 is a subset of T\u0303i . For simplicity, we consider a\n\n\f9\n\nlarger set Ti which includes T\u0303i and virtual nodes \u1e7ci where \u1e7ci\nis chosen such that the number of nodes and their weights are\nthe same as those in \u222aij=0 Sj . We allow nodes in Si to connect\nto nodes in \u1e7ci and, therefore, have a looser upperbound on\nvol(Si+1 ). We first give some properties of Ti . Specifically,\nwe claim vol(Ti ) = (1 + o(1))vol(G) and vol2 (Ti ) = (1 +\no(1))vol2 (G). Indeed,\nvol(Ti )\n\n= vol(G) \u2212 vol(T i )\nZ M\n\u2265 vol(G) \u2212\n\nlog\u03b2/(\u03b2\u22122) (n)\n\u22121\n\n= vol(G) \u2212 O(n log\n\nx1\u2212\u03b2 ndx/C1\n\n(n))\n\n= (1 + o(1))vol(G),\n\n(25)\n\nwhere the inequality follows from vol(Si ) will increase by\n \u0303 in each step as shown in Lemma 12.\na factor at least d/2\nSimilarly, we have vol2 (Ti ) = (1 + o(1))vol2 (G).\nNext, we give some properties of Si+1 . Our goal is to\nfind the expected weight of Si+1 , E[Yi ], and the variable \u03bdi\n(defined below) to apply Lemma 17. To do this, define Xj as\nthe indicator function that node j is in Si+1 . Thus, by union\nbound and a fact (in the proof of Lemma 3.2 in [4]), we have\nvol(Si )wj /vol(G) \u2212 (vol(Si )wj /vol(G))2\n\u2264 P(Xj = 1) \u2264 vol(Si )wj /vol(G).\n(26)\nP\nLet Yi be the volume of Si+1 , i.e., Yi = j\u2208Ti wj Xj . Thus,\nwe have\nE[Yi ] = (1 + o(1))vol(Si )vol2 (Ti )/vol(G).\nP\nSimilarly, define \u03bdi = j\u2208Ti wj2 P(Xj = 1). We have\n\u03bdi = (1 + o(1))vol(Si )vol3 (Ti )/vol(G).\n\n(27)\n\n(28)\n\nUsing the properties of Ti and Si+1 , we now show the\n \u0303\ninductive step, namely: vol(Si+1 ) \u2264 (1 + \u03b4)dvol(S\ni ) with\nprobability 1 \u2212 o(log\u22122 (n)). Recalling Lemma 17, we have\n\u0013\n\u0012\n\u03ba2i\n.\n(29)\nP(Yi > E[Yi ] + \u03bai ) \u2264 exp \u2212\n2(\u03bdi + m\u0303i \u03bai /3)\nWe need to consider three cases which are 3 < \u03b2 < 4, \u03b2 =\n4, and \u03b2 > 4. In each case, we first estimate \u03bdi and then\n\u221a\ncompare cm\u0303i and c\u03bdi . According to the above comparison,\nwe specify \u03bai for each case and conclude our desired result.\nLet c = 10 log log(n) and consider the three cases.\nCase 1 (3 < \u03b2 < 4): First note that\nZ m\u0303i\nx3\u2212\u03b2 ndx/C1 vol(G)\n\u03bdi \u2248 vol(Si )\n\nNote that by (27), we need only to show that \u03bai \u2264\n\u03b4vol(Si )vol2 (Ti )/vol(G). This suffices to show\n\u0012\n\u0013\u03b2\u22122/\u03b2\u22123\ncvol(G)\nvol(Si ) \u2265\nlog\u03b2/\u03b2\u22123 (n).\n(32)\n\u03b4vol2 (Ti )\nBut this is true since the initial weight is greater than\n \u0303 in\nlog\u03b2/\u03b2\u22123 (n) and it increases by a factor of at least d/2\neach step.\nCase 2 (\u03b2 = 4): We have \u03bdi = O(vol(Si ) log(m\u0303i ) log2 (n))\n\u221a\nand cm\u0303i \u226b c\u03bdi . Hence, with similar computation as that\ndescribed in Case 1, we have the desired result.\nCase 3 (\u03b2 > 4): We have \u03bdi = \u0398(vol(Si ) log2 (n)). By\n\u221a\ndirect computation, we have c\u03bdi \u226b cm\u0303i provided the\ninitial weight is greater than log5/\u03b2\u22124 (n). Hence, we choose\n\u221a\n\u03bai =\nc\u03bdi . Similarly, we just need to show that \u03bai \u2264\n\u03b4vol(Si )vol2 (Ti )/vol(G). This is true since, by (28),\nvol(Si ) \u2265\n\ncvol3 (Ti )vol(G)\n= \u0398(log log(n)).\n\u03b4 2 vol2 (Ti )2\n\nNote that the probability of failure in each step is\nO(log\u22122 (n)) and there are at most \u01eb logd\u0303 (n) + \u03bb steps. Thus,\nthe sum of weights of nodes in \u01eb logd\u0303 (n) + \u03bb-neighborhood\nof x is at most 2W d \u0303\u03bb n\u01eb(1+o(1)) . We conclude that the desired\nresult holds with probability 1 \u2212 O(log\u22121 (n)) as each node\nhas weight at least log(n).\nVIII. A PPENDIX B\nA. Proofs of lemmas in Section IV\nIn this section, we first show Lemma 9, Lemma 10, and\nLemma 11. The proofs of these lemmas use techniques for\nballs and bins problems. To solve a problem like these, in\ngeneral, we first find a proper target function and write the\ntarget function as a sum of indicator functions. We next use\na large deviation result, e.g. Lemma 17, to show the target\nfunction is concentrated around its mean. The proofs of the\nthree lemmas do follow the above procedure and are shown\nbelow.\nProof. (Lemma 9) Let Xi be the indicator function that\nthe distance\nbetween the first node\nnode i is smaller\np\nPand\nk+1\nthan\n64n log(n)/\u03c0k. Let Y =\nX\ni , i.e., Y is the\ni=2\nnumber\nof\nnodes\nwith\ndistance\nto\nthe\nfirst\nnode\nsmaller than\np\n64n log(n)/\u03c0k. To show this lemma, we first find out the\nmean of Y and show Y is around E[Y ] with overwhelming\nprobability. Indeed,\nE[Y ] =\n\nm\n\n= O(vol(Si )m\u03034\u2212\u03b2\nlog\u03b2\u22122 (n)).\n(30)\ni\n\u221a\nTherefore, cm\u0303i \u226b\nc\u03bdi for n sufficiently large. Hence,\nchoosing \u03bai = cm\u0303i , we have\n\u0012\n\u0013\n\u03ba2i\nP(Yi > E[Yi ] + \u03bai ) \u2264 exp \u2212\n= o(log\u22122 (n)). (31)\n4m\u0303i \u03bai\n\n(33)\n\n=\n\nk+1\nX\n\ni=2\nk+1\nX\n\nE[Xi ]\nP(Xi = 1)\n\ni=2\n\n\u2265\n\n16 log(n)\n\n(34)\n\nwhere the last inequality follows if the first node is located at\na corner of the square.\n\n\f10\n\nTo apply Lemma 17, we choose c = E[Y ]/2 and observe\n\u03bd = E[Y ], and get\n2\n\nP(Y \u2264 E[Y ]/2) \u2264 exp(\u2212(E[Y ]/2) /2E[Y ]) \u2264 n\n\n\u22122\n\n(35)\n\nThe above equation (35) implies at least 8 log(n) nodes close\nto the first node with probability 1 \u2212 n\u22122 and we have the\nlemma.\nSimilar to the above proof, we show the rest of two lemmas.\nProof. (Lemma 10) We may assume A \u2265 10 log(n). Let Yi\nbe theP\nindicator function that node i falls in that rectangle. Let\nn\nX = i=1 Yi , i.e., X is the number of nodes falling in the\nrectangle. To show this lemma, we first find out the mean of X\nand show X is around E[X] with overwhelming probability.\nIndeed,\nE[X] =\n=\n\nn\nX\n\ni=1\nn\nX\n\nE[Yi ]\nP(Yi = 1)\n\ni=1\n\n\u2265 10 log(n).\n\n(36)\n\nTo apply Lemma 17, we choose c = E[X] and observe\n\u03bd = E[X], and get\nP(X \u2265 2E[X]) \u2264 exp(\u2212(E[X])2 /8E[X]/3) \u2264 n\u22122\n\n(37)\n\nThe above equation (37) implies at most 2A nodes falling\nin the rectangle with probability 1 \u2212 n\u22122 and we have the\nlemma.\nProof. (Lemma 11)PLet Yj be the indicator function that\n(i, j) \u2208 E. Let X = j6=i Yj , i.e., X is the number of onehop neighbors of node i. To show this lemma, we first find out\nthe mean of X and show X is around E[X] with overwhelming\nprobability. Indeed,\nX\nE[X] =\nE[Yj ]\nj6=i\n\n=\n\n(1 + o(1))wi .\n\n(38)\n\nTo apply Lemma 17, we choose c1 = E[X] for upper bound\nand c2 = E[X]/2 for lower bound. Observe \u03bd = E[X], and\nget\nP(X \u2265 2E[X]) \u2264 exp(\u2212(E[X])2 /8E[X]/3) \u2264 o(n\u22121 ) (39)\nP(X \u2264 E[X]/2) \u2264 exp(\u2212(E[X]/2)2 /2E[X]) \u2264 o(n\u22121 )\n(40)\nOne may observe o(1) term does not affect the results.\nTherefore, with above equations (39) and (40), we have the\nlemma.\n\nB. Proofs of Theorem 4 and Theorem 5\nIn this section, we present our proofs for Theorem 4 and\nTheorem 5, the performance of our algorithm and the lower\nbound on the file dissemination time of any possible algorithm.\nWe consider a random power law graph with \u03b2 > 2 and nodes\nare only allowed to download the file from nodes at most two\nhops away. In Theorem 4, we set the input of Algorithm 1\nas \u01eb = 0 and L = \u221e. Thus, nodes always request to onehop neighbors on the social-graph. We show that our loadbalancing scheme, exploiting the property social networks\nhave small diameters,\nguarantees the file dissemination time\n\u221a\nscales like n. In the proof of Theorem 5, we adopt an\napproach similar to that in Theorem 8 in which we find a lower\nbound on the transport load. We show that the performance\nof our algorithm only differs from the best possible file\ndissemination time by a factor of n\u03be for any \u03be > 0. Our\nproofs are presented in the follows.\nProof. (Theorem\n4) We first claim that each transmission has\n\u221a\na rate \u03a9(1/ n). To show this, consider a horizontal highway\nnode and its corresponding stripe. Note that these n nodes are\nplaced uniformly\u221aand independently on the square. By Lemma\n10, there are O( n) nodes in this stripe with high probability.\nOn the other hand, each node only generates at most 6 flows.\nTherefore, each flow\n\u221a through the horizontal highway node can\nhave a rate of \u03a9(1/ n). A similar argument applies to vertical\nhighway nodes. As this is true for all highway nodes with\nhigh probability, we have the claim. In addition, there exists\n\u221a a\nconstant c1 such that each node can receive the file in c1 nF\ntime slots since the transmission starts.\nSimilar to the proof in Theorem 7, we show the theorem\nby induction on k: the distance from a node to the source\non the social-graph. Our claim is nodes\n\u221a at distance k to the\nsource can receive the file in c1 k n log2 (n)F time slots.\nIt is clear that the base case is true for k = 1. Suppose\nthis is true for k \u2212 1 and consider nodes at distance k to\nthe source.\n\u221a Since each such node is not inactive at time\nc1 (k \u2212 1) n log2 (n)F , the node must be in a binary true\nwith an active node as the root. Therefore, this node has to\nwait at most log2 (n) \u2212 1 transmissions before getting\nserved.\n\u221a\nThus, the node can receive the file at time c1 k n log2 (n)F .\nHence, by mathematical induction, we have the claim. Note\nthat the diameter of the\n\u221a social graph is O(log(n)). All nodes\ncan get the file in O( n log2 (n)F ) time slots.\nProof. (Theorem 5) To apply Lemma 15, we just need to\nshow that the transport load is \u03a9(n3/2\u2212\u03be F ) for any \u03be > 0\nwith probability 1 \u2212 o(1). The idea is to show there are \u0398(n)\nnodes in the largest component which only have small-sized 2neighborhoods. Thus, these nodes must download the file from\nnodes which are geographically far away from them on the\nwireless-square. We first state the flow of the proof. In the first\nstep, we claim we only need to consider a random power law\ngraph with minimum expected degree m = K log(n) for some\nK \u2265 10. More precisely, only consider nodes with weight in\nthe region [K log(n) 2K log(n)] in such graphs. We next show\n\n\f11\n\nthat only a vanishing fraction of the number of them can find\ngeographic proximate one-hop or two-hop neighbors. In the\nend, we show that \u0398(n) of them are indeed in the largest\ncomponent and thus, have the theorem.\nWe first show that we may assume that the minimum\nexpected degree m = K log(n) for some constant K \u2265 10.\nTo do this, consider the original minimum expected degree\nm\u0302 < 10 log(n) and the original expected degree sequence\n\u0175 = (\u01751 , . . . , \u0175n ). Let w be the expected degree sequence\nfor m = K log(n) for some K \u2265 10. Observe that (3) is an\n \u0304 We have \u0175 is smaller than\nincreasing function in terms of d.\nw term by term. Thus, by coupling, the random power law\ngraph generated by w contains the original random power law\ngraph stochastically.\nNext, we show that nodes with weight in that region\nhave a small-sized 2-neighborhood with high probability. This\nproperty is important as small-sized neighborhood implies\nit is hard to find geographic proximate neighbors. Consider\n2\u03be > \u03b7 > 0. Let Ni be the set of nodes that node i can\nreach in 2 hops in the social-graph. We claim P(|Ni | \u2264\n10Kn\u03b7 log(n)) = 1 \u2212 o(1/ log(n)). Indeed, by Lemma 11,\nnode i has at most 4K log(n) neighbors on the social-graph\nwith probability 1 \u2212 o(n\u22121 ). Further, the probability that one\nof its neighbors is of weight greater than n\u03b7 is smaller than\nRM\n2K log(n) n\u03b7 x1\u2212\u03b2 ndx\n= o(1/ log(n)).\n(41)\nRM\nvol(G) K log(n) x\u2212\u03b2 dx\nThus, the sum of weights of its neighbors is smaller than\n4Kn\u03b7 log(n) with probability 1 \u2212 o(1/ log(n)). Hence, by\nLemma 11 again, we have the claim.\nLet M be the set of nodes with expected degree in the range\n[K log(n) 2K log(n)]. Then,\nR 2K log(n) \u2212\u03b2\nndx\nK log(n) x\n= (1 + o(1))(1 \u2212 21\u2212\u03b2 )n (42)\n|M| \u2248 R M\n\u2212\u03b2 dx\nx\nK log(n)\n\nWe next claim only o(n) nodes in M have geographic\nproximate neighbors (theqdistance between the neighbors and\n\nthe node is smaller than n/10K\u03c0n\u03b7 log2 (n)). This property\nalong with (41) implies almost all nodes in M do not have\ngeographic proximate neighbors. We show this property in the\nfollows. We first find out the expected number of nodes in M\nwhich have geographic proximate neighbors. Let Xi be the indicator function that the Euclidean distance\nq from node i to Ni\non the wireless-square is smaller than n/10K\u03c0n\u03b7 log2 (n).\nTherefore, we have, for i \u2208 M and n large enough\nP(Xi = 1) \u2264 1/ log(n) + o(1/ log(n)) \u2264 2/ log(n)\n\n(43)\n\nsince the first term is the probability that |Ni | \u2264 10Kn\u03b7 log(n)\nand Xi = 1, and the second term is the probability that |Ni | >\n10Kn\u03b7 log(n). Therefore, we have\n\"\n#\nX\nE\n(44)\nXi \u2264 2(1 \u2212 21\u2212\u03b2 )n/ log(n)\ni\u2208M\n\nNext,\na concentration result. We claim that\nP we show P\nP(| i\u2208M Xi \u2212 E[ i\u2208M Xi ]| \u2265 n/ log1/3 (n)) = o(1).\nIndeed, by Chebyshev's inequality, we have\n#\n\"\n!\nX\nX\nP\nXi \u2212 E\nXi \u2265 n/ log1/3 (n)\ni\u2208M\n\n\u2264\n\ni\u2208M\n\nP\nE[( i\u2208M Xi )2 ]\n\nn2 / log2/3 (n)\n2n2 / log(n)\n\u2264\n= o(1)\nn2 / log2/3 (n)\n\n(45)\n\nwhere the last inequality follows from E[Xi Xj ] \u2264 E[Xi ].\nAt the end, let S be the set of nodes in the largest\ncomponent. Since almost all nodes are in the largest\ncomponent, we have |S \u2229 M| = \u0398(n). Hence, the result\nfollows by the above fact only o(n) nodes in M have\ngeographic proximate one-hop or two-hop neighbors.\nR EFERENCES\n[1] P. Gupta and P. R. Kumar, \"The capacity of wireless networks,\" IEEE\nTransaction on Information Theory, Vol. 46, No. 2, pp. 388-404, 2000.\n[2] M. Franceschetti, O. Dousse, D. Tse, P. Thiran, \"Closing the Gap\nin the Capacity of Wireless Networks Via Percolation Theory,\" IEEE\nTransaction on Information Theory, Vol. 53, No. 3, pp. 1009-1018, 2007\n[3] S. R. Kulkarni and P. Viswanath, \"A deterministic approach to throughput scaling in wireless networks,\" IEEE Trans. on Information Theory,\nVol. 52, No. 6, pp. 1041-1049, 2004.\n[4] F. Chung and L. Lu, \"The average distances in random graphs with\ngiven expected degrees,\" Internet Mathematics, Vol. 1, No. 1, pp. 91114, 2002.\n[5] F. Chung and L. Lu, \"Connected components in random graphs with\ngiven expected degree sequences,\" Annals of Combinatorics, Vol. 6, pp.\n125-145, 2002.\n[6] S. Milgram, \"The small world problem,\" Psychology Today, Vol 1, No.\n1, pp. 60 V 67, 1967.\n[7] R. Albert, H. Jeong, and A. Barab\u00e1si, \"Diameter of the world wide web,\nNature, pp. 130-131, 1999.\n[8] M. Faloutsos, P. Faloutsos, and C. Faloutsos, \"On power-law relationships of the Internet topology,\" ACM SIG-COMM, 1999.\n[9] A. L. Barab\u00e1si, H. Jeong, Z. N\u00e9da, E. Ravasz, A. Schubert, and T.\nVicsek, \"Evolution of the social network of scientific collaborations,\"\nPhysica A, Vol. 311, pp. 590-614, 2002.\n[10] J. Grossman, P. Ion, and R. De Castro, \"Facts about Erd\u00f6s\nnumbers and the collaboration graph,\" available from the WWW:\n(http://www.oakland.edu/enp/trivia/), 2003.\n[11] X.-Y. Li, S.-J. Tang, and F. Ophir, \"Multicast capacity for large scale\nwireless ad hoc networks,\" ACM MobiCom 2007.\n[12] S. Li, Y. Liu, and X. -Y. Li, \"Capacity of large scale wireless networks\nunder gaussian channel model,\" ACM MobiCom 2008.\n[13] S. Shakkottai, X. Liu, and R. Srikant, \"The multicast capacity of ad hoc\nnetworks,\" ACM MobiHoc 2007.\n[14] L. Tassiulas and A. Ephremides, \"Stability properties of constrained\nqueueing systems and scheduling for maximum throughput in multihop\nradio networks,\" IEEE Trans. on Auto. Control, Vol. 37, no. 12, pp.\n1936-1949, 1992.\n[15] P. Gupta and P. R. Kumar, \"A system and traffic dependent adaptive\nrouting algorithm for ad hoc networks,\" Proc. IEEE 36th Conference on\nDecision and Control, 1997.\n[16] S. Subramanian, S. Shakkottai, and P. Gupta, \"On optimal geographic\nrouting in wireless networks with holes and non-uniform traffic,\" Proc.\nIEEE INFOCOM 2007.\n[17] S. Subramanian, S. Shakkottai, and P. Gupta, \"Optimal Geographic\nrouting for wireless networks with near-arbitrary holes and traffic,\" Proc.\nIEEE INFOCOM 2008.\n[18] A. Frieze and G. Grimmett, \"The shortest path problem for graphs with\nrandom arc lengths,\" Discrete Applied Mathematics, pp. 577, 1985.\n\n\f12\n\n[19] B. Pittel, \"On spreading a rumor,\" SIAM Journal of Applied Mathematics, Vol. 47, No. 1, pp. 213-223, 1987.\n[20] R. Karp, C. Schindelhauer, S. Shenker, and B. V\u00f6cking, \"Randomized\nrumor spreading,\" Proceedings of the 41st Annual IEEE Symposium on\nFoundations of Computer Science, 2000, pp. 565-574.\n[21] S. Sanghavi, B. Hajek, and L. Massouli\u00e9, \"Gossiping with Multiple\nMessages,\" IEEE Trans on Information Theory, Vol. 53, No. 12, pp 46404654, 2007\n[22] S. Deb and M. M\u00e9dard, \"Algebraic gossip: A network coding approach\nto optimal multiple rumor mongering,\" Proceedings of the 42nd Annual\nAllerton Conference on Communication, Control, and Computing, 2004.\n[23] D. Kempe, J. Kleinberg, and \u00c9 Tardos, \"Maximizing the spread of\ninfluence through a social network,\" ACM KDD, 2003.\n[24] A. Ganesh, L. Massouli\u00e9, and D. Towsley, \"The effect of network\ntopology on the spread of epidemics,\" IEEE INFOCOM, 2005.\n[25] S. Ioannidis, A. Chaintreau, and L. Massouli\u00e9, \"Optimal and Scalable\nDistribution of Content Updates over a Mobile Social Network,\" IEEE\nINFOCOM, 2009.\n\n\f"}