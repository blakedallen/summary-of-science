{"id": "http://arxiv.org/abs/1006.0418v4", "guidislink": true, "updated": "2011-06-08T13:21:04Z", "updated_parsed": [2011, 6, 8, 13, 21, 4, 2, 159, 0], "published": "2010-06-02T15:37:22Z", "published_parsed": [2010, 6, 2, 15, 37, 22, 2, 153, 0], "title": "Communities and beyond: mesoscopic analysis of a large social network\n  with complementary methods", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1006.5861%2C1006.1996%2C1006.2117%2C1006.5366%2C1006.3842%2C1006.3751%2C1006.0418%2C1006.1458%2C1006.0405%2C1006.3878%2C1006.4519%2C1006.0290%2C1006.5322%2C1006.5920%2C1006.2601%2C1006.2642%2C1006.3823%2C1006.3644%2C1006.2226%2C1006.1670%2C1006.4372%2C1006.5842%2C1006.3998%2C1006.4218%2C1006.4856%2C1006.4386%2C1006.4693%2C1006.2978%2C1006.1448%2C1006.0574%2C1006.3216%2C1006.4652%2C1006.2320%2C1006.1763%2C1006.3466%2C1006.1871%2C1006.0083%2C1006.1471%2C1006.4790%2C1006.5820%2C1006.4074%2C1006.1364%2C1006.5327%2C1006.1140%2C1006.5921%2C1006.5836%2C1006.3396%2C1006.1880%2C1006.5684%2C1006.5120%2C1006.5754%2C1006.4745%2C1006.0305%2C1006.5773%2C1006.4274%2C1006.0393%2C1006.1113%2C1006.0214%2C1006.0504%2C1006.1749%2C1006.4105%2C1006.5653%2C1006.4496%2C1006.1645%2C1006.1512%2C1006.3653%2C1006.1625%2C1006.0997%2C1006.4079%2C1006.2099%2C1006.5930%2C1006.2554%2C1006.1843%2C1006.4483%2C1006.3749%2C1006.3910%2C1006.1073%2C1006.3850%2C1006.4771%2C1006.3428%2C1006.2854%2C1006.5760%2C1006.2054%2C1006.5730%2C1006.3536%2C1006.3665%2C1006.0246%2C1006.0563%2C1006.1171%2C1006.4474%2C1006.3930%2C1006.2684%2C1006.3033%2C1006.4103%2C1006.2413%2C1006.5426%2C1006.2980%2C1006.3752%2C1006.2759%2C1006.3872%2C1006.3204&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Communities and beyond: mesoscopic analysis of a large social network\n  with complementary methods"}, "summary": "Community detection methods have so far been tested mostly on small empirical\nnetworks and on synthetic benchmarks. Much less is known about their\nperformance on large real-world networks, which nonetheless are a significant\ntarget for application. We analyze the performance of three state-of-the-art\ncommunity detection methods by using them to identify communities in a large\nsocial network constructed from mobile phone call records. We find that all\nmethods detect communities that are meaningful in some respects but fall short\nin others, and that there often is a hierarchical relationship between\ncommunities detected by different methods. Our results suggest that community\ndetection methods could be useful in studying the general mesoscale structure\nof networks, as opposed to only trying to identify dense structures.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1006.5861%2C1006.1996%2C1006.2117%2C1006.5366%2C1006.3842%2C1006.3751%2C1006.0418%2C1006.1458%2C1006.0405%2C1006.3878%2C1006.4519%2C1006.0290%2C1006.5322%2C1006.5920%2C1006.2601%2C1006.2642%2C1006.3823%2C1006.3644%2C1006.2226%2C1006.1670%2C1006.4372%2C1006.5842%2C1006.3998%2C1006.4218%2C1006.4856%2C1006.4386%2C1006.4693%2C1006.2978%2C1006.1448%2C1006.0574%2C1006.3216%2C1006.4652%2C1006.2320%2C1006.1763%2C1006.3466%2C1006.1871%2C1006.0083%2C1006.1471%2C1006.4790%2C1006.5820%2C1006.4074%2C1006.1364%2C1006.5327%2C1006.1140%2C1006.5921%2C1006.5836%2C1006.3396%2C1006.1880%2C1006.5684%2C1006.5120%2C1006.5754%2C1006.4745%2C1006.0305%2C1006.5773%2C1006.4274%2C1006.0393%2C1006.1113%2C1006.0214%2C1006.0504%2C1006.1749%2C1006.4105%2C1006.5653%2C1006.4496%2C1006.1645%2C1006.1512%2C1006.3653%2C1006.1625%2C1006.0997%2C1006.4079%2C1006.2099%2C1006.5930%2C1006.2554%2C1006.1843%2C1006.4483%2C1006.3749%2C1006.3910%2C1006.1073%2C1006.3850%2C1006.4771%2C1006.3428%2C1006.2854%2C1006.5760%2C1006.2054%2C1006.5730%2C1006.3536%2C1006.3665%2C1006.0246%2C1006.0563%2C1006.1171%2C1006.4474%2C1006.3930%2C1006.2684%2C1006.3033%2C1006.4103%2C1006.2413%2C1006.5426%2C1006.2980%2C1006.3752%2C1006.2759%2C1006.3872%2C1006.3204&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Community detection methods have so far been tested mostly on small empirical\nnetworks and on synthetic benchmarks. Much less is known about their\nperformance on large real-world networks, which nonetheless are a significant\ntarget for application. We analyze the performance of three state-of-the-art\ncommunity detection methods by using them to identify communities in a large\nsocial network constructed from mobile phone call records. We find that all\nmethods detect communities that are meaningful in some respects but fall short\nin others, and that there often is a hierarchical relationship between\ncommunities detected by different methods. Our results suggest that community\ndetection methods could be useful in studying the general mesoscale structure\nof networks, as opposed to only trying to identify dense structures."}, "authors": ["Gergely Tibely", "Lauri Kovanen", "Marton Karsai", "Kimmo Kaski", "Janos Kertesz", "Jari Saramaki"], "author_detail": {"name": "Jari Saramaki"}, "author": "Jari Saramaki", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1103/PhysRevE.83.056125", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/1006.0418v4", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1006.0418v4", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "11 pages, 10 figures. V2: typos corrected, one sentence added. V3:\n  revised version, Appendix added. V4: final published version", "arxiv_primary_category": {"term": "physics.soc-ph", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "physics.soc-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1006.0418v4", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1006.0418v4", "journal_reference": "Phys. Rev. E 83, 056125 (2011)", "doi": "10.1103/PhysRevE.83.056125", "fulltext": "Communities and beyond: mesoscopic analysis of a large social network with\ncomplementary methods\nGergely Tib\u00e9ly,1 Lauri Kovanen,2 M\u00e1rton Karsai,2 Kimmo Kaski,2 J\u00e1nos Kert\u00e9sz,1, 2 and Jari Saram\u00e4ki2\n\narXiv:1006.0418v4 [physics.soc-ph] 8 Jun 2011\n\n1\n\nInstitute of Physics and HAS-BME Cond. Mat. Group, BME, Budapest, Budafoki \u00fat 8., H-1111\n2\nBECS, Aalto University, P.O. Box 12200, FI-00076\n(Dated: November 4, 2018)\n\nCommunity detection methods have so far been tested mostly on small empirical networks and\non synthetic benchmarks. Much less is known about their performance on large real-world networks, which nonetheless are a significant target for application. We analyze the performance of\nthree state-of-the-art community detection methods by using them to identify communities in a\nlarge social network constructed from mobile phone call records. We find that all methods detect\ncommunities that are meaningful in some respects but fall short in others, and that there often is\na hierarchical relationship between communities detected by different methods. Our results suggest\nthat community detection methods could be useful in studying the general mesoscale structure of\nnetworks, as opposed to only trying to identify dense structures.\nPACS numbers: 89.75.Fb,89.75.Hc,89.75.-k,89.65.-s\nKeywords: community detection; complex networks; social networks; mobile phone\n\nI.\n\nINTRODUCTION\n\nLarge complex networks have different levels of organization. On the microscopic level networks are composed\nof pairwise interactions, but it is the macroscopic level\nthat has received most attention in recent years. We now\nknow that diverse networks exhibit similarities for example in degree distribution, average path length, and\nclustering coefficient. While the structure is interesting in\nits own, it also has a significant influence on the dynamic\nprocesses taking place on the network, such as spreading,\ndiffusion, and synchronization [1\u20133].\nThe intermediate mesoscopic scale has turned out be\nmore elusive to describe. It is this scale where we can\nidentify for example motifs [4, 5] and dense clusters of\nnodes commonly known as communities. Although communities are relevant for understanding the structure of\nand the dynamics on networks, even their exact definition is still a controversial issue. Thus it comes as no\nsurprise that the art of community detection has grown\ninto a swarming field of diverse methods [6]. Many features of real-world networks add to the complexity of the\ntask. Real networks are often hierarchical and hence small\ncommunities may reside inside larger ones, communities\nmay overlap if nodes participate in several communities,\nand even more complications arise if we take into account\nlink weights that represent interaction intensity.\nUntil recently, the performance of community detection methods has mainly been tested on small empirical networks with typically no more than 100 nodes,\nwhich allows the evaluation of quality by visual inspection. However, several networks of considerable interest\nare much larger, often with 106 nodes or more: data on\nWWW, mobile phone call records, electronic footprints of\ninstant messaging users, and networks of social web such\nas Facebook etc. Only few methods are efficient enough to\nhandle such networks [7\u201310]-to be successful, a community detection method must be computationally efficient\n\nin addition to being accurate.\nMore systematic comparisons have been recently carried out using synthetic benchmark networks with builtin community structure [11, 12]. While benchmarks are\nuseful in evaluating performance, even their authors acknowledge that they only represent the first step. No\nbenchmark fully incorporates the spectrum of properties\ncommonly observed in real-world networks. Some recent\nbenchmarks do allow heterogeneous distributions for degrees and community sizes, but many other properties are\nstill missing, such as high clustering, existence of cliques\n[13], overlapping communities [14], assortativity [15], and\nthe prevalence of motifs [16]. This distorts the evaluation\nof algorithms that depend on (or benefit from) the existence of these features. For example, clique percolation\nhas been successfully used on real-world networks [13, 17\u2013\n19] but does not perform well on synthetic benchmarks-\nmainly due to its strict requirement for communities to\nconsist of adjacent cliques [12].\nIn this paper we take three widely-applied methods,\neach based on a different underlying philosophy, and compare their performance on a large real-world social network constructed from mobile phone call records. Unlike\nwith benchmark networks, we do not know the \"correct\"\ncommunity structure of the network. Therefore, we introduce new measures that allow us to investigate the\ndifferences and similarities of the detected community\nstructures.\nThe paper is organized as follows. Section II describes\nthe choice of community detection methods and Section\nIII introduces the data set. Section IV presents the results\nof our analysis where we first analyse the properties and\nstatistics of individual community structures and then\nturn to a pairwise comparison to quantify the differences\nbetween communities. Finally in Section V we present\nconclusions.\n\n\f2\nII.\n\nCHOICE OF METHODS\n\nAs we intend to study a large network, the first selection criterion is only practical: methods with running\ntime O(N 2 ) or slower cannot be included. We use three\nmethods that not only fill this requirement but in addition have performed well in previous comparisons or in\npractice: the Louvain method (LV) [9], the Infomap (IM)\n[20] and the clique percolation (CP) [13].\nWe consider an undirected network G = (V, E), where\nV is the set of N nodes and E the set of L edges.\nThe degree ki is the number of neighbors node i has,\nki = |{j|(i, j) \u2208 E}|. For mathematical purposes a community c is simply a set of nodes, c \u2286 V , and we denote community size by S = |c|. The communities detected by one method constitute a community structure\nC = {c1 , . . . , cnc }. A partition P is a special community\nstructure where each node belongs S\nto exactly one comnc\nmunity, i.e. ci \u2229 cj = \u2205 if i 6= j and i=1\nci = V .\nAll three methods can be extended to handle weighted\nnetworks where each edge has a numerical weight wij .\nIn this paper we only consider positive weights; wij = 0\nis equivalent to (i, j) \u2208\n/ E. The\nP weighted counterpart of\ndegree is node strength: si = (i,j)\u2208E wij .\nThe Louvain method (LV) [9] was the best of the modularity optimization methods tested in [8]. Modularity is\nthe expected value of the difference of the number of\nedges inside communities in the actual network and in a\nrandom network with the same degree sequence [21]:\nX\u0014 Lc \u0010 dc \u00112 \u0015\nQ=\n(1)\n\u2212\nL\n2L\nc\u2208P\n\nwherePLc is the number of edges inside community c and\ndc = i\u2208c ki its total degree. In the weighted version all\nquantities are replaced by their weighted counterparts:\nLc by the total sum of weights inside a community, dc\nby the sum of node strengths and L by the sum of edge\nweights in the whole network.\nBecause modularity optimization is an NP-complete\nproblem [22], LV uses a greedy heuristic to find a local optimum. Each node is initially a separate community, i.e. ci = {i}. Neighboring communities1 are merged\nin random order so that modularity increases maximally at each step until a local maximum is reached.\nResulting communities are then shrunk into \"supernodes\" and the optimization is repeated on the new\n\"renormalized\" network. The two steps-optimization\nand renormalization-are repeated recursively until no\nfurther improvement of modularity is possible.\nThe local heuristic of LV seems to avoid some of the\nresolution issues of modularity. In addition, the renormalized networks can be understood as different levels of\na hierarchical community structure.\n\n1\n\nTwo communities are neighbors if there is at least one link between them.\n\nThe Infomap method (IM) [20] came out on top in a recent state-of-the-art benchmark comparison [8]. The idea\nis to describe a random walker with a two-level coding\nscheme: the higher level has a single codebook for communities, on the lower level each community has its own\ncodebook with a special exit code for moving out of the\ncurrent community. The optimal partition corresponds to\nthe codebook with the minimum description length: too\nsmall communities increase the description length due to\nhigher frequency of community crossings, while communities containing too many nodes require longer description. In weighted networks the random walks are biased\ntowards edges with higher weight. Since an exhaustive\nsearch for the optimal partition is not feasible, Infomap\nemploys a heuristic similar to the one used in LV.\nClique percolation (CP) [13] has been successfully applied to large empirical graphs, e.g. to study the dynamics of social groups [17]. A k-clique is a fully connected subgraph of k nodes, and two k-cliques are considered adjacent if they share k \u2212 1 nodes. As the name\nsuggests, clique percolation defines communities as connected k-clique components: a CP community is a maximal set of k-cliques such that there is a path of adjacent\nk-cliques between them. Different values of k yield different community structures, and communities obtained\nwith a larger value of k reside inside those obtained with\na smaller value. To select the best value of k we follow\nRef. [13] and use the smallest value for which there is no\ngiant percolating community.\nThere are significant differences between CP and the\nother two methods. Both LV and IM use a stochastic optimization scheme while CP is entirely deterministic. In\naddition, LV and IM yield a partition but CP does not.\nWith CP the nodes that do not belong to any k-clique\nare left outside communities, and if a node belongs to\nseveral k-cliques it may belong to more than one overlapping community. The fact that CP does not provide\na partition is not necessarily a bad thing: sparse regions\nof the network do not appear as communities, and e.g. in\nsocial networks individuals often do belong to multiple\ngroups, such as family, friends, and colleagues.\nTo define the weighted clique percolation (wCP) [23]\nwe need the concept of clique intensity, defined as the\ngeometric mean of edge weights. In wCP we use a value\nof k that would give a giant community in the unweighted\ncase, but only include those k-cliques that have intensity\nlarger than some predefined threshold I> . Analogously\nto the unweighted case, I> is set to the largest value for\nwhich there is no giant community.\nNotes on applying the methods are given in Appendix\nA.\n\nIII.\n\nTHE DATA\n\nOur empirical test network is a mobile phone call network constructed from billing records of seven million\ncustomers of a single mobile phone operator whose cus-\n\n\f3\ntomer base covers about 20% of the population in its\ncountry. The records cover a period of 126 days. To ensure anonymity of customers, phone numbers have been\nreplaced by surrogate keys. Data from the same operator\nhas been previously studied in [17, 24, 25].\nFor this study we use only voice calls, and only those\nthat take place between customers of the operator in\nquestion. In addition we exclude edges where only one\nperson has made calls to the other during the whole period. We study only the largest connected component\nwhich has N = 4.9 \u00d7 106 nodes and L = 10.9 \u00d7 106 edges\n(mean degree hki \u2248 4.44).2\nThe edge weights in the weighted network are defined\nas sums of call durations (in seconds) between the two\ncustomers. The average weight is hwi \u2248 4634 seconds.\nUsing a large social network enables us to relate the\nfindings to known characteristics of such networks [24].\nIt is known that the overlap of local neighborhoods of adjacent nodes increases with edge weight3 [26], as conjectured in the \"weak ties\" hypothesis of Granovetter [27].\nThis feature should be reflected in correlations between\nedge weights and communities. We can also study structural features of communities and evaluate whether they\nrepresent meaningful social communities.\n\nIV.\n\nRESULTS\n\nWe analyse single community structures detected by\neach method. Both LV and IM are stochastic methods\nand therefore give a slightly different partition on every\nrun; however, as shown in Appendix B the qualitative\nproperties of the communities are stable enough to justify\nthe comparison.\nAppendix A contains detailed notes about the application of the three methods. In brief, we use parameters\nk = 3 for CP and k = 4 with I> = 3093 for wCP-these\nare the only two methods with explicit parameters-and\nwith LV we only study the first level of the hierarchical\ncommunity structure since other levels yield communities\nthat are implausibly large in the social context.\n\nA.\n\nCommunity size distributions\n\nFigure 1 shows the community size distributions for\nall methods. All distributions are broad, as suggested by\nprevious results [10, 13, 28].\nFor IM, the tail of the size distribution appears powerlaw-like. Very small communities are rare. The community structure of wIM is notably different. The weighted\n\n2\n3\n\nThe largest connected component contains 92 % of nodes and 98\n% of edges; the second-largest component has only 47 nodes.\nExcept for the very largest edge weights, where the relation is\nreversed.\n\ncommunities are smaller, and the distribution is now\nmonotonously decreasing.\nEven though the largest LV communities are an order\nof magnitude smaller than in IM, LV still produces larger\ncommunities than its weighted variant wLV. Both LV\nand wLV have monotonous community size distributions,\nand small communities are more prevalent than in IM.\nThe power-law exponents for the tails are similar when\ncomparing LV to IM and wLV to wIM.\nFor CP and wCP the size distributions are well approximated by a power law. This is expected, as the communities are detected close to the critical point where a giant community would emerge. The largest deviation from\npower law behaviour is in the tail. The largest wCP communities are larger than those in CP because 3-cliques are\nused for wCP and 4-cliques for CP. Although these communities partially overlap (see Section IV E), the 3-clique\ncommunities extend far beyond the 4-clique communities.\n\nB.\n\nVisual observation of small communities\n\nThe qualitative properties of small communities can be\nestimated visually, similarly to evaluating performance\non small empirical networks. Fig. 2 shows archetypal\ncommunities with S = 5, 10, 20, and 30, and their immediate network surroundings. Communities larger than\nthis tend to be too complex to visualize in two dimensions.\nOf all unweighted methods the CP communities are\nthe least surprising: larger communities naturally appear\nonly in dense parts of the network. Small LV communities consist of interconnected cliques, which coincides well\nwith the general idea of social groups. The smallest IM\ncommunities with S \u2264 10, however, are typically treelike\nand located at the \"edge\" of the network \u2013 these communities are attached to the rest of the network by only few\nlinks. LV covers these sparse parts of the network with\nmuch smaller communities (see Fig. 9).\nWhen the weights are taken into account, the partitionbased methods wIM and wLV tend to produce even more\ntreelike communities that have the appearance of local\n\"backbones\" of the network. This is a natural consequence of the way wIM and wLV use edge weights; however, communities like these do not coincide well with the\nidea of dense social groups.\n\nC.\n\nCommunity density distribution\n\nSince some small communities were already observed\nto be treelike, we turn to more quantitative characterization of community density. Graph density is normally defined\u0002 as the proportion\nof edges out of all possible edges,\n\u0003\nLc / 21 S(S \u2212 1) . However, since communities are necessarily connected it is more illustrative to study density\nrelative to the sparsest possible community, a tree with\nS \u2212 1 edges, as also done in [10]: we define density as\n\n\f4\n100\nIM\nwIM\n\u03b1=-2.68\n\u03b1w =-5.67\n\n10\u22121\n10\u22122\n\nLV\nwLV\n\u03b1=-3.0\n\u03b1w =-5.69\n\nCP\nwCP\n\u03b1=-3.85\n\nP(S)\n\n10\u22123\n10\u22124\n10\u22125\n10\u22126\n10\u22127\n10\u22128\n10\u22129\n100\n\n101\n\n102\nS\n\n103\n\n100\n\n101\n\n102\nS\n\n103\n\n100\n\n101\n\n102\nS\n\n103\n\nFigure 1. (Color online) Community size distributions for IM, LV and CP and their weighted versions. The parameter \u03b1 denotes\nthe exponent when the tails are fitted a power-law distribution P (S) \u221d S \u03b1 ; solid lines correspond to the unweighted \u03b1 and\ndashed lines to the weighted \u03b1w .\nS=20\n\nS=30\n\nS=5\n\nS=10\n\nS=20\n\nS=30\n\nwIM\n\nS=10\n\nCP\n\nwCP\n\nLV\n\nwLV\n\nIM\n\nS=5\n\nUnweighted\n\nWeighted\n\nFigure 2. (Color online) Typical (left) unweighted and (right) weighted communities of different size. These communities have\nbeen manually selected from a large random sample of communities with the intention of portraying archetypal examples.\nColored (dark gray) nodes and edges denote nodes inside a single community, and the light gray nodes are the first neighbors of\nthe nodes in the community. In weighted communities the edge width in is proportional to the logarithm of edge weight, with\nthe restriction that edges with wij \u2264 300 (5 min) have the minimum width and those with wij \u2265 14400 (4 h) the maximum\nwidth.\n\nDc = Lc / (S \u2212 1). In general 1 \u2264 Dc \u2264 S/2 where the\nlower bound corresponds to trees and the upper bound\nto cliques. CP however doesn't allow trees; instead, the\nsmallest possible density is reached when\u0001 each new node\nadds only k\u22121 edges. In this case Lc = k2 +(k\u22121)(S\u2212k)\nwhich gives Dc \u2265 (k \u2212 1)(S \u2212 k2 )/ (S \u2212 1). For S \u226b k\nthis is approximately k \u2212 1.\nFigure 3 shows the distributions and average values\nof Dc as function of community size. As expected, CP\nyields the densest communities. For IM the value of Dc\nstays close to 1 until \u2248 20, which confirms the observation on the prevalence of small treelike communities.\nFor LV the distribution has a curious bimodal shape in\nthe range 20 < S < 50: typical LV communities of this\nsize have Dc from 2 to 4, but there is a small number of\n\nLV communities that are trees (Dc = 1) but none that\nare almost trees. A closer inspection (not shown) of these\ntrees reveals that they are stars.\nThe plots for weighted communities in Fig. 3 suggest\nthat weights make the communities more similar across\nmethods. Both wIM and wLV communities are more treelike, as already seen in Section IV B.\nTreelike communities do not fit well either with the\nidea of social groups, or that of communities in general\nbeing dense groups of nodes. However, if a network contains treelike regions, partition-based methods will correspondingly yield treelike communities4 , as also seen in\n\n4\n\nIt has been shown that if there are nodes with a single link,\n\n\f5\n\nFigure 3. (Color online) The distribution of relative density\nDc = Lc /(S \u2212 1) for communities from each method. In all\nplots, each column represents a distribution and is normalized\nto one, the colors indicating probability density so that the\ndarker the color, the higher the density (see color bar). The\nthick solid line denotes the average value. The dashed straight\nline corresponds to cliques, for which Dc = S/2. For IM and\nLV the smallest density is 1, which corresponds to trees. For\nCP, the smallest possible density is indicated by the curved\ndashed line (see text).\n\nRef. [10]. The abundance of treelike parts may just be\na sampling artifact, as our network does not cover the\nwhole population. Nevertheless, empirical data is rarely\nperfect, and a good community detection method should\ndeal with this in a sensible way. One could argue that in\ntreelike regions the network is so sparse that there isn't\nenough information about community structure. This\nmakes CP's requirement-that nodes must participate in\nat least one clique to be assigned a community-appear\nmeaningful. On the other hand, CP may yield communities where cliques are arranged as chains or starlike patterns, which again does not coincide well with the idea of\nsocial groups. Fig. 3 indicates that in CP and wCP there\nare indeed some communities with densities close to the\nlower bound.\n\nfor modularity optimization they should always belong to the\ncommunity of the node to which they are connected [29]. By\nconstruction, this holds for IM as well.\n\nFigure 4. (Color online) The distribution of \u03c1(c) (Eq. 2) as\nfunction of community size for each method. The distributions\nare presented as in Fig. 3, with a similar shading scheme. The\nblack line denotes average value.\n\nWhatever the interpretation, the detected treelike\nstructures do provide information about the mesoscopic\nstructure of the network. In other networks starlike structures can represent meaningful communities: for example\nin air transport networks the peripheral airports are connected to local hubs [30].\nD.\n\nIntra- and intercommunity edges\n\nIf the detected partitions are any good, nodes should\nhave more edges to other nodes in the same community\nthan to those in other communities. To measure this we\ndefine \u03c1(c) as the ratio of total out- and in-degree of a\ncommunity:\nP\nk out\n1 X out\n\u03c1(c) = Pi\u2208c iin =\nk\n.\n(2)\n2Lc i\u2208c i\ni\u2208c ki\n\nFigure 4 shows the distribution of \u03c1(c) as function of community size. With respect to this measure IM produces\nthe most clear-cut communities: majority of IM communities have \u03c1 below one. The values for small communities\nare especially low, confirming the earlier observation that\nsmall IM communities are on the \"edges\" of the network.\nLV communities also have \u03c1 < 1 on average, except for\n\n\f6\nTable I. Edge weights inside and between communities.\nhwi denotes the average edge weight in the whole network,\nhwc i the average weight for edges inside communities and\nhwc\u2212c i between communities. CP also has non-community\nnodes; hwc\u2212n i denotes the average weight between community and non-community nodes and hwn\u2212n i between two noncommunity nodes.\nhwc i/hwi hwc\u2212c i/hwi hwc\u2212n i/hwi hwn\u2212n i/hwi\nIM\n1.14\n0.69\n1.20\n0.78\nLV\nCP\n1.20\n0.57\n0.80\n1.06\nwIM\n1.65\n0.18\nwLV\n1.92\n0.25\n2.57\n0.43\n0.57\n0.73\nwCP\n\nwij /hwi\n\nE.\n\nNeighbourhood overlap\n\nNeighbourhood overlap quantifies the similarity of a\nnode's neighbourhood in two community structures. If\nNi (Cj ) is the set of those neighbours of node i that belong to its community in Cj , the neighborhood overlap\nis defined as Jaccard index of Ni (C1 ) and Ni (C2 ):\n\n101\n\n100\n\nOi (C1 , C2 ) =\nIM\nLV\nCP\n10\u22121\n101\n\nwij /hwi\n\nGranovetter hypothesis [27]. As nodes inside communities have overlapping neigbourhoods, we expect the links\nbetween communities to be on average weaker than those\nwithin communities. Table I shows that with all methods\nthis is indeed the case. With weighted methods this result is of course not as surprising since weights were used\nin identifying the communities.\nTo see beyond averages, Fig. 5 displays the normalized average edge weight inside communities as function\nof community size. Most notably the edge weights in\nthe largest communities are below the network average-\neven for wIM and wLV.\n\nS\n\n100\n\nwIM\nwLV\nwCP\n10\u22121\n100\n\n101\n\n102\nS\n\n103\n\n104\n\nFigure 5. (Color online) Average edge weights wij /hwi inside\ncommunities as a function of community size S, normalized\nby the network average.\n\nthe smallest communities, but the values are not as low\nas with IM. Including weights increases the average value\nof \u03c1. wLV communities in fact have on average more links\ngoing outside the community than inside.\nBecause CP allows nodes to belong to multiple communities, a good community need not have a low value of\n\u03c1(c). Also note that with CP a large fraction of edges are\nattached to non-community nodes. For CP (wCP) only\n21.4 % (18.6 %) of edges and 21.8% (25.4 %) of nodes are\ninside communities; 47.6 % (43.0 %) of edges are between\nnon-community nodes.\nFrom earlier studies of mobile phone call networks\n[24, 26] we know that there is a correlation between edge\nweight and neighborhood overlap, in agreement with the\n\n|Ni (C1 ) \u2229 Ni (C2 )|\n|Ni (C1 ) \u222a Ni (C2 )|\n\n.\n\n(3)\n\nThus Oi = 1 if the same neighbours of i belong to its\nown community in both methods and Oi = 0 if the sets\ndo not overlap. In the case of CP we only consider nodes\nthat participate in at least one community; for nodes\nthat participate in several, we assign the node to the\ncommunity where most of its neighbours reside.\nFigure 6 displays the average neighbourhood overlap as\nfunction of degree for selected method pairs5 . Nearly all\npairs show a decreasing trend and thus in general community neighbourhoods of low-degree nodes are more similar. The IM\u2013CP and wIM\u2013wCP overlaps decrease the\nfastest, as the underlying philosophies are different and\nthe large number of nodes not appearing in any CP community reduces the overlap. wIM and wLV show a better\nmatch than their unweighted counterparts, suggesting a\nsimilar and fairly strong response to edge weights. On\nthe other hand, overlaps for IM\u2013wIM and LV\u2013wLV become small for large k, which suggests that taking weights\ninto account considerably changes the partitions for these\nmethods. With CP\u2013wCP the opposite behaviour occurs\nbecause wCP is based on 3-cliques and many nodes that\nare included in a 3-clique are not included in any 4-clique.\nF.\n\nNested communities\n\nThe above analysis shows that the three methods do\nnot detect the same communities. It is however possible that they only detect different levels of a hierarchical\n\n5\n\nInstead of showing the results for all 15 method pairs we only\npresent the most interesting cases.\n\n\f7\n1.0\n\noverlap O\n\n0.8\n0.6\n0.4\n0.2\n\nIM-CP\nwIM-wCP\nIM-LV\nwIM-wLV\n\n0.0\n1.0\n\noverlap O\n\n0.8\n\nIM-wIM\nCP-wCP\nLV-wLV\n\nFigure 7. (Color online) Illustration of tiling imperfection. The\n8 nodes in c\u2032 are spread over three different communities in\nanother partition. Using T = {c1 , c2 } gives the best tiling;\nincluding c3 would reduce Fint to 0 but increase Fext by 2.\nThe value of tiling imperfection is I = 3/8.\n\n0.6\n0.4\n0.2\n\n1.0\n101\ndegree k\n\n102\nimperfection(\u2217)\n\n0.0\n100\n\nFigure 6. (Color online) Average neighbourhood community\noverlap O as a function of node degree k, between different\nmethods (top) and unweighted and weighted versions of the\nsame method (bottom).\n\n0.8\n0.6\n0.4\n\ninc. IM-CP\ntil. IM-CP\ntil. CP-IM\n\n0.2\n0.0\n1.0\n\nimperfection(\u2217)\n\ncommunity structure. If this is true, then the communities from one method should be the subset of another.\nTo address this question quantitatively we calculate\nhow accurately a single community c\u2032 \u2208 Pi can be tiled\nby the communities of another partition Pj . The best\ntiling is reached with set T \u2286 Pj that minimizes the sum\nof external faults\nX\nFext (c\u2032 , T ) =\n|cj | \u2212 |c\u2032 \u2229 cj |\n(4)\n\n0.8\n0.6\n0.4\n\ntil. IM-LV\ntil. LV-IM\n\n0.2\n\ncj \u2208T\n\nwhich equals the number of nodes in T but outside c\u2032 ,\nand internal faults\nX\nFint (c\u2032 , T ) = |c\u2032 | \u2212\n|c\u2032 \u2229 cj |\n(5)\ncj \u2208T\n\nwhich equals the number of nodes in c\u2032 but outside T . As\nillustrated in Fig. 7, the minimum of Fext +Fint is reached\nwhen T contains only those communities for which |c\u2032 \u2229\ncj | > 12 |cj |, i.e. those cj \u2208 Pj that share at least half of\ntheir nodes with c\u2032 . To allow comparing communities of\ndifferent size we define tiling imperfection I(c\u2032 , Pj ) as the\nratio of this minimum total fault and community size:\nI(c\u2032 , Pj ) =\n\nmin(Fext + Fint )\n|c\u2032 |\n\n0.0\n100\n\n(6)\n\nNote that the aim of this measure is to quantify the\nsubset-superset relationships of communities, which cannot be done with symmetric measures such as mutual\ninformation.\n\n104\n\nFigure 8. (Color online) (Top) Tiling imperfection I and inclusion imperfection I \u2217 between IM and CP. (Bottom) Tiling\nimperfection I between IM and LV.\n\nIt is possible to generalize this measure also for general\ncommunity structures,6 such as the one produced by CP,\n\n6\n\n.\n\n101\n102\n103\ncommunity size S\n\nIf T \u2217 = \u222aj\u2208T cj , the generalized tiling is defined by Fext (c\u2032 , T ) =\n|T \u2217 |\u2212|T \u2217 \u2229c\u2032 | and Fint (c\u2032 , T ) = |c\u2032 |\u2212|T \u2217 \u2229c\u2032 |. The optimal T can\nnow be constructed by first including (as before) the communities\nthat share at least half of their nodes with c\u2032 , but then adding\nalso those communities that contain more uncovered nodes of c\u2032\n(i.e. those in c\u2032 \\T \u2217 ) than new nodes outside c\u2032 . Here we however\nuse the same definition of T as for partititions to make the values\nmore comparable.\n\n\f8\na)\n\nb)\n\nFigure 9. (Color online) Typical cases of tiling with IM (red\nor dark gray) and LV (black) communities of size S = 10.\nLight gray nodes are the first neighbors of the community\nto be tiled. (a) Example of perfect tiling I = 0 when IM\ncommunity (red nodes) is tiled with LV communities (black\nedges). A typical IM community with S = 10 is located in a\ntreelike region of the network, and LV covers such regions with\nvery small communities. (b) Example of tiling imperfection\nI = 1 when LV community (black edges) is tiled with IM\ncommunities (in red). A typical LV community with S = 10\nis in a somewhat denser part of the network, where the IM\ncommunities are much larger.\n\nbut this is not advisable: if c\u2032 would have nodes that are\nnot included in any community of Cj , these nodes would\nautomatically be internal faults and the tiling imperfection would be misleadingly high. To correct for this we\ndefine inclusion imperfection I \u2217 (c\u2032 , Cj ) similar to tiling\nimperfection but nodes may be counted as internal faults\nonly if they are covered by both community structures.\nResults for tiling measures are shown in Figure 8. Comparing the tiling and inclusion imperfections for IM\u2013CP,\nespecially for small communities, illustrates the difference of these two measures: tiling imperfection is high\nsince small IM communities are treelike and therefore not\nincluded in any CP community; low values of inclusion\nimperfection, however, show that CP communities tend\nto be subsets of IM communities. High values of CP\u2013IM\ntiling imperfection shows that the reverse is not true.\nThe low tiling imperfection for IM\u2013LV and high for\nLV\u2013IM shows that IM communities tend to be supersets\nof LV communities. The extreme values for small communities indicate that nearly all small IM communities can\nbe perfectly tiled with LV communities, while small LV\ncommunities can almost never be tiled with IM communities.7 A typical tiling of small IM and LV communities\nis shown in Fig. 9.\nV.\n\nCONCLUSIONS AND DISCUSSION\n\nBenchmarks are helpful if the methods are to be tested\nfor sensitivity to particular properties, such as hierarchi-\n\n7\n\nNote that I may only take values that are fractions of community\nsize: e.g. with S = 5 the smallest non-zero value is 0.2, and to get\nan average value of O(10\u22122 ) the vast majority of IM communities\nmust have I = 0.\n\ncal structure or broad distribution of community sizes.\nReal-world networks, however, are incomparably more\ncomplicated, often inhomogeneous in many respects and\nusually contain many different kinds of mesoscopic structures. Good performance on benchmark graphs does not\nassure that communities identified in real data are meaningful. Our analysis of the Infomap, Louvain and clique\npercolation methods applied to a large social network reveals that while all the three methods do detect reasonable communities in some respects, they still come short\nin others.\nWith all these methods the edge weights were higher\ninside communities than between them, in accordance\nwith the Granovetter hypothesis [27]; distributions of\ncommunity sizes were broad, as expected; and tiling imperfection revealed that while IM and LV produce different partitions, they have a hierarchical relation where LV\ncommunities tend to be inside IM communities. On the\nother hand, both IM and LV yield treelike communities\nwhich does not coincide well with the notion of a social\ncommunity, and using edge weights makes the communities even sparser. In contrast, CP clusters are always\nfound in dense regions of the graph and are therefore often meaningful; as a downside CP may end up discarding\nsome important parts of communities.\nA natural question is how well our findings can be generalized to other types of networks. Analysis of multiple datasets is beyond the scope of this work, but some\nspeculation can be done. Broad community size distributions have already been observed in a number of studies\n[7, 10, 13]. Considering the numerous treelike communities, similar sparse regions occur in other networks as\nwell. For example, [10] found that the density of communities can vary widely across different network types;\ne.g. the Internet has very sparse communities while information networks (like arXiv citations) have dense ones.\nThe similarity of IM and LV may hold too because both\npartition the network and their heuristics are similar. [10]\nobserved that two very different partitioning methods resulted in similar communities in terms of statistical properties. On the other hand, the difference between CP and\nthe partition-based methods is likely to manifest itself for\nvarious networks.\nIn large sparse networks partitioning methods inevitably identify some questionable regions as communities. The trees, starlike formations and stars detected\nby IM and LV do, however, bear mesoscopic structural\nmeaning: they too are building blocks of the network. The\nsame topological structure may be considered a community for one purpose but not for some other-a star is\nhardly a social community but may reasonably be considered as one in for example biochemical networks [10].\nIt would seem that the analysis of large empirical networks would benefit from the use of complementary community detection methods and a comparison of the identified structural features. Instead of just devising ever\nmore efficient community detection methods it might be\nmore beneficial to take into consideration the existence\n\n\f9\nof different types of mesoscopic structures, as opposed to\nfixating on a predefined idea of dense communities.\nACKNOWLEDGMENTS\n\nThe project ICTeCollective acknowledges the financial support of the Future and Emerging Technologies\n(FET) programme within the Seventh Framework Programme for Research of the European Commission, under FET-Open grant number: 238597. We acknowledge\nsupport by the Academy of Finland, the Finnish Center\nof Excellence program 2006-2011, project no. 129670. JK\nthanks OTKA K60456 and TEKES for partial support.\nWe thank Albert-L\u00e1szl\u00f3 Barab\u00e1si for the data used in\nthis research.\nAppendix A: Notes on applying the methods\n\nThe Louvain method. The LV agglomeratively builds\nlarger communities until no improvement in modularity\ncan be achieved. Our data yielded very large communities\nwith sizes up to S \u2243 5 \u00d7 105 nodes both for LV and wLV,\nand hence we adopted the view that the different renormalization levels correspond to different levels of hierarchical organization8, as suggested in Ref. [9]. To obtain\nmeaningful, smaller social communities and to be able to\ncompare results with other methods we chose to use the\nfirst level, i.e. before the first merger of communities was\nmade. This step revealed another feature of LV: while\nthe modularity value is quite similar regardless of the\norder the nodes are processed in, the size of the largest\ncommunity varies greatly. We use a partition where the\nsize of the largest community is around 103 since this\nmakes sense in the social context. Because LV uses a local heuristic and we are dealing with a very large network,\nit is reasonable to assume that the statistical properties\nof the partitions are on average similar and do not vary\nas much as the size of the largest community. For a detailed description of the stability of both LV and IM, see\nAppendix B. In addition the LV algorithm can in some\ncases produce disconnected communities. Only few such\ncommunities were encountered, and we dealt with this\nby turning each connected component into a community.\nCode for the algorithm is available for download [31].\nThe Infomap method. The implementation code for Infomap is available for download [32]. No changes to the\ncode were required.\nClique percolation. For CP we need to select the value\nof k such that there is no percolating cluster. For our\ndata, k = 3 gives rise to a giant community but k = 4\ndoes not and thus we select k = 4.\n\nFigure 10. (Color online) To find the critical threshold Ic for\nwCP we build up communities by adding cliques in descending\norder of intensity I, and monitor the largest component size\nm(I> ) (\u0003) and susceptibility \u03c7(I> ) (\u25e6). The transition occurs\nwhen about 24 % of cliques have been added (I> \u2248 3093).\n\nTable II. Running times of the different algorithms on our\ndata set of N = 4.9 \u00d7 106 nodes and L = 10.9 \u00d7 106 links.\nunweighted weighted\nLouvain 2 min 7 s 1 min 30 s\nInfomap 46 h 44 min 3 h 20 min\nClique percolation 2 min 10 s 4 min 52 s\n\nFor the weighted wCP we start with k = 3 and find\nthe threshold intensity I> for which the giant community disappears.9 Thus we look for the percolation point\nusing clique intensity as the control parameter [23] and\nset the intensity threshold I> slightly below the critical\npoint. This point can be identified by the maximum of\nthe susceptibility-like quantity\nX\nX\nS\u03b12 /(\n\u03c7=\nS\u03b2 )2\n(A1)\nS\u03b1 6=Smax\n\nwhere S is community size, and \u03b1 and \u03b2 index the communities. We varied I> while monitoring the order parameter m(I> ) and the susceptibility \u03c7(I> ) (see Figure\n10). When 24 % of the cliques have been added in order of descending intensity, a giant cluster emerges, while\nsusceptibility shows a pronounced peak. This point corresponds to the critical intensity Ic \u2248 3093, which was\nchosen as our threshold. For CP and wCP, we applied the\nfast algorithm introduced in [33]. A sample implementation can be found at [34]\nThe running times of all the algorithms used are displayed in Table II. LV and CP are extremely fast, while\nInfomap takes a few days to complete. All runs were done\non a standard desktop machine, utilizing a single processor.\n\n9\n\n8\n\nNote, however, that this assumption has not yet been verified\ne.g. with benchmarks.\n\n\u03b2\n\nNote that with k = 4 the weighted communities would be identical to the unweighted ones, as in the absence of percolation the\nintensity threshold would be set to 0. Using k = 2 on the other\nhand would correspond to simply using a weight threshold on\nsingle edges.\n\n\f10\n\nBoth IM and LV are stochastic methods, and therefore\nthe partitions produced by different runs will not be identical. To see how stable the algorithms are we run each\nmethod 20 times with different random seeds to generate\npartitions Pi = {cj,i }, i = 1, . . . , 20, and study the stability of the number of communities found (|Pi |), the size\nof the largest community (Smax = maxj {|cj,i |}) and the\nstability of identified communities across the runs. Let\nP = {P1 , P2 , . . .} be a set of partitions and denote by\nCpm (P) = \u2229P \u2208P P the set of communities that appear in\nall partitions, i.e. the set of perfectly matching communities. For any Pi \u2208 P the fraction of perfect matches is\npair\nfpm (Pi ; P) = |Cpm |/|Pi |. We denote by fpm\nthe fraction\nof perfect matches when P consists of two partitions, and\nall\nby fpm\nthe fraction of perfect matches when P consists\nof all 20 partitions generated by a single method.\nThe results are summarized in Table III. It turns out\nthat both weighted methods are very stable not only with\nrespect to |Pi | and Smax , but also with respect to the\nidentity of communities: with both wIM and wLV we get\nall\n> 0.9, which means that over 90 % of communities\nfpm\nare identical in all 20 runs. The variation comes mostly\nfrom large communities.\nIn the unweighted case both IM and LV are stable\nwith respect to |Pi |, and IM also with respect to Smax .\nThe identity of communities found however exhibits more\nvariation: e.g., only 13 % of communities found by a single run of IM appear in all 20 runs. Furthermore, looking\n\nat the unmatched communities for any pair (i.e. those in\nPi \\Cpm ({Pi , Pj })), in IM about 32 % have tiling imperfection I < 0.2, and the average tiling imperfection is\n0.46; in LV only 17 % of such communities have I < 0.2,\nwith average tiling imperfection of 0.57. Thus the remaining communities are in general not even close matches.\nAs with weighted methods, small communities are more\nlikely to match perfectly than larger ones.\nInstability of a method is of course problematic for\nanyone wanting to identify the \"true\" communities of\na given network. It is however premature to judge IM\nand LV because of this: the network topology is inherently noisy, and does not necessarily contain enough information to uniquely identify the communities. Including weights made both methods much more stable, which\nsuggests that the link weights contain information beyond the network topology. Note that there is information even in the instability: any two IM partitions share\n42 % of their communities, but if these shared communities were chosen uniformly at random only 0.4220 \u2248 10\u22126\n% of the communities would appear in all 20 partitions-\nmuch less that the actual value of 13.2 %.\nThe high stability of wIM and wLV may be partly\nexplained by the fat-tailed distribution of call lengths\nin a mobile call network [26]. Since both methods are\nbased on using probabilities proportional to the edge\nweights, an edge with a weight several orders of magnitude larger than the average will be placed inside a\ncommunity almost independently of the network topology. On the other hand, in wCP the definition of intensity as the geometric average takes well into account the\nfat-tailed degree destribution, and is equivalent to using\n\u2217\nweights wij\n= log wij , the arithmetic mean for inten\u2217\nsity and the intensity threshold I>\n= log I> . While one\ncould use logarithmic weights also with wIM and wLV,\nthis is problematic as the ratio of log-weights is not scale\ninvariant and therefore the result would depend on the\nunit used to measure call length.\nFinally, as suggested by the stability of |Pi | and Smax ,\nthe qualitative properties of the communities are very\nstable even though the exact identity of communities are\nnot. For example IM repeatedly produces treelike communities even if the communities are not made up of the\nsame nodes. Because of this statistical stability no error\nis made by comparing the methods by using only single\nrealizations from each method.\n\n[1] R. Pastor-Satorras, A. Vespignani, Phys. Rev. Lett. 86,\n3200 (2001)\n[2] J. D. Noh, H. Rieger, Phys. Rev. Lett. 92, 118701 (2004)\n[3] M. Barahona, L.M. Pecora, Phys. Rev. Lett. 89, 054101\n(2002)\n[4] R Milo, S Shen-Orr, S Itzkovitz, N Kashtan, D Chklovskii\nand U Alon, Science 298, 824 (2002)\n[5] J.-P. Onnela, J. Saram\u00e4ki, J. Kert\u00e9sz, K. Kaski, Phys.\nRev. E 71, 065103 (2005)\n\n[6] S. Fortunato, Phys. Reports 486, 75-174 (2010)\n[7] A. Lancichinetti, S. Fortunato, J. Kert\u00e9sz, New J. Phys.\n11, 033015 (2009)\n[8] A. Lancichinetti, S. Fortunato, Phys. Rev. E 80, 056117\n(2009)\n[9] V. D. Blondel, J.-L. Guillaume, R. Lambiotte, E. Lefebvre, J. Stat. Mech. P10008 (2008).\n[10] A. Lancichinetti, M. Kivel\u00e4, J. Saram\u00e4ki, S. Fortunato,\nPLoS One 5(8), e11976 (2010).\n\nTable III. Comparison of the stability of stochastic algorithms.\nWe generated 20 partitions with each method using different random seeds, and present the smallest and largest obpair\nserved values of |Pi | and Smax over all 20 runs and of fpm\nover the 20 ordered pairs (Pi , Pj ) with |i \u2212 j| = 1. The value\nall\nof fpm\n= |Cpm ({Pi }20\ni=1 )|/|Pj | depends on the partition only\nthrough |Pj | and is therefore also very stable; we list the value\ncorresponding to the largest |Pj |.\nIM\nLV\nwIM\nwLV\n\n|Pi |\nSmax\n280000 \u2013 280516 2964 \u2013 3672\n1293903 \u2013 1298256 811 \u2013 11390\n674587 \u2013 674727 209 \u2013 247\n1155557 \u2013 1155985\n73 \u2013 112\n\npair\nfpm\n42.1 \u2013 42.6\n72.1 \u2013 72.8\n97.4 \u2013 97.5\n95.8 \u2013 95.9\n\n%\n%\n%\n%\n\nall\nfpm\n13.2 %\n36.7 %\n92.5 %\n90.1 %\n\nAppendix B: Stability of the stochastic methods\n\n\f11\n[11] A. Lancichinetti, S. Fortunato, F. Radicchi, Phys. Rev.\nE 78, 046110 (2008)\n[12] A. Lancichinetti, S. Fortunato, Phys. Rev. E 80, 016118\n(2009)\n[13] G. Palla, I. Der\u00e9nyi, I. Farkas, T. Vicsek,Nature 435, 814\n(2005).\n[14] Y.-Y. Ahn, J. P. Bagrow, and S. Lehmann, Nature 466,\n761 (2010).\n[15] R. Pastor-Satorras, A. V\u00e1zquez, A. Vespignani, Phys.\nRev. Lett. 87, 258701 (2001)\n[16] R. Milo, S. Itzkovitz, N. Kashtan, R. Levitt, S. ShenOrr, I. Ayzenshtat, M. Sheffer, U. Alon, Science 303,\n1538 (2004)\n[17] G. Palla, A.-L. Barab\u00e1si, T. Vicsek, Nature 446, 664\n(2007)\n[18] P.F. Jonsson, T. Cavanna, D. Zicha, and P.A. Bates,\nBMC Bioinformatics 7:2 (2006)\n[19] M. Herrera, D.C. Roberts, N. Gulbache, PLoS One 5,\ne10355 (2010)\n[20] M. Rosvall, C. T. Bergstrom, PNAS 105, 1118 (2008)\n[21] M. E. J. Newman, M. Girvan, Phys. Rev. E 69, 026113\n(2004)\n[22] U. Brandes, D. Delling, M. Gaertler, R. Goerke, M. Hoe-\n\n[23]\n[24]\n\n[25]\n[26]\n\n[27]\n[28]\n[29]\n[30]\n[31]\n[32]\n[33]\n[34]\n\nfer, Z. Nikoloski, D. Wagner, IEEE Trans. Knowl. Data\nEng. 20, 172 (2008)\nI. Farkas, D. \u00c1bel, G. Palla, T. Vicsek, New J. Phys. 9,\n180 (2007)\nJ.-P. Onnela, J. Saram\u00e4ki, J. Hyv\u00f6nen, G. Szab\u00f3, D.\nLazer, K. Kaski, J. Kert\u00e9sz, and A.-L. Barab\u00e1si, Proc.\nNatl. Acad. Sci. (USA) 104, 7332 (2007)\nM. C. Gonz\u00e1lez, C. A. Hidalgo, A.-L. Barab\u00e1si, Nature\n453, 779 (2008)\nJ.-P. Onnela, J. Saram\u00e4ki, J. Hyv\u00f6nen, G. Szab\u00f3, M. A.\nde Menezes, K. Kaski, A.-L. Barab\u00e1si, and J. Kert\u00e9sz\nNew J. Phys. 9, 179 (2007)\nM. Granovetter, Am. J. Sociol. 78, 1360 (1973)\nA. Clauset, M.E.J. Newman and C. Moore, Phys. Rev. E\n70, 066111 (2004)\nA. Arenas, J. Duch, A. Fernand\u00e9z, and S. G\u00f3mez, New\nJ. Phys. 9, 176 (2007)\nR. Guimer\u00e1, S. Mossa, A. Turtschi, and L.A.N. Amaral,\nProc. Natl. Acad. Sci. (USA) 102, 7794 (2005)\nhttp://sites.google.com/site/findcommunities/\nhttp://www.tp.umu.se/\u223crosvall/code.html\nJ.M. Kumpula, M. Kivel\u00e4, K. Kaski, and J. Saram\u00e4ki,\nPhys. Rev. E 79, 026109 (2008)\nhttp://www.lce.hut.fi/~mtkivela/kclique.html\n\n\f"}