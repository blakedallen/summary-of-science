{"id": "http://arxiv.org/abs/cs/0308015v1", "guidislink": true, "updated": "2003-08-07T16:33:14Z", "updated_parsed": [2003, 8, 7, 16, 33, 14, 3, 219, 0], "published": "2003-08-07T16:33:14Z", "published_parsed": [2003, 8, 7, 16, 33, 14, 3, 219, 0], "title": "Rethinking OpenPGP PKI and OpenPGP Public Keyserver", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0011022%2Ccs%2F0011033%2Ccs%2F0011006%2Ccs%2F0011023%2Ccs%2F0011002%2Ccs%2F0011042%2Ccs%2F0011020%2Ccs%2F0308009%2Ccs%2F0308010%2Ccs%2F0308042%2Ccs%2F0308003%2Ccs%2F0308020%2Ccs%2F0308006%2Ccs%2F0308023%2Ccs%2F0308017%2Ccs%2F0308022%2Ccs%2F0308040%2Ccs%2F0308025%2Ccs%2F0308021%2Ccs%2F0308012%2Ccs%2F0308014%2Ccs%2F0308013%2Ccs%2F0308044%2Ccs%2F0308001%2Ccs%2F0308035%2Ccs%2F0308034%2Ccs%2F0308038%2Ccs%2F0308039%2Ccs%2F0308026%2Ccs%2F0308007%2Ccs%2F0308005%2Ccs%2F0308002%2Ccs%2F0308043%2Ccs%2F0308033%2Ccs%2F0308027%2Ccs%2F0308008%2Ccs%2F0308004%2Ccs%2F0308019%2Ccs%2F0308041%2Ccs%2F0308015%2Ccs%2F0308024%2Ccs%2F0308011%2Ccs%2F0308037%2Ccs%2F0308018%2Ccs%2F0308030%2Ccs%2F0308031%2Ccs%2F0308016%2Ccs%2F0308032%2Ccs%2F0308028%2Ccs%2F0308036%2Ccs%2F0308029%2Ccs%2F0504015%2Ccs%2F0504024%2Ccs%2F0504027%2Ccs%2F0504017%2Ccs%2F0504099%2Ccs%2F0504075%2Ccs%2F0504083%2Ccs%2F0504093%2Ccs%2F0504084%2Ccs%2F0504088%2Ccs%2F0504012%2Ccs%2F0504058%2Ccs%2F0504005%2Ccs%2F0504097%2Ccs%2F0504044%2Ccs%2F0504041%2Ccs%2F0504063%2Ccs%2F0504016%2Ccs%2F0504043%2Ccs%2F0504033%2Ccs%2F0504034%2Ccs%2F0504053%2Ccs%2F0504071%2Ccs%2F0504004%2Ccs%2F0504064%2Ccs%2F0504068%2Ccs%2F0504030%2Ccs%2F0504032%2Ccs%2F0504065%2Ccs%2F0504013%2Ccs%2F0504090%2Ccs%2F0504104%2Ccs%2F0504046%2Ccs%2F0504035%2Ccs%2F0504080%2Ccs%2F0504092%2Ccs%2F0504111%2Ccs%2F0504110%2Ccs%2F0504055%2Ccs%2F0504091%2Ccs%2F0504095%2Ccs%2F0504074%2Ccs%2F0504089%2Ccs%2F0504052%2Ccs%2F0504085%2Ccs%2F0504079%2Ccs%2F0504029%2Ccs%2F0504067%2Ccs%2F0504019%2Ccs%2F0504076&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Rethinking OpenPGP PKI and OpenPGP Public Keyserver"}, "summary": "OpenPGP, an IETF Proposed Standard based on PGP application, has its own\nPublic Key Infrastructure (PKI) architecture which is different from the one\nbased on X.509, another standard from ITU. This paper describes the OpenPGP\nPKI; the historical perspective as well as its current use. The current OpenPGP\nPKI issues include the capability of a PGP keyserver and its performance. PGP\nkeyservers have been developed and operated by volunteers since the 1990s. The\nkeyservers distribute, merge, and expire the OpenPGP public keys. Major\nkeyserver managers from several countries have built the globally distributed\nnetwork of PGP keyservers. However, the current PGP Public Keyserver (pksd) has\nsome limitations. It does not support fully the OpenPGP format so that it is\nneither expandable nor flexible, without any cluster technology. Finally we\nintroduce the project on the next generation OpenPGP public keyserver called\nthe OpenPKSD, lead by Hironobu Suzuki, one of the authors, and funded by\nJapanese Information-technology Promotion Agency(IPA).", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0011022%2Ccs%2F0011033%2Ccs%2F0011006%2Ccs%2F0011023%2Ccs%2F0011002%2Ccs%2F0011042%2Ccs%2F0011020%2Ccs%2F0308009%2Ccs%2F0308010%2Ccs%2F0308042%2Ccs%2F0308003%2Ccs%2F0308020%2Ccs%2F0308006%2Ccs%2F0308023%2Ccs%2F0308017%2Ccs%2F0308022%2Ccs%2F0308040%2Ccs%2F0308025%2Ccs%2F0308021%2Ccs%2F0308012%2Ccs%2F0308014%2Ccs%2F0308013%2Ccs%2F0308044%2Ccs%2F0308001%2Ccs%2F0308035%2Ccs%2F0308034%2Ccs%2F0308038%2Ccs%2F0308039%2Ccs%2F0308026%2Ccs%2F0308007%2Ccs%2F0308005%2Ccs%2F0308002%2Ccs%2F0308043%2Ccs%2F0308033%2Ccs%2F0308027%2Ccs%2F0308008%2Ccs%2F0308004%2Ccs%2F0308019%2Ccs%2F0308041%2Ccs%2F0308015%2Ccs%2F0308024%2Ccs%2F0308011%2Ccs%2F0308037%2Ccs%2F0308018%2Ccs%2F0308030%2Ccs%2F0308031%2Ccs%2F0308016%2Ccs%2F0308032%2Ccs%2F0308028%2Ccs%2F0308036%2Ccs%2F0308029%2Ccs%2F0504015%2Ccs%2F0504024%2Ccs%2F0504027%2Ccs%2F0504017%2Ccs%2F0504099%2Ccs%2F0504075%2Ccs%2F0504083%2Ccs%2F0504093%2Ccs%2F0504084%2Ccs%2F0504088%2Ccs%2F0504012%2Ccs%2F0504058%2Ccs%2F0504005%2Ccs%2F0504097%2Ccs%2F0504044%2Ccs%2F0504041%2Ccs%2F0504063%2Ccs%2F0504016%2Ccs%2F0504043%2Ccs%2F0504033%2Ccs%2F0504034%2Ccs%2F0504053%2Ccs%2F0504071%2Ccs%2F0504004%2Ccs%2F0504064%2Ccs%2F0504068%2Ccs%2F0504030%2Ccs%2F0504032%2Ccs%2F0504065%2Ccs%2F0504013%2Ccs%2F0504090%2Ccs%2F0504104%2Ccs%2F0504046%2Ccs%2F0504035%2Ccs%2F0504080%2Ccs%2F0504092%2Ccs%2F0504111%2Ccs%2F0504110%2Ccs%2F0504055%2Ccs%2F0504091%2Ccs%2F0504095%2Ccs%2F0504074%2Ccs%2F0504089%2Ccs%2F0504052%2Ccs%2F0504085%2Ccs%2F0504079%2Ccs%2F0504029%2Ccs%2F0504067%2Ccs%2F0504019%2Ccs%2F0504076&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "OpenPGP, an IETF Proposed Standard based on PGP application, has its own\nPublic Key Infrastructure (PKI) architecture which is different from the one\nbased on X.509, another standard from ITU. This paper describes the OpenPGP\nPKI; the historical perspective as well as its current use. The current OpenPGP\nPKI issues include the capability of a PGP keyserver and its performance. PGP\nkeyservers have been developed and operated by volunteers since the 1990s. The\nkeyservers distribute, merge, and expire the OpenPGP public keys. Major\nkeyserver managers from several countries have built the globally distributed\nnetwork of PGP keyservers. However, the current PGP Public Keyserver (pksd) has\nsome limitations. It does not support fully the OpenPGP format so that it is\nneither expandable nor flexible, without any cluster technology. Finally we\nintroduce the project on the next generation OpenPGP public keyserver called\nthe OpenPKSD, lead by Hironobu Suzuki, one of the authors, and funded by\nJapanese Information-technology Promotion Agency(IPA)."}, "authors": ["Shinji Yamane", "Jiahong Wang", "Hironobu Suzuki", "Norihisa Segawa", "Yuko Murayama"], "author_detail": {"name": "Yuko Murayama"}, "author": "Yuko Murayama", "arxiv_comment": "8 pages, 2 figures", "links": [{"href": "http://arxiv.org/abs/cs/0308015v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/cs/0308015v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.CY", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CY", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "K.6, E.3", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/cs/0308015v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/cs/0308015v1", "journal_reference": null, "doi": null, "fulltext": "arXiv:cs/0308015v1 [cs.CY] 7 Aug 2003\n\nRethinking OpenPGP PKI and OpenPGP Public Keyserver\nShinji Yamane\nIwate Prefectural University\nFaculty of Software and Information Science\nTakizawa-aza-Sugo, Takizawa vil. Iwate 0200193 JAPAN\ns-yamane@soft.iwate-pu.ac.jp\nHironobu Suzuki\nIndependent Software Consultant\npgp-folks@comm.soft.iwate-pu.ac.jp\n\nJiahong Wang\nIwate Prefectural University\npgp-folks@comm.soft.iwate-pu.ac.jp\nNorihisa Segawa\nIwate Prefectural University\npgp-folks@comm.soft.iwate-pu.ac.jp\n\nYuko Murayama\nIwate Prefectural University\nMurayama@iwate-pu.ac.jp\n\nOctober 25, 2018\n\nAbstract\nOpenPGP, an IETF Proposed Standard based on PGP R\napplication, has its own Public Key Infrastructure (PKI)\narchitecture which is different from the one based on\nX.509, another standard from ITU. This paper describes\nthe OpenPGP PKI; the historical perspective as well as\nits current use. We also compare three PKI technologies standardized by IETF: OpenPGP, PKIX(X.509), and\nSPKI/SDSI.\nSince the OpenPGP PKI works without a registration\nauthority nor certification authority, it fits well with the\nInternet communication with voluntary community. For\nexample, the digital signature for email including the security patch program of free software is usually signed by\nnot an authorized organization but the cross-PGP-signed\nindividuals who belong to different organizations or nations.\nThe current OpenPGP PKI issues include the capability of a PGP keyserver and its performance. PGP keyservers have been developed and operated by volunteers\nsince the 1990s. The keyservers distribute, merge, and expire the OpenPGP public keys. Major keyserver managers\n\nfrom several countries have built the globally distributed\nnetwork of PGP keyservers. However, the current PGP\nPublic Keyserver (pksd) has some limitations. It does not\nsupport fully the OpenPGP format so that it is neither expandable nor flexible, without any cluster technology.\nFinally we introduce the project on the next generation OpenPGP public keyserver called the OpenPKSD,\nlead by Hironobu Suzuki, one of the authors, and\nfunded by Japanese Information-technology Promotion\nAgency(IPA).\n\n1\n\nIntroduction\n\nAuthentication is an essential factor of information security in network society. The difficulty of building a\nPublic-Key Infrastructure (PKI) is a major impediment to\nstrong authentication. Without PKI, we cannot trust neither digital signature nor certification based on the public\nkey cryptosystem via wide-area network.\nIn following section 2 and 3, we overview the PKI architecture comparing several models. In section 4, we\nexamine a PKI without authorities which is presented by\n\n\fthe OpenPGP technology and compare it with the other 3 PKI standards\nmodels. Then we point out the role of the PGP keyserver\nin section 6 and introduce the next generation OpenPGP To build PKIs, different standards are developed. They are\npublic keyserver project in section 7. Finally we give based on their own framework and architecture and they\nare never the same. This section compares different PKI\nsome conclusions.\narchitectures: 1) X.509 standard from ITU, 2) OpenPGP,\nan IETF Proposed standard based on PGP R application,\nand 3) SPKI, another standards based on the theoretical\n2 PKI architectures\nresearch.\nX.509 is the earliest framework to provide and supPKI has three core functions as follows to manage the port authentication including formats for X.509 publicusers' certification and trust relations [25, s.v. \"public- key certificates, X.509 attribute certificates, and X.509\nkey infrastructure\"]:\nCRLs. X.509 is the hierarchical PKI that a CA, central\ndigital certificates issuer, is responsible for managing the\n1. to register users and issue their public-key certifi- certificates.\ncates\nHistorically, X.509 was standardized by ITU-T (International Telecommunication Union Telecommunication\n2. to revoke certificates when required\nsector, formerly CCITT) and turned to be ISO standard.\nX.509 follows the X.500 directory service and provides\n3. to archive data needed to validate certificates at a an example of reliable authentication and certification. In\nmuch later time\npractice, developers relax the strict X.500 service scheme.\nFor example, X.509v3 (Version 3) certificate has \"extenTo operate these three functions with many users on a sions\" field for flexible operation.\nlarge-scale network, many PKI have a hierarchical strucIETF had discussed about the design based on X.509\nture for CAs and are built using a centralized architecture. framework from each applications to general PKI. InterHowever there are alternatives.\nnet standards for X.509 PKI framework is developed at\nPKI is categorized by the architecture types as fol- IETF Public-Key Infrastructure (X.509) Working Group.\nlows: 1) hierarchical PKI, 2) mesh PKI, and 3) trust-file PKIX not only profiles X.509 standards, but also develops\nPKI [25, s.v. \"trusted certificate\"]. The difference is the new standards apropos to the use of X.509-based PKIs in\nway how they rely on CA (Certification Authority). A the Internet.\nhierarchical PKI has the most significant CA in terms of\nOne\nof\nthe\nmost\npopular\nimplementrust at the root of the hierarchy tree. A mesh PKI has CAs tations\nof\nX.509-based\nPKI\nis\nOpenSSL\nissue cross-certificates to each other. A trust-file PKI has (http://www.openssl.org/, formerly SSLeay).\na local file of public-key certificates that the user trusts as OpenSSL is a set of Open Source cryptography libtaries\nstarting points for certification chain.\nincluding X.509 CA operation scripts and distributed\nFor example, popular browsers are distributed with an freely, such as a part of PKI package for either commerinitial file of trusted certificates, the starting points for cer- cial or non-commercial purpose.\nOpenPGP is the standard based on Pretty Good\ntification paths. The initial file is different between among\nthe each PKI architecture. In a hierarchical PKI, the ini- Privacy R (PGP R ) application which is developed by\nPGP R is provided as\ntial file is the root certificate in a hierarchical PKI. It is Philip Zimmermann [12].\nusually \"baked into\" the browsers with no decisions by commercial version and 'freeware' version for nonthe users to trust them. In a mesh PKI, it is the certificate commercial/non-governmental purposes only.\nThe specification of PGP is standardized as OpenPGP\nof the CA that issued the user's own certificate. And in\na trust-file PKI, any certificates including self-signed cer- by IETF OpenPGP Working Group. Today \"OpenPGP\ntificates accepted by the user can be the first public key in Message Format\" is defined in RFC2440 [3] and to be\nupdated [4]. The most popular OpenPGP implemenaa certification path.\n2\n\n\ftion is GnuPG (GNU Privacy Guard), developed by Free\nSoftware Foundation and maintained by Werner Koch\nof GUUG (German Unix Users Group). Either PGP or\nGnuPG has been known as email cryptography software\nfirstly, however they has become the general purpose data\nencryption tool, including key exchange over Internet,\ntrust computation, etc. In the following sections, we examine the only PKI part of OpenPGP.\nIt is worth to point out another possible architecture, as we sometimes take an closed binary question\nsuch as \"X.509 or OpenPGP, which is better?\", not as\n\"Which PKI will be the appropriate solution for different usage-scenarios?\". There exists another PKI standardized by IETF - SPKI (Simple Public Key Infrastructure). IETF SPKI Working Group finished its initial\nstandardization process and bring into the inter-operation\nstage [16, 10]. It is also called SPKI/SDSI as it is a joint\nforce with SDSI (Simple Distributed Security Infrastructure) research. SPKI is designed with distributed and scalable architecture in many aspects, i.e., no single root CA,\nno globally distinguished name, and flexible validity periods [1, 13].\nTable 2 shows the technical comparison of X.509,\nOpenPGP, and SPKI/SDSI based on the analysis by\nClarke [7].\n\nweb of trust.\n\nFigure 1: Hierarchical PKI and Web of Trust [5]\n\n4.2\n\nInternet Usage Scenarios\n\nOpenPGP has its own market which is different with\nX.509, and OpenPGP community has grown in a global\nInternet.\nThe most famous and critical use might be security\nalerts. FIRST (Forum of Incident Response and Security\nTeams) and its members including CERT(Computer\nEmergency ResponseTeam)/CC(Coordination Center)\nhave their official PGP/GnuPG public keys publicly\navailable [11], and have signed their alerts with their own\n4 Certification without Authority\nPGP/GnuPG key.\nUsenet, operated by volunteer NetNews managers,\n4.1 From Face-to-Face to Web of Trust\nis another example of the distributed network with\nWithout a certification authority, the problem of trusting OpenPGP PKI. The digital signature for Usenet control\nkeys arise to assess applicants before giving out certifi- commands should be signed with PGP keys of represented\ncates. In OpenPGP, there are no official mechanism for voluntary managers since 1990s [14].\ncreating certificates, no officail channel for acquiring and\ndistributing. It makes the process of certification into the\n4.3 What is the Web of Trust?\nface-to-face, ad hoc situation. Each end user is respobsible to decide which certificate (public key of an user) is OpenPGP provides key management and certificate sertrusted and accepted to be added into their local trust-file vices using local trust-file PKI. The more signature is ac(denoted \"keyring\" in PGP).\ncepted, the more trust-file generated. Figure 2 is an examThis certification process does not require a trusted, ple of a trust-file visualized the relashonship of OpenPGP\nmonitored registration authority or certification authority, signature. This graph illustrates who introduce the other\nhowever, it lacks scalability. So since PGP R 2.0 [15, or who meets with face-to-face, in other words, whose key\npp. 201\u2013203], \"web of trust\" model that PGP signer acts signed the others' public key. There are no central authoras an introducer between people had been supported.\nities but multiplexed indivisual relationships in a commuFigure 1 illustrates the model of hierarchical PKI and nity.\n3\n\n\f4.4\n\nGeorge E McNeal Jr (george)\n\nPGP Revocation Problem\n\nJohn Beck\nPaul L. Snyder\nBrian Epstein\nDavid Coe\n\nZachary C Whitley\n\nDavid M. Turner\n\nM. Jackson Wilkinson\n\nPete Foley\nElizabeth Krumbach\nMichael C. Toren (MCT)\nEric Allan Lucas\nJoseph B. Welsh (Work E\u2212Mail)\n\nChris Fearnley (Dare to be Na\u00efve)\n\nWalter C. Mankowski\n\nBill Jonas\n\nAdam Schaible (aka kb3edk)\n\nMike Joseph\nLeonard D. Rosenthol\n\nDarxus\n\ngabriel rosenkoetter\n\nMike Phillips\n\nMichael J. Leone\nMichael Bevilacqua\nKristin Hill\n\nIan Reinhart Geiser\nJason Nocks\n\nTony Dominello (Tony)\n\nKevin Mudrick (darkspur)\nJohn J Lavin Jr\n\nAlexander Shinn\n\nDanita M. Fries\n\nChris Beggy\n\nJesse P. Schu;tz\n\nJesse Paul Schultz (JPSchultz Consulting)\nCharles F. Peters II (Chuck Peters)\n\nChristophe Barbe\n\nJesse P. Schultz\nBrian P. Mohr\nMichael Hunter\n\nKam Salisbury (Network Alchemist)\n\nFigure 2: Visialized Web of Certificate [8]\n\nThe weakest link of OpenPGP PKI is the revocation of\npublic key [22, pp. 585\u2013586] [9, p. 309]. As there is no\nofficial channel for acquiring and distributing OpenPGP\npublic keys, there are no guarantee about how to tell everyone that your key is no longer valid.\nThe typical answer to this revocation problem of PGP is\nto use PGP public keyserver for distributing certification.\n\"Typically, to communicate that a certificate has been revoked, a signed note, called a key revocation certificate, is\nposted on PGP certificate servers, and widely distributed\nto people who have the key on their public keyrings. People wishing to communicate with the affected user, or use\nthe affected key to authenticate other keys, are warned\nabout the hazards of using that public key\" [7, pp. 56\u2013\n57]. However, there are few research on the PGP public\nkeyserver and usually the keyserver is not considered as\nthe part of OpenPGP PKI. In the following, this paper examines PGP keyserver as the part of OpenPGP PKI.\n\n5\n\nHowever, this graph is not a \"web of trust\" but just a\n\"web of certificates\". OpenPGP separate the trustworthy\nfrom validity of cerfiticate. For example, the amount of\ntrust of the introducer and unknown newcomer is different\nfor an OpenPGP user. Even if their certification is valid,\nthe issuer of the key is not an authority but the users own.\nSo OpenPGP users should be responsible on \"Whose keys\nshould be taken as valid but untrusted?\" [26, p. 81].\n\nRelated Works\n\nThere are several research fields related to OpenPGP public keyserver. The first is the study on the traditional PGP\npublic keyservers, the second is the integrated channel for\nOpenPGP key distribution, and the third is the combined\n\"web of trust\" with other PKI.\nA \"web of trust\" used in PGP is referred in several\nresearches including the peer-to-peer authentication [9],\ntrust computation [17, 5], and privacy enhanced technology [12]. However, there are few description on PGP keyserver. It might be because PGP keyserver mechanism is\ntoo simple. It is not a CA but just a pool of public keys.\nFrom users' viewpoint, PGP keyserver has a large amount\nof OpenPGP public keys that provide the interesting material for social analysis of network community. For example, OpenPGP keyserver developer Jonathan McDowell\nalso developed \"Experimental PGP key path finder\" [18]\nthat searches and displays the chain of certification between the users.\nAs OpenPGP's initial trust file is blank, the users have\nto start with a face-to-face certificate to exchange public keys. Though another initial file is provided via high\nintegrity channel. Global Internet Trust Register [2] is\n\nIn OpenPGP, users issue their signature to the other's\npublic key with their degree of trust. This is denoted \"trust\nsignature\" and represented as (trust level, trust amount)\nwith OpenPGP key management and certificate service.\nAn ordinary valid signed key is trust level 0, and The\nsigned key is asserted to be a valid trusted introducer is\nlevel 1. Level 2 means \"meta introducer\" or \"introducerof-introducer\" that its signed key is asserted to be trusted\nto issue level 1 trust signatures. (Generally, as the introducer is more trustworthy, a level n trust signature asserts\nthat a key is trusted to issue level n \u2212 1 trust signatures.)\nThe trust amount is in a range from 0\u2013255, and appointed\n60 for partial trust and 120 for complete trust [3, s.v.\n\"Trust Signature\"]. As OpenPGP distinguished the trust\nfrom validity, \"web of trust\" is also distinguished from\n\"web of certificates\".\n4\n\n\fa printed book that contains \"fingerprints\" (hash values\nof certificate) of the most important public keys (mainly\ncryptography experts who are likely to have signed many\nother keys in their respectice communities) [26, pp. 80\u2013\n81].\nOpenPGP PKI itself can be described as the superset of\nPKI [32], however, combining OpenPGP PKI with other\nauthentication system is challenging work in both theoretical and operational field. Formal study of trust relationship of PKI started in the late 1990s [17, 5] and GnuPG\ndevelopment version in December 2002 started to support\nits trust calculation with GnuPGP's trust signature.\nThe implementation of trust calculation is ongoing and\nusing large-scale \"web of trust\" (not \"web of certificates\")\nis not so popular outside of computer experts. On the\nother hands, using different types of PKI has become\nmore popular.\nIn the early work at MIT, PGP-signing service had been\ncombined with Kerberos CA system that does not have\npublic key cryptography [21]. Today, the hybrid system of OpenPGP and X.509 is both developed into some\nOpenPGP implementations. In 2001, German authorities\nBSI (Bundesamt f\u00fcr Sicherheit in der Informationstechnik, Germany's agency for information technology security) accept the \u00c4gypten project for Open Source implementation of governmental mail user agents Sphinx which\nsupports X.509v3, PKCS, LDAP, and OpenPGP [19].\nThe results of the open development are begun to imported to other commercial products in 2002\u20132003 [23].\nIn a same way, PGP Corporation also released PGP R version 8.0 as X.509-enabled application that can interoperate X.509 certificates and CAs [20].\n\nwith email and keys are managemented with PGP\ncommand.\nFor users, keyserver acts as an easy\nemail agent who receives any valid but untrusted\nkeys, then searches and provides the key to everyone.\nIn 1997, PGP Public KeyServer (pksd,\nhttp://www.mit.edu/people/marc/pks/)\nstarted by MIT student Marc Horowitz. Pksd uses a\ndatabase management system and has been working fine.\nThe database system is operated via email, CGI-interface\nfrom http server, and HKP - pksd's own communication\nprotocol over Hypertext Transfer Protocol (HTTP).\nIn 2003, David Shaw of GnuPG team proposed the\nOpenPGP HTTP Keyserver Protocol [24] based on\ntraditional HKP as the draft for Internet Standard.\nToday pksd has been working fine even if in global\ndistributed network. There are 10 or more syncronized\npublic keyservers in the world and the most of them are\nrunning with patched pksd. These public keyservers are\noperated by voluntary managers belong to organizations\nincluding MIT and Georgia Tech in United States,\nSURFnet in Netherlands, DFN-CERT in Germany,\nRedIRIS (IRIS-CERT) in Spain, JPNIC in Japan. Today they have more than 1,400,000 public keys entries\nand 3,000/day or more transactions between each sync\nsites. In 2000, SURFnet held the first PGP keyserver manager symposium [27] and the managers keep in touch with\neach other.\n\n6.2\n\nRevocation process and Keyserver\n\nAs public keyservers provides semi-official key distribution channel, keyserver adds powerful feature to\nOpenPGP PKI. Public keyservers can handle the PGP revocation problem that we described in section 4.4. Using\nkeyserver provides an answer to the question \"How do\nyou tell everyone that your key is no longer valid?\". User\nmay issue a suicide note (denoted as \"revocation signature\" in OpenPGP ) and post it to keyservers. Receiving\na valid revocation signature, keyserver updates the key to\nbe revoked. The update key with revocation signature is\nredistributed to the synchronized keyservers in the world,\nand finally PGP user updates their keyrings with the nearest keyserver. The updated key with valid revoked signature makes users's older key not to be used.\n\n6 OpenPGP Public Keyserver\nBefore describing our research, this section describes\nOpenPGP keyserver generally. Keyserver is not a CA.\nIt only pool anyone's public keys. Keyserver never issue\nany certificate for someone's public key but only provide\nit.\n\n6.1 Current Status\nThe first keyserver is developed at MIT in 1994\nby Brian A. LaMacchia. It exchange public keys\n5\n\n\f6.3 Current Keyserver Problem\n\nWhitten and Tygar [31] had ever pointed out some dangerous errors occured with past PGP clients' interface.\nUsers can connect to OpenPKSD with two kind of interfaces, OpenPGP client or CGI on WWW. Providing\nWWW interface, OpenPKSD must help users' recognization, judgement, and handling on OpenPGP public keys.\nOpenPKSD displays only 64bit KeyID to identify\nsomeone's public keys. Though some other servers calculate and display \"fingerprint\" of public keys before download it, it does not help users arare of risk using keyserver.\nAs keyserver is just a pool and not CA, users should check\nthe public key with their own. Moreover, it is easy to\nmake some faked keyserver by Man-in-the-Middle Attack, TCP hijacking, etc. It means that the fingerprint\nmust be calculated under user's (safe) machine and that is\nthe reason why OpenPKSD does not display fingerprint.\nOpenPKSD WWW interface provides additional feature to visualize subpackets of PGP keys. As OpenPKSD\nhas an expandable format with subpackets, it is very hard\nto understand the data structure inside this. Using pgpdump program, key packet visualizer that displays the\npacket format of OpenPGP and PGP R version 2.\nMany PGP users are familiar with this verification on\nadded keys, as in 2000, PGP R version 5.5.x to 6.5.3 had\na serious security hole that cannot detected with fingerprint verification. Then CERT/CC had alarted \"Check\ncertificates for ADKs [Additional Decryption Keys] before adding them to a keyring.\" [6] Pgpdump exactly visualizes these additional keys. With pgpdump, OpenPKSD\nhelps users to recognize the information of public key and\nany other added keys before downloading.\n\nToday's sisutation around PGP keyserver is beyond the\noriginal developers' idea, and current pksd also has some\nlimitations.\nFirstly, the implementations of pksd are not OpenPGPcompliant. OpenPGP [3] published in 1998 defines\ntwo versions of signature formats. (Version 3 provides basic OpenPGP signature information, while version 4 provides an expandable format with subpackets.)\nThese changes made traditional PGP applications notOpenPGP-compliant - not only PGP R [3, s.v. \"Implementation Nits\"] but also pksd. Today pksd does not fully\nsupport OpenPGP format.\nSeconary, the pksd does not scalability for global use.\nThough pksd has simple but strong dabatabase management system, it is neither soshisticated nor scalable compared with today's Internet server. For the matter, pksd\ncannot handle 1 billion keys and cannot accept such many\ntransactions as Yahoo! or eBay site. New design of\nOpenPGP public keyserver is required.\n\n7 OpenPKSD: Next Generation\nOpenPGP Public Keyserver\nWe introduce our next generation OpenPGP Public Keyserver project with a new architecture. We call it\nOpenPKSD ( OpenPGP Public KeyServer Daemon).\nIt is developed by one of the authors and funded\nby Japanese Information-technology Promotion Agency\n(IPA) in 2001\u20132002.\n\n7.3\n7.1 Server Design and Implementation\n\nPerformance and Future work\n\nOpenPKSD is implemented with Ruby language and\nPostgreSQL DBMS. Ruby is so-called \"scripting language\" and seemed not suitable for a quick response\nor large program development. However, OpenPKSD\nsucceeds not only the more compact code size but also\nquick response compared with pksd, by loading bit calculation modules such as CRC24 checksum written by\nC language [29]. Table 1 shows the performance of\nOpenPKSD version 0.2.8, non-cluster version, installed\n7.2 User Interface and Security\non PC. OpenPKSD version 0.2.8 is also working well at\nAs \"Web of trust\" depends on users' decision, user in- handling usual transaction between other PGP public keyterface is also important factor on security. For example, server described in section 6 since 2002.\nOpenPKSD supports OpenPGP subpacket format and\nworks as high-performance server with SQL backend.\nThe design of OpenPKSD oriented to not only highperformance, but also flexible extension capability and\neasy operation. We implemented OpenPKSD with Ruby\nand PostgreSQL backend [28].\n\n6\n\n\fCPU:\nHDD:\nMemory:\nOne key query:\n\nIntel Pentium4 1.6GHz\nIDE ATA100 7200rpm 60GB\nPC2100 768MB\n120ms average,\n72ms best,\n230ms worst.\n\n[2] R. J. Anderson, B. Crispo, J.-H. Lee, C. Manifavas, and\nV. Maty\u00e1\u0161 Jr., editors. Global Internet Trust Register. MIT\nPress, 1999 edition, Mar. 1999.\n[3] J. Callas, L. Donnerhacke, H. Finney, and R. Thayer.\nOpenPGP Message Format. Request For Comments, Nov.\n1998. RFC 2440 (Category: Standards Track) replaces\nRFC 1991, \"PGP Message Exchange Formats\".\n[4] J. Callas, L. Donnerhacke, H. Finney, and\nR. Thayer.\nOpenPGP Message Format.\nInternet Draft, May 2003.\nRevision of RFC 2440[3].\nhttp://www.ietf.org/internet-drafts/draft-ietf-openp\n(visited June 1, 2003).\n[5] G. Caronni. Walking the web of trust. In Proceedings of\nIEEE 9th International Workshops on Enabling Technologies: Infrastructure for Collaborative Enterprises (WET\nICE'00), pages 153\u2013158. IEEE Computer Press, 2000.\n[6] CERT/CC.\nPGP May Encrypt Data With Unauthorized ADKs. CERT Advisory CA-2000-18, 2000.\nhttp://www.cert.org/advisories/CA-2000-18.html\n(visited May 31, 2003).\n[7] D.\nE.\nClarke.\nSPKI/SDSI\nHTTP\nServer\n/\nCertificate\nChain\nDiscovery\nin\nSPKI/SDSI.\nMaster's thesis, MIT, Sept. 2001.\nhttp://theory.lcs.mit.edu/ \u0303cis/theses/clarke-masters\n(visited May 27, 2003).\n[8] Darxus@ChaosReigns.com.\nspringgraph.\nOnline\ndocument,\nMay\n2002.\nhttp://www.chaosreigns.com/code/springgraph/\n(visited May 27, 2003).\n[9] R. Dingledine, M. J. Freedman, and D. Molnar. Accountability. In A. Oram, editor, Peer-to-Peer: Harnessing the\nPower of Disruptive Technologies, chapter 16. O'Reilly &\nAssociates, Mar. 2001.\n[10] C. M. Ellison, B. Frantz, B. Lampson, R. Rivest,\nB. Thomas, and T. Yl\u00f6nen. SPKI Certificate Theory. Request For Comments, Sept. 1999. RFC 2693 (Status: Experimental).\n[11] FIRST.ORG.\nFIRST\nContact\nInformation.\nOnline\ndocument,\n2001.\nhttp://www.first.org/docs/contact.html\n(visited May 31, 2003).\n[12] S. Garfinkel. PGP: Pretty Good Privacy. O'Reilly & Associates, Dec. 1994.\n[13] R. Khare and A. Rifkin.\nWeaving a web\nof trust.\nWorld Wide Web Journal, 2(3),\nSummer 1997.\nOnline article available at\nhttp://www.w3journal.com/7/s3.rifkin.wrap.html\n(visited May 29, 2003).\n[14] D. C. Lawrence.\nAuthentication of Usenet\nGroup Changes.\nOnline document,\n1999.\n\nTable 1: OpenPKSD Performance\n\nForthcoming developers' version of OpenPKSD will\nsupport some clustering based on the reserch on the performance of cluster technology [30]. It will be published\nin 2003 and support the experimental HKP(keyserver protocol over http) balancer, keyserver cluster, and clustered\ndatabase.\n\n8 Summary\nIn this paper, we overlooked some PKI architectures. Using \"Web of Trust,\" OpenPGP PKI can help users to manage certification without CAs. However, there are the\nproblem on public key management, i.e., how to get the\nreceivers' public key, or, how to tell everyone that the public key is no longer valid. PGP keyserver is the solution\nto the problem.\nThough some PGP public keyservers have built a global\nPKI, traditional PGP keservers have some limitations. We\nintroduced OpenPKSD, newly-designed and OpenPGPsupported public keyserver project. OpenPKSD took its\nfirst step, works well in practice, and examining the cluster technology.\n\nAvailability\nOpenPKSD source code and documents are available under GNU General Public License (GPL) at\nhttp://www.openpksd.org/.\n\nReferences\n[1] C. Adams and S. Lloyd. Understanding Public-Key Infrastructure: Concepts, Standards, and Deployment Considerations. Macmillan Technical Publishing, 1999.\n\n7\n\n\f[15]\n\n[16]\n\n[17]\n\n[18]\n\n[19]\n\n[20]\n\n[21]\n\n[22]\n\n[23]\n\n[24]\n\n[25]\n\n[26]\n[27]\n\n[28] H. Suzuki.\nOpenPKSD: OpenPGP Pubftp://ftp.isc.org/pub/pgpcontrol/README.html\nlic Keyserver.\nPresentation slide,\n2002.\n(visited May 27, 2003).\nS. Levy. Crypto: How the Code Rebels Beat the Governhttp://openpksd.org/docs/RubyConf2002.pdf\nment, Saving Privacy in the Digital Age. Viking Penguin,\n(visited May 28, 2003). Presented at 2nd Annual InternaJan. 2001.\ntional Ruby Conference, held in Nov. 1\u20133, 2002, Seattle,\nN. Li. Local names in SPKI/SDSI. In Proceedings of 13th\nWA.\nIEEE Computer Security Foundations Workshop (CSFW- [29] H. Suzuki. OpenPKSD: Next Generation OpenPGP Pub13), pages 2\u201315. IEEE Computer Society, 2000.\nlic Keyserver implementation with Ruby (in Japanese).\nU. Maurer. Modeling a public-key infrastructure. In\nIn Proceedings of Software Symposium 2003, pages 162,\nE. Bertino, editor, Proceedings of 1996 European Sympo220\u2013223, Japan, July 2003. Software Engineers Associasium on Research in Computer Security (ESORICS' 96),\ntion.\nLecture Notes in Computer Science 1146, pages 325\u2013350. [30] J. Wang, Y. Tsutaya, N. Segawa, S. Yamane, Y. MuSpringer-Verlag, 1996.\nrayama, M. Miyazaki, and H. Suzuki. Approaches to balJ.\nMcDowell.\nExperimental\nPGP\nkey\nancing data load of shared-nothing clusters and their perpath\nfinder.\nOnline\ndocument,\n2002.\nformance comparison. In Proceedings of 9th International\nhttp://the.earth.li/ \u0303noodles/pathfind.html Conference on Parallel and Distributed Systems (ICPADS\n(visited May 31, 2003).\n2002), pages 293\u2013301. IEEE Press, Dec. 2002.\nKMail and mutt as Sphinx-clients for German authorities. [31] A. Whitten and D. Tygar.\nWhy Johnny can't\nNewsForge, 5 October 2001. Online article available at\nencrypt:\nA usability evaluation of PGP 5.0.\nhttp://www.newsforge.com/article.pl?sid=01/10/05/162238\nIn Proceedings of the 9th USENIX Security\n(visited May 27, 2003).\nSymposium, Aug. 1999.\nAlso available at\nPGP Corporation.\nUsing an X.509 PKI with\nhttp://www.usenix.org/publications/library/proceedin\nPGP R\n8.0:\nProtecting existing investments.\nmore\ndetailed\npresentation\nis\navailable\nat\nPGP Coporation\nWhite Paper,\nMay 2003.\nhttp://reports-archive.adm.cs.cmu.edu/anon/1998/abst\nhttp://www.pgp.com/products/whitepapers/PGP8X509.pdf\n(visited May 31, 2003).\n(visited July 1, 2003).\n[32] P. Zimmermann.\nWhy OpenPGP's PKI is better\nJ. I. Schiller and D. Atkins. Scaling the web of trust: Comthan an X.509 PKI. Online document, 27 Feb 2001.\nbining Kerberos and PGP to provide large scale authentihttp://www.openpgp.org/technical/whybetter.shtml\ncation. In Proceedings of USENIX 1995 Technical Confer(visited May 27, 2003).\nence on UNIX and Advanced Computing Systems, pages\n83\u201394. USENIX Association, 1995.\nB. Schneier. Applied Cryptography: Protocols, Algorithms, and Source Code in C. John Wiley & Sons, 2nd\nedition, 1995.\nS. Shankland. KDE Linux adds German flavor. ZDNet News, 31 January 2003. Online article available at\nhttp://zdnet.com.com/2100-1104-982816.html\n(visited May 27, 2003).\nD. Shaw.\nOpenPGP HTTP Keyserver Protocol (HKP).\nInternet Draft, Mar. 2003.\nhttp://www.ietf.org/internet-drafts/draft-shaw-openpgp-hkp-00.txt\n(visited May 28, 2003).\nR. W. Shirey. Internet Security Glossary. Request For\nComments, May 2000. RFC 2828 (Also FYI 36) (Status:\nInformational).\nF. Stajano. Security for Ubiquitous Computing. John Wiley & Sons, Feb. 2002.\nSURFnet.\nThe First PGP Keyserver Manager Symposium.\nOnline document, 2000.\nhttp://www.surfnet.nl/bijeenkomsten/pgp/\n(visited May 27, 2003).\n\n8\n\n\fX.509\n\nCA Characteristics:\nTrust Model:\n\nSignatures:\nCertificate Revocation:\nName Space:\nTypes of Certificates:\nName-to-Key binding:\n\nOpenPGP\n\nCA Characteristics:\n\nTrust Model:\nSignatures:\nCertificate Revocation:\n\nName Space:\nTypes of Certificates:\nName-to-Key binding:\n\nSPKI/ SDSI\n\nCA Characteristics:\n\nTrust Model:\n\nSignatures:\nCertificate Revocation:\nName Space:\nTypes of Certificates:\nName-to-Key binding:\n\nGlobal Hierarchy. There are commercial X.509 CAs.\nX.509 communities are built from the top-down.\nHierarchical Trust Model. Trust originates from a 'trusted'\nCA, over which the guardian may or may not have control.\nA requestor provides a chain of authentication from the\n'trusted' CA to the requestor's key.\nEach certificate has one signature, belonging to the issuer\nof the certificate.\nUses CRL(Certificate Revocation List)s\nGlobal\nName Certificates\nSingle-valued function: each global name is bound to exactly one key (assuming each user has a single publicprivate key pair).\nEgalitarian design. Each key can issue certificates.\nPGP communities are built from the bottom-up in a\ndistributed manner.\nWeb of Trust, file-based PKI.\nEach certificate can have multiple signatures; the first\nsignature belongs to the issuer of the certificate.\nA 'key revocation certificate,' suicide note is posted on\nPGP keyservers, and widely distributed to people who\nhave the compromised key on their public keyrings.\nGlobal\nName Certificates\nSingle-valued function: each global name is bound to exactly one key (assuming each user has a single publicprivate key pair).\nEgalitarian design. The principals are the public keys.\nEach key can issue certificates. SPKI/SDSI communities\nare built from the bottom-up in a distributed manner.\nTrust originates from the guardian. A requestor provides\na chain of authorization from the guardian to the\nrequestor's key. The infrastructure has a clean, scalable\nmodel for defining groups and delegating authority.\nEach certificate has one signature, belonging to the issuer\nof the certificate.\nAdvocates using short validity periods and Certificates of\nHealth.\nLocal\nName Certificates, Authorization Certificates\nMulti-valued function: each local name is bound to zero,\none or more keys (assuming each user has a single public\n-private key pair).\n\nTable 2: Comparison of X.509, OpenPGP, and SPKI/SDSI\n\n9\n\n\f"}