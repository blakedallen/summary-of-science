{"id": "http://arxiv.org/abs/cs/0701175v1", "guidislink": true, "updated": "2007-01-26T14:51:38Z", "updated_parsed": [2007, 1, 26, 14, 51, 38, 4, 26, 0], "published": "2007-01-26T14:51:38Z", "published_parsed": [2007, 1, 26, 14, 51, 38, 4, 26, 0], "title": "On the Software and Knowledge Engineering Aspects of the Educational\n  Process", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0701121%2Ccs%2F0701074%2Ccs%2F0701166%2Ccs%2F0701017%2Ccs%2F0701156%2Ccs%2F0701081%2Ccs%2F0701189%2Ccs%2F0701073%2Ccs%2F0701118%2Ccs%2F0701009%2Ccs%2F0701018%2Ccs%2F0701117%2Ccs%2F0701135%2Ccs%2F0701105%2Ccs%2F0701060%2Ccs%2F0701042%2Ccs%2F0701071%2Ccs%2F0701049%2Ccs%2F0701181%2Ccs%2F0701175%2Ccs%2F0701162%2Ccs%2F0701165%2Ccs%2F0701056%2Ccs%2F0701130%2Ccs%2F0701050%2Ccs%2F0701190%2Ccs%2F0701132%2Ccs%2F0701013%2Ccs%2F0701002%2Ccs%2F0701086%2Ccs%2F0701143%2Ccs%2F0701179%2Ccs%2F0701114%2Ccs%2F0701174%2Ccs%2F0701029%2Ccs%2F0701072%2Ccs%2F0701115%2Ccs%2F0701098%2Ccs%2F0701172%2Ccs%2F0701136%2Ccs%2F0701022%2Ccs%2F0701170%2Ccs%2F0701199%2Ccs%2F0701051%2Ccs%2F0701070%2Ccs%2F0701053%2Ccs%2F0701177%2Ccs%2F0701004%2Ccs%2F0701001%2Ccs%2F0701104%2Ccs%2F0701075%2Ccs%2F0701082%2Ccs%2F0701059%2Ccs%2F0701065%2Ccs%2F0701039%2Ccs%2F0701064%2Ccs%2F0701153%2Ccs%2F0701164%2Ccs%2F0701116%2Ccs%2F0701197%2Ccs%2F0701084%2Ccs%2F0701006%2Ccs%2F0701154%2Ccs%2F0701010%2Ccs%2F0701007%2Ccs%2F0701063%2Ccs%2F0701067%2Ccs%2F0701147%2Ccs%2F0701109%2Ccs%2F0701100%2Ccs%2F0701008%2Ccs%2F0701054%2Ccs%2F0701011%2Ccs%2F0701099%2Ccs%2F0701133%2Ccs%2F0701137%2Ccs%2F0701045%2Ccs%2F0701032%2Ccs%2F0701160%2Ccs%2F0701097%2Ccs%2F0701138%2Ccs%2F0108008%2Ccs%2F0108002%2Ccs%2F0108014%2Ccs%2F0108010%2Ccs%2F0108019%2Ccs%2F0108001%2Ccs%2F0108011%2Ccs%2F0108005%2Ccs%2F0108015%2Ccs%2F0108003%2Ccs%2F0108023%2Ccs%2F0108022%2Ccs%2F0108006%2Ccs%2F0108016%2Ccs%2F0108004%2Ccs%2F0108020%2Ccs%2F0108021%2Ccs%2F0108017%2Ccs%2F0108007%2Ccs%2F0108013&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "On the Software and Knowledge Engineering Aspects of the Educational\n  Process"}, "summary": "The Hellenic Open University has embarked on a large-scale effort to enhance\nits textbook-based material with content that demonstrably supports the basic\ntenets of distance learning. The challenge is to set up a framework that allows\nfor the production-level creation, distribution and consumption of content, and\nat the same time, evaluate the effort in terms of technological, educational\nand organizational knowledge gained. This paper presents a model of the\neducational process that is used as a development backbone and argues about its\nconceptual and technical practicality at large.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0701121%2Ccs%2F0701074%2Ccs%2F0701166%2Ccs%2F0701017%2Ccs%2F0701156%2Ccs%2F0701081%2Ccs%2F0701189%2Ccs%2F0701073%2Ccs%2F0701118%2Ccs%2F0701009%2Ccs%2F0701018%2Ccs%2F0701117%2Ccs%2F0701135%2Ccs%2F0701105%2Ccs%2F0701060%2Ccs%2F0701042%2Ccs%2F0701071%2Ccs%2F0701049%2Ccs%2F0701181%2Ccs%2F0701175%2Ccs%2F0701162%2Ccs%2F0701165%2Ccs%2F0701056%2Ccs%2F0701130%2Ccs%2F0701050%2Ccs%2F0701190%2Ccs%2F0701132%2Ccs%2F0701013%2Ccs%2F0701002%2Ccs%2F0701086%2Ccs%2F0701143%2Ccs%2F0701179%2Ccs%2F0701114%2Ccs%2F0701174%2Ccs%2F0701029%2Ccs%2F0701072%2Ccs%2F0701115%2Ccs%2F0701098%2Ccs%2F0701172%2Ccs%2F0701136%2Ccs%2F0701022%2Ccs%2F0701170%2Ccs%2F0701199%2Ccs%2F0701051%2Ccs%2F0701070%2Ccs%2F0701053%2Ccs%2F0701177%2Ccs%2F0701004%2Ccs%2F0701001%2Ccs%2F0701104%2Ccs%2F0701075%2Ccs%2F0701082%2Ccs%2F0701059%2Ccs%2F0701065%2Ccs%2F0701039%2Ccs%2F0701064%2Ccs%2F0701153%2Ccs%2F0701164%2Ccs%2F0701116%2Ccs%2F0701197%2Ccs%2F0701084%2Ccs%2F0701006%2Ccs%2F0701154%2Ccs%2F0701010%2Ccs%2F0701007%2Ccs%2F0701063%2Ccs%2F0701067%2Ccs%2F0701147%2Ccs%2F0701109%2Ccs%2F0701100%2Ccs%2F0701008%2Ccs%2F0701054%2Ccs%2F0701011%2Ccs%2F0701099%2Ccs%2F0701133%2Ccs%2F0701137%2Ccs%2F0701045%2Ccs%2F0701032%2Ccs%2F0701160%2Ccs%2F0701097%2Ccs%2F0701138%2Ccs%2F0108008%2Ccs%2F0108002%2Ccs%2F0108014%2Ccs%2F0108010%2Ccs%2F0108019%2Ccs%2F0108001%2Ccs%2F0108011%2Ccs%2F0108005%2Ccs%2F0108015%2Ccs%2F0108003%2Ccs%2F0108023%2Ccs%2F0108022%2Ccs%2F0108006%2Ccs%2F0108016%2Ccs%2F0108004%2Ccs%2F0108020%2Ccs%2F0108021%2Ccs%2F0108017%2Ccs%2F0108007%2Ccs%2F0108013&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The Hellenic Open University has embarked on a large-scale effort to enhance\nits textbook-based material with content that demonstrably supports the basic\ntenets of distance learning. The challenge is to set up a framework that allows\nfor the production-level creation, distribution and consumption of content, and\nat the same time, evaluate the effort in terms of technological, educational\nand organizational knowledge gained. This paper presents a model of the\neducational process that is used as a development backbone and argues about its\nconceptual and technical practicality at large."}, "authors": ["Th. Hadzilacos", "D. Kalles", "M. Pouliopoulou"], "author_detail": {"name": "M. Pouliopoulou"}, "author": "M. Pouliopoulou", "arxiv_comment": "Contains 21 sparse pages, 8 figures. Accepted for publication in\n  International Journal of Software Engineering and Knowledge Engineering\n  (IJSEKE). Keywords: Tools for interactive learning and teaching, Modelling,\n  Distance Learning", "links": [{"href": "http://arxiv.org/abs/cs/0701175v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/cs/0701175v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.SE", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.SE", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.DL", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/cs/0701175v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/cs/0701175v1", "journal_reference": null, "doi": null, "fulltext": "On the Software and Knowledge Engineering Aspects of\nthe Educational Process\nTHANASSIS HADZILACOS1,2, DIMITRIS KALLES1, and MARIA POULIOPOULOU1\n1 Hellenic Open University,\nLaboratory of Educational Material and Educational Methodology,\nSachtouri 23, 26222, Patras, Greece\n2 Research Academic Computer Technology Institute, Patras, Greece\nContact: kalles@eap.gr\nABSTRACT\nThe Hellenic Open University has embarked on a large-scale effort to enhance its textbook-based\nmaterial with content that demonstrably supports the basic tenets of distance learning. The\nchallenge is to set up a framework that allows for the production-level creation, distribution and\nconsumption of content, and at the same time, evaluate the effort in terms of technological,\neducational and organizational knowledge gained. This paper presents a model of the educational\nprocess that is used as a development backbone and argues about its conceptual and technical\npracticality at large.\nKeywords: Tools for interactive learning and teaching, Modelling, Distance Learning.\n\n1\n\nThe educational process as a complex system\n\nDepending on how one views the educational process there are distinct components of it\nwhich become eminent during the observation. Even if each observer does in fact\nglimpse all components of the process, the emphasis is always on some key ones.\nA teacher, for example, usually views the educational process as a set of lectures to be\ndelivered to an audience. Peripheral aspects of this view concern the distribution and\ngrading of assignments and examinations.\nA learner, on the other hand, may or may not attend lectures. Attending lectures is\nonly one of the activities that the learner has at his disposal. Studying, experimenting\nand collaborating are all activities that help hone a skill or develop knowledge about a\nsubject. Informal communication and collaboration among peers is a key aspect of a\nlearner's activities that a teacher may have little, if any, influence. In such a\ncollaboration context, views and homework solutions can be exchanged. Unless the\nteacher has explicitly designed an assignment to stimulate such communication, the\nindirect learning effects of the peer collaboration arrive by luck rather than by design.\nIf we consider teachers and learners to operate at roughly the same level of education,\nwe can move up one level and consider the educational system view. At that view, one\ndeals with providing the educational material at a suitable scale for the student\npopulation and setting and monitoring quality issues in the delivery of education (i.e.\nscope of educational activities, depth and breadth of material, academic prerequisites\n\n\facross subjects, attendance logistics, etc.). Note that, at that level, the delivery mode of\neducation (on-line, physical presence, etc.) is simply another component of that view.\nGoing a level down from teachers and learners one deals with educational material\nper se (books, instruments, software, etc.) and the development of blueprints or guides\nfor using that material (solution manuals, demo software activities, etc.). At that level\none would also address infrastructure issues.\nFor each of the above four views (and it should be obvious that the list is not\nexhausted here), it would be difficult to argue that they are unrelated. These views are\nnot (and should not be) orthogonal, but they help focus the attention of people active in\neach level towards a common background of experience, expectations, and norms that\nallows for the smooth exchange of information within the boundaries of that view and\nacross views. This trait of views directly puts them at the centre of both software and\nknowledge engineering disciplines.\nThe rest of this paper is structured in five sections. We first develop the rationale for\nusing views to describe complex systems and then argue why we believe a Learner's\nODL (Open-and-Distance-Learning) course is a useful generalization of important\naspects of the educational process. We then reflect on tools' families that would be fit\nfor the various stakeholders of the educational process. Then, we move to offer some\nguidelines and issues that need to be answered in an implementation context and\nconclude by presenting the targeted application domain, which is the mass-scale\ndevelopment of on-line material for a large university.\n\n2\n\nViews for complex systems\n\nIdentifying views within a process is a key to reducing its complexity and the human\nrace has a long history of doing so.\nWhen designing an artifact ancient craftsmen relied on their mastery and experience\nto deliver the final product. When artifacts became too large or production shifted from\nindividuals to groups (and, then, to factories), division of labor usually meant that\nspecialization occurred. Within the limits of specialization, practices and terminology\nemerged that would allow people who practiced an art to convey messages efficiently.\nAt some point artifacts became too large to easily communicate their complete\nmodels in verbatim or prose. Still, complexity had to be kept under control. Some\ncraftsmen began to abstract away from the full description. For example, ship builders\nstopped using miniature ships as a guide for the workers at the shipyard. Instead, they\nstarted using diagrams that would communicate the dimensions and the compartments of\nthe ship. Of course, these diagrams required that shipyard staff would be able to read\nthem: more importantly, they required that consensus existed for what was not included\nin the diagram. Thus formed a subset of people in that industry who were able to\ncommunicate effectively and efficiently among them, but still were able to work within\nthe whole production chain, which spanned from unskilled workers to ship-owners.\n\n\fWithin this short example lies perhaps the fundamental tenet of designing by views:\nviews should be simpler than the whole system and consistent with it.\nToday, civil engineering can be considered among the most mature of the building\nindustries, at least as far as views are concerned. We all know how to spot a door in an\napartment drawing: regardless of scale, language, measurement systems or else, we have\ncome to be able to understand a drawing as a model view of a building and we know that\nwe must look for rooms, windows, doors, etc. and are able to tell these components\napart. Other disciplines are following suit, slowly but steadily capitalizing on the fact\nthat successful views manage to limit complexity without sacrificing the final result.\nEvery view of a complex system is targeted at some stakeholder. A stakeholder is a\nperson, group of people, organization, or any other (suitably defined) entity, for which a\nparticular view is convenient, useful or essential. Also, in principle, each view is an\nabstraction of a common-for-all underlying model (the final ship, the building, the\noperating system). This model may logically exist per se, or it may be inferred by\nintegrating the individual views.\nIt is important to acknowledge the system stakeholders but supporting all of them in a\ndesign problem is a different task altogether, especially since it may be too difficult to\nagree on the underlying model. Some groups are served by highly-focused tools (for\nexample, CAD users or logistics personnel). Maintaining consistency among working\ngroups when the final system is inferred as a sum-of-parts (views), as opposed to a\ncomplete design serving as the reference base, may be very difficult. This will be usually\ndue to the tendency to replicate data across applications.\nAs an example, consider a timber processing industry. Data about the producer of\ntimber X may be useful to engineers who want to keep track on quality issues and\nspecifications. The same data may be useful to logistics because of transport costs.\nIdentifying the need for common data is usually a huge problem in itself and more often\nthan not observed a posteriori, after custom systems with inconsistent data formats and\ninterpretations have been developed and fielded.\nData is always tied to some application. Therefore, data replication across\napplications proves that there exists some common ground between business areas,\nwhich may seem unrelated at first sight. If we can confidently pin-point data interchange\nareas and analyze data usage trends, we can then extract knowledge about the modeled\nprocess. This has been practiced and widely publicized from a very narrow point of view\nto-date: web mining in web site generic usage analysis.\nThe approaches to integrating views a posteriori range in practice, but the underlying\nconcepts have given rise and prominence to the relatively recent field of ontologies [1].\nAs in earlier approaches [2; and references therein 1 ], it seems that the best way to tackle\nthe problem is to analyze independent views and come up with a generic enough model\nthat encompasses them, allowing for object translations between views [3].\n1\n\nIt is surprising to see that Google Scholar reports that the latest citation to [2] occurs\nin 1999, a year where the ontology field seems to have started commanding enough\nattention on its own.\n\n\fIn this paper, we contend that a conceptual artifact, termed a Learner's ODL course,\nis a generic enough model that is suitable for accommodating the most important\nworking practices of the educational model, while still allowing room for developing\nnew abstractions and still be supported by rudimentary technology. We are careful to\nnote that the educational process comprises of observable and explicitly initiated\nactivities, as opposed to the learning process which is ad hoc and may or may not be a\ndirect or indirect outcome of the educational process. After all, education does not\nnecessarily result in measurable learning.\n\n3\n\nUsing a Learner's ODL course to extend the book\n\nDeveloping an educational experience for a learner has at least two cornerstones: the\nexistence of educational material and the organization of activities with that material.\nMeaningful educational experiences are usually based on the shrewd organization of\ncarefully designed activities on quality educational material. The shrewd organization\nand the careful design necessarily cover some aspects of resource planning, such as how\nmuch time the learner is supposed to dedicate to the activity or, what is the sequence of\nactivities that will best attain the educational goal. They also cover some conventional\naspects of design, such as the target audience (sophisticated learners or beginners) or, the\ncombination of tools (software, equipment, simulations, etc.) to attain the goal. That\nway, educational experiences can be then turned into educational material themselves.\nA model imposes common language, organization, and disciplines in a community. It\nis also an excellent guide for tool development, since one will usually want to develop a\ntool that caters to the needs of a particular group of stakeholders in that community. One\nmay develop functionalities that a group of users deems essential based on these\ncommon principles; it will then follow directly where bridging points must exist for the\naccommodation of other groups of users. These bridging points will necessarily\ncorrespond to model components that are shared between views.\nTraditional educational activities employ paper based books. This results in several\nobvious but very important observations which follow from the static nature of\ntextbooks:\n\u2022 Students treat their books as read-only (apparently so). Moreover, unless authors\nare talented, books also determinedly convey the read-only message (\"you shall\nnot challenge the textbook\").\n\u2022 Authors treat their books as write-once (at best, they edit them if the books are\nsuccessful and put out a new edition after several years).\n\u2022 Books are printed and bound sequentially, so they are a sequential medium.\nExplicit provision is necessary for alternative paths within a textbook (usually, a\ncouple of paragraphs in the preface). The most successful alternative paths are\ndemonstrated in reference books (dictionaries, thesauri, encyclopedias).\no Alternative paths are usually meant as \"targeted to graduates\" or\n\"targeted to mathematically-inclined readers\". In this context,\n\n\falternative paths scarcely exist for the much more easily identified\nstudent types of \"I do not understand this paragraph\", \"I liked this\nparticular section; which reference should I review?\" (and, when they\ndo, they are usually not that specific but still very valuable).\n\u2022 From an informatics point of view, a textbook is both \"data\" and \"presentation\nguide\". As a field, we have come to a widely held belief that these two should be\northogonal.\n\u2022 Last, but not least, a textbook reflects the author's views and not the actions that\nthe learner has to perform while learning.\nFor example, in a conventional textbook, there is a mode for reading the text and\nthere is a mode for selectively browsing the content in search for what will aid us in\nsolving an exercise. Both activities make use of the same underlying asset, in a different\nfashion.\nA simple generalization of the textbook is to make \"data\" and \"presentation guide\"\northogonal. Digital platforms allow us to decouple presentation from data. That way, the\nsequential presentation of the educational material is simply one of the (numerous)\navailable compilations of that material.\nA further generalization refers to allowing the book to be re-written, by the author and\nby the students, while it is being studied and used. This suggests that efficient material\nupdating may have a much more profound effect in the learning practice. Admittedly,\ntoday's electronic environments at least offer a variety of updating, indexing and\nsearching mechanisms.\nA still further generalization refers to allowing the learning community to come\ntogether and to allow tutors to respond dynamically to learners' needs, possibly by\ndiscussing and possibly by providing feedback and additional material that will be\nreadily available for the next learners who take that course. This is not exotic\ntechnology; most conventional web sites of university courses already sport this feature,\nwhereas learning communities resort to asynchronous discussion forums for interaction\n(\"what did my co-learners think of that exercise\", \"how do I inform my students about a\nnew tool that supports their homework\", \"here's an exercise: spend as long as you wish\nnow, but make sure you can do it in five minutes before taking the exam\" could be\ntypical comments attached to material and learning activities).\nA subtler generalization refers to allowing the book to be used as a notepad, where\nscratch notes are taken, exercises are attempted, solutions are formed and tests are taken.\nBut, note that, also from a social point of view, we consider a printed book as something\nthat should be preserved as is; in students' used book exchanges, for example, higher\nprices are commanded for unused books. 2\nHowever, all the above generalizations can be in principle supported by digital\ntechnologies. If, using today's pervasive metaphor, we can envision a book as a web site,\n2\n\nThis happens for good reason! A densely commented book is of much higher\neducational value, yet the comments will usually be only appreciated by the student who\ntook them down at the first place.\n\n\fwe can support all the above features, if we take up the challenge to deal with the\ncomplexity of building such a rich-content, rich-interaction web site.\nExtending the book, as set out above, is the core concept of the Learner's ODL\ncourse. This paper shows that this is built around mature practices, concepts and\ntechnologies. However, it is left to us to glue all these components in a framework that\nmakes sense for all (or, at least, the most important) aspects of the educational process.\nTo see why it is intuitively appealing to merge these concepts, we now delve into a\n\"visual\" user-based exploration of the generalizations set out here.\n\n4\n\nA Learner's ODL course requirements for view integration\n\nLet us start with a tutor preparing an educational activity. A tutor needs a workbench,\nwhere available materials and tools can be combined to create a module that addresses\nsome specific course requirements (for example, instruction, issuing of exercises and\nhomework, etc.).\nFigure 1 shows a relatively comprehensive, yet intuitive interface for the tutor's\nworkbench. He will be able to draw together texts and exercises (and other assets) from\na suitably organized collection, and he will be able to bundle them together in the\ncontext of a learning activity, allowing for comments on how long a student is expected\nto spend on a particular item. This is a most important stage in distance learning from a\ntutor's point of view. Notwithstanding the ability of a talented teacher to address the\npace of a physical classroom, it is also a hallmark of good preparation in any tutoring\ncontext. Up to this point it is rather unimportant whether this workbench is physical (pen\nand paper and books) or digital, save for the indexing and searching facilities that a\ndigital artefact offers.\nAt this point a small detour is worthwhile. We stress the importance of designing\nlearning activities that place emphasis on what the learner is expected to do. We\nexplicitly stress that, although this workbench can be used to simply present\ncompilations of material, it is the structuring of the intended usage of the material that\ncreates the learning added value. In this sense, we concur with the view that technology\nis an excellent supporting tool for education, only when didactic issues are carefully\naddressed [4, 5]. However, we also stress that our model is capable of supporting both\ntutor-oriented and learner-oriented work. We claim that this is a result of the decision to\nfirst model the process as opposed to first designing the interaction; by setting the model\nwe may then explore interaction designs that are consistent with a master plan.\n\n\fActivities\n\nActivities\n1\nManuals\nWWW\nAssets\n\n2\n\n3\n\n4\n\nParagraph 3.4 of Manual X (15 min)\nText 412 (30 min)\nExercise 31 (15 min)\n\nTexts\nVideo\n\nExercise 76 (2 h)\n\nAudio\nImages\n\nExercises\n\nContents\n\nFigure 1: A tutor's basic workbench.\n\nIt is interesting to note that the above workbench also relates directly to a curriculum\ndesigner, who may prepare a collection of activities based on the collection of assets and\non the feedback received by collaborating tutors and students. This feedback is threefold: based on critique and comments about specific material and assets, based on tutorstudent interaction (also allowing tutor-tutor and student-student communication) and\nbased on new material that a tutor adds to the collection of assets.\nHowever, if we take the communication, feedback and updating mechanisms\nseriously, we must act digital. This can be accommodated by expanding the workbench\nwith some services, as shown in Figure 2.\nIt is exactly to this point that we have tied the data collection process referred to in\nsection 2. Feedback is both direct (user comments in prose) and indirect (key click\nlogging). Discussion is available by web linkage to an asynchronous discussion forum.\nAll that data is instantly available to the user who can review what comments have been\nmade at that point. Moreover, as data is collected, we can apply path detection and\nvisualization tools to observe traffic preferences as well as use the built-in mechanisms\nof forum tools.\n\n\fActivities\n\nActivities\n1\nManuals\nWWW\nAssets\n\n2\n\n3\n\n4\n\nParagraph 3.4 of Manual X (15 min)\nText 412 (30 min)\nExercise 31 (15 min)\n\nTexts\nVideo\n\nExercise 76 (2 h)\n\nAudio\n\nFeedback\nAdd content\nDiscussion\n\nImages\n\nExercises\n\nContents\n\nServices\n\nFigure 2: A tutor's workbench (with some services).\n\nThe workbench now also pertains to a material developer from the point of view of\ndelivering the individual exercises, texts and ground-level material that will be needed in\na course (photographs, videos, etc.). The add-content mechanism is useful both to the\ncasual material developer (a tutor who takes some time to write a new presentation) and\nto the professional one (who will probably write the equivalent of book chapters and\nseries of exercises).\nIt is also interesting to note that the new workbench is also a platform for students\nwho can see that their activities are designed collections of (implicit) tasks that are based\non a collection of assets and that numerous other ways exist for browsing or referencing\nthe repository of the educational material. However, students also need some form of\nlogging their progress and understanding their navigation of the course. To do so, a\ncouple of extra services are required to allow them to observe a course map as well as\nsee which part of the course map they have covered over a studying session (or, over a\nseries of such sessions). This can be accommodated by still expanding the workbench\nwith extra services, as shown in Figure 3; we also switch to referring to a \"user's\"\nworkbench as the underlying platform evolves to be more generic.\n\n\fActivities\n\nActivities\n1\nManuals\nWWW\nAssets\n\n2\n\n3\n\n4\n\nParagraph 3.4 of Manual X (15 min)\nText 412 (30 min)\nExercise 31 (15 min)\n\nTexts\nVideo\n\nCourse Map\nMy learning path\nFeedback\nAdd content\nDiscussion\n\nExercise 76 (2 h)\n\nAudio\nImages\n\nExercises\n\nServices\n\nContents\n\nFigure 3: A user's workbench (with extra services).\n\nMore subtly, the same platform is also fit for a publisher (as a business entity) or an\neditor (as an academic entity). They can both play the role of the curriculum designer in\ndelivering different (appropriately targeted) compilations of selected subsets of the\neducational material. That can be done using the same platform that the tutor uses to\nprepare an activity and that the student uses for interacting with the material and the\nlearning community for a particular subject.\nThe only missing item may be the access and usage rights policy, which is mostly of\nan administrative nature. A simple addition in the form of \"Credits\" should then suffice\nfor prototyping purposes; we now have a workable requirements specification at a high\nlevel and it is summarized in Figure 4. We also claim that this is simply a snapshot of a\nLearner's ODL course.\nActivities\nActivities\n1\nManuals\nWWW\nAssets\n\n2\n\n3\n\n4\n\nParagraph 3.4 of Manual X (15 min)\nText 412 (30 min)\nExercise 31 (15 min)\n\nTexts\nVideo\n\nCourse Map\nMy learning path\nFeedback\nCredits\nAdd content\nDiscussion\n\nExercise 76 (2 h)\n\nAudio\nImages\n\nExercises\n\nContents\n\nServices\n\nFigure 4: A user's workbench as a snapshot of a Learner's ODL course.\n\n\f5\n\nDesigning a Learner's ODL course with a graph-theoretic model\n\nWhy do we need a mathematical model of a Learner's ODL course? We believe it was a\nnecessary tool in our design approach because it helped formulate all important aspects\nof the educational process that we wanted to model and, then, seamlessly supported the\nsemantic annotation of student activities while allowing us the convenience of knowing\nthat graph-processing algorithms and software are a commodity.\nWe now elaborate on that computational model, which builds on top of some basic\ncomponents as shown below.\nA learning object is any piece of (multimedia) data or program whose purpose\n(intention) is to be used for learning. 3\nA learning object can be recursively defined as a set of learning objects.\nExamples of learning objects are the following: the text of Odyssey, MS Word,\nSketchpad, a video lecture, a set of multiple choice questions, a Euclidean geometry high\nschool textbook, an MS Powerpoint presentation of organic compounds.\nA learning task is a task whose purpose is learning.\nExamples of learning tasks are the following: read, solve an exercise, write a\nprogram, practice a musical instrument, draw a picture, design a database, make a\nsummary, think over, correct, argue for/against.\nA learning activity is an ordered pair: (learning object, learning task).\nExamples of learning activities are the following:\n\u2022 Write a program to add two numbers (learning task) using a C++ compiler\n(learning object)\n\u2022 Write down (type to the computer) what you hear (the learning object is a\ndigitized dictation) and then check the spelling errors (in fact the learning\nobject is the set {word processor, soundtrack, speller}).\nA learning environment is a directed labeled multigraph 4 (LA, P), where LA is a set\n(of vertices or, nodes) of learning activities and P is a bag (of edges) of labeled\nprecedents.\nExamples of labeled edges are the following:\n\u2022 From node LA5 to node LA15 \"if you found LA5 very easy to do\"\n\u2022 From node LA5 to node LA100 \"if you found LA5 very interesting\"\n\u2022 From node LA5 to node LA3 \"if you did not manage to complete the task of\nLA5 satisfactorily\"\nA reference node is (a learning activity that is) connected to all other nodes via\nbidirectional (unlabeled) edges.\n3\n\nThis can be enhanced with the usual definition and all metadata fields etc., but is not\nnecessary here.\n4\nA multigraph is a \"graph whose edges are are unordered pairs of vertices, and the\nsame pair of vertices can be connected by multiple edges\". In a multigraph \"edges are a\nbag, not a set\". A bag is essentially a set with duplicates allowed. For related definitions,\nsee http://www.nist.gov/dads/. For the rest of this paper, and for convenience reasons,\nwe will drop the term multigraph and use graph instead.\n\n\fExamples of reference nodes are the following:\n\u2022 Dictionary (to look up a word or phrase)\n\u2022 Calculator (to perform an arithmetic operation)\n\u2022 On-line discussion (to communicate with a tutor or with fellow learners)\nA learning experience (or, a learning trip) is a path (sequence of connected learning\nactivities) on the learning environment graph.\nA learner's note is a data structure attached to a specific node by a specific learner. A\nlearner's note includes structured data fields (learner/user id, timestamp, access rights,\netc.) and any (multimedia) data the learner chooses to attach (for example, files).\nExamples of learner's notes are the following:\n\u2022 The list of adjectives asked for in example B1.\n\u2022 A text that criticizes the effectiveness of the learning activity (node).\n\u2022 A new soundtrack of the dictation (left by a student who found the\npronunciation incomprehensible).\n\u2022 A comparison or a synopsis of the past 10 notes left on the current learning\nactivity (node).\nA learning environment communication system is a communication system (such as\nemail, discussion forum, etc.) with content consisting only of (pointers to) learner's\nnotes.\nExamples of such content are the following:\n\u2022 From a student to his teacher \"Here is the list of adjectives asked for in\nLA5\".\n\u2022 From a student to all other students \"I found LA12 particularly useful, you\ncan look up my comments in the note attached\".\n\u2022 From a teacher to his students \"Before attempting task LA112 read my note\nthere\".\nA learning activity control block is a snapshot of the usage of all the above in the\ncontext of a particular learner. It is a data structure containing (at least) the following\nfields:\n\u2022 learner/user id\n\u2022 timestamp\n\u2022 (pointer to) learning object\n\u2022 (pointer to) learning task\n\u2022 (pointer to) learner's note\n\n6\n\nOn the potential of graph-based design\n\nA short discussion is worthwhile here. Is a learning experience something that can be\ndesigned by a tutor? Maybe; we will delve into the issue of curriculum and course design\nlater, and to do so we will capitalize on our graph-theoretic representation that we set out\nin this section. However, we will stick to the term learning experience to designate how\na learner navigates through the learning environment. We will leave undefined, as of yet,\n\n\fthe granularity at which a learning experience is composed and allow maximum\nflexibility.\nIn this sense, a learning experience may well be either a single-session path; for\nexample, a learner dedicates a good solid hour to navigating the educational material\nalong a particular line.\nA learning experience may also be a sequence of such paths; for example, we usually\n\"remember\" where we stopped studying (for a short or long break), and can resume from\nthat point. A (metaphorically speaking) concatenation of such paths delivers a longer\npath that can still be a learning experience.\nHow about path overlaps? This is a more complicated issue. It does not seem to fit\nwell into our definition for learning experience, but, surely, we should be able to comeup with a definition that will allow us to bundle together navigation paths, associate\nthem with the time-stamps of particular visits (see definition of learner's note) and use\nthem as a representation of a coherent learning process.\nThe above considerations simply suggest that, after we get the initial graph-theoretic\nmodel fixed, there exist a set of computational processes that will allow us to define\narbitrarily complex layers of information based on the ground data. Such information\nlayers are, essentially, the response to the query \"how does the course evolve\". We now\ndelve into one fundamental such aspect; that of the detection of learning detours.\nWhat is a cycle in a learning environment? It is just a graph cycle and there will be\nmany of them, especially if we allow our graphs to be read-write, where new edges can\nbe added based on how an administrator (of a Learner's ODL course) establishes access\nrights. If we also think of the potential cycles created due to the existence of reference\nnodes we understand that a cycle in the learning environment will probably have limited\nsemantic importance.\nHowever, a cycle detected in a learning experience is a totally different issue. Such a\ncycle unequivocally designates a detour worth following with the intention to come back\nto the original point (in the worst case this suggests a top-down browsing of material).\nNow, detours during learning are quite common. We occasionally need to consult\nadditional resources while busy on a subject. Detecting cycles in learning experiences is,\ntherefore, indicative of critical learning activities that the learner considers worth\npursuing. Deleting cycles may deliver concise information about where the learner is\nheading (strategy) but studying them should deliver information about how the learner\ninteracts with the material (tactics).\nHaving seen how even the most trivial graph-processing task can deliver useful\ninformation, we turn to see whether more complex graph-theoretic concepts and\ncomputations may be used to deliver such information.\nCliques and connected components are usually employed as a means of\ndemonstrating graph properties that are related to localization; here, we use localization\nas a metaphor to show that some areas of a graph may be very close neighbours in the\nsense that one has to venture explicitly outside this area through very specific paths.\nThis is not a new concept. As a matter of fact it has been used in a very similar\ncontext, web site adaptation [6]. Automatically improving the organization and\n\n\fpresentation of web sites based on data mining usage logs is a burgeoning scientific field\nand one of the approaches is based on the PageGather algorithm [7]. Therein, a\nclustering method, called cluster mining, is employed,which works on an input of user\nsessions, represented as sets of visited web pages (note the correspondence with learning\nexperiences). PageGather then builds a graph by linking nodes (pages) with an edge\nwhenever co-occurrence of these pages is detected across some user sessions. Page\nclusters (or, similar learning experiences) can then be defined using either cliques or\nconnected components, with cliques considered to be more coherent and connected\ncomponents considered to be faster to compute and easier to find.\nThere exist legitimate arguments about the computational cost of graph-based\nalgorithms for inferring usage patterns [6]. However, if we can agree that our aposteriori analysis of the usage (by various users) of a Learner's ODL course will be\nused to improve its presentation and organization in a future version -thus, we do not\nfocus on providing immediately customizable content- [8] then these arguments are not\nrelated to our employing of the graph-based representation.\n\n7\n\nTechnological support for the requirements and the design\n\nA most basic implementation of the above, which can be also considered as view\nintegration, can be provided by hyperlinked files of conventional office-type applications\n(for example, MS Excel or MS Visio), where educational assets can be grouped together\nin repository-type worksheets. Assets can then be drawn to compile learning activities.\nSuch tools could possibly offer relatively smooth and short learning curves for data\ncollection and web publishing too, as they are widely used.\nFor example, Figure 5 shows how MS Visio could be used to design a learning\nenvironment graph, by adding hyperlinks in nodes and edges of the complete structure.\nRectangular shapes to the left correspond to assets (diagrams, text, etc.) whereas the oval\nshapes refer to learning tasks. When paired with assets these, then, correspond to\nactivities, which can be linked together to create a learning environment.\n\n\fFigure 5: A snapshot of a learning environment in MS Visio.\n\nAs another example, Figure 6 shows how MS Excel could be used to design a\nlearning environment. The leftmost column contains an indicator of the asset type. At the\nsame line, the learning activity is composed by an asset and by a learning task (allowing,\nof course, for some terseness in representation: when no task is shown for a text asset,\nthe implicit task is \"read\"). Indentation can be used to designate priorities and\npreferences; this allows transitions between activities to be tagged by attributes such as\n\"was it interesting?\", just as shown in Figure 5.\n\n\fThe divide-and-conquer approach ...\nLearning Task\nread\nwrite\nread\nwrite\nexerc\nexerc\nexerc\nread\nread\nobserve\nread\nprogramming\nexerc\nWWW\nWWW\nexerc\n\nLearning Object\n2.3.1 The divide-and-conquer approach\n... the first two paragraphs\nThink how you would apply the above principle to ....\n2.3.1 The divide-and-conquer approach\n... the next paragraph\nYou might want to rethink your previous answer\nThink about the following details\nHow do you split in two a sequence that has an odd number of elements?\nHow do you decide that a sub-problem is \"small enough\"?\nIs there an oprimal number of sequences?\n2.1 Insertion sort\n2.2 Analyzing algorithms\nPresentation by MIT OCW Algorithms Lecture 01\n2.3.1 The divide-and-conquer approach\n... the next three paragraphs\nWrite a program for mergesort (do not test it)\nWhat kind of input do you think you need for testing?\nSee an applet that demonstrates the mergesort algorithm\nSee a collection of sorting algorithms\nCan you argue which of the above algorithms are divide-n-conquer?\n\nFigure 6: A snapshot of a learning environment in MS Excel.\n\nAfter one settles on the issue of the implementation of the basic model, the issues of\nlinkage with external resources (such as discussion rooms, and other related\ncommunication-oriented applications) and operational deployment must be addressed.\nAt that point, one can opt to start integrating different technology offerings (having, of\ncourse, to address the overhead of inter-application communication) or adopting a\ngeneric platform approach that will allow for customization to retro-fit the\nimplementation of the model as well [4, 9]. The latter approach can be more scalable (for\nexample, portal offerings by commercial organizations) but the analysis to decide on\nsuch an investment may be too difficult to carry out effectively (hidden costs can surface\nquite easily and the steepness of the learning curve for developers may be expensive to\nestimate) [10, 11, 12].\nHowever, there also exist some in-between approaches; in these approaches one may\ndecide to use building blocks based on generic digital object identification schemes, such\nas DOI (http://www.doi.org) and expect that third-party providers (for example, one's\nuniversity) will supply the naming space, and couple these identification schemes with\ngeneric object ensemble builders, such as Fedora [13] and SCORM [14], which\naccommodate a disciplined format of digital object creation and manipulation.\nWeb usage mining for learning cycle detection is more complicated, however. Todate the most prominent web mining applications have been demonstrated in ecommerce, which are fundamentally different compared to e-learning applications [15].\nStill, as far as the underlying technologies are concerned, there is much room for\ntechnology transfer.\nThe analogy is clear: if there is a procedure for a course developer to track and\nidentify paths as sequences of visits to specific nodes (we liberally use the paradigm\ndescribed in Section 5), then this can lead to semantic information on the best possible\nadaptation of a course for a particular learner, or even to the reconstruction of the course\n(enriching some paths or removing \u2013apparently- useless content). Such flexibility is\n\n\fprimarily important in delivering network-based distance learning education but can also\nbe a useful tool in any e-learning setting.\nThe technical challenge is how to relate the relatively flat structure of web log files\nwith the apparently deep structure of learning experiences (therein, we note again the\nintroduction of cycles in experience paths). Our technical approach is to specify the\ncourse multi-graph in advance 5 , also confirming published experience [16] about the\ndifficulties of developing a data pre-processing environment in a distance learning\neducational domain.\nA coarse example of these concepts is shown below. 6 Figure 7 demonstrates the\ncourse multi-graph structure, as specified by the course designer (actually, it is a view of\nthe multi-graph where, for the sake of conciseness, we have only included learning\nactivities). Figure 8 shows a learner's path during a single learning session in the course,\nwith nodes being numbered according to the relative order of visit.\n\nFigure 7: A view of the course multi-graph.\n\n5\n\nWe embed php scripts interfacing to a mySql database in the course's html code.\nGraph visualization employs the aiSee tool (http://www.aisee.com). All text is\nGreek in Latin format.\n6\n\n\fFigure 8: A visitor's path through the course.\n\nWe currently use a slight variant of the above mechanism to implement the notepassing mechanism between students and tutors. However, for this particular aspect, we\nare also investigating the usefulness of open-source asynchronous discussion forum\nsystems (and the extent to which they might accommodate the multi-graph specification\nas opposed to programming it from scratch).\nOur organization has lately completed a major transition to a common commercial\nportal platform (IBM WebSphere and Lotus Domino) and has initiated the installation\nand operation of an open-source digital asset management system (DSpace) as well as a\nprofessional SCORM-compliant authoring tool (Trivantis Lectora). Deploying the\nnewly-developed courses on those platforms will facilitate the production and\nsophisticated analysis of log files, as outlined above. We stress that it is imperative, for\nany operational phase at a university scale, to be able to as much utilize existing\ntechnology and applications. This may sometimes mean that we must strive for our\nmodels to be designed with their implementation in mind (which is typical engineering\nbut not engineering as being taught). To that end we are also experimenting with the\npossibility of developing path detection as a web-service to be provided by a third party\nat the course deployment level as opposed to on-line log file analysis.\n\n8\n\nImplementation and deployment vis-\u00e0-vis the application domain\n\nWe have not yet addressed the above implementation issues holistically. A primary\nreason is that the whole concept is complex to communicate to all stakeholders at once,\n\n\fsince it represents a shift from the current status. The least difficult factor may well turn\nout to be the student view: indeed editors and tutors need to change their approach to\ndesigning. A second reason is that substantial resources are required for \"indoctrination\"\nat several levels: at the educational process level, at the tool level, at the support level,\nand beyond.\nWe have thus chosen the usual approach of pilots: by closely working with a diverse\nrange of tutors we hope to fine-tune the model representation as regards its\ncommunication to third parties. We expect that when non-conventional users of\neducational technology (unfortunately but not surprisingly, that also includes IT\ninstructors) manage to feel at ease with some development services, then these services\n(tools and support) may be ready for prime time.\nTo achieve this consensus we are also addressing one problem at a time. As opposed\nto a bundling approach, we develop, in-parallel, several (template) Learner's ODL\ncourses. Each one aims to focus on implementing the basic model along a particular\naxis. For instance, one axis is concerned with using a Learner's ODL course as an asset\nrepository across collaborating groups (this is akin to indexing already developed\nlearning objects, learning activities and reference nodes of the model presented in\nSection 5). Another axis is concerned with providing the asset repository and guiding the\ndevelopment of a Learner's ODL course towards the development of new learning\nactivities with clearly identified learner actions \u2013 see Figure 6 for an example (this is\nakin to developing learning objects, learning activities and reference nodes of the model\npresented in Section 5, with special emphasis on the role of learning tasks in the context\nof a learning activity). A third approach aims at enhancing already deployed web-based\nmaterial with a collaborative learning mechanism \u2013 this is done by designing and\nimplementing navigation path detection and visualization (in essence, implementing the\naspects of a learning experience, a learner's note and a learning environment\ncommunication system of the model presented in Section 5, as shown in Figure 7 and in\nFigure 8).\nAddressing one problem at a time allows us to test different aspects of the concept\nwith different groups. Admittedly, using the same test groups for various\nimplementations, or the same implementation aspects with various group, would\nprobably result in a more robust methodology but we have chosen our approach in order\nto receive as much feedback as soon as possible. In this sense, rudimentary\nimprovements are always incorporated and each course builds on next. The really\nimportant stake [5] is to convince as many potential authors (tutors) as possible to\nparticipate and to devote time to the collective material and course development process.\nStreamlining a process that is known to work at the laboratory level so that it can\nwork efficiently at mass production level is well known in established areas of\nengineering (productionizing). However, in educational technology we are often faced\nwith the situation where small experiments (always successful by their very nature: a\nmotivated educationalist is bound to succeed where directly involved) fail to scale up to\nany significant degree. Moreover, large-scale \"educational\" technology is more often\nthan not poor in substance.\n\n\fSetting up a software product line is a challenging undertaking itself [17], yet in the\nrealm of educational content we usually need to address the issues of the platforms and\nthe content as a combination, making the whole effort even more difficult. While\naddressing our key goal, designing a process targeted at the average tutor, we have also\nthe following engineering issues to address, so that all stakeholders are well served:\n\u2022 Facilitate editing and archiving.\n\u2022 Allow for multiple dissemination channels.\n\u2022 Take into account the scalability of results depending on hardware and\nexperience available (else: utilize better tools when available but do not depend\non them for a result).\n\u2022 Allow for unforeseen medium-term changes in technology.\n\n9\n\nConclusions\n\nOpen Universities, such as the Hellenic Open University, are conceived with a large\nnumber of students as a target and must therefore use mature, available and reliable\ntechnologies for their educational materials. Sometimes this can become very restrictive,\nleading to books and TV alone, but gradually the technology tide starts making\nalternative offerings more cost-effective. We have gradually embarked on e-learning\ninitiatives, spanning from virtual classrooms, to discussion forums and, now, on to the\nmass-scale development of complementary on-line material.\nThe piecewise development and deployment of Learner's ODL courses, as set out\nabove, has had a significant result as of now: it has reinforced that practical relevance of\nthe underlying theoretical model, since we have been able with relatively low effort to\npublish those model aspects that were deemed important for each user group. Scaling the\nnumber of groups, the type of groups and the size of groups are all actions that have to\nbe scheduled as we are moving out of the laboratory and into the users' offices.\nIn this paper we have argued about the importance of a simple underlying model that\nwill capture the software and knowledge engineering aspects of the educational process.\nWhy did we not use a different model? Actually we did. The Excel example was our first\nimplementation attempt at attracting fellow tutors to the didactical merits of explicitly\nstating learning tasks and expected time for related activities. Note that these very tutors\nmay well be excellent when addressing an audience; it is their skills at developing\ndistance learning material that we aim to further develop. So, after all, we first used a\ntabular model, which was the easiest to communicate. But the approach matured in a\nway not unlike database design. While most of us will probably still find it easier to\ndiscuss database implementation issues in terms of tables, especially when discussing\nsuch things with practice-honed non-IT people, we still have to revert to conceptual\nmodelling to describe the semantic richness of our applications.\nThus, taking into account that we need to also address the needs of tutors with limited\nIT skills, the careful selection of tools for the initial compilation and development of\nlearning activities is always a key factor in our decisions.\n\n\fIn that sense, we believe that our key contribution is the bridging of design richness\nand implementation practicalities in the context of a very large scale project of distance\nlearning digital educational material. Of course, we do need to find a way to bridge the\ngap with large-scale top-down efforts, such as Learning Design 7 . However, we feel that\nsimilar situations will be common in the context of almost all organizations developing\ndigital educational content and our experience might shape the eventual shift in how\nother learning institutions conduct their educational tasks at a distance.\n\n10 References\n1. B. Chandrasekaran, J.R. Josephson, and V.R. Benjamins, \"What Are Ontologies and Why Do\nwe Need Them\", IEEE Intelligent Systems, 14 (1), 1999, pp. 20-26.\n2. J. Lee, and T.W. Malone, \"Partially Shared Views: A Scheme for Communicating among\nGroups that Use Different Type Hierarchies\", ACM Transactions on Information Systems, 8\n(1), 1990, pp. 1-26.\n3. G. Falquet , C-L. Mottaz-Jiang, and J-C. Ziswiler. \"Ontology Based Interfaces to Access a\nLibrary of Virtual Hyperbooks\", European Conference on Digital Libraries, Bath (UK),\nSeptember 2004.\n4. T. Hampel, and R. Keil-Slawik, \"sTeam: Structuring Information in Team\u2013Distributed\nKnowledge Management in Cooperative Learning Environments\", Journal on Educational\nResources in Computing, 1 (2), Summer 2001, Article #3, pp. 1-27.\n5. E. Errington, \"The impact of teacher beliefs on flexible learning innovation: some practices and\npossibilities for academic developers\", Innovations in Education and Teaching International,\n41 (1), 2004, pp. 39-47.\n6. D. Pierrakos, G. Paliouras, C. Papatheodorou, and C.D. Spyropoulos, \"Web usage mining as a\ntool for personalization: a survey\", User Modeling and User-Adapted Interaction, 13 (4), 2003.\n7. M. Perkowitz, and O. Etzioni, \"Adaptive Web Sites\", Communications of the ACM, 43 (8),\n2000.\n8. M. Franke, and A. Geyer-Schulz, \"Automated Indexing with Restricted Random Walks on\nLarge Document Sets\", European Conference on Digital Libraries, Bath (UK), September\n2004.\n9. A.R. Trindade, H. Carmo, and J. Bidarra, \"Current Developments and Best Practice in Open and\nDistance Learning\", International Review of Research in Open and Distance Learning, 1 (1),\n2000.\n10. M. Smith, R. Rodgers, J. Walker, and, R.Tansley. \"DSpace: a Year in the Life of an Open\nSource Digital Repository\", European Conference on Digital Libraries, Bath (UK), September\n2004.\n11. N. Mc Lean. \"The Ecology of Repository Services: A Cosmic View\", European Conference\non Digital Libraries, Bath (UK), September 2004.\n12. G. Henry. \"Connexions: An Alternative Approach to Publishing\", European Conference on\nDigital Libraries, Bath (UK), September 2004.\n13. C. Lagoze, S. Payette, E. Shin, and C. Wilper, \"Fedora: An Architecture for Complex Objects\nand their Relationships\", Journal of Digital Libraries, special issue on Complex Objects, (to\nappear) 2005.\n14. ADL Technical Team, Sharable Content Object Reference Model (SCORM) 2004 2nd Edition,\nAdvanced Distributed Learning, 2004.\n\n7\n\nhttp://www.imsglobal.org/\n\n\f15. O.R. Zaiane, \"Web Usage Mining for a Batter Web-Based Learning Environment\",\nConference on Advanced Technology for Education, Banff (Alberta, Canada), June 2001, pp.\n60-64.\n16. C.G. Marquardt, K. Becker, and D.D. Ruiz, \"A Pre-Processing Tool for Web Usage Mining in\nthe Distance Education Domain\", International Database Engineering and Applications\nSymposium, 2004.\n17. P. Clements, and L. Northrop, Software Product Lines, Addison-Wesley, 2002.\n\n\f"}