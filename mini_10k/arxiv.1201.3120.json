{"id": "http://arxiv.org/abs/1201.3120v3", "guidislink": true, "updated": "2012-10-01T15:04:45Z", "updated_parsed": [2012, 10, 1, 15, 4, 45, 0, 275, 0], "published": "2012-01-15T20:37:19Z", "published_parsed": [2012, 1, 15, 20, 37, 19, 6, 15, 0], "title": "Ranking hubs and authorities using matrix functions", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1201.5442%2C1201.5094%2C1201.0470%2C1201.6472%2C1201.5152%2C1201.6036%2C1201.6630%2C1201.3707%2C1201.2719%2C1201.4757%2C1201.1134%2C1201.0347%2C1201.0499%2C1201.0420%2C1201.5216%2C1201.4091%2C1201.0465%2C1201.1715%2C1201.5140%2C1201.3375%2C1201.3119%2C1201.4288%2C1201.1417%2C1201.1588%2C1201.6359%2C1201.0066%2C1201.0929%2C1201.3586%2C1201.5028%2C1201.0441%2C1201.4599%2C1201.0505%2C1201.2620%2C1201.1283%2C1201.2345%2C1201.1911%2C1201.4060%2C1201.3738%2C1201.3999%2C1201.1574%2C1201.3576%2C1201.0935%2C1201.3690%2C1201.4248%2C1201.5482%2C1201.3904%2C1201.3501%2C1201.6042%2C1201.5103%2C1201.6407%2C1201.5672%2C1201.4881%2C1201.2421%2C1201.4454%2C1201.0271%2C1201.5632%2C1201.0206%2C1201.1512%2C1201.1009%2C1201.0366%2C1201.5488%2C1201.5934%2C1201.0696%2C1201.5547%2C1201.3847%2C1201.6004%2C1201.1475%2C1201.1222%2C1201.6524%2C1201.1274%2C1201.1844%2C1201.0037%2C1201.1538%2C1201.1318%2C1201.3120%2C1201.0114%2C1201.5566%2C1201.1776%2C1201.4069%2C1201.0728%2C1201.2196%2C1201.1176%2C1201.5408%2C1201.3045%2C1201.0816%2C1201.2706%2C1201.1163%2C1201.0955%2C1201.3905%2C1201.4631%2C1201.0483%2C1201.0259%2C1201.5159%2C1201.2515%2C1201.6298%2C1201.0798%2C1201.6279%2C1201.2510%2C1201.1111%2C1201.4461%2C1201.3504&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Ranking hubs and authorities using matrix functions"}, "summary": "The notions of subgraph centrality and communicability, based on the\nexponential of the adjacency matrix of the underlying graph, have been\neffectively used in the analysis of undirected networks. In this paper we\npropose an extension of these measures to directed networks, and we apply them\nto the problem of ranking hubs and authorities. The extension is achieved by\nbipartization, i.e., the directed network is mapped onto a bipartite undirected\nnetwork with twice as many nodes in order to obtain a network with a symmetric\nadjacency matrix. We explicitly determine the exponential of this adjacency\nmatrix in terms of the adjacency matrix of the original, directed network, and\nwe give an interpretation of centrality and communicability in this new\ncontext, leading to a technique for ranking hubs and authorities. The matrix\nexponential method for computing hubs and authorities is compared to the well\nknown HITS algorithm, both on small artificial examples and on more realistic\nreal-world networks. A few other ranking algorithms are also discussed and\ncompared with our technique. The use of Gaussian quadrature rules for\ncalculating hub and authority scores is discussed.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1201.5442%2C1201.5094%2C1201.0470%2C1201.6472%2C1201.5152%2C1201.6036%2C1201.6630%2C1201.3707%2C1201.2719%2C1201.4757%2C1201.1134%2C1201.0347%2C1201.0499%2C1201.0420%2C1201.5216%2C1201.4091%2C1201.0465%2C1201.1715%2C1201.5140%2C1201.3375%2C1201.3119%2C1201.4288%2C1201.1417%2C1201.1588%2C1201.6359%2C1201.0066%2C1201.0929%2C1201.3586%2C1201.5028%2C1201.0441%2C1201.4599%2C1201.0505%2C1201.2620%2C1201.1283%2C1201.2345%2C1201.1911%2C1201.4060%2C1201.3738%2C1201.3999%2C1201.1574%2C1201.3576%2C1201.0935%2C1201.3690%2C1201.4248%2C1201.5482%2C1201.3904%2C1201.3501%2C1201.6042%2C1201.5103%2C1201.6407%2C1201.5672%2C1201.4881%2C1201.2421%2C1201.4454%2C1201.0271%2C1201.5632%2C1201.0206%2C1201.1512%2C1201.1009%2C1201.0366%2C1201.5488%2C1201.5934%2C1201.0696%2C1201.5547%2C1201.3847%2C1201.6004%2C1201.1475%2C1201.1222%2C1201.6524%2C1201.1274%2C1201.1844%2C1201.0037%2C1201.1538%2C1201.1318%2C1201.3120%2C1201.0114%2C1201.5566%2C1201.1776%2C1201.4069%2C1201.0728%2C1201.2196%2C1201.1176%2C1201.5408%2C1201.3045%2C1201.0816%2C1201.2706%2C1201.1163%2C1201.0955%2C1201.3905%2C1201.4631%2C1201.0483%2C1201.0259%2C1201.5159%2C1201.2515%2C1201.6298%2C1201.0798%2C1201.6279%2C1201.2510%2C1201.1111%2C1201.4461%2C1201.3504&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The notions of subgraph centrality and communicability, based on the\nexponential of the adjacency matrix of the underlying graph, have been\neffectively used in the analysis of undirected networks. In this paper we\npropose an extension of these measures to directed networks, and we apply them\nto the problem of ranking hubs and authorities. The extension is achieved by\nbipartization, i.e., the directed network is mapped onto a bipartite undirected\nnetwork with twice as many nodes in order to obtain a network with a symmetric\nadjacency matrix. We explicitly determine the exponential of this adjacency\nmatrix in terms of the adjacency matrix of the original, directed network, and\nwe give an interpretation of centrality and communicability in this new\ncontext, leading to a technique for ranking hubs and authorities. The matrix\nexponential method for computing hubs and authorities is compared to the well\nknown HITS algorithm, both on small artificial examples and on more realistic\nreal-world networks. A few other ranking algorithms are also discussed and\ncompared with our technique. The use of Gaussian quadrature rules for\ncalculating hub and authority scores is discussed."}, "authors": ["Michele Benzi", "Ernesto Estrada", "Christine Klymko"], "author_detail": {"name": "Christine Klymko"}, "author": "Christine Klymko", "arxiv_comment": "28 pages, 6 figures", "links": [{"href": "http://arxiv.org/abs/1201.3120v3", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1201.3120v3", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "math.NA", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "math.NA", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.NA", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.SI", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "physics.soc-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "05C50, 15A16, 65F60, 90B10", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1201.3120v3", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1201.3120v3", "journal_reference": "Linear Algebra and its Applications, 438 (2013), pp. 2447-2474", "doi": null, "fulltext": "RANKING HUBS AND AUTHORITIES USING\nMATRIX FUNCTIONS\n\narXiv:1201.3120v3 [math.NA] 1 Oct 2012\n\nMICHELE BENZI\u2217 , ERNESTO ESTRADA\u2020 , AND CHRISTINE KLYMKO\u2021\nAbstract. The notions of subgraph centrality and communicability, based on the exponential of\nthe adjacency matrix of the underlying graph, have been effectively used in the analysis of undirected\nnetworks. In this paper we propose an extension of these measures to directed networks, and we apply\nthem to the problem of ranking hubs and authorities. The extension is achieved by bipartization, i.e.,\nthe directed network is mapped onto a bipartite undirected network with twice as many nodes in order\nto obtain a network with a symmetric adjacency matrix. We explicitly determine the exponential of\nthis adjacency matrix in terms of the adjacency matrix of the original, directed network, and we give\nan interpretation of centrality and communicability in this new context, leading to a technique for\nranking hubs and authorities. The matrix exponential method for computing hubs and authorities\nis compared to the well known HITS algorithm, both on small artificial examples and on more\nrealistic real-world networks. A few other ranking algorithms are also discussed and compared with\nour technique. The use of Gaussian quadrature rules for calculating hub and authority scores is\ndiscussed.\nKey words. hubs, authorities, centrality, communicability, matrix exponential, directed networks, digraphs, bipartite graphs, HITS, Katz, PageRank, Gauss quadrature\nAMS subject classifications. 05C50, 15A16, 65F60, 90B10.\n\n1. Introduction. In recent years, the study of networks has become central\nto many disciplines [5, 8, 9, 15, 16, 36, 37, 38]. Networks can be used to describe\nand analyze many different types of interactions, from those between people (social\nnetworks), to the flow of goods across an area (transportation networks), to links\nbetween websites (the WWW graph), and so forth. In general, a network is a set of\nobjects (nodes) and the connections between them (edges). Often, research is focused\non determining and describing important structural characteristics of a network or\nthe interactions among its components.\nOne common question in network analysis is to determine the most \"important\"\nnodes (or edges) in the network, also called node or vertex (edge) centrality. The\ninterpretation of what is meant by \"important\" can change from application to application. Due to this, many different measures of centrality have been developed. For\nan overview, see [8]. A closely related notion is that of rank of a node in a network.\nThere exist a number of definitions and algorithms for computing rankings; see, e.g.,\n[23, 31, 30, 32, 33, 41] for up-to-date overviews.\nThe main notion of node centrality considered in this paper, subgraph centrality,\nwas introduced by Estrada and Rodr\u0131\u0301guez-Vel\u00e1zquez in [20]. We refer readers to [20]\nfor the motivation behind this notion and for its name; see also the review article\n\u2217 Department of Mathematics and Computer Science, Emory University, Atlanta, Georgia 30322,\nUSA (benzi@mathcs.emory.edu). The work of this author was supported by National Science Foundation grant DMS1115692.\n\u2020 Department of Mathematics and Statistics and Institute of Complex Systems, University of\nStrathclyde, Glasgow G1 1XQ, UK (ernesto.estrada@strath.ac.uk). The work of this author was\nsupported in part by the New Professor's Fund, University of Strathclyde, and by the project \"Mathematics of Large Technological Evolving Networks (MOLTEN)\" funded by the Engineering and Physical Sciences Research Council and by the Research Councils UK Digital Economy programme, grant\nref. EP/I016058/1.\n\u2021 Department of Mathematics and Computer Science, Emory University, Atlanta, Georgia 30322,\nUSA (cklymko@emory.edu). The work of this author was supported in part by the Laney Graduate\nSchool of Arts and Sciences at Emory University and by the National Science Foundation.\n\n1\n\n\f2\n\nM. Benzi, E. Estrada, and C. Klymko\n\n[19], and the discussion in section 4. The interpretation of centrality described in\n[19] applies mostly to undirected networks. However, many important real-world\nnetworks (the World Wide Web, the Internet, citation networks, food webs, certain\nsocial networks, etc.) are directed. One goal of this paper is to extend the notions\nof centrality and communicability described in [17, 19] to directed networks, with an\neye towards developing new ranking algorithms for, e.g., document collections, web\npages, and so forth. We further compare our approach with some standard algorithms,\nsuch as HITS (see [29]) and a few others. Methods of quickly determining hub and\nauthority rankings using Gauss-type quadrature rules are also discussed.\n2. Basic notions. Here we briefly review some basic graph-theoretic notions;\nwe refer to [13] for a comprehensive treatment. A graph G = (V, E) is formed\nby a set of nodes (vertices) V and edges E formed by unordered pairs of vertices.\nEvery network is naturally associated with a graph G = (V, E) where |V | is the\nnumber of nodes in the network and E is the collection of edges between objects,\nE = {(i, j) | there is an edge between node i and node j}. The degree di of a vertex i\nis the number of edges incident to i.\nA directed graph, or digraph G = (V, E) is formed by a set of vertices V and\nedges E formed by ordered pairs of vertices. That is, (i, j) \u2208 E 6\u21d2 (j, i) \u2208 E. In the\ncase of digraphs, which model directed networks, there are two types of degree. The\nin-degree of node i is given by the number of edges which point to i. The out-degree\nis given by the number of edges pointing out from i.\nA walk is a sequence of vertices v1 , v2 , . . . , vk such that for 1 \u2264 i < k, there is an\nedge between vi and vi+1 (or a directed edge from vi to vi+1 in the case of a digraph).\nVertices and edges may be repeated. A walk is closed if v1 = vk . A path is a walk\nconsisting only of distinct vertices.\nA graph G is connected if every pair of vertices is linked by a path in G. A digraph\nis strongly connected if for any pair of vertices vi and vk there is a walk starting at vi\nand ending at vk . A digraph is weakly connected if the graph obtained by disregarding\nthe orientation of its edges is connected. Unless otherwise specified, every digraph\nin this paper is simple (unweighted with no multiple edges or loops and connected).\nNote, however, that most of the techniques and results in the paper can be extended\nwithout difficulty to more general digraphs, in particular weighted ones.\nThe adjacency matrix of a graph is a matrix A \u2208 R|V |\u00d7|V | defined in the following\nway:\n\u001a\n1, if (i, j) is an edge in G,\nA = (aij ); aij =\n0, else.\nUnder the conditions imposed on G, A has zeros on the diagonal. If G is an\nundirected graph, A will be a symmetric matrix and the eigenvalues will be real. In\nthe case of digraphs, A is not symmetric and may have complex (non-real) eigenvalues.\n3. Kleinberg's HITS algorithm. Here we briefly recall the classical Hypertext\nInduced Topics Search (HITS) algorithm, first introduced by J. Kleinberg in [29]. This\nalgorithm provides the motivation for the extension of subgraph centrality to directed\ngraphs given in section 5.\n3.1. The basic iteration. The HITS algorithm is based on the idea that in the\nWorld Wide Web, and indeed in all document collections which can be represented by\ndirected networks, there are two types of important nodes: hubs and authorities. Hubs\nare nodes which point to many nodes of the type considered important. Authorities\n\n\f3\n\nRanking hubs and authorities using matrix functions\n\nare these important nodes. From this comes a circular definition: good hubs are those\nwhich point to many good authorities and good authorities are those pointed to by\nmany good hubs.\nThus, the HITS ranking relies on an iterative method converging to a stationary\nsolution. Each node i in the network is assigned two non-negative weights, an authority\nweight xi and a hub weight yi . To begin with, each xi and yi is given an arbitrary\nnonzero value. Then, the weights are updated in the following ways:\nX\nX\n(k)\n(k)\n(k\u22121)\n(k)\nfor k = 1, 2, 3...\n(3.1)\nxj\nand yi =\nyj\nxi =\nj:(i,j)\u2208E\n\nj:(j,i)\u2208E\n\nP (k)\nP (k)\nThe weights are then normalized so that j (xj )2 = 1 and j (yj )2 = 1.\nThe above iterations occur sequentially and it can be shown that, under mild\nconditions, both sequences of vectors {x(k) } and {y (k) } converge as k \u2192 \u221e. In\npractice, the iterative process is continued until there is no significant change between\nconsecutive iterates.\nThis iteration sequence shows the natural dependence relationship between hubs\nand authorities: if a node i points to many nodes with large x-values, it receives a\nlarge y-value and, if it is pointed to by many nodes with large y-values, it receives a\nlarge x-value.\nIn terms of matrices, the equation (3.1) becomes: x(k) = AT y (k\u22121) and y (k) =\n(k)\nAx , followed by normalization in the 2-norm. This iterative process can be expressed as\nx(k) = ck AT Ax(k\u22121) and y (k) = c\u2032k AAT y (k\u22121) ,\n\n(3.2)\n\nwhere ck and c\u2032k are normalization factors. A typical choice for the inizialization\nvectors x(0) , y (0) would be the constant vector\n\u221a\n\u221a\n\u221a\nx(0) = y (0) = [1/ n, 1/ n, . . . , 1/ n],\nsee [21]. Hence, HITS is just an iterative power method to compute the dominant\neigenvector for AT A and for AAT . The authority scores are determined by the entries\nof the dominat eigenvector of the matrix AT A, which is called the authority matrix\nand the hub scores are determined by the entries of the dominant eigenvector of\nAAT , called the hub matrix. Recall that the eigenvalues of both AT A and AAT are\nthe squares of the singular values of A. Also, the eigenvectors of AT A are the right\nsingular vectors of A, and the eigenvectors of AAT are the left singular vectors of A.\n3.2. HITS reformulation. In a digraph the adjacency matrix A is generally\nnonsymmetric, however, the two matrices used in the HITS algorithm (AT A and\nAAT ) are symmetric. Note that, setting\n\u0012\n\u0013\n0 A\nA=\n,\nAT 0\na symmetric matrix is obtained. Now,\n\u0012\n\u0013\nAAT\n0\n2\nA =\n;\n0\nAT A\n\n3\n\nA =\n\n\u0012\n\n0\nAT AAT\n\n=\n\n\u0012\n\nAAT A\n0\n\n\u0013\n\n.\n\nIn general,\n2k\n\nA\n\n=\n\n\u0012\n\n(AAT )k\n0\n\n0\n(AT A)k\n\n\u0013\n\n;\n\n2k+1\n\nA\n\n0\n(AT A)k AT\n\nA(AT A)k\n0\n\n\u0013\n\n.\n\n\f4\n\nM. Benzi, E. Estrada, and C. Klymko\n\nApplying HITS\nthis\u0013matrix A, AT = A so AT A = AAT = A2 and introducing\n\u0012 to(k)\ny\nthe vector u(k) =\nfor k = 1, 2, 3, . . ., equation (3.2) becomes\nx(k)\nu(k) = A2 u(k\u22121) =\n\n\u0012\n\nAAT\n0\n\n0\nAT A\n\n\u0013\n\nu(k\u22121) ,\n\n(3.3)\n\nfollowed by normalization of the two vector components of u(k) so that each has 2norm equal to 1. Now, if A is an n \u00d7 n matrix, A is 2n \u00d7 2n and vector u(k) is in\nR2n . The first n entries of u(k) correspond to the hub rankings of the nodes, while\nthe last n entries give the authority rankings. Under suitable assumptions (see the\ndiscussion in [32, Chapter 11.3]), as k \u2192 \u221e the sequence {u(k) } converges to the\ndominant nonnegative eigenvector of A, which yields the desired hub and authority\nrankings.\nHence, in HITS only information obtained from the dominant eigenvector of A\nis used. It is natural to expect that taking into account spectral information corresponding to the remaining eigenvalues and eigenvectors of A may lead to improved\nresults.\nAmong the limitations of HITS, we mention the possible dependence of the rankings on the choice of the initial vectors x(0) , y (0) , see [21] for examples of this, and\nthe fact that HITS hub/authority rankings tend to be \"degree-biased\", i.e., they are\nstrongly correlated with the out-/in-degrees of the corresponding nodes [14]. The\nlatter property is in fact shared by most eigenvector-based rankings; for a discussion\nof this phenomenon in the case of scale-free graphs, see [35].\n4. Subgraph centralities and communicabilities. In [19], the authors review several measures to rank the nodes in an undirected network A based on the use\nof matrix functions, such as the matrix exponential eA . The subgraph centrality [20] of\nnode i is given by [eA ]ii and the communicability [17] between nodes i and j (i 6= j) is\ngiven by [eA ]ij . Nodes i corresponding to higher values of [eA ]ii are considered more\nimportant than nodes corresponding to lower values. Large values of [eA ]ij indicate\nthat information flows more easily between nodes i and j than between pairs of nodes\ncorresponding to lower\nPnvalues of the same quantity. The Estrada index of the graph is\ngiven by Tr (eA ) = i=1 [eA ]ii . This index, which provides a global characterization\nof a network, is analogous to the partition function in statistical mechanics and plays\nan important role in the study of networks at the macroscopic level: quantities such\nas the natural connectivity, the total energy, the Helmholtz free energy and the entropy\nof a network can all be expressed in terms of the Estrada index [18].\nConsider the power series expansion of eA ,\neA = I + A +\n\nA3\nAk\nA2\n+\n+ *** +\n+ ***\n2!\n3!\nk!\n\n(4.1)\n\nFrom graph theory, it is well known that if A is the adjacency matrix of an undirected\ngraph, [Ak ]ij = [Ak ]ji counts the number of walks of length k between nodes i and\nj. Thus, the subgraph centrality of node i, [eA ]ii , counts the total number of closed\nwalks starting at node i, penalizing longer walks by scaling walks of length k by the\n1\nfactor k!\n. The communicability between nodes i and j, [eA ]ij , counts the number of\n1\n.\nwalks between nodes i and j, again scaling walks of length k by a factor of k!\nA\nIt is worth mentioning that normalization of the diagonal entries of e by Tr (eA )\nyields a probability distribution on the nodes of the network, which can be given\n\n\fRanking hubs and authorities using matrix functions\n\n5\n\nthe following interpretation: the ith diagonal entry of eA /Tr (eA ) is the probability\nof selecting any weighted self-returning (closed) walk that starts and ends at node i\namong all the weighted self-returning walks that start at any node and return to the\nsame node. The weights used (factorial penalization) ensure that the shortest walks\nreceive more weight than the longer ones: hence, the subgraph centrality of node i is\nproportional to the probability of finding a random walker walking \"nearby\" node i.\nAlthough the matrix exponential is certainly well-defined for any matrix, whether\nsymmetric or not, the interpretation of the notion of subgraph centrality for directed\nnetworks can be problematic. To see this, consider the directed path graph consisting\nof n nodes, with edge set E = {(1, 2) , (2, 3) , . . . , (n \u2212 1, n)} and adjacency matrix\n\uf8eb\n\n0\n0\n..\n.\n\n\uf8ec\n\uf8ec\n\uf8ec\nA=\uf8ec\n\uf8ec\n\uf8ed 0\n0\n\n1\n0\n..\n.\n\n0\n1\n..\n.\n\n***\n***\n..\n.\n\n0\n0\n\n0\n0\n\n***\n***\n\n0\n0\n..\n.\n\n\uf8f6\n\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7.\n\uf8f7\n1 \uf8f8\n0\n\n(4.2)\n\nThe entries of eA are given by\n[eA ]ij =\n\n\u001a\n\n1/(j \u2212 i)!,\n0,\n\nif j \u2265 i,\nelse.\n\nIn particular, the diagonal entries of eA are all equal to 1. Therefore, it is impossible to distinguish any of the nodes from the others on the basis of this centrality\nmeasure; yet, it is clear that the first and last node are rather special, and certainly\nmore \"peripheral\" (less \"central\") than the other nodes. Also, we note that the probabilistic interpretation given above for undirected graphs is no longer meaningful for\nthis example. Part of the problem, of course, is that the path digraph contains no\nclosed walks. In the next section we show one way to extend the notion of subgraph\ncentrality to digraphs that is immune from such shortcomings, and correctly differentiates between nodes in the example above. (On the other hand, it is interesting\nto note that the interpretation of the off-diagonal entries of eA in terms of communicabilities is straightforward for the directed path. All entries of eA below the main\ndiagonal are zero, reflecting the fact that information can only flow from a node to\nhigher-numbered nodes. Also, the entries of eA decay rapidly away from the main\ndiagonal, reflecting the fact that the \"ease\" of communication between a node and a\nhigher numbered one decreases rapidly with the distance.)\nAnother issue when extending the notions of subgraph centrality and communicability to directed graphs is that computational difficulties may arise. While the\ncomputations involved do not pose a problem for small networks, many real-world\nnetworks are large enough that directly computing the exponential of the adjacency\nmatrix is prohibitive. In [2], techniques for bounding and estimating individual entries\nof the matrix exponential using Gaussian quadrature rules are discussed; see also [6]\nand section 9 below. The ability to find upper and lower bounds for the entries requires that the matrix be symmetric, thus these bounds cannot be directly computed\nusing the adjacency matrix of a directed network. Again, these difficulties can be\ncircumvented using the approach discussed in the next section.\n\n\f6\n\nM. Benzi, E. Estrada, and C. Klymko\n\n5. An extension to digraphs. Although the techniques described in [2] cannot\nbe directly applied to non-symmetric matrices, setting\n\u0012\n\u0013\n0 A\nA=\n(5.1)\nAT 0\nproduces a symmetric matrix A and, thus, upper and lower bounds of individual entries of eA can be computed. In Proposition 1 below we relate eA to the underlying\nhub and authority structure of the original digraph. By B \u2020 we denote the Moore\u2013\nPenrose generalized inverse of matrix B.\nProposition 1. Let A be as described in equation (5.1). Then,\n\uf8eb\n\u0010\u221a\n\u0011\n\u0010\u221a\n\u0011\u2020\n\u0011 \uf8f6\n\u0010\u221a\nT\nT\nT\ncosh\nA\nAA\nA A sinh\nA A \uf8f7\n\uf8ec\neA = \uf8ed\n\u0010\u221a\n\u0010\u221a\n\u0011 \u0010\u221a\n\u0011\u2020\n\u0011\n\uf8f8.\ncosh\nsinh\nAT A\nAT A AT\nAT A\nProof. Let A = U \u03a3V T be the SVD of the\n\u0012 original\u0013(non-symmetric)\n\u0012\n\u0013 \u0012 Tadjacency\n\u0013\nU 0\n0 \u03a3\nU\n0\nmatrix A. Then, A can be decomposed as A =\n.\n0 V\n\u03a3 0\n0 VT\nHence,\n\u0012\n\u0013\n\u0012\n\u0013\u0012 T\n\u0013\nU 0\n0 \u03a3\nU\n0\neA =\nexp\n.\n(5.2)\n0 V\n\u03a3 0\n0 VT\nNow,\nexp\n\n=\n\n\u0012\n\n\u0012\n\n0\n\u03a3\n\n\u03a3\n0\n\n\u0013\n\ncosh(\u03a3)\n0\n\n= cosh\n\n\u0012\n\n0\ncosh(\u03a3)\n\n0\n\u03a3\n\n\u0013\n\n+\n\n\u03a3\n0\n\u0012\n\n\u0013\n\n+ sinh\n\n0\nsinh(\u03a3)\n\n\u0012\n\n0\n\u03a3\n\n\u03a3\n0\n\nsinh(\u03a3)\n0\n\n\u0013\n\u0013\n.\n\nThus,\nexp\n\n\u0012\n\n0\n\u03a3\n\n\u03a3\n0\n\n\u0013\n\n=\n\n\u0012\n\ncosh(\u03a3) sinh(\u03a3)\nsinh(\u03a3) cosh(\u03a3)\n\n\u0013\n.\n\nPutting together equations (5.2) and (5.3),\n\u0012\n\u0013\u0012\n\u0013\u0012 T\nU 0\ncosh(\u03a3) sinh(\u03a3)\nU\neA =\n0 V\nsinh(\u03a3) cosh(\u03a3)\n0\n\u0011\n\u0010\u221a\nT\nAA\ncosh\n\uf8ec\n=\uf8ed\n\u0011 \u0010\u221a\n\u0011\u2020\n\u0010\u221a\nsinh\nAT A\nAT A AT\n\uf8eb\n\n(5.3)\n\n0\nVT\n\n\u0013\n\n\u0010\u221a\n\u0011\u2020\n\u0011 \uf8f6\n\u0010\u221a\nT\nT\nA\nA A sinh\nA A \uf8f7\n\u0010\u221a\n\u0011\n\uf8f8.\ncosh\nAT A\n\nThe identities involving the off-diagonal blocks can be easily checked using the SVD\nof A.\n\n\fRanking hubs and authorities using matrix functions\n\n7\n\n5.1. Interpretation of diagonal entries. In the context of undirected networks, the interpretation of the entries of the matrix exponential in terms of subgraph\ncentralities and communicabilities is well-established, see e.g. [19]. In the case of directed networks and eA , things are not as clear. The network behind A can be thought\nof as follows: take the vertices from the original network A and make two copies of\nthem, V and V \u2032 . Then, undirected edges exist between the two sets based on the\nfollowing rule: E \u2032 = {(i, j \u2032 )| there is a directed edge from i to j in the original network}.\nThis creates a bipartite graph with 2n nodes: 1, 2, . . . , n, n + 1, n + 2, . . . , 2n. We\ndenote by V (A) this set of nodes. The use of bipartization to treat rectangular and\nstructurally unsymmetric matrices is of course standard in numerical linear algebra.\nIn the undirected case, each node had only one role to play in the network: any\ninformation that came into the node could leave by any edge. In the directed case,\nthere are two roles for each node: that of a hub and that of an authority. It is unlikely\nthat a high ranking hub will also be a high ranking authority, but each node can still\nbe seen as acting in both of these roles. In the network A, the two aspects of each\nnode are separated. Nodes 1, 2, . . . , n in V (A) represent the original nodes in their\nrole as hubs and nodes n + 1, n + 2, . . . , 2n in V (A) represent the original nodes in\ntheir role as authorities.\nGiven a directed network, an alternating walk of length k, starting with an outedge, from node v1 to node vk+1 is a list of nodes v1 , v2 , ..., vk+1 such that there exists\nedge (vi , vi+1 ) if i is odd and edge (vi+1 , vi ) if i is even:\nv1 \u2192 v2 \u2190 v3 \u2192 * * *\nAn alternating walk of length k, starting with an in-edge, from node v1 to node vk+1\nin a directed network is a list of nodes v1 , v2 , ..., vk+1 such that there exists edge\n(vi+1 , vi ) if i is odd and edge (vi , vi+1 ) if i is even:\nv1 \u2190 v2 \u2192 v3 \u2190 * * *\nFrom graph theory (see also [11]), it is known that [AAT A . . .]ij (where there are k\nmatrices being multiplied) counts the number of alternating walks of length k, starting\nwith an out-edge, from node i to node j, whereas [AT AAT . . .]ij (where there are k\nmatrices being multiplied) counts the number of alternating walks of length k, starting\nwith an in-edge, from node i to node j. That is, [(AAT )k ]ij and [(AT A)k ]ij count the\nnumber of alternating walks of length 2k.\nIn the original network A, if node i is a good hub, it will point to many good\nauthorities, which will in turn be pointed at by many hubs. These hubs will also point\nto many authorities, which will again be pointed at by many other hubs. Thus, if i\nis a good hub, it will show up many times in the sets of hubs described above. That\nis, there should be many even length alternating walks, starting with an out-edge,\n1\n, these walks can be\nfrom node i to itself. Giving a walk of length 2k a weight of (2k)!\ncounted using the (i, i) entry of the matrix\nI+\n\nAAT AAT\n(AAT )k\nAAT\n+\n+ ***+\n+ ***\n2!\n4!\n(2k)!\n\nLetting A = U \u03a3V T be the SVD of A, this becomes:\n\u0012\n\u0013\n\u03a32\n\u03a34\n\u03a32k\nU I+\n+\n+ *** +\n+ * * * UT\n2!\n4!\n(2k)!\n\n\f8\n\nM. Benzi, E. Estrada, and C. Klymko\n\n\u221a\n= U cosh(\u03a3)U T = cosh( AAT ) .\nThe hub centrality of node i (in the original network) is thus given by\n\u221a\n[eA ]ii = [cosh( AAT )]ii .\nThis measures how well node i transmits information to the authoritative nodes in\nthe network.\nSimilarly, if node i is a good authority, there will be many even length alternating\nwalks, starting with an in-edge, from node i to itself. Giving a walk of \u221a\nlength 2k a\n1\nweight of (2k)!\n, these walks can be counted using the (i, i) entry of cosh( AT A).\nHence, the authority centrality of node i is given by\n\u221a\n[eA ]n+i,n+i = [cosh( AT A)]ii .\nIt measures how well node i receives information from the hubs in the network.\nNote that the traces of the two diagonal blocks in eA are identical, so each accounts\nfor half of the Estrada index of the bipartite graph. Also, recalling the well-known\nfact that the eigenvalues of A are \u00b1\u03c3i where \u03c3i denotes the singular values of A, we\nhave\nTr (eA ) =\n\nn\nX\ni=1\n\ne\u03c3i +\n\nn\nX\ni=1\n\ne\u2212\u03c3i = 2\n\nn\nX\n\ncosh (\u03c3i ),\n\ni=1\n\nan identity that can also be obtained directly from the expression for eA given in\nProposition 1.\nReturning to the example of the directed path graph with adjacency matrix A\ngiven by (4.2), one finds that using the diagonal entries of eA to rank the nodes\ngives node 1 as the least authoritative node, and node n as the one with the lowest\nhub ranking, with all the other nodes being tied. Thus we see that, while eA fails\nto differentiate between the nodes of this graph, using eA yields a very reasonable\nhub/authority ranking of the nodes.\n5.2. Interpretation of off-diagonal entries. Although not used in the remainder of this paper, for the sake of completeness we give here an interpretation of\nthe off-diagonal entries of eA . As we will see, this interpretation is rather different\nfrom the one usually given for the off-diagonal entries of eA , and provides information\nof a different nature on the structure of the underlying graph.\nIn discussing the off-diagonal entries of A, there are three blocks\u221ato consider.\nT\nFirst, there are the off-diagonal entries of the upper-left block,\n\u221a cosh( AA ), then\nT\nthere are the off-diagonal entries of the lower-right block, cosh( A A). Finally, there\n\u0010\u221a\n\u0011\u2020\n\u0011\n\u0010\u221a\nis the off-diagonal block, A\nAT A sinh\nAT A (the fourth block in eA being its\ntranspose).\n\u221a\nFrom section 5.1, [eA ]ij = [cosh( AAT )]ij , 1 \u2264 i, j \u2264 n, counts the number\nof even length alternating walks, starting with an out-edge, from node i to node j,\n1\n. When i 6= j, these entries measure\nweighting walks of length 2k by a factor of (2k)!\nhow similar nodes i and j are as hubs. That is, if nodes i and j point to many of the\nsame nodes, there will be many short even length alternating walks between them.\nThe hub communicability between nodes i and j, 1 \u2264 i, j \u2264 n, is given by\n\u221a\n[eA ]ij = [cosh( AAT )]ij\n\n\fRanking hubs and authorities using matrix functions\n\n9\n\nThis measures how similar nodes i and j are in their roles as hubs. That is, a larger\nvalue of hub communicability between nodes i and j indicates that they point to many\nof the same authorities. In other words, they point to nodes which are authorities on\nthe same subjects.\n\u221a\nSimilarly, [eA ]n+i,n+j = [cosh( AT A)]ij , 1 \u2264 i, j \u2264 n, counts the number of\neven length alternating walks, starting with an in-edge, from node i to node j, also\n1\n. When i 6= j, these entries measure\nweighing walks of length 2k by a factor of (2k)!\nhow similar the two nodes are as authorities. If i and j are pointed at by many of the\nsame hubs, there will be many short even length alternating walks between them.\nThe authority communicability between nodes i and j, 1 \u2264 i, j, \u2264 n, is given by\n\u221a\n[eA ]i+n,j+n = [cosh( AT A)]ij\nThis measures how similar nodes i and j are in their roles as authorities. That is, a\nlarger value of authority communicability between nodes i and j means that they are\npointed to by many of the same hubs and, as such, are likely to contain information\non the same subjects.\n\u221a\nLet us now consider the off-diagonal blocks of A. Here, [sinh( AT A)]ij counts\nthe number of odd length alternating walks, starting with an out-edge, from node i to\n1\nnode j, weighing walks of length 2k+1 by (2k+1)!\n. This measures the communicability\nbetween node i as a hub and node j as an authority.\nThe hub-authority communicability between nodes i and j (that is, the communicability between node i as a hub and node j as an authority) is given by:\n[eA ]i,n+j = [A\n\n= [sinh\n\n\u0010\u221a\n\u0011\u2020\n\u0011\n\u0010\u221a\nAT A sinh\nAT A ]ij\n\n\u0010\u221a\n\u0011 \u0010\u221a\n\u0011\u2020\nAT A\nAT A AT ]ji = [eA ]n+j,i .\n\nA large hub-authority communicability between nodes i and j means that they are\nlikely in the same \"part\" of the directed network: node i tends to point to nodes that\ncontain information similar to that on which node j is an authority.\n5.3. Relationship with HITS. As described in 3.2, the HITS ranking of nodes\nas hubs and authorities uses only information from the dominant eigenvector of A.\nHere we show that when using the diagonal of eA , we exploit information contained\nin all the eigenvectors of A; moreover, the HITS rankings can be regarded as an\napproximation of those given by the diagonal entries of eA .\nAssume the eigenvalues of P\nA can be ordered as \u03bb1 > \u03bb2 \u2265 \u03bb3 \u2265 * * * \u2265 \u03bb2n .\n2n\nThen, A can be written as A = i=1 \u03bbi ui uTi where u1 , u2 , . . . , u2n are the normalized\neigenvectors of A. Taking the exponential of A, we get:\neA =\n\n2n\nX\n\ne\u03bbi ui uTi = e\u03bb1 u1 uT1 +\n\n2n\nX\n\ne\u03bbi ui uTi .\n\ni=2\n\ni=1\n\nNow, the hub and authority rankings come from the diagonal entries of eA :\ndiag (eA ) = e\u03bb1 diag (u1 uT1 ) +\n\n2n\nX\ni=2\n\ne\u03bbi diag (ui uTi ).\n\n\f10\n\nM. Benzi, E. Estrada, and C. Klymko\n\nRescaling the hub and authority scores by e\u03bb1 does not alter the rankings; hence, we\ncan instead consider\ndiag (e\u2212\u03bb1 eA ) = diag (eA\u2212\u03bb1 I ) = diag (u1 uT1 ) +\n\n2n\nX\n\ne\u03bbi \u2212\u03bb1 diag (ui uTi ).\n\ni=2\n\nNow, the diagonal entries of the rank-one matrix u1 uT1 are just the squares of the\n(nonnegative) entries of the dominant eigenvector of A; hence, the rankings provided\nby the first term in the expansion of eA in the eigenbasis of A are precisely those\ngiven by HITS.\nIt is also clear that if \u03bb1 \u226b \u03bb2 , then the rankings provided by the diagonal entries\nof eA are unlikely to differ much from those of HITS, since the weights e\u03bbi \u2212\u03bb1 will\nbe tiny, for all i = 2, . . . , 2n. Conversely, if the gap between \u03bb1 and the rest of the\nspectrum is small (\u03bb1 \u2248 \u03bb2 ), then the contribution from the remaining eigenvectors,\nP2n \u03bbi \u2212\u03bb1\ndiag (ui uTi ), may be non-negligible relative to the first term and therefore\ni=2 e\nthe resulting rankings could differ significantly from those obtained using HITS. In\nsection 8 we will see examples of real networks illustrating both scenarios.\nSummarizing, use of the matrix exponential for ranking hubs and authorities\namounts to using the (squared) entries of all the eigenvectors of A, weighted by the\nexponential of the corresponding eigenvalues. Of course, in place of the exponential,\na number of other functions could be used; see the discussion in the next section.\nAlthough using an exponential weighting scheme may at first sight appear to be\narbitrary, its use can be rigorously justified; see the discussion in the next section, and\n[18] for a thorough treatment in the context of undirected graphs. As shown above, the\nHITS ranking scheme uses the leading term only, corresponding to the approximation\neA \u2248 e\u03bb1 u1 uT1 . Between these two extremes one could also use approximations of the\nform\neA \u2248\n\nk\nX\n\ne\u03bbi ui uTi ,\n\n(5.4)\n\ni=1\n\nwhere 1 < k < n; indeed, in most cases of practical interest a modest value of k (\u226a n)\nwill be sufficient for a very good approximation, since the eigenvalues of A are often\nobserved to decay rapidly from a certain index k onward. We return on this topic in\nsection 9.\n6. Other ranking schemes. In this section we discuss a few other schemes that\nhave been proposed in the literature, and compare them with the hub and authority\ncentrality measures based on the exponential of A.\n6.1. Resolvent-based measures. Besides the matrix exponential, another function that has been successfully used to define centrality and communicability measures\nfor an undirected network is the matrix resolvent, which can be defined as\nR(A; c) = (I \u2212 cA)\u22121 = I + cA + c2 A2 + * * * + ck Ak + * * * ,\nwith 0 < c < 1/\u03bbmax (A). This approach was pioneered early on by Katz [28], and\nvariants thereof have since been used by numerous authors; see, e.g., [6, 8, 18, 19,\n23, 41]. Here A is the symmetric adjacency matrix of the undirected network. The\ncondition on the parameter c ensures that R(A; c) is well defined (i.e., that I \u2212 cA is\ninvertible and the geometric series converges to its inverse) and nonnegative; indeed,\n\n\fRanking hubs and authorities using matrix functions\n\n11\n\nI \u2212 cA will be a nonsingular M -matrix. It is hardly necessary to mention the close\nrelationship existing between the resolvent and the exponential function, which can\nbe expressed via the Laplace transform. For the adjacency matrix A of a bipartite\ngraph given by (5.1), the resolvent is easily determined to be\n\u0012\n\u0013\n(I \u2212 c2 AAT )\u22121\ncA(I \u2212 c2 AT A)\u22121\nR(A; c) =\n.\n(6.1)\nc(I \u2212 c2 AT A)\u22121 AT\n(I \u2212 c2 AT A)\u22121\nThe condition on c can be expressed as 0 < c < 1/\u03c31 , where \u03c31 = kAk2 denotes\nthe largest singular value of A, the adjacency matrix of the undirected network. This\nensures that the matrix in (6.1) is well-defined and nonnegative, with positive diagonal\nentries. The diagonal entries of (I \u2212 c2 AAT )\u22121 provide the hub scores, those of\n(I \u2212 c2 AT A)\u22121 the authority scores. A drawback of this approach is the need to\nselect the parameter c, and the fact that different values of c may lead to different\nrankings. We have performed numerical experiments with this approach and we\nfound that for certain values of c, particularly those close to the upper limit 1/\u03c31 ,\nthe hub and authority rankings obtained with the resolvent function are not too\ndifferent from those obtained with the matrix exponential. However, not surprisingly,\nas the value of c is reduced, one obtains hub and authority rankings that are strongly\ncorrelated with the out- and in-degree of the nodes, respectively.1 Overall, because\nthe resolvent tends to weigh short walks more heavily than the exponential, and\nsince longer walks contribute relatively little to the centrality scores, it is fair to\nsay that the exponential is less \"degree biased\" than the resolvent function. Also,\nsince the exponential rankings do not depend on a tuneable parameter, they provide\nunambiguous rankings.\nWe note that \"Katz\" authority and hub scores may also be obtained by considering the column and row sums of the (nonsymmetric) matrix resolvent (I \u2212 cA)\u22121 ,\nwhere A is the adjacency matrix of the original digraph and c > 0 is again assumed\nto be small enough for the corresponding Neumann series to converge. Indeed, the\nrow sums of (I \u2212 cA)\u22121 count the number of (weighted) walks out of each node, while\nthe column sums count the number of (weighted) walks into each node. Denoting by\n1 the vector of all ones, hub and authority rankings can be obtained by solving the\ntwo linear systems\n(I \u2212 cA)y = 1\n\nand (I \u2212 cAT )x = 1 ,\n\n(6.2)\n\nrespectively. Here the parameter c must satisfy 0 < c < 1/\u03c1(A), where \u03c1(A) denotes\nthe spectral radius of A. The results of numerical experiments comparing the Katz\nscores with those based on the exponential of A are given in section 8. Here we\nobserve that these Katz scores are also dependent on the choice of the parameter c,\nand similar considerations to those made for (I \u2212 cA)\u22121 apply.\nA natural analogue to this approach is the use of row and column sums of the exponential eA to rank hubs and authorities. Some results obtained with this approach\nare discussed in section 8. We note that this method is different from the Exponentiated Inputs HITS Method of [21]. The latter method is a modification to HITS which\nwas developed in order to correct the issue of non unique results in certain networks.\nIf the dominant eigenvalue of AT A (and, consequently, of AAT ) is not simple, then\nthe corresponding eigenspace is multidimensional. This means that the choice of the\n1 Note that if c is taken too small, then the resolvent approaches the identity matrix and it\nbecomes impossible to have meaningful rankings of the nodes.\n\n\f12\n\nM. Benzi, E. Estrada, and C. Klymko\n\ninitial vector affects the convergence of the HITS algorithm and different hub and\nauthority vectors can be produced using different initial vectors. This can occur only\nwhen AT A is reducible, that is, when the original network is not strongly connected.\nIn [21], Farahat et al. propose a modification to the HITS algorithm which amounts\nto replacing A and AT with eA \u2212 I and (eA \u2212 I)T in the HITS iteration. They note\nthat, as long as the original network is weakly connected, the dominant eigenvalue\nof (eA \u2212 I)T (eA \u2212 I) is simple. Thus, HITS with this exponentiated input produces\nunique hub and authority rankings. However, a result of this replacement is that\nnodes with zero in-degree (or a low in-degree) are less important in the calculation of\nauthority scores than nodes with a high in-degree. When there are many nodes with\nzero in-degree or whose edges point to only a few other nodes, dropping these edges\ncan greatly affect the HITS rankings. An obvious disadvantage of this algorithm is\nits cost, since it requires iterating with a matrix exponential and its transpose. It\ncan be implemented using only matrix-vector products involving A and AT by means\nof techniques, like Krylov subspace methods, for evaluating the action of a matrix\nfunction on a given vector; see, e.g., [26, Chapter 13]. This approach leads to a nested\niteration scheme, with HITS as the outer iteration and the Krylov method as the\ninner one. Generally speaking, we have found HITS with exponentiated inputs to be\nless reliable and more expensive than the other methods considered in this paper. We\nrefer to [3] for additional discussion and some examples.\n6.2. PageRank and Reverse PageRank. As is well known, the (now) classical PageRank algorithm provides a means of finding the authoritative nodes in a\ndigraph. In PageRank, the importance of a node v is determined by the importance\nof the nodes pointing to v. In the most basic formulation, the rank of v is given by\nr(v) =\n\nX r(u)\n|u|\n\n(6.3)\n\nu\u2208Bv\n\nwhere Bv = {u : there is a directed link from u to v} and |u| is the out-degree of\nu. The ranks of the nodes are computed by initially setting, say, r(v) = n1 (where n\nis the size of the network) and iteratively computing the rankings until convergence.\nThis can also be written as\nT\n\u03c0kT = \u03c0k\u22121\nP,\n\nk = 1, 2, . . .\n\n(6.4)\n\nwhere \u03c0k is the vector of node ranks at iteration k and P is the matrix given by\n\u001a\n1/|vi |, if there is a directed edge from vi to vj ,\npij =\n0,\nelse.\nHere, P can be viewed as a probability transition matrix, where pij is the probability\nof traveling from node vi to node vj along an edge and the iterations can be understood\nas the evolution of a Markov chain modeling a random walk on the network.\nHowever, for an arbitrary network, there is no guarantee that the PageRank algorithm will converge. If there are nodes with zero out-degree, P will not be stochastic.\nTo correct this, the matrix P\u0304 is used, where each zero row of P is replaced with eT /n.\nAlthough this guarantees that the algorithm will converge, it does not guarantee the\nexistence of a unique solution. Even with the augmentation, P\u0304 might still be a reducible matrix, corresponding to a reducible Markov chain. When this happens, there\nare rank sinks, i.e., nodes in which the random walk will become trapped and, subsequently, these nodes will receive a disproportionately high rank. However, if P were\n\n\fRanking hubs and authorities using matrix functions\n\n13\n\nirreducible, there would be no rank sinks and the Perron-Frobenius theorem would\nguarantee that the Markov chain had a unique, positive stationary distribution.\nThe standard way to form a stochastic, irreducible PageRank matrix P\u0304 \u0304 is to\nintroduce the rank-1 matrix E = eeT /n and to consider instead of P\u0304 the convex\ncombination\nP\u0304 \u0304 = \u03b1P\u0304 + (1 \u2212 \u03b1)E ,\n\n(6.5)\n\nwhere \u03b1 is a constant with 0 < \u03b1 < 1. The coefficient 1 \u2212 \u03b1 is a measure of the\ntendency of a person surfing the web to jump from one page to another without\nfollowing links. In practice, a frequently recommended value is \u03b1 = 0.85. For a more\ncomprehensive overview of the PageRank algorithm, see [23, 27, 31, 32].\nIt was pointed out in [22] that applying PageRank to the digraph obtained by\nreversing the direction of the edges provides a natural way to rank the hubs; this\nis usually referred to as Reverse PageRank. In other words, authority rankings are\nobtained by applying PageRank to the \"Google\" matrix derived from A, and hub\nrankings are obtained by the same process applied to AT . Like HITS, PageRank and\nReverse PageRank are eigenvector-based ranking algorithms that do not take into account information about the network contained in the non-dominant eigenvectors. As\nalready mentioned, it has been argued [35] that eigenvector-based algorithms tend to\nbe degree-biased. Furthermore, like the Katz-type algorithms, the rankings obtained\ndepend on the choice of a tuneable damping parameter. While the success of PageRank in finding authoritative nodes is well known and very well documented, much\nless is known about the effectiveness of Reverse PageRank in identifying hubs; some\nreferences are [1, 10, 42, 43]. We present the results of a few numerical experiments\nwith PageRank and Reverse PageRank in section 8.\n7. Examples. In this section and the next we illustrate the proposed method on\nsome simple networks of small size, as well as on some larger data sets corresponding to\nreal networks. We also compare our approach with HITS and other rankings schemes,\nincluding Katz, PageRank and Reverse PageRank.\n7.1. Small digraphs. In this section we compare out and in-degree counts,\nHITS, and our proposed method to obtain hub and authority rankings in a few small\ndigraphs. The purpose of this section is mostly pedagogical.\n7.1.1. Example 1. Consider the small\nThe adjacency matrix is given by\n\uf8eb\n0 1\n\uf8ec 1 0\nA=\uf8ec\n\uf8ed 0 1\n0 1\n\ndirected network in Fig. 7.1 (left panel).\n1\n1\n0\n0\n\n\uf8f6\n0\n0 \uf8f7\n\uf8f7.\n1 \uf8f8\n0\n\nThe corresponding bipartite graph is shown in Fig. 7.1 (right panel). If hubs and\nauthorities are determined simply using in-degree and out-degree counts, the result is\nas follows:\nnode\n1\n2\n3\n4\n\nout-degree\n2\n2\n2\n1\n\nin-degree\n1\n3\n2\n1\n\n\f14\n\nM. Benzi, E. Estrada, and C. Klymko\n\n1\n\n1\n\n5\n\n2\n\n6\n\n3\n\n7\n\n4\n\n8\n\n3\n\n2\n\n4\n\nFig. 7.1. The original directed network from Example 1, with adjacency matrix A (left) and\nthe bipartite network with adjacency matrix A (right).\n\nUnder this ranking, the hub ranking of the nodes is: {1, 2, 3 (tie); 4}. The authority ranking of the nodes is: {2; 3; 1, 4 (tie)}. We obtain somewhat different results\nusing the HITS algorithm. The eigenvectors of AAT and AT A corresponding to the\nlargest eigenvalue \u03bbmax \u2248 3.9563, which is simple, yield the following rankings for\nhubs and authorities:\nnode\n1\n2\n3\n4\n\nhub rank\n.3383\n.1729\n.2798\n.2091\n\nauthority rank\n.0965\n.4618\n.2854\n.1562\n\nHere, the ranking for hubs is: {1; 3; 4; 2}. The ranking for authorities is: {2; 3; 4; 1}.\nNote that node 2, which was given a top hub score by looking just at the out-degrees,\nis judged by HITS as the node with the lowest hub score.\nUsing eA as described above, the rankings for hub centralities and authority\ncentralities are:\nnode\n1\n2\n3\n4\n\nhub centrality = [eA ]ii\n2.3319\n2.2289\n2.2812\n1.6414\n\nauthority centrality = [eA ]4+i,4+i\n1.5906\n3.0209\n2.2796\n1.5922\n\nWith this method, the hub ranking of the nodes is: {1; 3; 2; 4}. The authority\nranking is: {2; 3; 4; 1}. On this example, our method produces the same authority\nranking as HITS. The hub ranking, however, is slightly different: both methods identify node 1 as the one with the highest hub score, followed by node 3; however, our\nmethod assigns the lowest hub score to node 4 rather than node 2. This is arguably\na more meaningful ranking.\n7.1.2. Example 2. Consider the small\nThe adjacency matrix is given by\n\uf8eb\n0 0\n\uf8ec 1 0\nA=\uf8ec\n\uf8ed 0 1\n0 1\n\ndirected network in Fig. 7.2 (left panel).\n1\n0\n0\n0\n\n\uf8f6\n0\n1 \uf8f7\n\uf8f7.\n0 \uf8f8\n0\n\n\f15\n\nRanking hubs and authorities using matrix functions\n\n1\n\n1\n\n5\n\n2\n\n6\n\n3\n\n7\n\n4\n\n8\n\n3\n\n2\n\n4\n\nFig. 7.2. The original directed network from Example 2, with adjacency matrix A (left) and\nthe bipartite network with adjacency matrix A (right).\n\nThe corresponding bipartite graph is shown in Fig. 7.2 (right panel). If hubs\nand authorities are determined only using in-degrees and out-degrees, the result is as\nfollows:\nnode\n1\n2\n3\n4\n\nout-degree\n1\n2\n1\n1\n\nin-degree\n1\n2\n1\n1\n\nUnder this criterion, the hub and authority rankings are both {2; 1, 3, 4 (tie)}.\nWhile it is intuitive that node 2 should be given a high score (both as an authority\nand as a hub), just looking at the degrees does not allow one to distinguish the\nremaining nodes.\nConsider now the use of HITS. The largest eigenvalue of AAT (and AT A) is\n\u03bbmax = 2 and it has multiplicity two. Thus, different starting vectors for the HITS algorithm may produce different rankings, as discussed in [21]. Starting from a constant\nauthority vector x(0) , as suggested in [29], produces the following scores:\nnode\n1\n2\n3\n4\n\nhub rank\n.0000\n.5000\n.2500\n.2500\n\nauthority rank\n.3333\n.3333\n.0000\n.3333\n\nThe ranking for hubs is: {2; 3, 4 (tie); 1}. The ranking for authorities is the following:\n{1, 2, 4 (tie); 3}.\nIf the ranking is determined using eA as described above, the resulting scores are:\nnode\n1\n2\n3\n4\n\nhub centrality = [eA ]ii\n1.5431\n2.1782\n1.5891\n1.5891\n\nauthority centrality = [eA ]4+i,4+i\n1.5891\n2.1782\n1.5431\n1.5891\n\nWith this method, the hub ranking of the nodes is the same as in HITS: {2; 3, 4 (tie); 1}.\nHowever, in the authority ranking, node 2 is the clear winner rather than being part\n\n\f16\n\nM. Benzi, E. Estrada, and C. Klymko\n1\n\n7\n\n2\n\n8\n\n3\n\n9\n\n4\n\n10\n\n5\n\n11\n\n6\n\n12\n\n1\n\n2\n\n4\n\n3\n\n5\n\n6\n\nFig. 7.3. The original directed network from Example 3, with adjacency matrix A (left) and\nthe bipartite network with adjacency matrix A (right).\n\nof a three-way tie for first place: {2; 1, 4 (tie); 3}. In this example, the method based\non the matrix exponential is able to identify a top authority node by making use of\nadditional spectral information.\n7.2. Example 3. Let G be the small directed network in Fig. 7.3. The adjacency\nmatrix is given by\n\uf8eb\n\uf8f6\n0 0 0 0 0 0\n\uf8ec 1 0 0 0 0 0 \uf8f7\n\uf8ec\n\uf8f7\n\uf8ec 1 0 0 0 0 0 \uf8f7\n\uf8ec\n\uf8f7.\nA=\uf8ec\n\uf8f7\n\uf8ec 1 0 0 0 0 0 \uf8f7\n\uf8ed 1 0 0 0 0 0 \uf8f8\n0 1 1 1 1 0\nIf hubs and authorities are determined using only in-degrees and out-degrees, the\nresult is:\nnode\n1\n2\n3\n4\n5\n6\n\nout-degree\n0\n1\n1\n1\n1\n4\n\nin-degree\n4\n1\n1\n1\n1\n0\n\nThe hub ranking of the nodes using degrees is: {6; 2,3,4,5 (tie); 1}. The authority\nranking is {1; 2,3,4,5 (tie); 6}.\nIf the HITS algorithm is used, the resulting rankings are similar, but not exactly\nthe same. Starting with a constant authority vector x(0) , the results are:\nnode\n1\n2\n3\n4\n5\n6\n\nhub rank\n.000\n.125\n.125\n.125\n.125\n.500\n\nauthority rank\n.200\n.200\n.200\n.200\n.200\n.000\n\nThe hub ranking of the nodes is: {6; 2, 3, 4, 5 (tie); 1}. The authority ranking is:\n{1,2,3,4,5 (tie); 6}. Here, HITS does not differentiate between node 1 and nodes 2, 3,\n\n\fRanking hubs and authorities using matrix functions\n\n17\n\n4, and 5 in terms of the authority score, even though node 1 has by far the highest\nin-degree. This appears as a failure of HITS, since it is intuitive that node 1 should\nbe regarded as very authoritative.\nWhen eA is used to calculate the hub and authority scores, node 1 does get a\nhigher authority ranking than all the other nodes:\nnode\n1\n2\n3\n4\n5\n6\n\nhub centrality = [eA ]ii\n1.0000\n1.6905\n1.6905\n1.6905\n1.6905\n3.7622\n\nauthority centrality = [eA ]6+i,6+i\n3.7622\n1.6905\n1.6905\n1.6905\n1.6905\n1.0000\n\nNote that, if desired, the value 1 can be subtracted from these scores since it does\nnot affect the relative ranking of the nodes. The hub ranking is {6; 2,3,4,5 (tie); 1},\nand the authority ranking is: {1; 2,3,4,5 (tie); 6}.\n8. Application to web graphs. Similarly to HITS, and in analogy to subgraph\ncentrality for undirected networks, the rankings produced by the values on the diagonal of eA can be used to rank websites as hubs and authorities in web searches (many\nother applications are of course also possible). Three of the data sets considered here\nare small web graphs consisting of web sites on various topics and can be found at\n[40] along with the website associated with each node; see also [7]. The experiments\nfor this paper were run on the \"Expanded\" version of the data sets. Each data set is\nnamed after the corresponding topic.2 In addition, we include results for the wb-csstanford data set from the University of Florida Sparse Matrix Collection [12]. This\ndigraph represents a subset of the Stanford University web. In this section, the hub\nand authority rankings obtained from eA are compared with those from HITS, Katz\n(using (6.2) with c = 1/(\u03c1(A) + 0.1)), the row and column sums of the exponential\neA of the nonsymmetric matrix A, and PageRank/Reverse PageRank. For the latter\nwe use the standard value \u03b1 = 0.85 for the damping parameter. All experiments are\nperformed using Matlab Version 7.9.0 (R2009b) on a MacBook Pro running OS X\nVersion 10.6.8, a 2.4 GHZ Intel Core i5 processor and 4 GB of RAM. For the purpose\nof these tests we use the built-in Matlab function expm to compute the matrix exponentials, and backslash to compute the Katz scores. Other approximations of eA are\ndiscussed in section 9.\n8.1. Abortion data set. The abortion data set contains\nn=\n\u0012\n\u0013 2293 nodes and\n0 A\nhas order N =\nAT 0\n2n = 4586 and contains 2m = 19288 nonzeros. The maximum eigenvalue of A is\n\u03bbN \u2248 31.91 and the second largest eigenvalue is \u03bbN \u22121 \u2248 26.04. In this matrix, the\nlargest eigenvalue is fairly well-separated from the second largest so that one would\nexpect the HITS rankings (which only use information from the dominant eigenpair\nof A) to be reasonably close to the rankings from eA (which use information from\nall of the eigenvalues and corresponding eigenvectors). A plot of the eigenvalues of\nthe expanded abortion data set matrix can be found in Fig. 8.1. Note the high\nm = 9644 directed edges. The expanded matrix A =\n\n2 It should be noted, however, that in the node list for the adjacency matrix, the node labeling\nbegins with 1 and in the list of websites associated with the nodes found at [40], node labeling begins\nat 0. Thus, node i in the adjacency matrix is associated with website i \u2212 1.\n\n\f18\n\nM. Benzi, E. Estrada, and C. Klymko\n\n40\n30\n20\n10\n0\n\n\u221210\n\u221220\n\u221230\n\n\u221240\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n3000\n\n3500\n\n4000\n\n4500\n\n5000\n\nFig. 8.1. Plot of the eigenvalues of the expanded abortion matrix A.\nTable 8.1\nTop 10 hubs of the abortion web graph, ranked using [eA ]ii , HITS, Katz, eA row sums and\nReverse PageRank with \u03b1 = 0.85.\n\n[eA ]ii\n48\n1021\n1007\n1006\n1053\n1020\n987\n990\n985\n989\n\nHITS\n48\n1006\n1007\n1021\n1053\n1020\n960\n968\n969\n970\n\nKatz\n80\n1431\n1432\n1387\n1388\n1389\n1397\n1425\n1426\n1415\n\neA rs\n80\n1431\n1432\n1426\n1425\n1415\n1388\n1389\n1397\n1387\n\nRPR\n125\n2184\n79\n81\n48\n1424\n1447\n78\n134\n1445\n\nmultiplicity of the zero eigenvalue in this matrix, as well as in the adjacency matrices\nof the computational complexity and death penalty data sets. Also, quite a few of the\nnonzero eigenvalues are rather small. Due to this, the numerical rank of the matrix\nis very low, a property that can be exploited when estimating the entries of eA using\nLanczos-based methods; see section 9 for further discussion on this.\nThe top 10 hubs and authorities of the abortion data set, as determined using\nthe diagonal entries of eA , HITS with constant initial vector, the row/column sums of\n(I \u2212 cA)\u22121 (\"Katz\"), the row/column sums of eA and Reverse PageRank/PageRank\nare shown in Tables 8.1 and 8.2. We observe that there is a good deal of agreement\nbetween the eA rankings and the HITS ones: indeed, both methods identify the\nwebsites labeled 48, 1021, 1007, 1006, 1053, 1020 as the top 6 hubs, and both pick\nweb site 48 as the top one. Also, there are 7 web sites identified by both methods as\nbeing among the top 10 authorities. The top authority identified by HITS is ranked\n\n\f19\n\nRanking hubs and authorities using matrix functions\n\nTable 8.2\nTop 10 authorities of the abortion web graph, ranked using [eA ]ii , HITS, Katz, eA column sums\nand PageRank with \u03b1 = 0.85.\n\n[eA ]ii\n967\n958\n939\n962\n963\n964\n961\n965\n966\n587\n\nHITS\n939\n958\n967\n961\n962\n963\n964\n965\n966\n1582\n\nKatz\n1430\n1387\n1425\n1426\n1429\n1396\n1405\n1406\n1409\n1417\n\neA cs\n1430\n1387\n1425\n1426\n1417\n1409\n1429\n1406\n1396\n1405\n\nPR\n1609\n1941\n1948\n1608\n587\n1610\n2045\n317\n2191\n753\n\n15\n\n10\n\n5\n\n0\n\n\u22125\n\n\u221210\n\n\u221215\n\n0\n\n200\n\n400\n\n600\n\n800\n\n1000\n\n1200\n\n1400\n\n1600\n\n1800\n\nFig. 8.2. Plot of the eigenvalues of the expanded computational complexity matrix A.\n\nthird by eA , and conversely the top authority identified by eA is third in the HITS\nranking. The Katz rankings and those based on eA show considerable agreement\nwith one another, but are very different from the HITS ones and from those based\non eA . Node 48, which is the top-ranked hub according to HITS and eA , is now\nnot even among the top 100. Conversely, node 80, which is ranked the top hub by\nKatz and eA , is not in the top 100 nodes according to HITS or to eA . This is not\ntoo surprising, since the metrics based on A and those based on A are obtained\nby counting rather different types of graph walks. Finally, for this network Reverse\nPageRank and PageRank return rankings with almost no overlap with any of the\nother methods.\n8.2. Computational complexity data set. The computational complexity\ndata set contains n = 884 nodes and m = 1616 directed edges. The expanded matrix\nA has order N = 2n = 1768 and contains 2m = 2232 nonzeros. The maximum eigen-\n\n\f20\n\nM. Benzi, E. Estrada, and C. Klymko\n\nTable 8.3\nTop 10 hubs of the computational complexity web graph, ranked using [eA ]ii , HITS, Katz, eA\nrow sums and Reverse PageRank with \u03b1 = 0.85.\n\n[eA ]ii\n57\n17\n644\n643\n634\n106\n119\n529\n86\n162\n\nHITS\n57\n634\n644\n721\n643\n544\n632\n801\n640\n639\n\nKatz\n56\n709\n57\n697\n705\n690\n714\n708\n712\n715\n\neA rs\n57\n56\n17\n51\n634\n21\n255\n173\n709\n45\n\nRPR\n57\n56\n17\n51\n21\n11\n255\n12\n13\n45\n\nvalue of A is \u03bbN \u2248 10.93 and the second largest eigenvalue is \u03bbN \u22121 \u2248 9.86. Here, the\n(relative) spectral gap between the first and the second eigenvalue is smaller than in\nthe previous example; consequently, we expect the rankings produced using eA and\nHITS to be less similar than for the abortion data set. A plot of the eigenvalues of\nthe expanded computational complexity data set matrix can be found in Fig. 8.2.\nThe top 10 hubs and authorities of the computational complexity data set, determined by the various ranking methods, can be found in Tables 8.3 and 8.4. As\nexpected, we see less agreement between HITS and the diagonals of eA . Concerning\nthe hubs, both methods agree that the web site labelled 57 is by far the most important hub on the topic of computational complexity. However, the method based on\neA identifies as the second most important hub the web site corresponding to node 17,\nwhich is ranked only 39th by HITS. The two methods agree on the next three hubs,\nbut after that they return completely different results. The difference is even more\npronounced for the authority rankings. The method based on eA clearly identifies\nweb site 1 as the most authoritative one, whereas HITS relegates this node to 8th\nplace. The top authority acording to HITS, web site 719, places 5th in the ranking\nobtained by eA . The two methods agree on only two other web sites as being in the\ntop 10 authorities (717 and 727). The Katz rankings and those based on eA show\nlittle overlap for this data set, although node 57 is clearly considered an important\nhub by all measures. A natural question is how much these results are affected by the\nchoice of the parameter c used to compute the Katz scores. We found experimentally\nthat, in contrast to the situation for the other data sets, small changes in the value of\nc can significantly affect the Katz ranking for this particular data set. Changing the\nvalue of c to c = 1/(\u03c1(A) + 0.3) results in hub and authority rankings that are much\ncloser to those given by the column/row sums of eA . The potential sensitivity to c is\na clear drawback of the Katz-based approach compared to the methods based on the\nmatrix exponential. Coming to (Reverse) PageRank, it is interesting to note that for\nthis data set it provides rankings that are at least in partial agreement with some of\nthe other measures, especially those based on eA . Looking at the authority scores,\nwe also notice a good degree of overlap among all methods, except HITS. Due to the\nsmall spectral gap, HITS is probably the least reliable of all ranking methods on this\nparticular data set.\n\n\f21\n\nRanking hubs and authorities using matrix functions\n\neA\n\nTable 8.4\nTop 10 authorities of the computational complexity web graph, ranked using [eA ]ii , HITS, Katz,\ncolumn sums and PageRank with \u03b1 = 0.85.\n\n[eA ]ii\n1\n315\n673\n148\n719\n717\n2\n45\n727\n534\n\nHITS\n719\n717\n727\n723\n808\n735\n737\n1\n722\n770\n\nKatz\n688\n685\n673\n690\n56\n686\n664\n1\n45\n534\n\neA cs\n673\n1\n664\n534\n45\n473\n315\n376\n688\n599\n\nPR\n673\n664\n534\n45\n2\n1\n376\n341\n50\n51\n\n30\n\n20\n\n10\n\n0\n\n\u221210\n\n\u221220\n\n\u221230\n\n0\n\n500\n\n1000\n\n1500\n\n2000\n\n2500\n\n3000\n\n3500\n\n4000\n\nFig. 8.3. Plot of the eigenvalues of the expanded death penalty matrix A.\n\n8.3. Death penalty data set. The death penalty data set contains n = 1850\nand m = 7363 directed edges. The expanded matrix A has order N = 2n = 3700 and\ncontains m = 14726 nonzeros. The maximum eigenvalue of A is \u03bbN \u2248 28.02 and the\nsecond largest eigenvalue \u03bbN \u22121 \u2248 17.68. In this case, the largest and second largest\neigenvalues are quite far apart, and the relative gap is larger than in the previous\nexamples. A plot of the eigenvalues of the expanded death penalty matrix can be\nfound in Fig. 8.3.\nDue to the presence of a large spectral gap, much of the information used in\nforming the rankings of eA is also used in the HITS ranking, and we expect the two\nmethods to produce similar results; see section 5.3. Indeed, as shown in Table 8.5\n(hubs) and Table 8.6 (authorities), in this case the top 10 rankings produced by the\ntwo methods are actually identical.\nLooking at the Katz scores and those based on eA , we see in this case a great\n\n\f22\n\nM. Benzi, E. Estrada, and C. Klymko\n\nTable 8.5\nTop 10 hubs of the death penalty web graph, ranked using [eA ]ii , HITS, Katz, eA row sums and\nReverse PageRank with \u03b1 = 0.85.\n\n[eA ]ii\n210\n637\n413\n1586\n552\n462\n930\n542\n618\n1275\n\nHITS\n210\n637\n413\n1586\n552\n462\n930\n542\n618\n1275\n\nKatz\n1632\n133\n1671\n552\n1651\n1673\n1328\n1653\n210\n1709\n\neA rs\n1632\n133\n1671\n552\n1651\n210\n1673\n1653\n1328\n1709\n\nRPR\n210\n1632\n70\n95\n135\n133\n55\n958\n1077\n315\n\nTable 8.6\nTop 10 authorities of the death penalty web graph, ranked using [eA ]ii , HITS, Katz, eA column\nsums and PageRank with \u03b1 = 0.85.\n\n[eA ]ii\n4\n1\n6\n7\n10\n16\n2\n3\n44\n27\n\nHITS\n4\n1\n6\n7\n10\n16\n2\n3\n44\n27\n\nKatz\n1632\n1662\n1697\n1689\n1653\n1671\n1675\n1684\n798\n1652\n\neA cs\n1632\n1662\n1697\n1689\n1653\n1671\n1675\n1684\n789\n1654\n\nPR\n993\n667\n3\n736\n735\n1632\n42\n1\n4\n1212\n\ndeal of overlap between these two, but almost completely different rankings compared\nto HITS and eA (although node 210 is clearly an important hub by any standard).\nNote that node 1632 is both the top hub and the top authority according to Katz\nand to eA . PageRank and Reverse PageRank show a limited amount of overlap with\nthe other measures; nevertheless, nodes 210 and 1632 are also found to be important\nhubs and nodes 1632, 1 and 4 are found to be authoritative, in agreeemnt with some\nof the other measures.\n8.4. Stanford web graph. The wb-cs-stanford data set from the University of\nFlorida sparse matrix collection contains n = 9914 nodes and m = 36854 directed\nedges. The expanded matrix A has order N = 2n = 19828 and contains m = 73708\nnonzeros. The maximum eigenvalue of A is \u03bbN \u2248 38.38 and the second largest is\n\u03bbN \u22121 \u2248 32.12, hence there is a sizeable gap. Tables 8.7-8.8 report the results obtained\nwith the various ranking schemes.\nThe first thing to observe is the remarkable agreement between the HITS, eA ,\nKatz, and eA rankings of both hubs and authorities. This in stark contrast with the\nresults for the previous three data sets. Moreover, many of the nodes that are ranked\nhighly as hubs are also ranked highly as authorities. A plausible explanation of these\n\n\fRanking hubs and authorities using matrix functions\n\n23\n\nTable 8.7\nTop 10 hubs of the wb-cs-stanford web graph, ranked using [eA ]ii , HITS, Katz, eA row sums\nand Reverse PageRank with \u03b1 = 0.85.\n\n[eA ]ii\n6562\n6838\n6840\n6837\n6839\n6616\n6765\n6615\n6669\n6731\n\nHITS\n6562\n6838\n6837\n6839\n6840\n6616\n6615\n6765\n6669\n6731\n\nKatz\n6562\n6837\n6838\n6839\n6840\n6669\n6668\n6670\n6616\n6615\n\neA rs\n6562\n6837\n6838\n6839\n6840\n6669\n6668\n6670\n6616\n6615\n\nRPR\n251\n252\n253\n254\n271\n2240\n2241\n2242\n2243\n348\n\nTable 8.8\nTop 10 authorities of the wb-cs-stanford web graph, ranked using [eA ]ii , HITS, Katz, eA column\nsums and PageRank with \u03b1 = 0.85.\n\n[eA ]ii\n6837\n6840\n6839\n6838\n6617\n6615\n6766\n6764\n6616\n6614\n\nHITS\n6837\n6839\n6840\n6838\n6617\n6615\n6614\n6616\n6764\n6766\n\nKatz\n6837\n6839\n6840\n6838\n6573\n6574\n6575\n6576\n6577\n6578\n\neA cs\n6837\n6839\n6840\n6838\n6573\n6575\n6576\n6577\n6578\n6579\n\nPR\n2264\n8226\n8059\n8057\n4485\n5707\n8225\n6837\n6839\n6840\n\nobservations is that the adjacency matrix A for this digraph is much closer to being\nsymmetric than in the other cases. Indeed, the percentage of \"bidirectional\" edges in\nthe wb-cs-stanford graph is 47.63%; the corresponding percentages for the abortion,\ncomputational complexity and death penalty graphs are just 2.72%, 2.97% and 4.02%,\nrespectively.\nInterestingly, the (Reverse) PageRank results are now drastically different fron\nthe ones provides by all the other measures in nearly all cases. The only (partial)\nexception is that PageRank finds nodes 6837, 6839 and 6840 to be among the top 10\nauthorities; these three nodes are identified as the three most authoritative ones by\nthe remaining methods.\n9. Approximating the matrix exponential. Several approaches are available for computing the matrix exponential [26]. A commonly used scheme is the\none based on Pad\u00e9 approximation combined with the scaling and squaring method\n[25, 26], implemented in Matlab by the expm function. For an n \u00d7 n matrix, this\nmethod requires O(n2 ) storage and O(n3 ) arithmetic operations; any sparsity in A,\nif present, is not exploited in currently available implementations. Evaluation of the\nmatrix exponential based on diagonalization also requires O(n2 ) storage and O(n3 )\n\n\f24\n\nM. Benzi, E. Estrada, and C. Klymko\n\noperations. Furthermore, these methods cannot be easily adapted to the case where\nonly selected entries (e.g., the diagonal ones) of the matrix exponential are of interest.\nFor the purpose of ranking hubs and authorities in a directed network, only the\nmain diagonal of eA is required. This can be done without having to compute all the\nentries in eA . If some of the off-diagonal entries (communicabilities) are desired, for\nexample those between the highest ranked hubs and/or authorities, it is also possible\nto compute them without having to compute the whole matrix eA , which would be\nprohibitive even for a moderately large network. We further emphasize that in most\napplications one is not so much interested in computing an exact ranking of all the\nnodes in a digraph, but only in identifying the top k ranked nodes, where the integer\nk is small compared to n (for example, k = 10 or k = 20). It is highly desirable to\ndevelop methods that are capable of quickly identifying the top k hubs/authorities\nwithout having to compute accurate hub/authority scores for each node.\nEfficient, accurate methods for estimating (or, in some cases, bounding) arbitrary\nentries in a matrix function f (A) have been developed by Golub, Meurant and collaborators (see [24] and references therein) and first applied to problems of network\nanalysis by Benzi and Boito in [2]; see also [6]. Here we limit ourselves to a brief description of these methods, referring the reader to [2] and [24] for further details. Let\nA be a real, symmetric, n \u00d7 n matrix and let f be a function defined on the spectrum\nof A. Consider the eigendecompositions A = Q\u039bQT and f (A) = Qf (\u039b)QT , where\nQ = [\u03c61 , . . . , \u03c6n ] and \u039b = diag (\u03bb1 , . . . , \u03bbn ); here we assume that the eigenvalues of A\nare ordered as \u03bb1 \u2264 . . . \u2264 \u03bbn . For given vectors u and v we have\nuT f (A)v = uT Qf (\u039b)QT v = wT f (\u039b)z =\n\nn\nX\n\nf (\u03bbk )wk zk ,\n\n(9.1)\n\nk=1\n\nwhere w = QT u = (wk ) and z = QT v = (zk ). In particular, for f (A) = eA we obtain\nuT eA v =\n\nn\nX\n\ne\u03bbk wk zk .\n\n(9.2)\n\nk=1\n\nChoosing u = v = ei (the vector with the ith entry equal to 1 and all the remaining\nones equal to 0) we obtain an expression for the subgraph centrality of node i:\nSC(i) :=\n\nn\nX\n\ne\u03bbk \u03c62k,i ,\n\nk=1\n\nwhere \u03c6k,i denotes the ith component of vector \u03c6k . Likewise, choosing u = ei and\nv = ej we obtain the following expression for the communicability between node i\nand node j:\nC(i, j) :=\n\nn\nX\n\ne\u03bbk \u03c6k,i \u03c6k,j .\n\nk=1\n\nAnalogous expressions hold for other matrix functions, such as the resolvent.\nHence, the problem is reduced to evaluating bilinear expressions of the form\nuT f (A)v. Such bilinear forms can be thought of as Riemann- Stieltjes integrals with\nrespect to a (signed) spectral measure:\n\uf8f1\nZ b\n0,\nif \u03bb < a = \u03bb1 ,\n\uf8f2 P\ni\nuT f (A)v =\nf (\u03bb)d\u03bc(\u03bb), \u03bc(\u03bb) =\nw\nz\n,\nif \u03bbi \u2264 \u03bb < \u03bbi+1 ,\n\uf8f3 Pnk=1 k k\na\nw\nz\n,\nif\nb = \u03bbn \u2264 \u03bb.\nk=1 k k\n\n\fRanking hubs and authorities using matrix functions\n\n25\n\nThis integral can be approximated by means of a Gauss-type quadrature rule:\nZ\n\nb\n\nf (\u03bb)d\u03bc(\u03bb) =\na\n\np\nX\n\ncj f (tj ) +\n\nj=1\n\nq\nX\n\nvk f (\u03c4k ) + R[f ],\n\n(9.3)\n\nk=1\n\nwhere R[f ] denotes the error. Here the nodes {tj }pj=1 and the weights {cj }pj=1 are\nunknown, whereas the nodes {\u03c4k }qk=1 are prescribed. We have\n\u2022 q = 0 for the Gauss rule,\n\u2022 q = 1, \u03c41 = a or \u03c41 = b for the Gauss\u2013Radau rule,\n\u2022 q = 2, \u03c41 = a and \u03c42 = b for the Gauss\u2013Lobatto rule.\nFor certain matrix functions, including the exponential and the resolvent, these\nquadrature rules can be used to obtain lower and upper bounds on the quantities of\ninterest; prescribing additional quadrature nodes leads to tighter and tighter bounds,\nwhich (in exact arithmetic) converge monotonically to the true values [24]. The evaluation of these quadrature rules is mathematically equivalent to the computation\nof orthogonal polynomials via a three-term recurrence, or, equivalently, to the computation of entries and spectral information of a certain tridiagonal matrix via the\nLanczos algorithm. Here we briefly recall how this can be done for the case of the\nGauss quadrature rule, when we wish to estimate the ith diagonal\nPp entry of f (A). It\nfollows from (9.3) that the quantity of interest has the form j=1 cj f (tj ). This can\nbe computed from the relation (Theorem 3.4 in [24]):\np\nX\n\ncj f (tj ) = eT1 f (Jp )e1 ,\n\nj=1\n\nwhere\n\uf8eb\n\n\u03c91\n\uf8ec \u03b31\n\uf8ec\n\uf8ec\nJp = \uf8ec\n\uf8ec\n\uf8ed\n\n\u03b31\n\u03c92\n..\n.\n\n\u03b32\n..\n.\n\u03b3p\u22122\n\n\uf8f6\n..\n\n.\n\u03c9p\u22121\n\u03b3p\u22121\n\n\u03b3p\u22121\n\u03c9p\n\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f7\n\uf8f8\n\nis a tridiagonal matrix whose eigenvalues are the Gauss nodes, whereas the Gauss\nweights are given by the squares of the first entries of the normalized eigenvectors of\nJp . The entries of Jp are computed using the Lanczos algorithm with starting vectors\nx\u22121 = 0 and x0 = ei . Note that it is not required to compute all the components of\nthe eigenvectors of Jp if one uses the Golub\u2013Welsch QR algorithm; see [24].\nFor small p (i.e., for a small number of Lanczos steps), computing the (1, 1) entry\nof f (Jp ) is inexpensive. The main cost in estimating one entry of f (A) with this\napproach is associated with the sparse matrix-vector multiplies in the Lanczos algorithm applied to the adjacency matrix A. If only a small, fixed number of iterations\nare performed for each diagonal element of f (A), as is usually the case, the computational cost (per node) is at most O(n) for a sparse graph, resulting in a total cost\nof O(n2 ) for computing the subgraph centrality of every node in the network. If only\nk < n subgraph centralities are wanted, with k independent of n, then the overall cost\nof the computation will be O(n) provided that sparsity is carefully exploited in the\nLanczos algorithm and that only a small number p of iterations (independent of n) is\ncarried out. Note, however, that depending on the connectivity characteristics of the\nnetwork under consideration, the prefactor in the O(n) estimate could be large. The\n\n\f26\n\nM. Benzi, E. Estrada, and C. Klymko\n\nTable 9.1\nThe number of iterations necessary for the top 10 hubs or authorities to be determined (not\nnecessarily in the correct order).\n\nDataset\nAbortion\nComp. Complex.\nDeath Penalty\nStanford\nDataset\nAbortion\nComp. Complex.\nDeath Penalty\nStanford\n\nhub (lower bound)\n> 40\n3\n5\n8\n\nauthority (lower bound)\n2\n4\n4\n7\n\nhub (upper bound)\n> 40\n3\n3\n8\nauthority (upper bound)\n2\n5\n2\n8\n\nalgorithm can be implemented so that the storage requirements are O(n) for a sparse\nnetwork-that is, a network in which the total number of links grows linearly in the\nnumber n of nodes.\nWhen applying the approach based on Gauss quadrature rules to the 2n \u00d7 2n\nmatrix A, only matrix-vector products with A and its transpose are required, just\nlike in the HITS algorithm. If only the hub scores are wanted, it is also possible\nto apply the \u221a\ndescribed techniques to the symmetric matrix AAT using the function\nf (\u03bb) = cosh( \u03bb); the same applies if only the authority scores are wanted, working\nthis time with the matrix AT A. The problem with this approach is that only estimates\n(rather than increasingly accurate lower\u221aand upper bound) can be obtained, due to\nthe fact that the function f (\u03bb) = cosh( \u03bb) is not strictly completely monotonic on\nthe positive real axis. We refer to [4] for details. In our experiments we always work\nwith the matrix A, since we are interested in computing both hub and authority\nscores.\n9.1. Test results. Accurate evaluation of all the diagonal entries of eA using\nquadrature rules may be too expensive for truly large-scale graphs. In most applications, fortunately, it is not necessary to rank all the nodes in the network: only the\ntop few hubs and authorities are likely to be of interest. When using quadrature rules,\nthe number of quadrature nodes (Lanczos iterations) required to correctly rank the\nnodes as hubs or authorities varies and depends on both the eigenvalues of eA and\nhow close the diagonal entries are in value. If the rankings of the nodes are very close,\nit can take many iterations for the ordering to be exactly determined. However, since\nestimates for diagonal entries are calculated individually, once the top 10 (say) nodes\nhave been identified, additional iterations can be performed only on these nodes in\norder to determine their exact ranking.\nOur approach exploits the monotonicity of the Gauss-Radau bounds: as soon as\nthe lower bound for node i is above the upper bounds for other nodes, we know that\nnode i will be ranked higher than those othe nodes. This observation leads to a simple\nalgorithm for identifying the top-k nodes. The number of Lanczos iterations per node\nnecessary to identify the top k = 10 hubs and authorities, using Gauss-Radau lower\nand upper bounds, for the four data sets from section 8 is given in Table 9.1. Our\nimplementation is based on Meurant's Matlab code [34], From the table it can be\nseen that, in most cases, only 2-5 iterations per node are needed. An exception is the\n\n\fRanking hubs and authorities using matrix functions\n\n27\n\nTable 9.2\nThe number of iterations necessary for the top 10 hubs or authorities to be ranked in the top 30.\n\nDataset\nAbortion\nComp. Complex.\nDeath Penalty\nStanford\nDataset\nAbortion\nComp. Complex.\nDeath Penalty\nStanford\n\nhub (lower bound)\n5\n2\n2\n7\n\nauthority (lower bound)\n2\n4\n2\n2\n\nhub (upper bound)\n4\n2\n2\n4\nauthority (upper bound)\n2\n2\n2\n4\n\ndetermination of the top 10 hubs of the abortion data set, for which the number of\niterations is large (> 40). This is due to a cluster of nodes (nodes 960 and 968-990)\nthat have nearly identical hub rankings. These nodes' scores agree to 15 significant\ndigits. However, for most applications, if a subset of nodes are so closely ranked, their\nexact ordering may not be so important. Table 9.2 reports the number of Lanczos\niterations neeeded for the top k = 10 hubs and authorities to be ranked at least\nin the top 30. Here, the number of iterations per node needed is never more than\n7. The total cost is thus O(n) Lanczos iterations, again leading to an O(n2 ) overall\ncomplexity. Various enhancements can be used to reduce costs, including the use of\nsparse-sparse mat-vecs in the Lanczos iteration, and the exclusion of nodes with zero\nout-degree (for hub computations) and zero in-degree (for authority computations)\nfrom the top-k calculations. It is also safe to assume that in most cases of interest,\none can also exclude nodes with in- and out-degree 1 from the computations, leading\nto further savings.\n10. Conclusions and outlook. In this paper we have presented a new approach\nto ranking hubs and authorities in directed networks using functions of matrices. Bipartization is used to transform the original directed network into an undirected\none with twice the number of nodes. The adjacency matrix of the bipartite graph\nis symmetric, and this allows the use of subgraph centrality (and communicability)\nmeasures for undirected networks. We showed that the diagonal entries of the matrix\nexponential provide hub and authority rankings, and we gave an interpretation for\nthe off-diagonal entries (communicabilities). Unlike HITS, the results are independent of any starting vectors; and unlike the Katz-based ranking schemes, there is no\ndependency on an arbitrary parameter.\nSeveral examples, both synthetic and corresponding to real data sets, have been\nused to demonstrate the effectiveness of the proposed ranking algorithms relative\nto HITS and to other ranking schemes based on the matrix resolvent and on the\nexponential of the adjacency matrix of the original digraph. Our experiments indicate\nthat our method results in rankings that are frequently different from those computed\nby HITS, at least in the absence of large gaps between the dominant singular value\nof the adjacency matrix A and the remaining ones. This is to be expected, since our\nmethod uses information from all the singular spectrum of the network, not just the\ndominant left and right singular pairs.\nAs usual in this field, there is no simple way to compare different ranking schemes,\n\n\f28\n\nM. Benzi, E. Estrada, and C. Klymko\n\nand therefore it is impossible to state with certainty that a ranking scheme will give\n\"better\" results than a different scheme in practice. It is, however, certainly the case\nthat the method based on the exponential of A takes into account more spectral\ninformation than HITS does; moreover, the rankings so obtained are unambiguous,\nin that they do not depend on an the choice of an initial guess or on a tuneable\nparameter. As we saw, the latter is a weak spot of Katz-like methods, and a similar\ncase can be made for PageRank and Reverse PageRank.\nCompared to HITS, the new technique has a higher computational cost. We\nshowed how Gaussian quadrature rules can be used to quickly identify the top ranked\nhubs and authorities for networks involving thousands of nodes. We note that such\nschemes require a symmetric input matrix and are not readily applicable to nonsymmetric matrices, since in this case one can only hope for estimates instead of lower\nand upper bounds.\nFuture work should include a more efficient implementation and tests on larger\nnetworks. It is likely that the proposed approach based on Gaussian quadrature\nwill prove to be too expensive for truly large-scale networks with millions of nodes.\nWe hope to explore techniques similar to those presented in [6] and [39] in order to\nextend our methodology to truly large-scale networks. Another relevant question is\nthe study of the rate of convergence of the Lanczos algorithm for estimating bilinear\nforms associated with adjacency matrices of graphs of different types.\nAcknowledgments. We are indebted to Tammy Kolda (Sandia National Laboratories) and David Gleich (Purdue University) for valuable suggestions.\nREFERENCES\n[1] Z. Bar-Yossef and L.-T. Mashiach, Local approximation of PageRank and Reverse PageRank, Proceedings CKIM'08, October 26\u201330, 2008, Napa Valley, California.\n[2] M. Benzi and P. Boito, Quadrature rule-based bounds for functions of adjacency matrices,\nLin. Algebra Appl., 433 (2010), pp. 637\u2013652.\n[3] M. Benzi, E. Estrada, and C. Klymko, Ranking Hubs and Authorities Using Matrix\nFunctions, Math/CS Technical Report TR-2012-003, Emory University. Available at\nhttp://www.mathcs.emory.edu/publications.php#reports.\n[4] M. Benzi and G. H. Golub, Bounds on the entries of matrix functions with applications to\npreconditioning, BIT, 39 (1999), pp. 417\u2013438.\n[5] S. Boccaletti, V. Latora, Y. Moreno, M. Chavez, and D.-U. Hwang, Complex networks:\nstructure and dynamics, Phys. Rep., 424 (2006), pp. 175\u2013308.\n[6] F. Bonchi, P. Esfandiar, D. F. Gleich, C. Greif, and L. V. S. Lakshmanan, Fast matrix\ncomputations for pair-wise and column-wise commute times and Katz scores, Internet\nMath., 8 (2012), pp. 73\u2013112.\n[7] A. Borodin, G. O. Roberts, J. S. Rosenthal, and P. Tsaparas, Finding authorities and\nhubs from link structures on the World Wide Web, Proceedings WWW10 (2001), ACM\n1-58113-348-0/01/0005.\n[8] U. Brandes and T. Erlebach, eds., Network Analysis: Methodological Foundations, Lecture\nNotes in Computer Science Vol. 3418, Springer, New York, 2005.\n[9] G. Caldarelli, Scale-free Networks, Oxford University Press, Oxford, UK, 2007.\n[10] M. C. Crofoot, D. I. Rubenstein, A. S. Maiya, and T. Y. Berger-Wolf, Aggression,\ngrooming and group-level cooperation in white-faced capuchins (Cebus capucinus): Insights\nfrom social networks, Amer. J. Primatology, 73 (2011), pp. 821\u2013833.\n[11] J. J. Crofts, E. Estrada, D. J. Higham, and A. Taylor, Mapping directed networks,\nElectr. Trans. Numer. Anal., 37 (2010), pp. 337\u2013350.\n[12] T. A. Davis and Y. Hu, The University of Florida Sparse Matrix Collection, ACM\nTrans. Math. Soft., 38(1) (2011), Article 1.\n[13] R. Diestel, Graph Theory, Springer-Verlag, Berlin, 2000.\n[14] C. H. Q. Ding, H. Zha, X. He, P. Husbands, and H. D. Simon, Link analysis: hubs and\nauthorities on the World Wide Web, SIAM Rev., 46 (2004), pp. 256\u2013268.\n\n\fRanking hubs and authorities using matrix functions\n\n29\n\n[15] E. Estrada, The Structure of Complex Networks, Oxford University Press, Oxford, UK, 2011.\n[16] E. Estrada, M. Fox, D. Higham, and G.-L. Oppo, eds., Network Science. Complexity in\nNature and Technology, Springer, New York, 2010.\n[17] E. Estrada and N. Hatano, Communicability in complex networks, Phys. Rev. E, 77 (2008),\narticle 036111.\n[18] E. Estrada, N. Hatano, and M. Benzi, The physics of communicability in complex networks,\nPhys. Reports, 514 (2012), pp. 89-119.\n[19] E. Estrada and D. J. Higham, Network properties revealed through matrix functions, SIAM\nRev., 52 (2010), pp. 671\u2013696.\n[20] E. Estrada and J. A. Rodr\u0131\u0301guez-Vel\u00e1zquez, Subgraph centrality in complex networks,\nPhys. Rev. E, 71 (2005), 056103.\n[21] A. Farahat, T. Lofaro, J. C. Miller, G. Rae, and L. A. Ward, Authority rankings from\nHITS, PageRank, and SALSA: existence, uniqueness, and effect of initialization, SIAM\nJ. Sci. Comput., 27 (2006), pp. 1181\u20131201.\n[22] D. Fogaras, Where to start browsing the Web?, in T. B\u00f6hme, G. Heyer, and H. Unger (Eds.),\nProceedings IICS 2003, Lecture Notes in Computer Science, 2877 (2003), pp. 65\u201379.\n[23] M. Franceschet, PageRank: Standing on the shoulders of giants, Comm. ACM, 54 (2011),\npp. 92\u2013101.\n[24] G. H. Golub and G. Meurant, Matrices, Moments and Quadrature with Applications, Princeton University Press, Princeton, NJ, 2010.\n[25] N. J. Higham, The scaling and squaring method for the matrix exponential revisited, SIAM\nJ. Matrix Anal. Applic., 26 (2006), pp. 1179\u20131193.\n[26] N. J. Higham, Functions of Matrices. Theory and Computation, Society for Industrial and\nApplied Mathematics, Philadelphia, PA, 2008.\n[27] S. Kamvar, Numerical Algorithms for Personalized Search in Self-Organizing Information\nNetworks, Princeton University Press, Princeton and Oxford, 2010.\n[28] L. Katz, A new status index derived from sociometric data analysis, Psychometrika, 18 (1953),\npp. 39\u201343.\n[29] J. Kleinberg, Authoritative sources in a hyperlinked environment, J. ACM, 46 (1999), pp. 604\u2013\n632.\n[30] G. Kollias and E. Gallopoulos, Functional Rankings with Multidamping: Generalizing\nPageRank with Inhomogeneous Matrix Products, Tech. Rep. TR HPCLAB-SCG 01/09-11,\nUniversity of Patras, Greece, 2011.\n[31] A. N. Langville and C. D. Meyer, A survey of eigenvector methods for Web information\nretrieval, SIAM Rev., 47 (2005), pp. 135\u2013161.\n[32] A. N. Langville and C. D. Meyer, Google's PageRank and Beyond: The Science of Search\nEngine Rankings, Princeton University Press, Princeton, NJ, 2006.\n[33] A. N. Langville and C. D. Meyer, Who's #1? The Science of Rating and Ranking, Princeton\nUniversity Press, Princeton, NJ, 2012.\n[34] G. Meurant, MMQ toolbox for MATLAB, http://pagesperso-orange.fr/gerard.meurant/.\n[35] M. Mihail and C. Papadimitriou, On the eigenvalue power law, in J. D. P. Rolim and S. Vadhan (Eds.), Proceedings of RANDOM 2002, Lectures Notes in Computer Science, 2483\n(2002), pp. 254\u2013262.\n[36] M. E. J. Newman, The structure and function of complex networks, SIAM Rev., 45 (2003),\npp. 167\u2013256.\n[37] M. E. J. Newman, Networks: An Introduction, Cambridge University Press, Cambridge, UK,\n2010.\n[38] M. E. J. Newman, A.-L. Barabasi, and D. J. Watts, The Structure and Dynamics of Networks, Princeton University Press, Princeton, NJ, 2003.\n[39] B. Savas and I. Dhillon, Clustered low rank approximation of graphs in information science\napplications, Proceedings of the 2011 SIAM Conference on Data Mining, April 2011.\n[40] P. Tsaparas, Datasets for Experiments on Link Analysis Ranking Algorithms. Available\nat http://www.cs.toronto.edu/\u223ctsap/experiments/datasets/index.html (last accessed June\n2012).\n[41] S. Vigna, Spectral Ranking, arXiv:0912.0238v9 [cs.IR], 2 March 2011.\n[42] G. Wu and J. Li, SWRank: an approach for ranking semantic web reversely and consistently,\nin Third International Conference on Semantics, Knowledge and Grid, IEEE, 2007. DOI:\n10.1109/SKG.2007.81\n[43] G. Wu, J. Li, L. Feng, and K. Wang, Identifying potentially important concepts and relations\nin an ontology, in A. Sheth et al. (Eds.), Proceedings of ISWC 2008, Lecture Notes in\nComputer Science, 5318 (2008), pp. 33\u201349.\n\n\f"}