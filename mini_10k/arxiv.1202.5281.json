{"id": "http://arxiv.org/abs/1202.5281v3", "guidislink": true, "updated": "2012-05-22T14:04:00Z", "updated_parsed": [2012, 5, 22, 14, 4, 0, 1, 143, 0], "published": "2012-02-23T20:11:07Z", "published_parsed": [2012, 2, 23, 20, 11, 7, 3, 54, 0], "title": "A parameter-free, solid-angle based, nearest-neighbor algorithm", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1202.2665%2C1202.2847%2C1202.1988%2C1202.1817%2C1202.3894%2C1202.5948%2C1202.4364%2C1202.5656%2C1202.0099%2C1202.4399%2C1202.1443%2C1202.4428%2C1202.3480%2C1202.2434%2C1202.4402%2C1202.1517%2C1202.5480%2C1202.5302%2C1202.1839%2C1202.4414%2C1202.2984%2C1202.0661%2C1202.5869%2C1202.0307%2C1202.2573%2C1202.2849%2C1202.1781%2C1202.6635%2C1202.0500%2C1202.4693%2C1202.0666%2C1202.5040%2C1202.1121%2C1202.1175%2C1202.3819%2C1202.0098%2C1202.4386%2C1202.6593%2C1202.5281%2C1202.3649%2C1202.1327%2C1202.5840%2C1202.5253%2C1202.6171%2C1202.2686%2C1202.4472%2C1202.3792%2C1202.1392%2C1202.4020%2C1202.5807%2C1202.6062%2C1202.1497%2C1202.5527%2C1202.6465%2C1202.3420%2C1202.2129%2C1202.4351%2C1202.5855%2C1202.4222%2C1202.2661%2C1202.6650%2C1202.4051%2C1202.3184%2C1202.5551%2C1202.4133%2C1202.5513%2C1202.5315%2C1202.2297%2C1202.1010%2C1202.0428%2C1202.2186%2C1202.3517%2C1202.0671%2C1202.2318%2C1202.1248%2C1202.2636%2C1202.3641%2C1202.3378%2C1202.2941%2C1202.6463%2C1202.0877%2C1202.3867%2C1202.1243%2C1202.5583%2C1202.0482%2C1202.2564%2C1202.4882%2C1202.4752%2C1202.3588%2C1202.3703%2C1202.4808%2C1202.5918%2C1202.3014%2C1202.2688%2C1202.4928%2C1202.1495%2C1202.2306%2C1202.1373%2C1202.5777%2C1202.3422%2C1202.2998&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "A parameter-free, solid-angle based, nearest-neighbor algorithm"}, "summary": "We propose a parameter-free algorithm for the identification of nearest\nneighbors. The algorithm is very easy to use and has a number of advantages\nover existing algorithms to identify nearest- neighbors. This solid-angle based\nnearest-neighbor algorithm (SANN) attributes to each possible neighbor a solid\nangle and determines the cutoff radius by the requirement that the sum of the\nsolid angles is 4{\\pi}. The algorithm can be used to analyze 3D images, both\nfrom experiments as well as theory, and as the algorithm has a low\ncomputational cost, it can also be used \"on the fly\" in simulations. In this\npaper, we describe the SANN algorithm, discuss its properties, and compare it\nto both a fixed-distance cutoff algorithm and to a Voronoi construction by\nanalyzing its behavior in bulk phases of systems of carbon atoms, Lennard-Jones\nparticles and hard spheres as well as in Lennard-Jones systems with\nliquid-crystal and liquid-vapor interfaces.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1202.2665%2C1202.2847%2C1202.1988%2C1202.1817%2C1202.3894%2C1202.5948%2C1202.4364%2C1202.5656%2C1202.0099%2C1202.4399%2C1202.1443%2C1202.4428%2C1202.3480%2C1202.2434%2C1202.4402%2C1202.1517%2C1202.5480%2C1202.5302%2C1202.1839%2C1202.4414%2C1202.2984%2C1202.0661%2C1202.5869%2C1202.0307%2C1202.2573%2C1202.2849%2C1202.1781%2C1202.6635%2C1202.0500%2C1202.4693%2C1202.0666%2C1202.5040%2C1202.1121%2C1202.1175%2C1202.3819%2C1202.0098%2C1202.4386%2C1202.6593%2C1202.5281%2C1202.3649%2C1202.1327%2C1202.5840%2C1202.5253%2C1202.6171%2C1202.2686%2C1202.4472%2C1202.3792%2C1202.1392%2C1202.4020%2C1202.5807%2C1202.6062%2C1202.1497%2C1202.5527%2C1202.6465%2C1202.3420%2C1202.2129%2C1202.4351%2C1202.5855%2C1202.4222%2C1202.2661%2C1202.6650%2C1202.4051%2C1202.3184%2C1202.5551%2C1202.4133%2C1202.5513%2C1202.5315%2C1202.2297%2C1202.1010%2C1202.0428%2C1202.2186%2C1202.3517%2C1202.0671%2C1202.2318%2C1202.1248%2C1202.2636%2C1202.3641%2C1202.3378%2C1202.2941%2C1202.6463%2C1202.0877%2C1202.3867%2C1202.1243%2C1202.5583%2C1202.0482%2C1202.2564%2C1202.4882%2C1202.4752%2C1202.3588%2C1202.3703%2C1202.4808%2C1202.5918%2C1202.3014%2C1202.2688%2C1202.4928%2C1202.1495%2C1202.2306%2C1202.1373%2C1202.5777%2C1202.3422%2C1202.2998&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We propose a parameter-free algorithm for the identification of nearest\nneighbors. The algorithm is very easy to use and has a number of advantages\nover existing algorithms to identify nearest- neighbors. This solid-angle based\nnearest-neighbor algorithm (SANN) attributes to each possible neighbor a solid\nangle and determines the cutoff radius by the requirement that the sum of the\nsolid angles is 4{\\pi}. The algorithm can be used to analyze 3D images, both\nfrom experiments as well as theory, and as the algorithm has a low\ncomputational cost, it can also be used \"on the fly\" in simulations. In this\npaper, we describe the SANN algorithm, discuss its properties, and compare it\nto both a fixed-distance cutoff algorithm and to a Voronoi construction by\nanalyzing its behavior in bulk phases of systems of carbon atoms, Lennard-Jones\nparticles and hard spheres as well as in Lennard-Jones systems with\nliquid-crystal and liquid-vapor interfaces."}, "authors": ["Jacobus A. van Meel", "Laura Filion", "Chantal Valeriani", "Daan Frenkel"], "author_detail": {"name": "Daan Frenkel"}, "author": "Daan Frenkel", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1063/1.4729313", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/1202.5281v3", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1202.5281v3", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cond-mat.soft", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cond-mat.soft", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1202.5281v3", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1202.5281v3", "arxiv_comment": null, "journal_reference": null, "doi": "10.1063/1.4729313", "fulltext": "A parameter-free, solid-angle based, nearest-neighbor algorithm\nJacobus A. van Meel\nFOM Institute for Atomic and Molecular Physics,\nScience Park 104, 1098 XG Amsterdam, The Netherlands\n\nLaura Filion\nDepartment of Chemistry, University of Cambridge,\nLensfield Road, Cambridge, CB2 1EW, United Kingdom\n\narXiv:1202.5281v3 [cond-mat.soft] 22 May 2012\n\nChantal Valeriani\nSUPA, School of Physics and Astronomy, University of Edinburgh,\nMayfield Road, Edinburgh, EH9 3JZ, Scotland and\nDepartamento de Quimica Fisica, Facultad de Quimica,\nUniversidad Complutense de Madrid, 28040, Madrid, Spain\n\nDaan Frenkel\nDepartment of Chemistry, University of Cambridge,\nLensfield Road, Cambridge, CB2 1EW, United Kingdom\nWe propose a parameter-free algorithm for the identification of nearest neighbors. The algorithm\nis very easy to use and has a number of advantages over existing algorithms to identify nearestneighbors. This solid-angle based nearest-neighbor algorithm (SANN) attributes to each possible\nneighbor a solid angle and determines the cutoff radius by the requirement that the sum of the\nsolid angles is 4\u03c0. The algorithm can be used to analyze 3D images, both from experiments as well\nas theory, and as the algorithm has a low computational cost, it can also be used \"on the fly\" in\nsimulations. In this paper, we describe the SANN algorithm, discuss its properties, and compare it\nto both a fixed-distance cutoff algorithm and to a Voronoi construction by analyzing its behavior\nin bulk phases of systems of carbon atoms, Lennard-Jones particles and hard spheres as well as in\nLennard-Jones systems with liquid-crystal and liquid-vapor interfaces.\n\nI.\n\nINTRODUCTION\n\nIn most studies of many-particle systems, one is confronted with the task of determining the nearest neighbors of a particle, or set of particles. Interestingly, while\nidentifying nearest neighbors is an important component\nof various analyses, and is sometimes even needed to evaluate interaction potentials, there is no unique definition\nof a nearest neighbor and, as a result, what one defines\nas a nearest neighbor is typically dependent on the question at hand. The two most common algorithms for determining nearest neighbors are i) a fixed-distance cutoff\nand ii) a Voronoi construction [1]. However, many extensions, and other definitions have been used as well, see\nfor instance Refs. [2, 3].\nA fixed-distance cutoff is the obvious choice in simulations with particles interacting through a short-range\npotential, where each nearest neighbor is an interaction\npartner and the cutoff distance corresponds to the interaction range. Additionally, fixed-distance cutoffs have\nalso been used in determining nearest neighbors for structural analyses such as calculating bond-order parameters\nin nucleation studies (e.g. see Ref. [4]). However, in these\ncases, the \"fixed-distance\" is not well defined. Arguably,\nthe first minimum of the pair correlation function g(r)\n(also known as radial distribution function) is a reasonable choice for the cutoff, as it relates to the neighbors\nin the first coordination shell. However, the precise loca-\n\ntion of this minimum depends on both the system's details and thermodynamic conditions and therefore must\nbe determined every time either one is changed. Additionally, the cutoff is defined for the entire system and,\nas such, is not appropriate for systems with large density\ngradients, such as occur naturally in nucleation studies,\nin systems in the presence of gravity or in systems with\ninterfaces.\nIn contrast, a Voronoi construction [1] is based on\npurely geometric constraints and is parameter free. In\naddition to identifying nearest neighbors, this method\ncan be used to determine geometric properties like edges\nand faces shared between these neighbors - data that are\nfrequently useful for structural analysis and classification.\nBased on the local environment around a particle, it is\nmore appropriate than a fixed-distance cutoff in the case\nof density gradients. However, there are also a number of\ninherent problems with a Voronoi construction, some of\nwhich will be discussed in this manuscript. First of all,\nthe method is computationally expensive and hence is\nrarely used on-the-fly in simulations. More importantly,\nit is not robust against thermal fluctuations. In a crystal, thermal fluctuations which cause particles to fluctuate around their equilibrium lattice sites can spuriously\nincrease the number of particles which share a small face\nwith the target particle [5, 6] and hence increase the number of particles identified as nearest neighbors. There exist extensions to the Voronoi construction which aim to\n\n\f2\nincrease the robustness against these fluctuations [5, 7\u2013\n10], however, they typically introduce parameters, removing the \"parameter free\" advantage of the algorithm,\nand they further increase the computational cost.\nLooking at the advantages and disadvantages of both\nthe fixed-distance cutoff and the Voronoi algorithm, we\nsuggest a list of features which a \"good\" nearest neighbor algorithm should have. Specifically, an algorithm\nshould i) be able to deal with systems with inhomogeneous density, ii) be stable against thermal fluctuations,\niii) be parameter free and iv) be computationally inexpensive. In this manuscript, we propose, with these goals\nin mind, a simple algorithm for the identification of nearest neighbors: the solid-angle based nearest-neighbor algorithm (SANN). This method is based on similar principles to a theory used by Corwin et al. [11] which used\nsolid angles to predict the number of nearest neighbors.\nIt is also similar to a Voronoi construction as it does not\nrequire tuneable parameters. However, SANN is computationally significantly less expensive than a Voronoi\nconstruction. In fact, its computational cost only slightly\nexceeds that of a fixed-distance cutoff making it suitable\nfor on-the-fly use in simulations. In order to compare\nour algorithm with the fixed-distance cutoff and Voronoi\nconstruction, we apply all three methods to monodisperse\nhard spheres, Lennard-Jones liquid and fcc crystal bulk\nphases, the 3-fold coordinated liquid carbon and graphite\nphases and the 4-fold coordinated liquid carbon and diamond phases and compare the set of nearest neighbors\nobtained with the three methods. On some liquid/solid\nsystems we also compute bond-order parameters and discuss the impact different nearest-neighbor sets have on\nthe bond-order correlator distributions. To conclude, we\nstudy liquid-crystal and liquid-vapor Lennard-Jones twophase systems to test the behavior of SANN at interfaces.\n\nII.\nA.\n\nMETHOD\n\nDescription of SANN method\n\nAs mentioned in the introduction, there exists no\nunique definition of a nearest neighbor. Consequently,\nit comes as no surprise that our SANN algorithm introduces a definition that differs from those of existing algorithms. Yet it has many similarities with the definitions\nof the fixed-distance cutoff and the Voronoi construction,\nas it is based on similar concepts.\nConsider a dense system with excluded volume, where\nwe have a particle i located at position ~ri surrounded\nby particles {j}. The fixed-distance cutoff defines the\nnearest neighbors of particle i to be all the particles of\n{j} with a distance to i smaller than the cutoff-distance.\nHowever, as mentioned in the introduction, the problem\nwith this definition is in choosing that distance. This is\nwhere our SANN algorithm comes into play. For each\nparticle i SANN determines an individual cutoff distance\n(m)\nRi , which we call the shell radius. It depends on the\n\n(m)\n\nRi\n\u03b8 i,j\n\nri,j\n\ni\n\nj\n\nFigure 1: Definition of the angle \u03b8i,j associated with a neighbor j of particle i. Here, ri,j is the distance between both\n(m)\nparticles and Ri is the neighbor shell radius.\n\nlocal environment of particle i and includes its m nearest\nneighbors. Since the cutoff distance is now a local property, the algorithm is suitable for systems with inhomoge(m)\nneous densities. For the computation of Ri SANN uses\na purely geometrical construction, as does the Voronoi\ntessellation. Thus, the algorithm is parameter-free and\nscale-free. In the following we describe the geometrical\n(m)\nconstruction and how m and Ri are determined.\nFirst, we assume the particles {j} surrounding i are\nknown and ordered such that ri,j \u2264 ri,j+1 for all j. This\n(m)\nrelates Ri and m in the following manner:\n(m)\n\nri,m \u2264 Ri\n\n< ri,m+1 .\n\n(1)\n\nThen, starting with the particle closest to i we associate\nwith each potential neighbor j an angle \u03b8i,j based on the\ndistance between the particles ri,j = |~rj \u2212 ~ri | and the yet\n(m)\nundetermined shell radius Ri as depicted in Figure 1.\nSANN defines the neighborhood of a particle i to consist of the nearest (i.e. closest) m particles {j} such that\nthe sum of their solid angles associated with \u03b8i,j equals\n4\u03c0, i.e.\n4\u03c0 =\n\nm\nX\nj=1\n\n2\u03c0[1 \u2212 cos(\u03b8i,j )] =\n\nm\nX\n\n(m)\n\n2\u03c0(1 \u2212 ri,j /Ri\n\n). (2)\n\nj=1\n\nWe point out that while the number m and the shell\n(m)\nradius Ri are not known yet, they are not independent:\nonce one is known it is straightforward to determine the\nother. Also note that since the solid angle contribution\nfor a single neighbor is always less than 2\u03c0, m must be\nat least 3.\nTo visualize this idea imagine each solid angle as a cone\nwith its apex point located at particle i and the cone's\nbase center located at neighbor j. For a complete set of\nnearest neighbors all those cones stack to fill a spherical\nvolume around i with a radius corresponding to the shell\n\n\f3\n\nc)\n\nb)\n\na)\nC\n\nC\n\nB\n\nC\n\nB\n\nB\n\nD\nA\n\nD\nA\n\nA\n\nE\nF\n\nD\n\nE\nF\n\nE\nF\n\nFigure 2: 2d comparison of the SANN and Voronoi algorithms. In all three panels we show a central particle with potential\nnearest neighbors A through F. In panel a) we sketch the SANN algorithm: the green circle shows the shell radius, and particles\nB through F are identified as nearest neighbors. Note that in all panels the nearest neighbors are indicated with red lines.\nTo facilitate the comparison between a Voronoi construction and the SANN algorithm, in panel b) we make use of the fact\n(m)\n(m)\nthat the SANN algorithm is scale free, i.e. ri,j /Ri\n= (0.5ri,j )/(0.5Ri ) where 0.5ri,j is simply the distance from particle\n(m)\ni to the midpoint between i and j, and 0.5Ri\nis half the shell radius. In panel b) the green circles have a radius equal\nto the half the shell radius of the center particle, and are centered around each particle; the black lines are constructed by\nfinding the intersection of the green circles and indicate the width of the solid angle between the center particle and each of\nits neighbors, respectively. Finally, in panel c) we show a Voronoi construction for the same set of particles. Note that the\nVoronoi construction finds an extra nearest neighbor, i.e. particle A.\n(m)\n\nradius Ri . Obviously, cones are not space-filling (i.e.\nthey don't stack without gaps), so for the sum of solid\nangles to equal 4\u03c0 some cone overlap does occur.\nCombining Eqn. 1 and Eqn. 2 leads to a condition for\nthe determination of the neighbor shell radius,\nPm\nj=1 ri,j\n(m)\n< ri,m+1 ,\n(3)\nRi =\nm\u22122\n(m)\n\nwhere Ri refers to the shell radius containing m particles. To solve this inequality, we start with the smallest\nnumber of neighbors capable of satisfying Eqn. 2, m = 3,\nand increase m iteratively. During each iteration, we\nevaluate Eqn. 3 and the smallest m that satisfies the\n(m)\nequation yields the number of neighbors Nb (i) with Ri\nthe corresponding neighbor shell radius. It is straightforward to show that the algorithm converges, because\nthe neighbor distance increases monotonically due to the\n(m)\ndesorting, ri,m+1 \u2265 ri,m , and the cutoff radius Ri\n(m)\n(m+1)\n\u2264 Ri .\ncreases monotonically, Ri\nTo highlight the differences and similarities between\nthe geometry of the SANN algorithm and that of the\nVoronoi construction, we show in Figure 2 2d-schematics\nof both. In panel a) we depict the SANN algorithm:\nthe shell radius is show as a green circle, and the red\nlines connect the central particle to the nearest neighbors determined by SANN, i.e. particles B through F.\nIn panel c) we show the associated Voronoi construction.\nWe note that it identifies all particles A to F as neighbors\nof the center particle. The Wigner-Seitz cell is indicated\nwith black lines. Neighbor A shares only a small face\n\nand is fragile to thermal fluctuations. To compare the\nVoronoi construction to the SANN algorithm, in panel\nb) we make use of the fact that the algorithm is scale\n(m)\n(m)\nfree, i.e. ri,j /Ri = (0.5ri,j )/(0.5Ri ) where 0.5ri,j is\nsimply the distance from particle i to the midpoint be(m)\nis half the shell radius. In\ntween i and j, and 0.5Ri\npanel b) the green circles have a radius equal to the half\nthe shell radius of the center particle, and are centered\naround each particle; the black lines are constructed by\nfinding the intersection of the green circles and indicate\nthe width of the solid angle between the center particle and each of its neighbors, respectively. Hence, one\nway to picture this method is to picture slowly growing spheres around each particle. When the intersecting\nplanes associated with particle i (the black lines in the\nplot) yield solid angles summing to 4\u03c0, the shell radius\nof particle i has been found. This procedure is then repeated for each particle. In the schematic (Figure 2),\nParticle A is not a neighbor since there is no overlap between the green circle around particle A and green circle\naround the center particle, hence the fragility problem\nhighlighted in the discussion of the Voronoi construction\nis not present here. The black lines indicate the width of\nthe solid angles and can be compared to the faces of the\nWigner-Seitz cell. However, the faces are not identical to\nthe real Wigner-Seitz cell. In general the faces are either\nlarger or smaller than the real Wigner-Seitz faces. Note\nthat, by definition, SANN extends each face to the shell\ncircle (see Fig. 1), hence, the black lines in the SANN algorithm overlap sometimes, i.e. between particle D and\nE as well as E and F.\n\n\f4\nB.\n\n(m+1)\n\nAlgorithm\n\nFollowing the procedure outlined in the previous section we propose this simple scheme to determine the nearest neighbors of particle i:\n1. Compute distances ri,j to all potential neighbors\n{j} from i.\n2. Sort possible neighbors {j} by their distance ri,j in\nincreasing order.\n3. Start with m = 3 (i.e. the minimum number of\nneighbors).\nPm\n(m)\n4. Compute Ri = j=1 ri,j /(m \u2212 2).\n(m)\n\n5. If (Ri > ri,m+1 ), then increment m by 1 and go\nback to step 4.\n6. Otherwise, m is Nb (i), i.e. the number of neigh(m)\nbors for particle i, and Ri the associated neighbor shell radius.\nA C/Fortran implementation of the scheme can be\nfound in the Supplementary Materials [12].\nC.\n\nAlgorithm properties\n\nBefore comparing our algorithm to the results from\na fixed-distance cutoff and a Voronoi construction, we\nfirst discuss several inherent properties of our SANN algorithm.\nConvergence: Provided there exist enough neighbors\n{j} of particle i the algorithm converges, because\n(m)\n(m+1)\nand all neighbors are sorted such\n< Ri\nRi\n(m+1)\nthat rm+1 \u2265 rm . To proof this, we express Ri\n(m)\nin terms of Ri :\n(m+1)\n\nRi\n\n(m)\n\n= Ri\n\n(m) i\ni,m+1 /Ri\n\nhm \u2212 2 + r\n\nm\u22122+1\n\n.\n\n(m+1)\n\n(4)\n(m)\n\n>\nrequires that Ri\nThe definition of Ri\nri,m+1 , which in combination with Eqn. 4 leads to\n(m)\n(m+1)\n< Ri .\nRi\nEqual distances neighbors: The algorithm also ensures that multiple neighbors with equal distance\nto the center particle are all identified as neighbors.\n(m+1)\n> ri,m+i , which\nTo proof this we show that Ri\nmeans that the SANN radius is always larger than\neach particle distance included. Analogous to the\n(m+1)\nin terms of\nconvergence proof, we express Ri\nri,m+1 , the latest (and largest) distance included:\n(m+1)\n\nRi\n\n= rm+1\n\nh R(m) /r\ni\n\ni,m+1 (m\n\n\u2212 2) + 1 i\n.\nm\u22122+1\n\n(5)\n\n(m)\n\nrequires that Ri > ri,m+1 , which\nAgain, Ri\n(m+1)\n> ri,m+1 .\ncombined with Eqn. 5 leads to Ri\nTherefore, if multiple neighbors share the same distance, all are included.\nPair-wise symmetry: For both a fixed-distance cutoff\nand the Voronoi construction, the neighbors are\nsymmetric in the sense that if particle i is a neighbor of j, then j is also a neighbor of particle i. In\nSANN, this symmetry is not ensured, because every\nparticle has its own neighbor shell radius. Thus the\ndistance between both particles can be smaller than\nthe shell radius of particle i and larger than that\nof particle j at the same time; hence, asymmetries\ncan occur. However, we have found that the fraction of asymmetric neighbors is quite small: below\n5% for the systems we studied. Moreover, these\ntend to be those neighbors that are far away, i.e.\ncontribute a small solid angle and are arguably of\nminor importance for the neighborhood. Therefore,\nfor many applications this might not matter. But\nin case it does we provide two (arbitrary) ways to\nmake the algorithm \"symmetric\": if j is a neighbor\nof i but not vice-versa, either a) remove the asymmetric pair, i.e. remove j from the list of neighbors\nof i, or b) complete the asymmetric pair, i.e. add i\nto the list of neighbors of j.\nLocal volume: It is possible to assign a local volume\nto each particle. The Voronoi algorithm has as\nan obvious choice for the local volume the WignerSeitz cell, and by construction the sum of all local\nvolumes adds up to the total system volume. For\nSANN one can think of many different definitions\nof a local volume, e.g. related to the shell or cutoff\nradius, but there is no inherent definition. Consequently, the sum of such local volumes does not by\ndefinition equal the system volume. Again, if it is\nimportant to attribute a volume to each particle,\nwe can simply (and somewhat arbitrarily) rescale\nall volumes, such that their sum equals the total\nvolume.\nIndependence of space dimension: Although\ndesigned for three-dimensional space, we point out\nthat the algorithm is valid without modification\nfor any space-dimension with d \u2265 2 (and for d = 1,\nit is obviously not needed). In particular in higherdimensional space, e.g. when studying the packing\nof hyper-spherical particles, easy-to-implement\nalgorithms that go beyond the fixed-distance\ncutoff are scarce and SANN might be an attractive\nprocedure.\nNext-nearest neighbors: In principle, the algorithm\ncan easily be extended to yield a set of next-nearest\nneighbors, e.g. neighbor particles with a distance\ncorresponding approximately to the second peak of\nthe pair correlation function g(r). For this task the\n\n\f5\nalgorithm is performed twice as follows: in the first\nrun, the nearest neighbors are computed without\nany modifications. Then all these nearest neighbors\nare discarded from the list of possible neighbors,\nand the algorithm is run a second time. Because\nthe algorithm is scale-free, no modification to the\nalgorithm is required, and the next-nearest neighbor shell is obtained. Note that simply increasing\nthe total solid angle to 8\u03c0 in Eqn. 2 does not work,\nas the solid angle contribution of the nearest neighbors would dominate due to the large shell radius\n(m)\nRi . As we shall see later in the paper, in practice this extension does not work particularly well\nfor finding next-nearest neighbors.\n\nIII.\n\nSIMULATION DETAILS\n\nBelow, we briefly describe the systems and the simulation methods used to produce the test configurations\nstudied in this paper. Moreover, we provides details\nabout the library used for the Voronoi construction and\nthe implementation of our SANN algorithm. At the end\nof this section we briefly review the bond-order correlators that we use later to perform a structural analysis on\nsome of the systems.\nIn what follows, we denote the temperature by T , the\npressure by P and the (number) density by \u03c1. The packing fraction is defined as \u03c6 = \u03c06 \u03c1d3 , where d is the particle's diameter. In what follows, \u03c3 will be the unit of\nlength for both the hard-sphere and the Lennard-Jones\nsystems whereas for carbon we will express the length\nin \u00c5. All distances presented in the manuscript will be\nexpressed in the appropriate length units.\n\nA.\n\nSample preparation\n\nMonodisperse hard-sphere configurations were prepared using an event-driven molecular dynamics simulation in an NVT ensemble with N = 86400 particles in\na cubic box with periodic boundary conditions and with\ntemperature T = 1, mass m = 1 and diameter d = 1. The\nsystem was prepared at a packing fraction (\u03c6 = 0.54)\nwithin the solid-liquid coexistence region (\u03c6f = 0.492\nand \u03c6s = 0.543 [13]) and at a higher packing fraction\n(\u03c6 = 0.61) beyond the hard-sphere glass-transition packing fraction (\u03c6g = 0.58). In both configurations only 1%\nof the particles are labeled as solid-like with a q6 bond order criterion; note that the q6 criterion will be discussed\nlater in the text. For more details on these simulations,\nwe refer the reader to Refs. [14] and [15].\nThe carbon phases were simulated using the LCBOPI+\npotential [16] at the same conditions as the study on\ndiamond nucleation in Ref. [17], namely P = 30GP a\nand T = 3750K for the 3-fold coordinated liquid and\ngraphite, and P = 85GP a and T = 5000K for the 4-fold\ncoordinated liquid and diamond phases. Both conditions\n\ncorrespond to 25% under-cooling with a nucleation freeenergy barrier equal to or larger than \u2206G = 25kB T (with\nkB Boltzmann's constant) preventing spontaneous crystallization of the metastable liquid phase. All systems\ncontained N = 1000 particles, with the exception of the\ngraphite crystal which had N = 960 particles. More details on the simulation methods and the semi-empirical\ninteraction potential are given in Ref. [16].\nIn our discussions of all Lennard-Jones systems, we\ndenote with T \u2217 and P \u2217 the temperature and pressure\nin reduced units (T \u2217 = kB T /\u01eb and P \u2217 = P \u03c3 3 /\u01eb),\nwith \u01eb the Lennard-Jones well-depth, and \u03c1\u2217 = \u03c1\u03c3 3 the\ndensity in reduced units. To construct configurations\nof the Lennard-Jones fcc crystal and liquid phases we\nperformed Monte Carlo simulations in the isothermalisobaric ensemble for particles interacting via a truncated\nand shifted Lennard-Jones pair potential [18, 19] with\na cutoff distance of 2.5. For both phases, a system of\nN = 4000 particles was prepared at the reduced temperature T \u2217 = 0.92 and pressure P \u2217 = 5.68. Under these conditions, which correspond to 20% under-cooling with respect to coexistence, the liquid phase is metastable with\nrespect to the fcc crystal phase. However, a nucleation\nfree-energy barrier of \u2206G \u2248 20kB T prevents spontaneous\ncrystallization on simulation time scales [20]. The twophase liquid-crystal system was simulated using the same\nLennard-Jones potential at the same conditions, but with\nN = 8000 particles. The equilibration was biased with a\nquadratic potential on the number of solid-like particles\nto prevent the further growth of the crystal phase. See\nRef. [18] for details on biased Monte Carlo simulations\nand Ref. [4] on how to identify solid-like particles. The\ntwo-phase liquid-vapor configurations were prepared using the same Lennard-Jones potential and equilibrated\nusing N V T Monte Carlo simulations at reduced temperature T \u2217 = 1.0, number density \u03c1\u2217 = 0.3, and a system\nsize of N = 5000 particles. In order to study the liquidvapor interface, the simulation box was elongated along\nthe x-axis such that the box length in the x direction was\n2.5 times as long as the y and z directions. As a result\nof this simulation box geometry, the resulting liquid-gas\ninterface was perpendicular to the x-axis.\n\nB.\n\nVoronoi and SANN implementation details\n\nTo compute the Voronoi construction, we used the\nOpen Source Computational Geometry Algorithms Library (CGAL [21]), version 3.7. However, we were only\ninterested in the set of nearest neighbors and not in the\nadditional Voronoi information such as the volume, faces,\nedges, etc. of the Wigner-Seitz cell. Therefore, it was sufficient and computationally cheaper to perform a Delaunay triangulation, which is the dual of the Voronoi construction. Either construction can be transformed into\nthe other and both yield identical nearest-neighbor sets.\nWe used CGAL's \"exact predicates inexact construction\"\nkernel and included 8 periodic copies of each particle to\n\n\f6\nemulate periodic boundary conditions. Although CGAL\ndoes support 3d Delaunay triangulation with 3d periodicity, it turned out that the run-time was significantly\nworse. The particles were inserted sequentially to map\nCGAL vertex handles and our particle ids.\nTo speed up the SANN algorithm we made use of\na Verlet list [18] with a long cutoff distance to determine the set of possible neighbors for each particle. Although this method involves a cutoff parameter, we could\nhave chosen a parameter-free algorithm like a binary\nspace partitioning tree or an octree [22]. In general, any\ndomain-decomposition method suffices as long as it provides enough particles for the algorithm to converge.\n\nIV.\n\nRESULTS\n\nIn what follows we apply the proposed algorithm\n(SANN) to several simulation samples and compare the\nresulting set of nearest neighbors to the sets obtained\nfrom both the fixed-distance cutoff criterion and the\nVoronoi construction. Moreover, on some systems we\nperform a structural analysis using bond-order parameters and discuss the impact different nearest-neighbor\nsets have on the bond-order correlator distributions. We\nfinish by presenting run-times of each algorithm for several simulation samples.\n\nBulk phases\nC.\n\nBond-order correlator\n\nIn order to identify solid-like particles in some of the\nsystems, we used local bond-order parameters according\nto Ref. [4]. The original order parameter described by\nSteinhardt et al. [23] is based on the idea of expanding\nthe neighborhood of each particle in a system in terms\nof a specific set of spherical harmonics, e.g. expanding\nin terms of the spherical harmonics with l = 3, l = 4 or\nl = 6, depending on the local symmetry. The algorithm\nwas later refined by ten Wolde et al. [4] for the study of\nnucleation, and has proven to be a useful tool even in the\ncase of higher-dimensional systems [24, 25].\nTo compute the bond-order parameter each particle i\nis assigned a (2l + 1)-dimensional complex vector ~ql (i)\nwhose m-th component is defined by,\nqlm (i) =\n\n1 X\nYlm (~r\u0302ij ),\nNb (i) j\n\n(6)\n\nwhere Nb (i) denotes the number of nearest neighbors,\nYlm (~r\u0302ij ) is the set of spherical harmonics of order l with\ncomponents \u2212l \u2264 m \u2264 l, ~r\u0302ij is the unit vector pointing\nfrom the center of i to its neighbor j, and the sum runs\nover all neighbors {j} of particle i. From this we can\nconstruct a measure for the neighborhood similarity of\ntwo particles,\ndl (i, j) =\n\nq~l (i) * ~\nql\u2217 (j)\n,\n|~\nql (i)| |~\nql (j)|\n\n(7)\n\nwhere the superscript star denotes the complex conjugate. We call the dl (i, j) the local bond-order correlator, which is one when both particles are in an identically ordered environment. To distinguish reliably between solid-like and liquid-like particles, particularly in\nan under-cooled liquid, additional steps are required to\nincrease the contrast. However, since a change in the\nneighborhood algorithm already affects this stage of the\nanalysis, we will not follow the procedure to the end, but\ninstead compare the local bond-order correlators.\n\nTo start, we compute the nearest-neighbor distribution P (Nn ) for the bulk phases described in Section III A\nusing three neighborhood algorithms. For the fixeddistance cutoff, we set the cutoff to the minimum of\nthe pair correlation function, which yields rc = 1.5 and\nrc = 1.35 for the Lennard-Jones liquid and fcc crystal\nphases, respectively, rc = 2.0 for all carbon phases, and\nrc = 1.35 and rc = 1.3 for the low- and high-density\nhard-sphere suspensions.\nFigures 3a and 3b depict for the liquid and fcc\nLennard-Jones system the nearest-neighbor distribution\nP (Nn ) computed using fixed-distance cutoff distance\n(C), Voronoi construction (V ) and our SANN algorithm\nfor nearest neighbors (S) and for next-nearest neighbors\n(S2 ). In both systems, the Voronoi construction identifies more nearest neighbors on average than the fixeddistance cutoff and SANN methods. Its peak in the\nnearest-neighbor distribution is around 14 neighbors for\nboth the metastable-liquid and the fcc phases. The fixeddistance cutoff (C) exhibits a nearest-neighbor distribution which peaks around 13 neighbors in the liquid and\nat 12 in the fcc crystal, whereas the distribution obtained\nusing the SANN algorithm peaks around 11 \u2212 12 neighbors for the liquid and sharply at 12 neighbors in the fcc\ncrystal. Note that 12 is also the number that one would\nexpect from a close-packed arrangement of spheres.\nIn order to get a better understanding regarding the\nparticles which are identified as nearest neighbors in the\nSANN and Voronoi algorithms, we also compute the pair\ncorrelation function using only the nearest neighbors obtained with each method (gnn (r)) and compare them to\nthe g(r) of all particles. In the following discussions, we\npicture the environment around each particle to consist\nof several shells, each shell associated with a peak in the\ng(r). Hence, everything up to the first minimum of the\ng(r) corresponds to the first shell, everything between the\nfirst and the second minimum to the second shell and so\nforth. The fixed-distance cutoff method is not applied\nhere as, by definition, its gnn (r) yields g(r) exactly up\nto the cutoff radius, after which it is zero. The upper\ngraphs show the pair correlation functions gnn (r) and\ng(r) for reference, and the lower graphs show the ratio\n\n\f7\n\n0.4\n\n0.2\n0.1\n\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n5\n\n10\nNn\n\n15\n\n20\n\na)\n\n0\n\n5\n\n10\nNn\n\n15\n\n20\n\nb)\n\n4.0\n\n3.0\n2.0\n\ngnn(r)\n\nV\nS\nS2\n\n2.0\n1.0\n\n0.0\n1.0\n\n0.0\n1.0\n\nV\nS\nS2\n\n0.5\n0.0\n1\n\n1.5\n\n2\n\n2.5\n\nr\n\nV\nS\nS2\n\n3.0\n\n1.0\ngnn(r)/g(r)\n\ngnn(r)/g(r)\n\ngnn(r)\n\n4.0\n\nc)\n\nC\nV\nS\n\n0.8\nP(Nn)\n\n0.3\nP(Nn)\n\n1\n\nC\nV\nS\n\nV\nS\nS2\n\n0.5\n0.0\n1\n\nd)\n\n1.5\n\n2\n\n2.5\n\nr\n\nFigure 3: Nearest neighbors distribution P (Nn ) for a Lennard-Jones liquid (panel a) and fcc crystal (panel b) obtained by\nfixed-distance cutoff (C), Voronoi construction (V ) and SANN considering neighbors belonging to the first coordination shell\n(S). Panels c) and d) plot the pair correlation functions g(r), considering all particles, as a reference (thin grey dotted line),\nand gnn (r), considering only nearest neighbors (Voronoi (V ) and SANN (S)) and next-nearest neighbors (SANN (S2 )), for\nboth the liquid (c) and the fcc crystal (d). In addition, their fraction gnn (r)/g(r) is shown.\n\ngnn (r)/g(r). At a given distance r, the latter ratio gives\n1 if all particles at this distance are identified as nearest\nneighbors, and reduces to zero if none of these particles\nare considered neighbors. Hence, a steep decrease in the\nratio gnn (r)/g(r) indicates few fluctuations in the selection of the neighbors. In addition to the nearest neighbors, the graphs also show results for the next-nearest\nneighbors obtained from the SANN method (S2 ).\nFigure 3c and 3d plots these functions for the LennardJones phases. They show that gnn (r) for the Voronoi\nconstruction (V ) is identical to the reference g(r) up to\nthe first minimum, and in the fcc crystal even slightly\nbeyond that. From the position of the decrease in the\ngnn (r)/g(r), i.e. slightly to the right of the first minimum in the g(r), we see that the Voronoi algorithm also\nincludes some particles from the second neighbor shell\n(see upper panels of Figs. 3c and 3d). This behavior\noriginates from fluctuations which cause the Voronoi cell\nof next-nearest neighbors to occasionally share a small\nface [6]. There exist extensions to the Voronoi construction which attempt to increase the robustness of\nthe algorithm to fluctuations [8\u201310]. However, many of\n\nthem introduce non-inherent parameters and, as such,\nare not parameter-free. Therefore, we will not consider\nthem here. In contrast to the Voronoi algorithm, the\ngnn (r)/g(r) associated with the SANN algorithm (S)\ndrops to zero at the first minimum for both the liquid and\ncrystal phases and therefore hardly includes any nextnearest neighbors. The SANN algorithm to determine\nnext-nearest neighbors, denoted S2 , does not yield very\nprecise results. In particular, in the liquid S2 finds a few\nspurious particles from the first neighbor shell and only a\nfraction of next-nearest neighbors, and in the solid, where\nit does identify all next-nearest neighbors, it also includes\na considerable amount from the third neighbor shell. In\nboth cases this can be attributed to the form of the g(r),\ni.e. the broadness of the second peak in the liquid, and\nthe closeness of the second and third peaks in the solid.\nUnfortunately, this is a recurrent problem with trying to\nuse SANN to determine next nearest neighbors, and for\nthis reason S2 will not be discussed further in this paper.\nFor both hard-sphere systems studied, i.e. \u03c6 = 0.54\n(fluid) and \u03c6 = 0.61 (glass), the nearest-neighbor distributions of Figures 4a and 4b computed using the Voronoi\n\n\f8\n\n0.4\n\n0.2\n0.1\n\n0.3\n0.2\n0.1\n\n0\n\n0\n6\n\n8\n\n10\n\n12 14\nNn\n\n16\n\n18\n\n20\n\na)\n\n6\n\n8\n\n10\n\n12 14\nNn\n\n16\n\n18\n\n20\n\n5.0\n4.0\n3.0\n2.0\n1.0\n0.0\n1.0\n\ngnn(r)\n\nV\nS\n\ngnn(r)/g(r)\n\ngnn(r)/g(r)\n\ngnn(r)\n\nb)\n\nV\nS\n\n0.5\n0.0\n0.5\n\nc)\n\nC\nV\nS\n\n0.4\nP(Nn)\n\n0.3\nP(Nn)\n\n0.5\n\nC\nV\nS\n\n1\n\n1.5\n\n2\n\n2.5\n\nr\n\n5.0\n4.0\n3.0\n2.0\n1.0\n0.0\n1.0\n\nV\nS\n\nV\nS\n\n0.5\n0.0\n0.5\n\nd)\n\n1\n\n1.5\n\n2\n\n2.5\n\nr\n\nFigure 4: Nearest-neighbor distribution and g(r) as in Figure 3, but for a monodisperse hard spheres system at \u03c6 = 0.54 (panels\na and c) and \u03c6 = 0.61 (panels b and d).\n\nconstruction (V ) present a peak around 14 neighbors,\ngiven that some of the neighbors from the second shell\nare included (as shown in Figs. 4c and 4d). In contrast,\nthe distribution obtained using the fixed-distance cutoff\n(C) algorithm and the one obtained with SANN (S) are\nfairly similar (Figs. 4a and 4b) and both peaked around\n12 neighbors for both packing fractions. Again, this is the\nnumber one would expect in a close-packed arrangement\nof spherical particles. From Figures 4c and 4d we see that\nthe pair correlation function for the Voronoi construction\nis identical to the reference g(r) up to the first minimum.\nBut, as in the Lennard Jones system, it also seems to\npartially include particles from the second neighbor shell\n(see upper panels of Figs. 4c and d). In contrast, the\ngnn (r) computed using SANN drops to zero at the first\nminimum at both \u03c6's and does not include next-nearest\nneighbors.\nFigures 5 and 6 depict results for systems consisting of\n3-fold coordinated liquid carbon and graphite and 4-fold\ncoordinated liquid carbon and diamond, respectively. In\ncontrast to the Lennard-Jones and hard-sphere systems,\ncarbon is a highly structured network-forming system,\neven in the liquid phase. It features open structures with\nfew (3 or 4) close-by ordered neighbors: the 3-fold coordinated liquid carbon has a graphite-like structure in\n\nthe first coordination shell, whereas the 4-fold coordinated liquid carbon has a rather pronounced diamondlike structure in the first coordination shell, shown in\nthe strongly anisotropic angular distribution of the first\nneighbors. This is reflected in the pair correlation functions g(r) of Figures 5c and 6c, that show a sharp first\npeak followed by a broad deep minimum: a sign that up\nto the second neighbor shell the liquid has a structure\nalmost as pronounced as the one of the corresponding\nsolid.\nThe upper panels of Figures 5 and 6 represent the\nP (Nn ) computed for the 3-fold coordinated and 4-fold\ncoordinated carbon phases, respectively. The nearestneighbor distributions from the three methods differ significantly: with the cutoff distance set to the first minimum of the g(r), the fixed-distance cutoff yields a distribution peaked sharply around 3 (Fig. 5, 3-fold coordinated system) and 4 (Fig. 6, 4-fold coordinated system) particles both for the liquid and the crystal phases.\nCounting particles that form chemical bonds, the 3-fold\ncoordinated carbon should have 9 neighbors within the\nfirst two shells (3 in the first shell, separated by a distance of about 1.4 \u00c5, and 6 in the second shell belonging\nto the same graphite layer), whereas the 4-fold coordinated carbon should have 16 neighbors within the first\n\n\f9\n\n1\n0.8\n\nC\nV\nS\n\n0.8\n\n0.6\n\nP(Nn)\n\nP(Nn)\n\n1\n\nC\nV\nS\n\n0.4\n0.2\n\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n0\n\n5\n\n10\n\nNn\n\n20\n\n25\n\nNn\n\na)\n\nb)\n\n4.0\n\n3.0\n\ngnn(r)\n\nV\nS\n\n2.0\n\n2.0\n1.0\n\n0.0\n1.0\n\n0.0\n1.0\n\n0.5\n\nV\nS\n\n0.0\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\nr\n\nV\nS\n\n3.0\n\n1.0\ngnn(r)/g(r)\n\ngnn(r)/g(r)\n\ngnn(r)\n\n4.0\n\nc)\n\n15\n\n0.5\n\nV\nS\n\n0.0\n1\n\nd)\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\nr\n\nFigure 5: Nearest-neighbor distribution and g(r) as in Figure 3, but for both a 3-fold coordinated carbon liquid (panels a and\nc) and graphite crystal (panels b and d).\n\ntwo shells (4 in the first shell, separated by a distance of\nabout 1.54 \u00c5, and 12 in the second shell). The SANN\nalgorithm peaks around 10 (3-fold coordinated systems,\nFig. 5) and 12 (4-fold coordinated systems, Fig. 6) particles for both liquid and crystal phases. Those numbers\nindicate that SANN includes in each particle's neighbor\nlist most of the particles belonging to the second coordination shell, as confirmed by the g(r) plots in the lower\npanels of Figures 5 and 6. The Voronoi construction\npeaks around 17 (3-fold coordinated systems, Fig. 5) and\n20 (4-fold coordinated systems, Fig. 6) since it includes\nparticles from the second and third shells. This happens\nin the liquids, graphite and diamond, as shown by the\nnon-monotonic decay of the Voronoi's gnn (r)/g(r) that\nextends well beyond the second minimum in these cases.\nTo explain the behavior for both the Voronoi construction and the SANN method, we recall that both 3-fold\nand the 4-fold coordinated carbon phases are networkforming open structures. Moreover, graphite forms layers\nthat are several particle diameters apart (with 3.4 \u00c5 the\ndistance between two layers). This structure affects both\nalgorithms differently; by definition the Voronoi construction searches for neighbors that surround the center particle in all space dimensions, attempting to construct a complete (3d) Wigner-Setz cell. For the 4-fold\n\ncoordinated carbon phases the Wigner-Seitz cell of the\nneighbors from the first coordination shell is a fragile\ntetrahedron, meaning that it is very likely that much\nfurther apart particles share a small face. Hence it contains particles from the second and even higher coordination shells. The planar arrangement of neighbors in\nthe 3-fold coordinated carbon phases forces the Voronoi\nconstruction to consider particles from neighboring layers to complete a 3d Wigner-Seitz cell; particles that, as\none might argue, belong to an entirely different neighborhood. In contrast, SANN does not attempt to complete\na 3d environment. However, in order to complete its\nneighborhood with only neighbors from the first coordination shell they must have almost identical distances.\nThis is rarely the case in physical systems and therefore\nit includes more distant particles as well. Then, however,\nits neighborhood is dominated by the particles from the\nfirst coordination shell, since they are much closer and\nconsequently contribute much larger solid angles in comparison to more distant particles from the second shell.\nThis effect seems to be more pronounced in the diamond\ncrystal phase than in the other carbon phases, and it is\nthe reason why not all particles from the second shell are\nincluded.\nAs an example for this behavior, we depict a few\n\n\f10\n\n1\n0.8\n\nC\nV\nS\n\n0.8\n\n0.6\n\nP(Nn)\n\nP(Nn)\n\n1\n\nC\nV\nS\n\n0.4\n0.2\n\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n5\n\n10\n\n15\n\n20\n\n25\n\n0\n\n5\n\n10\n\nNn\n\n15\n\n20\n\n25\n\nNn\n\na)\n\nb)\n\n3.0\n\n2.0\n\ngnn(r)\n\nV\nS\n\n1.0\n0.0\n1.0\n0.5\n\ngnn(r)/g(r)\n\ngnn(r)/g(r)\n\ngnn(r)\n\n3.0\n\nV\nS\n\n0.0\n1\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\nr\n\nc)\n\nV\nS\n\n2.0\n1.0\n0.0\n1.0\n0.5\n\nV\nS\n\n0.0\n1\n\nd)\n\n1.5\n\n2\n\n2.5\n\n3\n\n3.5\n\n4\n\nr\n\nFigure 6: Nearest-neighbor distribution and g(r) as in Figure 3, but for both a 4-fold coordinated carbon liquid (panels a and\nc) and diamond crystal (panels b and d).\n\ngraphite layers in Figure 7, where we color particles identified as neighbors with the Voronoi (panel a) and SANN\n(panel b) algorithms. Although geometrically correct,\nthe additional neighbors from arguably different neighborhoods identified by the Voronoi construction may distort results for local quantities. Figure 7c presents a topview of the center layer of panel (b) and shows that the\nneighborhood identified by SANN includes the complete\nfirst and almost complete second neighbor shell.\n\nInterfaces\n\nWe now apply the three algorithms to two-phase systems with planar interfaces, namely a liquid-crystal and\na liquid-vapor Lennard-Jones systems as described in\nSection III A. The two phases are arranged in a slabgeometry such that the interfaces are normal to the xdirection. For the fixed-distance cutoff we use rc = 1.5,\nwhich corresponds to the minimum of the g(r) for the\nliquid in the liquid-crystal system; note that the density\nof this liquid is not the same as the density of the liquid\nin the liquid-gas system. This choice of rc is arbitrary\nsince there is no way to choose a cutoff which satisfies all\nfour phases simultaneously.\n\nIn Figure 8D we plot\nE the average number of nearest neighbors NN b (x) and the corresponding variance\nD\nE D\nE2\n2\nV ar(x) = NN\nas a function of x for\nb (x) \u2212 NN b (x)\nboth systems. As expected, the liquid-crystal interface\n(Fig. 8 panel a) is barely visible from all three methods\nand the results are quite similar. However, while the\nfixed-distance cutoffDand SANN\nE methods seem to show\na slight increase in NN b (x) in the crystal phase, this\ndoes not appear evident in the Voronoi algorithm. In all\ncases, the crystal seems to have a slightly lower variance\nthan the fluid. In contrast, the liquid-vapor interface\n(Fig. 8 panel b) is very well captured by the average number of nearest neighbors (upper panels) computed by the\nfixed-distance cutoff, whereas the SANN algorithm shows\nonly a slight decrease of the number of nearest neighbors\nin the vapor phase. The Voronoi algorithm finds even\nmore neighbors in the low-density vapor phase and its\nstandard deviation (lower panel) increases strongly in the\nvapor phase. This behavior reflects the strong sensitivity of the Voronoi construction to thermal fluctuations.\nAlthough V ar(x) also fluctuates in the other two methods, the changes are much less pronounced than in the\nVoronoi case.\n\n\f11\n\na)\n\nb)\n\nc)\n\nC\n\n0\na)\n\nV\n\nS\n\n< NNb(x) >\n\n18\n16\n14\n12\n10\n3\n2\n1\n0\n\nVar(x)\n\nVar(x)\n\n< NNb(x) >\n\nFigure 7: Simulation snapshot of 3-fold coordinated carbon graphite showing the first neighbors (yellow) of a center particle\n(gray). Surrounding particles that are not part of the neighborhood are shown in blue. a) Voronoi construction; b) SANN\nalgorithm; c) Top-view on the center layer of panel b.\n\n5\n\n10\n\n15\n\n20\n\nx\n\nb)\n\n20\n15\n10\n5\nC\n0\n15\n10\n5\n0\n0\n\nV\n\nS\n\n10\n\n20\n\n30\n\n40\n\nx\n\nFigure 8: Results for two-phase samples in a slab-geometry, with the two interfaces oriented normal to the x-direction. The\ntwo phases are a) liquid-crystal and b) liquid-vapor. Note that the densities of the liquid in both cases areDnot the Esame. For\nboth samples the upper panel shows, as function of x-position, the average number of nearest neighbors, NNb (x) , and the\nD\nE D\nE2\n2\nlower panel the corresponding variance, V ar(x) = NNb\n(x) \u2212 NNb (x) , for each of the algorithms: fixed-distance cutoff\n\n(C) with rc = 1.5, Voronoi construction (V ) and SANN considering neighbors belonging to the first coordination shell (S).\nNote the different scales on the y-axis.\n\nTo get a better understanding for the nearest neighbors found at the interface and in the vapor phase, in\nFigure 9 we show a snapshot from the two-phase liquidvapor system where the vapor phase has been shifted to\nlie in the center of the box. We have selected three particles (two at the liquid-vapor interface and one in the\nvapor phase) and have calculated their nearest neighbors\nusing all three algorithms. As expected, in or at the vapor phase the fixed-distance cutoff (upper panel) finds\nfew neighbors when the cutoff is not tuned to the vapor phase. Note that tuning the fixed-distance cutoff for\nthe liquid and vapor phases simultaneously is not possible. The Voronoi algorithm (center panel) detects many\nneighbors, both for particles at the interface and particularly for particles in the vapor phase. At the interface\nthe SANN algorithm (lower panel) finds neighbors mostly\nfrom the interface and liquid and, unlike the Voronoi construction, not far-off in the vapor.\n\nApplication to bond-order parameters\n\nFinally, we apply the neighborhood algorithms to investigate their effect on the local bond-order parameters\nused when studying crystal nucleation. To choose the\norder of the spherical harmonics in Eqn. 6, we match the\nsymmetry of the spherical harmonics, i.e. l, to the symmetry of the crystal under study. For the Lennard-Jones\nsystem we use l = 6 due to the close-packed crystalline\nstructure of the fcc (this is also what is typically used\nto study hard-sphere systems). In the original article on\ndiamond nucleation [17], l = 3 was applied to grow both\ncarbon crystal phases since this order parameter is not\nable to distinguish between graphite and diamond structures. The symmetry l = 3 was required since only the\nfirst neighbor shell was taken into account. However, in\nthe present analysis, both Voronoi and SANN algorithms\nresulted in neighbor lists which included more than the\n\n\fP[ d6(i,j) ]\n\nP[ d6(i,j) ]\n\n12\n\n0.40\nC\nV\nS\n\n0.20\n0.00\n0.06\n0.03\n0.00\n-1\n\n-0.5\n\n0\nd6(i,j)\n\n0.5\n\n1\n\n-0.5\n\n0\nd6(i,j)\n\n0.5\n\n1\n\n-0.5\n\n0\nd6(i,j)\n\n0.5\n\n1\n\nP[ d6(i,j) ]\n\nP[ d6(i,j) ]\n\na)\n\n0.10\nC\nV\nS\n\n0.05\n0.00\n0.06\n0.03\n0.00\n-1\n\nP[ d6(i,j) ]\n\nb)\n\nfirst neighbor shell. Consequently, the symmetry of the\nneighborhood changes, and l = 6 becomes perfectly commensurate with the symmetry of this extended environment. Therefore, we settled for l = 6 for all systems and\nset the fixed-distance cutoff in the carbon case to 2.7 (the\nminimum after the second peak of the g(r)) to include\nnext-nearest neighbors. Also, because bond-order correlators are very sensitive to asymmetries in the nearest\nneighbor sets and both the fixed-cutoff and the Voronoi\nconstruction feature pair-wise symmetry, we decided to\nenforce this symmetry for SANN, too, by removing asymmetric neighbor pairs. Note that the choice to remove\nneighbors rather than to add them is arbitrary. The\nresults for the local bond-order correlators distribution\nP [d6 (i, j)] are presented in Figure 10.\nThe main criterion for a good order parameter is to\nhave as little overlap as possible between the crystal\nphase (upper panels) and the (meta-stable) liquid phase\n(lower panels). As shown in Figure 10a all neighborhood\nalgorithms perform reasonably well for the Lennard-\n\nP[ d6(i,j) ]\n\nFigure 9: Visual representation of the three algorithms in a\ntwo-phase liquid-vapor Lennard-Jones system: fixed-distance\ncutoff (top), Voronoi construction (center) and SANN (bottom). In each case, we select the same particles and check\nwhich neighbors are detected using each algorithm.\n\n0.20\nC\nV\nS\n\n0.10\n0.00\n0.06\n0.03\n0.00\n-1\n\nc)\nFigure 10: Distribution of the local bond-order correlator\nd6 (i, j) using different neighbor criteria. Panel a) shows results for Lennard-Jones fcc crystal (upper panel) and liquid\nphases (lower panel), panel b) for the 3-fold coordinated carbon graphite (upper panel) and liquid (lower panel) phases,\nand panel c) for the 4-fold coordinated carbon diamond (upper panel) and liquid (lower panel) phases. For the carbon\nphases the fixed-distance cutoff distance was set to 2.7 to include the next-nearest neighbors, as do inherently both the\nVoronoi and SANN algorithms.\n\n\f13\nC\nV\nS V/C\nSystem\nLennard-Jones liquid\n25\n610\n45 24.4\n20\n753\n48 37.7\nLennard-Jones fcc\nHard-Spheres \u03c6 = 0.54 507 14390 1022 28.4\nHard-Spheres \u03c6 = 0.61 528 15050 1091 28.5\n5\n160\n8 32.0\nCarbon 3-fold liquid\nCarbon 3-fold graphite\n5\n190\n7 38.0\n6\n153\n10 25.5\nCarbon 4-fold liquid\nCarbon 4-fold diamond\n6\n180\n9 30.0\n\nS/C\n1.8\n2.4\n2.0\n2.1\n1.6\n1.4\n1.7\n1.5\n\nTable I: Run-times in milli-seconds of the fixed-distance cutoff\n(C), the Voronoi construction (V) and the SANN algorithm\n(S), and their ratios V/C and S/C. For details on the system\nsamples we refer to Section III A, for implementation details\nto Section III B, and for the benchmarking procedure to the\nmain text.\n\nJones system. However, for the graphite crystal (Fig. 10b\nupper panel) both SANN and the fixed-cutoff algorithms\nallow one to distinguish between a liquid and a solid\nenvironment, whereas the Voronoi construction shows\na severe broadening of the distribution of the graphite,\ncausing a substantial overlap with the liquid's distribution (lower panel). With such an overlap the bond-order\nparameters would fail to distinguish between liquid-like\nand solid-like particles. In the diamond case (Fig. 10c)\nthe SANN algorithm performs worse than the others\nand again the fixed-distance cutoff works best. In the\ngraphite case the failure of the Voronoi construction can\nbe attributed to the (arguably) spurious neighboring particles located in different graphite layers, as previously\ndiscussed (Fig. 7). The behavior of the SANN algorithm\nin the diamond case finds its origin in that not enough\nneighbors from the second neighbor shell are included\n(on average a total of 12 instead of 16), and bond-order\nparameters are particularly sensitive to missing or additional neighboring particles.\n\nBenchmarking\n\nFinally, we measure the run-time of each algorithm\nfor all bulk phases discussed previously. The benchmark\nwas performed on a computer equipped with an Intel\nCore2 Quad Q9550 processor running at 2.83 GHz and\n4 GB of DDR2 RAM running at 1066 MHz. All source\ncode was compiled using the GNU gcc compiler version\n4.5.1. The operating system was a 64-bit OpenSuSE\nLinux with Kernel 2.6.37. Each algorithm was running\nsingle-threaded and computed the neighbor sets for all\nparticles in the system. To improve accuracy whenever\nthe run-time was near our time resolution we measured\nthe total time of 10 sequential repetitions. All data presented are averages over at least 3 separate program runs.\nThe timings are presented in Table I. Compared to the\nfixed-distance cutoff the Voronoi construction takes 24.4\nto 38.0 times longer to compute. In contrast, the computational cost of SANN is only 1.4 to 2.4 times that\nof the fixed-distance cutoff and thereby outperforms the\n\nVoronoi construction by an order of magnitude. Therefore, we consider SANN well-suited for application onthe-fly in simulations.\nAs a final remark we like to point out that timing results are highly implementation dependent and as such\nshould be considered as indications only. On the one\nhand, the CGAL library used for the Voronoi construction is reasonably fast, but faster implementations may\nbe available. On the other hand, our implementations of\nthe fixed-distance cutoff and the SANN algorithm may\nhave room for optimization, too.\n\nV.\n\nCONCLUSION\n\nIn this paper we have described an algorithm to compute a particle's nearest neighbors in an arbitrary manyparticle system. The algorithm is similar to a fixeddistance cutoff in that all particles within a cutoff distance are considered nearest neighbors. But rather than\nusing one cutoff for all particles, this algorithm assigns to\neach particle an individual cutoff distance, thereby making it suitable for systems with inhomogeneous densities,\nsuch as gravitational or multi-phase systems. The cutoff\ndistance follows from a geometric requirement, namely\nthat the sum of all solid angles associated with neighboring particles adds up to 4\u03c0. Thus, the algorithm becomes\nparameter-free and scale-free. Though the approach was\ninspired by the Voronoi construction, it has several advantages over it: the presented algorithm is significantly\neasier to implement, computationally less expensive and\nmore robust against thermal fluctuations.\nWe tested the algorithm on a number of bulk phases including supercooled liquid and crystal phases of LennardJones particles, hard spheres and 3-fold and 4-fold coordinated carbon. We compared the nearest-neighbor distributions obtained from SANN to both the fixed-distance\ncutoff criterion and the Voronoi construction. In the case\nof the Lennard-Jones and hard-sphere phases, our algorithm reproduces very well the nearest-neighbor distribution of a well-tuned fixed-distance cutoff. This is in\ncontrast to a Voronoi construction, which has large fluctuations and as such does not perform as well. For the\ncarbon phases, our algorithm includes the second neighbor shell, like the Voronoi construction, but avoids neighbors in the neighboring graphite layers.\nWe also examined particles at the interface of twophase systems, such as Lennard-Jones liquid-vapor and\nliquid-crystal systems. We find that when two highdensity phases coexist, all algorithms give reliable results. However, at the interface between a fluid and a\nlow-density vapor, our algorithm is more robust to thermal fluctuations than the Voronoi construction.\nWe then employed the neighbor information of all algorithms as input for a bond-order analysis, which is typically used in crystal nucleation studies for the identification of solid-like particles in a supercooled metastable\nliquid. Comparing the bond-order correlator distribu-\n\n\f14\ntions, we found little difference between the algorithms\nfor the Lennard-Jones system, indicating that all algorithms are suitable for structure analysis of close-packed\nsystems. However, the Voronoi construction failed for\nthe graphite phase due to the identification of spurious\nneighbors located in different graphite layers, and SANN\nperformed poorly in the diamond phase, due to the fact\nthat not enough neighbors from the second neighbor shell\nwere included. Hence, care has to be taken when applying either one SANN or the Voronoi construction to open\nstructures and network formers. But where the Voronoi\nconstruction fails SANN might succeed, and vice-versa.\nFinally, we performed benchmarks on the run-time for\nall algorithms. On all systems tested we found the computational cost of SANN to be at most 2.4 times that of\nthe fixed-distance cutoff and in all cases it outperformed\nthe Voronoi construction by at least an order of magnitude.\nTo conclude, when studying a system at several concentrations or a heterogeneous system, the proposed algorithm has the advantage that is does not require tuning\na parameter for every concentration/environment. Given\nthe robustness and low computational cost of our algorithm, we argue that SANN is well suited not only for\npost-analysis, but also on-the-fly in simulations. It reliably identifies the nearest neighbors, and its behavior for\ngraphite and at a two-phase interface suggests its appli-\n\ncation to situations where the Voronoi construction suffers from distorted polyhedra, like in structural analysis\nof protein folding trajectories [26, 27], in DNA-mediated\ncolloidal crystallization [28, 29], in suspensions of patchy\ncolloids with tetrahedral or octahedral symmetry [30\u201333]\nand in water [34]. Finally, the SANN algorithm is not\nonly useful for simulation data, but should also be useful in analyzing experimental 3D images, as obtained, for\ninstance, by confocal microscopy or by tomography.\n\n[1] A. Okabe, B. Boots, K. Sugihara, and S. N. Chiu, Spatial Tessellations: Concepts and Applications of Voronoi\nDiagrams (Wiley, 2000).\n[2] D. Knuth, in Addison-Wesley (1968).\n[3] A. O. Peter Wilcox Jones and V. Rokhlin, PNAS 108,\n15679 (2011).\n[4] P. R. ten Wolde, M. Ruiz-Montero, and D. Frenkel, Faraday Discuss. 104, 93 (1996).\n[5] M. Tanemura, Y. Hiwatari, H. Matsuda, T. Ogawa,\nN. Ogita, and A. Ueda, Prog. Theor. Phys. 58, 1079\n(1977).\n[6] J. P. Troadec, A. Gervois, and L. Oger, EPL 42, 167\n(1998).\n[7] C. S. Hsu and A. Rahman, J. Chem. Phys. 71, 4974\n(1979).\n[8] W. Brostow, M. Chybicki, R. Laskowski, and J. Rybicki,\nPhys. Rev. B 57, 13448 (1998).\n[9] D. Bandyopadhyay and J. Snoeyink, in Proceedings of\nthe fifteenth annual ACM-SIAM symposium on Discrete\nalgorithms (New Orleans, Louisiana, 2004), pp. 410\u2013419.\n[10] D.-Q. Yu, M. Chen, and X.-J. Han, Phys. Rev. E 72,\n051202 (2005).\n[11] E. I. Corwin, M. Clusel, A. O. N. Siemens, and J. Brujic,\nSoft Matter 6, 2949 (2010).\n[12] See supplementary material document no. ?\nfor\nfortran and c implementations of the sann algorithm. for information on supplementary material, see\nhttp://www.aip.org/pubservs/epaps.html.\n[13] E. G. Noya, C. Vega, and E. de Miguel, J. Chem. Phys.\n128, 154507 (2008).\n\n[14] E. Sanz, C. Valeriani, E. Zaccarelli, W. C. K. Poon, P. N.\nPusey, and M. E. Cates, Phys. Rev. Lett. 106, 215701\n(2011).\n[15] C. Valeriani, E. Sanz, E. Zaccarelli, W. C. K. Poon, M. E.\nCates, and P. N. Pusey, J. Phys.: Cond. Mat. 23, 194117\n(2011).\n[16] L. M. Ghiringhelli, C. Valeriani, J. H. Los, E. J. Meijer,\nA. Fasolino, and D. Frenkel, Mol. Phys. 106, 2011 (2008).\n[17] L. M. Ghiringhelli, C. Valeriani, E. J. Meijer, and\nD. Frenkel, Phys. Rev. Lett. 99, 055702 (2007).\n[18] D. Frenkel and B. Smit, Understanding Molecular Simulation (Academic Press, 2002).\n[19] J. Errington, P. Debenedetti, and T. S., J. Chem. Phys.\n118, 2256 (2003).\n[20] P. R. ten Wolde, M. J. Ruiz-Montero, and D. Frenkel, J.\nChem. Phys. 104, 9932 (1996).\n[21] S. Pion and M. Teillaud, in CGAL User and Reference\nManual, edited by C. E. Board (2008).\n[22] H. Eberhardt, V. Klumpp, and U. D. Hanebeck, in Proceedings of the 13th International Conference on Information Fusion (Edingurgh, United Kingdom, 2010).\n[23] P. J. Steinhardt, D. R. Nelson, and M. Ronchetti, Phys.\nRev. B 28, 784 (1983).\n[24] J. A. van Meel, B. Charbonneau, A. Fortini, and P. Charbonneau, Phys. Rev. E 80, 061110 (2009).\n[25] J. A. van Meel, D. Frenkel, and P. Charbonneau, Phys.\nRev. E 79, 030201 (2009).\n[26] A. Poupon, Curr. Opin. Struc. Biol. 14, 233 (2004),\nISSN 0959-440X.\n[27] F. Cazals, F. Proust, R. P. Bahadur, and\n\nAcknowledgments\n\nThe authors thank K. Shundyak for fruitful discussions. The work of JvM at the FOM Institute is part\nof the research program of FOM and is made possible by\nfinancial support from the Netherlands Organization for\nScientific Research (NWO). DF acknowledges financial\nsupport from the Royal Society of London (Wolfson Merit\nAward) and from the ERC (Advanced Grant agreement\n227758). CV acknowledges support from an Individual\nMarie Curie Fellowship (in Edinburgh) and from a Juan\nde la Cierva Fellowship (in Madrid). LF acknowledges\nsupport from the EPSRC, U.K. for funding (Programme\nGrant EP/I001352/1).\n\n\f15\n\n[28]\n[29]\n[30]\n[31]\n\nJ. Janin, Protein Science 15, 2082 (2006), URL\nhttp://dx.doi.org/10.1110/ps.062245906.\nS. Jahn, N. Geerts, and E. Eiser, Langmuir 26, 16921\n(2010).\nE.G. Noya, C. Vega, J. Doye, and A. Louis, Soft Matter\n6, 4647 (2010).\nI. Saika-Voivod, F. Romano, and S. F., J.Chem.Phys.\n135, 124506 (2011).\nE.G. Noya, C. Vega, J. Doye, and A. Louis, J.Chem.Phys.\n\n132, 234511 (2010).\n[32] E.G. Noya, C. Vega, J. Doye, and A. Louis, J.Chem.Phys.\n127, 054501 (2010).\n[33] F. Romano, E. Sanz, and F. Sciortino, J.Chem.Phys.\n134, 174502 (2011).\n[34] J.L. Abascal and C. Vega, J.Chem.Phys. 123, 234505\n(2005).\n\n\f"}