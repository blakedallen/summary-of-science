{"id": "http://arxiv.org/abs/1111.0618v1", "guidislink": true, "updated": "2011-11-02T19:30:00Z", "updated_parsed": [2011, 11, 2, 19, 30, 0, 2, 306, 0], "published": "2011-11-02T19:30:00Z", "published_parsed": [2011, 11, 2, 19, 30, 0, 2, 306, 0], "title": "A Computational Study of the Weak Galerkin Method for Second-Order\n  Elliptic Equations", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1111.3216%2C1111.3209%2C1111.2268%2C1111.1426%2C1111.6501%2C1111.6871%2C1111.1427%2C1111.7032%2C1111.5019%2C1111.5049%2C1111.0348%2C1111.2926%2C1111.4630%2C1111.1274%2C1111.7065%2C1111.1374%2C1111.1839%2C1111.4062%2C1111.1587%2C1111.2708%2C1111.3642%2C1111.2467%2C1111.1436%2C1111.2122%2C1111.1983%2C1111.6749%2C1111.6432%2C1111.6011%2C1111.3667%2C1111.3688%2C1111.2037%2C1111.0485%2C1111.6003%2C1111.1621%2C1111.5250%2C1111.2479%2C1111.0242%2C1111.6735%2C1111.4217%2C1111.5249%2C1111.0505%2C1111.4556%2C1111.5686%2C1111.5338%2C1111.4030%2C1111.5386%2C1111.0060%2C1111.6993%2C1111.6660%2C1111.5242%2C1111.1402%2C1111.0520%2C1111.5798%2C1111.2544%2C1111.7132%2C1111.3449%2C1111.0549%2C1111.4348%2C1111.1808%2C1111.2710%2C1111.3658%2C1111.4513%2C1111.2417%2C1111.2967%2C1111.3888%2C1111.4282%2C1111.1140%2C1111.0747%2C1111.4048%2C1111.5279%2C1111.6419%2C1111.4302%2C1111.0897%2C1111.6415%2C1111.2363%2C1111.6987%2C1111.2463%2C1111.0270%2C1111.4991%2C1111.5899%2C1111.6701%2C1111.5063%2C1111.3423%2C1111.2895%2C1111.0618%2C1111.4608%2C1111.3306%2C1111.5343%2C1111.6234%2C1111.5342%2C1111.3479%2C1111.0494%2C1111.1085%2C1111.6965%2C1111.5932%2C1111.4223%2C1111.0016%2C1111.5402%2C1111.4324%2C1111.4615%2C1111.3181&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "A Computational Study of the Weak Galerkin Method for Second-Order\n  Elliptic Equations"}, "summary": "The weak Galerkin finite element method is a novel numerical method that was\nfirst proposed and analyzed by Wang and Ye for general second order elliptic\nproblems on triangular meshes. The goal of this paper is to conduct a\ncomputational investigation for the weak Galerkin method for various model\nproblems with more general finite element partitions. The numerical results\nconfirm the theory established by Wang and Ye. The results also indicate that\nthe weak Galerkin method is efficient, robust, and reliable in scientific\ncomputing.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1111.3216%2C1111.3209%2C1111.2268%2C1111.1426%2C1111.6501%2C1111.6871%2C1111.1427%2C1111.7032%2C1111.5019%2C1111.5049%2C1111.0348%2C1111.2926%2C1111.4630%2C1111.1274%2C1111.7065%2C1111.1374%2C1111.1839%2C1111.4062%2C1111.1587%2C1111.2708%2C1111.3642%2C1111.2467%2C1111.1436%2C1111.2122%2C1111.1983%2C1111.6749%2C1111.6432%2C1111.6011%2C1111.3667%2C1111.3688%2C1111.2037%2C1111.0485%2C1111.6003%2C1111.1621%2C1111.5250%2C1111.2479%2C1111.0242%2C1111.6735%2C1111.4217%2C1111.5249%2C1111.0505%2C1111.4556%2C1111.5686%2C1111.5338%2C1111.4030%2C1111.5386%2C1111.0060%2C1111.6993%2C1111.6660%2C1111.5242%2C1111.1402%2C1111.0520%2C1111.5798%2C1111.2544%2C1111.7132%2C1111.3449%2C1111.0549%2C1111.4348%2C1111.1808%2C1111.2710%2C1111.3658%2C1111.4513%2C1111.2417%2C1111.2967%2C1111.3888%2C1111.4282%2C1111.1140%2C1111.0747%2C1111.4048%2C1111.5279%2C1111.6419%2C1111.4302%2C1111.0897%2C1111.6415%2C1111.2363%2C1111.6987%2C1111.2463%2C1111.0270%2C1111.4991%2C1111.5899%2C1111.6701%2C1111.5063%2C1111.3423%2C1111.2895%2C1111.0618%2C1111.4608%2C1111.3306%2C1111.5343%2C1111.6234%2C1111.5342%2C1111.3479%2C1111.0494%2C1111.1085%2C1111.6965%2C1111.5932%2C1111.4223%2C1111.0016%2C1111.5402%2C1111.4324%2C1111.4615%2C1111.3181&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The weak Galerkin finite element method is a novel numerical method that was\nfirst proposed and analyzed by Wang and Ye for general second order elliptic\nproblems on triangular meshes. The goal of this paper is to conduct a\ncomputational investigation for the weak Galerkin method for various model\nproblems with more general finite element partitions. The numerical results\nconfirm the theory established by Wang and Ye. The results also indicate that\nthe weak Galerkin method is efficient, robust, and reliable in scientific\ncomputing."}, "authors": ["Lin Mu", "Junping Wang", "Yanqiu Wang", "Xiu Ye"], "author_detail": {"name": "Xiu Ye"}, "author": "Xiu Ye", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1007/s11075-012-9651-1", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/1111.0618v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1111.0618v1", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "19 pages", "arxiv_primary_category": {"term": "math.NA", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "math.NA", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "65N30", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1111.0618v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1111.0618v1", "journal_reference": "Numerical Algorithms, 2012", "doi": "10.1007/s11075-012-9651-1", "fulltext": "A COMPUTATIONAL STUDY OF THE WEAK GALERKIN\nMETHOD FOR SECOND-ORDER ELLIPTIC EQUATIONS\n\narXiv:1111.0618v1 [math.NA] 2 Nov 2011\n\nLIN MU\n\n\u2217,\n\nJUNPING WANG\n\n\u2020,\n\nYANQIU WANG\n\n\u2021 , AND\n\nXIU YE\n\n\u00a7\n\nAbstract. The weak Galerkin finite element method is a novel numerical method that was first\nproposed and analyzed by Wang and Ye in [23] for general second order elliptic problems on triangular\nmeshes. The goal of this paper is to conduct a computational investigation for the weak Galerkin\nmethod for various model problems with more general finite element partitions. The numerical results\nconfirm the theory established in [23]. The results also indicate that the weak Galerkin method is\nefficient, robust, and reliable in scientific computing.\n\nKeywords: finite element methods, weak Galerkin method\nAMS 2000 Classification: 65N30\n1. Introduction. In this paper, we are concerned with computation and numerical accuracy issues for the weak Galerkin method that was recently introduced in [23]\nfor second order elliptic equations. The weak Galerkin method is an extension of the\nstandard Galerkin finite element method where classical derivatives were substituted\nby weakly defined derivatives on functions with discontinuity. The weak Galerkin\nmethod is also related to the standard mixed finite element method in that the two\nmethods are identical for simple model problems (such as the Poisson problem). But\nthey have fundamental differences for general second order elliptic equations. The\ngoal of this paper is to numerically demonstrate the efficiency and accuracy of the\nweak Galerkin method in scientific computing. In addition, we shall extend the weak\nGalerkin method of [23] from triangular and tetrahedral elements to rectangular and\ncubic elements.\nFor simplicity, we take the linear second order elliptic equation as our model\nproblem. More precisely, let \u03a9 be an open bounded domain in Rd , d = 2, 3 with\nLipschitz continuous boundary \u2202\u03a9. The model problem seeks an unknown function\nu = u(x) satisfying\n(1.1)\n\n\u2212\u2207 * (A\u2207u) + \u03b2 * \u2207u + \u03b3u =\nu =\n\nf\ng\n\nin \u03a9,\non \u2202\u03a9,\n\nwhere A \u2208 [L\u221e (\u03a9)]d\u00d7d , \u03b2 \u2208 [L\u221e (\u03a9)]d , and \u03b3 \u2208 L\u221e (\u03a9) are vector- and scalar-valued\nfunctions, as appropriate. Furthermore, assume that A is a symmetric and uniformly\npositive definite matrix and the problem (1.1) has one and only one weak solution in\nthe usual Sobolev space H 1 (\u03a9) consisting of square integrable derivatives up to order\none. f and g are given functions that ensure the desired solvability of (1.1).\nThroughout the paper, we use k * k to denote the standard L2 norm over the\ndomain \u03a9, and use bold face Latin characters to denote vectors or vector-valued\n\u2217 Department of Applied Science, University of Arkansas at Little Rock, Little Rock, AR 72204,\nUSA, lxmu@ualr.edu\n\u2020 Division of Mathematical Sciences, National Science Foundation, Arlington, VA 22230, USA,\njwang@nsf.gov. The research of Wang was supported by the NSF IR/D program, while working at\nthe Foundation. However, any opinion, finding, and conclusions or recommendations expressed in\nthis material are those of the author and do not necessarily reflect the views of the National Science\nFoundation.\n\u2021 Department of Mathematics, Oklahoma State University, Stillwater, OK 74078, USA,\nyqwang@math.okstate.edu\n\u00a7 Department of Mathematics, University of Arkansas at Little Rock, Little Rock, AR 72204, USA,\nxxye@ualr.edu. The research of Ye was supported in part by the National Science Foundation under\nGrant No. DMS-1115097.\n\n1\n\n\ffunctions. The paper is organized as follows. In Section 2, the weak Galerkin method\nis introduced and an abstract theory is given. In particular, we prove that certain\nrectangular elements satisfy the assumptions in the abstract theory, and thus establish\na well-posedness and error estimate for the corresponding weak Galerkin method with\nrectangular meshes. In Section 3, we present some implementation details for the weak\nGalerkin elements. Finally in Section 4, we report some numerical results for various\ntest problems. The numerical experiments not only confirm the theoretical predictions\nas given in the original paper [23], but also reveal new results that have not yet been\ntheoretically proved.\n2. The Weak Galerkin Method. Let Th be a shape-regular, quasi-uniform\nmesh of the domain \u03a9, with characteristic mesh size h. In two-dimension, we consider\ntriangular and rectangular meshes, and in three-dimension, we mainly consider tetrahedral and hexahedral meshes. For each element K \u2208 Th , denote by K0 and \u2202K the\ninterior and the boundary of K, respectively. Here, K can be a triangle, a rectangle,\na tetrahedron or a hexahedron. The boundary \u2202K consists of several \"sides\", which\nare edges in two-dimension or faces(polygons) in three-dimension. Denote by Fh the\ncollection of all edges/faces in Th .\nOn each K \u2208 Th , let Pj (K0 ) be the set of polynomials on K0 with degree less\nthan or equal to j, and Qj (K) be the set of polynomials on K0 with degree of each\nvariable less than or equal to j. Likewise, on each F \u2208 Fh , Pl (F ) and Ql (F ) are\ndefined analogously. Now, define a weak discrete space on mesh Th by\nSh ={v : v|K0 \u2208 Pj (K0 ) or Qj (K0 ) for all K \u2208 Th ,\nv|F \u2208 Pl (F ) or Ql (F ) for all F \u2208 Fh }.\nObserve that the definition of Sh does not require any form of continuity across\nelement or edge/face interfaces. A function in Sh is characterized by its value on the\ninterior of each element plus its value on the edges/faces. Therefore, it is convenient\nto represent functions in Sh with two components, v = {v0 , vb }, where v0 denotes the\nvalue of v on all K0 s and vb denotes the value of v on Fh .\nWe further define an L2 projection from H 1 (\u03a9) onto Sh by setting Qh v \u2261\n{Q0 v, Qb v}, where Q0 v|K is the local L2 projection of v in Pj (K0 ), for K \u2208 Th ,\nand Qb v|F is the local L2 projection in Pl (F ), for F \u2208 Fh .\nThe idea of the weak Galerkin method is to seek an approximate solution to\nEquation (1.1) in the weak discrete space Sh . To this end, we need to introduce a\ndiscrete gradient operator on Sh . Indeed, this will be done locally on each element\nK. Let Vr (K) be a space of polynomials on K such that [Pr (K)]d \u2282 Vr (K); details\nof Vr (K) will be given later. Let\n\u03a3h = {q \u2208 [L2 (\u03a9)]d : q|K \u2208 Vr (K) for all K \u2208 Th }.\nA discrete gradient of vh = {v0 , vb } \u2208 Sh is defined to be a function \u2207d vh \u2208 \u03a3h such\nthat on each K \u2208 Th ,\nZ\nZ\nZ\n(2.1)\n\u2207d vh * q dx = \u2212\nv0 \u2207 * q dx +\nvb q * n ds, for all q \u2208 Vr (K),\nK\n\nK\n\n\u2202K\n\nwhere n is the unit outward normal on \u2202K. Clearly, such a discrete gradient is always\nwell-defined.\nDenote by (*, *) the standard L2 -inner product on \u03a9. Let Sh0 be a subset of Sh\nconsisting of functions with vanishing boundary values. Now we can write the weak\n2\n\n\fGalerkin formulation for Equation (1.1) as follows: find uh = {u0 , ub } \u2208 Sh such that\nub = Qb g on each edge/face F \u2282 \u2202\u03a9 and\n(2.2)\n\n(A\u2207d uh , \u2207d vh ) + (\u03b2 * \u2207d uh , v0 ) + (\u03b3u0 , v0 ) = (f, v0 )\n\nfor all vh = {v0 , vb } \u2208 Sh0 . For simplicity of notation, we introduce the following\nbilinear form\n(2.3)\n\na(uh , vh ) , (A\u2207d uh , \u2207d vh ) + (\u03b2 * \u2207d uh , v0 ) + (\u03b3u0 , v0 ).\n\nThe spaces Sh and \u03a3h can not be chosen arbitrarily. There are certain criteria\nthey need to follow, in order to guarantee that Equation (2.2) provides a good approximation to the solution of Equation (1.1). For example, \u03a3h has to be rich enough\nto prevent from the loss of information in the process of taking discrete gradients,\nwhile it should remain to be sufficiently small for its computational cost. Hence, we\nwould like to impose the following conditions upon Sh and \u03a3h :\n(P1) For any vh \u2208 Sh and K \u2208 Th , \u2207d vh |K = 0 if and only if v0 = vb = constant\non K.\n(P2) For any w \u2208 H m+1 (\u03a9), where 0 \u2264 m \u2264 j + 1, we have\nk\u2207d (Qh w) \u2212 \u2207wk \u2264 Chm kwkm+1 ,\nwhere and in what follows of this paper, C denotes a generic constant independent of the mesh size h.\nUnder the above two assumptions, it has been proved in [23] that Equation (2.2)\nhas a unique solution as long as the mesh size h is moderately small and the dual of\n(1.1) has an H 1+s -regularity with some s > 0. Furthermore, one has the following\nerror estimate:\n\u0001\nk\u2207d (uh \u2212 Qh u)k \u2264 C h1+s kf \u2212 Q0 f k + hm kukm+1 ,\n\u0001\n(2.4)\nku0 \u2212 Q0 uk \u2264 C h1+s kf \u2212 Q0 f k + hm+s kukm+1 ,\n\nfor any 0 \u2264 m \u2264 j + 1, and s > 0 is the largest number such that the dual of Equation\n(1.1) has an H 1+s -regularity.\nThere are several possible combinations of Sh and \u03a3h that satisfy Assumptions\n(P1) and (P2). Two examples of triangular elements have been given in [23], which\nare\n1. Triangular element (Pj (K0 ), Pj (F ), RTj (K)) for j \u2265 0. That is, in the definition of Sh , we set l = j. And in the definition of \u03a3h , we set r = j and\nVr (K) to be the jth order Raviart-Thomas element RTj (K) [21].\n2. Triangular element (Pj (K0 ), Pj+1 (F ), (Pj+1 (K))d ) for j \u2265 0. That is, in\nthe definition of Sh , we set l = j + 1. And in the definition of \u03a3h , we set\nr = j + 1 and Vr (K) = (Pj+1 (K))d , or in other words, the (j + 1)st order\nBrezzi-Douglas-Marini element [5].\nThe rest of this section shall extend this result to rectangular elements. An extension to three-dimensional tetrahedral and hexahedral elements is straightforward.\n2.1. Weak Galerkin on Rectangular Meshes. Consider the following two\ntype of rectangular elements:\n3\n\n\f1. Rectangular element (Qj (K0 ), Qj (F ), RTj (K)) for j \u2265 0. That is, in the\ndefinition of Sh , we set l = j. And in the definition of \u03a3h , we set r = j and\nVr (K) to be the jth order Raviart-Thomas element RTj (K) on rectangle K.\n2. Rectangular element (Pj (K0 ), Pj+1 (F ), BDMj+1 (K)) for j \u2265 0. That is, in\nthe definition of Sh , we set l = j + 1. And in the definition of \u03a3h , we set\nr = j + 1 and Vr (K) to be the (j + 1)st order Brezzi-Douglas-Marini element\nBDMj+1 (K) on rectangle K.\nDenote by Qi,j (K) the space of polynomials\n\u0014\n\u0015with degree in x and y less than or equal\n\u2212\u2202/\u2202y\nto i and j, respectively, and curl =\n. It is known that\n\u2202/\u2202x\n\u0014\n\u0015\nQj+1,j (K)\nRTj (K) =\n,\nQj,j+1 (K)\n\u0014\n\u0015\n\b\nPj+1 (K)\nBDMj+1 (K) =\n+ span curl (xj+2 y), curl (xy j+2 ) ,\nPj+1 (K)\n\nand dim(RTj (K)) = 2(j + 1)(j + 2), dim(BDMj+1 (K)) = (j + 2)(j + 3) + 2. The\ndegrees of freedom for RTj (K) are:\nZ\n(q * n)w ds,\nfor all w \u2208 Qj (F ), F \u2208 F \u2229 \u2202K,\nF\n\nZ\n\nq * p dx,\n\nfor all p \u2208 Qj\u22121,j (K) \u00d7 Qj,j\u22121 (K).\n\nK\n\nThe degrees of freedom for BDMj+1 (K) are\nZ\n(q * n)w ds,\nfor all w \u2208 Pj+1 (F ), F \u2208 F \u2229 \u2202K,\nF\n\nZ\n\nfor all p \u2208 [Pj\u22121 (K)]2 .\n\nq * p dx,\n\nK\n\nIt is also well-known that on each rectangle K \u2208 Th and each edge F \u2208 Fh \u2229 \u2202K,\n(2.5)\n\n\u2207 * RTj (K) = Qj (K0 ),\n\u2207 * BDMj+1 (K) = Pj (K0 ),\n\nRTj (K) * n|F = Qj (F ),\nBDMj+1 (K) * n|F = Pj+1 (F ).\n\nNext, we show that the two set of elements defined as above satisfy Assumptions\n(P1) and (P2).\nLemma 2.1. For the two type of rectangular elements given in this subsection,\nthe Assumption P1 holds true.\nProof. If v0 = vb = constant on K, then clearly \u2207d vh |K vanishes since the\nright-hand side of (2.1) is zero from the divergence theorem. Now let us assume that\n\u2207d vh |K = 0. By (2.1) and using integration by parts, we have for all q \u2208 RTj (K) or\nBDMj+1 (K),\nZ\nZ\nvb q * n ds\nv0 \u2207 * q dx +\n0=\u2212\n\u2202K\nK\nZ\nZ\n(2.6)\n(\u2207v0 ) * q dx.\n(vb \u2212 v0 )q * n ds +\n=\nK\n\n\u2202K\n\n4\n\n\fWe first consider the element (Qj (K0 ), Qj (F ), RTj (K)). IfR j = 0, then v0 is a\nconstant on K0 and clearly \u2207v0 = 0. If j > 0, take q such that F (q * n)wRds = 0 for\nall w \u2208 Qj (F ) and let it traverse through all degrees of freedom defined by K q * p dx,\nfor p \u2208 Qj\u22121,j (K) \u00d7 Qj,j\u22121 (K). Since (vb \u2212 v0 )|F \u2208 Qj (F ) and \u2207v0 \u2208 Qj\u22121,j (K) \u00d7\nQj,j\u22121 (K), Equation (2.6) gives \u2207v0 = 0, which implies that v0 is a constant on K0 .\nNow Equation (2.6) reduces into\nZ\n(vb \u2212 v0 )q * n ds = 0,\nfor all q \u2208 RTj (K).\n\u2202K\n\nNext, since (vb \u2212 v0 )|F \u2208 Qj (F ) = RTj (K) * n|F for all F \u2208 Fh \u2229 \u2202K, by letting q\ntraverse through all degrees of freedom on \u2202K, we have vb \u2212 v0 = 0 on all F . This\nimplies vb = v0 = constant in K.\nFor the (Pj (K0 ), Pj+1 (F ), BDMj+1 (K)) element, using the same argument as\nin the previous case, and noticing that \u2207v0 \u2208 (Pj\u22121 (K))2 , (vb \u2212 v0 )|F \u2208 Pj+1 (F ) =\nBDMj+1 (K)*n|F for all F \u2208 Fh \u2229\u2202K, we can similarly prove that vb = v0 = constant\nin K.\nLemma 2.2. For the two type of rectangular elements given in this subsection,\nthe Assumption (P2) holds true.\nProof. Let w \u2208 H m (\u03a9), 0 \u2264 m \u2264 j + 1. For any q \u2208 \u03a3h and K \u2208 Th , by (2.5)\nand the definition of L2 projections, we have\nZ\nZ\nZ\nQb w(q * n) ds\n(\u2207d Qh w) * q dx = \u2212 (Q0 w)(\u2207 * q) dx +\n\u2202K\nK\nK\nZ\nZ\nw(q * n) ds\nw(\u2207 * q) dx +\n=\u2212\n\u2202K\nZ K\n(\u2207w) * q dx.\n=\nK\n\nIn other words, on each K \u2208 Th , \u2207d Qh w is the L2 projection of \u2207w onto RTj (K) or\nBDMj+1 (K). Thus, the Assumption (P2) follows immediately from the approximation properties of the L2 projection, and the fact that both RTj (K) and BDMj+1 (K)\ncontains the entire polynomial space [Pj (K)]2 .\nUsing Lemma 2.1 and Lemma 2.2, one can derive the error estimate (2.4) for the\nrectangular elements by following the argument presented in [23]. Details are left to\ninterested readers as an exercise.\n3. Computation of Local Stiffness Matrices. Similar to the standard Galerkin\nfinite element method, the weak Galerkin method (2.2) can be implemented as a matrix problem where the matrix is given as the sum of local stiffness matrices on each element K \u2208 Th . Thus, a key step in the computer implementation of the weak Galerkin\nis to compute element stiffness matrices. The goal of this section is to demonstrate\nways of computing element stiffness matrices for various elements introduced in the\nprevious sections.\nFor a given element K \u2208 Th , let \u03c60,i , i = 1, . . . , N0 , be a set of basis functions\nj (K0 ), and \u03c6b,i , i = 1, . . . , Nb , be a set of basis functions for\nP for Pj (K0 ) or QP\nF \u2208\u2202K\u2229Fh Ql (F ) . Note that {\u03c6b,i } is the union of basis funcF \u2208\u2202K\u2229Fh Pl (F ) or\ntions from all edges/faces of element K. Then every vh = {v0 , vb } \u2208 Sh has the\nfollowing representation in K:\n)\n(N\nNb\n0\nX\nX\nvb,i \u03c6b,i .\nv0,i \u03c60,i ,\nvh |K =\ni=1\n\ni=1\n\n5\n\n\fOn each K, the local stiffness matrix MK for Equation (2.2) can thus be written as\na block matrix\n\u0015\n\u0014\nM0,0 M0,b\n(3.1)\nMK =\nMb,0 Mb,b\nwhere M0,0 is an N0 \u00d7 N0 matrix, M0,b is an N0 \u00d7 Nb matrix, Mb,0 is an Nb \u00d7 N0\nmatrix, and Mb,b is an Nb \u00d7 Nb matrix. These matrices are defined, respectively, by\n\u0003\n\u0003\n\u0002\n\u0002\nM0,b = a(\u03c6b,j , \u03c60,i )K i,j ,\nM0,0 = a(\u03c60,j , \u03c60,i )K i,j ,\n\u0003\n\u0003\n\u0002\n\u0002\nMb,b = a(\u03c6b,j , \u03c6b,i )K i,j ,\nMb,0 = a(\u03c60,j , \u03c6b,i )K i,j ,\n\nwhere the bilinear form a(*, *) is defined as in (2.3), and i, j are the row and column\nindices, respectively.\nTo compute each block of MK , we first need to calculate the discrete gradient\noperator \u2207d . For convenience, denote the local vector representation of vh |K by\n\uf8f9\n\uf8ee\n\uf8ee\n\uf8f9\nv0,1\nvb,1\n\uf8fa\n\uf8ef\n\uf8ef\n\uf8fa\n\uf8ef v0,2 \uf8fa\n\uf8ef vb,2 \uf8fa\n\uf8fa\n\uf8ef\n\uf8ef\nvb = \uf8ef . \uf8fa\nv0 = \uf8ef . \uf8fa ,\n\uf8fa.\n.\n.\n\uf8fb\n\uf8f0\n\uf8f0 .. \uf8fb\nv0,N0\n\nvb,Nb\n\nLet \u03c7i , i = 1, . . . , NV , be a set of basis functions for Vr (K). Then, for every qh \u2208 \u03a3h ,\nits value on K can be expressed as\nqh |K =\n\nNV\nX\n\nqi \u03c7i .\n\ni=1\n\nSimilarly, we denote the local vector representation of qh |K by\n\uf8ee\n\uf8f9\nq1\n\uf8ef\n\uf8fa\n\uf8ef q2 \uf8fa\n\uf8fa\nq=\uf8ef\n\uf8ef .. \uf8fa ,\n\uf8f0 . \uf8fb\nqNV\n\nThen, by the definition of the discrete gradient (2.1), given vh |K , we can compute the\nvector form of \u2207d vh on K by\nDK (\u2207d vh ) = \u2212ZK v0 + TK vb ,\n\n(3.2)\n\nwhere the NV \u00d7 NV matrix DK , the NV\nTK are defined, respectively, by\n\uf8ee R\n\u03c7 * \u03c71 dx\nK 1\n***\n(3.3)\nDK = \uf8f0R\n* \u03c71 dx\n\u03c7\nN\nV\nK\nZK\n\n\u00d7 N0 matrix ZK , and the NV \u00d7 Nb matrix\n***\n***\n***\n\n\uf8ee R\n\n(\u2207 * \u03c71 )\u03c60,1 dx * * *\n***\n***\n= \uf8f0R\n)\u03c6\ndx\n***\n(\u2207\n*\n\u03c7\n0,1\nNV\nK\nK\n\n6\n\nR\n\n\uf8f9\n\u03c71 * \u03c7NV dx\n\uf8fb,\n***\nR\nK \u03c7NV * \u03c7NV dx\nK\n\n\uf8f9\n(\u2207 * \u03c71 )\u03c60,N0 dx\n\uf8fb,\n***\nR\ndx\n)\u03c6\n(\u2207\n*\n\u03c7\n0,N0\nNV\nK\nR\n\nK\n\n\fand\nTK\n\n\uf8ee R\n\n* n)\u03c6b,1 ds\n***\n= \uf8f0R\n\u2202K (\u03c7NV * n)\u03c6b,1 ds\n\u2202K (\u03c71\n\n***\n***\n***\n\n\uf8f9\n* n)\u03c6b,Nb ds\n\uf8fb.\n***\nR\n*\nn)\u03c6\nds\n(\u03c7\nb,N\nNV\nb\n\u2202K\nR\n\n\u2202K (\u03c71\n\nNotice that DK is a symmetric matrix.\nOnce the matrices DK , ZK and TK are computed, we can use (3.2) to calculate\nthe weak gradient of basis functions \u03c60,i and \u03c6b,i on K. It is not hard to see that\n(3.4)\n\n\u22121\n0\n(\u2207d \u03c60,i ) = \u2212DK\nZ K eN\ni ,\n\n\u22121\nb\n(\u2207d \u03c6b,i ) = DK\nTK eN\ni ,\n\n0\nb\nand eN\nwhere eN\nare the standard basis for the Euclidean spaces RN0 and RNb ,\ni\ni\nrespectively, such that its i-th entry is 1 and all other entries are 0.\nDefine matrices\n\u0002\n\u0003\nAK = (A\u03c7j , \u03c7i )K i,j ,\n\u0002\n\u0003\nBK = (\u03b2 * \u03c7j , \u03c60,i )K i,j ,\n(3.5)\n\u0003\n\u0002\nCK = (\u03b3\u03c60,j , \u03c60,i )K i,j ,\n\nwhere (*, *)K denote the standard inner-product on L2 (K) or [L2 (K)]d , as appropriate.\nClearly, AK is an NV \u00d7 NV matrix, BK is an N0 \u00d7 NV matrix, and CK is an N0 \u00d7 N0\nmatrix. Then, an elementary matrix calculation shows that the local stiffness matrix\nMK for Equation (2.2) can be expressed in a way as specified in the following lemma.\n\nLemma 3.1. The local stiffness matrix MK defined in (3.1) can be computed by\nusing the following formula\n\u2212t\n\u22121\n\u22121\nt\nM0,0 = ZK\nDK\nAK DK\nZ K \u2212 BK D K\nZK + CK ,\n\n(3.6)\n\n\u2212t\n\u22121\n\u22121\nt\nM0,b = \u2212ZK\nDK\nAK DK\nT K + BK D K\nTK ,\n\u2212t t\n\u22121\n\u2212t\nt\nt\nBK ,\nDK\nZK + T K\nAK DK\nDK\nMb,0 = \u2212TK\n\u2212t\n\u22121\nt\nMb,b = TK\nDK\nAK DK\nTK ,\n\nwhere the superscript t stands for the standard matrix transpose.\nFor the Poisson equation \u2212\u2206u = f , we clearly have AK = DK and BK = 0,\nCK = 0. Since DK is symmetric, the local stiffness matrix becomes\n\" t \u22121\n#\n\u22121\nt\nZK DK ZK \u2212ZK\nDK\nTK\n(3.7)\nMK =\n.\n\u22121\n\u22121\nt\nt\n\u2212TK\nDK\nZK\nTK\nDK\nTK\nIn the rest of this section, we shall demonstrate the computation of the element\nstiffness matrix MK with two concrete examples.\n3.1. For the Triangular Element (P0 (K), P0 (F), RT0 (K)). Let K be a triangular element in Th . We consider the case when j = l = 0 and Vr (K) being the\nlowest order Raviart-Thomas element. In other words, the discrete space Sh consists of piecewise constants on the triangles, and piecewise constants on the edges\nof the mesh. In this case, the discrete gradient is defined by using the lowest order\n7\n\n\fRaviart-Thomas element on the triangle K. Clearly, we have N0 = 1, Nb = 3 and\nNV = 3.\nLet vi = (xi , yi ), i = 1, 2, 3, be the vertices of the triangle K and ei be the edge\nopposite to the vertex vi . Denote by |ei | the length of edge ei and |K| the area of the\ntriangle K. We also denote by ni and ti the unit outward normal and unit tangential vectors on ei , respectively. Here ti should be in the positive (counterclockwise)\norientation. If edge ei goes from vertex vj to vk and K stays on the left when one\ntravels from vj to vk , then it is not hard to see that\n\u0015\n\u0015\n\u0014\n\u0014\n\u0014\n\u0015\n\u0014 \u0015\n1\n1 xk \u2212 xj\nn\nyk \u2212 yj\nt\n,\nni = i,1 =\n.\nti = i,1 =\nni,2\nti,2\n|ei | yk \u2212 yj\n|ei | \u2212(xk \u2212 xj )\n3.1.1. Approach I. One may use the following set of basis functions for the\nweak discrete functions on K:\n(\n1\non ei\n(3.8)\n\u03c60,1 = 1,\n\u03c6b,i =\nfor i = 1, 2, 3,\n0\notherwise\nand\n(3.9)\n\n\u03c7i =\n\n\u0015\n\u0014\n|ei | x \u2212 xi\n,\n2|K| y \u2212 yi\n\nfor i = 1, 2, 3.\n\nNotice that \u03c7i forms the standard basis for the lowest order Raviart-Thomas element,\nfor which the degrees of freedom are taken to be the normal component on edges.\nIndeed, \u03c7i satisfies\n(\n1\nfor i = j,\n\u03c7i * nj |ej =\n0\nfor i 6= j.\nIt is straight forward to compute that, for the above defined basis functions,\n\uf8ee \uf8f9\n\uf8ee\n\uf8f9\n|e1 |\n|e1 | 0\n0\nZK = \uf8f0|e2 |\uf8fb ,\nTK = \uf8f0 0 |e2 | 0 \uf8fb .\n|e3 |\n0\n0 |e3 |\n\nThe computation of DK is slightly more complicated, but it can still be done without\nmuch difficulty, especially with the help of symbolic computing tools provided in\nexisting software packages such as Maple and Mathematica. For simplicity of notation,\ndenote\nli = |ei |2\n\nfor 1 \u2264 i \u2264 3,\n\n2\n\n2\n\n2\n\n2\n\nlij = |ei | + |ej |\n\nfor 1 \u2264 i, j \u2264 3 and i 6= j,\n2\n\nl123 = |e1 | + |e2 | + |e3 | .\nThen, it can be verified that\n\uf8ee\n\uf8f9\n|e1 |2 (3l23 \u2212 l1 )\n|e1 ||e2 | (l12 \u2212 3l3 ) |e1 ||e3 | (l13 \u2212 3l2 )\n1 \uf8ef\n\uf8fa\n|e2 |2 (3l13 \u2212 l2 )\n|e2 ||e3 | (l23 \u2212 3l1 )\uf8fb\nDK =\n\uf8f0|e1 ||e2 | (l12 \u2212 3l3 )\n48|K|\n|e1 ||e3 | (l13 \u2212 3l2 ) |e2 ||e3 | (l23 \u2212 3l1 )\n|e3 |2 (3l12 \u2212 l3 )\n(3.10)\n\uf8f9\n\uf8ee\n3l23 \u2212 l1 l12 \u2212 3l3 l13 \u2212 3l2\n1\n\uf8fa t\n\uf8ef\n=\n.\nTK \uf8f0l12 \u2212 3l3 3l13 \u2212 l2 l23 \u2212 3l1 \uf8fb TK\n48|K|\nl13 \u2212 3l2 l23 \u2212 3l1 3l12 \u2212 l3\n8\n\n\fWe point out that, the value of DK given as in (3.10) agrees with the one presented\nin [3]. A verification of the formula (3.10) can be carried out by using the following\nfact\n|K| =\n\n1\n1\nx1\n2\ny1\n\n1\nx2\ny2\n\n1\nx3 ,\ny3\n\n|ei |2 = (xj \u2212 xk )2 + (yj \u2212 yk )2 ,\n\ni = 1, 2, 3, j 6= k, j and k different from i.\n\nIn computer implementation, it is convenient to use a form for the local matrix that\ncan be expressed by using only edge lengths, as the one given by (3.10).\nIn addition, using symbolic computing tools and the law of sines and cosines, we\n\u22121\ncan write DK\nas follows:\n\uf8f9\uf8f6\n\uf8eb\n\uf8ee\n\uf8ee\n\uf8f9\n2l1\nl3 \u2212 l12 l2 \u2212 l13\n1 1 1\n1 \uf8ef\n\uf8f7 \u22121\n\u22121\n\u2212t \uf8ec 16|K| \uf8f0\n2l2\nl1 \u2212 l23 \uf8fa\n1 1 1\uf8fb +\nDK\n= TK\n\uf8fb \uf8f8 TK .\n\uf8ed\n\uf8f0l3 \u2212 l12\nl123\n2|K|\n1 1 1\nl2 \u2212 l13 l1 \u2212 l23\n2l3\n\nThus, to compute the local stiffness matrix MK , it suffices to calculate AK , BK\nand CK as given in (3.5), and then apply Lemma 3.1. Notice that these three matrices\ndepend on the coefficients A, \u03b2 and \u03b3, and quadrature rules may be employed in the\ncalculation. However, for the simple case of the Poisson equation \u2212\u2206u = f , we see\nfrom (3.7) that\ni\nh\ni\nh\n\u221248|K|\n\u221248|K|\nt\n,\nM0b = Mb0\n= \u221248|K|\n,\nM00 = 144|K|\nl123\nl123\nl123\nl123\nMbb\n\n\uf8ee\n1\n16|K| \uf8ef\n=\n\uf8f01\nl123\n1\n\n\uf8f9\n\uf8ee\n2l1\n1 1\n1 \uf8ef\n\uf8fa\n1 1\uf8fb +\n\uf8f0l3 \u2212 l12\n2|K|\nl2 \u2212 l13\n1 1\n\nl3 \u2212 l12\n2l2\nl1 \u2212 l23\n\n\uf8f9\nl2 \u2212 l13\nl1 \u2212 l23 \uf8fa\n\uf8fb.\n2l3\n\n3.1.2. Approach II. We would like to present another approach for computing\nthe local stiffness matrix MK in the rest of this subsection. Observe that a set of\nbasis functions for the local space Vr (K) can be chosen as follows\n\" #\n\" #\n\"\n#\n1\n0\nx \u2212 x\u0304\n(3.11)\n\u03c71 =\n,\n\u03c72 =\n,\n\u03c73 =\n,\n0\n1\ny \u2212 \u0233\nwhere (x\u0304 = (x1 + x2 + x3 )/3, \u0233 = (y1 + y2 + y3 )/3) is the coordinate of the barycenter\nof K. Note that both components of \u03c73 have mean value zero on K. For the weak\ndiscrete function on K, we use the same set of basis functions as given in (3.8). It is\nnot hard to see that\n\uf8ee\n\uf8f9\n\uf8ee\n\uf8f9\n1 0\n0\n0\n\uf8ef\n\uf8fa\n\uf8ef\n\uf8fa\n0 \uf8fb,\nDK = |K| \uf8f00 1\nZK = \uf8f0 0 \uf8fb ,\n0 0\n\nl123\n36\n\n2|K|\n\nand\n\nTK\n\n\uf8ee\n\ny3 \u2212 y2\n\uf8efx \u2212 x\n=\uf8f0 2\n3\n\ny1 \u2212 y3\nx3 \u2212 x1\n2|K|\n3\n\n2|K|\n3\n\n9\n\n\uf8f9\ny2 \u2212 y1\nx1 \u2212 x2 \uf8fa\n\uf8fb.\n2|K|\n3\n\n\fNext, we use the formula (3.5) to calculate the matrices AK , BK and CK for the new\nbasis (3.11). Finally, we calculate the local stiffness matrix MK by using the formula\nprovided in Lemma 3.1.\nSince the set of basis functions for the weak discrete space are the same in Approaches I and II, the resulting local stiffness matrix MK would remain unchanged\nfrom Approaches I and II. The set of basis functions (3.11) is advantageous over the\nset (3.9) in that the matrix DK is a diagonal one whose inverse in trivial to compute.\n3.2. For the Cubic Element (Q0 (K), Q0 (F), RT0 (K)). Let K = [0, a] \u00d7\n[0, b] \u00d7 [0, c] be a rectangular box where a, b, c are positive real numbers. We consider\nthe three-dimensional cubic element, for which the discrete space Sh consists of piecewise constants on K0 and piecewise constants on the faces of K. The space for the\ndiscrete gradient is the lowest order Raviart-Thomas element on K. We clearly have\nN0 = 1, Nb = 6 and NV = 6.\nDenote the six faces Fi , i = 1, . . . , 6 by\nF1 : x = 0,\n\nF2 : x = a,\n\nF3 : y = 0,\nF5 : z = 0,\n\nF4 : y = b,\nF6 : z = c.\n\nNote that the volume of K is given by |K| = abc and the normal direction to each\nface is given by\n\uf8ee \uf8f9\n\uf8ee \uf8f9\n\uf8ee \uf8f9\n\uf8ee \uf8f9\n\uf8ee \uf8f9\n\uf8ee \uf8f9\n\u22121\n1\n0\n0\n0\n0\nn1 = \uf8f0 0 \uf8fb , n2 = \uf8f00\uf8fb , n3 = \uf8f0\u22121\uf8fb , n4 = \uf8f01\uf8fb , n5 = \uf8f0 0 \uf8fb , n6 = \uf8f00\uf8fb .\n0\n0\n0\n0\n\u22121\n1\nWe adopt the following set of basis functions for the weak discrete space on K\n(\n1\non Fi\n\u03c60,1 = 1,\n\u03c6b,i =\nfor i = 1, . . . , 6,\n0\notherwise\n\nand\n\uf8f9\n\uf8ee \uf8f9\n\uf8f9\n\uf8f9\n\uf8eex\uf8f9\n\uf8ee\n\uf8ee \uf8f9\n\uf8ee\n\u22121\n0\n0\n0\n0\na\n\u03c71 = \uf8f0 0 \uf8fb , \u03c72 = \uf8f0 0 \uf8fb , \u03c73 = \uf8f0 yb \u2212 1\uf8fb , \u03c74 = \uf8f0 yb \uf8fb , \u03c75 = \uf8f0 0 \uf8fb , \u03c76 = \uf8f0 0 \uf8fb .\nz\nz\n0\n0\n0\n0\nc \u22121\nc\n\uf8eex\na\n\nClearly, each \u03c7i satisfies\n\n\u03c7i * nj |Fj =\nIt is not hard\n\uf8ee\n2\n\uf8ef\u22121\n\uf8ef\n|K| \uf8ef\n\uf8ef0\nDK =\n6 \uf8ef\n\uf8ef0\n\uf8f00\n0\n\n(\n\n1\n0\n\nfor i = j,\nfor i =\n6 j.\n\nto compute that\n\uf8f9\n\u22121 0\n0\n0\n0\n2\n0\n0\n0\n0\uf8fa\n\uf8fa\n0\n2 \u22121 0\n0\uf8fa\n\uf8fa,\n0 \u22121 2\n0\n0\uf8fa\n\uf8fa\n0\n0\n0\n2 \u22121\uf8fb\n0\n0\n0 \u22121 2\n10\n\n\u22121\nDK\n\n\uf8ee\n2\n\uf8ef1\n\uf8ef\n2 \uf8ef\n\uf8ef0\n=\n|K| \uf8ef\n\uf8ef0\n\uf8f00\n0\n\n1\n2\n0\n0\n0\n0\n\n0\n0\n2\n1\n0\n0\n\n0\n0\n1\n2\n0\n0\n\n0\n0\n0\n0\n2\n1\n\n\uf8f9\n0\n0\uf8fa\n\uf8fa\n0\uf8fa\n\uf8fa,\n0\uf8fa\n\uf8fa\n1\uf8fb\n2\n\n\fand\n\nZK\n\n\uf8ee \uf8f9\nbc\n\uf8ef bc \uf8fa\n\uf8ef \uf8fa\n\uf8efac\uf8fa\n\uf8fa\n=\uf8ef\n\uf8efac\uf8fa ,\n\uf8ef \uf8fa\n\uf8f0ab\uf8fb\nab\n\nTK\n\n\uf8ee\nbc 0\n\uf8ef 0 bc\n\uf8ef\n\uf8ef0 0\n=\uf8ef\n\uf8ef0 0\n\uf8ef\n\uf8f00 0\n0 0\n\n0\n0\nac\n0\n0\n0\n\n\uf8f9\n0 0\n0 0\uf8fa\n\uf8fa\n0 0\uf8fa\n\uf8fa\n0 0\uf8fa\n\uf8fa\nab 0 \uf8fb\n0 ab\n\n0\n0\n0\nac\n0\n0\n\nThen, the local stiffness matrix MK can be computed using the formula presented in\nLemma 3.1.\n4. Numerical Experiments. In this section, we shall report some numerical\nresults for the weak Galerkin finite element method on a variety of testing problems,\nwith different mesh and finite elements. To this end, let uh = {u0 , ub } and u be\nthe solution to the weak Galerkin equation (2.2) and the original equation (1.1),\nrespectively. Define the error by eh = uh \u2212 Qh u = {e0 , eb } where Qh u is the L2\nprojection of u onto appropriately defined spaces. Let us introduce the following\nnorms:\n!1/2\nX Z\n1\n2\nH semi-norm:\nk\u2207d eh k =\n|\u2207d eh | dx\n,\nK\n\nK\u2208Th\n\n2\n\nke0 k =\n\nElement-based L norm :\n\nX Z\n\nK\u2208Th\n\n2\n\nkeb k =\n\nEdge/Face-based L norm :\n\nX\n\n2\n\n!1/2\n\n|e0 | dx\n\nK\n\nhK\n\nZ\n\n2\n\n|eb | ds\n\nF\n\nF \u2208Fh\n\n,\n\n!1/2\n\n,\n\nwhere in the definition of keb k, hK stands for the size of the element K that takes F\nas an edge/face. We shall also compute the error in the following metrics\nk\u2207d uh \u2212 \u2207uk =\n\nX Z\n\nK\u2208Th\n\nkuh \u2212 uk =\n\n!1/2\n\n|\u2207d uh \u2212 \u2207u| dx\n\nK\n\nX Z\n\nK\u2208Th\n\n2\n\n2\n\n!1/2\n\n|u0 \u2212 u| dx\n\nK\n\n,\n\n,\n\nke0 k\u221e = sup |e0 (x)|.\nx \u2208 K0\nK \u2208 Th\n\nHere the maximum norm ke0 k\u221e is computed over all Gaussian points, and all other\nintegrals are calculated with a Gaussian quadrature rule that is of high order of\naccuracy so that the error from the numerical integration can be virtually ignored.\n4.1. Case 1: Model Problems with Various Boundary Conditions. First,\nwe consider the Laplace equation with nonhomogeneous Dirichlet boundary condition:\n(4.1)\n\nu=g\n\non \u2202\u03a9.\n11\n\n\fWe introduce a discrete Dirichlet boundary data gh , which is either the usual nodal\nvalue interpolation, or the L2 projection of u = g on the boundary. Let \u0393 \u2282 \u2202\u03a9 and\ndefine\nSgh ,\u0393,h ={v : v|K0 \u2208 Pj (K0 ) or Qj (K0 ) for all K \u2208 Th ,\nv|F \u2208 Pl (F ) or Ql (F ) for all F \u2208 Fh ,\nv = gh on Fh \u2229 \u0393}.\nWhen \u0393 = \u2202\u03a9, we simply denote Sgh ,\u2202\u03a9,h by Sgh ,h . The discrete Galerkin formulation\nfor the nonhomogeneous Dirichlet boundary value problem can be written as: find\nuh \u2208 Sgh ,h such that for all vh \u2208 Sh0 ,\n(A\u2207d uh , \u2207d vh ) + (\u03b2 * \u2207d uh , v0 ) + (\u03b3u0 , v0 ) = (f, v0 ).\nWe would like to see how the weak Galerkin approximation might be affected when\nthe boundary data u = g is approximated with different schemes (nodal interpolation\nverses L2 projection). To this end, we use a two dimensional test problem with domain\n\u03a9 = (0, 1) \u00d7 (0, 1) and exact solution given by u = sin(2\u03c0x + \u03c0/2) sin(2\u03c0y + \u03c0/2).\nA uniform triangular mesh and the element (P0 (K), P0 (F ), RT0 (K)) is used in the\nweak Galerkin discretization. The results are reported in Table 4.1 and Table 4.2. It\ncan be seen that both approximations of the Dirichlet boundary data give optimal\norder of convergence for the weak Galerkin method, while the L2 projection method\nyields a slightly smaller error in ke0 k and keb k.\nNext, we consider a mixed boundary condition:\n(\n\nu = gD\n(A\u2207u) * n + \u03b1u = g R\n\non \u0393D ,\non \u0393R ,\n\nwhere g D is the Dirichlet boundary data, g R is the Robin type boundary data, \u03b1 \u2265 0,\nand \u0393D \u2229 \u0393R = \u2205, \u0393D \u222a \u0393R = \u2202\u03a9. When \u03b1 = 0, the Robin type boundary condition\nbecomes the Neumann type boundary condition.\nFor the mixed boundary condition, it is not hard to see that the weak formulation\ncan be written as: find uh \u2208 SghD ,\u0393D ,h such that for all vh \u2208 S0,\u0393D ,h ,\n(A\u2207d uh , \u2207d vh ) + h\u03b1ub , vb i\u0393R + (\u03b2 * \u2207d uh , v0 ) + (\u03b3u0 , v0 ) = (f, v0 ) + hg R , vb i\u0393R ,\nwhere h*, *i\u0393R denotes the L2 inner-product on \u0393R . We tested a two-dimensional\nproblem with A to be an identity matrix and \u03a9 = (0, 1)2 with a uniform triangular\nmesh. The exact solution is chosen to be u = sin(\u03c0y)e\u2212x . This function satisfies\n\u2207u * n + u = 0\non the boundary segment x = 1. We use the Dirichlet boundary condition on all other\nboundary segments. The element (P0 (K), P0 (F ), RT0 (K)) is used in the discretization. For the Dirichlet boundary data, the L2 projection is used to approximate the\nboundary data ghD . The results are reported in Table 4.3. It shows optimal rates of\nconvergence in all norms for the weak Galerkin approximation with mixed boundary\nconditions.\n12\n\n\fTable 4.1\nCase 1. Numerical results with Dirichlet data being approximated by the usual nodal point\ninterpolation.\n\nh\n1/8\n1/16\n1/32\n1/64\n1/128\nO(hr )\nr=\n\nk\u2207d eh k\n7.14e-01\n3.56e-01\n1.78e-01\n8.90e-02\n4.45e-02\n\nke0 k\n2.16e-02\n5.61e-03\n1.41e-03\n3.55e-04\n8.88e-05\n\nkeb k\n4.05e-02\n1.01e-02\n2.53e-03\n6.32e-04\n1.57e-04\n\nk\u2207d uh \u2212 \u2207uk\n1.01e+0\n5.04e-01\n2.51e-01\n1.25e-01\n6.29e-02\n\nku0 \u2212 uk\n1.30e-01\n6.53e-02\n3.27e-02\n1.63e-02\n8.18e-03\n\nke0 k\u221e\n4.43e-02\n1.12e-02\n2.86e-03\n7.15e-04\n1.79e-04\n\n1.0012\n\n1.9837\n\n2.0014\n\n1.0024\n\n0.9984\n\n1.9879\n\nTable 4.2\nCase 1. Numerical results with Dirichlet data being approximated by L2 projection.\n\nh\n1/8\n1/16\n1/32\n1/64\n1/128\nO(hr )\nr=\n\nk\u2207d eh k\n7.10e-01\n3.55e-01\n1.78e-01\n8.90e-02\n4.45e-02\n\nke0 k\n1.75e-02\n4.59e-03\n1.16e-03\n2.90e-04\n7.27e-05\n\nkeb k\n3.08e-02\n7.69e-03\n1.92e-03\n4.81e-04\n1.20e-04\n\nk\u2207d uh \u2212 \u2207uk\n1.01e+0\n5.04e-01\n2.51e-01\n1.25e-01\n6.29e-02\n\nku0 \u2212 uk\n1.29e-01\n6.52e-02\n3.27e-02\n1.63e-02\n8.18e-03\n\nke0 k\u221e\n3.68e-02\n9.54e-03\n2.39e-03\n6.01e-04\n1.50e-04\n\n0.9993\n\n1.9808\n\n1.9999\n\n1.0015\n\n0.9968\n\n1.9861\n\n4.2. Case 2: A Model Problem with Degenerate Diffusion. We consider\na test problem where the diffusive coefficient A is singular at some points of the\ndomain. Note that in this case, the usual mixed finite element method may not\nbe applicable due to the degeneracy of the coefficient. But the primary variable\nbased formulations, including the weak Galerkin method, can still be employed for a\nnumerical approximation.\nMore precisely, we consider the following two-dimensional problem\n\u2212\u2207 * (xy \u2207u) = f\nu=0\n\nin \u03a9,\non \u2202\u03a9,\n\nwhere \u03a9 = (0, 1)2 . Notice that the diffusive coefficient A = xy vanishes at the origin.\nWe set the exact solution to be u = x(1 \u2212 x)y(1 \u2212 y). The configuration for the finite\nelement partitions is the same as in test Case 1. We tested the weak Galerkin method\non this problem, and the results are presented in Table 4.4 and Figure 4.1.\nSince the diffusive coefficient A is not uniformly positive definite on \u03a9, we have\nno anticipation that the weak Galerkin approximation has any optimal rate of convergence, though the exact solution is smooth. It should be pointed out that the usual\nLax-Milgram theorem is not applicable to such problems in order to have a result\non the solution existence and uniqueness. However, one can prove that the discrete\nproblem always has a unique solution when Gaussian quadratures are used in the\nnumerical integration. Interestingly, the numerical experiments show that the weak\nGalerkin method converges with a rate of approximately O(h0.5 ) in k\u2207d eh k, O(h1.25 )\nin ke0 k and keb k. It is left for future research to explore a theoretical foundation of\n13\n\n\fTable 4.3\nCase 1. Numerical results for a test problem with mixed boundary conditions, where a Robin\ntype boundary condition is imposed on part of the boundary.\n\nh\n1/8\n1/16\n1/32\n1/64\n1/128\nO(hr )\nr=\n\nk\u2207d eh k\n1.55e-01\n7.87e-02\n3.94e-02\n1.97e-02\n9.87e-03\n\nke0 k\n3.18e-03\n8.20e-04\n2.06e-04\n5.17e-05\n1.29e-05\n\nkeb k\n1.14e-02\n2.90e-03\n7.29e-04\n1.82e-04\n4.56e-05\n\nk\u2207d uh \u2212 \u2207uk\n1.95e-01\n9.82e-02\n4.92e-02\n2.46e-02\n1.23e-02\n\nku0 \u2212 uk\n4.51e-02\n2.25e-02\n1.12e-02\n5.64e-03\n2.82e-03\n\nke0 k\u221e\n1.12e-02\n3.18e-03\n8.40e-04\n2.15e-04\n5.46e-05\n\n0.9958\n\n1.9876\n\n1.9926\n\n0.9971\n\n1.0001\n\n1.9262\n\nTable 4.4\nCase 2. Numerical results for a test problem with degenerate diffusion A in the domain.\n\nh\n1/8\n1/16\n1/32\n1/64\n1/128\nO(hr )\nr=\n\nk\u2207d eh k\n5.61e-02\n4.03e-02\n2.95e-02\n2.15e-02\n1.55e-02\n\nke0 k\n3.32e-03\n1.38e-03\n5.68e-04\n2.35e-04\n9.93e-05\n\nkeb k\n6.60e-03\n2.81e-03\n1.16e-03\n4.83e-04\n2.02e-04\n\nk\u2207d uh \u2212 \u2207uk\n5.75e-02\n4.09e-02\n2.96e-02\n2.15e-02\n1.55e-02\n\nku0 \u2212 uk\n5.48e-03\n2.59e-03\n1.23e-03\n5.97e-04\n2.91e-04\n\nke0 k\u221e\n1.27e-02\n4.90e-03\n2.21e-03\n1.16e-03\n5.99e-04\n\n0.4614\n\n1.2687\n\n1.2594\n\n0.4697\n\n1.0579\n\n1.0912\n\nthe observed convergence behavior.\n4.3. Case 3: A Model Problem on a Domain with Corner Singularity.\nWe consider the Laplace equation on a two-dimensional domain for which the exact\nsolution possesses a corner singularity. For simplicity, we take \u03a9 = (0, 1)2 and let the\nexact solution be given by\n(4.2)\nwhere r =\n\nu(x, y) = x(1 \u2212 x)y(1 \u2212 y)r\u22122+\u03b3 ,\np\nx2 + y 2 and \u03b3 \u2208 (0, 1] is a constant. Clearly, we have\nu \u2208 H01 (\u03a9) \u2229 H 1+\u03b3\u2212\u03b5 (\u03a9)\n\nand\n\nu\u2208\n/ H 1+\u03b3 (\u03a9),\n\nwhere \u03b5 is any small, but positive number. Again, a uniform triangular mesh and the\nelement (P0 (K), P0 (F ), RT0 (K)) are used in the numerical discretization. Note that\nthe weak Galerkin for this problem is exactly the same as the standard mixed finite\nelement method.\nThis model problem was numerically tested with \u03b3 = 0.5 and \u03b3 = 0.25. The\nconvergence rates are reported in Table 4.5 and Table 4.6. Notice that k\u2207d eh k and\nke0 k behaves in a way as predicted by theory (2.4); i.e., they converge with rates given\nby O(h\u03b3 ) and O(h1+\u03b3 ), respectively. The result also shows that the approximation\non the element edge/face has a rate of convergence O(h1+\u03b3 ).\n4.4. Case 4: A Model Problem with Intersecting Interfaces. This test\nproblem is taken from [16], which has also been tested by other researchers [17, 20].\n14\n\n\fFig. 4.1. Case 2. Convergence rate of k\u2207d eh k, ke0 k and keb k for the case of degenerate\ndiffusions.\n\n\u22122\n\nError\n\n10\n\nH1 semi norm\n||e0||\n||eb||\n\n\u22124\n\n10\n\n\u22122\n\n\u22121\n\n10\n\n10\nh: mesh size\n\nTable 4.5\nCase 3. Convergence rates for a problem with corner singularity (\u03b3 = 0.5).\n\nh\n1/8\n1/16\n1/32\n1/64\n1/128\nO(hr )\nr=\n\nk\u2207d eh k\n1.88e-01\n1.36e-01\n9.74e-02\n6.93e-02\n4.92e-02\n\nke0 k\n6.40e-03\n2.20e-03\n7.62e-04\n2.65e-04\n9.33e-05\n\nkeb k\n1.47e-02\n5.28e-03\n1.86e-03\n6.57e-04\n2.32e-04\n\nk\u2207d uh \u2212 \u2207uk\n2.54e-01\n1.84e-01\n1.32e-01\n9.42e-02\n6.69e-02\n\nku0 \u2212 uk\n1.49e-02\n7.66e-03\n3.89e-03\n1.96e-03\n9.88e-04\n\nke0 k\u221e\n4.30e-02\n3.01e-02\n2.12e-02\n1.49e-02\n1.05e-02\n\n0.4852\n\n1.5251\n\n1.4992\n\n0.4827\n\n0.9805\n\n0.5066\n\nIn two dimension, consider \u03a9 = (\u22121, 1)2 and the following problem\n\u2212\u2207 * (A\u2207u) = 0,\nwhere A = K1 I2 in the first and third quadrants, and K2 I2 in the second and forth\nquadrants. Here I2 is the 2 \u00d7 2 identity matrix and K1 , K2 are two positive numbers.\nConsider an exact solution which takes the following form in polar coordinates:\nu(x, y) = r\u03b3 \u03bc(\u03b8),\nwhere \u03b3 \u2208 (0, 1] and\n\n(4.3)\n\n\uf8f1\ncos((\u03c0/2 \u2212 \u03c3)\u03b3) cos((\u03b8 \u2212 \u03c0/2 + \u03c1)\u03b3),\n\uf8f4\n\uf8f4\n\uf8f2\ncos(\u03c1\u03b3) cos((\u03b8 \u2212 \u03c0 + \u03c3)\u03b3),\n\u03bc(\u03b8) =\n\uf8f4 cos(\u03c3\u03b3) cos((\u03b8 \u2212 \u03c0 \u2212 \u03c1)\u03b3),\n\uf8f4\n\uf8f3\ncos((\u03c0/2 \u2212 \u03c1)\u03b3) cos((\u03b8 \u2212 3\u03c0/2 \u2212 \u03c3)\u03b3),\n15\n\nif 0 \u2264 \u03b8 \u2264 \u03c0/2,\nif \u03c0/2 \u2264 \u03b8 \u2264 \u03c0,\nif \u03c0 \u2264 \u03b8 \u2264 3\u03c0/2,\nif 3\u03c0/2 \u2264 \u03b8 \u2264 2\u03c0.\n\n\fTable 4.6\nCase 3. Convergence rates for a problem with corner singularity (\u03b3 = 0.25).\n\nh\n1/8\n1/16\n1/32\n1/64\n1/128\nO(hr )\nr=\n\nk\u2207d eh k\n4.93e-01\n4.18e-01\n3.53e-01\n2.98e-01\n2.51e-01\n\nke0 k\n1.69e-02\n7.07e-03\n2.94e-03\n1.22e-03\n5.14e-04\n\nkeb k\n3.58e-02\n1.52e-02\n6.39e-03\n2.68e-03\n1.12e-03\n\nk\u2207d uh \u2212 \u2207uk\n6.65e-01\n5.66e-01\n4.79e-01\n4.04e-01\n3.40e-01\n\nku0 \u2212 uk\n2.56e-02\n1.31e-02\n6.72e-03\n3.42e-03\n1.73e-03\n\nke0 k\u221e\n1.25e-01\n1.05e-01\n8.85e-02\n7.44e-02\n6.25e-02\n\n0.2437\n\n1.2613\n\n1.2489\n\n0.2417\n\n0.9717\n\n0.2505\n\nThe parameters \u03b3, \u03c1, \u03c3 satisfy the following nonlinear relations\n\n(4.4)\n\nR := K1 /K2 = \u2212 tan((\u03c0/2 \u2212 \u03c3)\u03b3) cot(\u03c1\u03b3),\n1/R = \u2212 tan(\u03c1\u03b3) cot(\u03c3\u03c1),\nR = \u2212 tan(\u03c1\u03b3) cot((\u03c0/2 \u2212 \u03c1)\u03b3),\nmax{0, \u03c0\u03b3 \u2212 \u03c0} < 2\u03b3\u03c1 < min{\u03c0\u03b3, \u03c0},\nmax{0, \u03c0 \u2212 \u03c0\u03b3} < \u22122\u03b3\u03c3 < min{\u03c0, 2\u03c0 \u2212 \u03c0\u03b3}.\n\nThe solution u(r, \u03b8) is known to be in H 1+\u03b3\u2212\u03b5 (\u03a9) for any \u03b5 > 0, and has a singularity\nnear the origin (0, 0).\nOne choice for the coefficients is to take \u03b3 = 0.1, R \u2248 161.4476387975881,\n\u03c1 \u2248 \u03c0/4, \u03c3 \u2248 \u221214.92256510455152. We numerically solve this problem by using the\nweak Galerkin method with element (P0 (K), P0 (F ), RT0 (K)) on triangular meshes.\nIt turns out that uniform triangular meshes are not good enough to handle the singularity in this problem. Indeed, we use a locally refined initial mesh, as shown in\nFigure 4.2, which consists of 268 triangles. This mesh is then uniformly refined, by dividing each triangle into 4 subtriangles, to get a sequence of nested meshes. Although\nthis can not be compared with an adaptive mesh refinement process, it does improve\nthe accuracy of the numerical approximation, as shown in our numerical results reported in Table 4.7. Since the mesh is not quasi-uniform, we do not expect that the\ntheoretic error estimation (2.4) apply for this problem. An interesting observation\nof Table 4.7 is that, the norm ku0 \u2212 uk appears to converge in a much faster rate\nthan ke0 k = ku0 \u2212 Q0 uk, while the opposite has usually been observed for other test\ncases. We believe that this is due to the use of a locally refined initial mesh in our\ntesting process. When the actual value of ku0 \u2212 uk reduces to the same level as the\nvalue of ke0 k, its convergence rate slows down to the same as ke0 k. Readers are also\nencouraged to derive their own conclusions from these numerical experiments.\nWe also observe that, when the initial mesh gets more refined near the origin,\nthe convergence rates increase slightly. In Table 4.8, this trend is clearly shown.\nFor each initial mesh, it is refined four times to get five levels of nested meshes. The\nconvergence rates are computed based on these five nested meshes. The initial meshes\nare generated by refining only those triangles near the origin. Two examples of initial\nmeshes are shown in Figure 4.2.\n4.5. Case 5: An Anisotropic Problem. Consider a two dimensional anisotropic\nproblem defined in the square domain \u03a9 = (0, 1)2 as follows\n\u2212\u2207 * (A\u2207u) = f,\n16\n\n\fFig. 4.2. Case 4. The initial triangular mesh for the intersecting interface problem, with 268\n(left) and 300 (right) triangles.\n\nTable 4.7\nCase 4. Convergence rate for the intersecting interface problem with an initial mesh containing\n268 triangles.\n\nlevel\n0\n1\n2\n3\n4\nO(hr )\nr=\n\nk\u2207d eh k\n1.07e-01\n9.76e-02\n9.30e-02\n9.12e-02\n8.98e-02\n\nke0 k\n3.97e-03\n2.92e-03\n2.51e-03\n2.21e-03\n1.95e-03\n\nkeb k\n9.95e-03\n6.44e-03\n5.11e-03\n4.44e-03\n3.91e-03\n\nk\u2207d uh \u2212 \u2207uk\n1.47e-01\n1.26e-01\n1.16e-01\n1.11e-01\n1.07e-01\n\nku0 \u2212 uk\n2.60e-02\n1.33e-02\n7.01e-03\n3.95e-03\n2.55e-03\n\nke0 k\u221e\n1.97e-02\n1.94e-02\n1.91e-02\n1.88e-02\n1.84e-02\n\n0.0604\n\n0.2446\n\n0.3229\n\n0.1084\n\n0.8461\n\n0.0239\n\nwhere the diffusive coefficient is given\n\u0014 2\nk\nA=\n0\n\nby\n\u0015\n0\n,\n1\n\nfor k 6= 0.\n\nWe chose a function f and a Dirichlet boundary condition so that the exact solution\nis given by u(x, y) = sin(2\u03c0x) sin(2k\u03c0y). In applying the weak Galerkin method, we\nuse an anisotropic triangular mesh that was constructed by first dividing the domain\ninto kn \u00d7 n sub-rectangles, and then splitting each rectangle into two triangles by\nconnecting a diagonal line. The characteristic mesh size is h = 1/n. We tested two\ncases with k = 3 and k = 9. The results are reported in Tables 4.9 and 4.10. The\ntables show optimal rates of convergence for the weak Galerkin approximation in\nvarious metrics. The numerical experiment indicates that the weak Galerkin method\ncan handle anisotropic problems and meshes without any trouble.\n4.6. Case 6: A Three-Dimensional Model Problem. The final test problem is a three dimensional Laplace equation defined on \u03a9 = (0, 1)3 , with a Dirichlet\nboundary condition and an exact solution given by u = sin(2\u03c0x) sin(2\u03c0y) sin(2\u03c0z).\nThe purpose of this test problem is to examine the convergence rate of the cubic\n(Q0 (K), Q0 (F ), RT0 (K)) element. The results are reported in Table 4.11.\nIn addition to the optimal rates of convergence as shown in Table 4.11, on can also\nsee a superconvergence for k\u2207d eh k. The same result is anticipated for 2D rectangular\nelements. It is left to interested readers for a further investigation, especially for\nmodel problems with variable coefficients.\n17\n\n\fTable 4.8\nCase 4. Convergence rate for the intersecting interface problem with different initial meshes,\nwhere the first column indicates the total number of triangles in the initial mesh.\n\n#\ntriangles\n268\n300\n332\n364\n396\n428\n460\n492\n524\n\nk\u2207d eh k\n0.0604\n0.0750\n0.0888\n0.1020\n0.1148\n0.1273\n0.1396\n0.1519\n0.1641\n\nConvergence rates O(hr ), r =\nke0 k\nkeb k\nk\u2207d uh \u2212 \u2207uk ku0 \u2212 uk\n0.2446 0.3229\n0.1084\n0.8461\n0.2623 0.3489\n0.1206\n0.8699\n0.2818 0.3772\n0.1329\n0.8912\n0.3031 0.4079\n0.1454\n0.9099\n0.3266 0.4411\n0.1581\n0.9260\n0.3522 0.4766\n0.1711\n0.9396\n0.3802 0.5145\n0.1843\n0.9509\n0.4105 0.5548\n0.1978\n0.9602\n0.4432 0.5972\n0.2117\n0.9678\n\nke0 k\u221e\n0.0239\n0.0373\n0.0487\n0.0586\n0.0673\n0.0749\n0.0817\n0.0878\n0.0932\n\nTable 4.9\nCase 5. Convergence rate for the anisotropic problem with k = 3.\n\nh\n1/8\n1/16\n1/32\n1/64\n1/128\nO(hr )\nr=\n\nk\u2207d eh k\n1.48e+0\n7.39e-01\n3.69e-01\n1.84e-01\n9.23e-02\n\nke0 k\n1.95e-02\n5.11e-03\n1.29e-03\n3.24e-04\n8.12e-05\n\nkeb k\n4.61e-02\n1.16e-02\n2.92e-03\n7.33e-04\n1.83e-04\n\nk\u2207d uh \u2212 \u2207uk\n2.70e+0\n1.35e+0\n6.80e-01\n3.40e-01\n1.70e-01\n\nku0 \u2212 uk\n1.29e-01\n6.53e-02\n3.27e-02\n1.63e-02\n8.18e-03\n\nke0 k\u221e\n4.13e-02\n1.06e-02\n2.67e-03\n6.68e-04\n1.66e-04\n\n1.0010\n\n1.9793\n\n1.9942\n\n0.9972\n\n0.9975\n\n1.9906\n\nTable 4.10\nCase 5. Convergence rate for the anisotropic problem with k = 9.\n\nh\n1/4\n1/8\n1/16\n1/32\n1/64\nO(hr )\nr=\n\nk\u2207d eh k\n7.98e+0\n3.89e+0\n1.91e+0\n9.54e-01\n4.76e-01\n\nke0 k\n6.80e-02\n2.07e-02\n5.43e-03\n1.37e-03\n3.44e-04\n\nkeb k\n2.93e-01\n7.44e-02\n1.88e-02\n4.72e-03\n1.18e-03\n\nk\u2207d uh \u2212 \u2207uk\n1.58e+1\n8.18e+0\n4.12e+0\n2.06e+0\n1.03e+0\n\nku0 \u2212 uk\n2.52e-01\n1.30e-01\n6.53e-02\n3.27e-02\n1.63e-02\n\nke0 k\u221e\n1.49e-01\n4.22e-02\n1.09e-02\n2.74e-03\n6.84e-04\n\n1.0161\n\n1.9160\n\n1.9897\n\n0.9857\n\n0.9883\n\n1.9492\n\nTable 4.11\nCase 6. Convergence rate for a 3D model problem with smooth solution.\n\nh\n1/8\n1/12\n1/16\n1/20\nO(hr )\nr=\n\nk\u2207d eh k\n1.85e-01\n8.53e-02\n4.86e-02\n3.13e-02\n\nke0 k\n1.62e-02\n7.69e-03\n4.42e-03\n2.85e-03\n\nkeb k\n4.27e-02\n1.94e-02\n1.10e-02\n7.07e-03\n\nk\u2207d uh \u2212 \u2207uk\n1.22e+00\n8.19e-01\n6.15e-01\n4.92e-01\n\nku0 \u2212 uk\n1.34e-01\n9.14e-02\n6.89e-02\n5.52e-02\n\nke0 k\u221e\n3.63e-02\n1.96e-02\n1.18e-02\n7.78e-03\n\n1.9389\n\n1.8984\n\n1.9618\n\n0.9914\n\n0.9737\n\n1.6779\n\n18\n\n\fREFERENCES\n[1] R.A. Adams and J.J.F. Fournier, Sobolev Spaces, Academic Press, 2nd ed., 2003.\n[2] D. Arnold, F. Brezzi, B. Cockburn, and D. Marini, Unified analysis of discontinuous Galerkin\nmethods for elliptic problems, SIAM J. Numer. Anal., 39(2002), pp. 1749\u20131779.\n[3] C. Bahriawati and C. Carstensen, Three Matlab implementations of the lowest order RaviartThomas MFEM with a posteriori error control, Comp. Meth. Appl. Math., 5(2005),\npp. 333\u2013361.\n[4] C.E. Baumann and J.T. Oden, A discontinuous hp finite element method for convectiondiffusion problems, Comput. Meth. Appl. Mech. Engrg., 175(1999), pp. 311\u2013341.\n[5] F. Brezzi, J. Douglas, and L. Marini, Two families of mixed finite elements for second order\nelliptic problems, Numer. Math., 47(1985), pp. 217\u2013235.\n[6] C. Bernardi and R. Verf\u00fcrth, Adaptive finite element methods for elliptic equations with nonsmooth coefficients, Numer. Math., 85(2000), pp. 579\u2013608.\n[7] S.C. Brenner, L. Owens, and L.Y. Sung, A weakly over-penalized symmetric interior penalty\nmethod, Electronic Transactions on Numerical Analysis (ETNA), 30(2008), pp. 107\u2013127.\n[8] S.C. Brenner and L.R. Scott, The mathematical theory of finite element methods, Springer, 3rd\ned., 2008.\n[9] F. Brezzi and M. Fortin, Mixed and hybrid finite element methods, Springer-Verlag, 1991.\n[10] P.G. Ciarlet, The finite element method for elliptic problems, North-Holland, Amsterdam,\n1978.\n[11] B. Cockburn, J. Gopalakrishnan, and R. Lazarov, Unified hybridization of discontinuous\nGalerkin, mixed, and continuous Galerkin methods for second order elliptic problems,\nSIAM J. Numer. Anal., 47(2009), pp. 1319\u20131365.\n[12] B. Cockburn, G.E. Karniadakis, and C.-W. Shu, Discontinuous Galerkin Methods: Theory,\nComputation and Applications, Lect. Notes Comput. Sci. Engrg. 11, Springer-Verlag, New\nYork, 2000.\n[13] M. Crouzeix and P. Raviart, Conforming and nonconforming finite element methods for solving\nthe stationary Stokes equations, RAIRO, Anal. Numer. 3(1973), pp. 33\u201375.\n[14] Y. Epshteyn and B. Riviere, Estimation of penalty parameters for symmetric interior penalty\nGalerkin methods, J. Comput. Appl. Math., 206(2007), pp. 843\u2013872.\n[15] C. Johnson, Numerical solution of partial differential equations by the finite element method,\nDover, 2009.\n[16] R.B. Kellog, On the Poisson equation with intersecting interfaces, Appl. Anal., 4(1976),\npp. 101\u2013129.\n[17] J. Liu, L. Mu, and X. Ye, Convergence of the discontinuous finite volume method for elliptic\nproblems with minimal regularity, Preprint submitted to J. Comput. Appl. Math, (2011).\n[18] J. Liu and M. Yang, A weakly over-penalized finite volume element method for elliptic problems,\nPreprint submitted to Numer. Meth. PDEs, (2011).\n[19] S.D. Margenov and P.S. Vassilevski, Algebraic multilevel preconditioning of anisotropic elliptic\nproblems, SIAM J. Sci. Comput., 15(1994), pp. 1026\u20131037.\n[20] P. Morin, R.H. Nochetto, and K.G. Siebert, Convergence of adaptive finite element methods,\nSIAM Rev., 44(2002), pp. 631\u2013658.\n[21] P. Raviart and J. Thomas, A mixed finite element method for second order elliptic problems,\nMathematical Aspects of the Finite Element Method, I. Galligani, E. Magenes, eds., Lectures Notes in Math. 606, Springer-Verlag, New York, 1977.\n[22] S. Sun, Discontinuous Galerkin methods for reactive transport in porous media, Ph.D. dissertation, The University of Texas at Austin, 2003.\n[23] J. Wang and X. Ye, A weak Galerkin finite element method for second-order elliptic problems,\narXiv:1104.2897v1 [math.NA].\n[24] J. Wang and X. Ye, A weak Galerkin finite element method for Stokes problems, Preprint,\n2011.\n[25] B. Rivi\u00e9re, M.F. Wheeler, and V. Girault, A priori error estimates for finite element methods\nbased on discontinuous approximation spaces for elliptic problems, SIAM J. Numer. Anal.,\n39(2001), pp. 902\u2013931.\n[26] T.P. Wihler and B. Rivi\u00e9re, Discontinuous Galerkin methods for second-order elliptic PDE\nwith low-regularity solutions, J. Sci. Comput., 46(2011), pp. 151\u2013165.\n\n19\n\n\f"}