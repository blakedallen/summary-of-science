{"id": "http://arxiv.org/abs/1103.1493v1", "guidislink": true, "updated": "2011-03-08T11:11:31Z", "updated_parsed": [2011, 3, 8, 11, 11, 31, 1, 67, 0], "published": "2011-03-08T11:11:31Z", "published_parsed": [2011, 3, 8, 11, 11, 31, 1, 67, 0], "title": "An Improvement to the Number Field Sieve", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1103.2320%2C1103.3475%2C1103.3261%2C1103.4329%2C1103.4412%2C1103.5523%2C1103.1764%2C1103.4895%2C1103.3499%2C1103.1182%2C1103.5603%2C1103.5672%2C1103.0381%2C1103.1511%2C1103.0616%2C1103.4754%2C1103.4628%2C1103.6067%2C1103.5136%2C1103.4330%2C1103.4725%2C1103.5576%2C1103.2822%2C1103.0650%2C1103.2905%2C1103.3725%2C1103.2245%2C1103.6138%2C1103.0182%2C1103.0181%2C1103.3624%2C1103.0428%2C1103.4812%2C1103.4344%2C1103.2937%2C1103.4829%2C1103.0570%2C1103.0993%2C1103.3825%2C1103.5091%2C1103.5950%2C1103.3332%2C1103.5882%2C1103.0644%2C1103.0825%2C1103.5031%2C1103.2552%2C1103.1191%2C1103.0502%2C1103.3549%2C1103.3338%2C1103.0366%2C1103.1838%2C1103.1124%2C1103.4659%2C1103.4776%2C1103.3099%2C1103.3607%2C1103.1950%2C1103.5872%2C1103.0610%2C1103.2415%2C1103.6050%2C1103.0974%2C1103.5999%2C1103.5783%2C1103.2863%2C1103.3216%2C1103.0575%2C1103.4080%2C1103.2419%2C1103.1493%2C1103.3409%2C1103.5186%2C1103.2075%2C1103.4321%2C1103.4876%2C1103.3223%2C1103.6212%2C1103.4432%2C1103.1996%2C1103.1554%2C1103.2184%2C1103.0595%2C1103.1448%2C1103.5218%2C1103.4794%2C1103.3809%2C1103.2987%2C1103.5423%2C1103.4068%2C1103.1661%2C1103.3506%2C1103.4509%2C1103.0871%2C1103.4051%2C1103.6021%2C1103.5213%2C1103.4978%2C1103.1393%2C1103.1590&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "An Improvement to the Number Field Sieve"}, "summary": "We improve the \"sieve\" part of the number field sieve used in factoring\ninteger and computing discrete logarithm. The runtime of our method is shorter\nthan that of existing methods. Under some reasonable assumptions, we prove that\nit is less than two-thirds of the running time of the algorithm used before\nasymptotically with probability gr", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1103.2320%2C1103.3475%2C1103.3261%2C1103.4329%2C1103.4412%2C1103.5523%2C1103.1764%2C1103.4895%2C1103.3499%2C1103.1182%2C1103.5603%2C1103.5672%2C1103.0381%2C1103.1511%2C1103.0616%2C1103.4754%2C1103.4628%2C1103.6067%2C1103.5136%2C1103.4330%2C1103.4725%2C1103.5576%2C1103.2822%2C1103.0650%2C1103.2905%2C1103.3725%2C1103.2245%2C1103.6138%2C1103.0182%2C1103.0181%2C1103.3624%2C1103.0428%2C1103.4812%2C1103.4344%2C1103.2937%2C1103.4829%2C1103.0570%2C1103.0993%2C1103.3825%2C1103.5091%2C1103.5950%2C1103.3332%2C1103.5882%2C1103.0644%2C1103.0825%2C1103.5031%2C1103.2552%2C1103.1191%2C1103.0502%2C1103.3549%2C1103.3338%2C1103.0366%2C1103.1838%2C1103.1124%2C1103.4659%2C1103.4776%2C1103.3099%2C1103.3607%2C1103.1950%2C1103.5872%2C1103.0610%2C1103.2415%2C1103.6050%2C1103.0974%2C1103.5999%2C1103.5783%2C1103.2863%2C1103.3216%2C1103.0575%2C1103.4080%2C1103.2419%2C1103.1493%2C1103.3409%2C1103.5186%2C1103.2075%2C1103.4321%2C1103.4876%2C1103.3223%2C1103.6212%2C1103.4432%2C1103.1996%2C1103.1554%2C1103.2184%2C1103.0595%2C1103.1448%2C1103.5218%2C1103.4794%2C1103.3809%2C1103.2987%2C1103.5423%2C1103.4068%2C1103.1661%2C1103.3506%2C1103.4509%2C1103.0871%2C1103.4051%2C1103.6021%2C1103.5213%2C1103.4978%2C1103.1393%2C1103.1590&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We improve the \"sieve\" part of the number field sieve used in factoring\ninteger and computing discrete logarithm. The runtime of our method is shorter\nthan that of existing methods. Under some reasonable assumptions, we prove that\nit is less than two-thirds of the running time of the algorithm used before\nasymptotically with probability gr"}, "authors": ["Qizhi Zhang"], "author_detail": {"name": "Qizhi Zhang"}, "author": "Qizhi Zhang", "arxiv_comment": "9 pages", "links": [{"href": "http://arxiv.org/abs/1103.1493v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1103.1493v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "math.NT", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "math.NT", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.CC", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "11Y05, 11Y16", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1103.1493v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1103.1493v1", "journal_reference": null, "doi": null, "fulltext": "arXiv:1103.1493v1 [math.NT] 8 Mar 2011\n\nAN IMPROVEMENT TO THE NUMBER FIELD\nSIEVE\nQizhi Zhang\nNovember 10, 2018\nAbstract\nWe improve the \"sieve\" part of the number field sieve used in factoring integer\nand computing discrete logarithm. The runtime of our method is shorter than that\nof existing methods. Under some reasonable assumptions, we prove that it is less\nthan two-thirds of the running time of the algorithm used before asymptotically with\nprobability greater than 0.6.\n\n1\n\nIntroduction\n\nGeneral number field sieve is used in factoring integer or computing the discrete logarithm.\nSee, for example, [1] [2] [3]. There are two time consuming parts mainly in the number field\nsieve. Namely, the part \"sieving\", and the part \"solving the linear equations\". The two parts\nare relatively independent and have the computational complexity in same order. In [4], the\nauthors improved the step \"solving the linear equations\" for discrete logarithm problem. In\nthis paper, we improve the step \"sieve\". Our improvement work for both factoring integer\nand computing the discrete logarithm. The running time of our algorithm is less than the\none in [5] [6] asymptotically. Under some reasonable assumptions, it is less than 23 of the\nrunning time of the algorithm used in [5] [6] asymptotically with probability greater than\n0.6.\nIn section 2, we give the formulation of the problem which we want to solve, and describe\nthe algorithm used before. In section 3, we describe our algorithm. In section 4, we prove\nthat our algorithm is better than the algorithm used before.\n\n2\n\nThe problem and conventional algorithm\n\nLet us consider the following problem:\nProblem 2.1. Let f (x) be a monic polynomial of degree d with integer coefficient that\nbounded by an integer m and K be an algebraic number field isomorphic to Q[x]/(f (x)). Let\n\u03b8 be the image of x in K and N m : K \u00d7 \u2212\u2192 Q\u00d7 be the norm map. Let u be a positive\ninteger. We construct a table T = {T (b, a)}0<b\u2264u,|a|\u2264u of u lines and 2u + 1 cows with\n\u001a\n0\nif (a, b) = 1;\nT (b, a) =\n(a \u2212 bm)N m(a \u2212 b\u03b8) if (a, b) 6= 1.\n1\n\n\fLet y be a positive real number called \"the smooth bound\". For every element in the table,\nwe wish to divide out all of its divisors of the form le for all primes l bounded by y.\nThe most trivial algorithm is the following:\nAlgorithm 1 Sieve\n1: for prime 0 < l \u2264 y, integer |a| \u2264 u, 0 < b \u2264 u, such that T (b, a) 6= 0 do\n2:\nwhile l|T (b, a) do\n3:\nT (b, a) \u2190 T (b, a)/l\n4:\nend while\n5: end for\nThe following improved algorithm is widely used in integer factoring algorithms (see [1],\n[6])or algorithms of solving the discrete logarithm problem (see [2] [3] [5]).\nAlgorithm 2 Sieve\n1: for prime l \u2208 (0, y] do\n2:\n\u01ebl \u2190 m mod l \u2208 {0, 1, * * * , l \u2212 1}\n3:\nEl \u2190 {x \u2208 {0, 1, * * * , l \u2212 1} : f (x) \u2261 0 mod l}\n4: end for\n5: for integer b \u2208 (0, u] do\n6:\nfor prime l \u2208 (0, y], l \u2224 b do\n7:\nfor a \u2208 [\u2212u, u] \u2229 (b\u01ebl + lZ) do\n8:\nwhile l | T (b, a) do\n9:\nT (b, a) \u2190 T (b, a)/l\n10:\nend while\n11:\nend for\n12:\nfor a \u2208 [\u2212u, u] \u2229 (bEl + lZ) do\n13:\nwhile l | T (b, a) do\n14:\nT (b, a) \u2190 T (b, a)/l\n15:\nend while\n16:\nend for\n17:\nend for\n18: end for\nIn Algorithm 2, we do not try to divide all the elements in the table by l more, but\ndivide those divisible by l we know. Then we divide the quotient by l continually as long as\nit is divisible by l. Roughly speaking, for every b, l, we solve the equations\na \u2212 bm \u2261 0\n\nmod l\n\nor N m(a \u2212 b\u03b8) \u2261 0 mod l\n\nof variable a, and then sieve.\n\n3\n\nOur algorithm\n\nThere is unnecessary computing still in algorithm 2. In fact, we can almost know which\nT (b, a) can be divided by l again, after it divided by l first. Roughly speaking, for every b, l,\nwe can almost can solve the equations\na \u2212 bm \u2261 0\n\nmod lk\n\nor N m(a \u2212 b\u03b8) \u2261 0 mod lk\n2\n\n\fof variable a, for any k, and then sieve. Our new algorithm consists of 3 parts.\n(1)\n\nFirst, we divide out all l-power divisors caused by the term (a \u2212 bm): Let \u01ebl be the\nresidue for m module l. We divide T (b, a) by l and write the quotient in T (b, a) for all\n(2)\n(1)\na \u2208 [\u2212u, u] \u2229 (b\u01ebl + lZ). Let \u01ebl be the residue for m module l2 . We divide T (b, a) by l\n(2)\nand write the quotient in T (b, a) for all a \u2208 [\u2212u, u] \u2229 (b\u01ebl + l2 Z). * * *\nSecond, we divide out all the l-power divisors caused by the term N m(a \u2212 b\u03b8), for\nall a, b such that b \u2208 (0, u] is coprime to l, and a mod l is a single root of the equation\n(1)\nN m(a \u2212 b\u03b8) \u2261 0 mod l. By lemma 3.1 below we can do this as follows: Let El \u2282\n{0, 1, * * * l \u2212 1} be the set of single roots of the equation f (x) module l. We can directly\n(1)\ncompute El by solve equation. We divide T (b, a) by l and write the quotient in T (b, a) for\n(1)\n(2)\nall a \u2208 [\u2212u, u] \u2229 (bEl + lZ). Let El \u2282 {0, 1, * * * l2 \u2212 1} be the set of single roots of the\n(2)\n(1)\nequation f (x) module l2 . We can directly compute El from El by Newton's method.\n(2)\nWe divide T (b, a) by l and write the quotient in T (b, a) for all a \u2208 [\u2212u, u] \u2229 (bEl + l2 Z).\n***\nFinally, we divide out all the l-power divisors caused by the term N m(a \u2212 b\u03b8), for all\na, b such that b \u2208 (0, u] is coprime to l, and a mod l is a multiple root of the equation\nN m(a \u2212 b\u03b8) \u2261 0 mod l. By lemma 3.1 and lemma 3.2 below we can do this as follows: Let\n(1)\n\u1ebcl \u2282 {0, 1, * * * l \u2212 1} be the set of multiple roots of the equation f (x) module l, we can\n(1)\ndirectly compute \u1ebcl by solving the equation. We divide T (b, a) by l and write the quotient\n(1)\nin T (b, a) for all a \u2208 [\u2212u, u] \u2229 (b\u1ebcl + lZ). Lemma 3.2 below tells us that whether a root of\nf (x) \u2261 0 mod l can be lifted to a root of f (x) \u2261 0 mod l2 is only dependent on its residue\n(2)\n(1)\nclass module l. Let \u1ebcl be the subset of \u1ebcl whose elements can be lifted to solutions\n(2)\n(1)\nof f (x) \u2261 0 mod l2 . We can compute \u1ebcl by \u266f\u1ebcl 's tests. Then we divide T (b, a) by l\n(2)\nand write the quotient in T (b, a) for all a \u2208 [\u2212u, u] \u2229 (b\u1ebcl + lZ) one after another until\nl \u2224 T (b, a).\nNow we give statements and proofs of lemma3.1 and lemma 3.2 mentioned above.\nLemma 3.1. If l \u2224 b, there is a bijective\n{x \u2208 Z/le Z; f (x) \u2261 0\nx\n\nmod le } \u2212\u2192 {a \u2208 Z/le Z; N m(a \u2212 b\u03b8) \u2261 0\n7\u2192\nbx\n\nmod le }\n\nfor all e > 0. Moreover, in the situation e = 1, the images of simple roots are simple, and\nthe image of multiple roots are multiple.\nProof. It is because\na\na\nN m(a \u2212 b\u03b8) = (\u2212b)d N m( \u2212 \u03b8) = (\u2212b)d f ( )\nb\nb\n\u0004\nLemma 3.2. Let x, y be two integers and f be a polynomial over Z. Assume x \u2261 y mod l\nis a multiple root of f (x) \u2261 0 mod l. Then x mod l2 is a root of f (x) \u2261 0 mod l2 if and\nonly if y mod l2 is a root of f (x) \u2261 0 mod l2 .\nProof. Let y = x + kl where k \u2208 Z. If x mod l2 is a root of f (x) \u2261 0 mod l2 , we have\nf (y) \u2208 f (x) + f \u2032 (x)kl + l2 Z\n3\n\n\fby Taylor expansion. On the other hand, we know f \u2032 (x) \u2261 0 mod l. Therefore\nf (y) \u2208 f (x) + l2 Z\n\u0004\n\n4\n\nComplexity analysis\n\nWe will compare the computational complexity of Algorithm 2 and Algorithm 3 . Considering the practical situation, we make the assumption that y \u2264 Ku for some constant\nK.\nFor (l, b) = 1, e > 0, Let\nAb,s\nl := {|a| \u2264 u; (a, b) = 1, a is a single root of N m(a \u2212 b\u03b8) \u2261 0 mod l}\nAb,m\n:= {|a| \u2264 u; (a, b) = 1, a is a multiple root of N m(a \u2212 b\u03b8) \u2261 0 mod l}\nl\nb,s\ne\nAb,s\nle := {a \u2208 Al ; N m(a \u2212 b\u03b8) \u2261 0 mod l }\nb,m\nb,m\nAle := {a \u2208 Al ; N m(a \u2212 b\u03b8) \u2261 0 mod le }\nAble := {|a| \u2264 u; (a, b) = 1, N m(a \u2212 b\u03b8) \u2261 0 mod le }\nBlbe := {|a| \u2264 u; (a, b) = 1, a \u2212 bm \u2261 0 mod le }\nIn Algorithm 2, the complexity of line 1 \u2013line 4 is an infinitesimal of the complexity of\nline 5\u2013line18 as u \u2192 \u221e. From line 5, the complexity of sieving the elements in the b-th line\nof the table by prime l is\nClb = \u266fBlb\n+\u266fBlb\n+\u266fBlb2\n+\u266fBlb3\n+***\n+\u266fAbl\n+\u266fAbl\n+\u266fAbl2\n+\u266fAbl3\n+***\n= \u266fBlb + \u266fBlb + \u266fBlb2 + \u266fBlb3 + * * *\nb,s\nb,s\nb,s\n+\u266fAb,s\nl + \u266fAl + \u266fAl2 + \u266fAl3 + * * *\nb,m\n+\u266fAb,m\n+ \u266fAb,m\n+ \u266fAb,m\nl\nl\nl2 + \u266fAl3 + * * *\n1\n1\nb\n= \u266fBl (1 + 1 + l + l2 + * * * )\n1\n1\n+\u266fAb,s\nl (1 + 1 + l + l2 + * * * )\nb,m\nb,m\nb,m\n+\u266fAl + \u266fAl + \u266fAb,m\nl2 + \u266fAl3 + * * *\nb,s\n2l\u22121\nb\n= 2l\u22121\nl\u22121 \u266fBl + l\u22121 \u266fAl\nb,m\nb,m\n+2\u266fAl + \u266fAl2 + \u266fAb,m\nl3 + * * *\n\n(T (b, a) \u2190 T (b, a)/l for a \u2208 Blb )\n( try to divide T (b, a) by l for a \u2208 Blb again )\n( try to divide T (b, a) by l for a \u2208 Blb2 )\n( try to divide T (b, a) by l for a \u2208 Blb3 )\n(\n(\n(\n(\n\nTherefore the total complexity of Algorithm 2 is\nP\nP\n(1 + o(1)) integer b\u2208[1,u] prime\n\ntry\ntry\ntry\ntry\n\nto\nto\nto\nto\n\ndivide\ndivide\ndivide\ndivide\n\nb\nl\u2208[2,y],l\u2224b Cl\n\nT (b, a)\nT (b, a)\nT (b, a)\nT (b, a)\n\nby\nby\nby\nby\n\nl\nl\nl\nl\n\nfor\nfor\nfor\nfor\n\na \u2208 Abl )\na \u2208 Abl again)\na \u2208 Abl2 )\na \u2208 Abl3 )\n\nas u \u2192 \u221e\n\nIn the first part of Algorithm 3, the complexity of line 2\u2013line 6 is an infinitesimal of the\n4\n\n\fAlgorithm 3 sieve\n1: (First)\n2: for prime l \u2208 (0, y] do\n3:\nfor e = 1, 2, * * * logl [u(m + 1)] do\n(e)\n4:\n\u01ebl \u2190 m mod le \u2208 {0, 1, * * * , le \u2212 1}\n5:\nend for\n6: end for\n7: for integer b \u2208 (0, u] do\n8:\nfor prime l \u2208 (0, y], l \u2224 b do\n9:\nfor e = 1, 2, * * * logl [u(m + 1)] do\n(e)\n10:\nfor a \u2208 [\u2212u, u] \u2229 (b\u01ebl + le Z) do\n11:\nT (b, a) \u2192 T (b, a)/l\n12:\nend for\n13:\nend for\n14:\nend for\n15: end for\n16: (Second)\n17: for prime l \u2208 (0, y] do\n18:\nfor e = 1, 2, * * * logl [m(d + 1)ud ] do\n(e)\n19:\nEl \u2190 {x = 0, 1, * * * le \u2212 1 : x is a single root of f (x) \u2261 0 mod le }\n20:\nend for\n21: end for\n22: for integer b \u2208 (0, u] do\n23:\nfor prime l \u2208 (0, y], l \u2224 b do\n24:\nfor e = 1, 2, * * * logl [m(d + 1)ud ] do\n(e)\n25:\nfor a \u2208 [\u2212u, u] \u2229 (bEl + le Z) do\n26:\nT (b, a) \u2190 T (b, a)/l\n27:\nend for\n28:\nend for\n29:\nend for\n30: end for\n31: (Finally)\n32: for prime l \u2208 (0, y] do\n(1)\n33:\n\u1ebcl \u2190 {x = 0, 1, * * * l \u2212 1 : x is a multiple root of f (x) \u2261 0 mod l}\n(2)\n(1)\n34:\n\u1ebcl \u2190 {x \u2208 \u1ebcl : f (x) \u2261 0 mod l2 }\n35: end for\n36: for integer b \u2208 (0, u] do\n37:\nfor prime l \u2208 (0, y], l \u2224 b do\n(1)\n38:\nfor a \u2208 [\u2212u, u] \u2229 (b\u1ebcl + lZ) do\n39:\nT (b, a) \u2190 T (b, a)/l\n40:\nend for\n(2)\n41:\nfor a \u2208 [\u2212u, u] \u2229 (b\u1ebcl + lZ) do\n42:\nwhile l | T (b, a) do\n43:\nT (b, a) \u2190 T (b, a)/l\n44:\nend while\n45:\nend for\n46:\nend for\n47: end for\n\n5\n\n\fcomplexity of line 7\u2013line 15 as u \u2192 \u221e. The latter is\n=\n=\n\n\u266fBlb + \u266fBlb2 + \u266fBlb3 + * * *\n\u266fBlb (1 + 1l + l12 )\nl\nb\nl\u22121 \u266fBl\n\nThe complexity of line 17\u2013line 21 is an infinitesimal of the complexity of line 22\u2013line 30 as\nu \u2192 \u221e. The latter is\nb,s\nb,s\n\u266fAb,s\nl + \u266fAl2 + \u266fAl3 + * * *\nb,s\n= \u266fAl (1 + 1l + l12 )\nl\n\u266fAb,s\n= l\u22121\nl\nThe complexity of line 32\u2013line 35 is an infinitesimal of the complexity of line 36\u2013line 47 as\nu \u2192 \u221e. The latter is\nb,m\n\u266fAb,m\n+ \u266fAb,m\nl\nl2 + \u266fAl3 + * * *\nTherefore the total complexity of Algorithm 3 is\nX\nX\n(1 + o(1))\nDlb\ninteger b\u2208[1,u] prime l\u2208[2,y],l\u2224b\nwhere\nDlb =\n\nas u \u2192 \u221e,\n\nl\nl\nb,m\n\u266fB b +\n\u266fAb,s + \u266fAb,m\n+ \u266fAb,m\nl\nl2 + \u266fAl3 + * * *\nl\u22121 l\nl\u22121 l\n\nIt is easy to see that the complexity of Algorithm 3 is less than the complexity of\nAlgorithm 2 gradually. Moreover, if for any (l, b) = 1, we have \u266fAb,m\nl2 = 0 and then we have\nDlb < 32 Clb , because\n2\n2l\u22121\nl\nb\nb\nfor any (l, b) = 1\nl\u22121 \u266fBl \u2264 3 \u00d7 l\u22121 \u266fBl\nb,s\nb,s\nl\n2\n2l\u22121\n\u266fA\n\u2264\n\u00d7\n\u266fA\nfor any (l, b) = 1\nl\nl\nl\u22121\n3\nl\u22121\nb,m\nb,m\n2\n\u266fAl < 3 \u00d7 2\u266fAl\nfor any (l, b) = 1\n\u266fAb,m\n=\n0\nfor\nany\n(l,\nb) = 1 and all e > 1\ne\nl\n\nTherefore we get\nProposition 4.1. Let K > 0 be a constant. Let u \u2192 \u221e and y < Ku. Then the complexity\nof Algorithm 3 is less than the complexity of Algorithm 2 asymptotically. Moreover, if for\nany (l, b) = 1 we have \u266fAb,m\n= 0, then the complexity of Algorithm 3 is less than 32 of the\nl2\ncomplexity of Algorithm 2 asymptotically.\n\u0004\nThe following proposition tolls us that the condition \"for any (b, l) = 1, \u266fAb,m\n= 0\" has\nl2\nmuch chance to be realized.\nProposition 4.2. Suppose f (x) is a random polynomial of degree d over Z such that f (x)\nmod l2 is uniform distribution on {h(x) \u2208 Z/l2 Z[x]; deg h \u2264 d} for all prime l \u2264 y, and\n{Rl = \u03c6}prime l\u2264y are independent random events, where Rl := {x \u2208 Z/l2 Z; f (x) \u2261 0\nmod l2 , x is a multiple root of f (x) \u2261 0 mod l} for any prime l \u2264 y. Then the probability\nof event (\u266fAb,m\nl2 = 0, for any b \u2208 (0, u], prime l \u2264 y, s.t (l, b) = 1) is greater than 0.6.\nProof. For any prime l, we have\n=\n\u2264\n\nP (\u266fRl 6= 0)\nP (\u2203 i = 0, 1, * * * l \u2212 1,\nPl\u22121\ni=0 P (i \u2208 Rl )\n\ns.t. i \u2208 Rl ) (lemma 3.2)\n\n6\n\n\fFor any i = 0, 1, * * * l \u2212 1, the asuumption that f (x) mod l2 is uniform distribution on\n{h(x) \u2208 Z/l2 Z[x]; deg h \u2264 d} and lemma 4.3 below show\n1\nl3\ni.e. P (i \u2208 Rl ) = l13 . Hence P (\u266fRl 6= 0) \u2264 l12 . The assumption that {Rl = \u03c6}prime\nindependent random events implies\nP\nP ( prime l\u2264y \u266fRl = 0)\nQ\n=\nP (\u266fRl = 0)\nQprime l\u2264y\n=\n(1\n\u2212 l12 )\nQprime l\u2264y\n1\n>\nl: prime (1 \u2212 l2 )\n= 1/\u03b6(2) > 0.6,\nP (f (i) \u2261 0\n\nmod l2 ,\n\nf \u2032 (i) \u2261 0\n\nmod l) =\n\nl\u2264y\n\nare\n\nwhere \u03b6(s) is the Riemann's Zeta function.\nLet Rlb := {a \u2208 Z/l2 Z; N m(a \u2212 b\u03b8) \u2261 0 mod l2 , a is a multiple root of N m(a \u2212 b\u03b8) \u2261 0\nmod l}. From lemma 3.1, we know\n\u266fRlb = \u266fRl\n\nfor all (b, l) = 1\n\nTherefore\n\u2265\n=\n\nP (\u266fAb,m\nl2 = 0, for any b \u2208 (0, u], prime l \u2264 y, s.t (l, b) = 1)\nP (\u266fRlb = 0, for any b \u2208 (0, u], prime l \u2264 y, s.t (l, b) = 1)\nP (\u266fRl = 0, for any prime l \u2264 y) > 0.6\n\u0004\n\nNow we give the statement and proof of lemma 4.3 mentioned above.\nLemma 4.3. Let l be a prime and d be a positive integer. For any i \u2208 Z/l2 Z, we have\nP (h(i) \u2261 0\n\nmod l2 , h\u2032 (i) \u2261 0\n\nmod l | h(x) \u2208 Z/l2 Z[x], deg h = d, monic) =\n\n1\nl3\n\nProof.Consider the surjective homomorphism of abelian group\n{h(x) \u2208 Z/l2 Z[x]; deg h \u2264 d} \u2212\u2192 Z/l2 Z \u2295 Z/lZ\nh(x)\n7\u2192 (h(i) mod l2 , h\u2032 (i) mod l).\nWe have\nP (h(i) \u2261 0\n\nmod l2 , h\u2032 (i) \u2261 0\n\nmod l | h(x) \u2208 Z/l2 Z[x], deg h \u2264 d) =\n\n1\n.\nl3\n\nSimilarly, we have\nP (h(i) \u2261 0 mod l2 , h\u2032 (i) \u2261 0 mod l | h(x) \u2208 Z/l2 Z[x], deg h \u2264 d \u2212 1) =\nLet\nH := {h \u2208 Z/l2 Z[x]; deg f \u2264 d}\nH 0 := {h \u2208 H; h(i) \u2261 0 mod l2 , h\u2032 (i) \u2261 0 mod l}\nHlZ := {h \u2208 H; the leading coefficient of h is in lZ}\n0\nHlZ\n:= H 0 \u2229 HlZ\nHc := {h \u2208 H; the leading coefficient of h is c} for any c \u2208 Z/l2 Z\nHc0 := Hc \u2229 H 0 for any c \u2208 Z/l2 Z\n7\n\n1\n.\nl3\n\n\fIt is easy to see that\nH0 = {h \u2208 Z/l2 Z[x]; deg g \u2264 d \u2212 1}\nH00 = {h \u2208 H0 ; h(i) \u2261 0 mod l2 , h\u2032 (i) \u2261 0 mod l}\nHence, we have\nP (h \u2208 H00 | h \u2208 H0 ) = P (h \u2208 H 0 | h \u2208 H) =\n\n1\nl3\n\nLet us consider the commutative diagram of abelian groups\n0\n\n/ H0\n\u007f _lZ\n\n/ H\u007f 0\n_\n\n/ Z/l2 Z\n\n0\n\n\u000f\n/ HlZ\n\n\u000f\n/H\n\n\u000f\n/ Z/l2 Z\n\n/0\n\nid\n\n/0\n\nwhere the map from H to Z/l2 Z is defined by h 7\u2192 ( the leading coefficient of h). The\nvertical map in the right side is an identity, hence we have\n0\nP (h \u2208 HlZ\n| h \u2208 HlZ ) = P (h \u2208 H 0 | h \u2208 H) =\n\n1\nl3\n\nOn the other hand,\n=\n=\n=\n=\nHence we have\n\nP (h \u2208 H 0 | h \u2208 HlZ )\nPl\u22121 lZ\n0\nc=0 P (h \u2208 HlZ | h \u2208 Hcl )P (h \u2208 Hcl | h \u2208 HlZ )\nPl\u22121\n0\ncl )P (h \u2208 Hcl | h \u2208 HlZ )\nc=0 P (h \u2208 Hcl | h \u2208 H\nP\nl\u22121\n[P (h \u2208 H00 | h \u2208 H0 ) + c=1 ] \u00d7 1l\nP\nl\u22121\n1 1\n0\nc=1 P (h \u2208 Hcl | h \u2208 Hcl )]\nl [ l3 +\nl\u22121\nX\n\n0\nP (h \u2208 Hcl\n| h \u2208 Hcl ) =\n\nc=1\n\nl\u22121\nl3\n\nFor any c \u2208 (Z/l2 Z)\u00d7 , we have a commutative diagram of sets\nH\u007f 10\n_\n\u000f\nH1\n\n\u223c\n\n\u223c\n\n/ H0\n\u007f _c\n\u000f\n/ Hc\n\nwhere the horizontal map is defined by h 7\u2192 ch. Hence we have\nP (h \u2208 H10 | h \u2208 H1 ) = P (h \u2208 Hc0 | h \u2208 Hc )\n\nfor any c \u2208 (Z/l2 Z)\u00d7\n\nTherefore\n1\nl3\n\n=\n=\n=\n=\n=\n\n0\nP\nP(h \u2208 H | h \u2208 H)0\nP (h \u2208 H | h \u2208 Hc )P (h \u2208 Hc | H)\nPc\u2208Z/l2 Z\n0\nP\n2\nc\u2208Z/l Z (h \u2208 Hc | h \u2208 Hc )P (Hc | H)\nP\nPl\u22121\n0\n[P (h \u2208 H00 | h \u2208 H0 ) + c=1 P (h \u2208 Hcl\n| h \u2208 Hcl ) + c\u2208(Z/l2 Z)\u00d7 P (h \u2208 Hc0 | h \u2208 Hc )] \u00d7\n1\n2\n0\n[ l13 + l\u22121\nl3 + (l \u2212 l)P (h \u2208 H1 | h \u2208 H1 )] \u00d7 l2\n\n8\n\n1\nl2\n\n\fHence we have\nP (h \u2208 H10 | h \u2208 H1 ) =\n\n1\nl3\n\u0004\n\nFinally, from proposition 4.1 and proposition 4.2, we get the main conclusion of this\npaper:\nProposition 4.4. Let K > 0 be a constant. Let u \u2192 \u221e and y < Ku, then the complexity\nof Algorithm 3 is less than the complexity of Algorithm 2 asymptotically. Moreover, suppose\nf (x) is a random polynomial of degree d over Z such that f (x) mod l2 is uniform distribution on {h(x) \u2208 Z/l2 Z[x]; deg h \u2264 d} for all prime l \u2264 y, and {Rl = \u03c6}prime l\u2264y are independent random events, where Rl := {x \u2208 Z/l2 Z; f (x) \u2261 0 mod l2 , x is a multiple root of f (x) \u2261\n0 mod l} for any prime l \u2264 y, then the complexity of Algorithm 3 is less than 23 of the complexity of Algorithm 2 asymptotically with probability greater than 0.6.\n\u0004\nAcknowledgement. I would like to thank professor Takeshi Saito, who gave me much\nvaluable advice.\n\nReferences\n[1] J.P. Buhler, H.W. Lenstra, Jr., C. Pomerance, Factoring Integers with the Number\nField Sieve, in A.K. Lenstra and H.W. Lenstra, Jr. (eds), The Development of the\nNumber Field Sieve, Lecture Notes in Mathematics 1554, Springer-Verlag, New York,\n1993, pp. 50-94\n[2] D. M. Gordon, \"Discrete logarithms in GF(p) using the number field sieve\", SIAM J.\nDiscrete Math. 6:1 (1993), 124-138\n[3] O. Schirokauer, Discrete logarithms and local units. Philos. Trans. Roy. Soc. London\nSer. A, vol. 345, The Royal Society, London, 1993, pp. 409-423.\n[4] A. Joux, R. Lercier, Improvements to the general number field sieve for discrete logarithms in prime fields. A comparison with the Gaussian integer method. Math. Comp.\n72 (2003), no. 242, 953967 (electronic).\n[5] O. Schirokauer, The impact of the number field sieve on the discrete logarithm problem\nin finite fields. Algorithmic number theory: lattices, number fields, curves and cryptography, 397420, Math. Sci. Res. Inst. Publ., 44, Cambridge Univ. Press, Cambridge,\n2008.\n[6] P. Stevenhagen, The number field sieve. Algorithmic number theory: lattices, number\nfields, curves and cryptography, 83100, Math. Sci. Res. Inst. Publ., 44, Cambridge Univ.\nPress, Cambridge, 2008.\n\n9\n\n\f"}