{"id": "http://arxiv.org/abs/1111.1768v1", "guidislink": true, "updated": "2011-11-07T23:54:06Z", "updated_parsed": [2011, 11, 7, 23, 54, 6, 0, 311, 0], "published": "2011-11-07T23:54:06Z", "published_parsed": [2011, 11, 7, 23, 54, 6, 0, 311, 0], "title": "Architecture and Design of Medical Processor Units for Medical Networks", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1111.1595%2C1111.3864%2C1111.5685%2C1111.2078%2C1111.2783%2C1111.7204%2C1111.5724%2C1111.1900%2C1111.0194%2C1111.3319%2C1111.5203%2C1111.0981%2C1111.4287%2C1111.6643%2C1111.2515%2C1111.1504%2C1111.3294%2C1111.1537%2C1111.5707%2C1111.5464%2C1111.2204%2C1111.1298%2C1111.6158%2C1111.7152%2C1111.3308%2C1111.1915%2C1111.3974%2C1111.2123%2C1111.2517%2C1111.6055%2C1111.1151%2C1111.1115%2C1111.6124%2C1111.1812%2C1111.7290%2C1111.1582%2C1111.6821%2C1111.7034%2C1111.3178%2C1111.3555%2C1111.1791%2C1111.3431%2C1111.6707%2C1111.4996%2C1111.3511%2C1111.1922%2C1111.5115%2C1111.7083%2C1111.7208%2C1111.0868%2C1111.0077%2C1111.0222%2C1111.6727%2C1111.3586%2C1111.7103%2C1111.1260%2C1111.6128%2C1111.4147%2C1111.0428%2C1111.3116%2C1111.0805%2C1111.2742%2C1111.5507%2C1111.6986%2C1111.2488%2C1111.6920%2C1111.6507%2C1111.6893%2C1111.2216%2C1111.0692%2C1111.1565%2C1111.1912%2C1111.1751%2C1111.7165%2C1111.0059%2C1111.4763%2C1111.3218%2C1111.6338%2C1111.5086%2C1111.2858%2C1111.6557%2C1111.2580%2C1111.6826%2C1111.3143%2C1111.3473%2C1111.3787%2C1111.4052%2C1111.5969%2C1111.1059%2C1111.0099%2C1111.1080%2C1111.3986%2C1111.1768%2C1111.1046%2C1111.5740%2C1111.4662%2C1111.4748%2C1111.2846%2C1111.2053%2C1111.6406%2C1111.3068&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Architecture and Design of Medical Processor Units for Medical Networks"}, "summary": "This paper introduces analogical and deductive methodologies for the design\nmedical processor units (MPUs). From the study of evolution of numerous earlier\nprocessors, we derive the basis for the architecture of MPUs. These specialized\nprocessors perform unique medical functions encoded as medical operational\ncodes (mopcs). From a pragmatic perspective, MPUs function very close to CPUs.\nBoth processors have unique operation codes that command the hardware to\nperform a distinct chain of subprocesses upon operands and generate a specific\nresult unique to the opcode and the operand(s). In medical environments, MPU\ndecodes the mopcs and executes a series of medical sub-processes and sends out\nsecondary commands to the medical machine. Whereas operands in a typical\ncomputer system are numerical and logical entities, the operands in medical\nmachine are objects such as such as patients, blood samples, tissues, operating\nrooms, medical staff, medical bills, patient payments, etc. We follow the\nfunctional overlap between the two processes and evolve the design of medical\ncomputer systems and networks.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1111.1595%2C1111.3864%2C1111.5685%2C1111.2078%2C1111.2783%2C1111.7204%2C1111.5724%2C1111.1900%2C1111.0194%2C1111.3319%2C1111.5203%2C1111.0981%2C1111.4287%2C1111.6643%2C1111.2515%2C1111.1504%2C1111.3294%2C1111.1537%2C1111.5707%2C1111.5464%2C1111.2204%2C1111.1298%2C1111.6158%2C1111.7152%2C1111.3308%2C1111.1915%2C1111.3974%2C1111.2123%2C1111.2517%2C1111.6055%2C1111.1151%2C1111.1115%2C1111.6124%2C1111.1812%2C1111.7290%2C1111.1582%2C1111.6821%2C1111.7034%2C1111.3178%2C1111.3555%2C1111.1791%2C1111.3431%2C1111.6707%2C1111.4996%2C1111.3511%2C1111.1922%2C1111.5115%2C1111.7083%2C1111.7208%2C1111.0868%2C1111.0077%2C1111.0222%2C1111.6727%2C1111.3586%2C1111.7103%2C1111.1260%2C1111.6128%2C1111.4147%2C1111.0428%2C1111.3116%2C1111.0805%2C1111.2742%2C1111.5507%2C1111.6986%2C1111.2488%2C1111.6920%2C1111.6507%2C1111.6893%2C1111.2216%2C1111.0692%2C1111.1565%2C1111.1912%2C1111.1751%2C1111.7165%2C1111.0059%2C1111.4763%2C1111.3218%2C1111.6338%2C1111.5086%2C1111.2858%2C1111.6557%2C1111.2580%2C1111.6826%2C1111.3143%2C1111.3473%2C1111.3787%2C1111.4052%2C1111.5969%2C1111.1059%2C1111.0099%2C1111.1080%2C1111.3986%2C1111.1768%2C1111.1046%2C1111.5740%2C1111.4662%2C1111.4748%2C1111.2846%2C1111.2053%2C1111.6406%2C1111.3068&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "This paper introduces analogical and deductive methodologies for the design\nmedical processor units (MPUs). From the study of evolution of numerous earlier\nprocessors, we derive the basis for the architecture of MPUs. These specialized\nprocessors perform unique medical functions encoded as medical operational\ncodes (mopcs). From a pragmatic perspective, MPUs function very close to CPUs.\nBoth processors have unique operation codes that command the hardware to\nperform a distinct chain of subprocesses upon operands and generate a specific\nresult unique to the opcode and the operand(s). In medical environments, MPU\ndecodes the mopcs and executes a series of medical sub-processes and sends out\nsecondary commands to the medical machine. Whereas operands in a typical\ncomputer system are numerical and logical entities, the operands in medical\nmachine are objects such as such as patients, blood samples, tissues, operating\nrooms, medical staff, medical bills, patient payments, etc. We follow the\nfunctional overlap between the two processes and evolve the design of medical\ncomputer systems and networks."}, "authors": ["Syed V. Ahamed", "Syed Shawon M. Rahman"], "author_detail": {"name": "Syed Shawon M. Rahman"}, "author": "Syed Shawon M. Rahman", "links": [{"title": "doi", "href": "http://dx.doi.org/10.5121/ijcnc.2010.2602", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/1111.1768v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1111.1768v1", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "17 pages", "arxiv_primary_category": {"term": "cs.OH", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.OH", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1111.1768v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1111.1768v1", "journal_reference": "International journal of Computer Networks & Communications\n  (IJCNC),Vol.2, No.6, November 2010, 13-29", "doi": "10.5121/ijcnc.2010.2602", "fulltext": "International Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nARCHITECTURE AND DESIGN OF MEDICAL\nPROCESSOR UNITS FOR MEDICAL NETWORKS\nSyed V. Ahamed and Syed (Shawon) M. Rahman\nDepartment of Computer Science and Engineering, University of Hawaii-Hilo\nHilo, HI 96720, USA\nEmail: profahamed@gmail.com and SRahman@hawaii.edu\n\nABSTRACT\nThis paper1 introduces analogical and deductive methodologies for the design medical processor units\n(MPUs). From the study of evolution of numerous earlier processors, we derive the basis for the\narchitecture of MPUs. These specialized processors perform unique medical functions encoded as medical\noperational codes (mopcs). From a pragmatic perspective, MPUs function very close to CPUs. Both\nprocessors have unique operation codes that command the hardware to perform a distinct chain of subprocesses upon operands and generate a specific result unique to the opcode and the operand(s). In\nmedical environments, MPU decodes the mopcs and executes a series of medical sub-processes and sends\nout secondary commands to the medical machine. Whereas operands in a typical computer system are\nnumerical and logical entities, the operands in medical machine are objects such as such as patients, blood\nsamples, tissues, operating rooms, medical staff, medical bills, patient payments, etc. We follow the\nfunctional overlap between the two processes and evolve the design of medical computer systems and\nnetworks.\n\nKEYWORDS\nMedical processor unit, MPU, medical knowledge bases, graphical processor units, GPU, intelligent\nmedical networks, object processor unit, OPU, knowledge processor unit, KPU\n\n1. INTRODUCTION\nThe infusion of scientific methodology in the practice of medicine and art of surgery has been a\nslow but steadily gaining momentum. Tools and technology are much more prevalent now in the\ndiagnosis of ailments and curing of chronic conditions now than ever before. The scientific\ndiscoveries and innovation have given the modern doctors a firm rationale over the mere blending\nof skill and experience of the less scientific approaches of medical practitioners of the 1980s and\n1990s. Science is as much a part of modern medicine as aerospace technology was a part of the\naircraft industry during the 1980s. Yet the infusion of science and technology from the National\nAeronautics and Space Agency (NASA) has substantially transformed the design and\nmanufacture of aircraft and the future of the spacecraft industry.\nIn the medical field, the first wave of infusion of science and technology has resulted in superb\ntools. Streamlined procedures and scientific methodologies in the diagnosis of disease and\ndisorder and the subsequent cure of patients is the norm of medical activity. At the current\nsnapshot of time, the infusion has dissipated and the process is now waning into diffusion. In\nperspective, the second wave of infusion that is still to follow is from the major contributions in\nprocessing of information and knowledge. It is slowly and surely replacing processing of numbers\n1\n\nThis work is partially supported by EPSCoR award EPS-0903833 from the National Science Foundation\n(NSF) to the University of Hawaii, USA\nDOI: 10.5121/ijcnc.2010.2602\n\n13\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nand data structures in the computer field. Machines are taking over human functions at an\nunprecedented rate. Learning from human reactions and byelaws of rational behavior, humanistic\nmachines can outperform any unskilled labor force. In these new machines, local reasoning is\ninfused with global wisdom and the immediate outcome is truly beautiful as much as it is socially\nvaluable.\nIn this paper, we take the bold step of blending the steps in processing of knowledge and\ninformation with to the effectiveness and dispersion of global medicinal/surgical practices. The\noutcome should be a blend of efficiency and accuracy of digital techniques in computers and\nnetworks with the strides of scientific discoveries and innovations in the field of modern\nmedicine. Further, in this paper, the basis of modern medicine is assumed to be in some\ndocumented form of computer and network accessible (textual, graphical, accounting,\nobservational, statistical, etc.) files. Opinions and experience of the professionals are summarized\nas derived expert system knowledge bases and/or computer driven AI generated files that can be\nused as reference nodes in the deduction and derivation of new hypothesis, conclusion or\ninference. Information and knowledge processing techniques merge and process the current local\nconditions and constraints with those observed in the past and documented in the medical\nknowledge bases around the globe. Two major effects become evident.\nFirst, the medical machines provide sound and documented sets of recommended procedural\nsteps to solve the local problem dealing with diagnosis and/or cure. The confidence in each of the\nderived inference is numerically displayed for the local team of specialists to verify and modify\n(if necessary) thus forcing the practitioners to keep abreast of global knowledge. The machine\nprocess approaches the methodology now in vague for forensics studies and crackdown for the\nbreach of computer security.\nSecond, the medical machine tracks the difference between its prediction based on prior historical\nfacts in the knowledge bases and the observed (or preferred) outcome or treatment. The AI based\nlearning algorithms validate the cause-effect relationship in the current/local problem and logs the\nfindings for more human (humanistic) consideration.\nBoth actions of the medical machine make its functions complimentary and subservient to the\nsurveillance of human judgment. Major modification to the medical and procedural knowledge\nbases is completed only under the consensus and validation of global medical experts. Such\npractices are frequently undertaken in most national and international knowledge bases in any\ngiven discipline (such as economics, finance, banking, economics, or any expertise) only if there\nis agreement and consensus among the experts in that particular discipline.\n\n1.1 MEDICAL KNOWLEDGE BASES\nThe contributions to systematic accumulation of knowledge pertaining to medical sciences have\nbeen scattered and diversified. In a majority of cases the activity has been commercial rather than\nacademic and scholarly. The computational and network tools and techniques have been\nobscured by the clout of profiteering from the sale of data to specialized medical teams and\ndesperate patients. As late as 2010, only a few nonprofit medical knowledge bases have emerged.\nThe authenticity and accuracy of the contents is by entry rather than by reason and scientific\naccountability. Three key components to deploy knowledge processing techniques in global\nmedical networks are (a) the Internet accessible knowledge bases that hold, share and validate the\ncurrent medical knowledge and procedures in every well-defined area of expertise and\ninformation, (b) highly efficient MPUs to analyze and resolve local medical issues and distribute\n14\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nthe procedural commands to the medical computers, their peripherals, networks and knowledge\nbases and (c) highly evolved and efficient backbone and global networks. Unified, integrated and\nstreamlined, these three components constitute the next generation medical networks\nThe NIH funded research at Stanford University2 has yielded noteworthy contributions such as\nInternist-I [14] as far back as 1982. The ensuing GUIDON (an intelligent computer aided\ninstruction tool)[8], and MYCIN[16], etc. lack the knowledge about structure and the strategy in\nthe diagnosis and the rationality for the expert system based recommendations for procedures\nand/or therapy. Initially, it was used for determining the recommendations for bacteremia and\nmeningitis. MYCIN has a non psychological, expert-system, probability driven knowledge base\nprimarily used for referencing rather than for analysis, derivation, and enhancement of medical\nknowledge. The heuristic approach has serious limitation for the creative deployment of medical\nknowledge for the particular ailment of a particular patient. Patients are unique and highly\nindividualistic; only medical knowledge is generic and the role of the medical machine is to\ncompliment the generic knowledge with unique circumstance and individuality of the patient.\nConversely, the medical machine actively deploys the scientific reasoning and methodology to\nsuit the unique needs of patient. The medical team monitors the reason and logic that the medical\nmachine is currently using to fine tune the outcome to be (pretty much) flawless and meets the\ndesired goal within a present level of confidence. Surely, it may not circumvent the inevitable,\nbut it will leave no stone unturned (in the world wide medical knowledge domain) to delay or\neven bypass the inevitable for long spans of time.\nInitial medical procedural codes, their associated details, ensuing methodology and their\ndatabases were initiated at the City University of New York as far back as 1990 by Krol[12].\nIntegrated medical network (IMN) configurations and their architectures have been studied by\nnumerous other researchers such as Mollah[15] and Kazmi[11]. A novel encoding of the\nprocedural codes in ATM cell was proposed by Lueng [13]. Waraporn introduced graphing of\nsymptoms and deduction ailments and their treatments in the medical field in his 2006\ndissertation[21] and the following publications[5][22].\nThe concept of multidimensional Hamming codes was introduced in 2007[1] [3] to the medical\nfield in order to identify the nearest set of documented symptoms of diagnosed ailments to those\nof the patient. Being programmable these steps facilitate quick, efficient and quantifiable results\nin the diagnosis and then the treatment of the patient condition by matching the personal history\nand data of the patient with those of successfully treated patients. Medical knowledge bases are\nan integral part of the studies by Mollah and Waraporn.\nIn order to comprehensively integrate the artificial intelligence techniques in the Web\nenvironment, Ahamed has extended this methodology[1] over the last few years. Rahman[19] has\nalso documented the most recent finding through 2010. Numerous configurations that utilize the\nintelligent Internet architectures and the national medical expert teams are presented in Section 3.\nThese intelligent medical systems environments, based on Internet access constantly scan the\nactivities in hospitals and medical centers in order to filter out the routine activity and select the\nunusual circumstances to add to the medical knowledge bases around the country or the world.\n\n2\n\nThe long list of contributions from NIH funded Stanford University's scientists is remarkable. In\nparticular, Internist, Mycin, Mycin-II and NeoMycin have transformed the methodologies for merging\nheuristic programming into the practice of medicine.\n15\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nIn a recent IBM patent Basson, et., al.[7], have indicated the crucial use of sensing techniques to\ndevelop a vehicle control system when the driver suffers from potentially debilitating conditions.\nA database including such conditions and symptoms is accessed. The condition is then processed\nby a traditional CPU with network access to central control and attempts to rescue the situation\nand also the medical emergencies for the drive. In an earlier paper [18] highlights the concept of\nan \"intelligent\" garment worn by human beings that monitors the Georgia Tech Wearable\nMotherboard (GTWM) to monitor the vital signs in an unobtrusive manner. The sensing of\nEKGs, temperature, voice recorders, etc., and permits the wearer to transmit data and information\nto external devices. In 2006, Doukas, et al.,[9] have proposed advanced telemedicine services the\ncontext-aware networks.\n\n2. PROCESSOR DESIGNS\n2.1. Platform of Current Processors\nMedical processor unit (MPU) designs are firmly entrenched in the design of processors. central\nprocessor units3, typically, (CPUs), numerical processor units (NPUs), digital signal processors\n(DSPs) and knowledge processor units (KPUs). In the section, we briefly review the architectures\nof the simplest graphical processor unit (based on the vintage von Nuemann CPU) design to the\nmore elaborate knowledge processor unit (KPU) design.\nCentral processor units have been the generic hardware for numeric, arithmetic, and logic\nfunctions since the von Neumann machine [10] in 1945. The architecture of the IAS (Institute of\nAdvanced Study) machine [17] was the first blue print of many more machines that were built for\na decade or so after the basis of the IAS machine was well received by the computer\nmanufacturers. The earlier CPU architectures have described in detail [3].\n\n2.2. Display/Graphics Processor Units (DPUs/GPUs)\nThe earlier display devices (DPUs) for cathode ray tube (CRT) technology are obsolete. Cursor\ninput in the CRTs is very outdated. The software was primitive and the display functions and\ncolors needed considerable enhancements. The flat panel technology and the availability of very\nfine granularity and colors options have rendered new venues for machines to carry the visual\nimpact deep in the minds and thoughts of scientists and researchers alike. The impact in every\nscientific and social direction of progress is monumental.\nDuring their introduction, the GPUs served as the intermediate processors between the CPU and\nthe graphic devices. The GPUs were initially built to relieve the CPU from the display functions\nand continue with the application based processing. Earlier designs (e.g., Intel 82786 graphics\ncoprocessor) adapted a separate configuration but the later CPU architectures absorbed the basic\nGPU configurations within the larger VLSI chips that were offering larger capacity,\ndependability, and yield. Typical configuration of a CPU from the 1980s, that could also be\ndeployed as a GPU is shown in Figure 1. The GPUs for movie industry are far more specialized\nand sophisticated.\n\n3\n\nIn the modern days, the number of processors has increased dramatically. It is possible to build a\nprocessor for almost any function or task, ranging from arithmetic functions to automatic robotic responses.\nIn this section we present the trail of only a few pertinent processors that form a basis for the evolution of\nthe MPUs.\n16\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nThe internal bus structure within the GPU is based on the word-length and the instruction set of\nthe graphics/display processor unit. Typically, the older (1980s and early 1990s era) graphics\nprocessors and accelerators (the Intel 80860, i860, 1989) delivered 13 MFLOPS or approximately\nhalf million-vector transformations for graphics applications. The architecture deployed 10 bus\nstructures, integer and floating-point adders and multipliers, 2 cache memories, and numerous\nswitches and multiplexer units. The algorithms for computer graphics functions are highly\noptimized to deliver the most desirable processor power consistent with desired level of visual\nimpact to the viewers based on the application requirements.\n\nExternal\nBus\n64 bit data\n32 bit address\n\nBus Control\nand\nMemory\nSwitch\n64-bit\n\nInteger Processor\n32-bit\n\nInternal Bus -128 bits bit\n\nData Cache\n8 KB\n\nInstruction\nCache\n4 KB\n\nF. P. Control\nand\n16x64 bit\nRegisters\n64-bit\n\nGraphics\nUnit\n\n(+)\nADDER\n\n(*)\nArithmetic LogicMPY/DIV\nUnit\n\nFigure 1 A typical CPU configuration that could be used as a GPU unit form the late 1980 era.\n\nRecent graphics processors are as powerful as the CPUs. In fact, the VLSI technology is the\nsame and some GPUs outperform traditional CPUs for specific applications. Movie making has\ninitiated a whole new era of graphical computer systems. Processors for graphical inputs and\noutputs have specialized requirements. Lapse-time and real-time processing are both prevalent.\nIn real-time applications the GPUs keep pace with the application-based computations. When the\nentire systems are designed for special applications, (such as distance learning, remote surgery,\nMRI, stock market, games, etc.) the response time of the both the two (application oriented, and\ngraphics oriented) subsystems need consideration. The communication capacity is influenced on\nchannel capacity and the three (computation, graphics, and communication) basic design\nparameters influence the accuracy, clarity, and quality of the output displays, movies and\npictures.\n17\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nGraphical user interfaces (GUI) provide the user inputs to applications programs that generate the\nresulting displays. Graphical devices are main output devices for computer to communicate with\nthe users. In certain applications such as computer games and movie making, the perception time\nof the users and viewer becomes crucial. When the computer systems are dedicated to movie\nmaking, the graphics processing systems can become as elaborate and intricate as mainframe\ncomputers. The balance between the processing power and graphics display capability becomes\nan option for most of the designers of standard desktop and laptop computers. In the customized\nsystems, the processing powers are based on the choice of the CPU, GPU processor chips and the\nopcodes that drive them.\nFor intensive graphics application independent graphics processor are deployed. Most modern\ncomputing systems have integrated GPUs built in the overall architecture. GPU computing has\nbecome a specialty in its own right. It is seen as a viable alternative to the traditional\nmicroprocessor based computing in high-performance computing environments. When used in\nconjunction with selected CPU's, an order of magnitude gain in performance can be expected in\ngame physics and in computational biophysics applications. The parallel architecture of the GPU\nis generally used to accelerate the computational performance. These GPUs handle a broad range\nof process intensive complex problems with a visual insight into the nature of changes that occur\nas the computation progresses.\n\n2.3. Object Processor Units (OPUs)\nThe architectural framework of typical object processor units (OPUs) is consistent with the\ntypical representation of CPUs. Design of the object operation code (oopc) plays an important\nrole in the design of OPU and object oriented machine. In an elementary sense, this role is\ncomparable to role of the 8-bit operation code (opc) in the design of IAS machine during the\n1944-45 time-frames. For this (IAS) machine the opc length was 8 bits in the 20-bit instructions,\nand the memory of 4096 word, 40-bit memory corresponds to the address space of 12 binary bits.\nThe design experience of the game-processors and the modern graphical processor units will\nserve as a platform for the design of the OPUs and hardware based object machines.\nThe intermediate generations of machines, (such as IBM 7094, 360-series) provide a rich array of\nguidelines to derive the instruction sets for the OPUs. If a set of object-registers, or an objectcache can be envisioned in the OPU, then the instructions corresponding to Register instructions,\n(R-series), Register-Storage (RS-series), Storage (SS), Immediate operand (I-series), I/O series\ninstructions for OPU can also be designed. The instruction-set will need an expansion to suit the\napplication. It is logical to foresee the need of control-object-memories to replace the control\nmemories of the micro-programmable computers.\nThe instruction set of the OPU is derived from the most frequent object functions such as (a)\nsingle object instructions, (b) multiple object instructions, (c) object to object-memory\ninstructions, (d) internal object-external object instructions, and (e) object-relationship\ninstructions. The separation of logical, numeric, semi-numeric, alphanumeric, and convolutions\nfunctions between objects will also be necessary. Hardware, firmware, or brute-force software\n(compiler power) can accomplish these functions. The need for the next-generation object and\nknowledge machines (discussed in Section III) should provide an economic incentive to develop\nthese architectural improvements beyond the basic OPU configuration shown in Figure 2. The\ndesigns of OPU can be as diversified as the designs of a CPU. The CPU's, I/O device interfaces,\ndifferent memory units, and direct memory access HW units for high-speed data exchange\nbetween main memory units and large secondary memories. Over the decades, numerous CPU\n18\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\narchitectures (single bus, multi-bus, hardwired, micro- and nano-programmed, multiple control\nmemory based systems) have come and gone. Some of micro-programmable and RISC\narchitecture still exist. Efficient and optimal performance from the CPUs need also combined\nSISD, SIMD, MISD, MIMD, [20] and/or pipeline architectures. Combined CPU designs can use\ndifferent clusters of architecture for their sub-functions. Some formats (e.g., array processors,\nmatrix manipulators, etc.) are in active use. Two concepts that have survived many generations\nof CPUs are (a) the algebra of functions (i.e., opcodes) that is well delineated, accepted and\ndocumented and (b) the operands that undergo dynamic changes as the opcode is executed in\nthe CPU(s).\n\nFigure 2. Schematic of a hardwired object processor unit (OPU). Processing n objects with m\n(maximum) attributes generates a n\u00d7m matrix. The common, interactive, and overlapping attributes are\nthus reconfigured to establish primary and secondary relationships between objects. DMA = direct\nmemory access, IDBMS = Intelligent, data, object and attribute base(s) management system(s), KB =\nknowledge base(s). Many variations can be derived.\n19\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nAn architectural consonance exists between CPUs and OPUs. In pursuing the similarities, the five\nvariations (SISD, SIMD, MISD, MIMD, and/or pipeline) design established for CPUs can be\nmapped into five corresponding designs; single process single object (SPSO), single process\nmultiple objects (SPMO), multiple process single object (MPSO), multiple process multiple\nobjects (MPMO), and/or fractional process pipeline respectively [4].\n\n2.4. Knowledge Processor Units (KPUs)\nKnowledge is derived from objects, their nature, attributes, and their interactions. Thus, the\nprocessing capability of knowledge entails processing objects, their attributes and object\ninteractions. Numerous design of KPUs become evident and in fact, they can be derived from the\nvarieties of CPU's initially and then the GPUs that can function as OPUs, and the finally the\nGPU's that can also serve as CPU's. The creativity of the individual KPU designer lies in\nmatching the HW architecture to the application needs. KPU chips being more expensive and\nprocess intensive than CPUs, are unlikely to become as numerous as CPUs that can be\npersonalized to any whim and fancy of the chip manufacturers. The function of the KPUs\ndepends on the capacity of the HW to manipulate or juggle (global and local) objects, based on\ntheir own syntax, and environmental constraints in the semantics of the user objective.\nThe CPU's functionality depends on the capacity to execute stylized operation codes on\narithmetic and logical operands (in highly specialized formats and date structures).\nThe\nconfiguration of a simple KPU operating of object operands is shown in Figure 3. Other\nvariations based on SIMD, MISD, and MIMD4 and pipeline architectures of the CPU have been\nbuilt and such variations can be transfused in the OPU designs. Object processors that lie in\nbetween CPUs and KPUs bring in another degree of freedom because KPUs can deploy OPUs,\nmuch like CPU's can deploy ALUs and NPUs. Sequential, pipeline, and parallel execution of\noperations on objects in KPUs gives rise to at least eight possibilities; SKI-SO processors, SKIMO processors, MKI-SO processors, and MKI-MO processors. Now if SO and MO processors\nhave SOI-SO, SOI-MO and MOI-SO (pipeline structure), and MOI-MO (pipeline and/or multiprocessor structure) have variation embedded within themselves, then at least eight design\nvariations become evident. The SKI-SOI-SO is the simplest to build while the MKI-MOI-MO is\nthe most cumbersome to build. From the first estimate, the HW for the simplest KPUs should be\nan order of magnitude more complex the IBM 360 CPU's (even though these CPUs deployed the\nmicrocode technology).\nKnowledge processing is based on rudimentary yet pragmatic knowledge theory[1]]. Stated\nsimply, human knowledge is clustered around objects and object groups. Such objects can be\nrepresented by data and information structures. Data has numerous representations and\ninformation has several forms of graphs and relationships that bring order and coherence to the\n4\n\nA brief explanation of acronyms for this section is presented. CPU = central processor unit; KPU =\nknowledge processor unit; ALU = Arithmetic logic unit; NPU = numeric processor unit; SIMD = single\ninstruction, multiple data; MISD = multiple instruction, single data; ,MIMD = multiple instruction,\nmultiple data; OPU = object processor unit; SKI-SO = single knowledge instruction-single object; SKI-MO\n= single knowledge instruction- multiple object; MKI-SO = multiple knowledge instruction- single object;\nMKI-MO = multiple knowledge instruction- multiple object; SO processor = single object processor; MO\nprocessors = multiple object processors; SOI-SO = single object instruction-single object; SOI-MO =\nsingle object instruction-multiple objects and MOI-SO = multiple object instruction-single object; MOIMO = multiple object instruction-multiple object SKI-SOI-SO = single knowledge instruction-single object\ninstruction-single object; MKI-MOI-MO multiple knowledge instruction-multiple object instructionmultiple objects.\n20\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\ncollection of objects. Such a superstructure of data (at the leaf level), objects (at the twig level),\nthe object clusters (at the branch level) constitute a tree of knowledge. Specific graphs moreover,\nrelationships that bind information into a cogent and coherent body of knowledge bring\n(precedent, antecedent, and descendant) nodal hierarchy in a visual sense that corresponds to\nreality.\nKnowledge processor units should be able to prune, build and shape, reshape and optimally\nreconfigure knowledge trees, much as CPU's are able to perform the arithmetic (and logic)\nfunctions on numbers and symbols and derive new numbers (and logical entities) from old\nnumbers (and logical symbols).\nIn the design considerations of the CPU, the more elaborate AU functions are known to be\ndecomposable into basic integer and floating-point numeric (add, divide, etc.) operations.\nSimilarly complex logical operations can be reconstituted as modular (AND, OR, EXOR, etc.)\nfunctions. In this vein, we propose that all the most frequently used knowledge functions are\nfeasible for the KPU to perform the basic, elementary, and modular functions on objects.\nKnowledge bearing objects can be arbitrarily complex. Numerous lower level objects can\nconstitute a more elaborate object entity. Like bacterial colonies, knowledge superstructures have\ndynamic life cycles. The order and methodology in the construction and destruction of such\nknowledge superstructures leads to \"laws of knowledge-physics\" in the knowledge domain under\nthe DDS classification 530 to 539 Traditional laws of Boolean algebra and binary arithmetic do\nnot offer sufficient tools for the calculus of the dynamic bodies of knowledge undergoing social\nand technological forces in society. A brand new science of knowledge would be appropriate for\nknowledge (humanistic) machines to perform in the human domain as well as computers perform\nin the numerical domain. Object and knowledge machines would pave the way. If the new laws\nfor the flow, dynamics, velocity, and acceleration of knowledge and knowledge centric objects\n(KCOs) can be based on a set of orderly, systematic, and realistic knowledge operation codes\n(kopcs), then these laws can be written as machine executable routines that operate on the KCOs.\nThis approach is a bold digression from the approach in classical sciences where the new\nconcepts enter the sciences as symbolic and mathematical equations. In the modern society,\ninformation errupts as multimedia WWW streams, rather than as a gracefully expansion of\ncoherent and cogent concepts embedded in knowledge.\nTime for extensive human\ncontemplations is a rare luxury to reset the origin of knowledge. Much as we needed digital data\nscanning systems for DSPs in the past, we need a machine-based common sense, sensing systems\nto separate junk level information [2] from knowledge bearing information. Knowledge filtering\n[1] accomplishes this initial, robust, sensible, and necessary task.\nThe current scenario of science and innovation has given rise to the deployment of technology\nbefore it gets obsolete. To accommodate this acceleration of knowledge, we propose that we\nhave a standard set of basic and modular kopcs [1]. The complex knowledge operations that\nencompass the newest concepts are then assembled from the basic set of internationally accepted\nstandard of kopcs. The proposed representation for the dynamics of knowledge paves the way\nbetween concepts that create new knowledge and the technology that uses such knowledge. The\ninternational telecommunication union (ITU) effort has standardized efficient protocols for the\nseven layer OSI model for communication of data, and then again as the TCP/IP protocol.\n\n21\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nS-1\nFigure 3 Switch S-1, Open for Execution Mode for Knowledge Domain Problem Solving; Closed for\nLearning Mode. The Learning programs 'process' the existing solutions and are able to extract\nObjects, Groups, Relationships, Opcodes, Group Operators, Modules, Strategies, Optimization\nMethodologies from existing solutions and store them in Object and corresponding databases. The\narchitecture permits the KPU to catalog a new object in relation to existing objects and\ngenerate/modify existing pointers to and from new objects.\n\n22\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\n3. DESIGN OF MEDICAL PROCESSORS\n3.1. Medical Processor Units (MPUs)\nMedical processor units (MPUs) have not yet specifically built for medical operation codes\n(mopcs). It is possible and viable that such processor chips will be tailored and geared to medical\nfunctions. A variety of such generic functions can be readily identified. One such medical\noperation code (mopc) is to instruct the MPU to compare bacteria strain (i) with all known\nbacteria (j, j = 1, n) from WWW bacteria banks and identify any settle change patterns. Certain\namount of object processing and pattern recognition procedures will become essential to complete\nthis task. For computer scientists and VLSI designers the modular tasks involved in executing\nthis overall task have already been accomplished in other disciplines (such as face/fingerprintrecognition in criminology or cell shape recognition in medicine). The ordeal is to assemble an\ninterdisciplinary team of scientists.\nOther generic functions are the identification of ailments, patient complaints/cures, most effective\ntreatments, and knowledge processing units to bridge the various knowledge domains. Only a\nprolonged and consistent effort from the medical staff can lead to generic operation codes for\nMPUs that can be focal element of medical computer. For an initial step, the knowledge operation\ncodes (kopcs) should suffice as medical operation codes (mopcs) discussed in this section.\nMedical processors and medical data banks work in tandem for executing a numerous\ninstructions, retrieving/storing, and processing pertinent medical information. Numerous medical\nprocessor hardware units and modules, (including conventional CPUs) coexist in the integrated\nsystem to track the confidence levels of the medical functions, individually and collectively.\nFigure 4 depicts the schematic of a medical processor unit (MPU) derived from the OPU shown\nin Figure 2. Some of the features for automated learning procedure from the KPU shown in\nFigure 3 are included for the medical systems to activate AI procedures and suggest improvised\nprocedures to the medical teams. A typical wide area based medical network with advanced\nlearning features and retrieval capability is shown in Figure 5.\nPatients and their attributes are treated in unison and as one synergy. Patient records are dynamic\nand reflect the most recent state of health and the attributes are updated with a history of changes.\nProcedures are configured from known procedures on similar patient but with slightly different\nattributes. The procedures are mapped against the attributes to ascertain the optimality and\nefficacy of treatments and procedures. The basic laws of medical sciences are not violated during\nadministration of treatments and procedures. Administering n sub-procedures on a patient with m\n(maximum) attributes generates a n\u00d7m matrix. The common, conflicting and overlapping\nattributes are thus reconfigured to establish primary and secondary medical safety rules (diabetes\nand sugar control, alcohol and drugs precaution, etc.) in the realm of medical practice even by a\nmachine. More complex rules are deducible based on medical database (MDB) information for\nany specific condition/patient.\n\n3.2. Medical Computers\nMedical computers constitute a special breed of cluster computers. Both have identifiable\nsupersets of traditional computers for the routine functions. While it is viable to force a cluster\ncomputer to act as full fledge medical computer, it is desirable to build medical computers on a\ndistinctive track of its own medical operation codes (mopcs). The demand for such medical\n\n23\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\ncomputers is likely to expand and grow like the specialized air borne computers for the aviation\nindustry.\n\nFigure 4. Architecture of a medical processor unit (MPU). DMA = direct memory access,\nDBMS = Data, procedure, patient and/or attribute base(s) management system(s), KB =\nknowledge base(s).\n\nPatient databases, physician access points, patient access points, and service facilities are\nconnected to the medical data banks and medical processor via several buses. In an alternative\nintegrated medical computer system, numerous processors are included with their own memories\nand modules and are linked together to establish a processor net unit. Such systems are amenable\nto hospital-campus settings, where several buildings comprise the hospital, or where several\nhospitals are interlinked over local area networks.\n\n24\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\n3.3 Intelligent Medical Networks\nIn the intelligent and integrated medical facilities, numerous MPUs and knowledge banks are\nlinked via a high-speed backbone network as depicted in Figure 5. Isolated packets of\ninformation arrive at the knowledge banks from numerous medical centers and hospitals.\nOptimal protocol design and packet structure for medical functions needs to be evolved for this\ntype of medical environment, even though the existing TCP/IP protocol will suffice. The\naddressing of the distant knowledge banks is done via a subject matter identifier allocated to the\ndistant knowledge banks. Content and address map of the entire network is housed in specialized\nmedical service \"control point\" that facilitates5 the high-speed backbone network to quickly\naccess the information for real-time or emergency conditions.\nThis identifier of the knowledge bank is consistent with the information stored in that particular\nbank, thus reducing the switching time to these massive information stores. In such systems, the\ninstruction to the knowledge bank is followed by a burst of input data via the packet switching\nnetwork. The maintenance of the medical data bases (MDBs in Figure 5) is provided by expert\nteams who update and track any innovations/changes in the profession. These specialized\nservices are provided by the team of knowledge maintenance systems specialists (see KMS-1 and\nKMS-2 in Figure 5). Maintenance and authenticating the medical knowledge becomes the\nresponsibility of the KMS staff and IT specialists in intelligent medical network (IMS). Patient\nand physician databases are monitored and remain behind fire-walls for data, network and patient\nsecurity. Access to outside medical service providers (MSPs) may be provided by specialized a\nsecure vendor services network or by a secure Internet transactions. Such secure transactions are\nnow carried by banking and financial networks. Much like the designs of MANs and WANs\nintelligent medical networks (IMNs) can be tailored to suit the need of any medical profession,\nany specialty and any community to serve patients and doctors, anywhere, anyplace and anytime.\nEvery sub-procedure is executed via an individual packet command (like the SS7, X.25 packet\ncommands in the backbone network embedded in the intelligent networks). The net result of the\nprocedure is conveyed to the users (or their application programs or APs) by a series of packet\ntransactions. Such transactions between a single intelligent medical system and multiple\nknowledge banks are systematically processed, and the output is accumulated from subprocedures, procedures, and runs. The entire usage of the network-based intelligent medical\nsystems is as orderly and systematic as job processing in distributed computer environments.\nDebugging of this type of intelligent medical systems function becomes easy as the study of\npacket contents of any given procedure.\n\n5\n\nSome of these concepts dealing with service \"control point\" (SCP), service \"management system\" (SMS),\nand network partitioning are borrowed from typical designs of various intelligent networks (US, French,\nJapanese, Swiss, etc.) and now in use by (almost) all communication and mobile networks around the\nworld.\n25\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nFigure 5. Architecture of a WAN based intelligent medical network. A cluster of MPUs shares the overall\ntask of running the medical facilities of any regional area. Existing hospitals and medical centers are\nnetworked to use their facilities optimally and economically. The resource allocation for the most\nexpensive facilities is done by the operating system driving the processor net. Knowledge processing is\nalso done by the processor net, thus sharing its own resources. KMS = knowledge machine(s); MDB =\nmedical data base; MPU = medical processor unit; WAN = wide area network that facilitates resource\nsharing from numerous participating centers and hospitals.\n\n4. CONCLUSIONS\nWe evolve and present the architecture of a medical processor unit (MPU) in this paper. The\nplatform for MPU design is based on the designs of classical graphics processor unit (GPU), the\nobject processor unit (OPU) and the knowledge processor unit (KPU). Such specialized\nprocessors are being pursued by movie makers, games/graphics chip designers and designers of\nintelligent educational, instructional and knowledge based systems. Each of these specialized\n26\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\napplication environment calls for optimality of architectural design and chip layout. In the OPU,\nKPU and MPU architectures presented here, numerous functions specific to the application are all\nbuilt in the processor architecture. However, it is also possible to fragment the most frequently\nused and complex functions into modular arrays of simpler functions and then recombine them at\na systems level.\nWe also provide a basis for building a medical machine (MM) and intelligent medical networks\n(IMNs) by combining the architectures of the MPU with the object memory modules, the switch,\nand the bus configuration(s) for object flow and operational code control signals. The IMN\ncomponents and architectures can be highly customized to the functional and geographical\ndistributions of medical facilities in a campus, region, nation or the globe. In this paper, we have\ndelineated the issues and offered generic methodologies to address and resolve the issues specific\nto the medical environments.\nThe innovations and achievements in network design during the last two decades have made the\ndreams of communication designers a reality now. Looking back, we propose a migration to\nIMNs by (conceptually) replacing the electronic switching systems (AT&T's, ESS, that also\nprocess data and information) with medical machines and by (functionally) replacing the\nmassively parallel processed 32-bit communication processor (3B2) with medical processors. The\nblending of medical, AI and communication processes is always the purgative of the next\ngeneration intelligent medical network designers.\n\nREFERENCES\n[1]. Ahamed, S. V. (2009), Intelligent Computational Framework for Knowledge: Integrated Behavior\nof Machines , Wiley, John & Sons, Incorporated, Hoboken, NJ 2009.\n[2]. Ahamed, S. V. and V. B. Lawrence, Intelligent Broadband Multimedia Networks, Kluwer\nAcademic Publishers, Boston, 1998, also in Springer Verlag 2008\n[3]. Ahamed, S. V. (2007), Intelligent Internet Knowledge Networks: Processing of Wisdom and\nConcepts, Wiley, John & Sons, Incorporated, Hoboken, NJ 2007.\n[4]. Ahamed, S. V. (2003), The architecture of a wisdom machine, Int. J. of Smart Eng. Sys. Design, 5,\n(4): 537\u2013549, 2003.\n[5]. Ahamed, S. V., et al. (2001), Hospital-based integrated medical computer systems for processing\nmedical and patient information using specialized functional modules U.S. Patent 6,272,481 B1\nissued on August 7, 2001.\n[6]. Ahamed, S. V. (1995), \"Architecture for a Computer System used for Processing Knowledge,\" US\nPatent Number 5,465,316, November 7, 1995. Also see, European Patent # 9437848.5\"Knowledge Machine Methods and Apparatus\", European Patent Number 146248, US/05.11.93,\nDenmark, France, Great Britain, Italy. Issue date 29/12/94.\n[7]. Basson, S. H., et al., Medical Applications in Telelmatics, US Patent 7266430, Assignee\nInternational Business Machines, Armonk, NY.\n[8]. Clancey W J, Shortliffe E H, Buchanan B G. (1979), Intelligent computer-aided instruction for\nmedical diagnosis, Proceedings of the Third Annual Symposium on Computer Applications in\nMedical Care, pages 175-183. IEEE, 1979. Also see, Clancey W J., Tutoring rules for guiding a\ncase method dialogue, International Journal of Man-Machine Studies 11:25-49,1979.\n[9]. Doukas, D., et al., (2006), Advanced Telemedicine Services through Context-aware Networks,\nPaper presented at 6th International Networking Conference, (INC2006), July 11-14, 2006,\nPlymouth, England.\n27\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n[10]. Hayes, J. P. (1988), Computer Architecture and Organization, 2 ed., McGraw Hill, New York,\n1988.\n[11]. Kazmi, Tasneem H. (2002). Dissertation: Simulation and Design Studies of Knowledge\nprocessing in Intelligent KnowledgeProcessing Networks, Dissertation, Doctoral Center, City\nUniversity of New York, 2002.\n[12]. Krol, M. (2000), Intelligent Medical Network, Ph.D. Dissertation, City University of New York,\n1996. Also see M. Krol, and D. L. Reich, Development of a Decision Support System to assist\nanesthesiologists in operating room, J. of Med. Sys., 24, 141\u2013146, 2000.\n[13]. Leung, L. (2005), Design and Simulation of International Intelligent Medical Networks,\nDissertation, Doctoral Center, City University of New York, 2005.\n[14]. Miller R A, Pople J E Jr., Myers J D(1982). INRRNIST-I, an experimental computer-based\ndiagnostic consultant for general internal medicine, The New England Journal of Medicine\n307:468476, 1982.\n[15]. Mollah, Nazli (2005), Design and Simulation of International Intelligent Medical Networks,\nPh.D. Dissertation, Doctoral Center, City University of New York, 2005.\n[16]. MYCIN, E. Shortcliffe, (1976): Computer-Based Medical Consultations, American Elsevier,\nNew York, 1976. See also, B. G. Buchanan and E. H. Shortcliffe, Rule-Based Expert System: The\nMycin Experiment at Stanford Heuristic Programming Project, Addison Wesley, Boston, 1984,\nand see, W. Kintsch et al., About NeoMycin, Methods and Tactics in Cognitive Science, Lawrence\nErlbaum, Mahwah, NJ, 1984.\n[17]. Neumann, J. von (1953), First Draft of a Report on the EDVAC, Contract No., W-670-ORD\n4926, Between United States Army Ordnance Department and University of Pennsylvania, Moore\nSchool of Electrical Engineering, June 30, 1945. Also see A. W. Burks, H. H. Goldstine, and J.\nvon Neumann, U. S. Army Report Ordnance Department, 1946. See also G. Estrin, The Electronic\nComputer at the Institute of Advanced Studies, Mathematical Tables and Other Aids to\nComputation, Vol. 7, IAS, Princeton, NJ, pp. 108\u2013114, 1953..\n[18]. Park, S., et al., The Wearable Motherboard: A Flexible Information Infrastructure or Sensate\nLiner for Medical Applications, in Medicine Meets Reality VII (Studies in Health Technology and\nInformatics), Edited by Westwood, J. D., et al., IOS Press, Inc., Also see other books in \"Medicine\nMeets Reality\", series edited by Westwood, J. D., et al., IOS Press\n[19]. Rahman, S. et., al. (2010), Intelligent Network Applications for Medical Systems, Recent Trends\nin Wireless and Mobile Networks, Second International Conference, WiMo 2010, Ankara, Turkey,\nJune 26-28, 2010. Proceedings, DOI 10.1007/978-3-642-14171-3_36, ISBN 978-3-642-14170-6\n(Print) 978-3-642\n[20]. Stone, H. S. et al. (1980), Introduction to Computer Architecture, Computer Science Series,\nScience Research Associates, New York, 1980\n[21]. Waraporn, N. and S. V. Ahamed (2006), Intelligent medical search engine by knowledge\nmachine, Proc. 3rd, Int. Conf. on Inf. Tech.: New Generations, IEEE Computer Society, Los\nAlamitos, CA. 2006. See also Waraporon N. (2006), Intelligent Medical Databases for Global\nAccess, Ph.D. Dissertation at the Graduate Center of the City University of New York, 2006.\n[22]. Waraporn, Narongrit (2007)Results of Real Time Simulation of Medical Knowledge Technology\n(MKT) System for Medical Diagnosis on Distributed Knowledge Nodes. ITNG 2007: 265-270.\n\n28\n\n\fInternational Journal of Computer Networks & Communications (IJCNC) Vol.2, No.6, November 2010\n\nAuthors' Short Biography\nSyed V. Ahamed\nSyed Ahamed is a visiting professor in the Department of Computer\nScience and Engineering at the University of Hawaii, Hilo and a\nProfessor of Medical Informatics, University of Medicine and\nDentistry, Newark, NJ. Dr. Ahamed obtained his Ph.D. from Victoria\nUniversity of Manchester in the United Kingdom. Dr. Ahamed also\nholds the Doctor of Science (D.Sc.) degree from Victoria University of\nManchester as well as an M.B.A. in economics from New York\nUniversity.\nDr. Ahamed, a Fellow of IEEE, has a broad spectrum of teaching and research interests including,\nIntelligent Sensing Systems, Computer Architecture, CPU and KPU Designs, Telecommunications,\nIntelligent Networks, Knowledge Systems, Management Information Systems, and Economics. He has\nreceived many European and US patents and published many books and hundreds of articles.\n\nSyed (Shawon) Rahman\nSyed (Shawon) Rahman is an Assistant Professor in the Department of\nComputer Science & Engineering at the University of Hawaii-Hilo. Dr.\nRahman's research interests include Software Engineering Education,\nData Visualization & Scientific Computation, Information Assurance &\nSecurity, Web Accessibility, and Software Testing & Quality\nAssurance. He has published more than 50 pair-reviewed papers. He is\nan active member of many professional organizations including ACM,\nASEE, ASQ, IEEE, and UPE.\n\n29\n\n\f"}