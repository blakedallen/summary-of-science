{"id": "http://arxiv.org/abs/1105.3023v1", "guidislink": true, "updated": "2011-05-16T07:59:31Z", "updated_parsed": [2011, 5, 16, 7, 59, 31, 0, 136, 0], "published": "2011-05-16T07:59:31Z", "published_parsed": [2011, 5, 16, 7, 59, 31, 0, 136, 0], "title": "An Energy Efficient Protocol for Gateway-Centric Federated Residential\n  Access Networks", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1105.4452%2C1105.3466%2C1105.5280%2C1105.0234%2C1105.3042%2C1105.6374%2C1105.4923%2C1105.0912%2C1105.4623%2C1105.2867%2C1105.1974%2C1105.5175%2C1105.0998%2C1105.1716%2C1105.4034%2C1105.3936%2C1105.5977%2C1105.0225%2C1105.3414%2C1105.5732%2C1105.2315%2C1105.4648%2C1105.0554%2C1105.2249%2C1105.4030%2C1105.5730%2C1105.4228%2C1105.2658%2C1105.1711%2C1105.5486%2C1105.5630%2C1105.4663%2C1105.3761%2C1105.1553%2C1105.1871%2C1105.5270%2C1105.5509%2C1105.1818%2C1105.0104%2C1105.2100%2C1105.4142%2C1105.3468%2C1105.2773%2C1105.5303%2C1105.5934%2C1105.0268%2C1105.5422%2C1105.1130%2C1105.4066%2C1105.0898%2C1105.4977%2C1105.6203%2C1105.6277%2C1105.1051%2C1105.2220%2C1105.1859%2C1105.1283%2C1105.5365%2C1105.4424%2C1105.4408%2C1105.1459%2C1105.2388%2C1105.3120%2C1105.0387%2C1105.6270%2C1105.1736%2C1105.4085%2C1105.3360%2C1105.6164%2C1105.2047%2C1105.1384%2C1105.1252%2C1105.0647%2C1105.3872%2C1105.5522%2C1105.1302%2C1105.2356%2C1105.2590%2C1105.5968%2C1105.3527%2C1105.6018%2C1105.2439%2C1105.3168%2C1105.5090%2C1105.5211%2C1105.5618%2C1105.1187%2C1105.2538%2C1105.3023%2C1105.4399%2C1105.5592%2C1105.3258%2C1105.0453%2C1105.2181%2C1105.5394%2C1105.2818%2C1105.5468%2C1105.4097%2C1105.5763%2C1105.5125%2C1105.5971&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "An Energy Efficient Protocol for Gateway-Centric Federated Residential\n  Access Networks"}, "summary": "The proliferation of overlapping, always-on IEEE 802.11 Access Points (APs)\nin urban areas can cause spectrum sharing conflicts, inefficient bandwidth\nusage and power waste. Cooperation among APs could address these problems (i)\nby allowing under-used devices to hand over their clients to nearby APs and\ntemporarily switch off, (ii) by balancing the load of clients among APs and\nthus offloading congested APs. The federated houses model provides an appealing\nbackdrop to implement cooperation among APs. In this paper, we outline a\nframework that, assuming the presence of a multipurpose gateway with AP\ncapabilities in every household, allows such cooperation through the monitoring\nof local wireless resources and the triggering of offloading requests toward\nother federated gateways. We then present simulation results in realistic\nsettings that provide some insight on the capabilities of our framework.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1105.4452%2C1105.3466%2C1105.5280%2C1105.0234%2C1105.3042%2C1105.6374%2C1105.4923%2C1105.0912%2C1105.4623%2C1105.2867%2C1105.1974%2C1105.5175%2C1105.0998%2C1105.1716%2C1105.4034%2C1105.3936%2C1105.5977%2C1105.0225%2C1105.3414%2C1105.5732%2C1105.2315%2C1105.4648%2C1105.0554%2C1105.2249%2C1105.4030%2C1105.5730%2C1105.4228%2C1105.2658%2C1105.1711%2C1105.5486%2C1105.5630%2C1105.4663%2C1105.3761%2C1105.1553%2C1105.1871%2C1105.5270%2C1105.5509%2C1105.1818%2C1105.0104%2C1105.2100%2C1105.4142%2C1105.3468%2C1105.2773%2C1105.5303%2C1105.5934%2C1105.0268%2C1105.5422%2C1105.1130%2C1105.4066%2C1105.0898%2C1105.4977%2C1105.6203%2C1105.6277%2C1105.1051%2C1105.2220%2C1105.1859%2C1105.1283%2C1105.5365%2C1105.4424%2C1105.4408%2C1105.1459%2C1105.2388%2C1105.3120%2C1105.0387%2C1105.6270%2C1105.1736%2C1105.4085%2C1105.3360%2C1105.6164%2C1105.2047%2C1105.1384%2C1105.1252%2C1105.0647%2C1105.3872%2C1105.5522%2C1105.1302%2C1105.2356%2C1105.2590%2C1105.5968%2C1105.3527%2C1105.6018%2C1105.2439%2C1105.3168%2C1105.5090%2C1105.5211%2C1105.5618%2C1105.1187%2C1105.2538%2C1105.3023%2C1105.4399%2C1105.5592%2C1105.3258%2C1105.0453%2C1105.2181%2C1105.5394%2C1105.2818%2C1105.5468%2C1105.4097%2C1105.5763%2C1105.5125%2C1105.5971&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The proliferation of overlapping, always-on IEEE 802.11 Access Points (APs)\nin urban areas can cause spectrum sharing conflicts, inefficient bandwidth\nusage and power waste. Cooperation among APs could address these problems (i)\nby allowing under-used devices to hand over their clients to nearby APs and\ntemporarily switch off, (ii) by balancing the load of clients among APs and\nthus offloading congested APs. The federated houses model provides an appealing\nbackdrop to implement cooperation among APs. In this paper, we outline a\nframework that, assuming the presence of a multipurpose gateway with AP\ncapabilities in every household, allows such cooperation through the monitoring\nof local wireless resources and the triggering of offloading requests toward\nother federated gateways. We then present simulation results in realistic\nsettings that provide some insight on the capabilities of our framework."}, "authors": ["Claudio Rossi", "Claudio Casetti", "Carla-Fabiana Chiasserini"], "author_detail": {"name": "Carla-Fabiana Chiasserini"}, "author": "Carla-Fabiana Chiasserini", "arxiv_comment": "8 pages, 8 figures", "links": [{"href": "http://arxiv.org/abs/1105.3023v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1105.3023v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.NI", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.NI", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1105.3023v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1105.3023v1", "journal_reference": null, "doi": null, "fulltext": "An Energy Efficient Protocol for Gateway-Centric\nFederated Residential Access Networks\n\narXiv:1105.3023v1 [cs.NI] 16 May 2011\n\nClaudio Rossi, Claudio Casetti, Carla-Fabiana Chiasserini\nPolitecnico di Torino, Italy\nAbstract-The proliferation of overlapping, always-on IEEE\n802.11 Access Points (APs) in urban areas can cause spectrum\nsharing conflicts, inefficient bandwidth usage and power waste.\nCooperation among APs could address these problems (i) by\nallowing under-used devices to hand over their clients to nearby\nAPs and temporarily switch off, (ii) by balancing the load of\nclients among APs and thus offloading congested APs. The\nfederated houses model provides an appealing backdrop to\nimplement cooperation among APs. In this paper, we outline\na framework that, assuming the presence of a multipurpose\ngateway with AP capabilities in every household, allows such\ncooperation through the monitoring of local wireless resources\nand the triggering of offloading requests toward other federated\ngateways. We then present simulation results in realistic settings\nthat provide some insight on the capabilities of our framework.\n\nI. I NTRODUCTION\nThe growing popularity of appliances and consumer devices\nembedding a WiFi interface has led to the proliferation of\nAccess Points (APs) in public areas and private homes alike.\nIn the latter case, however, the deployment usually occurs\nin an uncoordinated fashion, leading to overlapping coverage\nand spectrum conflicts. Additionally, APs in private homes are\nusually underloaded and are left on around the clock, both a\npower waste and an unnecessary increase in electromagnetic\npollution.\nFederated homes, i.e., neighborhoods where network resources are shared and networked devices belonging to different users cooperate, have the potential to solve the above\nproblems by incorporating APs in smart Gateways that handle\nall inward and outward network traffic. Gateways are advanced\nhome devices capable of offering wireless Internet access,\nstorage, and multimedia services including audio and video\nreal-time streaming.\nIn order to optimize the usage of the wireless medium,\nneighboring, federated Gateways with overlapping coverages\nshould identify and optimally relocate the Wireless Stations\n(WSs) among themselves, and, possibly, turn themselves off\nif a subset of Gateways can adequately support the current load\nrequested by the WSs. Also, an underloaded (or temporarily\nswitched off) Gateway should be called upon for help by\nGateways that experience a congested wireless medium, and\nassociate some of their WSs.\nSuch operations require that Gateways have self-load assessment capabilities and run inter-Gateway procedures for\nWS relocation. Load estimation techniques can be classified\nas passive or active. The latter ones require to inject probing\npackets into the network and estimate the traffic load based\n\non the delay experienced by such packets. Probing packets,\nhowever, yield additional overhead, and could have a negative\nimpact on data flows, especially in case of real-time traffic\n[1]. We will therefore focus on passive techniques, which aim\nat estimating the traffic load by observing some meaningful\nmetrics. However, existing passive estimation techniques are\nnot mature to fully support multi-rate WLANs with variable\ntraffic patterns. Metrics based either on the number of associated WSs [2], the channel busy (or, equivalently, idle) time [3],\n[4], or the aggregated BSS throughput [5], are affected by\nthe payload size and the data rate of the transmitted packets.\nIt follows that such metrics may indicate the availability of\nbandwidth when the saturation throughput has been already\nreached, or, conversely, they may detect saturation in presence\nof available bandwidth.\nOther techniques, e.g., [6], either apply only to self estimation of the downlink bandwidth availability or require changes\nin the WSs.\nAs for solutions enabling Gateways to switch themselves\noff, centralized schemes have been proposed in [7], [8]. These\nsolutions, however, are suitable for coverages resulting from\ncontrolled placement of the Gateways, as is the case of big\nenterprises and college campuses, but they are hardly fitting\nfor a residential scenario where each Gateway is independently\nplaced within a household. Other solutions to overcome capacity limitations of single APs have suggested the use of TDMA\ntechniques to let WSs access multiple APs at a time [9],\nrequiring, however, modification in the WSs.\nIn this paper, we address the above issues by defining a\nsolution that applies to a multirate network and to generic\ntraffic scenarios. In particular, we introduce: (i) a metric\nand a procedure that allow the Gateways a self-evaluation\nof their load status; (ii) a metric and a procedure that let a\nGateway gauge the impact of the association of one or more\nWSs relocated from a neighboring Gateway; (iii) a distributed\nprotocol for inter-Gateway communication and WS relocation\nthat refrains from non-standard operations at the WSs, as well\nas non-standard signalling between Gateway and WSs.\nII. P RELIMINARIES\nSystem scenario. We consider M residential units (e.g.,\nhouses or apartments), each of them equipped with a Gateway\n(G1 , . . . , GM ) that offers wireless Internet access through the\n802.11 technology. Adjacent Gateways use different channel\nfrequencies and each Gateway is equipped with two radio\ninterfaces: one for communicating with the WSs in the BSS\n\n\f(i)\n\nPk (j), and Rk (j)1 (k \u2208 N (j)). We will refer to all the above\nmeasurements the Gateway performs for a WS as the WS's\ntraffic profile. Furthermore, the Gateway computes the running\naverage of the data rate, R(j), and of the payload size, P (j),\nover all data frames, carrying either elastic or inelastic traffic,\nthat it successfully sends or receives.\nWe then introduce a fundamental quantity for our bandwidth\nmonitoring algorithm. Let us consider cycle j. At the end of\nthe cycle, the Gateway computes the (aggregate) saturation\nthroughput S(j), as defined in [11], which extends the original\nBianchi's model [12] in presence of errors due to channel\npropagation conditions:\n\ncontrolled by the Gateway, the other for listening to different\nfrequency channels whenever needed.\nThe Gateways are federated, i.e., they can communicate\nand coordinate with each other using an out-of-band channel,\nwhich is their backhaul Internet connection. Note that we do\nnot assume the presence of any central network controller that\nmanages WSs association to the Gateways.\nThe WSs that operate within the generic BSS can be sources\nor destinations of elastic or inelastic traffic flows, i.e, flows that\nuse either TCP or UDP at the transport layer. At the MAC\nlayer, the Gateway and the WSs may transmit frames with\ndifferent payload size and their data rate may vary according\nto the experienced channel propagation conditions.\n\nS(j) =\n\nDepending on the traffic load and on the number of associated WSs within the BSS they control, Gateways are said to be\nin Light, Heavy or Regular status. The Light status corresponds\nto an underloaded BSS: if its WSs could be relocated to other\nBSSs, the Gateway could switch itself off and save energy. The\nHeavy status, instead, characterizes an overloaded BSS, where\nsome WSs should associate to other BSSs so as to let the users\nreceive the desired throughput. A Gateway in Regular status\nneither can switch itself off nor does it need to give some\nof its WSs away, while it might accommodate relocated WSs\nwithin its BSS. In order to let the Gateways assess their status,\nwe assume they carry out traffic measurements as described\nbelow.\n\nN (j)\u03c4 (j)[1 \u2212 \u03c4 (j)]N (j)\u22121 P (j)(1 \u2212 pe (j))\n.\nE[T (j)]\n\n(1)\n\nIn (1), \u03c4 (j) is the probability that a node (either a WS or\nthe Gateway) accesses the medium at a generic time slot\nin cycle j, pe (j) is the filtered average packet error rate,\nand E[T (j)] is the average duration of a time interval in\nwhich an event occurs (namely, an empty slot, a successful\ntransmission, a transmission failed due to channel errors, or\na collision). The expressions of \u03c4 (j) and E[T (j)] can be\nderived following [11] and are reported in the Appendix for\ncompleteness, while pe (j) can be estimated by the Gateway\nbased on the modulations used for the transmissions in the\nj-th cycle, their associated signal-to-noise ratio, and assuming\nindependent bit errors on the channel. Using (1), the Gateway\ncomputes the average per-node throughput under saturation\nconditions, as Sn (j) = S(j)/N (j). Note that Sn (j) represents\nthe saturation throughput for a node with average behavior,\ni.e., a node using a payload size P (j) and a data rate R(j).\n\nAssumptions. A Gateway can access the \"protocol type\"\nfield in the IP packets, and collect statistics on elastic and\ninelastic traffic within its BSS. The Gateway carries out such\nmeasurements over time intervals, named cycles. A cycle is\ndefined as the minimum between a time Tmax and the period\nneeded to let (1) each active WS successfully send at least\none data frame carrying inelastic traffic, and (2) the Gateway\nsuccessfully transmit at least one data frame carrying inelastic\ntraffic to every WS for which it has data to send. The Gateway\nconsiders a WS to be active in cycle j if it successfully receives\nfrom the WS at least one data frame within the time Tmax\nsince the current cycle starting time. Likewise, the Gateway\nis active in cycle j if it has sent at least one frame within the\ncycle. In the following, we denote by C(j) the duration of\ncycle j, by N (j) the set of nodes (WSs and Gateway) that\nwere active in the cycle, and by N (j) the cardinality of N (j).\n\nIII. BANDWIDTH\n\nMONITORING\n\nHere, we first present the algorithm that lets a Gateway\nassess its load status. Then, we describe how a Gateway can reliably evaluate the impact on its BSS of associating additional\nstations that other Gateways would like to relocate. Finally,\nwe present simulation results showing the effectiveness of our\nbandwidth monitoring approach.\nA. Gateway status assessment\nConsider a generic Gateway that at the end of the current\ncycle, say j, wants to gauge the traffic load within the BSS it\ncontrols. To do so, it follows Alg. 1.\nThe idea at the basis of the algorithm is that, due to the perpacket fairness provided by the 802.11a/b/g distributed access\nscheme, any node k \u2208 N (j), such that \u03b7k (j)+\u03bdk (j) \u2264 Sn (j),\ncan transmit all its uplink traffic, both elastic and inelastic (line\n3), while the others reach Sn (j) and then share the remaining\nbandwidth, if any (line 4). As Sn (j) refers to the average node\nbehavior, we weigh the bandwidth in excess of Sn (j) used by\nnode k with R(j)/Rk (j), thus accounting for the actual node\ndata rate (line 4). We also stress that, for each node, only\n\nThen, like the mechanism we described in [10], at each\ncycle j and for each active WS k, the Gateway computes\na running average of the uplink throughput for elastic and\ninelastic traffic of k, denoted by \u03b7k (j) and \u03bdk (j), respectively.\nLikewise, the Gateway computes a running average of its\nown downlink throughput for both elastic and inelastic traffic,\ndenoted by \u03b7G (j) and \u03bdG (j), respectively.\nIn addition, for each frame successfully transmitted by\na WS or by the Gateway itself, the Gateway observes the\npayload size for elastic/inelastic traffic and the used data rates,\n(e)\nand it computes the corresponding running averages: Pk (j),\n\n1 For the data rate, the Gateway stores only one value because automatic\nrate adaptation algorithms do not distinguish between elastic and inelastic\nflows.\n\n2\n\n\fAlgorithm 1 Gateway status assessment\nInput: N (j), S(j), Sn (j), \u03b7k (j), \u03bdk (j)\nOutput: Gateway status\n1:\n2:\n3:\n4:\n5:\n6:\n7:\n8:\n9:\n10:\n11:\n12:\n\nB(j) \u2190 S(j)\nfor k \u2208 N (j) do\nB(j) \u2190 B(j) \u2212 min{\u03bd\n\u001ak (j) + \u03b7k (j), Sn (j)}\n\nB(j) \u2190 B(j) \u2212 max 0, [\u03bdk (j) \u2212 Sn (j)] RR(j)\nk (j)\n\nAlgorithm 2 b-metric evaluation\n(e)\n\nInput: N (j), S(j), Sn (j), R(j), \u03b7k (j), \u03bdk (j), Pk (j),\n(i)\nPk (j), Rk (j)\nOutput: b(j)\n1:\n2:\n\n\u001b\n\n3:\n4:\n\nend for\nif B(j)/S(j) > TL and(N (j) \u2212 1) < NL then\nGateway in Light status\nelse if B(j)/S(j) < TR then\nGateway in Heavy status\nelse\nGateway in Regular status\nend if\n\n5:\n6:\n7:\n8:\n9:\n10:\n11:\n12:\n13:\n\ninelastic traffic exceeding the saturation share is considered;\nelastic traffic above saturation is instead neglected, since it can\nadapt to bandwidth availability.\nAt the end of the procedure, we compare the bandwidth\navailable for inelastic traffic normalized to the saturation\nthroughput, B(j)/S(j), against two different thresholds, as\nfollows. We consider the Gateway to be in Light status if\nB(j)/S(j) > TL and the number of WSs associated to it is\nsmaller than NL , and in Heavy status if B(j)/S(j) < TR .\nThe Gateway is in Regular status otherwise.\n\n14:\n15:\n16:\n\n\u03b2 \u2190 S(j)\nfor k \u2208 N (j) do\n\u03b2 \u2190 \u03b2 \u2212 min{\u03bdk (j) + \u03b7k (j), Sn (j)}\n\u03bd\u0302k (j) \u2190 min{\u03bdk (j), Sn (j)}\n\u03b7\u0302k (j) \u2190 min{\u03b7k (j), Sn (j) \u2212 \u03bd\u0302k (j)}\nend for\nNo \u2190 Sort(k \u2208 N (j) | \u03bdk (j) + \u03b7k (j) > Sn (j), Rk (j))\nb(j) = \u03b2\nwhile \u03b2 > 0 and No 6= \u2205 do\nfor any k \u2208 No and \u03b2 > 0 do\nif \u03bd\u0302k (j) < \u03bd\u001a\nk (j) then\n\u001b\n(i)\nPk (j)R(j)\n\u03b4 \u2190 min C(j)Rk (j) , \u03b2\n\u03bd\u0302k (j) \u2190 \u03bd\u0302k (j) + \u03b4\n\u03b2 \u2190\u03b2\u2212\u03b4\nb(j) \u2190 b(j) \u2212 \u03b4\nelse if \u03b7\u0302k (j)\u001a< \u03b7k (j) then \u001b\n(e)\n\n17:\n18:\n19:\n20:\n21:\n22:\n23:\n\nB. b-metric computation\n\n24:\n25:\n\nNext, we want a Gateway to assess if it can associate one\nor more stations that other Gateways are trying to relocate,\nwithout harming the existing WSs. To do so, a Gateway\ncomputes the bandwidth available for inelastic traffic within\nits BSS, as if the relocated WSs were actually associated; we\nname such a quantity b-metric. Again, we focus on inelastic\ntraffic only. For simplicity, the b-metric computation will be\noutlined in the case where a single WS has to be relocated.\nThe extension to the case of multiple WSs is straightforward.\nLet Gm be the Gateway that evaluates the bandwidth\navailable for inelastic traffic within its BSS, j identifies the\nlast cycle and x is the WS that another Gateway tries to\nrelocate. Through signaling exchange between Gateways, Gm\nmay acquire the uplink throughput of x for inelastic and elastic\ntraffic, as well as the downlink throughput that x would like to\nreceive. If this is not possible, the Gateway takes a conservative\napproach and assigns to the WS a traffic demand equal to the\nvalue of saturation throughput. Also, Gm updates the set N (j)\nby adding x.\nIn order to evaluate the throughput that x would achieve and\nits impact on the performance of inelastic flows involving other\nnodes, we have to estimate the throughput that each active\nnode can obtain with respect to the value it has experienced\nin cycle j. To do so, we adopt the procedure reported in Alg. 2.\nAccording to the proposed algorithm, the Gateway first\ncomputes the remaining bandwidth \u03b2 as the difference be-\n\n26:\n27:\n28:\n29:\n\n\u03b4 \u2190 min\n\nPk (j)R(j)\nC(j)Rk (j) , \u03b2\n\n\u03b7\u0302k (j) \u2190 \u03b7\u0302k (j) + \u03b4\n\u03b2 \u2190\u03b2\u2212\u03b4\nelse\nNo \u2190 No \\ k\nend if\nend for\nend while\nif b(j)/S(j) > TA then\nassociation of x is possible\nelse\nassociation of x is rejected\nend if\n\ntween the saturation throughput S(j) and the sum of the shares\nconsumed by the active nodes (line 3). Again, due to the\nper-packet fairness provided by the access scheme, each node\nshare is given by the minimum between Sn (j) and its total\n(elastic and inelastic) throughput, as measured by the Gateway\nin cycle j. Then, lines 4\u20135 report the amount of inelastic and\nelastic node throughput that can be accommodated within the\nSn (j) share.\nWe identify the set of nodes No whose total (elastic and\ninelastic) throughput exceeds Sn (j) (line 7). Considering one\nof these nodes at a time, we assume that it will get a fraction\nof the remaining bandwidth so as to transmit one additional\npacket of average size. While doing this, the node will give\npriority to inelastic traffic. This occurs while (i) \u03b2 > 0 and (ii)\nthere is at least one node for which the throughput experienced\nin cycle j has not been reached yet (lines 9\u201324). As Sn (j)\nhas been computed considering the average node behavior, we\nweigh the bandwidth consumed by node k to transmit a packet\n3\n\n\fAggregate throughput\n\n30\n\nB(j)\n\nUDP\n\nTCP\n\n30\n\nTotal\n\n25\n\n25\n\n20\n\n20\n\n15\n\n15\n\n10\n\n10\n\n5\n\n5\n\n0\n\nB(j)\n\nby R(j)/Rk (j), thus accounting for the actual data rate used\nby the node (lines 12 and 17). Also, we consider the worst\ncase in which nodes with the lowest data rate Rk (j) seize the\nchannel first. Indeed, the lower the data rate, the larger the\nconsumed bandwidth (line 7).\nThe b-metric, b(j), is initialized to \u03b2 (line 8) and decreased\nby the estimated inelastic share of each active node that\nexceeds Sn (j) (line 15). It thus corresponds to the bandwidth\nthat is still available for inelastic traffic within the BSS.\nFinally, the association of WS x is considered as possible only\nif b(j)/S(j) > TA , where TA is a given threshold. Note that,\na Gateway always accepts association requests coming from\nWSs freshly joining the federated network, without computing\nthe b-metric.\n\n0\nTCP WS1\n\nUDP WS1\n\n3\n\n6\n\nUDP WS2\n9\nTime [s]\n\nUDP WS3\n12\n\n15\n\n(a) Aggregate throughput and B(j)\n25\n\nTCP WS1\n\nUDP WS1\n\nUDP WS2\n\nUDP WS3\n\nPer-WS throughput\n\n20\n\nC. Performance evaluation\nWe implemented the algorithm for evaluating the available\nbandwidth B(j), the b-metric, as well as the automatic data\nrate adaptation scheme AARF [13] in the Omnet++ v4.1\nsimulator. To represent the propagation conditions over the\nwireless channel, we resort to a refinement of the ITU indoor\nchannel model, obtained using the experimental measurements\npresented in [14]. As for the algorithm parameters, we set\nTmax = 0.1 s.\nFor clarity of presentation, here we consider only one IEEE\n802.11g BSS, including a Gateway and a varying number of\nWSs. All nodes can initially transmit at 54 Mbps and both\nelastic (TCP) and inelastic (UDP) traffic flows are present.\nAlso, since the available bandwidth B(j) and the b-metric are\nstrongly linked to each other, we show the effectiveness of our\napproach in predicting the first metric only.\nInelastic traffic is modeled as CBR flow with an offered\nload of 8 Mbps. We fix the payload size to 1500 bytes and,\nfor clarity of presentation we limit our study to 3 WSs. Also,\nthe depicted throughput is computed at the MAC layer and,\nfor TCP traffic, it includes both data and TCP ACK packets.\nWe first consider that WS 1 starts a TCP connection at\nt = 3 s and, subsequently, a UDP flow at t = 6 s. The other\ntwo stations, WS 2 and WS 3, start a UDP flow at t = 9 s and\nt = 12 s, respectively. Fig. 1 shows the temporal evolution\nof the BSS aggregate throughput and B(j), as well as the\nthroughput achieved by each WS. In spite of the saturation\ncondition caused by the TCP session started by WS 1 at t =\n3 s, B(j) correctly reflects that some bandwidth is available\nfor the newly originated flow. As the UDP stream starts at\n6 s, TCP adjusts its throughput and lets UDP take the desired\nbandwidth. Interestingly, we note that B(j) is not significantly\naffected by this new condition. This is due to two reasons: (i)\nthe UDP stream is originated by the same WS that started the\nTCP flow and (ii) the UDP demand is less than the estimated\nremaining bandwidth. The slight change that we observe in\nB(j) results from the smaller number of TCP ACKs within\nthe cycle, hence from a greater observed average payload size.\nConversely, when the UDP flow of WS 2 becomes active at\nt = 9 s, B(j) drops to 8 Mbps. The available bandwidth,\nthough, is enough to accommodate the flow by WS 3, which\n\n15\n10\n5\n0\nTCP WS1\n3\n\nUDP WS1\n6\n\nUDP WS2\n9\nTime [s]\n\nUDP WS3\n12\n\n15\n\n(b) Per-WS throughput\nFig. 1. WS 1 originates one TCP and one UDP flow, while WS 2 and WS 3\noriginate one UDP stream each. The flows become active at 3 s, 6 s, 9 s and\n12 s, respectively.\n\nstarts at t = 12 s and brings the system to saturation, hence\nB(j) drops to 0. Also, as expected, the TCP flow almost dies\nout after t = 12 s.\nWe then assume that all WSs originate one UDP and one\nTCP flow each, and that WS 1, WS 2 and WS 3 become\nactive at t = 3, 6 and 9 s, respectively. Due to the competition\nbetween elastic and inelastic traffic within the same WS, we\nexpect that all TCP flows will die out as the UDP streams\naccommodate their demand. Fig. 2 confirms such a guess\nshowing that the time evolution of the aggregate TCP throughput matches that of the bandwidth available for inelastic\ntraffic; again, the B(j) reflects such a behavior very closely.\nAt last, we consider the same settings but for the TCP flows\ndirection: all WSs are now destinations of the TCP traffic.\nFig. 3 shows that in this case the UDP throughput equals\nthe value of offered traffic only for t \u2208 [3, 6] s, i.e., when\nonly WS 1 and the Gateway are active. In this time interval,\nB(j) correctly detects enough bandwidth to accommodate an\n8 Mbps-traffic flow. Then, by looking at Fig. 3(b), we note\nthat, after t = 9 s, both WS 1 and WS 2 suffer a loss with\nrespect to their demand, due to the new UDP flow started\nby WS 3. Consistently, B(j) in Fig. 3(a) indicates that no\nbandwidth was available for inelastic traffic. We point out that\nthe throughput share of the Gateway, which is used for TCP\ntraffic, erodes some of the resources available for the WSs,\ndue to the per-packet fairness provided by the DCF scheme.\nIV. R ESOURCE\n\nSHARING PROTOCOL\n\nIn this section, we describe our resource sharing protocol\nand show its performance in a residential scenario.\n4\n\n\f25\n\n25\n\n20\n\n20\n\n20\n\n20\n\n15\n\n15\n\n15\n\n15\n\n10\n\n10\n\n10\n\n10\n\n5\n\n5\n\n5\n\n5\n\n0\n\n0\n\nUDP\n\nWS1\n\nWS2\n\n3\n\n9\n\nB(j)\n\nUDP\n\nTCP\n\n0\n\n0\nWS1\n\n12\n\nWS2\n\n3\n\nWS3\n\n6\n\n9\n\n12\n\nTime [s]\n\n(a) Aggregate throughput and B(j)\n\n(a) Aggregate throughput and B(j)\n20\n\nTCP WS3\nUDP WS3\n\nPer-WS throughput\n\nTCP WS2\nUDP WS2\n\n10\n5\n0\nWS1\n\nWS2\n\n3\n\nWS3\n\n6\n\n9\n\n30\n\nTotal\n\nTime [s]\n\nTCP WS1\nUDP WS1\n\n15\n\nTotal\n\nWS3\n\n6\n\n20\nPer-WS throughput\n\nTCP\n\nTCP WS1\nUDP WS1\n\n15\n\nTCP WS2\nUDP WS2\n\nTime [s]\n\nTCP WS3\nUDP WS3\n\n10\n5\n0\nWS1\n\n12\n\nB(j)\n\n30\n\n25\n\nB(j)\n\nAggregate throughput\n\n30\n\n25\n\nB(j)\n\nAggregate throughput\n\n30\n\nWS2\n\n3\n\nWS3\n\n6\n\n9\n\n12\n\nTime [s]\n\n(b) Per-WS throughput\n\n(b) Per-WS throughput\n\nFig. 2. Three WSs originate one TCP and one UDP flow each. The WSs\nbecome active at 3 s, 6 s and 9 s, respectively.\n\nFig. 3. WS 1, WS 2 and WS 3 originate one UDP flow and are destinations\nof one TCP flow each. The WSs become active at 3 s, 6 s and 9 s, respectively.\n\nA. Protocol description\n\nSTART\n\nWe now introduce the protocol that lets federated Gateways\nshare their radio resources. We remark that the presence of a\ncentral controller is not required, and the implementation of\nthe proposed protocol implies changes only at the Gateways,\nnot in the WSs.\nAs already mentioned, our objective is twofold: (i) to\nminimize the number of switched-on Gateways, and (ii) to\navoid overloading traffic conditions for the \"on\" Gateways.\nTo achieve these goals, a Gateway periodically measures the\nload of its BSS and assesses its status, as described in Sec. III.\nIf in Light or Heavy status, the Gateway carries out an offload\nprocedure, which is summarized in Fig. 4. The procedure\naims at relocating one or more WSs at other Gateways. The\nfederated Gateways estimate which WSs they could associate,\nbased on the value of their b-metric, and reply accordingly.\nUpon finding a valid WS relocation, the Gateway that started\nthe procedure can turn itself off if it was in Light status, while\nit experiences a load decrease if it was in Heavy status. The\nprocedure for a Gateway in Light or Heavy status is detailed\nbelow.\nLight status. Consider a Gateway Gl that finds itself\nin Light status. Then, Gl starts an offload procedure by\nmulticasting an OFFLOAD REQUEST message to the federated\nGateways. This message includes the status of the requesting\nGateway, the frequency channel currently used in the BSS, a\nhash of the association ID (AID), the MAC address and the\nmeasured traffic profile of each WS in the BSS. After the\nOFFLOAD REQUEST is issued, Gl sets a timer to the timeout\nvalue \u03c4r .\n\nMONITOR\n\nSEND ABORT\nAND\nBACKOFF\n\nPROBE SELECTED WSs,\nSEND OFFLOAD_REQUEST\nAND COLLECT\nOFFLOAD_RESPONSEs\n\nLIGHT\nNO\n\nYES\n\nor\n\nHEAVY\n\nNO\n\nFEASIBLE\nSOLUTION\nFOUND\n\nYES\n\nNO\n\nYES\n\nHANDOVER_COMMAND\n\nFig. 4.\n\nALL POSITIVE\nRESPONSES\n\nSEND ALLOCATION_REQUEST\nAND COLLECT\nALLOCATION_RESPONSEs\n\nFlow chart of the offload procedure.\n\nAn OFFLOAD REQUEST is processed only by federated\nGateways that are currently on and not in Heavy status.\nSince the request comes from a Gateway in Light status, the\nfederated Gateways first check if their b-metric is greater than\nthe value advertized by Gl . If so, they discard the request since\nthey are less loaded than Gl . Otherwise, they need to evaluate\nwhich of the WSs are in their radio range and which data rate\nthey could use to communicate with the WSs. To do so, we let\nthe Gateways tune one of their radio interfaces to the channel\nused by Gl for a time \u03c4p ; then, we let Gl probe each WS in its\nBSS with an RTS message. As the probed WS will reply with\na CTS, the Gateways monitoring the frequency channel will be\nable to estimate the signal-to-noise ratio (SNR), hence the data\nrate they could use to communicate with the WS. Note that Gl\n5\n\n\f18 mt\n\nwill set the RTS duration field so that the corresponding field\nin the CTS will be the hash function of the WS's AID2 . Such\na procedure allows a Gateway that is not in radio proximity of\nGl (i.e., unable to hear the RTS) to identify the WS sending\nthe CTS. Clearly, it introduces some overhead, but, since Gl\nis underloaded, we expect the number of WSs in its BSS to\nbe small.\nEach federated Gateway then considers the WSs from which\nis has heard a CTS within the time \u03c4p . To verify which WSs\n(if any) could be associated to its BSS, the Gateway evaluates\nthrough Alg. 2 the b-metric for the possible combinations of\ncandidate WSs. Finally, it unicasts an OFFLOAD RESPONSE\nmessage to Gl , including the combinations with a positive\noutcome (i.e., b(j) > 0), as well as the corresponding value\nof the b-metric and the data rates that could be used to\ncommunicate with the candidate WSs.\nUpon the expiration of the timeout \u03c4r , Gl evaluates all\nreceived replies. Among the feasible solutions, the allocation\nmaximizing the average data rate of the WSs is selected. To\nsolve possible ties, preference is given to the allocation that\nminimizes the average b-metric. The rational is that, firstly,\nWSs should be handed over to the Gateways that will be\nable to communicate with them at the highest data rate, so\nas to guarantee an efficient traffic transfer. Secondly, we want\nas many WSs as possible to associate to Gateways that have\nalready a high traffic load and leave out those that are likely\nto reach a Light status, hence to switch themselves off.\nIf a valid allocation is found, Gl unicasts to each selected\nGateway an ALLOCATION REQUEST, including the MAC address of the WSs assigned to it and the current b-metric\nvalue of Gl . A Gateway receiving the ALLOCATION REQUEST\nevaluates again the b-metric taking the assigned WSs into\naccount. If the result of the evaluation is still positive and\nits b-metric is less than the value advertized by Gl , the\nGateway replies with a positive ALLOCATION RESPONSE;\notherwise, it sends a negative ALLOCATION RESPONSE. Gl\nwill end the offload procedure by multicasting to all Gateways\na HANDOVER COMMAND if it receives all positive ALLOCA TION RESPONSE s, or an ABORT message otherwise. Upon the\nreception of a HANDOVER COMMAND, each selected Gateway\nwill include the assigned WS(s) in its authorized stations list,\nso that, when Gl switches itself off, each WS will necessarily\nassociate with the right Gateway.\nHeavy status. When a Gateway, Gh , finds itself in Heavy\nstatus, it starts an offload procedure similar to the one described above. A few differences, however, exist. Firstly, Gh\ntries to hand over only one WS at a time, till its status changes\ninto Regular. Specifically, it lists the WSs in decreasing order\naccording to their offered load weighted by the inverse of their\ndata rate, and attempt to relocate the top WS first. Thus, the\nhandover of each WS results in a different offload procedure.\nSecondly, upon receiving an OFFLOAD REQUEST from Gh , an\n\nAP1\n\nAP2\n\n12 mt\n\nAP6\n\nFig. 5.\n\nAP3\n\nAP4\n\n20 mt\n\nAP7\n\nAP8\n\nAP5\n\n6 mt\n\nAP9\n\nAP10\n\nFederated detached houses scenario.\n\n\"on\" Gateway not in Heavy status will always reply, provided\nthat its b-metric computed through Alg. 2 is greater than 0.\nHowever, if no viable relocation is found, Gh will resend the\nOFFLOAD REQUEST with a flag set. This message will be\nprocessed also by \"off\" Gateways, with a given probability\n(low-power circuits [15] can be used to wake up Gateways\nupon the reception of the message with the flag set). In this\nway, we let \"off\" Gateways turn themselves on if needed,\nwhile limiting the number of Gateways that wake up.\nWe remark that, upon receiving an OFFLOAD REQUEST,\na Gateway wishing to start an offload procedure defers its\nrequest till it receives a HANDOVER COMMAND or an ABORT,\nand then backoff. This ensures that in the federated network\nthere is only one active offload procedure at the time.\nB. Performance evaluation\nWe implemented our protocol in the Omnet++ v4.1 simulator and evaluated its performance in a realistic scenario\nreferring to a neighborhood located in the suburbs of Chicago,\nIL. The scenario, depicted in Figure 5, includes 10 federated\ndetached houses, each equipped with an IEEE 802.11g Gateway. As previously mentioned, channel propagation conditions\nare modeled through the model defined in [14]. Also, the\naverage fraction of Gateways in radio visibility of a WS, when\na data rate of 1 Mbps is used, is 0.8. As for the algorithm\nparameters, we have TR = 0.05, TL = 0.5, TA = 0.2,\nNL = 10, Tmax = 0.1 s, \u03c4r = 0.3 s, and \u03c4p = 0.1 s,\nwhile we set to 0.5 the probability that an \"off\" Gateway turns\nitself on upon receiving a flagged OFFLOAD REQUEST from\na neighboring Gateway in Heavy status.\nFor reasons of space, we limit the set of results to a\nscenario featuring only uplink UDP traffic. Consequently, we\nset the offload procedure to be quite reactive (a few seconds\nin Light/Heavy status are sufficient to trigger it). Additional\nhysteresis (i.e., heavier smoothing when computing running\naverages of throughput) is needed to cope with the periodic\nfluctuations of TCP flows.\nIn order to evaluate the behavior of our scheme in Light and\nHeavy status, we consider a dynamic traffic scenario. Initially,\nall Gateways are \"on\" and they have 3 associated WSs each.\nAt time t=0 s, every WS starts generating an uplink UDP\nstream at 1 Mbps (see Fig. 6(a)); since the per-Gateway load\nis 3 Mbps, all Gateways are in Light status. Then, between 60\nand 68 s, every WS doubles its offered load (see Fig. 6(b)),\ndriving the \"on\" Gateways into Heavy status.\n\n2 The RTS duration field is set to the sum of the SIFS time, CTS\ntransmission time and the hash of the WS's AID. The value of the hash\nshould be upper bounded by 2 * SIFS plus the ACK duration so that probe\nCTS cannot be mistaken with regular CTS.\n\n6\n\n\fGw3\nGw4\n\nGw5\nGw6\n\nGw7\nGw8\n\nGw9\nGw10\n\n10\nNo. of associated WSs\n\nTotal throughput [Mbps]\n\nGw1\nGw2\n18\n15\n12\n9\n6\n3\n0\n1\n\n2\n\n3\n\n4\n\n5\n6\nTime [s]\n\n7\n\n8\n\n9\n\nGw5\nGw6\n\n4\n2\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n7\n\n8\n\n9\n\n10\n\nGateway ID\n\nGw7\nGw8\n\nFig. 7. WS distribution over the Gateways under Light and Heavy conditions.\nGw9\nGw10\n\n100\n\n18\n\n% off Gateways\n\nTotal throughput [Mbps]\n\nGw3\nGw4\n\n6\n\n0\n\n10\n\n(a) Gateways throughput (Light status)\nGw1\nGw2\n\nLight\nHeavy\n\n8\n\n15\n12\n9\n6\n\n2WS per GW\n4WS per GW\n6WS per GW\n\n80\n60\n40\n20\n\n3\n0\n\n0\n60\n\n62\n\n64\n\n66\n\n68\nTime [s]\n\n70\n\n72\n\n74\n\n76\n\n0.5\n\n1\n\n(b) Gateways throughput (Heavy status)\n\n1.5\n\n2\n2.5\n3\n3.5\n4\n4.5\nPer-WS offered traffic [Mbps]\n\n5\n\n5.5\n\n6\n\n5.5\n\n6\n\n(a) Percentage of \"off\" Gateways\nAverage no. of WSs per GW\n\nFig. 6. Temporal evolution of the Gateways throughput under Light and\nHeavy conditions.\n\nThe temporal evolution of the Gateways throughput, when\nall Gateways are initially in Light status, is shown in Fig. 6(a),\nwhere different marker/color combinations are used to represent the behavior of single Gateways. The Gateways that\nsuccessfully carry out an offload procedure and become \"off\"\ncorrespond to downward curves, while Gateways that associate\nrelocated WSs see their throughput grow. A sample of a\nsuccessful offload can be observed in the interval [3, 4] s where\na Gateway, upon switching itself off, relocates its three WSs\nto two other Gateways whose throughput therefore increases.\nEventually (at t=8.5 s), the federated network settles at 3 \"on\"\nGateways out of 10. Each \"on\" Gateway serves 10 WSs (see\nFig. 7) and is in Regular status.\nThen, Fig. 6(b) shows the temporal evolution of the Gateways throughput when a sudden traffic increase drives the\nthree \"on\" Gateways into Heavy status. As the WSs progressively double their offered load (between 60 and 68 s), two\nadditional Gateways turn themselves on and come to the aid of\nthe overloaded ones. We remark that the proposed algorithm\nalways tries to minimize the number of \"on\" Gateways,\nthus the second one is switched on only when the first can\nno longer associate WSs without moving into Heavy status\nitself. When all Gateways are in Regular status (t=73 s), no\nfurther relocations occur and the network stabilizes at 5 \"on\"\nGateways. The three Gateways that were \"on\" at the end of the\nperiod depicted in Fig. 6(a) now have 7 associated WSs, while\nthe first and the second Gateway that came in aid accepted 6\nand 3 WSs, respectively, as shown in Fig. 7.\nNext, we consider a different traffic scenario where initially\nall 10 Gateways serve the same number of WSs (namely, 2,\n\n2WS per GW\n4WS per GW\n6WS per GW\n\n18\n15\n12\n9\n6\n3\n0\n0.5\n\n1\n\n1.5\n\n2\n2.5\n3\n3.5\n4\n4.5\nPer-WS offered traffic [Mbps]\n\n5\n\n(b) Average number of WSs/Gateway\nFig. 8. Percentage of \"off\" Gateways and average number of associated WSs\nper Gateway, as the WS offered load varies and for a different initial number\nof WSs per Gateway.\n\n4, 6). Each WS generates a UDP flow with the same offered\nload, which is a varying parameter in different test runs. Fig. 8\nshows the percentage of \"off\" Gateways, as well as the average\nnumber of WSs associated to a Gateway, upon reaching steady\nstate. As expected, the number of switched off Gateways\ndecreases as both the offered load and the number of WSs\nin the federated network increase. These results suggest that,\nfor widely different load conditions, the configuration yielded\nby our solution well adapts to the system dynamics.\nV. C ONCLUSION\n\nAND FUTURE WORK\n\nWe designed a set of procedures aimed at managing underload and overload conditions in wireless Gateways of\nfederated households. After outlining some methodologies for\nthroughput monitoring in presence of uplink/downlink elastic\nand inelastic traffic, we introduced the offload procedures that\nallow (i) an underloaded Gateway to relocate all of its WSs\nand thus switch off; (ii) an overloaded Gateway to relocate\nsome of its WSs and alleviate its status. By simulation, we\n7\n\n\ftransmission, Te (j), are derived as follows:\n\nthen showed the effectiveness of the procedures in a simple,\nyet realistic federated neighborhood scenario.\nFurther developments will address a wider evaluation of\nfederated scenarios in presence of TCP traffic, prompt management of \"off\" Gateways, as well as power saving benchmarks\ncomparing our solution with an always-on Gateway setting.\nThe implementation of our solution in real devices will follow,\nalong with experimental measurements.\n\nhmac + P (j) + ACK\nhphy\n+\n+ SIFS + DIFS (3)\nRb\nR(j)\nhmac + P (j)\nhphy\n+\n+ To + DIFS .\n(4)\nTe (j) =\nRb\nR(j)\n\nTs (j) = 2\n\nIn (4), hphy is the length of the physical header for the data\nand the ACK frames (assumed to be transmitted at the basic\nrate Rb ), hmac is the length of the MAC header, ACK is\nthe length of the acknowledgment MAC fields and To is the\nretransmission timeout, which we set equal to SIFS plus the\nACK duration. As for the exact computation of the average\ncollision duration, the Gateway should be aware of the number\nof nodes that are hidden with respect to each other. The\nworks in [11], [12] do not account for hidden WSs and the\napproaches proposed in the literature are not viable in our\nset up, as we do not require the Gateway to have knowledge\nof the users distribution within its coverage area. Thus, we\napproximate the average collision duration by making the\nfollowing worst-case assumption: each collision in cycle j\ninvolves a packet of maximum size Pmax (j); then\n\nR EFERENCES\n[1] N. Cranley, M. Davis, \"The effects of background traffic on the end-toend delay for video streaming applications over IEEE 802.11b WLAN\nnetworks,\" IEEE PIMRC, pp. 1, 2006.\n[2] N. Blefari Melazzi, D. Di Sorte, M. Femminella, G. Reali, \"Toward an\nautonomic control of wireless access networks,\" GLOBECOM, pp. 954\u2013\n959, 2005.\n[3] A. P. Jardosh, K. N. Ramachandran, K. C. Almeroth, E. M. BeldingRoyer, \"Understanding congestion in IEEE 802.11b wireless networks,\"\nSIGCOMM, pp. 25, 2005.\n[4] G. Sawma, G. Ben-El-Kezadri, R. Aib, I. Pujolle, \"Autonomic management for capacity improvement in wireless networks,\" IEEE CCNC, pp. 1,\n2009.\n[5] H. Velayos, V. Aleo, G. Karlsson, \"Load balancing in overlapping wireless\nLAN cells,\" ICC, pp. 3833\u20133836, 2004.\n[6] S.Vasudevan, K. Papagiannaki, C. Diot, J. Kurose, D. Towsley, \"Facilitating access point selection in IEEE 802.11,\" SIGCOMM, pp. 293\u2013298,\nAug. 2005.\n[7] A. Jardosh, K. Papagiannaki, E. Belding, K. Almeroth, G. Iannaccone, B.\nVinnakota, \"Green WLANs: On-demand WLAN infrastructure,\" Mobile\nNetworks and Applications, vol. 14, no. 6, pp. 798\u2013814, 2009.\n[8] A. Jardosh, G. Iannaccone, K. Papagiannaki, B. Vinnakota, \"Towards an\nEnergy-Star WLAN infrastructure,\" HotMobile, pp. 85\u201390, 2007.\n[9] D. Giustiniano, E. Goma, A. Lopez Toledo, P. Rodriguez, \"WiSwitcher:\nAn efficient client for managing multiple APs,\" PRESTO, pp.43\u201348, 2009.\n[10] C. Rossi, C. Casetti, C.-F. Chiasserini, G.Rondini, \"A new metric for\nadmission control in multi-rate 802.11 WLANs,\" WONS, pp. 150\u2013153,\n2011.\n[11] P. Chatzimisios, A. C. Boucouvalas, V. Vistas, \"Performance analysis of\nthe IEEE 802.11 DCF in presence of transmission errors,\" ICC, pp. 3854\u2013\n3858, 2004.\n[12] G. Bianchi, \"Performance analysis of the IEEE 802.11 Distributed\nCoordination Function,\" IEEE JSAC, vol. 18, no. 3, pp. 535\u2013547, 2000.\n[13] M. Lacage, H. Manshaei, T. Turletti, \"IEEE 802.11 rate adaptation: A\npractical approach,\" ACM MSWIM'04, pp. 126\u2013134, 2004.\n[14] T. Chrysikos, G. Georgopoulos, S. Kotsopoulos, \"Site-specific validation\nof ITU indoor path loss model at 2.4 GHz,\" WoWMoM'09, pp. 1\u20136, 2009.\n[15] P. Le-Huy, S. Roy, \"Low-power wake-up radio for wireless sensor\nnetworks,\" Mobile Networks and Applications, vol. 15, no. 2, pp. 226\u2013236,\n2010.\n\nTc (j) =\n\nhmac + Pmax (j)\nhphy\n+\n+ To + DIFS .\nRb\nR(j)\n\n(5)\n\nClearly, the above expression may lead to overestimating the\naverage collision time in absence of hidden terminals, hence\nto underestimating the theoretical saturation throughput; this,\nhowever, is acceptable for our purposes, as also proved by the\nsimulation results presented in Sec. III-C.\nWe also observe that the Gateway can easily compute \u03c4 (j)\nusing the following equation [11]:\np(j)\n\u03c4 (j)\n\n= 1 \u2212 [(1 \u2212 \u03c4 (j))N (j)\u22121 (1 \u2212 pe (j))]\n\u0015 1\n\u0014\np(j) \u2212 1 (N (j)\u22121)\n= 1+\n1 \u2212 pe (j)\n\n(6)\n(7)\n\nwhere p(j) is the the conditional probability that a transmitted\npacket encounters a collision or is received in error in saturation conditions. Note that p(j) and \u03c4 (j) have to be obtained\nthrough numerical methods, as described in [11], [12].\n\nA PPENDIX\nThe average time duration of a possible event taking place\non the channel is given by:\nE[T (j)] = (1 \u2212 \u03c4 (j))N (j) \u03c3+\n[N (j)\u03c4 (j)(1 \u2212 \u03c4 (j))N (j)\u22121 (1 \u2212 pe (j))]Ts (j)+\n[1 \u2212 (1 \u2212 \u03c4 (j))N (j) \u2212 N (j)\u03c4 (j)(1 \u2212 \u03c4 (j))N (j)\u22121 ]Tc (j)+\n[N (j)\u03c4 (j)(1 \u2212 \u03c4 (j))N (j)\u22121 pe (j)]Te (j)\n(2)\nwhere \u03c3 is the slot time duration. The average duration\nof a successful transmission, Ts (j), and of an erroneous\n8\n\n\f"}