{"id": "http://arxiv.org/abs/1108.0243v1", "guidislink": true, "updated": "2011-08-01T06:00:44Z", "updated_parsed": [2011, 8, 1, 6, 0, 44, 0, 213, 0], "published": "2011-08-01T06:00:44Z", "published_parsed": [2011, 8, 1, 6, 0, 44, 0, 213, 0], "title": "Key Predistribution Schemes for Distributed Sensor Networks", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1108.3314%2C1108.5435%2C1108.3271%2C1108.2704%2C1108.6317%2C1108.0720%2C1108.2160%2C1108.4956%2C1108.0735%2C1108.6153%2C1108.5716%2C1108.2923%2C1108.1972%2C1108.3610%2C1108.3258%2C1108.6225%2C1108.2183%2C1108.5519%2C1108.1420%2C1108.1474%2C1108.1968%2C1108.3361%2C1108.1628%2C1108.0243%2C1108.2943%2C1108.1590%2C1108.2760%2C1108.3935%2C1108.6277%2C1108.2167%2C1108.1949%2C1108.1910%2C1108.5524%2C1108.4755%2C1108.4519%2C1108.2896%2C1108.1810%2C1108.3702%2C1108.3726%2C1108.0853%2C1108.3663%2C1108.1722%2C1108.6130%2C1108.2543%2C1108.5399%2C1108.3121%2C1108.2173%2C1108.6241%2C1108.3282%2C1108.1421%2C1108.5168%2C1108.0219%2C1108.3090%2C1108.5663%2C1108.4535%2C1108.2221%2C1108.3773%2C1108.6312%2C1108.5887%2C1108.4987%2C1108.0974%2C1108.0097%2C1108.1051%2C1108.3434%2C1108.5981%2C1108.3023%2C1108.3068%2C1108.0038%2C1108.4214%2C1108.2148%2C1108.1061%2C1108.4319%2C1108.4101%2C1108.2925%2C1108.2607%2C1108.0194%2C1108.0279%2C1108.3047%2C1108.2218%2C1108.5548%2C1108.4102%2C1108.3230%2C1108.2934%2C1108.6021%2C1108.4866%2C1108.4072%2C1108.0504%2C1108.0895%2C1108.3344%2C1108.2040%2C1108.6246%2C1108.5824%2C1108.1124%2C1108.5357%2C1108.2675%2C1108.0762%2C1108.1745%2C1108.1764%2C1108.1853%2C1108.1560%2C1108.2063&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Key Predistribution Schemes for Distributed Sensor Networks"}, "summary": "Key predistribution schemes for distributed sensor networks have received\nsignificant attention in the recent literature. In this paper we propose a new\nconstruction method for these schemes based on combinations of duals of\nstandard block designs. Our method is a broad spectrum one which works for any\nintersection threshold. By varying the initial designs, we can generate various\nschemes and this makes the method quite flexible. We also obtain explicit\nalgebraic expressions for the metrics for local connectivity and resiliency.\nThese schemes are quite efficient with regard to connectivity and resiliency\nand at the same time they allow a straightforward shared-key discovery.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1108.3314%2C1108.5435%2C1108.3271%2C1108.2704%2C1108.6317%2C1108.0720%2C1108.2160%2C1108.4956%2C1108.0735%2C1108.6153%2C1108.5716%2C1108.2923%2C1108.1972%2C1108.3610%2C1108.3258%2C1108.6225%2C1108.2183%2C1108.5519%2C1108.1420%2C1108.1474%2C1108.1968%2C1108.3361%2C1108.1628%2C1108.0243%2C1108.2943%2C1108.1590%2C1108.2760%2C1108.3935%2C1108.6277%2C1108.2167%2C1108.1949%2C1108.1910%2C1108.5524%2C1108.4755%2C1108.4519%2C1108.2896%2C1108.1810%2C1108.3702%2C1108.3726%2C1108.0853%2C1108.3663%2C1108.1722%2C1108.6130%2C1108.2543%2C1108.5399%2C1108.3121%2C1108.2173%2C1108.6241%2C1108.3282%2C1108.1421%2C1108.5168%2C1108.0219%2C1108.3090%2C1108.5663%2C1108.4535%2C1108.2221%2C1108.3773%2C1108.6312%2C1108.5887%2C1108.4987%2C1108.0974%2C1108.0097%2C1108.1051%2C1108.3434%2C1108.5981%2C1108.3023%2C1108.3068%2C1108.0038%2C1108.4214%2C1108.2148%2C1108.1061%2C1108.4319%2C1108.4101%2C1108.2925%2C1108.2607%2C1108.0194%2C1108.0279%2C1108.3047%2C1108.2218%2C1108.5548%2C1108.4102%2C1108.3230%2C1108.2934%2C1108.6021%2C1108.4866%2C1108.4072%2C1108.0504%2C1108.0895%2C1108.3344%2C1108.2040%2C1108.6246%2C1108.5824%2C1108.1124%2C1108.5357%2C1108.2675%2C1108.0762%2C1108.1745%2C1108.1764%2C1108.1853%2C1108.1560%2C1108.2063&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Key predistribution schemes for distributed sensor networks have received\nsignificant attention in the recent literature. In this paper we propose a new\nconstruction method for these schemes based on combinations of duals of\nstandard block designs. Our method is a broad spectrum one which works for any\nintersection threshold. By varying the initial designs, we can generate various\nschemes and this makes the method quite flexible. We also obtain explicit\nalgebraic expressions for the metrics for local connectivity and resiliency.\nThese schemes are quite efficient with regard to connectivity and resiliency\nand at the same time they allow a straightforward shared-key discovery."}, "authors": ["Mausumi Bose", "Aloke Dey", "Rahul Mukerjee"], "author_detail": {"name": "Rahul Mukerjee"}, "author": "Rahul Mukerjee", "arxiv_comment": "Indian Statistical Institute Kolkata Tech., November 10, 2010\n  (Revised version)", "links": [{"href": "http://arxiv.org/abs/1108.0243v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1108.0243v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1108.0243v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1108.0243v1", "journal_reference": null, "doi": null, "fulltext": "Indian Statistical Institute Kolkata Tech. Rep. no. ASD/2010/3, November 10, 2010\nRevised draft August 1, 2011\n\narXiv:1108.0243v1 [cs.CR] 1 Aug 2011\n\nKey Predistribution Schemes for Distributed Sensor Networks\nvia Block Designs\nMausumi Bosea1 , Aloke Deyb , Rahul Mukerjeec\na Indian\nb Indian\nc Indian\n\nAbstract\n\nStatistical Institute, Kolkata 700108, India\n\nStatistical Institute, New Delhi 110016, India\n\nInstitute of Management Calcutta, Kolkata 700104, India\n\nKey predistribution schemes for distributed sensor networks have received significant\n\nattention in the recent literature. In this paper we propose a new construction method for these\nschemes based on combinations of duals of standard block designs. Our method is a broad\nspectrum one which works for any intersection threshold. By varying the initial designs, we\ncan generate various schemes and this makes the method quite flexible. We also obtain explicit\nalgebraic expressions for the metrics for local connectivity and resiliency. These schemes are\nquite efficient with regard to connectivity and resiliency and at the same time they allow a\nstraightforward shared-key discovery.\n\n1\n\nIntroduction\n\nDistributed sensor networks have been extensively studied in recent years due to their wide\napplicability in both civilian and military contexts. For instance, in a military operation, sensor\nnodes may be distributed in a random manner over a sensitive area and, once deployed, these\nnodes are required to communicate with each other in order to gather and relay information.\nThis communication has to be done in a secret manner and so secure keys need to be established\nbetween the nodes in the system. For more details on the applications, the security framework\nand models for these distributed sensor networks (DSNs) we refer e.g., to Carmen et al. (2000),\nRoman et al. (2005) and Du et al. (2005). There are also interesting results pertaining to an\n1\n\nCorresponding author.\n\nemail address: mausumi.bose@gmail.com (Mausumi Bose)\n\n1\n\n\falternative situation where the location of sensor nodes can be determined prior to deployment,\ne.g., results by Younis et al. (2006), Martin et al., (2010), Blackburn et al. (2010), Martin et\nal. (2011), and others. In this paper we focus on the situation of random deployment of nodes.\nSeveral authors have recommended the use of key predistribution schemes (KPSs) in a DSN,\nwhere secret keys are installed in each sensor node before deployment. Eschenauer and Gligor\n(2002) pioneered a probabilistic approach to key predistribution and gave a scheme in which\nevery node is assigned a randomly chosen subset of keys from a given pool of keys. Chan et\nal. (2003) generalized this basic scheme to the q-composite scheme, where two nodes can communicate only if they share at least q common keys, where q is a prespecified integer called\nthe intersection threshold. Camtepe and Yener (2004) first introduced the use of combinatorial designs in KPSs, using finite projective planes and generalized quadrangles. The principal\nadvantages of using deterministic key assignment schemes based on combinatorial designs compared to random key assignment is that, in the former approach, the problem of generating\ngood pseudorandom numbers is avoided, and moreover, by exploiting the combinatorial structures of the underlying designs, one can study the local connectivity and resiliency properties\nof the scheme easily, and also carry out shared-key discovery and path-key establishment in a\nstructured manner. For more details on these advantages we refer to Lee and Stinson (2008)\nand Martin (2009).\nMany researchers appreciated the advantages of the above approach and continued to further\ndevelop this area. Lee and Stinson (2005a, 2005b) gave a construction based on transversal\ndesigns, Chakrabarti et al. (2006) followed this by proposing a merger of a random selection of\nblocks of a transversal design to form the nodes, Dong et al. (2008) used 3-designs, Ruj and\nRoy (2007) used partially balanced designs and Ruj et al. (2009) used balanced incomplete\nblock designs in their construction. Lee and Stinson (2008) gave a comprehensive account of\nkey assignment schemes based on combinatorial designs and studied all aspects of their schemes.\nThey gave constructions for two classes of schemes, namely, a linear scheme with intersection\nthreshold q = 1 and a quadratic scheme with q = 2, based on transversal designs. They studied\nthese two classes of schemes separately and, for each of the two classes, they showed their\nscheme to be efficient with regard to the levels of connectivity and resiliency, while allowing\nsimple shared-key discovery and path-key establishment. The numbers of nodes required in the\nnetwork for these two classes of KPSs are of the form p2 and p3 , respectively, where p is a prime\nor prime power.\n2\n\n\fIn this paper we propose a new method for constructing KPSs and then study the properties\nof the resulting schemes. Realizing a connection between the transversal designs used by Lee\nand Stinson (2008) in their construction for q = 1 and a particular type of partially balanced\nincomplete block designs, we consider the latter designs in their full generality and show that\nwe can construct useful KPSs based on a suitable combination of partially balanced incomplete\nblock designs. We propose one general construction method for any given intersection threshold\nq (\u2265 1), and it will be seen that for the case q = 1, our construction covers the linear scheme of\nLee and Stinson (2008). One advantage of our proposed method is that it works for all q(\u2265 1),\nand by varying the choices of the designs, one can construct KPSs for networks with varying\nnumbers of nodes, key-pool sizes and numbers of keys per node, thus providing more flexibility\nin choosing a scheme suitable for the requirements of a situation. For example, now the number\nof nodes need not be of the particular forms p2 or p3 , with p prime or prime power, as in Lee\nand Stinson (2008). These points will be elaborated on in Section 8.\nAnother advantage of our method of construction is that it allows us to obtain unified and\nexplicit algebraic expressions for the metrics for evaluating the connectivity and resiliency of\nthese schemes, all for general values of q(\u2265 1). Using these expressions, the metrics can be\neasily calculated from the parameters of the particular designs used in the construction. This\nmay be contrasted with Lee and Stinson (2008), Ruj and Roy (2007) or Ruj et al. (2009), where\nevaluation of the metrics can involve explicit enumeration which may become cumbersome.\nWe also show that our KPSs have good connectivity with high levels of resiliency and the\ncombinatorial structure of the underlying designs make the shared-key discovery and path-key\nestablishment phases particularly simple.\nIn Section 2 of this paper we give some preliminaries on various metrics for evaluating\na KPS, followed by some basics on block designs. Section 3 describes our proposed method\nfor constructing a KPS. Next, in Sections 4 and 5 we obtain expressions for the connectivity\nand resiliency metrics for these schemes and give illustrative examples. In Section 6 we apply\nour method to constructions based on some specific block designs, together with numerical\nillustrations. In Section 7 we discuss how we can label the keys and nodes so that shared-key\ndiscovery and path-key establishment become simple. Finally in Section 8 we discuss the gains\nachieved via our method of construction.\n\n3\n\n\f2\n\nPreliminaries\n\n2.1\n\nSome metrics for evaluating KPSs\n\nSeveral authors have considered some standard metrics for evaluating the performance of key\npredistribution schemes for distributed sensor networks. We briefly describe these metrics here;\na more comprehensive account can be found in Lee and Stinson (2008).\nTwo basic metrics of a KPS are the network size or the number of nodes in the network and\nthe key storage or the number of keys stored per node, usually denoted by n and k, respectively.\nA KPS should typically have large n, say 1000 or much higher and small k, say about 50, though\nsome authors have used k up to 200.\nIn a DSN the nodes are scattered over a physical area and, since nodes have limited power,\neach can send or receive signals only over a certain wireless communication range or neighborhood.\nOnce the nodes are deployed, any two nodes which are within each other's neighborhood can\nsecurely communicate directly with each other if they have at least q common keys, where q(\u2265 1)\nis a specified integer, the intersection threshold of the DSN. On the other hand, if two nodes\nin the same neighborhood do not have q common keys, then they can establish a connection\nthrough multiple secure links if there is a sequence of one or more intermediate nodes connecting\nthem such that every pair of adjacent nodes in this sequence share q common keys.\nTo study the local connectivity of the network, we adopt the metrics used in Lee and Stinson\n(2005b, 2008), and for this, we now introduce the relevant probabilities as defined by them.\nDefine Pr1 to be the probability that two random nodes share at least q common keys. Thus\ngiven any two randomly chosen nodes within each other's neighborhood, Pr1 is the probability\nthat these two nodes can establish secure direct communication with each other. Also, define\nPr2 to be the probability that two nodes in the same neighborhood do not have q common keys\nbut there is a third node within the intersection of their neighborhoods which shares q common\nkeys with both of them, thus allowing these two nodes to communicate securely via this third\nnode. So Pr2 is the probability that two randomly chosen nodes within the same neighborhood\nfail to establish direct communication but can communicate via a two-hop path. Hence, the sum\nPr = Pr1 + Pr2 is a useful metric for studying the local connectivity of a KPS through either a\nsecure direct link or a secure two-hop path.\nNow suppose in an attack on the network a number of sensor nodes are captured at random.\nThen it is assumed that all keys stored in these compromised nodes are revealed and so cannot\n\n4\n\n\fbe used for communication any more. Consider any two uncompromised nodes, say A and A\u2032 ,\nwhich have at least q common keys. Then the direct communication link between A and A\u2032\nfails if keys common to them occur in one or more of the compromised nodes; otherwise, the\nlink remains secure. We want the sensor network to be resilient against such random node\ncompromises. From this consideration, resiliency is measured by fail(s), which represents the\nconditional probability of the link between A and A\u2032 to fail when out of the remaining n \u2212 2\nnodes, s randomly chosen ones are compromised, given that A and A\u2032 share at least q common\nkeys. A smaller value of fail(s) implies a larger resiliency.\nFinally, in order to communicate, two nodes in the same neighborhood need to determine if\nthey share q common keys; this is the shared-key discovery phase, and if they do not, then they\ntry to establish a secure two-hop path for communication; this is the path-key establishment\nphase. The difficulties involved in these two phases are also used to assess the utility of a KPS.\n\n2.2\n\nSome basics on block designs\n\nWe present some basic definitions of block designs and related concepts which we will need in our\nconstructions of KPSs. Illustrative examples are also given. For more details on these designs\nwe refer to Street and Street (1987), Stinson (2003) and Dey (2010).\nDefinition 2.1 A block design d\u2217 is an arrangement of a set of v \u2217 symbols into b\u2217 subsets, these\nsubsets being called blocks.\nExample 2.1 The following is a block design d\u2217 with v \u2217 = 9, b\u2217 = 12. Denoting the symbols\nby 1, . . . , 9 and blocks by 1, . . . , 12, we can write\nBlock Symbols\nd\u2217 :\n\nBlock Symbols\n\nBlock Symbols\n\nBlock Symbols\n\n1\n\n4, 7, 2\n\n4\n\n5, 8, 3\n\n7\n\n6, 9, 1\n\n10\n\n1, 2, 3\n\n2\n\n7, 1, 5\n\n5\n\n8, 2, 6\n\n8\n\n9, 3, 4\n\n11\n\n4, 5, 6\n\n3\n\n1, 4, 8\n\n6\n\n2, 5, 9\n\n9\n\n3, 6, 7\n\n12\n\n7, 8, 9\n\u2737\n\nDefinition 2.2 If d\u2217 is a block design with v \u2217 symbols and b\u2217 blocks then its dual design, say\nd, is a block design obtained from d\u2217 by interchanging the roles of symbols and blocks, i.e., d is\na block design involving b\u2217 symbols and v \u2217 blocks, such that the ith block of d contains the jth\nsymbol if and only if the jth block of d\u2217 contains the ith symbol, 1 \u2264 i \u2264 v \u2217 , 1 \u2264 j \u2264 b\u2217 .\n5\n\n\fExample 2.2 The dual design d obtained from d\u2217 in Example 2.1 has 12 symbols, 1. . . . , 12\nand 9 blocks denoted by B1 , . . . , B9 as follows:\n\nd:\n\nBlock\n\nSymbol\n\nBlock\n\nSymbol\n\nBlock\n\nSymbol\n\nB1\n\n2, 3, 7, 10\n\nB4\n\n1, 3, 8, 11\n\nB7\n\n1, 2, 9, 12\n\nB2\n\n1, 5, 6, 10\n\nB5\n\n2, 4, 6, 11\n\nB8\n\n3, 4, 5, 12\n\nB3\n\n4, 8, 9, 10\n\nB6\n\n5, 7, 9, 11\n\nB9\n\n6, 7, 8, 12\n\u2737\n\nDefinition 2.3 A balanced incomplete block (BIB) design is a block design d\u2217 satisfying the\nfollowing conditions: (i) each symbol appears at most once in a block, (ii) each block has a fixed\nnumber of symbols, say k\u2217 , (iii) each symbol appears in a fixed number of blocks, say r \u2217 , and\n(iv) every pair of distinct symbols appear together in \u03bb blocks.\nThe integer \u03bb is called the concurrence parameter of the BIB design. It can be checked that the\ndesign in Example 2.1 is a BIB design with \u03bb = 1.\nDefinition 2.4 A relationship defined on a set of symbols is called an association scheme with\ntwo associate classes if it satisfies the following conditions: (a) any two distinct symbols are\ncalled either 1st or 2nd associates of each other, any symbol being called the 0th associate of\nitself, (b) each symbol has \u03b8j jth associates (j = 0, 1, 2), and (c) for every pair of symbols which\nare jth associates of each other, there are \u03c6ju,w symbols that are uth associates of one and wth\nassociates of the other (j, u, w = 0, 1, 2).\nThe following relations are evident from Definition 2.4:\n\u03b80 = 1, \u03c610,0 = \u03c610,2 = \u03c612,0 = \u03c620,0 = \u03c621,0 = \u03c620,1 = 0, \u03c610,1 = \u03c611,0 = \u03c620,2 = \u03c622,0 = 1.\n\n(1)\n\nVarious association schemes are available in the literature and for these we refer to Clatworthy\n(1973). Our construction and results are valid for any general association scheme but in our\nillustrations in Section 6, we use three of these association schemes, namely group divisible,\ntriangular and Latin square type association schemes. These are defined below.\nDefinition 2.5 Let there be af symbols, (a, f \u2265 2), partitioned into a groups of f symbols each,\nand let the symbols in the ith group be denoted by i1, i2, . . . , if , i = 1, . . . , a. A group divisible\n(GD) association scheme on these af symbols is defined as one where two distinct symbols are\ncalled 1st associates if they belong to the same group, and 2nd associates otherwise.\n6\n\n\fThe above definition implies that for the GD association scheme, in addition to (1) we have\n\u03b81 = f \u2212 1, \u03b82 = f (a \u2212 1), \u03c611,1 = f \u2212 2, \u03c611,2 = \u03c612,1 = 0, \u03c612,2 = f (a \u2212 1), \u03c621,1 = 0, \u03c621,2 = \u03c622,1 =\nf \u2212 1, \u03c622,2 = f (a \u2212 2).\nExample 2.3 Let a = 2, f = 3. Then the 6 symbols are partitioned into two groups as:\n{11, 12, 13}, {21, 22, 23}. Now, for the symbol 11, the 1st associates are 12, 13 while its 2nd\nassociates are 21, 22, 23. Similarly, the 1st and 2nd associates of other symbols may be written\ndown and the parameters of the scheme can be obtained.\nDefinition 2.6 Let there be\n\nm\u0001\n2\n\n\u2737\n\nsymbols, (m \u2265 4), denoted by ordered pairs ij, 1 \u2264 i < j \u2264 m.\n\nA triangular association scheme on these symbols is defined as one where any two distinct\nsymbols are called 1st associates if the ordered pairs representing these symbols have one element\nin common, and 2nd associates otherwise.\nThe above definition implies that for the triangular association scheme, in addition to (1) we\nm\u22122\u0001\n2 ,\n\u0001\nm\u22124\n2 .\n\nhave \u03b81 = 2(m \u2212 2), \u03b82 =\n\u03c622,1 = 2m \u2212 8, \u03c622,2 =\n\nExample 2.4 Let m = 5. The\n\n\u03c611,1 = m \u2212 2, \u03c611,2 = \u03c612,1 = m \u2212 3, \u03c612,2 =\n\n5\u0001\n2\n\nm\u22123\u0001 2\n2 , \u03c61,1\n\n= 4, \u03c621,2 =\n\n(= 10) symbols are denoted by the ordered pairs: 12, 13, 14, 15,\n\n23, 24, 25, 34, 35, 45. Now, for the symbol 12, the 1st associates are 13, 14, 15, 23, 24, 25 while its\n2nd associates are 34, 35, 45. Similarly, the 1st and 2nd associates of other symbols may be\nwritten down and the parameters of the scheme obtained.\n\n\u2737\n\nDefinition 2.7 Let there be p2 symbols, p \u2265 3, arranged in a p \u00d7 p square S and suppose k \u2212 2\nmutually orthogonal Latin squares of order p are available. A Latin square type association\nscheme on these p2 symbols is defined as one where any two distinct symbols are called 2nd\nassociates if they occur in the same row or same column of S or if, after superimposing each of\nthe Latin squares on S, they occur in positions occupied by the same letter in any of the Latin\nsquares. Otherwise, they are called 1st associates.\nThe above definition implies that for the Latin square type association scheme, in addition to\n(1) we have \u03b81 = (p \u2212 1)(p \u2212 k + 1), \u03b82 = k(p \u2212 1), \u03c611,1 = (p \u2212 k)(p \u2212 k \u2212 1) + p \u2212 2, \u03c611,2 = \u03c612,1 =\nk(p \u2212 k), \u03c612,2 = k(k \u2212 1), \u03c621,1 = (p \u2212 k)(p \u2212 k + 1), \u03c621,2 = \u03c622,1 = (k \u2212 1)(p \u2212 k + 1), \u03c622,2 =\n(k \u2212 1)(k \u2212 2) + p \u2212 2.\n\n7\n\n\fExample 2.5 Let p = 4 and k = 3. We denote the 42 (= 16) symbols by the ordered pairs:\n11, 12, 13, 14, 21, 22, . . . , 43, 44 and write S and the single Latin square L as\n11 12 13 14\n\nA B\n\nC\n\nD\n\nB\n\nC\n\nD\n\nA\n\n31 32 33 34\n\nC\n\nD A\n\nB\n\n41 42 43 44\n\nD A B C.\n\n21 22 23 24\n\nS=\n\n,\n\nL=\n\nThen it follows that for the symbol 11, the 2nd associates are 12, 13, 14, 21, 31, 41, 24, 33, 42,\nwhile its 1st associates are 22, 23, 32, 34, 43, 44. Similarly, the 1st and 2nd associates of other\nsymbols may be written down and the parameters of the scheme obtained.\n\n\u2737\n\nDefinition 2.8 Given an association scheme with two associate classes on a set of v \u2217 symbols,\na partially balanced incomplete block (PBIB) design based on this association scheme is a block\ndesign d\u2217 with v \u2217 symbols and b\u2217 blocks satisfying the following conditions: (i) each symbol\nappears at most once in a block, (ii) each block has a fixed number of symbols, say k\u2217 , (iii) each\nsymbol appears in a fixed number of blocks, say r \u2217 , and (iv) every pair of symbols which are jth\nassociates of each other appear together in \u03bbj blocks (j = 1, 2).\nThe integers \u03bb1 and \u03bb2 are the two concurrence parameters of the PBIB design, where \u03bb1 6= \u03bb2 .\nExample 2.6 We can construct a PBIB design d\u2217 based on the GD association scheme by\npairing each of the af symbols with its second associates to form the blocks. Thus, such a\ndesign can be constructed for every integer a, f (\u2265 2). It is easy to see that this design will have\nv \u2217 = af, b\u2217 =\n\na\u0001 2\n2 f ,\n\nk \u2217 = 2, r \u2217 = (a \u2212 1)f and \u03bb1 = 0, \u03bb2 = 1. For example, a PBIB design\n\nbased on the GD association scheme in Example 2.3 can be constructed by pairing each of the\n6 symbols with its second associates to get 9 blocks as follows:\nBlock Symbol\nd\u2217 :\n\nBlock Symbol\n\nBlock Symbol\n\n1\n\n11, 21\n\n4\n\n12, 21\n\n7\n\n13, 21\n\n2\n\n11, 22\n\n5\n\n12, 22\n\n8\n\n13, 22\n\n3\n\n11, 23\n\n6\n\n12, 23\n\n9\n\n13, 23\n\nClearly, this GD design has v \u2217 = 6, b\u2217 = 9, k\u2217 = 2, r \u2217 = 3, \u03bb1 = 0, \u03bb2 = 1.\n\n.\n\n\u2737\n\nExample 2.7 We can construct a PBIB design d\u2217 based on the triangular association scheme\nby pairing each of the\n\nm\u0001\n2\n\nsymbols with its second associates to get the blocks. Thus, such a\n8\n\n\fdesign can be constructed for every m \u2265 4. It is easy to see that this design will have v \u2217 =\nb\u2217 = 3\n\nm\u0001\n4 ,\n\nk\u2217 = 2, r \u2217 =\n\nm\u22122\u0001\n2 ,\n\nm\u0001\n2 ,\n\nand \u03bb1 = 0, \u03bb2 = 1. For example, a PBIB design based on the\n\ntriangular association scheme in Example 2.4 has 10 symbols arranged in 15 blocks given by:\n(12, 34), (12, 35), (12, 45), (13, 24), (13, 25), (13, 45), etc.\n\n\u2737\n\nFor a given positive integer t(\u2265 1), we now consider t block designs d\u22171 , . . . , d\u2217t such that each\nd\u2217i is a PBIB design based on an association scheme with two associate classes and concurrence\nparameters \u03bb1 = 0, \u03bb2 = 1, the common occurrence number of every symbol in d\u2217i (i = 1, . . . , t)\nbeing at least t. For 1 \u2264 i \u2264 t, consider the dual di of d\u2217i and denote the symbols of di by\n1(i), . . . , vi (i), and blocks by B1 (i), . . . , Bbi (i). Then from Definitions 2.2 and 2.8, it is evident\nthat each such di , involving vi symbols and bi blocks, satisfies the following conditions:\n(I) every symbol occurs at most once in each block of di ,\n(II) every symbol occurs in a fixed number of blocks, say ri (2 \u2264 ri < bi ), of di ,\n(III) every block of di contains a fixed number of symbols, say ki (vi > ki \u2265 t), and\n(IV) there is an association scheme with two associate classes on the set of blocks of di ; any\ntwo distinct blocks either have no common symbol, in which case they are called 1st associates\nof each other; or they have exactly one symbol in common, in which case they are called 2nd\nassociates of each other; every block being its own 0th associate.\nFor 1 \u2264 i \u2264 t, let \u03b8j (i) denote the number of jth associates of any block of di , and given any\ntwo blocks which are jth associates of each other, let \u03c6ju,w (i) denote the number of blocks of di\nwhich are uth associates of one and wth associates of the other (j, u, w = 0, 1, 2). Then clearly,\nfor each design di the relations corresponding to (1) hold, and moreover,\n\u03b80 (i) = 1,\n\n\u03b81 (i) + \u03b82 (i) = bi \u2212 1 and \u03b81 (i) > 0, \u03b82 (i) > 0 (1 \u2264 i \u2264 t).\n\n(2)\n\nExample 2.8 Let d\u22171 be the PBIB design given in Example 2.6. Then, the dual of d\u22171 is given\nby a design d1 with 6 symbols arranged in 9 blocks. Denoting these symbols as 1(1), . . . , 9(1)\nand the blocks as B1 (1), . . . , B6 (1) as described above, the design d1 has blocks given by:\nBlock\n\nSymbols\n\nBlock\n\nSymbols\n\nBlock\n\nSymbols\n\nd1 : B1 (1) 1(1), 2(1), 3(1)\n\nB3 (1) 7(1), 8(1), 9(1)\n\nB5 (1) 2(1), 5(1), 8(1)\n\nB2 (1) 4(1), 5(1), 6(1)\n\nB4 (1) 1(1), 4(1), 7(1)\n\nB6 (1) 3(1), 6(1), 9(1)\n\nClearly, d1 satisfies conditions (I)-(III) above with v1 = 9, b1 = 6, r1 = 2, k1 = 3. Also,\n\n9\n\n\fcondition (IV) is satisfied; we have the following association structure:\nBlock 1st associates\n\n2nd associates\n\nB1 (1)\n\nB2 (1), B3 (1)\n\nB4 (1), B5 (1), B6 (1)\n\nB2 (1)\n\nB1 (1), B3 (1)\n\nB4 (1), B5 (1), B6 (1)\n\nB3 (1)\n\nB1 (1), B2 (1)\n\nB4 (1), B5 (1), B6 (1)\n\nB4 (1)\n\nB5 (1), B6 (1)\n\nB1 (1), B2 (1), B3 (1)\n\nB5 (1)\n\nB4 (1), B6 (1)\n\nB1 (1), B2 (1), B3 (1)\n\nB6 (1)\n\nB4 (1), B5 (1)\n\nB1 (1), B2 (1), B3 (1)\n\nSo, in addition to the relations in (1), we have \u03b81 (1) = 2, \u03b82 (1) = 3, \u03c611,1 (1) = 1, \u03c611,2 (1) =\n\u03c612,1 (1) = 0, \u03c612,2 (1) = 3, \u03c621,1 (1) = 0, \u03c621,2 (1) = \u03c622,1 (1) = 2, \u03c622,2 (1) = 0.\n\n\u2737\n\nIn the above development, we can as well take any d\u2217i to be a BIB design with \u03bb = 1, each\nsymbol appearing at least t times in the design. Then by Definitions 2.2 and 2.3, its dual design\ndi will again satisfy the conditions (I)-(IV), but with \u03b81 (i) = 0. This is because in this case,\nany two blocks of di will always have exactly one symbol in common and so by (IV), any two\ndistinct blocks of di can only be second associates, there being no 1st associates for any block.\nThus, conditions (1) and (2) are valid, keeping in mind that now in (2), \u03b81 (i) = 0 and in (1),\nthe quantities \u03c61u,w (i) do not arise, while \u03c60u,w (i) = 0 and \u03c62u,w (i) = 0 whenever u = 1 or w = 1.\nExample 2.9 Let d\u22172 be the BIB design in Example 2.1. Then, the dual of d\u22172 is the design\nin Example 2.2, denoted by d2 , say. Clearly, d2 satisfies conditions (I)-(III) with v2 = 12, b2 =\n9, r2 = 3, k2 = 4. Also, condition (IV) is satisfied with no block in d2 having any other block as\nits 1st associate, all distinct blocks being 2nd associates of each other. Thus, in addition to the\nrelations in (1), we have \u03b81 (2) = 0, \u03b82 (2) = 8, \u03c621,1 (2) = \u03c621,2 (2) = \u03c622,1 (2) = 0, \u03c622,2 (2) = 7.\n\n\u2737\n\nIn view of the above discussion, define two sets Q and Q\u0304 as\nQ = {i : 1 \u2264 i \u2264 t, \u03b81 (i) > 0} and Q\u0304 = {i : 1 \u2264 i \u2264 t, \u03b81 (i) = 0}.\n\n(3)\n\nClearly, i \u2208 Q if d\u2217i is a PBIB design and i \u2208 Q\u0304 if d\u2217i is a BIB design as indicated above.\n\n3\n\nConstruction of KPS\n\nSuppose the intersection threshold of the required KPS is stipulated as q. We consider t = q\nblock designs d\u2217i , 1 \u2264 i \u2264 t, where each d\u2217i is either a PBIB design with \u03bb1 = 0, \u03bb2 = 1 or a\n10\n\n\fBIB design with \u03bb = 1; every symbol appearing at least t times in each design. As before, for\n1 \u2264 i \u2264 t, let di be the dual of design d\u2217i , so di satisfies conditions (I)-(IV) listed in Subsection 2.2.\nA KPS with q = t, based on the designs d1 , . . . , dt is constructed as follows.\nFirst identify the symbols in d1 , . . . , dt as the keys of the KPS. Next, consider all possible\nselections of one block from each di , 1 \u2264 i \u2264 t, and take the union of the t blocks in each\nsuch selection as a node of the KPS. Thus the resulting KPS has v =\nsymbols 1(i), . . . , vi (i), (1 \u2264 i \u2264 t) and n = \u03a0ti=1 bi nodes given by\n\nPt\n\ni=1 vi\n\nkeys given by the\n\nN (\u03b11 . . . \u03b1t ) = B\u03b11 (1) \u222a * * * \u222a B\u03b1t (t), 1 \u2264 \u03b1i \u2264 bi , 1 \u2264 i \u2264 t.\nBy condition (III) in Subsection 2.2, every node has k =\n\nPt\n\ni=1 ki\n\n(4)\n\nkeys. Note that n is multiplica-\n\ntive in the bi while k is additive in the ki , 1 \u2264 i \u2264 t. As illustrated later, this helps in attaining\nthe twin objectives of having a large number of nodes in the network while keeping the number\nof keys stored per node relatively small.\nRemark 3.1 One of the two constructions in Lee and Stinson (2008), namely, the one with\nq = 1, is covered by (4). This fact will be elucidated in more detail in Remarks 4.3 and 5.3. \u2737\nFor 1 \u2264 i \u2264 t, it is clear from (4) that the block B\u03b1i (i) is the contribution of the design di\nto the node N (\u03b11 . . . \u03b1t ). From this perspective, we introduce the following definition.\nDefinition 3.1 When nodes are constructed as in (4), the block of di that appears in any node\nA is called the projection of the node A on the design di and is denoted by proj(A, i).\nThus from (4), B\u03b1i (i) is the projection of the node N (\u03b11 . . . \u03b1t ) on di . We now define an\nassociation scheme on the set of nodes as given by (4). This will play a crucial role in exploring\nthe properties of the KPSs obtained through (4). Here each associate relationship is represented\nby a t-tuple of the form j1 . . . jt .\nDefinition 3.2 Two distinct nodes A and A\u2032 are j1 . . . jt th associates of each other if, for 1 \u2264\ni \u2264 t, proj(A, i) and proj(A\u2032 , i) are ji th associates of each other.\nWe illustrate the above ideas with a small toy example below.\nExample 3.1 Toy Example: Let q = 2. So, by the above method, we take t = 2 and construct\na KPS with q = 2 based on two designs, d\u22171 and d\u22172 . Let us take d\u22171 as the PBIB design given\n11\n\n\fin Example 2.6 and d\u22172 as the BIB design in Example 2.1. Their respective duals d1 and d2 are\ngiven in Examples 2.8 and 2.2. The KPS constructed by the above method has n = b1 b2 = 54\nnodes with k = k1 + k2 = 7 keys per node. Using (4), we get the key assignments in the nodes,\nfor example, two typical nodes are:\nN (1, 1) = B1 (1) \u222a B1 (2) = 1(1), 2(1), 3(1), 2(2), 3(2), 7(2), 10(2), and\nN (3, 4) = B3 (1) \u222a B4 (2) = 7(1), 8(1), 9(1), 1(2), 3(2), 8(2), 11(2).\nThen, by Definition 3.1, the blocks B1 (1) and B1 (2) are the projections of the node N (1, 1) on\nthe designs d1 and d2 , respectively, i.e., proj(N (1, 1), 1) = B1 (1) and proj(N (1, 1), 2) = B1 (2).\nSimilarly, proj(N (3, 4), 1) = B3 (1) and proj(N (3, 4), 2) = B4 (2). Now, from Examples 2.8 and\n2.9, we see that B1 (1) and B3 (1) are 1st associates while B1 (2) and B4 (2) are 2nd associates.\nSo, by Definition 3.2 we say that nodes N (1, 1) and N (3, 4) are 12th associates of each other. \u2737\nIn Definition 3.2, j1 . . . jt 6= 0 . . . 0, since the nodes A and A\u2032 are distinct. Also, by (3),\nji = 0, 1 or 2 if i \u2208 Q and ji = 0 or 2 if i \u2208 Q\u0304. Thus the set of all possible associate relationships\nbetween two distinct nodes in the KPS is given by\nI = {j1 . . . jt : j1 . . . jt 6= 0 . . . 0; ji = 0, 1 or 2 if i \u2208 Q and ji = 0 or 2 if i \u2208 Q\u0304}.\n\n(5)\n\nWe now obtain expressions for certain parameters of the association scheme on the set of\nnodes, as given by Definition 3.2. For j1 . . . jt \u2208 I, let nj1 ...jt denote the number of j1 . . . jt th\nassociates of any node A. Then by Definition 3.2, nj1...jt equals the product, over 1 \u2264 i \u2264 t, of\nthe number of ji th associates of proj(A, i). Therefore,\nnj1...jt =\n\nt\nY\n\n\u03b8ji (i).\n\n(6)\n\ni=1\nt\nAgain, given any two nodes which are j1 . . . jt th associates of each other, let puj11...j\n...ut ,w1 ...wt denote\n\nthe number of nodes that are u1 . . . ut th associates of one node and w1 . . . wt th associates of the\nother, where j1 . . . jt , u1 . . . ut and w1 . . . wt \u2208 I. Then as in (6),\nt\npju11...j\n...ut ,w1 ...wt =\n\nt\nY\n\n\u03c6juii ,wi (i).\n\n(7)\n\ni=1\n\nLet \u03bbj1 ...jt denote the number of common keys between any two distinct nodes A and A\u2032\nwhich are j1 . . . jt th associates of each other, j1 . . . jt \u2208 I. Then from Definition 3.2 it follows\nthat\n\u03bbj1 ...jt =\n\nt\nX\ni=1\n\n12\n\n\u03c8ji (i)\n\n(8)\n\n\fwhere \u03c8ji (i) is the number of symbols (or equivalently, keys) common to proj(A, i) and proj(A\u2032 , i)\nwhen they are ji th associates of each other. By condition (IV) of Subsection 2.2 and the fact\nthat each block of di is the 0th associate of itself, it is evident that\n\u03c80 (i) = ki , \u03c81 (i) = 0, \u03c82 (i) = 1, 1 \u2264 i \u2264 t.\n\n(9)\n\nWe illustrate these concepts by continuing with the toy example in Example 3.1.\nExample 3.2 Toy Example continued: Since d\u22171 is a PBIB and d\u22172 a BIB design, by (5), the set of\nall possible associate relationships between any two nodes in the KPS is I = {02, 10, 12, 20, 22}.\nNow, Examples 2.8 and 2.9 show that \u03b81 (1) = 2, \u03b82 (1) = 3 and \u03b82 (2) = 8. Recalling from (1)\nthat \u03b80 (1) = \u03b80 (2) = 1, by (6) it follows that the number of 02th associates of any node in the\nKPS is n02 = 1 \u00d7 8 = 8. Similarly, n10 = 2, n12 = 16, n20 = 3, n22 = 24. Now, using the\nvalues of \u03c6ju11 ,w1 (1) and \u03c6ju22 ,w2 (2) from Examples 2.8 and 2.9 and remembering (1), it follows\n12\n12\n12\n2\n1\nfrom (7) that p12\n02,10 = \u03c601 (1)\u03c620 (2) = 1 \u00d7 1 = 1 = p10,02 , and similarly, p22,20 = p20,22 = 3 \u00d7 1 =\n12\n12\n12\n12\n12\n3, p12\n22,22 = 3 \u00d7 7 = 21, p02,12 = p12,02 = 1 \u00d7 7 = 7, p10,12 = p12,10 = 1 \u00d7 1 = 1, p12,12 = 1 \u00d7 7 = 7,\n\nwhile every other p12\nu1 u2 ,w1 w2 equals zero.\nAgain, by (9), \u03c80 (1) = 3, \u03c80 (2) = 4, \u03c81 (1) = 0, \u03c82 (1) = \u03c82 (2) = 1, and so it follows from\n(8) that the number of symbols common between any two nodes which are 02th associates of\neach other is \u03bb02 = 3 + 1 = 4. Similarly, \u03bb10 = 4, \u03bb12 = 1, \u03bb20 = 5, \u03bb22 = 2. Hence, since q = 2,\nall pairs of nodes, other than those which are 12th associates of each other, can communicate\ndirectly with one another.\n\n4\n\n\u2737\n\nLocal connectivity\n\nIn this section we explore the local connectivity of the KPS introduced in (4). Theorem 4.1 is\nthe main result in this section and it gives an expression for the metric Pr for this scheme, in\nterms of the parameters of the constituent designs. Some notation and two lemmas are needed\nin order to present the theorem. Let\n\u2206 = {j1 . . . jt : j1 . . . jt \u2208 I, \u03bbj1 ...jt \u2265 q},\n\n(10)\n\nwhere I is given by (5). So, any two nodes which are j1 . . . jt th associates of each other can\n \u0304 be the complement of \u2206 in I and let P , P  \u0304\ncommunicate directly only if j1 . . . jt \u2208 \u2206. Let \u2206\n\u2206\n\u2206\n\nand\n\nP\n\nI\n\n \u0304 and j1 . . . jt \u2208 I, respectively.\nstand for sums over j1 . . . jt \u2208 \u2206, j1 . . . jt \u2208 \u2206\n13\n\n\fGiven two distinct nodes which are j1 . . . jt th associates of each other, let \u03bcj1 ...jt denote the\nnumber of nodes sharing at least q(= t) common keys with both of them. Also, for any two\ndistinct nodes A and A\u2032 in each other's neighborhood, let the intersection of their neighborhoods\ncontain \u03b7 nodes excluding A and A\u2032 themselves. Define\n\u03b2j1 ...jt = 1 \u2212\n\nn\u22122\u2212\u03bcj1 ...jt \u0001\n\u03b7\n,\nn\u22122\u0001\n\u03b7\n\n \u0304\nj1 . . . jt \u2208 \u2206.\n\n(11)\n\nLemma 4.1 Any j1 . . . jt (\u2208 I) is a member of \u2206 if and only if either\n(a) ji = 0 for at least one i, or (b) j1 = * * * = jt = 2.\nProof of Lemma 4.1 Follows from (8), (9) and (10), noting that ki \u2265 t for each i by condition\n(III) of Subsection 2.2.\n\n\u2737\n\nLemma 4.2 Given two distinct nodes which are j1 . . . jt th associates of each other, if j1 . . . jt \u2208\nt\n \u0304 then \u03bcj ...jt = P P pju1...j\n, the double sum being over u1 . . . ut \u2208 \u2206 and w1 . . . wt \u2208 \u2206.\n\u2206,\n1\n1 ...ut ,w1 ...wt\n\nt\nProof of Lemma 4.2 Follows from (10), on recalling the definition of pju11...j\n...ut ,w1 ...wt .\n\n\u2737\n\nTheorem 4.1 The probability that two distinct randomly chosen nodes A and A\u2032 in each other's\nneighborhood can establish communication, either directly or via a two-hop path, equals\nPr = Pr1 + Pr2 , where\nP\n\nPr1 =\n\n\u2206 nj1 ...jt\n\nn\u22121\n\n,\n\n(12)\n\nand\nPr2 =\n\nX nj ...j\nt\n1\n \u0304\n\u2206\n\nn\u22121\n\n\u03b2j1 ...jt \u2248\n\nX nj ...j \u0014\nt\n1\n \u0304\n\u2206\n\n\u03bcj ...j\n1\u2212 1\u2212 1 t\nn\u22121\nn\u22122\n\u0012\n\n\u0013\u03b7 \u0015\n\n.\n\n(13)\n\nProof of Theorem 4.1 Let C be the event that the nodes A and A\u2032 can establish communication either directly or via a two-hop path. Define E(j1 . . . jt ) as the event that A and A\u2032\nare j1 . . . jt th associates of each other. Since the events E(j1 . . . jt ), j1 . . . jt \u2208 I, are mutually\nexclusive and exhaustive, we can write\nPr = P (C) =\n\nX\n\nP {E(j1 . . . jt )}P {C|E(j1 . . . jt )},\n\n(14)\n\nI\n\nwhere P {C|E(j1 . . . jt )} is, as usual, the conditional probability of C, given E(j1 . . . jt ). Now,\nfor each j1 . . . jt \u2208 I, recalling that there are nj1...jt nodes which are j1 . . . jt th associates of any\ngiven node, it follows that\nP {E(j1 . . . jt )} =\n\n1\n2n \u00d7\n\n14\n\nnj1 ...jt\nn\u0001\n2\n\n=\n\nnj1...jt\n.\nn\u22121\n\n(15)\n\n\fMoreover, if j1 . . . jt \u2208 \u2206, then by (10), A and A\u2032 have at least t common keys and hence can\nestablish direct communication, implying\nP {C|E(j1 . . . jt )} = 1, for j1 . . . jt \u2208 \u2206.\n\n(16)\n\n \u0304 then they have less than t common keys. In this case, direct\nOn the other hand, if j1 . . . jt \u2208 \u2206,\ncommunication between A and A\u2032 is not possible but they can establish communication via a\ntwo-hop path provided the intersection of their neighborhoods contains one of the \u03bcj1 ...jt nodes\nsharing at least t common keys with both of them. Hence, using (11), it is clear that\n \u0304\nP {C|E(j1 . . . jt )} = \u03b2j1 ...jt , for j1 . . . jt \u2208 \u2206.\n\n(17)\n\nSubstitution of (15), (16) and (17) in (14) establishes the theorem.\n\n\u2737\n\nRemark 4.1 The approximation used in (13) is quite accurate when the quantities n \u2212 2 \u2212\n\u03bcj1 ,...,jt are large relative to \u03b7, which is typically the case. Note also that the expression for Pr2\nin (13) is a refinement of that used in Lee and Stinson (2008) for q = 2. To see this, first note\nfrom (12) that\nP\n\nbecause\n\nP\n\nI\n\n \u0304 nj1 ...jt\n\u2206\n\nn\u22121\n\nP\n\nn \u2212 1 \u2212 \u2206 nj1 ...jt\n=\n= 1 \u2212 Pr1 ,\nn\u22121\n\n(18)\n\n \u0304 and from (11) observe\nnj1...jt = n \u2212 1. Next, write \u03bc\u2217 = min{\u03bcj1 ...jt : j1 . . . jt \u2208 \u2206}\n\n \u0304 where \u03b2 \u2217 is defined as in (11) with \u03bcj ...jt replaced by\nthat \u03b2j1 ...jt \u2265 \u03b2 \u2217 for every j1 . . . jt \u2208 \u2206,\n1\n\u03bc\u2217 . As a result, from (13) and (18), we get\nPr2 \u2265\n\nX nj ...jt\n1\n \u0304\n\u2206\n\nn\u22121\n\n\u0014\n\n\u0012\n\n\u03b2 \u2217 = (1 \u2212 Pr1 )\u03b2 \u2217 \u2248 (1 \u2212 Pr1 ) 1 \u2212 1 \u2212\n\n\u03bc\u2217\nn\u22122\n\n\u0013\u03b7 \u0015\n\n.\n\n(19)\n\nFor their quadratic scheme, Lee and Stinson (2008) took Pr2 as the counterpart of the lower\nbound in (19) for their setup. Instead, we work here with the more direct expression given in\n(13), and in addition, this is valid for all q \u2265 1.\n\n\u2737\n\nRemark 4.2 Lee and Stinson (2008) remarked that it is difficult to find an algebraic expression\nof \u03bc\u2217 for their quadratic KPS, and therefore, studied Pr2 through design specific numerical\nevaluation of \u03bc\u2217 . An advantage of our method is that for all q(\u2265 1), even when one starts with\narbitrary designs, Theorem 4.1 gives readily applicable algebraic expressions for both Pr1 and\nPr2 for our schemes in terms of the design parameters. Equations (2), (6), (7), and Lemmas\n4.1 and 4.2 can be used in finding the nj1 ...jt and \u03bcj1 ...jt , and hence one can find Pr1 and Pr2\nexplicitly in specific situations. The following examples serve to illustrate this point for the cases\nq = 1 and q = 2.\n\n\u2737\n15\n\n\fExample 4.1 Case: q = 1. We take t = 1 and construct a KPS as in (4) with d\u22171 either (a) a\nPBIB or (b) a BIB design.\n(a) If d\u22171 is a PBIB design with \u03bb1 = 0, \u03bb2 = 1, then its dual design d1 has \u03b81 (1) > 0. Then\n \u0304 = {1}. Also, from\nn = b1 and by (3), (5) and Lemma 4.1, Q = {1}, I = {1, 2}, \u2206 = {2} and \u2206\n(6) and (7), n1 = \u03b81 (1), n2 = \u03b82 (1) and p12,2 = \u03c612,2 (1). So by Lemma 4.2, \u03bc1 = p12,2 = \u03c612,2 (1).\nHence (12) and (13) yield\n\u03b82 (1)\nPr1 =\nb1 \u2212 1\n\n\u03c612,2 (1)\n\u03b81 (1)\nand Pr2 \u2248\n1\u2212 1\u2212\nb1 \u2212 1\nb1 \u2212 2\n\"\n\n!\u03b7 #\n\n.\n\n(20)\n\n(b) If d\u22171 is a BIB design with \u03bb = 1, then its dual d1 has \u03b81 (1) = 0, \u03b82 (1) = b1 \u2212 1. Then n = b1\nand by (3), (5) and Lemma 4.1, Q\u0304 = {1}, I = {2} = \u2206. So by (12), Pr1 =\n\nb1 \u22121\nb1 \u22121\n\n= 1 always.\n\n\u2737\n\nRemark 4.3 As mentioned in the Remark 3.1, the construction in Lee and Stinson (2008) with\nq = 1 is covered by (4). To see this in detail, we first note that in their construction, the nodes\nare taken as the blocks of a transversal design (cf. Stinson (2003)), with kp symbols and p2\nblocks, such that (a) the set of symbols is partitioned into k groups each of cardinality p, (b)\neach group contributes one symbol to each block, and (c) any two symbols from different groups\noccur together in exactly one block.\nRecalling Definitions 2.7 and 2.8 it can now be checked that such a transversal design is\nactually the dual of a PBIB design based on a Latin square type association scheme with\nv \u2217 = p2 , b\u2217 = kp, r \u2217 = k, k\u2217 = p, and \u03bb1 = 0, \u03bb2 = 1. Hence one can verify that their construction\ncan equivalently be described via our construction in (4) with t = 1 and d\u22171 chosen as this PBIB\ndesign. Then its dual d1 is their transversal design involving v1 = kp symbols and b1 = p2\nblocks, such that conditions (I)\u2013(IV) of Subsection 2.2 hold with r1 = p, k1 = k, \u03b81 (1) =\n(p \u2212 1)(p + 1 \u2212 k), \u03b82 (1) = k(p \u2212 1), \u03c612,2 (1) = k(k \u2212 1). Hence we can apply (20) to get\nk\nk\nPr1 =\nand Pr2 \u2248 1 \u2212\np+1\np+1\n\u0012\n\n\u0013\u0014\n\nk(k \u2212 1)\n1\u2212 1\u2212 2\np \u22122\n\u0012\n\n\u0013\u03b7 \u0015\n\n.\n\nThese exactly match the expressions for Pr1 and Pr2 in Subsection 4.1.1 of Lee and Stinson\n(2008). We will see in Remark 5.3 that their expression for fail(s) also follow from our corresponding expressions.\n\n\u2737\n\nExample 4.2 Case: q = 2. Toy example: We continue with the KPS considered in Examples 3.1 and 3.2. From the \u03bbj1 j2 values in Example 3.2, it follows that \u2206 = {02, 10, 20, 22} and\nso, using the nj1 j2 values obtained there, (12) gives Pr1 = (8 + 2 + 3 + 24)/53 = 0.6981. To\n16\n\n\f \u0304 = {12}, and so, remembering the values of p12\nobtain Pr2 , we see that \u2206\nui u2 ,w1 w2 , u1 u2 , w1 w2 \u2208 \u2206,\nobtained in Example 3.2, it follows from Lemma 4.2 that \u03bc12 = 1 + 1 + 3 + 3 + 21 = 29. Hence,\nfrom (13), Pr2 =\n\n16\n53 [1\n\n\u2212 (1 \u2212 29/52)\u03b7 ] and for varying values of \u03b7 we have\n\n\u03b7\n\n1\n\n2\n\n3\n\n4\n\n5\n\n10\n\n15\n\n20\n\nPr1 + Pr2\n\n0.8665\n\n0.9409\n\n0.9739\n\n0.9884\n\n0.9949\n\n0.9999\n\n1.0000\n\n1.0000\n\u2737\n\nExample 4.3 General Case, q = 2: (a) PBIB and BIB design: Suppose we construct a KPS\nas in (4) based on two designs d\u22171 and d\u22172 given by a PBIB design with \u03bb1 = 0, \u03bb2 = 1 and\na BIB design with \u03bb = 1, respectively. Hence their duals d1 and d2 have \u03b81 (1) > 0 and\n\u03b81 (2) = 0. Then n = b1 b2 and by (3), (5) and Lemma 4.1, we have Q = {1}, Q\u0304 = {2}, I =\n \u0304 = {12}. Also, by (2) and (6), n02 = \u03b82 (2), n10 =\n{02, 10, 12, 20, 22}, \u2206 = {02, 10, 20, 22} and \u2206\n\u03b81 (1), n12 = \u03b81 (1)\u03b82 (2), n20 = \u03b82 (1) and n22 = \u03b82 (1)\u03b82 (2). So from (12), on using (2), we have\nPr1 =\n=\n\n1\n{\u03b82 (2) + \u03b81 (1) + \u03b82 (1) + \u03b82 (1)\u03b82 (2)} ,\nb1 b2 \u2212 1\n1\n{b1 + b2 \u2212 2 + \u03b82 (1)\u03b82 (2)} .\nb1 b2 \u2212 1\n\n(21)\n\nNext by (7) and Lemma 4.2,\n\u03bc12 =\n\nXX\n\np12\nu1 u2 ,w1 w2 =\n\nXX\n\n\u03c61u1 ,w1 (1)\u03c62u2 ,w2 (2)\n\n= \u03c610,0 (1)\u03c622,2 (2) + \u03c610,1 (1)\u03c622,0 (2) + \u03c610,2 (1)\u03c622,0 (2) + \u03c610,2 (1)\u03c622,2 (2)\n+\u03c611,0 (1)\u03c620,2 (2) + \u03c611,1 (1)\u03c620,0 (2) + \u03c611,2 (1)\u03c620,0 (2) + \u03c611,2 (1)\u03c620,2 (2)\n+\u03c612,0 (1)\u03c620,2 (2) + \u03c612,1 (1)\u03c620,0 (2) + \u03c612,2 (1)\u03c620,0 (2) + \u03c612,2 (1)\u03c620,2 (2)\n+\u03c612,0 (1)\u03c622,2 (2) + \u03c612,1 (1)\u03c622,0 (2) + \u03c612,2 (1)\u03c622,0 (2) + \u03c612,2 (1)\u03c622,2 (2).\nHence invoking (1) for the association schemes underlying the designs d1 and d2 , we get\n\u03bc12 = 2 + 2\u03c611,2 (1) + 2\u03c612,2 (1) + \u03c612,2 (1)\u03c622,2 (2).\n\n(22)\n\n \u0304 = {12} and n12 = \u03b81 (1)\u03b82 (2), (13) now yields\nSince \u2206\n\u03b81 (1)\u03b82 (2)\n\u03bc12\nPr2 \u2248\n1\u2212 1\u2212\nb1 b2 \u2212 1\nb1 b2 \u2212 2\n\u0014\n\n\u0012\n\nwith \u03bc12 as given in (22).\n\n\u0013\u03b7 \u0015\n\n,\n\n(23)\n\u2737\n\n17\n\n\fExample 4.4 General Case q = 2: (b) Both PBIB designs: Now suppose we construct a\nKPS as in (4) based on two PBIB designs, each with \u03bb1 = 0 and \u03bb2 = 1, resulting in \u03b81 (1)\nand \u03b81 (2) both positive. Then n = b1 b2 and by (3), (5) and Lemma 4.1, Q = {1, 2}, I =\n \u0304 = {11, 12, 21}. Hence proceeding as\n{01, 02, 10, 11, 12, 20, 21, 22}, \u2206 = {01, 02, 10, 20, 22} and \u2206\nin Example 4.3, one can check that\nPr1 =\n\n1\n{b1 + b2 \u2212 2 + \u03b82 (1)\u03b82 (2)},\nb1 b2 \u2212 1\n\nn11 = \u03b81 (1)\u03b81 (2), n12 = \u03b81 (1)\u03b82 (2), n21 = \u03b82 (1)\u03b81 (2)\n\u03bc11 = 2 + \u03c612,2 (1)\u03c612,2 (2), \u03bc12 = 2 + 2\u03c611,2 (1) + 2\u03c612,2 (1) + \u03c612,2 (1)\u03c622,2 (2),\n\u03bc21 = 2 + 2\u03c611,2 (2) + 2\u03c612,2 (2) + \u03c622,2 (1)\u03c612,2 (2).\n \u0304 in (13). \u2737\nPr2 can be readily obtained using these expressions for the nj1 j2 and \u03bcj1j2 , j1 j2 \u2208 \u2206,\n\n5\n\nResiliency\n\nWe now study the resiliency of the KPS as given by (4) and for this we recall the notion of fail(s)\nintroduced in Subsection 2.1. Theorem 5.1 below gives an algebraic expression for fail(s) and it\nis the main result of this section. Some notation and a lemma are needed in order to present\nthe theorem.\nLet A and A\u2032 be two distinct nodes which have at least t common keys, i.e., by (10), they\nare j1 . . . jt th associates of each other, for some j1 . . . jt \u2208 \u2206. Then by Lemma 4.1, the set\n\u03a9 = {i : 1 \u2264 i \u2264 t, ji = 0 or 2} is nonempty. For i \u2208 \u03a9, let \u03b4ji (i) equal 1 or ri according as\nji = 0 or 2, respectively. Consider now any nonempty subset \u0393 of \u03a9. Then for i \u2208 \u0393, as noted in\n(9), proj(A, i) and proj(A\u2032 , i) are identical if ji = 0, while proj(A, i) and proj(A\u2032 , i) have exactly\none common key if ji = 2. Define H(A, A\u2032 ; \u0393) as the collection of nodes A\u2032\u2032 , such that for every\ni \u2208 \u0393, proj(A\u2032\u2032 , i) is different from proj(A, i)[= proj(A\u2032 , i)] whenever ji = 0, and proj(A\u2032\u2032 , i)\ndoes not include the single key common to proj(A, i) and proj(A\u2032 , i) whenever ji = 2.\nLemma 5.1 With reference to any two distinct nodes A and A\u2032 which are j1 . . . jt th associates\nof each other, where j1 . . . jt \u2208 \u2206, the cardinality of H(A, A\u2032 ; \u0393) defined as above is given by\n\u03c3(\u0393) =\n\nY\n\n\uf8f6\n!\uf8eb\nY\n{bi \u2212 \u03b4ji (i)} \uf8ed bi \uf8f8 .\n\ni\u2208\u0393\n\ni\u2208\u0393\n/\n\n18\n\n\fProof of Lemma 5.1 In view of the definition of the \u03b4ji (i), this is evident from (4) on recalling\nthat every symbol occurs in ri blocks of di by condition (II) of Subsection 2.2.\n\n\u2737\n\nTheorem 5.1 Let \u03bej1 ...jt = \u03a0ti=1 \u03beji (i), where\n\u22121 s\ns\n\u03be0 (i) = 1 \u2212 (1 \u2212 b\u22121\ni ) , \u03be1 (i) = 1, \u03be2 (i) = 1 \u2212 (1 \u2212 ri bi ) , 1 \u2264 i \u2264 t.\n\nThen for s < min(k1 , . . . , kt ),\nfail(s) \u2248 1 \u2212\n\n\u0012\n\nn\nn\u22122\n\n\u0013s\n\n+\n\n\u0012\n\nn\nn\u22122\n\n\u0013s P\n\n\u2206 nj1 ...jt \u03bej1 ...jt\n\nP\n\n\u2206 nj1 ...jt\n\n.\n\nProof of Theorem 5.1 Consider two distinct nodes A and A\u2032 . Let D denote the event that\nthey have at least q(= t) common keys and F denote the event that the link between them fails\nwhen out of the remaining n \u2212 2 nodes, s randomly chosen ones are compromised. Then\nfail(s) = P (F |D) = P (F \u2229 D)/P (D).\n\n(24)\n\nAs in the proof of Theorem 4.1, let E(j1 . . . jt ) denote the event that A and A\u2032 are j1 . . . jt th\nassociates of each other. Then by (10) and (15),\nP (D) =\n\nX\n\nP {E(j1 . . . jt )} =\n\n\u2206\n\nP\n\n\u2206 nj1 ...jt\n\nn\u22121\n\n.\n\n(25)\n\nSimilarly,\nP (F \u2229 D) =\n\nX\n\nP {F \u2229 E(j1 . . . jt )}\n\n\u2206\n\n=\n\nX\n\nP {E(j1 . . . jt )}P {F |E(j1 . . . jt )}\n\n\u2206\n\n=\n\nX nj ...j\nt\n1\n\u2206\n\nn\u22121\n\nP {F |E(j1 . . . jt )}.\n\n(26)\n\nIn order to find an expression for the conditional probability in (26), take any fixed j1 . . . jt \u2208\n\u2206, and condition on the event that A and A\u2032 are j1 . . . jt th associates of each other. Then as\nnoted in the context of Lemma 5.1, the set \u03a9 = {i : 1 \u2264 i \u2264 t, ji = 0 or 2} is nonempty. By (9),\nproj(A, i) and proj(A\u2032 , i) have one or more common keys if and only if i \u2208 \u03a9. For any such i,\nlet Gi denote the event that not all of the key(s) common to proj(A, i) and proj(A\u2032 , i) occur in\none or more of the s randomly chosen nodes that are compromised. Then for the fixed j1 . . . jt\nunder consideration, by the usual union intersection formula,\nP {F |E(j1 . . . jt )} = 1 \u2212 P {\u222ai\u2208\u03a9 Gi } = 1 +\n\nX\n\n\u0393\u2286\u03a9\n\n19\n\n(\u22121)|\u0393| P (\u2229i\u2208\u0393 Gi ),\n\n(27)\n\n\fwhere the sum on the extreme right is over all nonempty subsets \u0393 of \u03a9, and |\u0393| denotes the\ncardinality of \u0393. Note that the right side of (27) depends on j1 . . . jt through \u03a9.\nFor any fixed nonempty subset \u0393 of \u03a9, we now find the probability P (\u2229i\u2208\u0393 Gi ) appearing in\n(27). Denote the s randomly chosen nodes that are compromised by A\u22171 , . . . , A\u2217s . Fix any i \u2208 \u0393,\nso that ji = 0 or 2. First suppose ji = 0. Then proj(A, i) and proj(A\u2032 , i) are identical, and Gi\nhappens if and only if, for each 1 \u2264 l \u2264 s, proj(A\u2217l , i) is different from proj(A, i)[= proj(A\u2032 , i)].\nThe only if part of this claim is obvious. The if part follows because any two distinct blocks\nof di intersect in at most one symbol or key (vide condition (IV) of Subsection 2.2) and s <\nmin(k1 , . . . , kt ). Next, let ji = 2. Then proj(A, i) and proj(A\u2032 , i) have exactly one common\nkey and Gi happens if and only if, for each 1 \u2264 l \u2264 s, proj(A\u2217l , i) does not include this single\ncommon key. Recalling the definition of H(A, A\u2032 ; \u0393), it is now clear that \u2229i\u2208\u0393 Gi happens if and\nonly if each of A\u22171 , . . . , A\u2217s belongs to H(A, A\u2032 ; \u0393). So, as n =\nP (\u2229i\u2208\u0393 Gi ) =\n\n\u03c3(\u0393)\u0001\ns\nn\u22122\u0001\ns\n\n\u2248\n\n\u0012\n\n\u03c3(\u0393)\nn\u22122\n\n\u0013s\n\nQt\n\ni=1 bi ,\n\nby Lemma 5.1, we get\n\ns\n\u03c3(\u0393) s\nn\nn\u22122\nn\n\u0012\n\u0013\n\u0013s Y \u0012\nn\n\u03b4ji (i) s\n=\n.\n1\u2212\nn \u2212 2 i\u2208\u0393\nbi\n\n=\n\n\u0013 \u0012\n\n\u0012\n\n\u0013\n\n(28)\n\nSince \u03beji (i) = 1 for ji = 1, i.e., for i \u2208\n/ \u03a9, and\n\u03b4j (i)\n1\u2212 1\u2212 i\nbi\n\u0012\n\n\u0013s\n\n= \u03beji (i),\n\nfor ji = 0 or 2, i.e., for i \u2208 \u03a9, substitution of (28) in (27) yields\nn\nn\u22122\n\nP {F |E(j1 . . . jt )} \u2248 1 +\n\n\u0012\n\n= 1\u2212\n\n\u0012\n\n= 1\u2212\n\n\u0012\n\nn\nn\u22122\n\n\u0012\n\nn\nn\u22122\n\n= 1\u2212\n\nn\nn\u22122\n\n\u0013s X\n\n(\u22121)|\u0393|\n\n\u0393\u2286\u03a9\n\n\u0013s\n\u0013s\n\u0013s\n\n1\u2212\n\ni\u2208\u0393\n\nn\nn\u22122\n\n+\n\n\u0012\n\n+\n\n\u0012\n\nn\nn\u22122\n\n\u0012\n\nn\nn\u22122\n\n+\n\nY\u0012\n\n\u0013s Y \u0014\ni\u2208\u03a9\n\n\u0013s Y\nt\n\n\u03b4ji (i)\nbi\n\n\u0013s\n\n\u03b4j (i)\n1\u2212 1\u2212 i\nbi\n\u0012\n\n\u0013s \u0015\n\n\u03beji (i)\n\ni=1\n\n\u0013s\n\n\u03bej1 ...jt .\n\n(29)\n\nIf we now substitute (29) in (26) and then substitute (25) and (26) in (24) the result follows. \u2737\nRemark 5.1 The approximation in (28) and hence that in Theorem 5.1 is in the spirit of Lee\nand Stinson (2008). It is quite accurate when n and \u03c3(\u0393) are large and s is relatively small,\nwhich is typically the case.\n\n\u2737\n20\n\n\fRemark 5.2 The condition s < min(k1 , . . . , kt ) in Theorem 5.1 is not severe because typically\ns is not large. Moreover, it can be checked that for the case q = t = 1, Theorem 5.1 remains\nvalid even without this condition.\n\n\u2737\n\nExamples 4.1 and 4.3 are now revisited with a view to illustrating Theorem 5.1. Example 4.4\ncan also be treated in the same way as Example 4.3 and so is not shown here.\nExample 5.1 Example 4.1 (continued). Here t = 1, n = b1 and, irrespective of whether d\u22171 is\na PBIB design with \u03bb1 = 0, \u03bb2 = 1, or a BIB design with \u03bb = 1, we have \u2206 = {2}. Hence\nTheorem 5.1 yields\nfail(s) \u2248 1 \u2212\n\n\u0012\n\nn\nn\u22122\n\n\u0013s\n\n+\n\n\u0012\n\nn\nn\u22122\n\n\u0013s\n\n\u03be2 (1) = 1 \u2212\n\n\u0012\n\nb1 \u2212 r 1\nb1 \u2212 2\n\n\u0013s\n\n.\n\n(30)\n\u2737\n\nRemark 5.3 As a continuation of Remarks 3.1 and 4.3, we now see that the fail(s) values of\nthe linear scheme constructed in Lee and Stinson (2008) also follow from Thoerem 5.1. Since\ntheir scheme has b1 = p2 and r1 = p, on substituting these in our expression (30) we get\nfail(s) \u2248 1 \u2212\n\np2 \u2212 p\np2 \u2212 2\n\n!s\n\n.\n\nThis matches the expression for fail(s) in their Subsection 4.1.1.\n\n\u2737\n\nExample 5.2 Example 4.3 (continued). Here t = 2, \u03b81 (1) > 0, \u03b81 (2) = 0, n = b1 b2 and\n\u2206 = {02, 10, 20, 22}. As noted earlier,\nn02 = \u03b82 (2), n10 = \u03b81 (1), n20 = \u03b82 (1), n22 = \u03b82 (1)\u03b82 (2).\n\n(31)\n\nAlso,\ns\n\u22121 s\n\u03be02 = {1 \u2212 (1 \u2212 b\u22121\n1 ) }{1 \u2212 (1 \u2212 r2 b2 ) },\ns\n\u03be10 = 1 \u2212 (1 \u2212 b\u22121\n2 ) ,\n\u22121 s\ns\n\u03be20 = {1 \u2212 (1 \u2212 r1 b\u22121\n1 ) }{1 \u2212 (1 \u2212 b2 ) },\n\u22121 s\ns\n\u03be22 = {1 \u2212 (1 \u2212 r1 b\u22121\n1 ) }{1 \u2212 (1 \u2212 r2 b2 ) }.\n\nOne can now readily apply Theorem 5.1 to find fail(s).\n\n21\n\n(32)\n\u2737\n\n\f6\n\nApplications\n\nAs mentioned earlier, our method of construction, based on (4) and applicable to any q(\u2265 1),\ncan yield KPSs for widely diverse values of the underlying parameters such as the number of\nnodes n, the number of keys per node k and the key pool size v, thus enabling the practitioner\nto find a suitable KPS depending on the requirements of a given situation. This flexibility arises\nbecause of the freedom in choosing the PBIB or BIB designs d\u22171 , . . . , d\u2217t that one starts with\nwhile applying (4). Furthermore, the analytical results in the last two sections can be applied\nto ensure that the resulting KPSs behave nicely with regard to local connectivity and resiliency,\nas measured by Pr and fail(s).\nIn order to give a flavor of the points noted above without making the presentation too long,\nwe now focus on the case q = 2 and in the next three subsections present three applications where\nd\u22171 is a PBIB design based on the (a) GD, (b) triangular and (c) Latin square type association\nschemes, and d\u22172 is a BIB design; note that these correspond to the setup of Example 4.3. The\nparameter values of the resulting KPSs, obtained via (a), (b) and (c) are seen to be\n(a) n = af (2g + 1), k = (a \u2212 1)f + g, v =\nand g(\u2265 3) satisfies g = 0 or 1 (mod 3),\n(b) n =\n\nm\u0001\n2 (2g + 1),\n\ng is as in (a),\n\nk=\n\nm\u22122\u0001\n+ g,\n2\n\nv=3\n\na\u0001 2\n1\n2 f + 3 (2g + 1)g,\n\nwhere a, f (\u2265 2) are any integers\n\nm\u0001\n1\n4 + 3 (2g + 1)g,\n\nwhere m(\u2265 4) is any integer and\n\n(c) n = p2 (2g + 1), k = k\u0303 + g, v = k\u0303p + 13 (2g + 1)g, where p(\u2265 3) and k\u0303(< p + 1) are integers\nsuch that k\u0303 \u2212 2 mutually orthogonal Latin squares of order p exist, and g is as in (a).\nThus these three applications alone are capable of producing KPSs for a wide range of parameter\nvalues. Moreover, Theorems 4.1 and 5.1 allow us to explore the properties of these KPSs and\nthe examples in the next three subsections show that they can behave quite well with respect\nto Pr and fail(s). Indeed, our construction in (4), coupled with these theorems, can easily allow\nnumerous other choices of d\u22171 and d\u22172 as well, and hence paves the way for obtaining KPSs with\nan even more versatile range of parameter values, while ensuring attractive values for Pr and\nfail(s). In contrast, the existing methods of construction are almost invariably design specific,\ni.e., they employ only BIB designs or only transversal designs and so on, and as a result, it is\nvery difficult for these methods to achieve parameter values as diverse as what is achieved, for\ninstance, in (a)-(c) above. In addition, the existing methods are not always informative about\nthe properties of the resulting KPSs with regard to local connectivity or resiliency. We will\n\n22\n\n\freturn to this comparison in more detail in the concluding section.\n\n6.1\n\nUse of a PBIB design based on the group divisible association scheme\nand a BIB design\n\nSuppose the design d\u22171 in Example 4.3 is a PBIB design based on the group divisible association\nscheme as in Example 2.6, with v1\u2217 = af, b\u22171 =\n\na\u0001 2 \u2217\n2 f , k1\n\n= 2, r1\u2217 = (a \u2212 1)f, \u03bb1 = 0, \u03bb2 = 1. As\n\nseen there, such a d\u22171 exists for all integers a, f (\u2265 2). Also, let the d\u22172 in Example 4.3 be a BIB\ndesign with v2\u2217 = 2g + 1, b\u22172 = 13 (2g + 1)g, k2\u2217 = 3, r2\u2217 = g, \u03bb = 1. Such a BIB design corresponds\nto the Steiner's triple system and it is well known (cf. Kirkman (1847)) that it exists for every\ninteger g(\u2265 3) satisfying g = 0 or 1 (mod 3). Note that the BIB design in Example 2.1 belongs\nto this class with g = 4.\nIn our construction (4), now take t = 2, with d1 and d2 chosen as the dual designs of d\u22171 and\nd\u22172 , respectively. Then recalling Definition 2.2, the parameters of d1 are\nv1 =\n\na\u0001 2\n2 f ,\n\nb1 = af, r1 = 2, k1 = (a \u2212 1)f,\n\n\u03b81 (1) = f \u2212 1, \u03b82 (1) = (a \u2212 1)f, \u03c611,2 (1) = 0, \u03c612,2 (1) = (a \u2212 1)f,\n\n(33)\n\nand the parameters of d2 are\nv2 = 31 (2g + 1)g, b2 = 2g + 1, r2 = 3, k2 = g,\n\u03b81 (2) = 0, \u03b82 (2) = 2g, \u03c622,2 (2) = 2g \u2212 1.\nThe KPS obtained from d1 and d2 via (4) has v = v1 + v2 =\n\na\u0001 2\n2 f\n\n(34)\n+ 13 (2g + 1)g keys and\n\nn = b1 b2 = af (2g + 1) nodes, there being k = k1 + k2 = (a \u2212 1)f + g keys in every node. For\nthis KPS, substitution of (33) and (34) in (22) yields \u03bc12 = 2 + (a \u2212 1)f (2g + 1) and hence from\n(21) and (23) we get\nPr1 =\nPr2 \u2248\n\naf + 2g \u2212 1 + 2(a \u2212 1)f g\n,\naf (2g + 1) \u2212 1\n\u0014\n\u0012\n\u0013\u03b7 \u0015\n\u03bc12\n2(f \u2212 1)g\n1\u2212 1\u2212\n.\naf (2g + 1) \u2212 1\naf (2g + 1) \u2212 2\n\nSimilarly, substitution of (33) and (34) in (31) and (32) yields\nn02 = 2g, n10 = f \u2212 1, n20 = (a \u2212 1)f, n22 = 2(a \u2212 1)f g,\n\u001a\n\u0012\n\u0013 \u001b\u001a\n\u0012\n\u0013s \u001b\n1 s\n3\n\u03be02 =\n1\u2212 1\u2212\n1\u2212 1\u2212\n,\naf\n2g + 1\n23\n\n\f\u03be10\n\u03be20\n\u03be22\n\ns\n1\n= 1\u2212 1\u2212\n,\n2g + 1\n\u0013s \u001b \u001a\n\u0012\n\u0013s \u001b\n\u001a\n\u0012\n1\n2\n1\u2212 1\u2212\n,\n=\n1\u2212 1\u2212\naf\n2g + 1\n\u001a\n\u0012\n\u0013s \u001b \u001a\n\u0012\n\u0013s \u001b\n2\n3\n=\n1\u2212 1\u2212\n1\u2212 1\u2212\n.\naf\n2g + 1\n\n\u0012\n\n\u0013\n\nTheorem 5.1 can now be easily used to find fail(s).\nOn varying the values of a, f and g we can get various choices of d\u22171 and d\u22172 , leading to KPSs\nfor a variety of parameter values. Two illustrative examples follow.\nExample 6.1 Let a = 2, f = 21, g = 25. Then for the resulting KPS, we have v = 866,\nn = 2142, k = 46, while the values of Pr1 , Pr2 , Pr = Pr1 + Pr2 for various \u03b7 and the values of\nfail(s) for various s are as:\n\u03b7\n\n1\n\n2\n\n3\n\n4\n\n5\n\n10\n\n15\n\n20\n\nPr1\n\n0.5329\n\n0.5329\n\n0.5329\n\n0.5329\n\n0.5329\n\n0.5329\n\n0.5329\n\n0.5329\n\nPr2\n\n0.2342\n\n0.3510\n\n0.4092\n\n0.4382\n\n0.4527\n\n0.4667\n\n0.4671\n\n0.4671\n\nPr\n\n0.7671\n\n0.8839\n\n0.9421\n\n0.9711\n\n0.9856\n\n0.9996\n\n1.0000\n\n1.0000\n\ns\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n8\n\n10\n\nfail(s)\n\n0.0021\n\n0.0089\n\n0.0198\n\n0.0340\n\n0.0510\n\n0.0703\n\n0.1141\n\n0.1624\n\n\u2737\n\nExample 6.2 Let a = 2, f = 23, g = 22. The resulting KPS has v = 859, n = 2070, k = 45\nand the values of Pr1 , Pr2 , Pr = Pr1 + Pr2 and fail(s) are as:\n\n6.2\n\n\u03b7\n\n1\n\n2\n\n3\n\n4\n\n5\n\n10\n\n15\n\n20\n\nPr1\n\n0.5321\n\n0.5321\n\n0.5321\n\n0.5321\n\n0.5321\n\n0.5321\n\n0.5321\n\n0.5321\n\nPr2\n\n0.2346\n\n0.3516\n\n0.4099\n\n0.4390\n\n0.4535\n\n0.4675\n\n0.4679\n\n0.4679\n\nPr\n\n0.7667\n\n0.8837\n\n0.9420\n\n0.9711\n\n0.9856\n\n0.9996\n\n1.0000\n\n1.0000\n\ns\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n8\n\n10\n\nfail(s)\n\n0.0022\n\n0.0093\n\n0.0206\n\n0.0352\n\n0.0527\n\n0.0724\n\n0.1169\n\n0.1658\n\n\u2737\n\nUse of a PBIB design based on the triangular association scheme and a\nBIB design\n\nNow suppose the design d\u22171 in Example 4.3 is a triangular PBIB design as constructed in Example 2.7. Thus d\u22171 has v1\u2217 =\n\nm\u0001\n2 ,\n\nb\u22171 = 3\n\nm\u0001\n4 ,\n\nk1\u2217 = 2, r1\u2217 =\n\nm\u22122\u0001\n2 ,\n\n\u03bb1 = 0, \u03bb2 = 1, and as seen\n\nthere, such a d\u22171 exists for every integer m(\u2265 4). Also, let us continue with d\u22172 as the BIB design\nconsidered in Subsection 6.1.\n24\n\n\fIn our construction (4), take t = 2, with d1 and d2 chosen as the dual designs of d\u22171 and d\u22172 ,\nrespectively. Then recalling Definition 2.2, the parameters of d1 are\nv1 = 3\n\nm\u0001\n4 ,\n\nb1 =\n\n\u03b81 (1) = 2(m \u2212 2), \u03b82 (1) =\n\nm\u0001\n2 ,\n\nm\u22122\u0001\n2 ,\n\nr1 = 2, k1 =\n\nm\u22122\u0001\n2 ,\n\nm\u22123\u0001\n2 ,\n\n(35)\n\nm\u22122\u0001\n+g\n2\n\nkeys in every\n\n\u03c611,2 (1) = m \u2212 3, \u03c612,2 (1) =\n\nwhile the parameters of d2 are as in (34). The KPS obtained from d1 and d2 via (4) has\nv=3\n\nm\u0001\n1\n4 + 3 (2g\n\n+ 1)g keys and n =\n\nm\u0001\n2 (2g\n\n+ 1) nodes, there being k =\n\nnode. For this KPS, substitution of (34) and (35) in (22) yields \u03bc12 = 2(m \u2212 2) +\nand hence from (21) and (23)\nPr1 =\nPr2 \u2248\n\nm\u22123\u0001\n2 (2g\n\n+ 1)\n\nm(m \u2212 1) + 4g \u2212 2 + 2(m \u2212 2)(m \u2212 3)g\n,\nm(m \u2212 1)(2g + 1) \u2212 2\n\u0014\n\u0012\n\u0013\u03b7 \u0015\n2\u03bc12\n8(m \u2212 2)g\n1\u2212 1\u2212\n.\nm(m \u2212 1)(2g + 1) \u2212 2\nm(m \u2212 1)(2g + 1) \u2212 4\n\nSimilarly, substitution of (34) and (35) in (31) and (32) yields\nn02 =\n\u03be02 =\n\u03be10 =\n\u03be20 =\n\u03be22 =\n\n!\n\nm\u22122\n2g, n10 = 2(m \u2212 2), n20 =\n, n22 = (m \u2212 2)(m \u2212 3)g,\n2\n\u0013s \u001b \u001a\n\u0012\n\u0013s \u001b\n\u001a\n\u0012\n3\n2\n1\u2212 1\u2212\n,\n1\u2212 1\u2212\nm(m \u2212 1)\n2g + 1\n\u0012\n\u0013s\n1\n1\u2212 1\u2212\n,\n2g + 1\n\u0013s \u001b \u001a\n\u0012\n\u0013s \u001b\n\u001a\n\u0012\n1\n4\n1\u2212 1\u2212\n,\n1\u2212 1\u2212\nm(m \u2212 1)\n2g + 1\n\u001a\n\u0012\n\u0013s \u001b \u001a\n\u0012\n\u0013s \u001b\n4\n3\n1\u2212 1\u2212\n1\u2212 1\u2212\n.\nm(m \u2212 1)\n2g + 1\n\nTheorem 5.1 can now be employed to find fail(s). Again, on varying m and g we can get KPSs\nfor a variety of parameter values. Two illustrative examples follow.\n\nExample 6.3 Let m = 9 and g = 27. The resulting KPS has v = 873, n = 1980, k = 48 and\nthe values of Pr1 , Pr2 , Pr = Pr1 + Pr2 and fail(s) are as:\n\u03b7\n\n1\n\n2\n\n3\n\n4\n\n5\n\n10\n\n15\n\n20\n\nPr1\n\n0.6180\n\n0.6180\n\n0.6180\n\n0.6180\n\n0.6180\n\n0.6180\n\n0.6180\n\n0.6180\n\nPr2\n\n0.1620\n\n0.2553\n\n0.3091\n\n0.3400\n\n0.3578\n\n0.3805\n\n0.3819\n\n0.3820\n\nPr\n\n0.7800\n\n0.8733\n\n0.9271\n\n0.9580\n\n0.9758\n\n0.9985\n\n0.9999\n\n1.0000\n\ns\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n8\n\n10\n\nfail(s)\n\n0.0021\n\n0.0094\n\n0.0210\n\n0.0362\n\n0.0544\n\n0.0750\n\n0.1216\n\n0.1728\n\n25\n\n\u2737\n\n\fExample 6.4 Let m = 8 and g = 31. The resulting KPS has v = 861, n = 1764, k = 46 and\nthe values of Pr1 , Pr2 , Pr = Pr1 + Pr2 and fail(s) are as:\n\u03b7\n\n1\n\n2\n\n3\n\n4\n\n5\n\n10\n\n15\n\n20\n\nPr1\n\n0.5780\n\n0.5780\n\n0.5780\n\n0.5780\n\n0.5780\n\n0.5780\n\n0.5780\n\n0.5780\n\nPr2\n\n0.1538\n\n0.2515\n\n0.3136\n\n0.3531\n\n0.3782\n\n0.4175\n\n0.4215\n\n0.4220\n\nPr\n\n0.7318\n\n0.8295\n\n0.8916\n\n0.9311\n\n0.9562\n\n0.9955\n\n0.9995\n\n1.0000\n\ns\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n8\n\n10\n\nfail(s)\n\n0.0023\n\n0.0103\n\n0.0230\n\n0.0396\n\n0.0593\n\n0.0815\n\n0.1312\n\n0.1853\n\n6.3\n\n\u2737\n\nUse of a PBIB design based on the Latin square type association scheme\nand a BIB design\n\nNow suppose the design d\u22171 in Example 4.3 is a PBIB design based on the Latin square type\nassociation scheme and having parameters v1\u2217 = p2 , b\u22171 = k\u0303p, k1\u2217 = p, r1\u2217 = k\u0303, \u03bb1 = 0, \u03bb2 = 1.\nSuch a design exists when p(\u2265 3) and k\u0303(< p + 1) are such that k\u0303 \u2212 2 mutually orthogonal Latin\nsquares of order p are available, cf. Definition 2.7. Hence following Definition 2.2, its dual design\nd1 has parameters\nv1 = k\u0303p, b1 = p2 , r1 = p, k1 = k\u0303, \u03b81 (1) = (p \u2212 1)(p + 1 \u2212 k\u0303), \u03b82 (1) = k\u0303(p \u2212 1),\n\u03c611,2 (1) = k\u0303(p \u2212 k\u0303), \u03c612,2 (1) = k\u0303(k\u0303 \u2212 1).\n\n(36)\n\nWe continue with d2 as in the last two subsections and (34) continues to hold for d2 . In our\nconstruction (4), now take t = 2, with d1 and d2 chosen as above.\nClearly, the KPS obtained from d1 and d2 via (4) has v = k\u0303p + 13 (2g + 1)g keys and n =\np2 (2g + 1) nodes, there being k = k\u0303 + g keys in every node. For this KPS, substitution of (34)\nand (36) in (22) yields \u03bc12 = 2 + 2k\u0303(p \u2212 k\u0303) + k\u0303(k\u0303 \u2212 1)(2g + 1) and hence from (21) and (23) we\nget\nPr1 =\n\np2 + 2g \u2212 1 + 2k\u0303(p \u2212 1)g\n,\np2 (2g + 1) \u2212 1\n\nPr2 \u2248\n\n\u03bc12\n2(p \u2212 1)(p + 1 \u2212 k\u0303)g\n1\u2212 1\u2212 2\n2\np (2g + 1) \u2212 1\np (2g + 1) \u2212 2\n\u0014\n\n\u0012\n\n\u0013\u03b7 \u0015\n\n.\n\nSimilarly, substitution of (34) and (36) in (31) and (32) yields\nn02 = 2g, n10 = (p \u2212 1)(p + 1 \u2212 k\u0303), n20 = k\u0303(p \u2212 1), n22 = 2k\u0303(p \u2212 1)g,\n\n26\n\n\f\u03be02 =\n\u03be10 =\n\u03be20 =\n\u03be22 =\n\ns\n1 s\n3\n1\u2212 1\u2212 2\n1\u2212 1\u2212\n,\np\n2g + 1\n\u0013s\n\u0012\n1\n,\n1\u2212 1\u2212\n2g + 1\n\u001a\n\u0012\n\u0013s \u001b \u001a\n\u0012\n\u0013s \u001b\n1\n1\n1\u2212 1\u2212\n1\u2212 1\u2212\n,\np\n2g + 1\n\u0013s \u001b \u001a\n\u0012\n\u0013s \u001b\n\u001a\n\u0012\n3\n1\n1\u2212 1\u2212\n.\n1\u2212 1\u2212\np\n2g + 1\n\n\u001a\n\n\u0012\n\n\u0013 \u001b\u001a\n\n\u0012\n\n\u0013 \u001b\n\nTheorem 5.1 can now be easily used to find fail(s). Again, KPSs for a variety of parameter values\ncan be obtained by varying the values of p, k\u0303 and g. Two illustrative examples follow.\nExample 6.5 Let p = 17, k\u0303 = 12, g = 28. Then the resulting KPS has v = 736, n =\n16473, k = 40 and the values of Pr1 , Pr2 , Pr = Pr1 + Pr2 and fail(s) are as:\n\u03b7\n\n1\n\n2\n\n3\n\n4\n\n5\n\n10\n\n15\n\n20\n\nPr1\n\n0.6736\n\n0.6736\n\n0.6736\n\n0.6736\n\n0.6736\n\n0.6736\n\n0.6736\n\n0.6736\n\nPr2\n\n0.1515\n\n0.2327\n\n0.2762\n\n0.2995\n\n0.3120\n\n0.3258\n\n0.3264\n\n0.3264\n\nPr\n\n0.8251\n\n0.9063\n\n0.9498\n\n0.9731\n\n0.9856\n\n0.9994\n\n1.0000\n\n1.0000\n\ns\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n8\n\n10\n\nfail(s)\n\n0.0030\n\n0.0115\n\n0.0244\n\n0.0410\n\n0.0606\n\n0.0826\n\n0.1320\n\n0.1857\n\n\u2737\n\nExample 6.6 Now let p = 19, k\u0303 = 13, g = 28. Then the resulting KPS has v = 779,\nn = 20577, k = 41 and the values of Pr1 , Pr2 , Pr = Pr1 + Pr2 and fail(s) are as:\n\n7\n\n\u03b7\n\n1\n\n2\n\n3\n\n4\n\n5\n\n10\n\n15\n\n20\n\nPr1\n\n0.6571\n\n0.6571\n\n0.6571\n\n0.6571\n\n0.6571\n\n0.6571\n\n0.6571\n\n0.6571\n\nPr2\n\n0.1508\n\n0.2353\n\n0.2826\n\n0.3091\n\n0.3240\n\n0.3419\n\n0.3428\n\n0.3429\n\nPr\n\n0.8079\n\n0.8924\n\n0.9397\n\n0.9662\n\n0.9811\n\n0.9990\n\n0.9999\n\n1.0000\n\ns\n\n1\n\n2\n\n3\n\n4\n\n5\n\n6\n\n8\n\n10\n\nfail(s)\n\n0.0028\n\n0.0104\n\n0.0221\n\n0.0372\n\n0.0551\n\n0.0753\n\n0.1209\n\n0.1710\n\n\u2737\n\nShared key discovery\n\nA major advantage of our construction in (4) is that it makes the task of discovering the keys\nshared by any two nodes of the resulting KPS quite straightforward. This happens because of\nthe following reasons:\n(a) Consider any two distinct nodes A and A\u2032 . From (4) and Definition 3.1 it is clear that\nproj(A, i) and proj(A\u2032 , i\u2032 ) do not have any common symbol whenever i 6= i\u2032 . Hence, the set\n27\n\n\fof keys (symbols) common to A and A\u2032 equals the union of the sets of symbols common to\nproj(A, i) and proj(A\u2032 , i), the union being over all i, 1 \u2264 i \u2264 t. As a result, in order to discover\nthe keys shared by A and A\u2032 , it suffices to find the set of symbols common to proj(A, i) and\nproj(A\u2032 , i), separately for each i, 1 \u2264 i \u2264 t. This is much simpler than comparing the entire sets\nof keys in A and A\u2032 .\n(b) Turning now to the identification of the set of symbols common to proj(A, i) and\nproj(A\u2032 , i) for any i, from Definition 3.1 we see that this set is nothing but the set of symbols common to two blocks of di . Therefore, in view of the duality between di and the design d\u2217i\nthat we originally started with, this set is simply the set of blocks labels where the corresponding two symbols of d\u2217i occur together. Thus identification of this set becomes particularly easy\nif the symbols and blocks in d\u2217i can be properly labeled so as to obtain algebraically a listing\nof the symbols appearing in each block of d\u2217i . Since the d\u2217i considered here are PBIB or BIB\ndesigns, such labeling is possible under wide generality. For instance, the commonly used cyclic\nconstructions of these designs, based on one or more initial sets, readily allow such labeling.\nThis kind of labeling is also possible for the constructions described in Examples 2.6 and 2.7.\nIndeed in construction (4), each d\u2217i can potentially be any PBIB design with \u03bb1 = 0, \u03bb2 = 1\nor any BIB design with \u03bb = 1. Because of such diversity, it is unrealistic in the limited space\nof this paper to attempt to give an account of the labeling of blocks and symbols, mentioned in\n(b) above, encompassing all possibilities for d\u2217i , i = 1, . . . , t. For illustration, therefore, we now\nrevisit the setup of Subsection 6.1 in some detail; those of Subsections 6.2 and 6.3 are briefly\ntouched upon later.\nRecall that in Subsection 6.1, d\u22171 is a group divisible PBIB design constructed as in Example 2.6. Also d\u22172 is a BIB design belonging to the Steiner's triple system, and as seen below,\nit is generated via a cyclic construction. The parameters of these designs are as described in\nSubsection 6.1. The facts noted below in (A) and (B) for these two designs will be useful.\n(A) Labels for symbols and blocks of d\u22171 : Denote the af symbols of d\u22171 by ordered pairs \u03b2\u03b3,\nwhere \u03b2\u03b3 is the \u03b3th symbol of the \u03b2th group; 1 \u2264 \u03b2 \u2264 a and 1 \u2264 \u03b3 \u2264 f . Then as indicated\nin Example 2.6, its\n\na\u0001 2\n2 f\n\nblocks are {\u03b2\u03b3, \u03b2\u0303\u03b4}, and let these be labeled as \u03b2 \u03b2\u0303\u03b3\u03b4, say, where\n\n1 \u2264 \u03b2 < \u03b2\u0303 \u2264 a and \u03b3, \u03b4 \u2208 {1, 2, . . . , f }. Thus, any two distinct symbols \u03b2\u03b3 and \u03b2\u0303\u03b4 occur\ntogether in some block if and only if \u03b2 6= \u03b2\u0303, and if this happens then the unique block where\nthey occur together has label \u03b2 \u03b2\u0303\u03b3\u03b4 if \u03b2 < \u03b2\u0303 or \u03b2\u0303\u03b2\u03b4\u03b3 if \u03b2\u0303 < \u03b2. Let the label for this block be\nidentified as L1 (\u03b2\u03b3, \u03b2\u0303\u03b4).\n28\n\n\fSimilarly, the (a \u2212 1)f blocks where any symbol \u03b2\u03b3 occurs have labels (i) \u03b2 \u03b2\u0303\u03b3\u03b4 , where\n\u03b2 < \u03b2\u0303 \u2264 a and \u03b4 \u2208 {1, 2, . . . , f }, and (ii) \u03b2\u0303\u03b2\u03b4\u03b3 where 1 \u2264 \u03b2\u0303 < \u03b2 and \u03b4 \u2208 {1, 2, . . . , f }. Let\nV1 (\u03b2\u03b3) be the collection of these (a \u2212 1)f block labels.\n\n\u2737\n\n(B) Labels for symbols and blocks of d\u22172 : Let g = 1 mod 3 in d\u22172 , i.e., g = 3h + 1 for some\ninteger h(\u2265 1). So d\u22172 involves 6h + 3 symbols and (2h + 1)(3h + 1) blocks. Denote these symbols\nof d\u22172 by \u03b6u where \u03b6 \u2208 {0, 1, . . . , 2h}, u = 0, 1, 2. Then, the blocks of d\u22172 can be represented and\nlabeled as\n{(y + z)x , (z \u2212 y)x , zx+1 } = xyz, say, and {z0 , z1 , z2 } = 0z, say,\nwhere x, y and z range over {0, 1, 2}, {1, . . . , h} and {0, 1, . . . , 2h}, respectively, and the subscript\nx + 1 is reduced modulo 3, while y + z and z \u2212 y are reduced modulo 2h + 1. There is a unique\nblock where two distinct symbols \u03b6u and \u03b6\u0303w , (\u03b6, u) 6= (\u03b6\u0303, w), occur together and let the label for\nthis block be identified as L2 (\u03b6u , \u03b6\u0303w ).\nSince y ranges over {1, . . . , h}, the following are not hard to observe:\n(a) Let u = w and \u03b6 6= \u03b6\u0303. Then L2 (\u03b6u , \u03b6\u0303u ) = uyz, where z = (\u03b6 + \u03b6\u0303)/2 mod 2h + 1 and\ny = (\u03b6 \u2212 \u03b6\u0303)/2 or (\u03b6\u0303 \u2212 \u03b6)/2 mod 2h + 1, depending on whether (\u03b6 \u2212 \u03b6\u0303)/2 mod 2h + 1 belongs to\n{1, . . . , h} or {h + 1, . . . , 2h}.\n(b) Let u 6= w and \u03b6 = \u03b6\u0303. Then L2 (\u03b6u , \u03b6w ) = 0\u03b6.\n(c) Let u 6= w and \u03b6 6= \u03b6\u0303. Then L2 (\u03b6u , \u03b6\u0303w ) = xyz, where (x, z) = (u, \u03b6\u0303) or (w, \u03b6), depending on\nwhether w = u + 1 or u = w + 1 mod 3 and y = \u03b6 \u2212 \u03b6\u0303 or \u03b6\u0303 \u2212 \u03b6 mod 2h + 1, depending on whether\n\u03b6 \u2212 \u03b6\u0303 mod 2h + 1 belongs to {1, . . . , h} or {h + 1, . . . , 2h}.\nSimilarly, the g(= 3h + 1) blocks where any symbol \u03b6u occurs are labeled as (i) uyz, where\ny \u2208 {1, . . . , h} and z = \u03b6 \u00b1 y mod 2h + 1, (ii) (u \u2212 1)y\u03b6, where y \u2208 {1, . . . , h} and u \u2212 1 is reduced\nmod 3, and (iii) 0\u03b6. Let V2 (\u03b6u ) be the collection of these 3h + 1 block labels.\n\n\u2737\n\nReturning to the setup of Subsection 6.1, consider now the KPS constructed as in (4),\nwith t = 2 and d1 and d2 chosen as the dual designs of d\u22171 and d\u22172 , respectively, where d\u22171 and\nd\u22172 are as detailed in the facts (A) and (B) above. As seen in Subsection 6.1, this KPS has\nv =\n\na\u0001 2\n2 f\n\n+ 13 (2g + 1)g =\n\na\u0001 2\n2 f\n\n+ (2h + 1)(3h + 1) keys and n = af (6h + 3) nodes. Since d1\n\nand d2 are obtained by interchanging the roles of symbols and blocks in d\u22171 and d\u22172 , respectively,\nit is clear from (4) that the v keys correspond to the block labels of d\u22171 and d\u22172 , while the n\nnodes correspond to ordered pairs whose first member is a symbol of d\u22171 and second member is\na symbol of d\u22172 .\nThus, using the facts in (A) and (B), the v keys can be denoted by \u03b2 \u03b2\u0303\u03b3\u03b4, xyz and 0z, where\n29\n\n\f1 \u2264 \u03b2 < \u03b2\u0303 \u2264 a and \u03b3, \u03b4 \u2208 {1, 2, . . . , f }, while x, y and z range over {0, 1, 2}, {1, . . . , h} and\n{0, 1, . . . , 2h}, respectively. Similarly, the n nodes can be labeled as (\u03b2\u03b3, \u03b6u ), where 1 \u2264 \u03b2 \u2264\na, 1 \u2264 \u03b3 \u2264 f , and u and \u03b6 range over {0, 1, 2} and {0, 1, . . . , 2h}, respectively. Then clearly, the\nkeys appearing in any node (\u03b2\u03b3, \u03b6u ) are given by the labels of the blocks of d\u22171 containing the\nsymbol \u03b2\u03b3 and the labels of the blocks of d\u22172 containing the symbol \u03b6u . Hence, as discussed in\nthe beginning of this section, the keys shared by two distinct nodes (\u03b2\u03b3, \u03b6u ), and (\u03b2\u0303\u03b4, \u03b6 \u0303w ) are\ngiven by the labels of the blocks of d\u22171 containing both \u03b2\u03b3 and \u03b2\u0303\u03b4 and the labels of the blocks of\nd\u22172 containing both \u03b6u and \u03b6\u0303w , i.e., using the facts noted in (A) and (B), these shared keys are\nas described below:\n(i) the keys in V1 (\u03b2\u03b3) and key L2 (\u03b6u , \u03b6\u0303w ), if \u03b2\u03b3 = \u03b2\u0303\u03b4 and (\u03b6, u) 6= (\u03b6\u0303, w);\n(ii) the keys in V2 (\u03b6u ), if \u03b2 = \u03b2\u0303, \u03b3 6= \u03b4 and (\u03b6, u) = (\u03b6\u0303, w);\n(iii) the key L1 (\u03b2\u03b3, \u03b2\u0303\u03b4) and the keys in V2 (\u03b6u ), if \u03b2 6= \u03b2\u0303 and (\u03b6, u) = (\u03b6\u0303, w);\n(iv) the key L2 (\u03b6u , \u03b6w ) if \u03b2 = \u03b2\u0303, \u03b3 6= \u03b4, and (\u03b6, u) 6= (\u03b6\u0303, w);\n(v) the keys L1 (\u03b2\u03b3, \u03b2\u0303\u03b4) and L2 (\u03b6u , \u03b6\u0303w ) if \u03b2 6= \u03b2\u0303 and (\u03b6, u) 6= (\u03b6\u0303, w)\nThus the keys shared by any two distinct nodes can be found readily from the node labels.\nConsider any two nodes A and A\u2032 in each other's neighborhood and by our construction as\ndescribed above, suppose they are assigned labels (\u03b2\u03b3, \u03b6u ) and (\u03b2\u0303\u03b4, \u03b6 \u0303w ), respectively. In the\nshared-key discovery phase, node A only broadcasts the four values \u03b2, \u03b3, \u03b6 and u. Once node A\u2032\nreceives these four values, it simply checks them against the corresponding four values in its own\nlabel, decides on one of the five cases in (i)-(v) above and accordingly, it immediately identifies\nits common keys with A. Thus there is no need to solve any equations nor any complicated\ncomputations are involved. Path-key establishment is also similarly straightforward.\nFor further illustration, we revisit the second example of Subsection 6.1, where a = 2, f = 23\nand g = 22. Then, as discussed above, the keys of the resulting KPS can be denoted by\n12\u03b3\u03b4, xyz and 0z, where \u03b3, \u03b4 \u2208 {1, 2, . . . , 23}, while x, y and z range over {0, 1, 2}, {1, . . . , 7}\nand {0, 1, . . . , 14}, respectively. Similarly, the nodes of this KPS can be labeled as (\u03b2\u03b3, \u03b6u ) where\n\u03b2 = 1 or 2, 1 \u2264 \u03b3 \u2264 23, and u and \u03b6 range over {0, 1, 2} and {0, 1,. . . , 14}, respectively. From\n(i) above, the keys shared, for example, by the nodes (16, 40 ) and (16, 60 ) are 126\u03b4, 1 \u2264 \u03b4 \u2264 23,\nwhich constitute V1 (16), and L2 (40 , 60 ) = 015. Similarly, from (v) above, the nodes (22, 51 ) and\n(13, 62 ) share the keys L1 (22, 13) = 1232 and L2 (51 , 62 ) = 116.\nThe other applications considered in Section 6 allow equally simple discovery of shared keys.\nThe symbols and blocks of the triangular PBIB design in Subsection 6.2 can be represented along\n30\n\n\fthe lines of (A) above. Also, following Lee and Stinson (2008), the blocks of d1 in Subsection 6.3\ncan be so labeled that one can readily identify the common symbol, if any, between two given\nblocks. Furthermore, if g = 0 mod 3 for the BIB design d\u22172 , then one can represent its symbols\nand blocks in a manner similar to (B) above. These representations readily yield the counterparts\nof V1 , V2 , L1 and L2 for these designs. As a result, for constructions involving these designs,\nkeys shared by any two distinct nodes can again be found easily from the node labels.\n\n8\n\nComparison of our method with some existing ones\n\nIn this paper, we have given a general method for construction of KPSs using duals d1 , . . . , dt\nof PBIB or BIB designs. The most important features of our method can be summarized as\nfollows:\n(i) It is applicable to any prespecified intersection threshold q \u2265 1.\n(ii) It allows the construction of KPSs for a wide spectrum of parameter values, namely, the\nnumber of nodes n, the number of keys per node k and the key pool size v, thus enabling the\nuser to find a suitable KPS in a given context.\n(iii) It ensures that n is multiplicative in the numbers of blocks of d1 , . . . , dt while k is additive\nin the block sizes of these designs. This allows a large n and, at the same time, keeps k in check.\n(iv) It comes along with explicit formulae for the local connectivity and resiliency metrics as\ngiven by Pr and fail(s). It also keeps the tasks of shared key discovery and path key establishment\nsimple.\nAs seen earlier, for instance, in the beginning of Section 6 and in Remarks 4.1, 4.2, because\nof (i)-(iv) above, our method has several advantages compared to the existing ones. We now\nindicate these advantages in some more detail.\nFirst note that in contrast to (i), the existing methods based on combinatorial designs are\ntypically meant for specific values of q, such as q = 1 in Camtepe and Yener (2004, 2007), Lee\nand Stinson (2005a), Chakrabarty et al. (2006), Dong et al. (2008), Ruj and Roy (2007) and\nRuj et al. (2009), or separately for q = 1 and q = 2 in Lee and Stinson (2008).\nNext, as a consequence of (ii), our method allows us to obtain KPSs for networks where the\nnumber of nodes n need not be of any specialized form, such as the forms p(p \u2212 1)/2 or p(p \u2212 1)\nas in Ruj and Roy (2007), or the forms p2 (for q = 1) or p3 (for q = 2), p a prime/prime power,\nas in Lee and Stinson (2008). Furthermore, because of (iii) and (iv), this can be achieved with\n\n31\n\n\fa control on the number of keys k per node, while assuring good values of the performance\nmetrics. To understand why this is important, let q = 2 and suppose we start with a scheme\nof Lee and Stinson (2008) with n equal to the lowest prime power of the form p3 that exceeds\nthe target number of nodes. If we then discard the unnecessary node allocations to get the final\nscheme for use, this final scheme will not preserve the Pr and fail(s) values of the original scheme\nand hence the properties of the final scheme in this regard can become quite erratic. This is\nbecause, these performance metrics of the original scheme depend on the pattern of the keys\nallocated to the different nodes, this allocation having been done by exploiting the structure\nof some combinatorial design, and once a large number of the allocated nodes are discarded,\nthe underlying combinatorial structure is disrupted, leading to a scheme with uncertain local\nconnectivity and resiliency properties.\nFor illustration, suppose it is desired to obtain a KPS with about 16500 nodes. Then our\nExample 6.5 gives a scheme with 16473 nodes with demonstrated good values of the performance\nmetrics. The closest higher prime power of the form p3 is 273 = 19683. If we start with the\nscheme of Lee and Stinson (2008) with allocation for 19683 nodes, we will have to delete the\nallocation for about (19683-16500=)3183 nodes constituting 16.17% of the original 19683 nodes.\nAfter such large scale deletion, the Pr and fail(s) values of the final scheme very much depend on\nthe particular nodes deleted and hence become quite arbitrary. Similarly, if about 20500 nodes\nare needed, then our Example 6.6 gives a scheme with 20577 nodes and assured properties\nwhile the nearest scheme of Lee and Stinson (2008) with 293 = 24389 nodes entails a deletion\nof about 3889, i.e., 15.95%, of the nodes, leading to unpredictable performance. In either of\nthese situations, the constructions in Ruj and Roy (2007), with n = p(p \u2212 1)/2 or p(p \u2212 1) and\nk = 2(p \u2212 2), can bring n close to the target but at the cost of prohibitively large (i.e., 250 or\neven larger) values of k. In contrast, the schemes in our Examples 6.5 and 6.6 involve only 40\nand 41 keys per node. The additive nature of k in our construction, as mentioned in (iii) above,\nhelps in achieving this.\nFinally, as noted in (iv), our method comes along with explicit and readily applicable formulae for Pr = Pr1 + Pr2 and fail(s), and also keeps the tasks of shared key discovery and path\nkey establishment simple. Not all of these aspects have been explored in many of the existing\nconstructions of KPSs via combinatorial designs, and even when this is done, analytical results\non Pr and fail(s) are not always available. For example, Dong et al. (2008) studied only Pr1\nand fail(1) for their scheme. Again, as seen in Remark 4.2, the quantity Pr2 in the Lee and\n32\n\n\fStinson (2008) scheme for q = 2 does not admit an explicit expression and its calculation calls for\ndesign specific numerical enumeration which can be difficult when the number of nodes is large.\nSimilarly, Ruj and Roy (2007) and Ruj et al. (2009) gave some bounds on the expected number\nof links that will be broken if a specified number of nodes are compromised in their schemes\nand reported associated simulation results, but did not study fail(s). Incidentally, their schemes\nhave Pr1 = 1, a feature shared also by our construction when the initial designs d\u22171 , . . . , d\u2217t are\nall taken as BIB designs with \u03bb = 1; cf. Example 4.1. However, as argued in Lee and Stinson\n(2008), a scheme with Pr1 = 1 will have poor connectivity in the event of node compromise as\nreflected in large fails(s) values. This is why we have focused on schemes with good values of\nPr rather than attempting to have Pr1 = 1.\nTo sum up, our method of construction is a broad spectrum one which supplements and\nimproves upon the existing methods from various considerations. It is applicable to any intersection threshold q \u2265 1 and allows the construction of KPSs for widely diverse parameter values.\nThe fact that it is supported by a detailed study of the performance metrics, including explicit\nformulae for Pr and fail(s), further enhances the scope of its application.\n\nAcknowledgement\nThe authors thank two referees for their insightful comments which led to an enhancement of\nthe contents and presentation in this version. The work of AD was supported by the Indian\nNational Science Academy under the Senior Scientist Scheme of the Academy. The work of RM\nwas supported by the J. C. Bose National Fellowship of the Govt. of India and a grant from the\nIndian Institute of Management Calcutta.\n\nReferences\nBlackburn, S. R., Etzion, T., Martin, K. M., and Paterson, M. B. (2010). Distinct Difference Configurations: Multihop Paths and Key Predistribution in Sensor Networks. IEEE\nTransactions on Information Theory. 56, 3961-3972.\nCarmen, D., Kruus, P., and Matt, B. (2000). Constraints and approaches for distributed sensor\nnetwork security. Tech. rep. 00-010, NAI Labs.\nCamtepe, S. and Yener, B. (2004). Combinatorial design of key predistribution mechanisms\nfor wireless sensor networks. In ESORICS 2004 Proceedings. Lecture Notes in Computer\n33\n\n\fScience, 3193, Springer, 293-308.\nCamtepe, S. and Yener, B. (2007). Combinatorial design of key predistribution mechanisms for\nwireless sensor networks. IEEE/ACM Trans. Network. 15, 346-358.\nChakrabarti, D., Maitra, S., and Roy, B. (2006). A key-predistribution scheme for wireless sensor\nnetworks: merging blocks in combinatorial design. International Journal of Information\nSecurity, 5, 105-114\nChan, H., Perrig, A., and Song, D. (2003). Random key predistribution schemes for sensor\nnetworks. In Proceedings of the 2003 Symposium on Security and Privacy. IEEE Computer\nSociety, 197-213.\nClatworthy, W. H. (1973). Tables of Two-associate Partially Balanced Designs. Natl. Bur.\nStandards Appl. Math. Ser. No. 63. Washington D.C.\nDong, J., Pei, D., and Wang, X. (2008). A key predistribution scheme based on 3-designs. In\nINSCRYPT 2007. Lecture Notes in Computer Science, 4990, 81-92, Springer, Berlin.\nDey, A. Incomplete Block Designs. (2010). Hindustan Book Agency, New Delhi\nDu, W., Deng, J., Han, Y., Varshney, P., Katz, J., and Khalili, A. (2005). A pairwise key\npredistribution scheme for wireless sensor networks. ACM Trans. Inform. Syst. Secur. 8,\n228-258.\nEschenauer, L. and Gligor, V. (2002). A key-management scheme for distributed sensor networks. In Proceedings of the 9th ACM Conference on Computer and Communications Security. ACM Press, 41-47\nKirkman, T. P. (1847). On a problem in combinations. Cambridge and Dublin Math. J. 2,\n192-204.\nLee, J. and Stinson, D. (2005a). A combinatorial approach to key predistribution for distributed sensor networks. In IEEE Wireless Communications and Networking Conference\n(WCNC'05) 2, IEEE Communications Society, 1200-1205\nLee, J. and Stinson, D. (2005b). Deterministic key predistribution schemes for distributed sensor\nnetworks. In SAC 2004 Proceedings. Lecture Notes in Computer Science, 3357, Springer,\n294-307.\nLee, J. and Stinson, D. (2008). On the construction of practical key predistribution schemes for\ndistributed sensor networks using combinatorial designs. ACM Trans. Inform. Syst. Secur.\n11, Article 5.\nMartin, K.. (2009). On the applicability of combinatorial designs to key predistribution for\n34\n\n\fwireless sensor networks In Proceedings of the 2nd International Workshop on Coding and\nCryptology, Springer, Berlin.\nMartin, K., Blackburn, S.R., Etzion, T., and Paterson, M.B. (2010). Distinct difference configurations: multihop paths and key predistribution in sensor networks. IEEE Transactions in\nInformation Theory, 56,3961-3972.\nMartin, K., Stinson, D.R., Paterson, M.B. (2011). Key predistribution for homogeneous wireless\nsensor networks with group deployment of nodes. ACM Transactions on Sensor Networks,\n7, No. 2.\nRoman, R., Zhou, J., and Lopez, J. (2005). On the security of wireless sensor network. In\nICCSA 2005 Proceedings. Lecture Notes in Computer Science, Vol 3482. Springer, 681-690\nRuj, S. and Roy, B. (2007). Key predistribution using partially balanced designs in wireless\nsensor networks. In Proceedings of ISPA 2007, Lecture Notes in Computer Science, 4742,\n431-445.\nRuj, S., Seberry, J., and Roy, B. (2009). Key predistribution schemes using block designs in\nwireless sensor networks. In Computational Science and Engineering, 2009. CSE '09., 873878. DOI 10.1109/CSE.2009.35\nStinson, D. (2003). Combinatorial Designs: Constructions and Analysis. Springer, Berlin,\nGermany.\nStreet, A.P. and Street, D.J. (1987). Combinatorics of Experimental Design. Clarendon Press,\nOxford.\nYounis, M.F., Ghumman, K., and Eltoweissy, C.V. (2006). Location-aware combinatorial key\nmanagement scheme for clustered sensor networks. IEEE Transactions on Parallel and\nDistributed Systems, 17, 865-882\n\n35\n\n\f"}