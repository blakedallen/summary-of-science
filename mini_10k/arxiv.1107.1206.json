{"id": "http://arxiv.org/abs/1107.1206v1", "guidislink": true, "updated": "2011-07-06T17:55:31Z", "updated_parsed": [2011, 7, 6, 17, 55, 31, 2, 187, 0], "published": "2011-07-06T17:55:31Z", "published_parsed": [2011, 7, 6, 17, 55, 31, 2, 187, 0], "title": "Computing Distances between Probabilistic Automata", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1107.3981%2C1107.5665%2C1107.1665%2C1107.5930%2C1107.0307%2C1107.0178%2C1107.4728%2C1107.4316%2C1107.5741%2C1107.5378%2C1107.4435%2C1107.1586%2C1107.4616%2C1107.4868%2C1107.0999%2C1107.3206%2C1107.4698%2C1107.1192%2C1107.5179%2C1107.2626%2C1107.1565%2C1107.3884%2C1107.3441%2C1107.2281%2C1107.5240%2C1107.2327%2C1107.0686%2C1107.2250%2C1107.2866%2C1107.0210%2C1107.5534%2C1107.1514%2C1107.0485%2C1107.1373%2C1107.1044%2C1107.5836%2C1107.2667%2C1107.2668%2C1107.5976%2C1107.1819%2C1107.3330%2C1107.3434%2C1107.3359%2C1107.1813%2C1107.0889%2C1107.3539%2C1107.0478%2C1107.0630%2C1107.4742%2C1107.0956%2C1107.2184%2C1107.1557%2C1107.3055%2C1107.2487%2C1107.6015%2C1107.4398%2C1107.5506%2C1107.4007%2C1107.5308%2C1107.1577%2C1107.4412%2C1107.4408%2C1107.2738%2C1107.4889%2C1107.2182%2C1107.0403%2C1107.2396%2C1107.3496%2C1107.1288%2C1107.5133%2C1107.5981%2C1107.2298%2C1107.5143%2C1107.3845%2C1107.3494%2C1107.4669%2C1107.3727%2C1107.5407%2C1107.0673%2C1107.1268%2C1107.5618%2C1107.2043%2C1107.0742%2C1107.1976%2C1107.5857%2C1107.2786%2C1107.3828%2C1107.5413%2C1107.1923%2C1107.4179%2C1107.1154%2C1107.3091%2C1107.3918%2C1107.3102%2C1107.1206%2C1107.0774%2C1107.3676%2C1107.0972%2C1107.2569%2C1107.4658%2C1107.4936&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Computing Distances between Probabilistic Automata"}, "summary": "We present relaxed notions of simulation and bisimulation on Probabilistic\nAutomata (PA), that allow some error epsilon. When epsilon is zero we retrieve\nthe usual notions of bisimulation and simulation on PAs. We give logical\ncharacterisations of these notions by choosing suitable logics which differ\nfrom the elementary ones, L with negation and L without negation, by the modal\noperator. Using flow networks, we show how to compute the relations in PTIME.\nThis allows the definition of an efficiently computable non-discounted distance\nbetween the states of a PA. A natural modification of this distance is\nintroduced, to obtain a discounted distance, which weakens the influence of\nlong term transitions. We compare our notions of distance to others previously\ndefined and illustrate our approach on various examples. We also show that our\ndistance is not expansive with respect to process algebra operators. Although L\nwithout negation is a suitable logic to characterise epsilon-(bi)simulation on\ndeterministic PAs, it is not for general PAs; interestingly, we prove that it\ndoes characterise weaker notions, called a priori epsilon-(bi)simulation, which\nwe prove to be NP-difficult to decide.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1107.3981%2C1107.5665%2C1107.1665%2C1107.5930%2C1107.0307%2C1107.0178%2C1107.4728%2C1107.4316%2C1107.5741%2C1107.5378%2C1107.4435%2C1107.1586%2C1107.4616%2C1107.4868%2C1107.0999%2C1107.3206%2C1107.4698%2C1107.1192%2C1107.5179%2C1107.2626%2C1107.1565%2C1107.3884%2C1107.3441%2C1107.2281%2C1107.5240%2C1107.2327%2C1107.0686%2C1107.2250%2C1107.2866%2C1107.0210%2C1107.5534%2C1107.1514%2C1107.0485%2C1107.1373%2C1107.1044%2C1107.5836%2C1107.2667%2C1107.2668%2C1107.5976%2C1107.1819%2C1107.3330%2C1107.3434%2C1107.3359%2C1107.1813%2C1107.0889%2C1107.3539%2C1107.0478%2C1107.0630%2C1107.4742%2C1107.0956%2C1107.2184%2C1107.1557%2C1107.3055%2C1107.2487%2C1107.6015%2C1107.4398%2C1107.5506%2C1107.4007%2C1107.5308%2C1107.1577%2C1107.4412%2C1107.4408%2C1107.2738%2C1107.4889%2C1107.2182%2C1107.0403%2C1107.2396%2C1107.3496%2C1107.1288%2C1107.5133%2C1107.5981%2C1107.2298%2C1107.5143%2C1107.3845%2C1107.3494%2C1107.4669%2C1107.3727%2C1107.5407%2C1107.0673%2C1107.1268%2C1107.5618%2C1107.2043%2C1107.0742%2C1107.1976%2C1107.5857%2C1107.2786%2C1107.3828%2C1107.5413%2C1107.1923%2C1107.4179%2C1107.1154%2C1107.3091%2C1107.3918%2C1107.3102%2C1107.1206%2C1107.0774%2C1107.3676%2C1107.0972%2C1107.2569%2C1107.4658%2C1107.4936&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We present relaxed notions of simulation and bisimulation on Probabilistic\nAutomata (PA), that allow some error epsilon. When epsilon is zero we retrieve\nthe usual notions of bisimulation and simulation on PAs. We give logical\ncharacterisations of these notions by choosing suitable logics which differ\nfrom the elementary ones, L with negation and L without negation, by the modal\noperator. Using flow networks, we show how to compute the relations in PTIME.\nThis allows the definition of an efficiently computable non-discounted distance\nbetween the states of a PA. A natural modification of this distance is\nintroduced, to obtain a discounted distance, which weakens the influence of\nlong term transitions. We compare our notions of distance to others previously\ndefined and illustrate our approach on various examples. We also show that our\ndistance is not expansive with respect to process algebra operators. Although L\nwithout negation is a suitable logic to characterise epsilon-(bi)simulation on\ndeterministic PAs, it is not for general PAs; interestingly, we prove that it\ndoes characterise weaker notions, called a priori epsilon-(bi)simulation, which\nwe prove to be NP-difficult to decide."}, "authors": ["Mathieu Tracol", "Jos\u00e9e Desharnais", "Abir Zhioua"], "author_detail": {"name": "Abir Zhioua"}, "author": "Abir Zhioua", "links": [{"title": "doi", "href": "http://dx.doi.org/10.4204/EPTCS.57.11", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/1107.1206v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1107.1206v1", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "In Proceedings QAPL 2011, arXiv:1107.0746", "arxiv_primary_category": {"term": "cs.FL", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.FL", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.LO", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1107.1206v1", "affiliation": "Departement d'informatique et de g\u00e9nie logiciel, Universit\u00e9 Laval, Qu\u00e9bec, Canada", "arxiv_url": "http://arxiv.org/abs/1107.1206v1", "journal_reference": "EPTCS 57, 2011, pp. 148-162", "doi": "10.4204/EPTCS.57.11", "fulltext": "Computing Distances between Probabilistic Automata\nMathieu Tracol\nLRI, Universit\u00e9 Paris-Sud, France\n\nJos\u00e9e Desharnais\u2217,\n\nAbir Zhioua\u2217\n\nD\u00e9p. d'informatique et de g\u00e9nie logiciel, Universit\u00e9 Laval, Qu\u00e9bec, Canada\n\nWe present relaxed notions of simulation and bisimulation on Probabilistic Automata (PA), that allow some error \u03b5. When \u03b5 = 0 we retrieve the usual notions of bisimulation and simulation on PAs.\nWe give logical characterisations of these notions by choosing suitable logics which differ from the\nelementary ones, L and L \u00ac , by the modal operator. Using flow networks, we show how to compute the relations in PTIME. This allows the definition of an efficiently computable non-discounted\ndistance between the states of a PA. A natural modification of this distance is introduced, to obtain a\ndiscounted distance, which weakens the influence of long term transitions. We compare our notions\nof distance to others previously defined and illustrate our approach on various examples. We also\nshow that our distance is not expansive with respect to process algebra operators.\nAlthough L (\u00ac) is a suitable logic to characterise \u03b5-(bi)simulation on deterministic PAs, it is\nnot for general PAs; interestingly, we prove that it does characterise weaker notions, called a priori\n\u03b5-(bi)simulation, which we prove to be NP-difficult to decide.\n\nKeywords: Metrics, Bisimulation, Logic, Probabilistic Automata\n\n1\n\nIntroduction\n\nPreorders and equivalence notions between processes are central to concurrency theory. One wants to\ncompare terms of a process algebra for proving an axiomatisation sound, to compare processes to some\nabstractions of them, etc. For non-probabilistic processes, notions of bisimulation and simulation are\nwidely acknowledged, with, of course, many variations. In the study of probabilistic systems it has been\nobserved [17] that the comparison between processes should not be based on notions that rely strongly\non exact numbers, as do the known notions of bisimulation and simulation for probabilistic systems.\nThe most important reason is that the stochastic information in probabilistic processes often comes from\nobservations, or from theoretical estimations. Hence a slight difference in the probabilities between two\nprocesses should be treated differently from important ones and certainly not be simply tagged as non\nequivalence. In this context, notions of approximate equivalence or distance are more useful. Distances\nhave been defined for probabilistic processes [15, 4] and some have tried to estimate bisimulation with\na certain degree of confidence [15]. Relaxing the definition of simulation and bisimulation is another\navenue, which we follow.\nWe first extend previous work on deterministic processes [12] to their non deterministic version,\nProbabilistic Automata (PA) [22]. We present relaxed notions of simulation and bisimulation on them\nwith respect to some accuracy \u03b5. When \u03b5 = 0 we retrieve the usual notions of bisimulation and simulation on PAs. Our notions rely on a definition of \u03b5-lifting of relations, which happens to be equivalent to\nthe one presented in [23]. However, in this paper, the authors present different notions of \u03b5-simulations\nwhich consider distributions on the set executions, whereas our relations are always between the states\nof the systems, and our purpose is different. We give logical characterisations of these notions: a state\n\u03b5-simulates another state if and only if it \u03b5-satisfies every formula that the other one (exactly) satisfies;\n\u2217 Research\n\nsupported by CRSNG\n\nM. Massink and G. Norman (Eds.): 9th Workshop on\nQuantitative Aspects of Programming Languages (QAPL 2011)\nEPTCS 57, 2011, pp. 148\u2013162, doi:10.4204/EPTCS.57.11\n\nc Tracol, Desharnais, Zhioua\nThis work is licensed under the\nCreative Commons Attribution License.\n\n\fTracol, Desharnais, Zhioua\n\n149\n\nsimilarly for \u03b5-bisimulation. The extension of previous work comprises also the definition of an efficiently computable non-discounted distance: two states are at distance less than or equal to \u03b5 if they\nare \u03b5-bisimilar. Using flow networks, we show how to compute in PTIME our relaxed relations of\n(bi)simulation which helps to also compute efficiently the distance.\nThe nature of non determinism leads to new challenges and concepts. It is not suprising that the\nlogics that we prove to characterise \u03b5-bisimulation and \u03b5-simulation differ from the elementary ones, L\nand L \u00ac . Although L (\u00ac) is a suitable logic to characterise \u03b5-(bi)simulation on deterministic PAs, it is\nnot for general PAs; interestingly, we define weaker notions that it does characterise on PAs, called a\npriori \u03b5-(bi)simulation. We also prove that a priori 0-simulation is NP-difficult to decide, contrarily to\n\u03b5-bi/simulation.\nWe propose a natural modification of our basic distance in order to discount the influence of long term\ntransitions. We illustrate the difference between the values of the two distances on various examples of\ntwo-dimensional grids. Both (pseudo-)distances are different from the ones defined in the past [11, 1,\n15, 4], in that differences along paths are not accumulated, even in the discounted one. The other known\ndistances all accumulate differences through paths, and most of them discount the future. Those that\ndo not discount the future are intractable: it has recently been proven decidable [3], but with double\nexponential complexity. Our distance is determined with a polynomial algorithm.\nFinally, we prove that our distances are not expansive with respect to process algebras operators,\nsuch as parallel composition and non-deterministic choice.\n\n2\n\nProbabilistic Automata and \u03b5-relations\n\nIn this section we give the definitions of our models and the relaxed relations that we study. Probabilistic\nAutomata are labelled transition systems where transitions are from states to distributions and that involve non determinism. We generalize slightly the standard model, allowing sub-distributions instead of\ndistributions, to model non responsiveness of the system and to make simulation a richer notion. Given\na countable set S, we write Sub(S) for the set of sub-distributions on S: the total probability out of a subdistribution may be less than one. Given a relation R on S \u00d7 S and X \u2286 S, R(X) = {y \u2208 S|\u2203x \u2208 X s.t. xRy}.\nA set X is R-closed if R(X) \u2286 X.\nDefinition 1 (PA [22]) A probabilistic automaton, or PA, is a tuple S = (S, Act, D) where S is a denumerable state space, Act is a finite set of actions, and D \u2286 S \u00d7 Act \u00d7 Sub(S) is the transition relation. S\nis finitely branching if for all s \u2208 S and a \u2208 Act, {\u03bc \u2208 Sub(S) | (s, a, \u03bc) \u2208 D)} is finite; if it is a singleton\nor empty, we say that S is deterministic. The disjoint union of PAs S1 , ..., Sk is the PA ]i\u2208[1;k] Si whose\nstates are the disjoint union of the Si and transitions carry through.\nClosely related models restrict states to be either probabilistic or non deterministic [18]. Generalizations\nto uncountable state spaces have also been studied [7, 9]. We sometimes mark a state (or a distribution)\na\nas initial. We write s \u2192 \u03bc for a transition (s, a, \u03bc) \u2208 D.\nAn example of PA is given in Fig. 1: an arrow labelled with action l and value r represents an ltransition of probability r; in picture representations, we omit the distributions that are concentrated in\none point, as can be seen for the transitions from s to s0 and from t to itself. In contrast, state s has an\na-transition to distribution \u03bcs giving s three possible successors for this a-transition.\nIn previous work [12], we relaxed the classical notion of simulation between deterministic PAs to\n\u03b5-simulation. We now generalize this approach to the context of PAs.\n\n\f150\n\nComputing Distances between Probabilistic Automata\n\ns0\n\nz\n#\na,1\na,1\nt II\nts\nII\nt\na\na\nII\ntt\nt\nII b, 5\n\u03bct\n\u03bcs\nb, 21 ttt\nD\nC\nDD 2 IIII8\n2\nCC 4\n{\ntt 1 zz\n{\nt\nDD8\n8 z\n8 { 4\nt\nII\nCC8\n3\nz\n{\ntt\nII\nDD\nCC\n8\nzz\n{{ 8 \u000f\ntt\nII\nz\nD\nC\n{\nt\n\u000f\n|\nz\n!\nyt\n! }{\n$\n\ns1\n\ns2\n\nb,1\n\n\u000f\n\ns3\n\nt2\n\nx\n\nb,1\nc,1\n\n\u000f\n\n/yo\n\nc,1\n\n\u000f\n\nt1\n\nt0\n\nb,1\n\nt3\n\nFigure 1: s \u227a 1 t and t \u227a 1 s but s 6\u223c 1 t\n8\n\n8\n\n8\n\nDefinition 2 (\u03b5-bi/simulation) Let S = (S, Act, D) be a PA, and \u03b5 \u2265 0. A relation R \u2286 S \u00d7 S is an\na\na\n\u03b5-simulation on S if whenever sRt, if s \u2192 \u03bc, then there exists a transition t \u2192 \u03bd such that \u03bc L \u03b5 (R) \u03bd,\nwhere\n\u03bc L \u03b5 (R) \u03bd iff for all E \u2286 S we have \u03bc(E) \u2264 \u03bd(R(E)) + \u03b5.\nIf R is symmetric, it is an \u03b5-bisimulation. Two states s and s0 of PAs S1 and S2 are \u03b5-similar (resp. \u03b5bisimilar), written s \u227a\u03b5 s0 (resp. s \u223c\u03b5 s0 ), if there is some \u03b5-simulation (resp. \u03b5-bisimulation) that relates\nthem in S1 ] S2 .\nWe may omit \u03b5 in the notation when \u03b5 = 0, as it yields the classical notions.\nExample 1 In the PA of Fig. 1 s \u227a 1 t and t \u227a 1 s. This is witnessed by the relations\n8\n\n8\n\n{(s,t), (x, x), (x,t2 ), (y, y), (y,t3 )} \u222a {(si ,ti ) | i = 0, 1, 2, 3},\n{(t, s), (x, x), (x, s2 ), (y, y), (y, s3 )} \u222a {(ti , si ) | i = 0, 1, 2, 3}.\nHowever, s and t are not related for any \u03b5 < 81 . Notice that we have s 6\u223c 1 t. Indeed, x is 18 -bisimilar to no\n8\n\nstate but itself, but \u03bcs ({x}) = 48 , which is strictly greater than \u03bct ({x}) + 81 = 38 .\nThis example shows that two-way \u03b5-simulation is not \u03b5-bisimulation, even for deterministic PAs. A\ndeterministic example is obtained by removing a-loops in Fig. 1.\nProposition 1 \u03b5-bisimulation is different from two-way \u03b5-simulation.\nAs for the classical case, we define the largest relations as greatest fixed points: F \u03b5 : 2S\u00d7S \u2192 2S\u00d7S is\na\na\ndefined as follows \u2200R \u2286 S \u00d7 S, \u2200s,t \u2208 S, let (s,t) \u2208 F \u03b5 (R) iff \u2200s \u2192 \u03bc, \u2203t \u2192 \u03bd | \u03bcL \u03b5 (R)\u03bd. Similarly,\nG\u03b5 : 2S\u00d7S \u2192 2S\u00d7S is defined as (s,t) \u2208 G\u03b5 (R) iff (s,t), (t, s) \u2208 F \u03b5 (R). We then define \u227an\u03b5 iteratively as\n\u03b5\nn\n0\nn+1\n\u03b5\nn\n\u227a0\u03b5 = S \u00d7 S and for all n, \u227an+1\n\u03b5 = F (\u227a ). As well, let \u223c\u03b5 = S \u00d7 S and for all n, \u223c\u03b5 = G (\u223c ).\nTheorem 1 S being finitely branching, \u227a\u03b5 and \u223c\u03b5 are the greatest fixpoints of F \u03b5 and G\u03b5 , respectively.\nT\nT\nIn other words, \u227a\u03b5 = n\u2208N \u227an\u03b5 , and \u223c\u03b5 = n\u2208N \u223cn\u03b5 .\n\n2.1\n\nLifting of relations and flow networks.\n\nThe lifting of a relation is a standard construction that transfers a relation R on states to a relation L (R)\non sub-distributions over states. Contrarily to the way we formulate Def. 2, the usual definition of liftings\nis rather in terms of the existence of a weight function [22]. We show the equivalence of the definitions.\n\n\fTracol, Desharnais, Zhioua\n\n151\n\nDefinition 3 (\u03b5-weight functions) Let \u03b5 \u2265 0, and \u03bc, \u03bd \u2208 Sub(S). An \u03b5-weight function for (\u03bc, \u03bd) with\nrespect to R is a function \u03b4 : S \u00d7 S \u2192 [0; 1] such that:\n\u2022 If \u03b4 (s,t) > 0 then (s,t) \u2208 R.\n\u2022 For all s,t \u2208 S, \u2211s0 \u2208S \u03b4 (s, s0 ) \u2264 \u03bc(s) and \u2211s0 \u2208S \u03b4 (s0 ,t) \u2264 \u03bd(t).\n\u2022 \u2211s,s0 \u2208S \u03b4 (s, s0 ) \u2265 \u03bc(S) \u2212 \u03b5.\nBefore stating the equivalence between our formulation of L \u03b5 (R) and the one with weight functions,\nwe recall the notion of flow network, since it provides a convenient alternative definition for applications [2].\nA network is a tuple N = (V, E, \u22a5, >, c) where (V, E) is a finite directed graph in which every edge\n(u, v) \u2208 E has a non-negative, real-valued capacity c(u, v). If (u, v) 6\u2208 E we assume c(u, v) = 0. We\ndistinguish two vertices: a source \u22a5 and a sink >. For v \u2208 V let in(v) be the set of incoming edges to\nnode v, and out(v) the set of outgoing edges from node v. A flow function is a real function f : V \u00d7V \u2192 R\nwith the two following properties for all nodes u and v:\n\u2022 Capacity constraints: 0 \u2264 f (u, v) \u2264 c(u, v). The flow along an edge cannot exceed its capacity.\n\u2022 Flow conservation: for each node v \u2208 V \u2212 {\u22a5, >}, we have \u2211e\u2208in(v) f (e) = \u2211e\u2208out(v) f (e).\nThe flow F ( f ) of f is given by F ( f ) = \u2211e\u2208out(\u22a5) f (e) \u2212 \u2211e\u2208in(>) f (e).\nDefinition 4 (The network N (\u03bc, \u03bd, R)) Let S be a finite set, R \u2286 S \u00d7 S, and \u03bc, \u03bd \u2208 Sub(S). Let S0 =\n{t 0 |t \u2208 S}, where t 0 are pairwise distinct \"new\" states (i.e. t 0 6\u2208 S). Let \u22a5 and > be two distinct new\nelements not contained in S \u222a S0 . The network N (\u03bc, \u03bd, R) = (V, E, \u22a5, >, c) is defined as follows:\n\u2022 V = S \u222a S0 \u222a {\u22a5, >}.\n\u2022 E = {(s,t 0 )|(s,t) \u2208 R} \u222a {(\u22a5, s)|s \u2208 S} \u222a {(t 0 , >)|t \u2208 S}.\n\u2022 The capacity function c is given by: c(\u22a5, s) = \u03bc(s), c(t, >) = \u03bd(t), and c(s,t) = 1 for all s,t \u2208 S.\nThe following proposition gives various characterizations of the simulation relation.\nProposition 2 Let S be a finite set, R \u2286 S \u00d7 S, and \u03bc, \u03bd \u2208 Sub(S). The following properties are equivalent:\n1. \u03bcL \u03b5 (R)\u03bd.\n2. The maximal flow in N (\u03bc, \u03bd, R) is greater than or equal to \u03bc(S) \u2212 \u03b5.\n3. There exists an \u03b5-weight function for (\u03bc, \u03bd) with respect to R.\n4. For all R-closed set E \u2286 S, we have \u03bc(E) \u2264 \u03bd(E) + \u03b5.\nThe equivalence with 4 applies only if the domain and image of R are considered disjoint.\nProof. 1 \u21d4 2 is Theorem 7 [12]. 2 \u21d4 3 is a slight generalization of a result of [2], in which \u03b5 = 0.\n1 \u21d2 4 is always true and 4 \u21d2 1 is straightforward if the domain and image of R are disjoint. \u0003\nThe condition on the fourth statement may look restrictive, but it is quite natural. By taking two\ncopies of the state space and relating a state to the copies of the states that R relates it to, one obtains\na relation that satisfies the condition, yet representing the same relation as R. This allows to make a\ndistinction between states that are simulated from states that are viewed as simulating.\n\n\f152\n\n3\n3.1\n\nComputing Distances between Probabilistic Automata\n\nLogic for \u03b5-simulation and \u03b5-bisimulation\nThe logic L and its corresponding notion of simulation\n\nIn the context of deterministic PAs, \u03b5-bi/simulation are characterized [12] by the simple logic L \u00ac [19],\nusing a relaxed semantics \"up to \u03b5\".\nDefinition 5 (The logics L and L \u00ac ) The syntax of L \u00ac is as follows:\nL\u00ac\n\n\u03c6 ::= > | \u00ac\u03c6 | \u03c61 \u2227 \u03c62 | \u03c61 \u2228 \u03c62 | hai\u03b4 \u03c6 where \u03b4 \u2208 Q \u2229 [0; 1].\n\nWe write L for the logic without negation. Given a PA with components (S, Act, D), the relaxed\n\u03b5-semantics |=\u03b5 is defined by structural induction on the formulas.\n\u2022\u2200s \u2208 S, s |=\u03b5 >\n\n\u2022 s |=\u03b5 \u00ac\u03b8 iff s 6|=\u2212\u03b5 \u03b8\n\n\u2022 s |=\u03b5 \u03c61 \u2227 \u03c62 iff s |=\u03b5 \u03c61 and s |=\u03b5 \u03c62 ;\na\n\n\u2022 s |=\u03b5 hai\u03b4 \u03c6 iff there exists a transition s \u2192 \u03bc s.t. \u03bc([[\u03c6 ]]\u03b5 ) \u2265 \u03b4 \u2212 \u03b5,\nwhere [[\u03c6 ]]\u03b5 = {s \u2208 S|s |=\u03b5 \u03c6 }, and the semantics of \u2228 is similar to the one of \u2227. Given s \u2208 S, we write\nF \u03b5 (s) (resp. F \u03b5,\u00ac (s)) for the set of formulas in L (resp. in L \u00ac ) \u03b5-satisfied by s.\nAs for deterministic PAs, the logic is less expressive with the relaxed semantics [12] than with the\nstandard one. Indeed, for each \u03c6 \u2208 L \u00ac , we can construct an associated formula \u03c6\u03b5 \u2208 L \u00ac such that\n[[\u03c6 ]]\u03b5 = [[\u03c6\u03b5 ]]0 . Here is how this is done: >\u03b5 = >; (\u03c61 \u2227 \u03c62 )\u03b5 = (\u03c61 )\u03b5 \u2227 (\u03c62 )\u03b5 ; (hai\u03b4 \u03c6 )\u03b5 = hai\u03b4 \u2212\u03b5 \u03c6\u03b5 ;\n(\u00ac\u03c6 )\u03b5 = \u00ac(\u03c6\u2212\u03b5 ). Here we use the fact that hai\u03bb \u03c6 is still a valid formula, even if \u03bb < 0 or \u03bb > 1, which\ngives in turn that (\u03c6\u03b5 )\u2212\u03b5 = \u03c6 . Clearly the transformation is additive, as (\u03c6\u03b5 )\u03b5 0 = \u03c6\u03b5+\u03b5 0 .\nExample 2 If \u03c6 = hai.5 (\u00achai.2 >), then \u03c6\u03b5 = hai.5\u2212\u03b5 (\u00achai.2+\u03b5 >).\nThe relaxed logic being less expressive is not an issue because we use the new semantics to simplify\nthe formulations of the logical characterisations. It implies that model checking of formulas with the\nrelaxed semantics can be done using the same technique as for the usual semantics.\nThe logics L and L \u00ac induce \u03b5-simulation and \u03b5-bisimulation relations:\nDefinition 6 (Logical \u03b5-simulation.) Let \u03b5 \u2208 [0; 1], s,t \u2208 S. We say that t L\u03b5 -simulates s, written s \u227aL\n\u03b5 t,\nif for all formula \u03c6 \u2208 L , s |= \u03c6 implies t |=\u03b5 \u03c6 . States t and s are said \u03b5-logically equivalent, written\n\u00ac\n\u00ac\n\u00ac\ns \u223cL\nt, if s \u227aL\nt and t \u227aL\ns.\n\u03b5\n\u03b5\n\u03b5\nThe following theorem says that L characterizes \u03b5-simulation on deterministic PAs. As Ex. 1 illustrates, \u03b5-bisimulation is different from two-way \u03b5-simulation when \u03b5 > 0, and hence we need negation\nto characterize \u03b5-bisimulation.\nL\nTheorem 2 ([12]) For deterministic PAs we have \u227a\u03b5 = \u227aL\n\u03b5 and \u223c\u03b5 = \u223c\u03b5\n\n\u00ac\n\nAs can be expected, the logics L and L \u00ac are not strong enough to characterize \u03b5-bi/simulation for\nPAs. In the next section, we will present a stronger logic that will characterize these notions. NeverL\u00ac\ntheless, we can present the notions that correspond to \u227aL\n\u03b5 and \u223c\u03b5 . The name \"a-priori\" [1] comes\nfrom the order of the quantifiers in the definition: sets E in the following definition are chosen before the\nmatching transition, which contrasts with Def. 2.\nDefinition 7 (A priori \u03b5-simulation and bisimulation) Let S = (S, Act, D) be a PA. A relation R \u2286\na\nS \u00d7 S is an a priori \u03b5-simulation on S iff for all s,t \u2208 S such that sRt, for all s \u2192 \u03bc and for all E \u2286 S,\na\nthere exists a transition t \u2192 \u03bd such that \u03bc(E) \u2264 \u03bd(R(E)) + \u03b5. If R is symmetric, then it is an a priori\n\u03b5-bisimulation. We write \u0016\u03b5prio and \u223c\u03b5prio for the largest relations of a priori \u03b5-simulation and \u03b5-bisimulation.\n\n\fTracol, Desharnais, Zhioua\n\n153\n\nBefore proving that this relation is characterized by L , we introduce some notation. We define\n\u227a\u03b5prio,n iteratively in the same way as \u227an\u03b5 , using F\u03b5prio : 2S\u00d7S \u2192 2S\u00d7S , which is defined as follows: \u2200R \u2286\na\na\nS \u00d7 S, \u2200s,t \u2208 S, let (s,t) \u2208 F\u03b5prio (R) iff \u2200s \u2192 \u03bc, \u2200E \u2286 S, \u2203t \u2192 \u03bd s.t. \u03bc(E) \u2264 \u03bd(R(E)) + \u03b5. As for\nT\nT\n\u227a\u03b5 = n\u2208N \u227an\u03b5 , we can show that we have \u227a\u03b5prio = n\u2208N \u227a\u03b5prio,n . The depth of a formula is the maximal\nnumber of imbrications of hai\u03b4 operators. We write F n for the set of formulas of L of depth at most n.\nGiven n \u2208 N, given s \u2208 S, F\u03b5n (s) is the set of formulas \u03c6 \u2208 L of depth at most n such that s |=\u03b5 \u03c6 and\nF\u03b5 (s) is the set of formulas \u03c6 \u2208 L such that s |=\u03b5 \u03c6 . We define F n (s) = F0n (s) and F (s) = F0 (s).\nThe next theorem proves the logical characterization of \u227a\u03b5prio and \u223c\u03b5prio .\nTheorem 3 Let S = (S, Act, D) be a PA, and let s,t \u2208 S. Then:\n1. s \u227a\u03b5prio,n t iff F n (s) \u2286 F\u03b5n (t) for all n \u2265 0\n2. For all n \u2265 0, for all u, v \u2208 S, there exists \u03c6u \u2208 Fn such that v |=\u03b5 \u03c6u iff u \u227a\u03b5prio,n v\n3. \u227a\u03b5 \u2286 \u227a\u03b5prio = \u227aL\n\u03b5 and the inclusion is strict.\nand the inclusion is strict.\n4. \u223c\u03b5 \u2286 \u223c\u03b5prio = \u223cL\n\u03b5\n\u00ac\n\nThis proof generalizes to the context of countable state space systems, using a method close to the\nmethod used in [12] to extend logic characterizations to denumerable state spaces.\nProof. Inclusions are straightforward. The proof of the strictness of inclusion is given by the\nexample following the proof. The structure of the proof is similar to the ones of [19] and [22] for the\nlogical characterisation of simulation but we adapt them to systems with non determinism. The third\npoint is a corollary of the first one. The fourth point is not more difficult and is the same kind of\ntranslation as the proof of [19]. We sketch the proof of the first two points, concentrating on the \"\u21d0\"\ndirection. The two points are proven simultaneously by induction on n. The base case follows trivially\nfrom the definitions. Assume that the claims are true for n. We now prove 2 for n + 1. Fix u \u2208 S. We\ndefine \u03c6u \u2208 Fn+1 as follows. Let v \u2208 S such that u 6\u227a\u03b5prio,n v; by induction F n (u) 6\u2286 F\u03b5n (v), that is, there\nV\nexists a formula \u03c6(u,v) \u2208 Fn , such that u |= \u03c6(u,v) and v 6|=\u03b5 \u03c6(u,v) . The formula \u03c6u := v6\u227a prio,n u \u03c6(u,v) is in\n\u03b5\n\nFn+1 because S is finite. Now, u |= \u03c6u , and any v such that u 6\u227a\u03b5prio,n+1 v verifies u 6\u227a\u03b5prio,n v and hence\nv 6|=\u03b5 \u03c6u . Since u \u227a\u03b5prio,n w implies w |= \u03c6u by induction, we get the result; hence 2 is proven for n + 1.\na\nAs for 1, suppose F n+1 (s) \u2286 F\u03b5n+1 (t). Let s \u2192 \u03bc be a transition from s, and let E \u2286 S. We are looking\na\nprio,n\nfor a transition t \u2192 \u03bd such that \u03bd(\u227a\u03b5\nE) \u2265 \u03bc(E) \u2212 \u03b5. Let p = \u03bc(E). We construct a formula \u03c6E such\nW\nthat for all u \u2208 S, u |= \u03c6E iff u \u2208 E. By the second claim, we just have to consider \u03c6E = u\u2208E \u03c6u . Now,\ns |= hai p \u03c6E . Since hai p \u03c6E \u2208 F n+1 , we must have t |=\u03b5 hai p \u03c6E . Since \u227a\u03b5prio,n [[\u03c6E ]] \u2286 [[\u03c6 ]]E \u03b5 , we get that\na\nthere exists a transition t \u2192 \u03bd from t such that \u03bd(\u227a\u03b5prio,n E) \u2265 \u03bc(E) \u2212 \u03b5, which proves the result. \u0003\nExample 3 In the following PA (where the bi 's are different labels), we have s \u227a prio t and s 6\u227a t.\ns\na\n\n\u03bcN 5\nppp 1 NNN12\nNNN\np\np\n\u000f 4\np\n'\ns3\ns1 wp\ns2\n1\n3\n\nb1 ,1\n\n\u000f\n\ns4\n\nb2 ,1\n\n\u000f\n\ns5\n\nb3 ,1\n\n\u000f\n\ns6\n\nt PPPP a\na nnnn\nPPP\nn\na\nn\nP\nn\nn\n\u03bd1 OWOWWWW o \u03bd2 OO ggggo \u03bd3\nW\ng\nOOoo WW gg OOoo\n\u000f woogogogOgOgOg' gg\u000f WWwoWoWoWoWOWOWO' \u000f\ng\ns\n+t\nt\nt\n1\n\nb1 ,1\n\n\u000f\n\nt4\n\n2\n\nb2 ,1\n\n\u000f\n\nt5\n\nb3 ,1\n\nt1\n\nt2\n\nt3\n\n\u03bd1\n\n7\n24\n\n7\n24\n\n5\n12\n\n3\n\n\u03bd2\n\n3\n8\n\n1\n4\n\n3\n8\n\n\u000f\n\n\u03bd3\n\n1\n3\n\n1\n3\n\n1\n3\n\nt6\n\nThe transitions has been chosen such that \u03bd3 (t1 ) = \u03bc(s1 ), \u03bd2 (t2 ) = \u03bc(s2 ), \u03bd1 (t3 ) = \u03bc(s3 ), \u03bd1 ({t1 } \u222a\n{t2 }) = \u03bc({s1 } \u222a {s2 }), \u03bd2 ({t1 } \u222a {t3 }) = \u03bc({s1 } \u222a {s3 }), \u03bd3 ({t2 } \u222a {t3 }) = \u03bc({s2 } \u222a {s3 }). Then it is\n\n\f154\n\nComputing Distances between Probabilistic Automata\n\neasy to see that si is simulated by ti for all i = 1, 2, 3. Moreover, the last set of equalities shows that\na\ns \u227a prio t. However, we do not have s \u227a t. Indeed for all transitions t \u2192 \u03bd (combined or not) from t, we\ncan find a set E \u2286 \u222ai\u2208{1,2,3} {si ,ti } containing si if and only if it contains ti , and such that \u03bc(E) > \u03bd(E).\nRemark 1 By Theorem 3 item 3, for the PA of Ex. 1, we have s \u227a prio\nt and t \u227a prio\ns. Now, the only state\n1\n1\na\n\n1\n8 -a-priori\na\n\n8\n\n8\n\nbisimilar to x is, here again, x itself. Hence, for s \u2192 \u03bcx and E = {x}, there exists no transition\nt \u2192 \u03bd such that \u03bc(E) \u2264 \u03bd(\u223c prio\n(E)) + 18 , hence s and t are not 18 -a-priori bisimilar. As a consequence,\n1\n8\n\ntwo-way a-priori simulation is different from a-priori bisimulation, and the negation is needed in the\nlogical characterization of bisimilarity.\nDecidability of A Priori Simulation. An interesting fact is that it is NP-hard to decide a-priori\nsimulation and bisimulation, even when \u03b5 = 0. This contrasts with classical results on strong simulation\nand bisimulation whose decision procedures were proven to be in Poly-time (see [2, 24, 6]). The proof\nof the following theorem, not presented here due to lqck of space, is by reducing the subset sum problem,\nknown to be NP-complete ([16]), to our problem.\nTheorem 4 The following problem is NP-complete:\nInput: A PA S , s,t \u2208 S. Question: Do we have s \u227a prio t?\n\n3.2\n\nThe logic L N for PAs\n\nWe saw in the previous subsection that L is not strong enough for PAs. We now give a logic characterizing our relaxed relations \u227a\u03b5 and \u223c\u03b5 . The difference between this logic and L \u00ac is the modal operator\nthat permits to \"isolate\" a distribution out of a state, and write properties that it satisfies. This allows the\nsemantics to be defined on states, as pointed out as well by D'Argenio et al. [9]. In contrast, Parma and\nSegala [20] used a semantics on distributions to prove the logical characterisation of bisimulation (with\n\u03b5 = 0).\nDefinition 8 (The logic L N,\u00ac ) The syntax differs by one operator from L \u00ac :\nL N,\u00ac \u03c6 := >| \u00ac\u03c6 | \u03c61 \u2227 \u03c62 | \u03c61 \u2228 \u03c62 | hai {(\u03c6i , pi )}i\u2208I I finite, pi \u2208 Q \u2229 [0; 1].\nWe write L N for the same logic without negation. Let \u03b5 \u2208 [0; 1]. The relaxed semantics |=\u03b5 of L N,\u00ac\nis defined by structural induction on the formulas, in the same way as for L \u00ac except for the modal\na\nformula: s |=\u03b5 hai {(\u03c6i , pi )}i\u2208I iff there exists a transition s \u2192 \u03bc from s such that for all i \u2208 I, we have\n\u03bc([[\u03c6i ]]\u03b5 ) \u2265 pi \u2212 \u03b5.\nAs for the logic L \u00ac we can, by structural induction on the formulas, construct for each \u03c6 \u2208 L N,\u00ac\nan associated formula \u03c6\u03b5 \u2208 L N,\u00ac such that [[\u03c6 ]]\u03b5 = [[\u03c6\u03b5 ]]. Hence, here again, model checking of formulas\nwith the relaxed semantics can be done using the same technique as for the usual semantics. The logics\nN\nN\nL N and L N,\u00ac induce the relations \u227aL\nand \u223cL\nas in Def. 6. The following example illustrates\n\u03b5\n\u03b5\nhow this logic differs from L . The key difference is that formula hai {(\u03c6i , pi )}i\u2208I is not equivalent to\n\u2227i\u2208I hai pi \u03c6i .\nExample 4 Consider the PAs of Ex. 3. As s \u227a prio t, we also have s \u227aL\n\u03b5 t by Theorem 3, and hence every\nformula of L satisfied by s is also satisfied by t. However, s 6\u227a t and the formula\n1\n1\n5\nhai {(hb1 i1 >, ), (hb2 i1 >, ), (hb3 i1 >, )}\n3\n4\n12\nof L N is not satisfied by t. Note how the semantics forces the \u03bdi 's to commit before the three \"bi\nformulas\" are checked.\n\n\fTracol, Desharnais, Zhioua\n\n155\n\nThe following theorem is a logical characterization of the \u03b5-relations. Notice that we need negation\nonce again, since two-way simulation is different from bisimulation.\nTheorem 5 \u227a\u03b5 =\u227aL\nand \u223c\u03b5 =\u223cL\n\u03b5\n\u03b5\nN\n\nN,\u00ac\n\n.\n\nN\nProof. [\u227a\u03b5 \u2286\u227aL\n\u03b5 ]. Let R be an \u03b5-simulation. We prove by structural induction that for all \u03c6 \u2208 L ,\nR([[\u03c6 ]]) \u2286 [[\u03c6 ]]\u03b5 . We prove the case where \u03c6 = hai {(\u03c6i , pi )}i\u2208I , since the other cases are trivial. Let\na\ns \u2208 [[\u03c6 ]], t \u2208 R({s}) and let s \u2192 \u03bc be the associated transition such that for all i \u2208 I, \u03bc([[\u03c6i ]]) \u2265 pi . Since\na\nR is an \u03b5-simulation, there exists a transition t \u2192 \u03bd such that \u03bcL \u03b5 (R)\u03bd. Thus, for all E \u2286 S, we have\n\u03bc(E) \u2264 \u03bd(R(E)) + \u03b5. In particular, given i \u2208 I, we get that \u03bc([[\u03c6i ]]) \u2264 \u03bd(R([[\u03c6i ]])) + \u03b5. But by induction\nhypothesis, we know that for all i \u2208 I, R([[\u03c6i ]]) \u2286 [[\u03c6i ]]\u03b5 . This gives us that \u03bc([[\u03c6i ]]) \u2264 \u03bd([[\u03c6i ]]\u03b5 )) + \u03b5 hence\nthe result since by hypothesis \u03bc([[\u03c6i ]]) \u2265 pi .\nN\na\nL\nL\n[\u227a\u03b5 \u2287\u227aL\n\u03b5 ]. We prove that \u227a\u03b5 is an \u03b5-simulation. Suppose that s \u227a\u03b5 t, and let s \u2192 \u03bc be a transition\nfrom s. We need to find some t \u2192 \u03bd such that \u03bd(\u227aL\n\u03b5 (X)) \u2265 \u03bc(X) \u2212 \u03b5 for all X \u2286 S. This will be\nconstructed from a family of t \u2192 \u03bdE for finite sets E. Let n \u2208 N and let E \u2286 S be a finite set such that\n\u03bc(E) \u2265 \u03bc(S) \u2212 1/n.\nThe key idea is to define the formula \u03c6ek = \u2227e|=\u03c6 j , j\u2264k \u03c6 j for every e \u2208 E, and where (\u03c6 j ) j\u2208N is an\nenumeration of the formulas of L . Then for every finite set X \u2286 S, we set \u03c6Xk = \u2228e\u2208X \u03c6ek , and we let\npkX := \u03bc([[\u2228e\u2208X \u03c6ek ]]). Since e |= \u03c6ek , we have [[\u03c6ek ]] \u2287\u227aL\n\u03b5 ({e}),\nN\n\npkX = \u03bc([[\u2228e\u2208X \u03c6ek ]]) \u2265 \u03bc(\u227aL\n\u03b5 (X)) \u2265 \u03bc(X),\nand s |= hai {(\u2228e\u2208X \u03c6ek , pkX )}X\u2286E for all k \u2265 1. By hypothesis, we get that t |=\u03b5 hai {(\u2228e\u2208X \u03c6ek , pkX )}X\u2286E\nfor all k \u2265 1. Let \u03bdEk be the associated transition. Then for all X \u2286 E and for all k \u2208 N:\n\u03bdEk ([[\u2228e\u2208X \u03c6ek ]]) \u2265 pkX \u2212 \u03b5 \u2265 \u03bc(X) \u2212 \u03b5.\nNow, [[\u2228e\u2208X \u03c6ek ]]\u03b5 is decreasing to \u227aL\n\u03b5 (X) as k goes to infinity. Since the systems we consider\na\nare finitely branching, we can define a transition t \u2192 \u03bdE such that \u03bdE is the limit of a subsequence of\n{\u03bdEk }k\u2208N . That is, there exists an increasing function \u03c8 : N \u2192 N such that for all set Y \u2286 S we have\n\u03c8(k)\nlimk\u2192\u221e \u03bdE (Y ) = \u03bdE (Y ). This implies that: \u03bdE (\u227aL\n\u03b5 (X)) \u2265 \u03bc(X) \u2212 \u03b5. We have proven the following:\na\na\nfor all s \u2192 \u03bc, for all E \u2286 S finite, there exists t \u2192 \u03bdE such that for any X \u2286 E we have \u03bdE (\u227aL\n\u03b5 (X)) \u2265\n\u03bc(X) \u2212 \u03b5. Let Ek , k \u2208 N be a growing sequence of finite subsets of S such that S = \u222ak\u2208N Ek . Again, since\nthe system is finitely branching, let \u03bd be the limit of a subsequence of {\u03bdEk }k\u2208N . As before, we get that\nfor any X \u2286 S finite, \u03bd(\u227aL\n\u03b5 (X)) \u2265 \u03bc(X) \u2212 \u03b5.\nLN\n\nLN\n\n[\u223c\u03b5 =\u223c\u03b5 \u00ac ] It can be proven that \u223c\u03b5 \u00ac is an \u03b5-bisimulation by following the proof above and using the\nLN\nfact that \u223c\u03b5 \u00ac is a symmetric relation (which comes from the presence of negation in L\u00acN ). \u0003\n\n4\n4.1\n\nA Bisimulation Pseudo-Metric between PAs\nThe pseudo-metric d\n\nThe notion of \u03b5-bisimulation induces a pseudo-metric on states of a PA, given by the smallest \u03b5 such that\nthe states are \u03b5-bisimilar.\nDefinition 9 (Bisimulation metric) Given s,t \u2208 S, let d(s,t) = inf{\u03b5 | s \u223c\u03b5 t}.\n\n\f156\n\nComputing Distances between Probabilistic Automata\n\nUsing the finite branching of our systems, we can prove d is a bisimulation pseudo-metric, i.e., states\nat distance zero are bisimilar. We now discuss the computation of this distance between all states of a\ngiven PA. We propose three approaches, the first being exact, and the others approximate. The two first\ncompute the distance iteratively, updating a function di : S \u00d7 S \u2192 [0; 1], in the same way as it was done\nfor deterministic PAs in [12]. This approach is close to the classical iterative algorithms for computing\nsimulation and bisimulation on probabilistic systems, see [2, 6]. It makes use of a network flow computation. The algorithm for the first approach is the left one in Fig. 2. Given d : S \u00d7 S \u2192 [0; 1], and \u03b5 \u2265 0,\nlet Rd\u03b5 be the relation on S \u00d7 S defined as: Rd\u03b5 (s,t) iff d(s,t) \u2264 \u03b5.\nAlgorithm A : exact computation\nInput: A finite PA S = (S, Act, D).\nOutput: d : S \u00d7 S \u2192 [0; 1].\nMethod:\nLet d0 (s,t) = 0 \u2200s,t \u2208 S \u00d7 S. Let j = 0\nUntil d j = d j+1 do begin:\nd j+1 = d j .\nFor all (s,t) \u2208 S \u00d7 S do begin:\nFor all a \u2208 Act do begin:\na\nFor all s \u2192 \u03bc do begin:\nLet d j+1 (s,t) be the smallest\na\n\u03b5 \u2208 [0; 1] s.t. \u2203 t \u2192 \u03bd such that\nthe maximum flow of network\nd\nN (\u03bc, \u03bd, R\u03b5 j ) is \u2265 \u03bc(S) \u2212 \u03b5.\nend end end\nj = j + 1 end return d j\u22121 .\n\nAlgorithm B : computation up to 1/n\nInput: A finite PA S = (S, Act, D), n \u2208 N.\nOutput: d : S \u00d7 S \u2192 [0; 1].\nMethod:\nLet d0 (s,t) = 0 \u2200s,t \u2208 S \u00d7 S. Let j = 0\nFor m = n \u2212 1 to 0 do begin:\nUntil d j = d j+1 do begin:\nd j+1 = d j .\nFor all (s,t) s.t. d(s,t) = 0 do begin:\nFor all a \u2208 Act do begin:\na\nFor all s \u2192 \u03bc do begin:\na\nIf \u2203 t \u2192 \u03bd s.t. the maximum\nd\nflow of network N (\u03bc, \u03bd, R0 j )\nis < \u03bc(S) \u2212 m\u03b5/n then let\nd j+1 (s,t) = (m + 1)\u03b5/n.\nend end end\nj = j + 1 end end return d j\u22121 .\n\nFigure 2: Computations of metric d on S\n\nProposition 3 Algorithm A correctly outputs the distance d between all pairs of states in S. Moreover,\nalgorithm A runs in time O(|S|9 * |Act| * l 2 ), where l is the maximal number of transitions with the same\nlabel issued from a single state.\nThis algorithm is quite expensive, and hence we propose other approaches that approximate the\ndistance. The first one is a variation of algorithm A and is the right-hand algorithm of Fig. 2. Let 1/n\nbe the accuracy we are interested in, for n \u2208 N. The idea is to compute m/n-bisimulation iteratively,\nfor m decreasing from n \u2212 1 to 0. These relations are decreasing as \u03b5-bisimilarity implies \u03b5 0 -bisimilarity\nfor any \u03b5 0 > \u03b5. At each iteration of that loop, states whose distance have not been established yet have\nd-value 0. At step m < n, these states will be given distance (m + 1)/n if they are not m/n-bisimilar.\nThe relation consisting of states at zero distance will decrease at every j step. For every pair of states, the\nworst number of flow networks to be computed will be n (this happens if the states are bisimilar). Hence\nthe algorithm runs in O(|S|5 * n * |Act| * l 2 ). Of course, some values of m can be ignored and we can save\nsome time.\nThe last algorithm that we propose uses recent work of Zhang et al. [24], to update efficiently the\nflow computation in algorithm A . The algorithm of Zhang et al. computes strong bisimularity on a\nprobabilistic automaton in time O(|S| * m2 ), where m is the total number of transitions. By a slight\n\n\fTracol, Desharnais, Zhioua\n\n157\n\ngeneralization of this algorithm to our context, we can compute \u03b5-bisimularity on S in time O(|S| * m2 ),\nfor any given \u03b5. Using a dichotomic approach, given two states s and t, we can compute d(s,t) up to an\nadditive approximation factor \u03b4 in time O(|S| * m2 * log(\u03b4 )), and thus we can compute d up to an additive\napproximation factor \u03b4 in time O(|S|3 * m2 * log(\u03b4 )).\n\n4.2\n\nThe decayed distance d \u03bb\n\nIn the previous definitions, differences in the far future have as much importance as those in the near\nfuture. We can relax the impact of the future, or instead the impact of short term transitions, by using a\ndecayed relaxation. Instead of a fixed relaxation of parameter \u03b5, we can ask for a relaxation that changes\nas we get further from the starting state. As we get deeper through the transitions, the parameter could\nget bigger, hence diminishing the importance of further differences, or symmetrically, we could make the\nparameter smaller. In order to leave this flexible, we will use a function \u03bb : [0; 1] \u2192 [0; 1]. If x \u2264 \u03bb (x),\nthe future will be neglected whereas x \u2265 \u03bb (x) will make the future more precise. If \u03bb is the identity,\nwe get the previous notions. We will describe below a natural choice for \u03bb , but first, let us define the\nnew semantics. We write \u03bb n for to the n-th self composition of function \u03bb , n \u2208 N, and \u03bb 0 is the identity\nfunction on [0; 1]. Also, LnN will be the set of formulas of L N of depth at most n \u2208 N.\nDefinition 10 (The (\u03b5, \u03bb )-semantics) Let \u03b5 \u2208 [\u22121; 1], and \u03bb : [0; 1] \u2192 [0; 1] The syntax is the one of\nL N . The semantics |=\u03bb\u03b5 is defined similarly as for L N except for the modal operator. Given \u03c6 \u2208 L N ,\na\nlet [[\u03c6 ]]\u03bb\u03b5 = {s \u2208 S|s |=\u03bb\u03b5 \u03c6 }. Given s \u2208 S, s |=\u03bb\u03b5 hai {(\u03c6i , pi )}i\u2208I iff there exists a transition s \u2192 \u03bc such that\nLnN ,\u03bb\n\nfor all i \u2208 I, we have \u03bc([[\u03c6i ]]\u03bb\u03bb (\u03b5) ) \u2265 pi \u2212 \u03b5. This semantics induces the relations \u227a\u03b5\nin Def. 6.\nL N ,\u03bb\n\nN,\u00ac\n\nn\nand \u223cL\n\u03b5\n\n,\u03bb\n\nas\n\nN,\u00ac\n\nThe relations \u227a\u03b5 n and \u223c\u03b5Ln ,\u03bb are defined for formulas of a given maximal depth n, because in\norder to compute |=\u03bb\u03b5 on S \u00d7 S for a given \u03b5 \u2208 [0; 1], we may have to compute the |=\u03bb\u03bb n (\u03b5) for all n \u2208 N.\nMost of the time, one wants to give less importance to the future. In these situations, the decay is\ncalled a discount and could be exponential, as in [10, 14]. In our case, this would correspond to asking\nthat there is a constant 0 < c < 1 such that 1 \u2212 \u03bb (\u03b5) = c(1 \u2212 \u03b5), i.e. \u03bb (\u03b5) = 1 \u2212 c * (1 \u2212 \u03b5).\nThe associated simulation and bisimulation are variations of Def. 2:\nDefinition 11 (Order n (\u03b5, \u03bb )-bi/simulation) Given n \u2208 N, an order n (\u03b5, \u03bb ) simulation on S is a decreasing sequence of relations R0 , ..., Rn on S such that R0 = S \u00d7 S, and for all i \u2208 [1; n], whenever sRit,\nn\u2212i\na\na\nif s \u2192 \u03bc, then there exists t \u2192 \u03bd such that \u03bc L \u03bb (\u03b5) (Ri\u22121 )\u03bd. We write s \u227a\u03bb\u03b5 ,n t if there exists an order n\n(\u03b5, \u03bb )-simulation Rn on S such that sRnt, and we write s \u223c\u03bb\u03b5 ,n t if s \u227a\u03bb\u03b5 ,n t and t \u227a\u03bb\u03b5 ,n s.\nLnN ,\u03bb\n\nProposition 4 Let n \u2208 N. Then \u227a\u03b5\n\nN ,\u00ac\n\n= \u227a\u03bb\u03b5 ,n and \u223cL\u03b5 n\n\n,\u03bb\n\n= \u223c\u03bb\u03b5 ,n\n\n\u03bb\nGiven s,t \u2208 S, we define d \u03bb (s,t) = min{\u03bb \u2212n (1) | s \u223c\u03bb\u03bb ,n\n\u2212n (1) t}. We can compute the distance d using\nthe algorithm of Fig. 3.\n\nProposition 5 Algorithm C of Fig. 3 runs in time O(|S|5 * |Act| * l 2 ).\nProof. Direct, using O(|S|3 ) flow network computations. \u0003\n\n\f158\n\nComputing Distances between Probabilistic Automata\nAlgorithm C : Computation of the discounted metric d\u03bb on S\nInput: A finite PA S = (S, Act, D) N \u2208 N.\nOutput: d : S \u00d7 S \u2192 [0; 1].\nMethod:\nLet d0 (s,t) = 1 for all s,t \u2208 S \u00d7 S. Let \u03b4 = 1/N.\nLet R0 = S \u00d7 S.\nFor n = 1 to N do begin:\nFor all (s,t) \u2208 S \u00d7 S do begin:\nFor all a \u2208 Act do begin:\na\nFor all s \u2192 \u03bc do begin:\nLet Rn+1 = Rn .\na\nIf there exists no transition t \u2192 \u03bd such that the maximum\nflow of the network N (\u03bc, \u03bd, Rn ) is greater than or equal\nto \u03bc(S) \u2212 (1 \u2212 n * \u03b4 ), then: let d(s,t) = 1 \u2212 n * \u03b4 , and let\nRn+1 = Rn+1 \u2212 {(s,t)}.\nend end end end\nreturn d.\nFigure 3: Computation of metric d\u03bb on S\n\n4.3\n\nComparison to other metrics on probabilistic systems\n\nDuring the past ten years, several metrics have been defined in the context of Probabilistic Automata\nor closely related models such as Labeled Markov Chains [11, 15, 13], reactive probabilistic transition\nsystems [5], Markov Decision Processes [14, 13, 21], or more general game processes [1]. Most of these\nmetrics are variations of the metric of [11]. In [5, Th. 4.6], an equivalent metric is defined as a terminal\ncoalgebra, using category theory. In [4], the same authors give an algorithm to compute in polynomial\ntime this metric, relying on linear programming computation for a transshipment optimization problem.\nThis approach is for deterministic models and it is applied in [14] and related papers to compute metrics\nbetween Markov Decision Processes. Most of these algorithms introduce a decay factor to make the computation tractable. In [1] the authors consider metrics between systems which allow non determinism,\nbut the complexity of the algorithms presented in [8] to compute the metrics is at best PSPACE.\nThe main difference between our metric and those is that differences along paths are not accumulated\nin ours, even in the discounted metric: other metrics all involve comparing (among others) the probability of paths, and this makes these metrics straightforwardly different from ours, as we never multiply\nprobability values. In [11, 14], the metric can be computed using a familly of functional expressions\nF c from states to [0; 1] that play the same role as the quantitative formulas of [1]. Given s,t states of\nthe system, the distance d c (s,t) is then defined as d c (s,t) = sup f \u2208F c | f c (s) \u2212 f c (t)|. This distance is\nincomparable with ours, as shows the following example.\nExample 5 Let 0 < \u03b5 < 1, and consider the systems of Fig. 4. The distance between s and t is always\ngreater with our distance, as d c (s,t) = c2 * \u03b5 2 \u2264 \u03b5 = d(s,t). On the contrary, for \u03b5 < 1/2, there is some\nc for which the distance between u and v is smaller with our distance. Indeed, d c (u, v) >= c2 (\u03b5/2 \u2212 \u03b5 2 ),\nwhereas d(u, v) = \u03b5. Hence we obtain d(u, v) \u2264 d c (u, v) by taking c \u2208 [0; 1] such that c2 (3\u03b5/2 \u2212 \u03b5 2 ) > \u03b5;\nfor example, with \u03b5 = 1/4 and c2 > 4/5. The example can be adapted for \u03b5 \u2265 1/2.\n\n\fTracol, Desharnais, Zhioua\n\n159\n\ns\n\ns1\n\n\u000f\n\nt1\n\nb,1\u2212\u03b5\n\ns3\n\n\u007f\u007f\n\u007f\u007f a,\u03b5\n\u007f\n\u007f\n\u000f\n\u007f\u007f\n\u007f\n\na,1\n\n\u000f\n\nu1\n\nt2\n\u000f\n\n||\n|| a,1\u2212\u03b5\n|\n|\n|~ |\n\u000f\na,\u03b5\n\na,1\u2212\u03b5\n\ns2\n\nv\n\nu\n\nt\n\n}}\n}} a,\u03b5\n}\n}\n}\n~}\n\u000f\n\na,1\u2212\u03b5\n\nb,1\n\n\u000f\n\nv1\n\nv2\n\nb,1/2\n\n\u000f\n\nv3\n\nu3\n\nt3\n\nb,1/2\u2212\u03b5\n\nFigure 4: Our metric differs from those based on paths.\n\n4.4\n\nThe Metric d on a Process Algebra\n\nWe consider a process algebra on an extension of the model of PAs: the extension is that we distinguish\nbetween Input and Output action labels. As in [15], we assume a set of underlying labels \u03a3, and suppose\nthat the labels of the PAs belong to a set L = L! \u222a L?, where L? = {a?|a \u2208 \u03a3} and L! = {a!|a \u2208 \u03a3} are the\nsets of Input and Ouput labels respectivelly. Two PAs S1 = (S1 , Act1 , D1 , s01 ) and S2 = (S2 , Act2 , D2 , s02 )\nwill synchronize on labels in Act1 \u2229 Act2 .\nWe only present the operators for non-deterministic choice and parallel composition, as the other\noperators can be taken as in [15].\nNon Deterministic Choice. Let S1 , ..., Sk be PAs with respective state spaces S1 , ..., Sk and initial\nstates s01 , ..., s0k . Let {a1 , ..., al } \u2286 L, and for each ai let {\u03bci, j | j \u2208 [1; ni ]} be a finite family of distributions\na\non {s01 , ..., s0k }. We define: S 0 = h+i li=1 {s \u2192i \u03bci, j , j \u2208 [1; ni ]}{S1 , ..., Sk }, a PA whose state space is\na\nS0 = {s} ]i\u2208[1;k] Si , and initial state s. Transitions from s are all the s \u2192i \u03bci, j . There may be several\ntransitions from s with the same label ai . S 0 accepts the input label a or outputs the label a, depending\non a \u2208 L? or a \u2208 L!.\nParallel Composition. Given PAs Si = (S1 , Acti , Di , s0i ), i = 1, 2, we define the parallel composition\nS 0 = S1 ||S2 . The synchronisation is on labels in Act1 \u2229 Act2 . The state space of S 0 is S0 = S1 \u00d7 S2 , with\ninitial state s00 = (s01 , s02 ). The set of labels of S 0 is Act 0 = Act1 \u222a Act2 . Given \u03bc and \u03bd two distributions\non disjoint sets S1 and S2 , given X \u2286 S1 \u00d7 S2 , let \u03bc \u2297 \u03bd(X) = \u2211(s,t)\u2208X \u03bc(s) * \u03bd(t). Given states s \u2208 S1 and\nt \u2208 S2 , we expect the following synchronized transitions:\na?\n\na?\n\n\u2022 Synchronization on input labels in Act1 \u2229 Act2 : \u2200a \u2208 Act1 \u2229 Act2 , if s \u2192 \u03bc and t \u2192 \u03bd, then there is\na?\na transition (s,t) \u2192 \u03bc \u2297 \u03bd on S .\na!\n\na?\n\na!\n\n\u2022 Synchronization in the Output/Input: if s \u2192 \u03bc and t \u2192 \u03bd, then there is a transition (s,t) \u2192 \u03bc \u2297 \u03bd\n(and symmetrically)\na\n\na\n\n\u2022 Asynchronous evolution on labels in Act1 \\ Act2 : given a \u2208 Act1 \\ Act2 if s \u2192 \u03bc, then (s,t) \u2192 \u03bc \u2297\u03b4t ,\nwhere \u03b4t is the Dirac distribution on t (symmetrically on S2 ).\nWe prove that the distance d is non expansive with respect to the parallel operator: when composing\ntwo processes with a third one, the distance does not increase. Non expansiveness with respect to other\noperators is more common.\nTheorem 6 d(S1 ||S , S2 ||S ) \u2264 d(S1 , S2 ).\nProof. Let s, s1 , s2 be three states of S , S1 and S2 respectivelly. Let \u03b5 \u2265 0, and suppose s1 \u223c\u03b5 s2 . We\nwant to prove that s1 \u00d7 s, which is a state of S1 ||S , is \u03b5-bisimilar to s2 \u00d7 s, a state of S2 ||S . We prove\nby induction on n \u2208 N that if s1 \u223cn\u03b5 s2 , then s1 \u00d7 s \u223cn\u03b5 s2 \u00d7 s. We will use the following notations: Given\n\u03c6 \u2208 L N , and j \u2208 {1, 2}:\n\n\f160\n\nComputing Distances between Probabilistic Automata\n\n[[\u03c6 ]]S j ||S = {s j \u00d7 s|s j \u2208 S j , s \u2208 S, and s j \u00d7 s |= \u03c6\nWhere the semantics is taken on the PA S j ||S . Let\nleft j ([[\u03c6 ]]S j ||S ) = {v \u2208 S j |\u2203u \u2208 S s.t. u \u00d7 v |= \u03c6 }\nGiven v \u2208 S, let\nright j (v, [[\u03c6 ]]S j ||S ) = {u \u2208 S1 |u \u00d7 v |= \u03c6 }\nThe key case is when \u03c6 = hai {(\u03c6i , pi )}i\u2208I \u2208 L N , with depth n. Suppose s1 \u00d7 s |= \u03c6 . Then there\na\nexists a transition s1 \u00d7 s \u2192 \u03bc1 \u2297 \u03bd on S 0 such that for all i \u2208 I, (\u03bc1 \u2297 \u03bd)([[\u03c6i ]]) \u2265 pi .\na\nBy hypothesis, s1 \u223cn\u03b5 s2 . Hence, there exists a transition s2 \u2192 \u03bc2 such that \u03bc1 L \u03b5 (\u223c\u03b5 )\u03bc2 .\nWe know that for all i \u2208 I,\n\u03bc1 \u2297 \u03bd([[\u03c6i ]]) =\n\n\u03bd(v) *\n\n\u2211\nv\u2208left1 ([[\u03c6i ] )\n\n\u03bc1 (v).\n\n\u2211\nu\u2208right1 (v,[[\u03c6i ] )\n\nGiven v \u2208 left([[\u03c6i ]]) (hence v \u2208 S), we know that \u03bc2 (\u223cn\u03b5 right1 (v, [[\u03c6i ]])) \u2265 \u03bc1 (right1 (v, [[\u03c6i ]])) \u2212 \u03b5.\nMoreover, by induction hypothesis, \u223cn\u03b5 right1 (v, [[\u03c6i ]]) \u2286 right2 (v, [[\u03c6i ]]\u03b5 . Indeed,\n\u223cn\u03b5 right1 (v, [[\u03c6i ]]) \u2229 S2 =\u223cn\u03b5 {u \u2208 S2 |\u2203u0 \u2208 S1 s.t. u \u223cn\u03b5 u0 and u0 |= \u03c6i .\nWe get the result since by induction hypothesis, if u \u223cn\u03b5 u0 and s0 \u2208 S, we have u \u00d7 s0 \u223cn\u03b5 u0 \u00d7 s0 .\nThis implies that \u03bc2 (right2 (v, [[\u03c6i ]]\u03b5 )) \u2265 \u03bc1 (right1 (v, [[\u03c6i ]])) \u2212 \u03b5. Finally,\n\n\u2211\nv\u2208left2 ([[\u03c6i ] \u03b5 )\n\n\u03bd(v) *\n\n\u2211\nu\u2208right2 (v,[[\u03c6i ] \u03b5 )\n\n\u03bc2 (v) \u2265\n\n\u2211\nv\u2208left1 ([[\u03c6i ] )\n\n\u03bd(v) *\n\n\u2211\n\n\u03bc1 (v) \u2212 \u03b5.\n\nu\u2208right1 (v,[[\u03c6i ] )\n\nHence \u03bc2 \u2297 \u03bd([[\u03c6i ]]\u03b5 ) \u2265 \u03bc1 \u2297 \u03bd([[\u03c6i ]]) \u2212 \u03b5. This proves that s2 \u00d7 s |=\u03b5 \u03c6 . \u0003\n\n5\n\nExamples\n\nWe build a benchmark set of deterministic PAs to compare distances. The processes are variations of\na basic one from which we delete some transitions. The state space of the basic PA is a square grid of\nn \u00d7 n. The set of actions is {a}. All the computations on the state indices are done modulo n: the grid is\na torus. The a-transitions from state (i, j) are as follows:\nfrom (i, j) to\n\n(i, j \u2212 1) : 0.1\n\n(i, j + 1) : 0.5\n\n(i \u2212 1, j) : 0.25\n\n(i + 1, j) : 0.15\n\nThis basic PA is compared to variations of it obtained by deleting in some states the transition of label\na (to all successors). Note that the basic process is bisimilar to the one-state process that can do a with\nprobability 1. We consider the distances between states with same indices of the different systems. Fig. 5\nillustrates some PAs and the impact of the deletion of transitions for the two distances that we defined.\nThe distance d \u03bb is illustrated in the bottom grids of the figure. The linear function for \u03bb is the following,\nwith N = 20. We take \u03b4 = 1/N, and let \u03bb (x) = x + \u03b4 if x \u2208 [0; 1 \u2212 \u03b4 ], and \u03bb (x) = 1 if x \u2208 [1 \u2212 \u03b4 ; 1].\nOne can observe that the decay distances fade out when further from the difference, whereas d is more\nconstant.\nIt would be nice to compare these grids with others obtained from other known metrics. We leave\nthat for future work, as we have no implementation of other metrics that can handle more than 25 states.\n\n\fTracol, Desharnais, Zhioua\n\n161\n\nFigure 5: The red entries of the top grid are states that have lost their a-transition. The two other grids have at entry (i, j) the\ndistance between state (i, j) of top grid to state (i, j) in the basic PA. The darker is the entry, the bigger the distance. The middle\ngrid illustrates the basic distance, the other the decayed one.\n\n6\n\nConclusion\n\nWe presented relaxed notions of \u03b5-simulation and \u03b5-bisimulation. When \u03b5 = 0 we retrieve the usual\nnotions of bisimulation and simulation on PAs. We gave logical characterisations of these notions and\nalgorithms to compute in PTIME two corresponding pseudo-metrics, one that discounts the future, and\none that does not. We showed that our distance is not expansive with respect to process algebra operators. We also showed that the basic logic L (\u00ac) characterises a notion weaker than \u03b5-(bi)simulation,\ncalled a priori \u03b5-(bi)simulation. Interestingly, we have proven this notion NP-difficult to decide. Further\nwork includes relaxing what is called probabilistic bisimulation and studying the associated distances;\nimplementing our third proposal of algorithm to compute d, using a modification of the algorithm of\n[24]; investigating further the weaknesses and strengths of the different metrics defined so far.\n\nReferences\n[1] Luca de Alfaro, Rupak Majumdar, Vishwanath Raman & Marielle Stoelinga (2007): Game Relations and\nMetrics. In: LICS '07. IEEE Computer Society, pp. 99\u2013108, doi:10.1109/LICS.2007.22.\n[2] Christel Baier (1996): Polynomial Time Algorithms for Testing Probabilistic Bisimulation and Simulation.\nIn: CAV'96. LNCS 1102, pp. 38\u201349, doi:10.1007/3-540-61474-5 57.\n[3] Franck van Breugel, Babita Sharma & James Worrell (2007): Approximating a Behavioural Pseudometric Without Discount for Probabilistic Systems. In: FOSSACS. LNCS 4423, Springer, pp. 123\u2013137,\ndoi:10.1007/978-3-540-71389-0 10.\n[4] Franck van Breugel & James Worrell (2001): An Algorithm for Quantitative Verification of Probabilistic\nTransition Systems. In: CONCUR '01. Springer-Verlag, pp. 336\u2013350, doi:10.1007/3-540-44685-0 23.\n[5] Franck van Breugel & James Worrell (2004): A behavioural pseudometric for probabilistic transition systems. Theor. Comput. Sci. 331(1), pp. 115\u2013142, doi:10.1007/3-540-48224-5 35.\n\n\f162\n\nComputing Distances between Probabilistic Automata\n\n[6] Stefano Cattani & Roberto Segala (2002): Decision Algorithms for Probabilistic Bisimulation. In: CONCUR\n'02. Springer-Verlag, pp. 371\u2013385, doi:10.1007/3-540-45694-5 25.\n[7] Stefano Cattani, Roberto Segala, Marta Kwiatkowska & Gethin Norman (2005): Stochastic transition systems\nfor continuous state spaces and non-determinism. In: FOSSACS'05. LNCS 3441, Springer Verlag, pp. 125\u2013\n139, doi:10.1007/978-3-540-31982-5 8.\n[8] K. Chatterjee, Luca de Alfaro, Rupak Majumdar & Vishwanath Raman (2010, to appear.): Algorithms for\ngame metrics. LMCS: Logical Methods in Computer Science doi:10.2168/LMCS-6(3:13)2010.\n[9] Pedro R. D'Argenio, Nicol\u00e1s Wolovick, Pedro S\u00e1nchez Terraf & Pablo Celayes (2009): Nondeterministic labeled Markov processes: bisimulations and logical characterization. QEST'09 , pp. 11\u2013\n20doi:10.1109/QEST.2009.17.\n[10] Jos\u00e9e Desharnais, Abbas Edalat & Prakash Panangaden (2002): Bisimulation for Labeled Markov Processes.\nInformation and Computation 179(2), pp. 163\u2013193, doi:10.1.1.16.5653.\n[11] Jos\u00e9e Desharnais, Vineet Gupta, R. Jagadeesan & P. Panangaden (1999): Metrics for Labeled Markov Processes. In: CONCUR'99. LNCS, Springer-Verlag, pp. 258\u2013273, doi:10.1007/3-540-48320-9 19.\n[12] Jos\u00e9e Desharnais, Fran\u00e7ois Laviolette & Mathieu Tracol (2008): Approximate analysis of probabilistic processes: logic, simulation and games. In: QEST'08. IEEE Computer Society, pp. 264\u2013273,\ndoi:10.1109/QEST.2008.42.\n[13] Jos\u00e9e Desharnais, Fran\u00e7ois Laviolette & Sami Zhioua (2006): Testing Probabilistic Equivalence Through\nReinforcement Learning. In: FSTTCS'06. LNCS 4337, Springer, pp. 236\u2013247, doi:10.1007/11944836 23.\n[14] Norm Ferns, Prakash Panangaden & Doina Precup (2004): Metrics for finite Markov decision processes. In:\nUAI'04. AUAI Press Arlington, Virginia, United States, pp. 162\u2013169, doi:10.1.1.87.9485.\n[15] Norman Ferns, Prakash Panangaden & Doina Precup (2005): Metrics for Markov Decision Processes with\nInfinite State Spaces. In: UAI'05. AUAI Press, p. 201, doi:10.1007/BF01908587.\n[16] Michael R. Garey & David S. Johnson (1979): Computers and Intractability: A Guide to the Theory of\nNP-completeness. W. H. Freeman & Co., New York, NY, USA.\n[17] Alessandro Giacalone, Chi-Chang Jou & Scott A. Smolka (1990): Algebraic Reasoning for Probabilistic\nConcurrent Systems. In: Proc. IFIP TC2 Working Conference on Programming Concepts and Methods.\nNorth-Holland, pp. 443\u2013458, doi:10.1.1.56.3664.\n[18] Holger Hermanns (2002): Interactive Markov chains, and the quest for quantified quality. Springer-Verlag,\nBerlin, Heidelberg, doi:10.1007/3-540-45804-2.\n[19] Kim G. Larsen & Arne Skou (1991): Bisimulation through Probablistic Testing. Information and Computation 94, pp. 1\u201328, doi:10.1.1.158.9316.\n[20] Augusto Parma & Roberto Segala (2007): Logical characterisation of Bisimulations for Discrete Probabilistic Systems. In: FOSSACS'07. LNCS 4423, Springer-Verlag, pp. 287\u2013301, doi:10.1007/978-3-540-713890 21.\n[21] Martin L. Puterman (1994): Markov Decision Processes: Discrete Stochastic Dynamic Programming. Wiley.\n[22] Roberto Segala & Nancy Lynch (1994): Probabilistic Simulations for Probabilistic Processes. In: CONCUR'94. LNCS 836, Springer-Verlag, pp. 481\u2013496, doi:10.1007/BFb0015027.\n[23] Roberto Segala & Andrea Turrini (2007): Approximated Computationally Bounded Simulation Relations for\nProbabilistic Automata. In: CSF'07. pp. 140\u2013156, doi:10.1007/3-540-45694-5 25.\n[24] Lijun Zhang, Holger Hermanns, Friedrich. Eisenbrand & David N. Jansen (2007): Flow faster: efficient\ndecision algorithms for probabilistic simulations. In: TACAS'07. LNCS 4424, Springer-Verlag, pp. 155\u2013\n169, doi:10.1007/978-3-540-71209-1 14.\n\n\f"}