{"id": "http://arxiv.org/abs/0910.0928v1", "guidislink": true, "updated": "2009-10-06T06:25:34Z", "updated_parsed": [2009, 10, 6, 6, 25, 34, 1, 279, 0], "published": "2009-10-06T06:25:34Z", "published_parsed": [2009, 10, 6, 6, 25, 34, 1, 279, 0], "title": "BioDiVinE: A Framework for Parallel Analysis of Biological Models", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0910.3176%2C0910.5432%2C0910.2417%2C0910.0794%2C0910.5607%2C0910.4331%2C0910.0735%2C0910.0061%2C0910.2470%2C0910.4557%2C0910.2428%2C0910.5169%2C0910.2525%2C0910.2093%2C0910.0616%2C0910.4576%2C0910.1709%2C0910.5033%2C0910.4718%2C0910.1995%2C0910.3671%2C0910.2960%2C0910.1191%2C0910.5879%2C0910.5561%2C0910.4863%2C0910.3670%2C0910.5312%2C0910.1528%2C0910.1742%2C0910.0611%2C0910.0351%2C0910.2029%2C0910.5104%2C0910.1515%2C0910.3164%2C0910.4379%2C0910.2297%2C0910.5049%2C0910.3035%2C0910.0116%2C0910.4982%2C0910.4783%2C0910.1193%2C0910.0894%2C0910.5371%2C0910.1711%2C0910.3401%2C0910.5150%2C0910.5040%2C0910.3516%2C0910.0340%2C0910.5348%2C0910.3635%2C0910.0928%2C0910.2688%2C0910.1011%2C0910.3454%2C0910.1708%2C0910.3773%2C0910.1647%2C0910.3208%2C0910.0856%2C0910.4319%2C0910.2491%2C0910.3574%2C0910.2237%2C0910.4641%2C0910.3385%2C0910.3368%2C0910.1364%2C0910.3805%2C0910.5760%2C0910.0454%2C0910.4018%2C0910.4010%2C0910.3765%2C0910.3200%2C0910.5175%2C0910.3965%2C0910.2186%2C0910.3976%2C0910.0459%2C0910.3586%2C0910.4316%2C0910.4341%2C0910.5654%2C0910.0314%2C0910.0954%2C0910.5386%2C0910.0709%2C0910.1892%2C0910.5610%2C0910.4859%2C0910.4282%2C0910.4971%2C0910.1809%2C0910.4489%2C0910.0270%2C0910.4522%2C0910.3253&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "BioDiVinE: A Framework for Parallel Analysis of Biological Models"}, "summary": "In this paper a novel tool BioDiVinEfor parallel analysis of biological\nmodels is presented. The tool allows analysis of biological models specified in\nterms of a set of chemical reactions. Chemical reactions are transformed into a\nsystem of multi-affine differential equations. BioDiVinE employs techniques for\nfinite discrete abstraction of the continuous state space. At that level,\nparallel analysis algorithms based on model checking are provided. In the\npaper, the key tool features are described and their application is\ndemonstrated by means of a case study.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0910.3176%2C0910.5432%2C0910.2417%2C0910.0794%2C0910.5607%2C0910.4331%2C0910.0735%2C0910.0061%2C0910.2470%2C0910.4557%2C0910.2428%2C0910.5169%2C0910.2525%2C0910.2093%2C0910.0616%2C0910.4576%2C0910.1709%2C0910.5033%2C0910.4718%2C0910.1995%2C0910.3671%2C0910.2960%2C0910.1191%2C0910.5879%2C0910.5561%2C0910.4863%2C0910.3670%2C0910.5312%2C0910.1528%2C0910.1742%2C0910.0611%2C0910.0351%2C0910.2029%2C0910.5104%2C0910.1515%2C0910.3164%2C0910.4379%2C0910.2297%2C0910.5049%2C0910.3035%2C0910.0116%2C0910.4982%2C0910.4783%2C0910.1193%2C0910.0894%2C0910.5371%2C0910.1711%2C0910.3401%2C0910.5150%2C0910.5040%2C0910.3516%2C0910.0340%2C0910.5348%2C0910.3635%2C0910.0928%2C0910.2688%2C0910.1011%2C0910.3454%2C0910.1708%2C0910.3773%2C0910.1647%2C0910.3208%2C0910.0856%2C0910.4319%2C0910.2491%2C0910.3574%2C0910.2237%2C0910.4641%2C0910.3385%2C0910.3368%2C0910.1364%2C0910.3805%2C0910.5760%2C0910.0454%2C0910.4018%2C0910.4010%2C0910.3765%2C0910.3200%2C0910.5175%2C0910.3965%2C0910.2186%2C0910.3976%2C0910.0459%2C0910.3586%2C0910.4316%2C0910.4341%2C0910.5654%2C0910.0314%2C0910.0954%2C0910.5386%2C0910.0709%2C0910.1892%2C0910.5610%2C0910.4859%2C0910.4282%2C0910.4971%2C0910.1809%2C0910.4489%2C0910.0270%2C0910.4522%2C0910.3253&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "In this paper a novel tool BioDiVinEfor parallel analysis of biological\nmodels is presented. The tool allows analysis of biological models specified in\nterms of a set of chemical reactions. Chemical reactions are transformed into a\nsystem of multi-affine differential equations. BioDiVinE employs techniques for\nfinite discrete abstraction of the continuous state space. At that level,\nparallel analysis algorithms based on model checking are provided. In the\npaper, the key tool features are described and their application is\ndemonstrated by means of a case study."}, "authors": ["Ji\u0159\u00ed Barnat", "Lubo\u0161 Brim", "Ivana \u010cern\u00e1", "Sven Dra\u017ean", "Jana Fabrikov\u00e1", "Jan L\u00e1n\u00edk", "David \u0160afr\u00e1nek", "Hongwu Ma"], "author_detail": {"name": "Hongwu Ma"}, "author": "Hongwu Ma", "links": [{"title": "doi", "href": "http://dx.doi.org/10.4204/EPTCS.6.3", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/0910.0928v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0910.0928v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.CE", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CE", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.DC", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "q-bio.QM", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0910.0928v1", "affiliation": "University of Edinburgh", "arxiv_url": "http://arxiv.org/abs/0910.0928v1", "arxiv_comment": null, "journal_reference": "EPTCS 6, 2009, pp. 31-45", "doi": "10.4204/EPTCS.6.3", "fulltext": "BioDiVinE: A Framework for Parallel Analysis of Biological\nModels\nJ. Barnat\u2217, L. Brim\u2020, I. \u010cern\u00e1, S. Dra\u017ean\u2021, J. Fabrikov\u00e1, J. L\u00e1n\u0131\u0301k, and D. \u0160afr\u00e1nek\nFaculty of Informatics\nMasaryk University\nBotanick\u00e1 68a, Brno, Czech Republic\nsafranek@fi.muni.cz\n\nH. Ma\u00a7\nInformatics Life-Sciences Institute\nSchool of Informatics, University of Edinburgh\n11 Crichton Street, Edinburgh, EH8 9LE, United Kingdom\n\nIn this paper a novel tool BioDiVinE for parallel analysis of biological models is presented. The\ntool allows analysis of biological models specified in terms of a set of chemical reactions. Chemical\nreactions are transformed into a system of multi-affine differential equations. BioDiVinE employs\ntechniques for finite discrete abstraction of the continuous state space. At that level, parallel analysis\nalgorithms based on model checking are provided. In the paper, the key tool features are described\nand their application is demonstrated by means of a case study.\n\n1\n\nIntroduction\n\nThe central interest of systems biology is investigation of the response of the organism to environmental\nevents (extra-cellular or intra-cellular signals). Even in procaryotic organisms, a single environment\nevent causes a response induced by the interaction of several interwoven modules with complex dynamic\nbehaviour, acting on rapidly different time scales. In higher organisms, these modules form large and\ncomplex interaction networks. For instance, a human cell contains in the order of 10,000 substances\nwhich are involved in 15,000 different types of reactions. This gives rise to a giant interaction network\nwith complex positive and negative regulatory feedback loops.\nIn order to deal with the complexity of living systems, experimental methods have to be supplemented\nwith mathematical modelling and computer-supported analysis. One of the most critical limitations in\napplying current approaches to modelling and analysis is their pure scalability. Large models require\npowerful computational methods, the hardware infrastructure is available (clusters, GRID, multi-core\ncomputers), but the parallel (distributed) algorithms for model analysis are still under development.\nIn this paper we present the tool BioDiVinE for parallel analysis of biological models. BioDiVinE\nconsiders the model in terms of chemical equations. The main features of the tool are the following:\n\u2022 user interface for specification of models in terms of chemical equations\n\u2022 formal representation of the model by means of multi-affine ODEs\n\u2022 setting initial conditions and parameters of the kinetics\n\u2217 J.\n\nBarnat has been supported by the Czech Science Foundation grant No. 201/09/P497.\nBrim has been supported by the Grant Agency of Czech Republic grant No. 201/09/1389.\n\u2021 S. Dra\u017ean and J. Fabrikov\u00e1 have been supported by the Academy of Sciences of CR grant No. 1ET408050503.\n\u00a7 I. \u010cern\u00e1, D. \u0160afr\u00e1nek, and H. Ma have been supported by the FP6 project No. NEST-043235 (EC-MOAN).\n\u2020 L.\n\nR.J.Back, I.Petre, E. de Vink (Eds.): Computational\nModels for Cell Processes (CompMod 2009)\nEPTCS 6, 2009, pp. 31\u201345, doi:10.4204/EPTCS.6.3\n\nc J. Barnat et.al.\nThis work is licensed under the\nCreative Commons Attribution License.\n\n\f32\n\nBioDiVinE\n\u2022 setting parameters of the discrete abstraction\n\u2022 graphical simulation of the discretized state space\n\u2022 model checking analysis.\n\nAs an abstraction method, BioDiVinE adapts the rectangular abstraction approach of multi-affine\nODEs mathematically introduced in [7] and algorithmically tackled in [17, 5] by means of a parallel\non-the-fly state space generator. The character of abstraction provided by this discretization technique is\nconservative with respect to the most dynamic properties that are of interest. However, there is the natural\neffect of adding false-positive behaviour, in particular, the abstracted state space includes trajectories\nwhich are not legal in the original continuous model.\nThe structure of the paper is the following. Section 2 gives a brief overview of the underlying\nabstraction technique and the model checking approach. Section 3 presents in step-by-step fashion the\nkey features of current version of BioDiVinE. Section 4 provides a case study of employing BioDiVinE\nfor analysis of a biological pathway responsible for ammonium transport in bacteria Escherichia Coli.\n\n1.1\n\nRelated Work\n\nIn our previous work [3] we have dealt with parallel model checking analysis of piece-wise affine ODE\nmodels [14]. The method allows fully qualitative analysis, since the piece-wise affine approximation of\nthe state space does not require numerical enumeration of the equations. Therefore that approach, in\ncontrast to the presented one, is primarily devoted for models with unknown kinetic parameters. The\nprice for this feature is higher time complexity of the state space generation. In particular, time appears\nthere more critical than space while causing the parallel algorithms not to scale well.\nIn the current version of BioDiVinE all the kinetic parameters are required to be numerically specified. In such a situation there is an alternative possibility to do LTL model checking directly on numerical\nsimulations [18, 8]. However, in the case of unknown initial conditions there appears the need to provide\nlarge-scale parameter scans resulting in huge number of simulations. On the contrary, the analysis conducted with BioDiVinE can be naturally generalised to arbitrary intervals of initial conditions by means\nof rectangular abstraction.\nRectangular abstraction of dynamic systems has been employed in [17] for reachability analysis. The\nmethod has been supported by experiments performed on a sequential implementation in Matlab. The\nprovided experiments have showed that for models with 10 variables the reachability analysis ran out\nof memory after 2 hours of computation. This gave us the motivation to employ parallel algorithms.\nMoreover, we generalise the analysis method to full LTL model checking.\nThere is another work that employs rectangular abstraction for dynamic systems [6]. The framework\nis suitable for deterministic modelling of genetic regulatory networks. The rectangular abstraction relies\non replacing S-shaped regulatory functions with piece-wise linear ramp functions. The partitioning of\nthe state space is determined by parameters of the ramp functions. In contrast to that work, we consider\ndirectly general multi-affine systems with arbitrarily defined abstraction partitions.\n\n2\n2.1\n\nBackground\nModelling Approach\n\nThe most widely used approach to modelling a system of biochemical reactions is the continuous approach of ordinary differential equations (ODEs). We consider a special class of ODE systems in the\n\n\fJ. Barnat et.al.\n\n33\n\nform \u1e8b = f (x) where x = (x1 , . . . , xn ) is a vector of variables and f = ( f1 , ..., fn ) : Rn \u2192 Rn is a vector of\nmultiaffine functions. A multiaffine function is a polynomial in the variables x1 , ..., xn where the degree of\nany variable is at most 1. Variables xi represent continuous concentrations of species. Multiaffine ODEs\ncan express reactions in which the stoichiometry coefficients of all reactants are at most 1. The system\nof ODEs can be constructed directly from the stoichiometric matrix of the biochemical system [12].\n\nk\n\nA+B \u2192C\n\ndA\ndt\ndB\ndt\ndC\ndt\n\n= \u2212k * A * B\n= \u2212k * A * B\n= k*A*B\n\nFigure 1: Example of a multi-affine system\nMulti-affine system is achieved from the system of biochemical reactions by employing the law of\nmass action. In Figure 1 there is an example of a simple biochemical system represented mathematically\nas a multi-affine system. If all the reactions are of the first-order, in particular, the number of reactants\nin each reaction is at most one, then the system falls into a specific subclass of dynamic systems \u2013 the\nresulting ODE system is affine. An example of an affine system is given in Figure 2.\n\nk\n\nA \u21921 B +C\nk k\n\nB \u21902 \u21923 C\n\ndA\ndt\ndB\ndt\ndC\ndt\n\n= \u2212k1 * A\n= k1 * A \u2212 k3 * B + k2 *C\n= k1 * A \u2212 k2 *C + k3 * B\n\nFigure 2: Example of an affine system\n\n2.2\n\nAbstraction Procedure\n\nThe rectangular abstraction method employed in BioDiVinE relies on results of de Jong, Gouz\u00e9 [15]\nand Belta, Habets [7]. Each variable is assigned a set of specific (arbitrarily defined) points, so-called\nthresholds, expressing concentration levels of special interest. This set contains two specific thresholds\n\u2013 the maximal and the minimal concentration level. Existence of these two thresholds comes from the\nbiophysical fact that in any living organism each biochemical species cannot unboundedly increase its\nconcentration. The intermediate thresholds then define a partition of the (bounded) continuous state\nspace. The individual regions of the partition are called rectangles. An example of a partition is given in\nFigure 3.\nThe partition of the system gives us directly the finite discrete abstraction of the dynamic system.\nIn particular, BioDiVinE implements a (discrete) state space generator that constructs a finite automaton representing the rectangular abstraction of the system dynamics. Since the states of the automaton\nare made directly by the rectangles, the automaton is called rectangular abstraction transition system\n(RATS). The algorithm for the state space generator of RATS has been presented in [2]. The idea behind this algorithm is based on the results [15, 7]. The main point is that for each rectangle the exit\nfaces are determined. The intuition is depicted in Figure 4. There is a transition from a rectangle to its\nneighbouring rectangle only if in the vector field considered in the shared face there is at least one vector\nwhose particular component agrees with the direction of the transition. The important result is that in a\n\n\f34\n\nBioDiVinE\n\nk k\n\nA \u21901 \u21922 B\ndA\ndt\ndB\ndt\n\n= \u2212k1 * A + k2 * B\n\nB\n\n= k1 * A \u2212 k2 * B\n\nthresholds on A: 0, 5, 6, 10\nthresholds on B: 0, 2, 3, 5\nA\n\nFigure 3: Example of a rectangular partition of a two-dimensional system\n\nFigure 4: Intuition behind the construction of the rectangular abstraction transition system\nmulti-affine system it suffices to consider only the vector field in the vertices of the face. In Figure 4, the\nexit faces of the central rectangle are emphasised by bold lines. In Figure 5 there is depicted the rectangular abstraction transition system constructed for the affine system from Figure 3. It is known that\nthe rectangular abstraction is an overapproximation with respect to trajectories of the original dynamic\nsystem.\nThere is one specific issue when considering the time progress of the abstracted trajectories. If\nthere exists a point in a rectangle from which there is no trajectory diverging out through some exit\nface, then there is a self-transition defined for the rectangle. In particular, this situation signifies an\nequilibrium inside the rectangle. Such a rectangle is called non-transient. For affine systems there is\nknown a sufficient and necessary condition that characterises non-transient rectangles by the vector field\nin the vertices of the rectangle. However, for the case of multi-affine system, only the necessary condition\nis known. Hence, for multi-affine systems BioDiVinE can treat as non-transient some states which are\nnot necessarily non-transient.\n\n2.3\n\nModel Checking\n\nIn the field of formal verification of software and hardware systems, model checking refers to the problem\nof automatically testing whether a simplified model of a system (a finite state automaton) meets a given\nspecification. Specification is stated by means of a temporal logic formulae. In the setting of RATS,\nmodel checking can be used in two basic ways:\n1. to automatically detect presence of particular dynamics phenomena in the system\n2. to verify correctness of the model (i.e., checking whether some undesired property is exactly\navoided)\nIn the case of dynamic systems we use Linear Temporal Logic (LTL) (see [10] for details on LTL\nsyntax and semantics interpreted on automata). LTL can be also directly interpreted on trajectories\n\n\fJ. Barnat et.al.\n\n35\n\nB\n\nB\n\nA\n\nA\n\nFigure 5: Example of a rectangular abstraction transition system\n\n11111\n00000\n00000\n11111\n00000\n11111\n00000\n11111\n00000\n11111\n\nFigure 6: A counterexample contradicting the property of reaching B > 3 in finite time\n\nof dynamic systems (see e.g. [13] for definition of the semantics). Given a dynamic system S with a\nparticular initial state we can then say that S satisfies a formula \u03c6, written S |= \u03c6, only if the trajectory\nstarting at the initial state satisfies \u03c6. In the context of automata, LTL logic is interpreted universally\nprovided that a formula \u03c6 is satisfied by the automaton A, written A |= \u03c6, only if each execution of the\nautomaton starting from any initial state satisfies \u03c6. The following theorem characterises the relation\nbetween validity of \u03c6 in the rectangular abstraction automaton and in the original dynamic system.\n\nTheorem 2.1 Consider a dynamic system S and the associated RATS A. If A |= \u03c6 then S |= \u03c6.\n\nThe theorem states that when model checking of a particular property on a RATS returns true, we are\nsure that the property is satisfied in the original dynamic system. However, when the result is negative,\nthe counterexample returned does not necessarily reflect any trajectory in the original system.\nThe system in Figure 5 satisfies a formula FG(B \u2264 3) expressing the temporal property stating that\ndespite the choice of the initial state the system eventually stabilises at states where concentration of B\nis kept below 3. Now let us consider a formula F(B > 3) expressing the property that despite the initial\nsettings, the concentration of B will eventually exceed the concentration level 3. In this case the model\nchecking returns one of the counterexamples as emphasised in Figure 6 stating that if initially A < 5 and\nB < 3 then B is not increased while staying indefinitely long in the shaded state.\n\n\f36\n\nBioDiVinE\n\nUser\n\nTool\nServices\n\nSimAff\nVisualizer\n\nLTL MC\nAnalyzer\n\nSpecAff\nEditor\n\nReachability\nAnalyzer\n\nSimulator\n...\n\nTool\nLibrary\nStorage\n\nNetwork\n\nState\nGenerator\nRATS\nExtension\n\nCluster\nMutli\u2212Core\n\n0\n1\n\n0\n1\n0\n1\n00\n11\n1111\n0000\n00\n000011\n1111\n\n00\n11\n\n00\n11\n00\n11\n00\n11\n1111\n0000\n00\n000011\n1111\n\n0\n1\n\n0\n1\n0\n1\n000\n111\n1111\n0000\n000\n0000111\n1111\n\n00\n11\n\n00\n11\n00\n11\n00\n11\n1111\n0000\n00\n000011\n1111\n\nFigure 7: BioDiVinE Toolset Architecture\n\nFigure 8: A biochemical model specified in BioDiVinE GUI\n\n3\n\nBioDiVinE Tool\n\nBioDiVinE employs aggregate power of network-interconnected workstations (nodes) to analyse largescale state transition systems whose exploration is beyond capabilities of sequential tools. System properties can be specified either directly in Linear Temporal Logic (LTL) or alternatively as processes describing undesired behaviour of systems under consideration (negative claim automata). From the algorithmic point of view, the tool implements a variety of novel parallel algorithms [9, 1] for cycle detection\n(LTL model checking). By these algorithms, the entire state space is uniformly split into partitions and\nevery partition is distributed to a particular computing node. Each node is responsible for generating the\nrespective state-space partition on-the-fly while storing visited states into the local memory.\nThe state space generator constructs the rectangular abstraction transition system for a given multiaffine system. The scheme of the tool architecture is provided in Figure 7. Library-level components are\nresponsible for constructing, managing and distributing the state space. They form the core of the tool.\nThe tool provides two graphical user interface components SpecAff - allowing editing of biological\nmodels in terms of chemical reactions, and SimAff - allowing visualisation of the simulation results.\nThe input (biochemical) model is given by the following data:\n\u2022 list of chemical species,\n\u2022 list of partitioning thresholds given for each species,\n\u2022 list of chemical reactions.\n\n\fJ. Barnat et.al.\n\n37\n\nVARS:A,B,C\n\n[pre-initial]\n\nEQ:dA = (-0.1)*A\nEQ:dB = 0.1*A + (-1)*B + 1*C\nEQ:dC = 0.1*A + 1*B + (-1)*C\nTRES:A: 0, 4, 6, 10\nTRES:B: 0, 2, 10\nTRES:C: 0, 2, 4, 10\nINIT:\n\n[4(1),0(0),2(1)]\n\n[4(1),2(1),4(2)]\n\n4:6, 0:2, 2:4\n\n[4(1),2(1),2(1)]\n\n[4(1),0(0),0(0)]\n\n[0(0),0(0),2(1)]\n\n[0(0),2(1),2(1)]\n\n[4(1),2(1),0(0)]\n\n[0(0),0(0),0(0)]\n\n[0(0),2(1),4(2)]\n\n[0(0),2(1),0(0)]\n\nFigure 9: A multi-affine ODE model and its state space generated by BioDiVinE\n\nFigure 10: Visualisation of the state space in the BioDiVinE GUI, states are projected onto the BC\nconcentration plane\nThe biochemical model together with the tested property and initial conditions are then automatically\ntranslated into a multi-affine system of ODEs forming the mathematical model that can be analysed by\nBioDiVinE algorithms. The mathematical model consists of the following data:\n\u2022 list of variables,\n\u2022 list of (multi-affine) ODEs,\n\u2022 list of partitioning thresholds given for each species,\n\u2022 list of initial rectangular subspaces (the union of these subspaces forms the initial condition),\n\u2022 B\u00fcchi automaton representing an LTL property (this data is not needed for simulation).\nAn example of a simple three-species model representing three biochemical reactions A \u2192 B + C,\nB C is showed in Figure 8. The first reaction is performed at rate 0.1 s\u22121 . The second two reversible\nreactions are at rate 1 s\u22121 . The respective mathematical model is showed in Figure 9 on the left in\nthe textual .bio format. For each variable there is specified the equation as well as the list of real\nvalues representing individual threshold positions. The initial condition is defined in this particular case\nby a single rectangular subspace: A \u2208 h4, 6i, B \u2208 h0, 2i, and C \u2208 h2, 4i. The state space generated for\nthis setting is depicted in Figure 9 on the right. Figure 10 demonstrates visualisation features of the\nBioDiVinE GUI.\nFor model checking analysis, BioDiVinE relies on the parallel LTL model checking algorithms of\nthe underlying DiVinE library [4]. A given LTL formula is translated into a B\u00fcchi automaton which\n\n\f38\n\nBioDiVinE\n\nFigure 11: A visualisation of the state-spaces in BC projection with uniform (left) and automatic (right)\ngradual threshold refinement, manually augmented by numeric simulation trace from COPASI [11]\nVARS:A,B,C\nEQ:dA = (-0.1)*A\nEQ:dB = 0.1*A + (-1)*B + 1*C\nEQ:dC = 0.1*A + (1)*B + (-1)*C\nTRES:A: 0, 4, 6, 10\nTRES:B: 0, 2, 10\nTRES:C: 0, 2, 4, 10\nINIT:\n\n4:6, 0:2, 2:4\n\nprocess LTL_property1 {\nstate q1, q2;\ninit q1;\naccept q2;\ntrans\nq1 -> q2 { guard B>4 && B<4.5\n&& C>3 && C<3.5; },\nq1 -> q1 {},\nq2 -> q2 {};\n}\n\nprocess LTL_property2 {\nstate q1, q2;\ninit q1;\naccept q2;\ntrans\nq1 -> q2 { guard B>4 && B<4.5\n&& C>5.5 && C<6; },\nq1 -> q1 {},\nq2 -> q2 {};\n}\n\nsystem sync property LTL_property1;\n\nsystem sync property LTL_property2;\n\nFigure 12: A multi-affine model extended with a never claim automaton for property 1 and property 2\nrepresents its negation. That way the automaton represents the never claim property. The automaton is automatically generated for an LTL formula and merged with the mathematical model by the\ndivine.combine utility. An example of a model extended with a never claim property is showed in\nFigure 12. In particular, the first automaton LTL property1 specified in terms of the DiVinE language\nrepresents a never claim for the safety LTL formula G\u00ac(B \u2265 4 \u2227 B \u2264 4.5 \u2227C \u2265 3 \u2227C \u2264 3.5) expressing\nthat concentrations of species B and C will never enter the specified rectangular region. The unreachability of a slightly different region is defined by the automaton for property 2. The results of the modelchecking procedure are showed in Figure 13. Property 1 has been proved false by finding a run of the\nsystem visiting the specified region (states of run given as list), while property 2 has been proved true by\nextensively searching all the system runs and not finding any one that would cross the region specified in\nproperty 2.\nThe choice of threshold values for each variable affects greatly the shape and size of the generated\nstate-space. The refinement of a given partitioning - the addition of more thresholds to a set of former\nthresholds - may result in the unreachability of a part of a region reachable before.\nSince manual refinement of thresholds by adding numeric values can be tedious or unintuitive, two\nmore advanced methods are available in BioDiVinE. The first method divides a given interval uniformly\ninto subintervals of a given size, while the second method tries a more sophisticated automatic technique\nof dividing regions according to signs of the concentration derivatives inside these regions [17]. The\n\n\fJ. Barnat et.al.\n\n39\n==============================\n--- No accepting cycle --==============================\nstates:\n33\ntransitions:\n81\niterations:\n1\nsize of a state:\n16\nsize of appendix: 12\ncross transitions: 0\nall memory\n56.5 MB\ntime:\n0.115177 s\n------------------0: local states:\n33\n0: local memory:\n56.5\n\n=======================\n--- Accepting cycle --=======================\n[pre-initial]\n[4(1),0(0),2(1)-PP:0]\n[4(1),2(1),2(1)-PP:0]\n[4(1),2(1),3(2)-PP:0]\n[4(1),4(2),3(2)-PP:1]\n[0(0),4(2),3(2)-PP:1]\n======= Cycle =======\n[0(0),2(1),3(2)-PP:1]\n[0(0),2(1),2(1)-PP:1]\n\nFigure 13: Results of model-checking for property 1 (left), property 2 (middle), visualisation of reachable\n(green) and unreachable (red) regions\nk\n5\n10\n15\n20\n\nStates\n3 * 104\nrelative\n9 * 105\nrelative\n1.6 * 106\nrelative\n3.2 * 106\nrelative\n\nTrans\n8.5 * 104\nspeedup\n3.2 * 106\nspeedup\n6.5 * 106\nspeedup\n1.4 * 107\nspeedup\n\n1\n15.4\n1\n>\n>\n>\n>\n>\n>\n\n4\n4.9\n3.14\n>\n>\n>\n>\n>\n>\n\n8\n2.7\n5.7\n>\n>\n>\n>\n>\n>\n\n12\n1.8\n8.56\n161\n1\n>\n>\n>\n>\n\n16\n1.4\n11\n119\n1.35\n>\n>\n>\n>\n\n20\n\u22a5\n\u22a5\n107\n1.5\n>\n>\n>\n>\n\nTime on particular number of cluster processor cores (s)\n24\n28\n32\n36\n40\n44\n48\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n85\n72\n63\n55\n53\n46\n44\n1.89\n2.24\n2.56\n2.93\n3.04\n3.5\n3.66\n>\n>\n222\n204\n177\n156\n146\n>\n>\n1\n1.09\n1.25\n1.42\n1.52\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n\n52\n\u22a5\n\u22a5\n40\n4.03\n129\n1.72\n>\n>\n\n56\n\u22a5\n\u22a5\n38\n4.24\n122\n1.82\n>\n>\n\n60\n\u22a5\n\u22a5\n38\n4.24\n117\n1.9\n>\n>\n\n64\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n110\n2.02\n202\n1\n\n68\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n98\n2.27\n180\n1.12\n\nFigure 14: Scaling of model checking algorithms on a homogeneous cluster\nstate-spaces resulting from the gradual application of both threshold refinement approaches are depicted\nin Figure 11. It is important to mention that the overall size of the state-space depends exponentially on\nthe number of thresholds for all species. However, in some cases the actual reachable subspace of the\nwhole state-space may be only polynomial in the number of thresholds.\nFor any multi-affine model extended with a never claim automaton as showed in Figure 12, the\nparallel model checking algorithms can be directly called.\nWe have performed several experiments [2] in order to show scaling of the algorithms when distributed on several cluster nodes. Figures 14 and 15 show scaling of model checking conducted on a\nsimple model of a reaction network representing a catalytic reaction scaled for different numbers of\nintermediate products.\n\n4\n\nCase Study: Ammonium Transport in E. Coli\n\nIn this section we present a case study conducted using the current version of BioDiVinE. Since the\nrectangular abstraction method of multi-affine systems implemented in BioDiVinE is a relatively new\nresult of applied control theory, its application is still in the stage of experimentation. In fact, we are\nstill unaware of any case studies that apply this method to real biological models. In this case study\nwe focus on demonstrating the usability of rectangular abstraction to analysis of biological models.\nTo this end, we consider a simple biological model that specifies ammonium transport from external\nenvironment into the cells of Escherichia Coli. This simplified model is based on a published model\nof the E. Coli ammonium assimilation system [19] which was developed under the EC-MOAN project\n(http://www.ec-moan.org). The metabolic reactions and regulatory reactions in the original model\nwere removed.\n\n72\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n93\n2.39\n173\n1.17\n\n\f40\n\nBioDiVinE\n\nS+E\n\nES1\n\n***\n\nES2\n\nESk \u2192 P + E\n\n12\n\n\u1e60\n\u0116\n \u03071\nES\n \u03072\nES\n\n \u0307 k\u22121\nES\n \u0307 k\nES\n\n=\n=\n=\n=\n.\n.\n.\n=\n=\n\nES1 \u2212 0.01 * E * S\nES1 \u2212 0.01 * S * E + ES1\n0.01 * E * S \u2212 ES1 \u2212 ES1\n*ES1 \u2212 2 * ES2 + ES3\n\n11\n\nK=5\nK = 10\nK = 15\nK = 20\n\n10\n8.56\n\n8\n\n6\n\n5.7\n\n4.03\n\n4\n\nESk\u22122 \u2212 2 * ESk\u22121 + ESk\nESk\u22121 \u2212 2 * ESk\n\n3.5\n3.14\n\n2.93\n2.24\n1.35\n\n1\n\n0\n\n1.5\n\n1\n\n1\n\n4\n\n8\n\n12\n\n1\n\n16\n\n20\n\n24\n\n28\n\n4.24\n\n2.56\n\n1.89\n\n2\n\n4.24\n\n3.66\n\n3.04\n\n32\n\n1.09\n\n36\n\n1.25\n\n40\n\n1.42\n\n1.52\n\n1.72\n\n1.82\n\n1.9\n\n2.02\n1\n\n44\n\n48\n\n52\n\n56\n\n60\n\n64\n\n2.27\n\n1.12\n\n68\n\n2.39\n\n1.17\n\n72\n\nFigure 15: Scaling of model checking algorithms on a homogeneous cluster, X-axis shows number of\ncluster nodes, Y-axis gives speedup relative to system size and number of nodes\n\n4.1\n\nModel Description\n\nE. coli can express membrane bound transport proteins for the transportion of small molecules from\nthe environment into the cytoplasm at certain conditions. At normal ammonium concentration, the free\ndiffusion of ammonia can provide enough flux for the growth requirement of nitrogen. When ammonium concentration is very low, E. coli cells express AmtB (an ammonia transporter) to complement the\ndeficient diffusion process. Three molecules of AmtB (trimer) form a channel for the transportation of\nammonium/ammonia. Protein structure analysis revealed that AmtB binds NH4+ at the entrance gate of\nthe channel, deprotonates it and conducts NH3 into the cytoplasm as illustrated in Figure 16 (left) [16].\nAt the periplasmic side of the channel there is a wider vestibule site capable of recruiting NH4+ cations.\nThe recruited cations are passed through the hydrophobic channel where the pKa of NH4+ was shifted\nfrom 9.25 to below 6, thereby shifting the equilibrium toward the production of NH3 . NH3 is finally\nreleased at the cytoplasmic gate and converted to NH4+ because intracellular pH (7.5) is far below the\npKa of NH4+ .\nIn addition to the above mentioned AmtB mediated transport, the bidirectional free diffusion of the\nuncharged ammonia through the membrane is also included in the simplified model. The intracellular\nNH4+ is then metabolised by Glutamine Synthetase (GS). The whole model is depicted in Figure 16\n(right). The external ammonium is represented in the uncharged and charged forms denoted NH3 ex and\nNH4+ ex. Analogously, the internal ammonium forms are denoted NH3 in and NH4+ in. The biochemical\nmodel that combines AmtB transport with NH3 diffusion is given in Table 1. The kinetic parameters are\nbased on the values in the original model.\nBy employing the law of mass action kinetics the reaction network is transformed into the set of\nmulti-affine ODEs as listed in Table 2. Since we are especially interested in how the concentrations\nof internal ammonium change with respect to the external ammonium concentrations, we employ the\nfollowing simplifications:\n\u2022 We do not consider the dynamics of the external ammonium forms, thus we take NH3 ex and\nNH4+ ex as constants (the input parameters for the analysis).\n\n\fJ. Barnat et.al.\n\n41\n\nFigure 16: E. Coli ammonium transport mechanism and the respective pathway\nk k\n\nAmtB + NH4 ex \u21901 \u21922 AmtB : NH4\nk\n\nAmtB : NH4 \u21923 AmtB : NH3 + Hex\nk4\n\nAmtB : NH3 \u2192 AmtB + NH3 in\nk5\n\nNH4 in \u2192\nk6 k7\n\nNH3 in + Hin \u2190\u2192 NH4 in\nk k\n\nNH3 ex \u21908 \u21929 NH3 in\n\nk1 = 5 * 108 , k2 = 5 * 103\nk3 = 50\nk4 = 50\nk5 = 80\nk6 = 1 * 1015 , k7 = 5.62 * 105\nk8 = k9 = 1.4 * 104\n\nTable 1: Biochemical model of ammonium transport\n\u2022 We assume constant intracellular pH (7.5) and extracellular pH (7.0), thus Hex and Hin are calculated to be 3 * 10\u22128 and 10\u22127 . Based on the extracellular pH and the total ammonium/ammonia\nconcentration, concentrations of NH3 ex and NH4+ ex can be calculated.\nWithout the loss of correctness, we simplify the notation of the cation NH4+ as NH4 .\n\n4.2\n\nModel Analysis\n\nFrom the essence of biophysical laws, it is clear that the maximal reachable concentration level accumulated in the internal ammonium forms directly depends on the ammonium sources available in the\nenvironment. However, it is not directly clear what particular maximal level of internal ammonium is\nachievable at given amount of external ammonium (distributed into the two forms). In the analysis we\nhave focused on just this phenomenon. More precisely, the problem to solve has been to analyse how\ndAmtB\ndt\n\n= \u2212k1 * AmtB * NH4 ex + k2 * AmtB : NH4 + k4 * AmtB : NH3\ndAmtB:NH3\n= k3 * AmtB : NH4 \u2212 k4 * AmtB : NH3\ndt\ndAmtB:NH4\n=\nk\n*\nAmtB\n* NH4 ex \u2212 k2 * AmtB : NH4 \u2212 k3 * AmtB : NH4\n1\ndt\ndNH3 in\n= k4 * AmtB : NH3 \u2212 k7 * NH3 in + k6 * NH4 in\ndt\ndNH4 in\n= k5 * NH4 in + k7 * NH3 in * Hin \u2212 k6 * NH4 in\ndt\nTable 2: Mathematical model of ammonium transport\n\n\f42\n\nBioDiVinE\nPartition\n(1)\n(2)\n\nAmtB\n7\n7\n\nAmtB : NH3\n3\n9\n\nAmtB : NH4\n3\n3\n\nNH3 in\n6\n8\n\nNH4 in\n4\n26\n\nTable 3: Numbers of thresholds in partitions (1) and (2)\nthe setting of the model parameters NH3 ex and NH4+ ex affects the maximal concentration level of NH3 in\nand NH4+ in reachable from given initial conditions.\nDuring discussions with biologists we have found out that there is currently not available any in\nvitro measurement of the AmtB-concentration (and also the concentrations of dimers AmtB : NH3 and\nAmtB : NH4 ). Hence there has appeared the need to analyse the model with uncertain initial conditions.\nSuch a setting fits the current features of BioDiVinE, especially the rectangular abstraction that naturally\nabstracts away the exact concentration values up to the intervals between certain concentration levels.\n4.2.1\n\nMaximal reachable levels of internal ammonium forms\n\nAt first, we have considered the (abstracted) initial condition to be set to the following intervals between\nconcentration values:\nAmtB \u2208 h0, 1 * 10\u22125 i, AmtB : NH3 \u2208 h0, 1 * 10\u22125 i, AmtB : NH4 \u2208 h0, 1 * 10\u22125 i,\nNH3 in \u2208 h1 * 1\u22126 , 1.1 * 10\u22126 i, NH4 in \u2208 h2 * 10\u22126 , 2.1 * 10\u22126 i\nNote that the upper bounds as well as the initial intervals of internal ammonium forms have been set\nwith respect to the available data obtained from the literature.\nWe have considered two rectangular partitions. The partition (1) has been set basically according\nto the initial conditions. The partition (2) has been obtained by running one iteration of the automatic\nthreshold refinement procedure to partition (1). Numbers of thresholds per each variable are given in\nTable 3.\nWe have conducted several model checking experiments in order to determine the maximal reachable\nconcentration levels of NH3 in and NH4+ in. In particular, we have searched for the lowest \u03b1 satisfying\nthe property G(NH3 in < \u03b1) and the lowest \u03b2 satisfying G(NH4 in < \u03b2 ). The property Gp requires\nthat all paths available in the rectangular abstraction from the states specified by the initial condition\nmust satisfy the given proposition p at every state. Note that if the model checking method finds the\nproperty Gp false in the model, it also returns a counterexample for that. The counterexample satisfies\nthe negation of the checked formula, which is in this case F\u00acp. Interpreting this observation intuitively\nfor the given formulae, we use model checking to find a path on which the species NH3 in (resp. NH4 in)\nexceeds the level \u03b1 (resp. \u03b2 ).\nWe did not want to get precise values of \u03b1, \u03b2 , but we rather wanted to get their good approximation.\nAt the starting point, we substituted for \u03b1 (resp. \u03b2 ) the upper initial bounds of the respective variables.\nThen we found the requested values by iteratively increasing and decreasing \u03b1 (resp. \u03b2 ). The obtained\nresults are summarised in Table 4.\nThe results have shown that NH3 in does not exceed its initial level no matter how the external ammonium is distributed between NH3 ex and NH4+ ex. The upper bound concentration considered for both\nNH3 ex and NH4+ ex has been set to 1 * 10\u22125 which goes with the typical level of concentration of the gas\nin the environment.\nIn the case of NH4 in we have found that the upper bound to maximal reachable level is in the interval \u03b2 \u2208 h5.3 * 10\u22124 , 5.4 * 10\u22124 i. Since the counterexample achieved can be a spurious one due to the\n\n\fJ. Barnat et.al.\n\n\u03b1\n1.1 * 10\u22126\n\u03b2\n1 * 10\u22123\n5 * 10\u22124\n6 * 10\u22124\n5.4 * 10\u22124\n5.3 * 10\u22124\n\n43\nPartition (1)\nG(NH3 in < \u03b1) # states\ntrue\n1081\nG(NH4 in < \u03b2 ) # states\ntrue\n2161\nfalse\n4753\ntrue\n2161\ntrue\n1441\nfalse\n3421\n\nTime (# nodes)\n0.36 s (1)\nTime (# nodes)\n0.45 s (1)\n1.9 s (1)\n0.43 s (1)\n0.27 s (1)\n1.2 s (1)\n\nG(NH3 in < \u03b1)\ntrue\nG(NH4 in < \u03b2 )\ntrue\nfalse\ntrue\ntrue\nfalse\n\nPartition (2)\n# states Time (# nodes)\n1.5 * 105\n1.9 s (18)\n# states Time (# nodes)\n1.6 * 105\n2 s (18)\n2.7 * 105\n3 s (18)\n5\n1.5 * 10\n1.8 s (18)\n2.1 * 105\n4.2 s (18)\n2.7 * 105\n2.2 s (18)\n\nTable 4: Experiments on detecting maximal reachable levels of internal ammonium forms\n\nNH3 ex\n19.5 * 10\u22124\n19.6 * 10\u22124\n\nPartition (1)\n\u03c6\n# states Time (# nodes)\ntrue\n901\n0.22 s (1)\nfalse\n1261\n0.6 s (1)\n\n\u03c6\ntrue\nfalse\n\nPartition (2)\n# states Time (# nodes)\n1.4 * 105\n1.9 s (36)\n3.4 * 105\n5.9 s (36)\n\nTable 5: Experiments on detecting NH3 ex levels affecting maximal reachable NH3 in\noverapproximating abstraction, the exact maximal reachable value may be lower. To this end we have\nconducted several numerical simulations which give us the argument that our estimation of \u03b2 is plausible.\n\n4.2.2\n\nDependence of stable internal ammonium on changes in external conditions\n\nIn the second experiment, we have focused on determining how much external ammonium have to be\nincreased in particular form in order to stimulate NH3in to exceed the considered initial level. The setting\nof partitions and initial conditions has been considered the same as in the previous experiments.\nFirst, we have varied the constant amount of NH3 ex to find at which level of NH3 ex the maximal\nreachable level of NH3 in is affected. More precisely, we have observed for which setting of NH3 ex\nthe property \u03c6 \u2261 G(NH3 in < 1.1 * 10\u22126 ) is true and for which it is not. The relevant experiments are\nsummarised in Table 5. We have found out that if NH3 ex is set to 19.6 * 10\u22124 or higher level then\nNH3 in increases above the upper initial bound 1.1 * 10\u22126 . The counterexamples returned again agree\nwith numerical simulations.\nFinally, we have varied the amount of NH4+ ex in order to find at which level of NH4+ ex the maximal\nreachable level of NH3 in is affected. The results presented in Table 6 give us the conclusion that despite\nthe level of NH4+ ex (checked up to 1012 ), the maximal level reached by NH3 in remains the same. In\nparticular, NH3 in does not exceed the initial bounds.\n\nNH4 ex\n1\n1 * 1012\n\n\u03c6\ntrue\ntrue\n\nPartition (1)\n# states Time (# nodes)\n901\n0.25 s (1)\n901\n0.25 s (1)\n\nTable 6: Experiments on detecting NH4+ ex levels affecting maximal reachable NH3 in\n\n\f44\n\nBioDiVinE\n\n4.2.3\n\nPerformance\n\nAll the experiments have been performed on a homogeneous cluster allowing computation on up-to 22\nnodes each equipped with 16GB of RAM and a quad-core processor Intel Xeon 2GHz. The model we\nhave dealt with contained 5 dynamic variables and 2 constants. With partition (1) the generated state\nspace had maximally 4753 states and with partition (2) maximally 3.4 * 105 . When trying to run one\nmore step of automatic partition refinement, the number of thresholds exceeded the memory reserved for\nstoring of the mathematical model. Note that the model has to be stored in the memory of each node.\nOnly the state space is distributed over the cluster.\n\n5\n\nConclusion\n\nIn this paper, we have presented the current version of BioDiVinE tool which implements rectangular\nabstraction of continuous models of biochemical reaction systems. The tool provides the framework for\nspecification and analysis of biochemical systems. The supported analysis technique is based on the\nmodel checking method. Linear temporal logic is used for encoding of the properties to be observed on\nabstracted systems.\nThe tool provides parallel model checking algorithms that allow fast response times of the analysis.\nWe have provided a case study on which the key features of the tool are demonstrated. The case study\nhas showed that the tool can be used for quickly getting the approximation of maximal reachable concentration levels of individual species in the model. In general, we have analysed the model with respect\nto the set of safety properties which are technically tackled by construction of the state space reachable\nfrom the given initial states. We have found out that the main advantage of the rectangular abstraction is\nthe possibility to analyse the system with uncertain initial conditions.\nThe current drawback of the abstraction method is strong overapproximation of non-transient states\nin multi-affine systems. In consequence, analysis of liveness kind of properties (e.g., oscillations, instability) is infeasible because of large amount of spurious counterexamples that come from false identification of non-transient states. However, this is not the case for affine systems on which liveness properties\ncan be checked without these problems. Since the analysed systems are typically non-affine, we can still\nemploy the liveness checking on their linearised approximations. However, by the linearisation process\nthe precision of the analysis is significantly reduced. Improving the tool in these aspects requires further\nresearch.\nIn general, we leave for future work the development of methods for identification of spurious paths.\nWe think that one of the promising directions in using the discrete abstractions for analysis of biological models is employing the model-checking-based analysis for extensive exploration of properties. In\nparticular, instead of returning only one path, the model checker should provide a set of paths. In this\ndirections we aim to continue the research.\n\nReferences\n[1] J. Barnat, L. Brim & J. Chaloupka (2005): From Distributed Memory Cycle Detection to Parallel LTL Model\nChecking. Electronic Notes in Theoretical Computer Science 133(1), pp. 21\u201339.\n[2] J. Barnat, L. Brim, I. \u010cern\u00e1, S. Dra\u017ean, J. Fabrikov\u00e1 & D. \u0160afr\u00e1nek (2009): Computational Analysis of LargeScale Multi-Affine ODE Models Accepted to High Performance Computational Systems Biology (HIBI)\n2009.\n\n\fJ. Barnat et.al.\n\n45\n\n[3] J. Barnat, L. Brim, I. \u010cern\u00e1, S. Dra\u017ean, J. Fabrikov\u00e1 & D. \u0160afr\u00e1nek (2009): On Algorithmic Analysis of\nTranscriptional Regulation by LTL Model Checking. Theoretical Computer Science 410, pp. 3128\u20133148.\n[4] J. Barnat, L. Brim, I. \u010cern\u00e1, P. Moravec, P. Ro\u010dkai & P. \u0160ime\u010dek (2006): DiVinE \u2013 A Tool for Distributed\nVerification (Tool Paper). In: Computer Aided Verification, LNCS 4144/2006. Springer, pp. 278\u2013281.\n[5] G. Batt, C. Belta & R. Weiss (2007): Model checking liveness properties of genetic regulatory networks. In:\nConference on Tools and Algorithms for the Construction and Analysis of Systems, LNCS 4424. Springer,\npp. 323\u2013338.\n[6] G. Batt, C. Belta & R. Weiss (2008): Model checking genetic regulatory networks with parameter uncertainty.\nIEEE Transactions on Circuits and Systems and IEEE Transactions on Automatic Control, Special Issue on\nSystems Biology , pp. 215\u2013229.\n[7] C. Belta & L.C.G.J.M. Habets (2006): Controlling a class of nonlinear systems on rectangles. IEEE Transactions on Automatic Control 51(11), pp. 1749\u20131759.\n[8] L. Calzone, F. Fages & S. Soliman (2006): BIOCHAM: an environment for modeling biological systems and\nformalizing experimental knowledge. Bioinformatics 22(14), pp. 1805\u20131807.\n[9] I. \u010cern\u00e1 & R. Pel\u00e1nek (2003): Distributed Explicit Fair Cycle Detection (Set Based Approach). In: Model\nChecking Software. 10th International SPIN Workshop, LNCS 2648. Springer, pp. 49 \u2013 73.\n[10] E.M. Clarke, O. Grumberg & D.A. Peled (2000): Model Checking. MIT Press.\n[11] S. Hoopes et.al. (2006): COPASI \u2013 a COmplex PAthway SImulator. Bioinformatics 22, pp. 3067\u201374.\n[12] M. Feinberg (1987): Chemical reaction network structure and the stability of complex isothermal reactors I.\nThe deficiency zero and the deficiency one theorems. Chemical Engineering Science 42, pp. 2229\u20132268.\n[13] S.K. Jha, E.M. Clarke, C.J. Langmead, A. Legay, A. Platzer & A.P. Zuliani (2009): A Bayesian Approach\nto Model Checking Biological Systems. In: Proc. of Computational Methods in Systems Biology (CMSB\n2009), 5688. Springer, pp. 218\u2013234.\n[14] H. de Jong, J. Geiselmann, C. Hernandez & M. Page (2003): Genetic Network Analyzer: qualitative simulation of genetic regulatory networks. Bioinformatics 19(3), pp. 336\u2013344. Available at http://www-helix.\ninrialpes.fr/gna.\n[15] H. de Jong, J.L. Gouz\u00e9, C. Hernandez, M. Page, T. Sari & J. Geiselmann (2004): Qualitative simulation of\ngenetic regulatory networks using piece-wise linear models. Bull. Math. Biology 66, pp. 301\u2013340.\n[16] S. Khademi, J. O'Connell III, J. Remis, Y. Robles-Colmenares, L.J. Miercke & R.M. Stroud (2004): Mechanism of ammonia transport by Amt/MEP/Rh: Structure of AmtB at 1.35. Science 305(5690), pp. 1587\u20131594.\n[17] M. Kloetzer & C. Belta (2008): Reachability analysis of multi-affine systems. Transactions of the Institute of\nMeasurement and Control In press.\n[18] X. Liu, J. Jiang, O. Ajayi, X. Gu, D. Gilbert & R. Sinnott (2008): BioNessie. Global Healthgrid: e-Science\nMeets Biomedical Informatics - Proceedings of HealthGrid 2008 138, pp. 147\u2013157.\n[19] H. Ma, F. Boogerd & I. Goryanin (2009): Modelling nitrogen assimilation of Escherichia coli at low ammonium concentration. Journal of Biotechnology Doi:10.1016/j.jbiotec.2009.09.003.\n\n\f"}