{"id": "http://arxiv.org/abs/physics/0112069v1", "guidislink": true, "updated": "2001-12-20T10:56:47Z", "updated_parsed": [2001, 12, 20, 10, 56, 47, 3, 354, 0], "published": "2001-12-20T10:56:47Z", "published_parsed": [2001, 12, 20, 10, 56, 47, 3, 354, 0], "title": "Beyond the poor man's implementation of unconditionally stable\n  algorithms to solve the time-dependent Maxwell Equations", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=physics%2F0112052%2Cphysics%2F0112064%2Cphysics%2F0112069%2Cphysics%2F0112060%2Cphysics%2F0402111%2Cphysics%2F0402037%2Cphysics%2F0402119%2Cphysics%2F0402031%2Cphysics%2F0402015%2Cphysics%2F0402005%2Cphysics%2F0402081%2Cphysics%2F0402071%2Cphysics%2F0402066%2Cphysics%2F0402076%2Cphysics%2F0402129%2Cphysics%2F0402008%2Cphysics%2F0402082%2Cphysics%2F0402100%2Cphysics%2F0402078%2Cphysics%2F0402009%2Cphysics%2F0402027%2Cphysics%2F0402059%2Cphysics%2F0402039%2Cphysics%2F0402109%2Cphysics%2F0402052%2Cphysics%2F0402090%2Cphysics%2F0402046%2Cphysics%2F0402068%2Cphysics%2F0402094%2Cphysics%2F0402032%2Cphysics%2F0402104%2Cphysics%2F0402085%2Cphysics%2F0402120%2Cphysics%2F0402108%2Cphysics%2F0402019%2Cphysics%2F0402021%2Cphysics%2F0402029%2Cphysics%2F0402080%2Cphysics%2F0402117%2Cphysics%2F0402036%2Cphysics%2F0402083%2Cphysics%2F0402084%2Cphysics%2F0402053%2Cphysics%2F0402007%2Cphysics%2F0402087%2Cphysics%2F0402004%2Cphysics%2F0402040%2Cphysics%2F0402013%2Cphysics%2F0402064%2Cphysics%2F0402024%2Cphysics%2F0402099%2Cphysics%2F0402130%2Cphysics%2F0402060%2Cphysics%2F0402035%2Cphysics%2F0402075%2Cphysics%2F0402126%2Cphysics%2F0402131%2Cphysics%2F0402016%2Cphysics%2F0402022%2Cphysics%2F0402122%2Cphysics%2F0402058%2Cphysics%2F0402067%2Cphysics%2F0402055%2Cphysics%2F0402101%2Cphysics%2F0402062%2Cphysics%2F0402113%2Cphysics%2F0402072%2Cphysics%2F0402091%2Cphysics%2F0402096%2Cphysics%2F0402002%2Cphysics%2F0402118%2Cphysics%2F0402124%2Cphysics%2F0402093%2Cphysics%2F0402034%2Cphysics%2F0402077%2Cphysics%2F0402023%2Cphysics%2F0402017%2Cphysics%2F0402114%2Cphysics%2F0402018%2Cphysics%2F0402121%2Cphysics%2F0402089%2Cphysics%2F0402116%2Cphysics%2F0402127%2Cphysics%2F0402056%2Cphysics%2F0402025%2Cphysics%2F0402112%2Cphysics%2F0402102%2Cphysics%2F0402103%2Cphysics%2F0402107%2Cphysics%2F0402049%2Cphysics%2F0402048%2Cphysics%2F0402043%2Cphysics%2F0402070%2Cphysics%2F0402133%2Cphysics%2F0402069%2Cphysics%2F0402110%2Cphysics%2F0402106%2Cphysics%2F0402006%2Cphysics%2F0402073%2Cphysics%2F0402011%2Cphysics%2F0402097&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Beyond the poor man's implementation of unconditionally stable\n  algorithms to solve the time-dependent Maxwell Equations"}, "summary": "For the recently introduced algorithms to solve the time-dependent Maxwell\nequations (see Phys.Rev.E Vol.64 p.066705 (2001)), we construct a variable grid\nimplementation and an improved spatial discretization implementation that\npreserve the property of the algorithms to be unconditionally stable by\nconstruction. We find that the performance and accuracy of the corresponding\nalgorithms are significant and illustrate their practical relevance by\nsimulating various physical model systems.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=physics%2F0112052%2Cphysics%2F0112064%2Cphysics%2F0112069%2Cphysics%2F0112060%2Cphysics%2F0402111%2Cphysics%2F0402037%2Cphysics%2F0402119%2Cphysics%2F0402031%2Cphysics%2F0402015%2Cphysics%2F0402005%2Cphysics%2F0402081%2Cphysics%2F0402071%2Cphysics%2F0402066%2Cphysics%2F0402076%2Cphysics%2F0402129%2Cphysics%2F0402008%2Cphysics%2F0402082%2Cphysics%2F0402100%2Cphysics%2F0402078%2Cphysics%2F0402009%2Cphysics%2F0402027%2Cphysics%2F0402059%2Cphysics%2F0402039%2Cphysics%2F0402109%2Cphysics%2F0402052%2Cphysics%2F0402090%2Cphysics%2F0402046%2Cphysics%2F0402068%2Cphysics%2F0402094%2Cphysics%2F0402032%2Cphysics%2F0402104%2Cphysics%2F0402085%2Cphysics%2F0402120%2Cphysics%2F0402108%2Cphysics%2F0402019%2Cphysics%2F0402021%2Cphysics%2F0402029%2Cphysics%2F0402080%2Cphysics%2F0402117%2Cphysics%2F0402036%2Cphysics%2F0402083%2Cphysics%2F0402084%2Cphysics%2F0402053%2Cphysics%2F0402007%2Cphysics%2F0402087%2Cphysics%2F0402004%2Cphysics%2F0402040%2Cphysics%2F0402013%2Cphysics%2F0402064%2Cphysics%2F0402024%2Cphysics%2F0402099%2Cphysics%2F0402130%2Cphysics%2F0402060%2Cphysics%2F0402035%2Cphysics%2F0402075%2Cphysics%2F0402126%2Cphysics%2F0402131%2Cphysics%2F0402016%2Cphysics%2F0402022%2Cphysics%2F0402122%2Cphysics%2F0402058%2Cphysics%2F0402067%2Cphysics%2F0402055%2Cphysics%2F0402101%2Cphysics%2F0402062%2Cphysics%2F0402113%2Cphysics%2F0402072%2Cphysics%2F0402091%2Cphysics%2F0402096%2Cphysics%2F0402002%2Cphysics%2F0402118%2Cphysics%2F0402124%2Cphysics%2F0402093%2Cphysics%2F0402034%2Cphysics%2F0402077%2Cphysics%2F0402023%2Cphysics%2F0402017%2Cphysics%2F0402114%2Cphysics%2F0402018%2Cphysics%2F0402121%2Cphysics%2F0402089%2Cphysics%2F0402116%2Cphysics%2F0402127%2Cphysics%2F0402056%2Cphysics%2F0402025%2Cphysics%2F0402112%2Cphysics%2F0402102%2Cphysics%2F0402103%2Cphysics%2F0402107%2Cphysics%2F0402049%2Cphysics%2F0402048%2Cphysics%2F0402043%2Cphysics%2F0402070%2Cphysics%2F0402133%2Cphysics%2F0402069%2Cphysics%2F0402110%2Cphysics%2F0402106%2Cphysics%2F0402006%2Cphysics%2F0402073%2Cphysics%2F0402011%2Cphysics%2F0402097&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "For the recently introduced algorithms to solve the time-dependent Maxwell\nequations (see Phys.Rev.E Vol.64 p.066705 (2001)), we construct a variable grid\nimplementation and an improved spatial discretization implementation that\npreserve the property of the algorithms to be unconditionally stable by\nconstruction. We find that the performance and accuracy of the corresponding\nalgorithms are significant and illustrate their practical relevance by\nsimulating various physical model systems."}, "authors": ["J. S. Kole", "M. T. Figge", "H. De Raedt"], "author_detail": {"name": "H. De Raedt"}, "author": "H. De Raedt", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1103/PhysRevE.65.066705", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/physics/0112069v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/physics/0112069v1", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "18 pages, 16 figures", "arxiv_primary_category": {"term": "physics.comp-ph", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "physics.comp-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "physics.optics", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/physics/0112069v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/physics/0112069v1", "journal_reference": null, "doi": "10.1103/PhysRevE.65.066705", "fulltext": "Beyond the poor man's implementation of unconditionally stable algorithms\nto solve the time-dependent Maxwell Equations\n\narXiv:physics/0112069v1 [physics.comp-ph] 20 Dec 2001\n\nJ.S. Kole\u2217 , M.T. Figge\u2020 , and H. De Raedt\u2021\nCentre for Theoretical Physics and Materials Science Centre\nUniversity of Groningen, Nijenborgh 4\nNL-9747 AG Groningen, The Netherlands\n(Dated: November 15, 2018)\n\nFor the recently introduced algorithms to solve the time-dependent Maxwell equations [1], we\nconstruct a variable grid implementation and an improved spatial discretization implementation that\npreserve the exceptional property of the algorithms to be unconditionally stable by construction.\nWe find that the performance and accuracy of the corresponding algorithms are significant and\nillustrate their practical relevance by simulating various physical model systems.\nPACS numbers: 02.60.Cb, 03.50.De, 41.20.Jb\n\nI.\n\nINTRODUCTION\n\nIn a recent paper, we introduced a family of algorithms to solve the time-dependent Maxwell equations (TDME) [1].\nSalient features of these algorithms include the rigorously provable unconditional stability for d-dimensional systems\n(d = 1, 2, 3) with spatially varying permittivity and permeability, as well as the exact conservation of the energy density\nof the electromagnetic (EM) fields. Furthermore, we have demonstrated that - without affecting the unconditional\nstability of the algorithms - the order of accuracy in the time integration can be systematically increased. An important\naspect that has not been considered in our earlier work [1] concerns the effect of the discretization of space on the\naccuracy of the algorithms. Previously, we employed only the most simple spatial discretization, namely the centraldifference scheme on a cartesian grid with a constant mesh size [1]. We refer to this basic spatial discretization scheme\nas the poor man's implementation. Many numerical simulations of realistic physical systems require algorithms with a\nmore accurate spatial discretization and a more flexible spatial grid for an optimal use of computer resources (CPU time\nand computer memory). In the present paper we show that implementing a fourth-order accurate approximation of the\nspatial derivatives and a spatial grid of variable mesh sizes preserve the unconditional stability of the algorithms. We\nsimulate various physical model systems using these new implementations to demonstrate the significant improvement\nwith respect to the required computer resources in the computation of eigenmode spectra and to study systematically\nthe temporal and spatial accuracy of the algorithms.\nOur presentation is organized as follows: We recapitulate the theory of constructing unconditionally stable algorithms to solve the TDME in Sec. II and describe the basic properties of the poor man's implementation in Sec. III.\nThen, in Sec. IV and Sec. V, we present the implementation of, respectively, the variable grid and the improved spatial\ndiscretization. Our conclusions are given in Sec. VI.\nII.\n\nUNCONDITIONALLY STABLE ALGORITHMS TO SOLVE MAXWELL'S EQUATIONS\n\nWe consider a d-dimensional model system of EM fields in a medium with spatially varying permittivity and/or\npermeability, surrounded by a perfectly conducting box. In the absence of free charges and currents, the EM fields in\nsuch a system satisfy Maxwell's equations [2]\n\n\u2217\n\u2020\n\u2021\n\nE-mail: j.s.kole@phys.rug.nl\nE-mail: m.t.figge@phys.rug.nl\nE-mail: h.a.deraedt@phys.rug.nl\nhttp://rugth30.phys.rug.nl/compphys\n\n\u2202\n1\nH=\u2212 \u2207\u00d7E\n\u2202t\n\u03bc\n\nand\n\n\u2202\n1\nE = \u2207 \u00d7H,\n\u2202t\n\u03b5\n\n(1)\n\ndiv \u03b5E = 0\n\nand\n\ndiv H = 0 ,\n\n(2)\n\n\f2\nwhere H = (Hx (r, t), Hy (r, t), Hz (r, t))T and E = (Ex (r, t), Ey (r, t), Ez (r, t))T denote, respectively, the magnetic and\nthe electric field vector. The permeability and the permittivity are given by \u03bc = \u03bc(r) and \u03b5 = \u03b5(r). For simplicity of\nnotation, we will omit the spatial dependence on r = (x, y, z)T unless this leads to ambiguities. On the surface of the\nperfectly conducting box the EM fields satisfy the boundary conditions [2]\nn\u00d7E= 0\n\nand\n\nn* H = 0,\n\n(3)\n\nwith n denoting the vector normal to a boundary of the surface. The conditions Eqs. (3) assure that the normal\ncomponent of the magnetic field and the tangential components of the electric field vanish at the boundary [2]. Some\nimportant symmetries of the Maxwell equations (1)-(2) can be made explicit by introducing the fields\n\u221a\n\u221a\n(4)\nX(t) = \u03bcH(t) and Y(t) = \u03b5E(t) .\nIn terms of the fields X(t) and Y(t), the TDME (1) read\n\u2202\n\u2202t\n\n\u0012\n\nX(t)\nY(t)\n\n\u0013\n\n=\n\n0\n1\n\u221a \u2207\u00d7\n\u03b5\n\n\u221a1\n\u03bc\n\n\u2212 \u221a1\u03bc \u2207 \u00d7\n0\n\n\u221a1\n\u03b5\n\n!\u0012\n\nX(t)\nY(t)\n\n\u0013\n\n\u2261H\n\n\u0012\n\nX(t)\nY(t)\n\n\u0013\n\n.\n\n(5)\n\nWriting \u03a8(t) = (X(t), Y(t))T , Eq. (5) becomes\n\u2202\n\u03a8(t) = H\u03a8(t) .\n\u2202t\nIt is easy to show that H is skew-symmetric, i.e. HT = \u2212H, with respect to the inner product h\u03a8|\u03a8\u2032 i \u2261\nwhere V denotes the volume of the enclosing box. The formal solution of Eq. (6) is given by\n\u03a8(t) = U (t)\u03a8(0) = etH \u03a8(0) ,\n\n(6)\nR\n\nV\n\n\u03a8T *\u03a8\u2032 dr,\n(7)\n\ntH\nwhere \u03a8(0) represents the initial state of the EMR fields.\ndetermines the time evolu\u0002 2 The operator\n\u0003 U (t) = e\n2\n2\ntion. By construction k\u03a8(t)k = h\u03a8(t)|\u03a8(t)i = V \u03b5E (t) + \u03bcH (t) dr, relating the length of \u03a8(t) to the energy density w(t) \u2261 \u03b5E2 (t) + \u03bcH2 (t) of the EM fields [2]. As U (t)T = U (\u2212t) = U \u22121 (t) = e\u2212tH it follows that\nhU (t)\u03a8(0)|U (t)\u03a8(0)i = h\u03a8(t)|\u03a8(t)i = h\u03a8(0)|\u03a8(0)i. Hence the time-evolution operator U (t) is an orthogonal transformation, rotating the vector \u03a8(t) without changing its length k\u03a8k. In physical terms this means that the energy\ndensity of the EM fields does not change with time, as expected on physical grounds [2].\nA numerical procedure that solves the TDME necessarily starts by discretizing the spatial derivatives. This maps\nthe continuum problem described by H onto a lattice problem defined by a matrix H. Ideally, this mapping should\nnot change the basic symmetries of the original problem. The underlying symmetry of the TDME suggests to use\nmatrices H that are real and skew-symmetric. Since formally the time evolution of the EM fields on the lattice\nis given by \u03a8(t + \u03c4 ) = U (\u03c4 )\u03a8(t) = e\u03c4 H \u03a8(t), the second ingredient of the numerical procedure is to choose an\napproximation of the time-evolution operator U (\u03c4 ). The fact that U (t) is an orthogonal transformation is essential\nfor the development of an unconditionally stable algorithm to solve the Maxwell equations [1]. A systematic approach\nto construct orthogonal approximations to matrix exponentials is to make use of the Lie-Trotter-Suzuki formula [3, 4]\n!m\np\nY\n,\n(8)\netHi /m\net(H1 +...+Hp ) = lim\nm\u2192\u221e\n\ni=1\n\nand generalizations thereof [5, 6]. Applied to the case of interest here,P\nthe success of this approach relies on the basic\np\nbut rather trivial premise that the matrix H can be written as H = i=1 Hi , where each of the matrices Hi is real\nand skew-symmetric. Expression Eq. (8) suggests that\nU1 (\u03c4 ) = e\u03c4 H1 . . . e\u03c4 Hp\n\n(9)\n\nmight be a good approximation to U (\u03c4 ) if \u03c4 is sufficiently small. In fact, it can be shown that U (\u03c4 ) and U1 (\u03c4 ) are\nidentical up to first order in \u03c4 [7]. Most importantly, if all the Hi are real and skew-symmetric, U1 (\u03c4 ) is orthogonal\nby construction. Therefore, by construction, a numerical scheme based on Eq. (9) will be unconditionally stable. The\nproduct-formula approach provides simple, systematic procedures to improve the accuracy of the approximation to\nU (\u03c4 ) without changing its fundamental symmetries. For example the orthogonal matrix\nU2 (\u03c4 ) = U1T (\u2212\u03c4 /2) U1 (\u03c4 /2)\n\n(10)\n\n\f3\nis identical to U (\u03c4 ) up to second order in \u03c4 [5, 6]. Suzuki's fractal decomposition approach [5] gives a general method\nto construct higher-order approximations based on U1 (\u03c4 ) or U2 (\u03c4 ). A particularly useful approximation, which is\nidentical to U (\u03c4 ) up to fourth order in \u03c4 , is given by [5]\nU4 (\u03c4 ) = U2 (a\u03c4 )U2 (a\u03c4 )U2 ((1 \u2212 4a)\u03c4 )U2 (a\u03c4 )U2 (a\u03c4 ) ,\n\n(11)\n\nwhere a = 1/(4 \u2212 41/3 ). From Eqs. (9)-(11) it follows that, in practice, an efficient implementation of a scheme based\non U1 (\u03c4 ) is all that is needed to construct the higher-order algorithms Eqs. (10) and (11). In many applications the\napproximations Un (\u03c4 ) to the time-evolution operator U (t) have proven to be very useful [4, 6, 7, 8, 9, 10, 11, 12, 13,\n14, 15] and turn out to be equally useful for solving the TDME [1]. In particular, it can be shown that the difference\nbetween the exact EM field vector \u03a8(t) = U (t)\u03a8(0) and the approximate one, \u03a8n (t) = Un (t)\u03a8(0), is bounded by [7]\nk(U (t) \u2212 Un (t))\u03a8(0)k = k\u03a8(t) \u2212 \u03a8n (t)k \u2264 Cn t \u03c4 n ,\n\n(12)\n\nwhere Cn is a constant. The rigorous upper bound on the error of the EM field vector will be used to specify\nunconditionally stable algorithms by the temporal and spatial accuracy of the computed EM field. We denote an\nalgorithm by TnSm if its implementation involves a time integration based on Un (\u03c4 ) and a spatial discretization\nscheme based on an mth-order accurate approximation of the spatial derivatives.\nIII.\n\nPOOR MAN'S IMPLEMENTATION\n\nIn this section, we briefly recapitulate the construction of the unconditionally stable algorithm to solve Maxwell's\nequations in a one-dimensional (1D) system. Furthermore, we discuss general properties of this implementation\nrefering also to the two-dimensional (2D) and three-dimensional (3D) case.\nMaxwell's equations for a 1D system extending along the x-axis contain no partial derivatives with respect to y\nor z. Also \u03b5 and \u03bc do not depend on y or z. Under these conditions, the TDME reduce to two independent sets of\nfirst-order differential equations [2]. The solutions to these sets are known as the transverse electric (TE) mode and\nthe transverse magnetic (TM) mode [2].\npRestricting our considerations to the TM-mode,\np it follows from Eq. (5) that\nthe magnetic field Hy (x, t) = Xy (x, t)/ \u03bc(x) and the electric field Ez (x, t) = Yz (x, t)/ \u03b5(x) are solutions of\n!\nYz (x, t)\n1\n\u2202\n\u2202\np\nXy (x, t) = p\n,\n(13)\n\u2202t\n\u03bc(x) \u2202x\n\u03b5(x)\n!\n\u2202\nXy (x, t)\n1\n\u2202\np\nYz (x, t) = p\n.\n(14)\n\u2202t\n\u03b5(x) \u2202x\n\u03bc(x)\nNote that in 1D the divergence of Hy (x, t) and Ez (x, t) is zero, hence Eqs. (2) are automatically satisfied. Using the\ncentral-difference scheme, which yields a second-order accurate approximation of the spatial derivatives, we obtain\n\u0012\n\u0013\n\u2202\n1\nYz (i + 1, t) Yz (i \u2212 1, t)\n,\n(15)\n\u2212 \u221a\nXy (i, t) = \u221a\n\u221a\n\u2202t\n\u03b4 \u03bci\n\u03b5i+1\n\u03b5i\u22121\n\u0013\n\u0012\n\u2202\n1\nXy (j + 1, t) Xy (j \u2212 1, t)\n\u2212\n,\n(16)\nYz (j, t) = \u221a\n\u221a\n\u221a\n\u2202t\n\u03b4 \u03b5j\n\u03bcj+1\n\u03bcj\u22121\n\nwhere the spatial coordinate of an EM field component is specified through the lattice index i, e.g. Xy (i, t) stands\nfor Xy (x = i\u03b4/2, t), and \u03b4/2 the distance between two neighboring lattice points. Following Yee [16] it is convenient\n\nFIG. 1: Positions of the two TM-mode EM field components on the 1D grid.\n\nto assign Xy (i, t) and Yz (j, t) to the odd, respectively, even numbered lattice site, as shown in Fig. 1 for a grid of n\n\n\f4\npoints. The equations (15) and (16) can now be combined into one equation of the form Eq. (6) by introducing the\nn-dimensional vector \u03a8(t) with elements\n\u001a\n\u221a\nXy (i, t) =\u221a \u03bci Hy (i, t), i odd\n.\n(17)\n\u03a8(i, t) =\nYz (i, t) = \u03b5i Ez (i, t),\ni even\nThe vector \u03a8(t) describes both the magnetic and the electric field on the lattice points i = 1, . . . , n and the ith element\nof \u03a8(t) is given by the inner product \u03a8(i, t) = eTi * \u03a8(t), where ei denotes the ith unit vector in the n-dimensional\nvector space. Using this notation, it is easy to show that\n\u03a8(t) = U (t)\u03a8(0) with U (t) = exp(tH) ,\n\n(18)\n\nwhere the matrix H is represented by two parts,\nH = H1 + H2 ,\n\n(19)\n\nwith\nH1 =\n\nn\u22122\nX\n\u2032\ni=1\n\nH2 =\n\nn\u22122\nX\n\u2032\ni=1\n\n\u0001\n\u03b2i+1,i ei eTi+1 \u2212 ei+1 eTi ,\n\n(20)\n\n\u0001\n\u03b2i+1,i+2 ei+1 eTi+2 \u2212 ei+2 eTi+1 .\n\n(21)\n\n\u221a\nHere, \u03b2i,j = 1/(\u03b4 \u03b5i \u03bcj ) and the prime indicates that the sum is over odd integers only. For n odd we have\n\u2202\n\u03a8(1, t) = \u03b22,1 \u03a8(2, t)\n\u2202t\n\nand\n\n\u2202\n\u03a8(n, t) = \u2212\u03b2n\u22121,n \u03a8(n \u2212 1, t) ,\n\u2202t\n\n(22)\n\nsuch that the electric field vanishes at the boundaries (Yz (0, t) = Yz (n + 1, t) = 0), as required by the boundary\nconditions Eqs. (3).\nThe representation of H as the sum of H1 and H2 divides the lattice into odd and even numbered cells. Most\nimportant, however, both H1 and H2 are skew-symmetric block-diagonal matrices, containing one 1 \u00d7 1 matrix and\n(n \u2212 1)/2 real 2 \u00d7 2 skew-symmetric matrices. Therefore, according to the general theory outlined in Sec. II, this\ndecomposition of H is suitable to construct an orthogonal approximation\nU1 (\u03c4 ) = e\u03c4 H1 e\u03c4 H2\n\n(23)\n\nthat is identical to the time-evolution operator U (\u03c4 ) up to first order in \u03c4 . As the matrix exponential of a blockdiagonal matrix is equal to the block-diagonal matrix of the matrix exponentials of the individual blocks, the numerical\ncalculation of e\u03c4 H1 (or e\u03c4 H2 ) reduces to the calculation of (n \u2212 1)/2 matrix exponentials of 2 \u00d7 2 matrices. The matrix\nexponential of a typical 2 \u00d7 2 matrix appearing in e\u03c4 H1 or e\u03c4 H2 is simply given by\n\u0013\n\u0013\u0012\n\u0013\n\u0012\n\u0013\u0015 \u0012\n\u0014 \u0012\n\u03a8(i, t)\ncos \u03b1\nsin \u03b1\n\u03a8(i, t)\n0 1\n,\n(24)\n=\nexp \u03b1\n\u03a8(j, t)\n\u2212 sin \u03b1\ncos \u03b1\n\u03a8(j, t)\n\u22121 0\nand represents the rotation of two elements of the vector \u03a8(t) leaving all the other elements unchanged. This property\nof the time-evolution operator Eq. (23) provides the intrinsic possibility to parallelize the algorithms. Furthermore,\nit is even possible to alter the ordering of the products in the time-evolution operator Un (\u03c4 ) in order to construct an\nefficient implementation for a particular system. The plane rotations Eq. (24) are performed by simply processing an\narbitrarily ordered list S of pairs of EM field vector elements using\nY\nT\nT\nU1 (\u03c4 ) =\ne\u03c4 \u03b2i,j (ei ej \u2212ej ei ) ,\n(25)\nS\n\ninstead of the odd-even decomposition Eq. (23) for which S = {(1, 2), (3, 4), . . . , (n \u2212 2, n \u2212 1), (2, 3), (4, 5), . . . , (n \u2212\n1, n)}.\nThe implementation for 1D can be readily extended to 2D and 3D systems, as has been illustrated in Ref. [1]. In\n2D, the TDME (1) separate again into two independent sets of equations and the discretization of continuum space\nis done by simply reusing the 1D lattice introduced above. This is shown in Fig. 2 for the case of the 2D TM-modes.\n\n\f5\n\nFIG. 2: Positions of the three TM-mode EM field components on the 2D grid for nx = 9 and ny = 5.\n\nFIG. 3: Positions of the EM field components on the 3D Yee grid.\n\nThe construction automatically takes care of the boundary conditions if nx and ny are odd and yields a real skewsymmetric matrix H. Correspondingly, in 3D the spatial coordinates are discretized by adopting the standard Yee\ngrid [16], which also automatically satisfies the boundary conditions Eqs. (3). A unit cell of the Yee grid is shown in\nFig. 3.\nIn general, the time step \u03c4 and the distance \u03b4 between next-nearest neighbor grid points are related due to the\nerror that is introduced when the exact time-evolution operator U (\u03c4 ) is replaced by Un (\u03c4 ). We have [5, 6, 7]:\n\u0013n+1\n\u0012\n\u03b1(n) \u03c4\n.\n(26)\nkU (\u03c4 ) \u2212 Un (\u03c4 )k \u2264 \u03b3(d)\n\u03b4\nHere, \u03b3(d) depends on the particular spatial discretization scheme used and \u03b1(n) represents the largest positive\nconstant that appears as a prefactor in the exponential of the approximation Un (\u03c4 ). We find \u03b1(2) = 1/2 from\nEq. (10) and inspection of Eq. (11) yields \u03b1(4) = (1/2)(4a \u2212 1) \u2248 0.33. It follows that for a required spatial resolution,\nwhich determines the smallness of \u03b4, the time step has to be chosen such that\n\u03c4 \u2264 \u03c4\u2217 \u2261\n\n\u03b4\n\u03b1(n)\n\n(27)\n\nin order to keep the error Eq. (26) small. As an example we consider a wave packet in a 2D cavity that is simulated\n\n\f6\nby a T4S2 algorithm. For numerical purposes we use dimensionless variables throughout this paper, where the unit\nof length is denoted by \u03bb and the vacuum light velocity c is taken as the unit of velocity, while the permittivity \u03b5 and\npermeability \u03bc are measured in units of their corresponding values in vacuum, respectively, \u03b50 and \u03bc0 . The cavity\nwith \u03b5 = 1 and \u03bc = 1 is of size 19 \u00d7 15 and contains a dielectric medium with \u03b5 = 2.25 and \u03bc = 1 that has an inclined\nboundary. We plot in Fig. 4 the results of simulations in which the wave packet scatters on the dielectric medium.\nIn the four pictures we show the EM energy density distributions that are obtained after simulation time t = 12.8\nfor a fixed mesh size \u03b4 = 0.1 and for four different time steps \u03c4 . It follows from Eq. (27) that the upper limit for\n\nFIG. 4: Energy density distributions at simulation time t = 12.8 for various time steps \u03c4 obtained by the T4S2 algorithm for\na fixed mesh size \u03b4 = 0.1. The wave packet has been created for parameters (\u03c3x , \u03c3y ) = (2, 1.73), (x0 , y0 ) = (5, 7.5), and k = 8\n(see for details Eq. (54) in Sec. V B) and impinges on the dielectric structure from the left.\n\nthe time step is given by \u03c4 \u2217 = 0.3 in this case. For \u03c4 = 0.4 the EM energy density distribution is, in fact, seen to\nchange dramatically such that the results become meaningless. It should be noted that the limitation Eq. (27) on\nthe time step is different from the Courant number which relates the time step \u03c4 to the stability of finite-difference\ntime-domain (FDTD) algorithms [17] that are based on the Yee algorithm [16]. The algorithms presented in this\npaper are unconditionally stable by construction for any time step \u03c4 and produce reasonable numerical results up to\n\u03c4 = \u03c4 \u2217 , a time step at which the Yee-based FDTD algorithms may have become unstable.\nWe conclude this section by noting that our algorithms conserve the divergence of the EM fields only in 1D systems\nbut not in 2D and 3D systems. Although the initial state \u03a8(t = 0) can be chosen such that the EM fields satify\nEqs. (2), the time-integration of the TDME by an algorithm based on the approximation Un (\u03c4 ) yields EM fields whose\ndivergence quickly acquires a finite value and then remains constant in time. This is shown in Fig. 5 where we plot\nthe computed norm of the magnetic field divergence in a 3D system as a function of time. The 3D system is an empty\ncavity (\u03b5 = 1 and \u03bc = 1) of size 1.5 \u00d7 1.5 \u00d7 1.5 and we use the T2S2 algorithm. Though the divergence of the EM\nfields is not conserved in 2D and 3D systems, this error can be reduced by using smaller time steps or algorithms with\nhigher-order time accuracy. This can be seen in Fig. 6, where we compare the algorithms T2S2 and T4S2 as a function\nof the time step \u03c4 to show that the error in the EM field divergence vanishes for the TnS2 algorithm proportional to\n(\u03c4 c/\u03b4)n .\nIV.\n\nVARIABLE GRID IMPLEMENTATION\n\nThe poor man's implementation does not provide an optimal discretization scheme for physical systems of unregular\ngeometrical shapes or with strongly varying permeability and/or permittivity. In a practical implementation of such\nsystems the grid has to be variable with a small mesh size in one region of the system and a large mesh size in another\nregion of the system. In this section we show how to implement a variable grid in such a way that the algorithms to\nsolve the TDME remain unconditionally stable by construction.\nFor the sake of simplicity we consider a 1D system that is discretized using a variable grid as shown in Fig. 7. In\n\n\f7\n\nFIG. 5: The norm of the divergence of the magnetic field in a 3D empty cavity (\u03b5 = 1 and \u03bc = 1) of size 1.5 \u00d7 1.5 \u00d7 1.5 as a\nfunction of time t. The computation is performed with the T2S2 algorithm keeping the mesh size \u03b4 = 0.1 fixed.\n\nFIG. 6: The norm of the divergence of the magnetic field in a 3D empty cavity (\u03b5 = 1 and \u03bc = 1) of size 1.5 \u00d7 1.5 \u00d7 1.5 as a\nfunction of \u03b4/c\u03c4 . The computation is performed with the algorithms T2S2 and T4S2.\n\na straightforward implemention of the variable grid we would replace the constant next-nearest neighbor distance \u03b4\nin Eqs. (15) and (16) of the poor man's implementation by the corresponding variable distance. It is convenient to\nwrite this substitution in the form\n\u0015\n\u0014\n\u03b4i\u22121,i \u2212 \u03b4i+1,i+2\n,\n(28)\n\u03b4 \u2192 \u2206i,i+1 1 +\n2\u2206i,i+1\nwhere \u03b4i,j is the distance between grid points i and j (see Fig. 7) and\n\u2206i,i+1 \u2261\n\n1\n(\u03b4i\u22121,i + 2\u03b4i,i+1 + \u03b4i+1,i+2 )\n2\n\n(29)\n\nis the averaged next-nearest neighbor distance. It can be easily checked that an implementation of the variable grid\nthat relies on the replacement Eq. (28) would destroy the skew-symmetry property of the corresponding matrix H\n(see Eq. (19)). This is unphysical: The original form of the Maxwell equations do have this property. However, a\nvariable grid implementation that does preserve the underlying symmetry of Maxwell's equations can be constructed\nfor a sufficiently smooth, variable grid. In this case, the second term in the brackets of Eq. (28) may be neglected and\n\n\f8\n\nFIG. 7: Positions of the two TM-mode EM field components on the 1D variable grid.\n\nthe replacement\n\u03b4 \u2192 \u2206i,i+1 = \u2206i+1,i\nmay yield a resonable approximation of Eqs. (15) and (16) for the variable grid implementation:\n\u0012\n\u0013\n\u2202\nYz (i \u2212 1, t)\n1\nYz (i + 1, t)\n,\n\u2212\nXy (i, t) = \u221a\n\u221a\n\u221a\n\u2202t\n\u03bci \u2206i,i+1 \u03b5i+1\n\u2206i,i\u22121 \u03b5i\u22121\n\u0012\n\u0013\n\u2202\nXy (i, t)\n1\nXy (i + 2, t)\n.\n\u2212\nYz (i + 1, t) = \u221a\n\u221a\n\u221a\n\u2202t\n\u03b5i+1 \u2206i+1,i+2 \u03bci+2\n\u2206i+1,i \u03bci\n\n(30)\n\n(31)\n(32)\n\nThe corresponding matrix H is seen to be skew-symmetric,\nH=\n\n\u0015\nn \u0014\nT\nX\n\u2032 ei eT\ne eT \u2212 e eT\ni+1 \u2212 ei+1 ei\n+ i+1 i+2 \u221a i+2 i+1 ,\n\u221a\n\u2206i,i+1 \u03b5i+1 \u03bci\n\u2206i+1,i+2 \u03b5i+1 \u03bci+2\ni=1\n\n(33)\n\nand may again be separated into an odd and even part of which the exponents can be easily calculated following the\nsame steps as given above in the poor man's implementation.\nIt is obvious that this variable grid implementation can, in principle, be applied in any spatial dimension d. However,\nit is in general not possible to predict how to choose a grid that yields the best approximation to the true spectrum\nof eigenmodes of any non-trivial d-dimensional system. We therefore studied the criteria for the choice of suitable\nvariable grids in particular systems numerically and present the results for a 1D and a 2D system in the remainder of\nthis section.\nThe 1D system under consideration consists of a cavity of length L = 10 with a constant permeability \u03bc = 1 and\na varying permittivity \u03b5. The permittivity deviates from its vacuum value (\u03b5 = 1) due to the presence of a dielectric\nmedium with \u03b5 = 3 that is located in the middle of the cavity and extends over a length 2, as shown in Fig. 8.\nAs a reference system we use a poor man's implementation with constant next-nearest neighbor distance \u03b4 = 0.025\n\nFIG. 8: The 1D cavity with the dielectric structure (solid line) and the two implemented variable grids: \u2206i,i+1 = {0.1 \u2194\n0.05 \u2194 0.025} (dashed line) and \u2206i,i+1 = {0.05 \u2194 0.025} (dotted line).\n\n\f9\nand calculate the eigenmodes \u03c9n of the corresponding matrix H. For two different variable grids we calculate the\ncorresponding eigenmodes \u03c9\u0303n and the deviation \u0393(\u03c9n , \u03c9\u0303n ) = 1 \u2212 \u03c9\u0303n /\u03c9n relative to the eigenmodes of the reference\nsystem. The two variable grids have in common that the dielectric medium and the transitions between \u03b5 = 1 and\n\u03b5 = 3 at both its sides is embedded in a grid of constant next-nearest neighbor distance which equals that of the\nreference system (\u2206i,i+1 = \u03b4 = 0.025). Furthermore, at the left end and at the right end of the cavity the next-nearest\nneighbor distance is constant over a length 2.5 and equals, respectively, \u2206i,i+1 = 0.1 and \u2206i,i+1 = 0.05 in the two\nvariable grids. The transitions in the variable grids between regions of constant next-nearest neighbor distance involve\nabrupt steps between\n\u2206i,i+1 = 0.1 \u2194 \u2206i,i+1 = 0.05 \u2194 \u2206i,i+1 = 0.025 ,\n\n(34)\n\nwhere we kept the intermediate distance \u2206i,i+1 = 0.05 over eight grid points, and between\n\u2206i,i+1 = 0.05 \u2194 \u2206i,i+1 = 0.025 ,\n\n(35)\n\nrespectively.\nIn Fig. 9 we plot \u0393(\u03c9n , \u03c9\u0303n ) for the first 50 eigenmodes of both variable grids. The relative deviation is seen to\n\nFIG. 9: Relative deviation \u0393(\u03c9n , \u03c9\u0303n ) for two variable grids.\n\nincrease with the number of the frequency mode. As high mode numbers represent high frequencies this observation\nsimply reflects the general fact that the accuracy of the eigenmodes depends on the smallness of the mesh size\n(numerical dispersion). Clearly, this also explains why the relative deviation \u0393(\u03c9n , \u03c9\u0303n ) increases upto 2% for the\nvariable grid with \u2206i,i+1 = {0.1 \u2194 0.05 \u2194 0.025}, while for the variable grid with \u2206i,i+1 = {0.05 \u2194 0.025} this\ndeviation remains well below 0.5%. For the first few frequency modes, however, we observe an increase in \u0393(\u03c9n , \u03c9\u0303n ).\nThis behavior can be related to the error that is introduced in the variable grid implementation by applying the\napproximation Eq. (30) instead of the exact replacement Eq. (28). To check this statement we plot in Fig. 10 the\ndeviation \u0393(\u03a9n , \u03c9\u0303n ) for the first 50 eigenmodes of the two variable grids relative to the eigenmodes \u03a9n that belong to\nthe variable grids of the exact implementation Eq. (28). We see that the increase of the relative deviation for the first\nfew eigenmodes is, in fact, related to the error which is made by replacing the exact substitution Eq. (28) with the\nskew-symmetry conserving approximation Eq. (30). This approximation leads to oscillations of \u0393(\u03a9n , \u03c9\u0303n ) (and also\n\u0393(\u03c9, \u03c9\u0303n )) that vanish with increasing frequency mode number. From extended numerical studies (results not shown)\nwe find that these variations depend on several factors, such as the size in the difference between the largest and\nsmallest distance \u2206i,i+1 of the variable grid implementation and on how abrupt \u2206i,i+1 changes with i. In practice,\nit will be necessary to check the robustness of numerical results obtained by a variable grid implementation against\nsmall changes in its parameters. Although this may sound as a serious disadvantage, the next example of a 2D system\nshows that for realistic applications it may be by far more efficient to perform several simulation runs with a variable\ngrid implementation than to use the poor man's implementation.\nThe 2D system we consider is given by the L-shaped cavity depicted in Fig. 11. In order to satisfy the conditions\nEq. (3) at the boundaries, the EM fields change very strongly close to the sharp edge of the cavity. Large spatial\nchanges of the EM fields require a small mesh size. However, for the overwhelming part of the cavity a small mesh size\nwould cause a waste of resources (computer memory and CPU time). Therefore, this system can be more efficiently\n\n\f10\n\nFIG. 10: Relative deviation \u0393(\u03a9n , \u03c9\u0303n ) for two variable grids.\n\nFIG. 11: The L-shaped 2D cavity with a variable grid (schematically).\n\nsimulated by a variable grid implementation with an increasing number of grid points near the edge. This is done by\na uniform increase of the number of grid points along both the x- and the y-direction as is schematically drawn in\nFig. 11. Furthermore, instead of using the odd-even decomposition of the time-evolution operator (corresponding to\nEq. (23) for the 1D system) on a square grid that would contain grid points outside the L-shaped cavity, we perform\nthe plane rotations by processing a list S of pairs of the EM field vector elements at the grid points that actually\nbelong to the L-shaped cavity (corresponding to Eq. (25) for the 1D system).\nIn Table I we present the results of a numerical simulation for the eight lowest TM eigenmodes in the cavity. We\nused the T2S2 algorithm imposing a poor man's implementation with \u03b4 = 0.003125 and a variable grid implementation\nmode n\n\n1\n2\n3\n4\n5\n6\n7\n8\n\nT2S2\nconstant variable\ngrid \u03c9n grid \u03c9n\n2.9989 2.9913\n3.9807 3.9500\n4.9164 4.8857\n5.4150 5.3843\n5.5837 5.5453\n6.0592 6.0209\n6.7649 6.7265\n6.8876 6.8492\n\nGdfidL\nconstant variable\ngrid \u03c9n grid \u03c9n\n2.9999 2.9992\n3.9740 3.9720\n4.9156 4.9102\n5.4077 5.4004\n5.5791 5.5710\n6.0580 6.0494\n6.7511 6.7377\n6.8797 6.8674\n\nTABLE I: The eight lowest TM eigenmodes of the L-shaped cavity (see Fig. 11).\n\n\f11\nconstant grid \u03b4\n0.1\n0.05\n0.025\n0.0125\n0.00625\n0.003125\nvariable grid \u2206\n0.1 \u2192 0.05\n0.1 \u2192 0.025\n0.1 \u2192 0.0125\n0.1 \u2192 0.00625\n0.05 \u2192 0.003125\n\n\u03c93 \u0393 (in %)\n4.571\n7.5\n4.740\n3.7\n4.832\n1.7\n4.878 0.78\n4.901 0.31\n4.916\n0\n4.717\n4.801\n4.840\n4.878\n4.886\n\n4.2\n2.4\n1.6\n0.78\n0.61\n\nTABLE II: Error in third-lowest eigenmode of the L-shaped cavity (see Fig. 11).\n\nwith a mesh size ranging from \u2206 = 0.05 to \u2206 = 0.003125. Very similar to the procedure described above for the 1D\nsystem, the mesh size is decreased by a factor 0.5 and then kept constant for several grid points to smoothen this\ntransition before the mesh size is decreased further. Our results are in good agreement with those obtained by the\nprogram package GdfidL [18] for the same 2D system (see Table I). In Table II we show the location of the arbitrarily\nchosen third-lowest eigenmode \u03c93 for several constant and variable grid implementations of the T2S2 algorithm. In\nall simulations we set \u03b4/c\u03c4 = 10, where in the case of a variable grid \u03b4 is replaced by the smallest mesh size. The\nrelative error \u0393 of the frequency \u03c93 is measured with respect to the frequency \u03c93 = 4.916 of the system with constant\nmesh size \u03b4 = 0.003125. The numerical results obtained within the variable grid implementation are in excellent\nagreement with the results of the poor man's implementation and the program package GdfidL. The T2S2 algorithm\nwith the poor man's implementation and \u03b4 = 0.003125 consumes about 150 times more CPU time and 10 times more\ncomputer memory than the T2S2 algorithm with variable grid implementation and \u2206 = {0.05 \u2192 0.003125}. Clearly,\nthese numbers justify additional simulation runs that are required to check the robustness of numerical results against\nsmall changes in the parameters of a variable grid implementation.\nV.\n\nIMPROVED SPATIAL DISCRETIZATION IMPLEMENTATION\n\nBoth conditional FDTD algorithms and the unconditionally stable algorithms TnSm suffer from numerical dispersion due to the discretization of continuum space on a grid with a finite mesh size [17]. Methods to reduce numerical\ndispersion are taking a grid with a smaller mesh size or employing more accurate finite-difference approximations to\nthe spatial derivatives. The former obviously can be also used in the poor man's implementation of unconditionally\nstable algorithms, however, for several reasons it may be more desirable to implement higher-order accurate approximations of the spatial derivatives. For example, if one is interested in global features of the distribution of a system's\neigenmodes, i.e. if we want to determine all eigenvalues, a higher-order accurate spatial derivative implementation\nwould be strongly preferred. The computation of a system's eigenmode spectrum is performed by calculating the\nFourier transform of the inner product F (t) = h\u03a8(0)|\u03a8(t)i [1, 19, 20]. Using independent random numbers to initialize the elements of \u03a8(0), the full eigenmode spectrum is obtained by averaging this Fourier transform. Taking just a\nsmaller mesh size for the grid in the poor man's implementation does not only reduce the numerical dispersion but\nalso gives rise to more eigenmodes with high frequencies. In order to obtain the eigenmode spetrum with the same\nspectral resolution, the sampling of F (t) would have to be done over smaller time intervals involving the computation\nof more data points. It is thus desirable to implement, instead, higher-order accurate approximations of the spatial\nderivatives that make a moderate use of computer resources in terms of CPU time and computer memory possible.\nThe procedure for the construction of higher-order approximations to spatial derivatives is standard [21]. In the\npresent case, we apply this procedure keeping in mind that Maxwell's equations (5) are skew-symmetry and that\nthe electric and magnetic field components are defined at particular grid points. The grid of a d-dimensional system\nwith a constant mesh size of distance \u03b4/2 between neighboring grid points is shown in Figs. (1)-(3). Without loss\nof generality we consider a 1D system, where \u03a8(i, t) = \u03a8(i\u03b4/2, t) is the ith component of the EM field vector and\ndenotes an electric field compoenent for i even and a magnetic field component for i odd (see Sec. III for details).\nApplying the second-order accurate central-difference scheme the spatial derivative of the EM field component \u03a8(i, t)\n\n\f12\nis given by\n\u03a8(i + 1, t) \u2212 \u03a8(i \u2212 1, t) \u03b4 2 (3)\n\u2202\n\u03a8(i, t) =\n\u2212 \u03a8 (i, t) + O(\u03b4 4 ),\n\u2202x\n\u03b4\n6\n\n(36)\n\nwhere \u03a8(3) (i, t) \u2261 \u2202 3 \u03a8(i, t)/\u2202x3 . Similarly, using the third-nearest neighbor EM field points at distance 3\u03b4/2, we have\n\u03a8(i + 3, t) \u2212 \u03a8(i \u2212 3, t) 9\u03b4 2 (3)\n\u2202\n\u03a8(i, t) =\n\u2212\n\u03a8 (i, t) + O(\u03b4 4 ).\n\u2202x\n3\u03b4\n6\n\n(37)\n\nA fourth-order accurate approximation of the spatial derivative \u2202\u03a8(i, t)/\u2202x is now constructed in terms of a linear\ncombination of Eqs. (36) and (37) which is chosen such that the terms proportional to \u03a8(3) (i, t) vanish. We obtain:\n\u0012\n\u0013\n\u0012\n\u0013\n\u2202\n1 \u03a8(i + 3, t) \u2212 \u03a8(i \u2212 3, t)\n9 \u03a8(i + 1, t) \u2212 \u03a8(i \u2212 1, t)\n\u2212\n+ O(\u03b4 4 ).\n(38)\n\u03a8(i, t) =\n\u2202x\n8\n\u03b4\n8\n3\u03b4\nIn practice, it is straightforward to implement the improved spatial discretization, since we can use the implementation\nof the central-difference scheme for the two terms separately and then combine the results according to Eq. (38).\nThe corresponding matrix H of the 1D system (see Eq. (19)) changes from tridiagonal to five-diagonal, but most\nimportantly it preserves its property of being skew-symmetric. It should be noted, however, that the fourth-order\naccurate spatial derivative introduces errors at the boundaries since the calculation of \u2202\u03a8(i, t)/\u2202x for i = 1,2,n \u2212 1,\nand n refer, respectively, to grid points i = \u22122, \u22121, n + 1, and n + 2 that lie outside the cavity and are implicitly\nassumed to be zero.\nIt is obvious that the fourth-order accurate approximation of the spatial derivatives can be similarly applied in\nsystems of any spatial dimension d. In the remainder of this section we study the numerical dispersion and the\ntemporal and spatial accuracy of the algorithms for various 1D and 2D systems.\nA.\n\nNumerical Dispersion\n\nWe illustrate the difference in the numerical dispersion between the poor man's implementation and the improved\nspatial discretization implementation by a comparison of the eigenmode spectra of a 1D empty cavity (\u03b5 = 1 and\n\u03bc = 1) of length L. In 1D, the continuum wave equation for the EM fields [2],\n\u0014\n\u0015\n1 \u22022\n\u22022\n\u03a8(x, t) = 0 ,\n(39)\n\u2212\nc2 \u2202t2\n\u2202x2\nis solved by the ansatz \u03a8(x, t) \u221d cos(\u03c9t \u2212 kx + \u03c6) (with a phase \u03c6 to distinguish electrical and magnetic field\ncomponents) yielding the linear dispersion relation between frequency \u03c9 and wave number k: \u03c9 = c|k|. Focusing on\nthe effect of the spatial derivatives on the numerical dispersion, we assume perfect time integration of the algorithms\nand impose periodic boundary conditions on the EM field components: \u03a8p (i, t) \u221d cos(\u03c9p t \u2212 kp \u03b4/2 + \u03c6) with wave\nnumber kp = 2\u03c0p/L and \u2212L/(2\u03b4) < p \u2264 L/(2\u03b4). Applying the second-order accurate spatial derivative we obtain\n\u22022\n1\n\u03a8p (i, t) = 2 [\u03a8p (i + 2, t) \u2212 2\u03a8p (i, t) + \u03a8p (i \u2212 2, t)] + O(\u03b4 2 ) ,\n\u2202x2\n\u03b4\n\n(40)\n\nwhile for the fourth-order accurate spatial derivative we find\n\u22022\n\u03a8p (i, t) =\n\u2202x2\n\n\u0012\n\n9\n8\u03b4\n\n\u00132\n\n[\u03a8p (i + 2, t) \u2212 2\u03a8p (i, t) + \u03a8p (i \u2212 2, t)] +\n\n\u00132\n1\n+\n[\u03a8p (i + 6, t) \u2212 2\u03a8p (i, t) + \u03a8p (i \u2212 6, t)] +\n24\u03b4\n\u0013\n\u0012\n9\n[\u03a8p (i + 2, t) + \u03a8p (i \u2212 2, t) \u2212 \u03a8p (i + 4, t) \u2212 \u03a8p (i \u2212 4, t)] + O(\u03b4 4 ) .\n+\n96\u03b4 2\n\u0012\n\n(41)\n\nFor m = 2 the analytical solution of the eigenmode spectrum for the mth-order accurate spatial derivative is given by\n\u03c9p 2 = 2\n\n\u0010 c \u00112\n\u03b4\n\n[1 \u2212 cos(kp \u03b4)] ,\n\n(42)\n\n\f13\nwhile for m = 4 we find\n\u03c9p 2 =\n\n3\n\u0010 c \u00112 X\n\n\u03b4\n\nCl cos(lkp \u03b4)\n\n(43)\n\nl=0\n\nwith coefficients C0 = 365/144, C1 = \u221287/32, C2 = 3/16, and C3 = \u22121/288. We show in Fig. 12 that the dispersion\nrelations, which we obtained numerically by the mth-order accurate spatial derivative implementation for a 1D cavity\nof length L = 4, are in excellent agreement with the corresponding analytical solutions Eqs. (42) and (43). It is\n\nFIG. 12: Numerical and analytical dispersion relations for the 1D cavity of length L = 4 as obtained from calculations with\nmth-order accurate approximations of the spatial derivatives (m = 2, 4). In both simulations we kept \u03b4 = 0.1 and \u03c4 = 0.01/c\nfixed.\n\nclearly visible that the dispersion relation computed by the poor man's implementation (T2S2 algorithm) suffers from\nnumerical dispersion already at frequencies above \u03c9 = 10, whereas for a grid with the same mesh size the fourth-order\naccurate spatial derivative implementation (T2S4 algorithm) works well up to \u03c9 = 15.\nB.\n\nTemporal and Spatial Accuracy\n\nTo perform a systematic study of the accuracy of the algorithms as a function of the time step \u03c4 and the mesh size\n\u03b4, we compute the difference between the normalized exact, \u03a8(t), and the approximate, \u03a8n,m (t), EM field vector as\nobtained by the TnSm algorithm:\n\u2206\u03a8n,m (t) \u2261 k\u03a8(t) \u2212 \u03a8n,m (t)k .\n\n(44)\n\nWe first consider the propagation of a Gaussian wave packet in a 1D empty cavity (\u03b5 = 1 and \u03bc = 1) of length\nL = 30. At t = 0 the Gaussian wave packet\n\u0003\n\u0002\n(45)\nEz (x, t) = exp \u2212(x \u2212 x0 \u2212 ct)2 /\u03c3 2\n\nwith standard deviation \u03c3 = 2 is located at x0 = 8. For t > 0 the wave packet propagates with velocity c in the\nx-direction until it hits the right boundary of the cavity, becomes reflected, and propagates in the opposite direction.\nTo derive an analytical expression of the exact EM field vector \u03a8(t), we expand Ez (x, t) in the TM-modes\nEz (x, t) = \u2212\nHy (x, t) =\n\n\u221e\nX\n\nan sin(n\u03c0x/L) sin(n\u03c0(x0 + ct)/L),\n\n(46)\n\nn=1\n\u221e\n\na0 X\n+\nan cos(n\u03c0x/L) cos(n\u03c0(x0 + ct)/L),\n2\nn=1\n\n(47)\n\n\f14\nwith coefficients\nan =\n\n\u0013\n\u0012\n\u221a\n\u03c3 2 \u0010 n\u03c0 \u00112\n2\u03c3 \u03c0\n,\nexp \u2212\nL\n4\nL\n\n(48)\n\nwhich ensure that the wave packet satisfies the boundary conditions Eq. (3). Using Poisson's summation formula we\nfind the following expressions for the EM field components\nEz (x, t) =\nHy (x, t) =\n\n\u221e\nX\n\u0001\u0003\n\u0001\n\u0002\nexp \u2212(2nL + x + x0 \u2212 ct)2 /\u03c3 2 \u2212 exp \u2212(2nL + x \u2212 x0 + ct)2 /\u03c3 2 ,\n\nn=\u2212\u221e\n\u221e\nX\n\nn=\u2212\u221e\n\n\u0001\u0003\n\u0001\n\u0002\nexp \u2212(2nL + x + x0 \u2212 ct)2 /\u03c3 2 + exp \u2212(2nL + x \u2212 x0 + ct)2 /\u03c3 2 ,\n\n(49)\n(50)\n\nfrom which the exact EM field vector \u03a8(t) is constructed according to Eq. (17) on the 1D grid (see Fig. 1).\nIn Fig. 13 we plot \u2206\u03a8n,m (t) as a function of the simulation time t for fixed values of the mesh size \u03b4 and the time\nstep \u03c4 using both the T4S2 and the T4S4 algorithm. We find that the error increases roughly proportional to the\n\nFIG. 13: The error \u2206\u03a8n,m (t) as a function of the simulation time t for fixed values of the mesh size \u03b4 = 0.1 and the time step\n\u03c4 = 0.01/c. Results are shown for the T4S2 and T4S4 algorithm.\n\nsimulation time:\n\u2206\u03a8n,m (t) =\n\n\u221a\n2 fn,m (\u03c4, \u03b4) t ,\n\n(51)\n\n\u221a\nwhere we used the prefactor 2 to ensure that 0 \u2264 fn,m (\u03c4, \u03b4) \u2264 1. The linear dependence of \u2206\u03a8n,m (t) on t is clearly\nvisible only for the T4S2 algorithm but is also true for the T4S4 algorithm with a much smaller slope f4,4 (\u03c4, \u03b4). Only\nat particular times t when the wave packet hits the boundaries of the cavity, the error \u2206\u03a84,4 (t) is seen to increase\nnonlinearly in the time t and takes a value that is of the same order as \u2206\u03a84,2 (t). This behavior, not described by\nEq. (51), is present in fourth-order accurate spatial derivative implementations, in which the calculation of the EM\nfield components close to system boundaries refer to several non-existing grid points. To study the error \u2206\u03a8n,m (t)\nas a function of the time step \u03c4 and the mesh size \u03b4, we compute\n1 d\nfn,m (\u03c4, \u03b4) = \u221a\n\u2206\u03a8n,m (t) .\n2 dt\n\n(52)\n\nIn Fig. 14 we plot fn,m (\u03c4, \u03b4) as obtained for the 1D cavity by the four algorithms T2S2, T4S2, T2S4, and T4S4 as a\nfunction of \u03b4/c\u03c4 for a fixed mesh size \u03b4. For each algorithm TnSm we find a linear decrease of log[fn,m (\u03c4, \u03b4)] with\nincreasing values log[\u03b4/c\u03c4 ]. For the algorithms T4S2 and T4S4 we find that f4,m (\u03c4, \u03b4) \u221d \u03c4 4 , while for the T2S2 and\nT2S4 algorithms f2,m (\u03c4, \u03b4) \u221d \u03c4 2 . This numerical result is in agreement with the rigorous upper bound on the error\nof the EM field vector Eq. (12). For decreasing values of \u03c4 , the error in the time integration becomes negligible small\nand fn,m (\u03c4, \u03b4) reaches minimum values which are indicated by the two lines 'Exact S2' for the algorithms TnS2 and\n\n\f15\n\nFIG. 14: fn,m (\u03c4, \u03b4) as a function of \u03b4/c\u03c4 for the fixed mesh size \u03b4 = 0.1.\n\nFIG. 15: fn,m (\u03c4, \u03b4) as a function of \u03b4 for the time step \u03c4 = 0.1\u03b4/c.\n\n'Exact S4' for the algorithms TnS4. In fact, these two lines represent the numerical results that are obtained for an\nexact time integration and mth-order accurate approximations to the spatial derivatives.\nNext, we study fn,m (\u03c4, \u03b4) as a function of the mesh size \u03b4 for the time step \u03c4 = 0.1\u03b4/c to ensure that the accuracy\nof the time integration remains constant. The numerical results are plotted in Fig. 15. We see that log[fn,m (\u03c4, \u03b4)]\ndecreases linearly with increasing log[1/\u03b4] until it levels off. At this point, the total number of operations has become so\nlarge that it causes the numerical loss of accuracy. Outside this regime we find for the TnS4 algorithms fn,4 (\u03c4, \u03b4) \u221d \u03b4 4\nand for the TnS2 algorithms fn,2 (\u03c4, \u03b4) \u221d \u03b4 2 . In analogy to the upper bound Eq. (12), the upper bound for the\nmth-order accurate approximation of the spatial derivatives is given by\nk\u03a8(t) \u2212 \u03a8n,m (t)k \u2264 Cn,m t \u03b4 m ,\n\n(53)\n\nwhere Cn,m is a constant.\nWe consider a second example to illustrate the numerical performance of the algorithms in 2D systems. For the\ninitial wave packet in the 2D cavity we make the ansatz\nEz (x, y, t) = sin(k(x \u2212 x0 \u2212 ct)) exp[\u2212((x \u2212 x0 \u2212 ct)/\u03c3x )10 \u2212 ((y \u2212 y0 )/\u03c3y )2 ] .\n\n(54)\n\nAt t = 0 the wave packet is centered at (x0 , y0 ) and moves at t > 0 with velocity c in the x-direction. The energy of the\nwave packet is fixed by the wave number k in the oscillating factor and its envelope is Gaussian along the y-direction\n\n\f16\nand has sharp edges along the x-axis (due to the exponent 10). The 2D cavity of size 12 \u00d7 10 with \u03b5 = 1 and \u03bc = 1\ncontains two objects with dielectric constants \u03b5 = 5 and \u03bc = 1. The parameters of the propagating wave packet are\n(\u03c3x , \u03c3y ) = (1.66, 1.29), (x0 , y0 ) = (3.5, 5.5), and k = 5. In Fig. 16 we show the results for the error Eq. (44) of the\nT2S2 and T2S4 algorithms with different mesh sizes relative to a reference EM field vector \u03a8(t) that is obtained from\nthe T2S2 algorithm at mesh size \u03b4 = 0.025. In all simulations we kept \u03c4 = 0.1\u03b4/c fixed to compare measurements of\nconstant accuracy in the time integration. In Fig. 16 we show (a) the energy distribution of the initial wave packet\n\nFIG. 16: The error \u2206wn,m (r, t) for various mesh sizes and algorithms in 2D. (a) Initial energy density distribution \u03a8(r, t)2 . (b)\nReference energy density distribution \u03a82,2 (r, t)2 at t = 6 using the T2S2 algorithm with \u03b4 = 0.025. (c) The error \u2206w2,2 (r, t)\non the energy density distribution at t = 6 using the T2S2 algorithm with \u03b4 = 0.1. The relative deviation is 26%. (d) The\nerror \u2206w2,2 (r, t) on the energy density distribution at t = 6 using the T2S2 algorithm with \u03b4 = 0.05. The relative deviation is\n5.9%. (e) The error \u2206w2,4 (r, t) on the energy density distribution at t = 6 using the T2S4 algorithm with \u03b4 = 0.1. The relative\ndeviation is 5.1%.\n\n(t = 0) and (b) the reference energy density distribution after simulation time t = 6 using the T2S2 algorithm. In\n(c)-(e), the normalized spatial distribution of the error in the energy density distribution,\n\u2206wn,m (r, t) = |\u03a8(r, t)2 \u2212 \u03a8n,m (r, t)2 | ,\n\n(55)\n\nis shown for, respectively, the algorithm T2S2 with \u03b4 = 0.1, the algorithm T2S2 with \u03b4 = 0.05, and the algorithm\nT2S4 with \u03b4 = 0.1. We find that the improved spatial discretization implementation T2S4 with \u03b4 = 0.1 performs as\nwell as a poor man's implementation T2S2 with half the mesh size. The main advantage of using the T2S4 algorithm\nis that it used only 20% of the computer memory and 10% of the CPU time with respect to the T2S2 algorithm.\nVI.\n\nCONCLUSIONS\n\nWe have demonstrated that the previously introduced family of unconditionally stable algorithms to solve the timedependent Maxwell equations can be implemented with a grid of variable mesh size and with a fourth-order accurate\napproximation to the spatial derivatives. The performance of the algorithms has been shown to increase significantly as\ncompared to the previously applied poor man's implementation while at the same time their property of unconditional\n\n\f17\nstability by construction is preserved. Performing numerical simulations on various physical model systems, we\nfound that a variable grid implementation can save orders of magnitude in computer memory and CPU time for a\nphysical system of unregular geometrical shape or with strongly varying permeability and/or permittivity. Similar\nenhancements have been obtained for the fourth-order accurate spatial derivative implementation which does not only\nreduce the numerical dispersion but also improves the temporal and spatial accuracy of the algorithms significantly.\nClearly, in close analogy to the implementation of the fourth-order approximation of the spatial derivatives, the\nalgorithms may be improved by constructing higher-order approximations. In general, we conclude that the family of\nunconditionally stable algorithms does not only preserve the fundamental symmetries of the time-dependent Maxwell\nequations but is also characterized by a high degree of flexibility that allows to construct implementations that are\nrequired in different kinds of specific applications.\nAcknowledgements\n\nThis work is partially supported by the Dutch 'Stichting Nationale Computer Faciliteiten' (NCF). We thank W.\nBruns for providing numerical results generated by the program package GdfidL.\n\n[1]\n[2]\n[3]\n[4]\n[5]\n[6]\n[7]\n[8]\n[9]\n[10]\n[11]\n[12]\n[13]\n[14]\n[15]\n[16]\n[17]\n[18]\n[19]\n[20]\n[21]\n\nJ.S. Kole, M.T. Figge and H. De Raedt, Phys. Rev. E 64, 066705 (2001).\nM. Born and E. Wolf, Principles of Optics, (Pergamon, Oxford, 1964).\nH.F. Trotter, Proc. Am. Math. Soc. 10, 545 (1959).\nM. Suzuki, S. Miyashita, and A. Kuroda, Prog. Theor. Phys. 58, 1377 (1977).\nM. Suzuki, J. Math. Phys. 26, 601 (1985); ibid 32 400 (1991).\nH. De Raedt and B. De Raedt, Phys. Rev. A 28, 3575 (1983).\nH. De Raedt, Comp. Phys. Rep. 7, 1 (1987).\nH. Kobayashi, N. Hatano, and M. Suzuki, Physica A 211, 234 (1994).\nH. De Raedt, K. Michielsen, Comp. in Phys. 8, 600 (1994).\nA. Rouhi, J. Wright, Computers in Physics 9, 554 (1995).\nB.A. Shadwick and W.F. Buell, Phys. Rev. Lett. 79, 5189 (1997).\nM. Krech, A. Bunker, and D.P. Landau, Comp. Phys. Comm. 111, 1 (1998).\nP. Tran, Phys. Rev. E 58, 8049 (1998).\nK. Michielsen, H. De Raedt, J. Przeslawski, and N. Garcia, Phys. Rep. 304, 89 (1998).\nH. De Raedt, A.H. Hams, K. Michielsen, and K. De Raedt, Comp. Phys. Comm. 132, 1 (2000).\nK.S. Yee, IEEE Transactions on Antennas and Propagation 14, 302 (1966).\nA. Taflove and S.C. Hagness, Computational Electrodynamics - The Finite-Difference Time-Domain Method, (Artech\nHouse, Boston, 2000).\nFor information about the program package GdfidL see: http://www.gdfidl.de\nR. Alben, M. Blume, H. Krakauer, and L. Schwartz, Phys. Rev. B 12, 4090 (1975).\nA. Hams and H. De Raedt, Phys. Rev. E 62, 4365 (2000).\nSee chapter 13 in: F. Scheid, Theory and Problems of Numerical Analysis, McGraw-Hill, New York, 1968.\n\n\f"}