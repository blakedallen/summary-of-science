{"id": "http://arxiv.org/abs/1108.1561v1", "guidislink": true, "updated": "2011-08-07T18:14:40Z", "updated_parsed": [2011, 8, 7, 18, 14, 40, 6, 219, 0], "published": "2011-08-07T18:14:40Z", "published_parsed": [2011, 8, 7, 18, 14, 40, 6, 219, 0], "title": "k-Capture in Multiagent Pursuit Evasion, or the Lion and the Hyenas", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1108.0020%2C1108.2877%2C1108.4247%2C1108.5724%2C1108.3545%2C1108.1561%2C1108.2043%2C1108.0789%2C1108.2898%2C1108.2349%2C1108.4642%2C1108.2692%2C1108.1143%2C1108.3177%2C1108.3685%2C1108.5408%2C1108.3818%2C1108.3976%2C1108.1123%2C1108.5149%2C1108.1082%2C1108.3873%2C1108.3937%2C1108.4592%2C1108.0475%2C1108.4571%2C1108.2025%2C1108.1487%2C1108.1165%2C1108.0053%2C1108.4693%2C1108.5682%2C1108.0978%2C1108.3037%2C1108.0865%2C1108.5464%2C1108.1641%2C1108.2485%2C1108.1939%2C1108.0545%2C1108.0973%2C1108.1205%2C1108.1913%2C1108.5867%2C1108.5079%2C1108.2954%2C1108.0299%2C1108.0533%2C1108.2016%2C1108.3034%2C1108.3786%2C1108.4334%2C1108.4617%2C1108.3750%2C1108.2855%2C1108.4348%2C1108.3967%2C1108.3530%2C1108.0837%2C1108.2306%2C1108.4461%2C1108.5633%2C1108.3187%2C1108.4972%2C1108.4836%2C1108.1727%2C1108.1455%2C1108.1580%2C1108.2637%2C1108.5714%2C1108.1741%2C1108.3853%2C1108.1851%2C1108.3348%2C1108.2292%2C1108.3886%2C1108.4963%2C1108.5212%2C1108.2006%2C1108.0182%2C1108.2706%2C1108.3098%2C1108.2477%2C1108.2364%2C1108.4208%2C1108.3604%2C1108.5604%2C1108.4071%2C1108.3908%2C1108.5869%2C1108.5181%2C1108.2457%2C1108.5621%2C1108.2860%2C1108.3950%2C1108.5685%2C1108.0032%2C1108.1886%2C1108.0746%2C1108.2960%2C1108.4691&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "k-Capture in Multiagent Pursuit Evasion, or the Lion and the Hyenas"}, "summary": "We consider the following generalization of the classical pursuit-evasion\nproblem, which we call k-capture. A group of n pursuers (hyenas) wish to\ncapture an evader (lion) who is free to move in an m-dimensional Euclidean\nspace, the pursuers and the evader can move with the same maximum speed, and at\nleast k pursuers must simultaneously reach the evader's location to capture it.\nIf fewer than k pursuers reach the evader, then those pursuers get destroyed by\nthe evader. Under what conditions can the evader be k-captured? We study this\nproblem in the discrete time, continuous space model and prove that k-capture\nis possible if and only there exists a time when the evader lies in the\ninterior of the pursuers' k-Hull. When the pursuit occurs inside a compact,\nconvex subset of the Euclidean space, we show through an easy constructive\nstrategy that k-capture is always possible.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1108.0020%2C1108.2877%2C1108.4247%2C1108.5724%2C1108.3545%2C1108.1561%2C1108.2043%2C1108.0789%2C1108.2898%2C1108.2349%2C1108.4642%2C1108.2692%2C1108.1143%2C1108.3177%2C1108.3685%2C1108.5408%2C1108.3818%2C1108.3976%2C1108.1123%2C1108.5149%2C1108.1082%2C1108.3873%2C1108.3937%2C1108.4592%2C1108.0475%2C1108.4571%2C1108.2025%2C1108.1487%2C1108.1165%2C1108.0053%2C1108.4693%2C1108.5682%2C1108.0978%2C1108.3037%2C1108.0865%2C1108.5464%2C1108.1641%2C1108.2485%2C1108.1939%2C1108.0545%2C1108.0973%2C1108.1205%2C1108.1913%2C1108.5867%2C1108.5079%2C1108.2954%2C1108.0299%2C1108.0533%2C1108.2016%2C1108.3034%2C1108.3786%2C1108.4334%2C1108.4617%2C1108.3750%2C1108.2855%2C1108.4348%2C1108.3967%2C1108.3530%2C1108.0837%2C1108.2306%2C1108.4461%2C1108.5633%2C1108.3187%2C1108.4972%2C1108.4836%2C1108.1727%2C1108.1455%2C1108.1580%2C1108.2637%2C1108.5714%2C1108.1741%2C1108.3853%2C1108.1851%2C1108.3348%2C1108.2292%2C1108.3886%2C1108.4963%2C1108.5212%2C1108.2006%2C1108.0182%2C1108.2706%2C1108.3098%2C1108.2477%2C1108.2364%2C1108.4208%2C1108.3604%2C1108.5604%2C1108.4071%2C1108.3908%2C1108.5869%2C1108.5181%2C1108.2457%2C1108.5621%2C1108.2860%2C1108.3950%2C1108.5685%2C1108.0032%2C1108.1886%2C1108.0746%2C1108.2960%2C1108.4691&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We consider the following generalization of the classical pursuit-evasion\nproblem, which we call k-capture. A group of n pursuers (hyenas) wish to\ncapture an evader (lion) who is free to move in an m-dimensional Euclidean\nspace, the pursuers and the evader can move with the same maximum speed, and at\nleast k pursuers must simultaneously reach the evader's location to capture it.\nIf fewer than k pursuers reach the evader, then those pursuers get destroyed by\nthe evader. Under what conditions can the evader be k-captured? We study this\nproblem in the discrete time, continuous space model and prove that k-capture\nis possible if and only there exists a time when the evader lies in the\ninterior of the pursuers' k-Hull. When the pursuit occurs inside a compact,\nconvex subset of the Euclidean space, we show through an easy constructive\nstrategy that k-capture is always possible."}, "authors": ["Shaunak D. Bopardikar", "Subhash Suri"], "author_detail": {"name": "Subhash Suri"}, "author": "Subhash Suri", "arxiv_comment": "16 pages", "links": [{"href": "http://arxiv.org/abs/1108.1561v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1108.1561v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.GT", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.GT", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1108.1561v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1108.1561v1", "journal_reference": null, "doi": null, "fulltext": "k-Capture in Multiagent Pursuit Evasion,\nor the Lion and the Hyenas\nShaunak D. Bopardikar\u2217\n\nSubhash Suri\n\narXiv:1108.1561v1 [cs.GT] 7 Aug 2011\n\nOctober 23, 2018\n\nAbstract\nWe consider the following generalization of the classical pursuit-evasion problem, which we\ncall k-capture. A group of n pursuers (hyenas) wish to capture an evader (lion) who is free\nto move in an m-dimensional Euclidean space, the pursuers and the evader can move with the\nsame maximum speed, and at least k pursuers must simultaneously reach the evader's location\nto capture it. If fewer than k pursuers reach the evader, then those pursuers get destroyed by\nthe evader. Under what conditions can the evader be k-captured? We study this problem in\nthe discrete time, continuous space model and prove that k-capture is possible if and only there\nexists a time when the evader lies in the interior of the pursuers' k-Hull. When the pursuit occurs\ninside a compact, convex subset of the Euclidean space, we show through an easy constructive\nstrategy that k-capture is always possible.\n\n1\n\nIntroduction\n\nWe consider a variant of the pursuit-evasion game in which multiple pursuers must simultaneously\nreach the evader's location to capture it. Specifically, an evader e, who is free to move in an\nm-dimensional Euclidean space, is being pursued by n agents p1 , . . . , pn . The evader and the\npursuers have identical motion capabilities and, in particular, have equal maximum speed. Unlike\nthe classical pursuit evasion, our game requires at least k pursuers to simultaneously reach the\nevader's location to capture it, for some given value of k \u2264 n. If fewer than k pursuers attack\n(reach) the evader, then those pursuers are destroyed by the evader. We assume that no two\nplayers ever occupy the same position in the environment except at the moment of capture; that\nis, co-location either ends the game or only one player survives among the co-located ones. By\ndisallowing co-location, we are assuming a weaker model of pursuers, which may also be more\nrealistic because in many physical systems only one agent can occupy a point in the space. We call\nthis version the k-capture pursuit evasion, and investigate necessary and sufficient conditions, as\nwell as worst-case time bounds, for the k-capture.\nPursuit-evasion games provide an elegant setting to study algorithmic and strategic questions\nof exploration or monitoring by autonomous agents. Their rich mathematical history can be traced\nback to at least 1930s when Rado posed the now-classical Lion-and-Man\" problem [1]: a lion and a\n\u2217\nShaunak D. Bopardikar is with United Technologies Research Center Inc., Berkeley, CA and Subhash Suri is with\nthe Department of Computer Science, University of California Santa Barbara, CA. This work was performed when\nthe first author was with the Department of Electrical and Computer Engineering, University of California Santa\nBarbara, CA, USA. Emails: bshaunak@gmail.com, suri@cs.ucsb.edu\n\n1\n\n\fman in a closed arena have equal maximum speeds; what tactics should the lion employ to be sure of\nhis meal? The problem was settled by Besicovitch who showed that the man can escape regardless\nof the lion's strategy [1]. An important aspect of this pursuit-evasion problem, and its solution, is\nthe assumption of continuous time: each player's motion is a continuous function of time, which\nallows the lion to get arbitrarily close to the man but never capture him. If, however, the players\nmove in discrete time steps, taking alternating turns but still in continuous space, the outcome is\ndifferent, as first conjectured by Gale [2] and proved by Sgall [3].\nThe distinction between continuous and discrete time models is significant albeit subtle. Formulations based on the continuous time lead to differential games, whose solution requires solving\nthe Hamilton-Jacobi-Bellman-Isaacs (HJBI) equation. This is a partial differential equation, whose\nsolution becomes intractable in complex scenarios. (See the seminal work of Isaacs [4] on several\ncontinuous time classical games including the Homicidal Chauffeur game and the Game of Two\nCars.) Besides this theoretical difficulty, one also faces the practical problem that continuous time\nsolutions usually are expressed as a feedback law requiring an instantaneous measurement of each\nplayer's position and its communication to the opponent. This is impractical from an implementation point of view, and especially problematic for non-smooth motions.\nConsequently, discrete time alternate moves versions of pursuit evasion have been favored in\nrecent past, especially due to their algorithmic tractability. In these formulations, the evader and\nthe pursuers move in alternating time instants, with the evader moving first. We note that a\ncapture in this formulation is equivalent to the evader being inside a specified small neighborhood\nof the pursuer in the continuous time formulation. In the discrete time model, Sgall [3] is able to\ncircumvent the problem of lion approaching but not reaching the man in the continuous formulation,\nand shows that the lion can always capture the man in finite time inside a semi-open bounded\nenvironment.\nWhen the evader is free to move inside an unbounded environment, multiple pursuers are clearly\nrequired to keep the evader from escaping. The capture condition is the same as before: if at some\ntime t, any pursuer can reach the position of the evader then the latter is captured. In this\nsetting, it is known that the evader can be captured if and only if it lies in the convex hull of the\npursuers [5]. Many other pursuit evasion problems have also been studied, with focus on different\ntypes of environments [6, 7], characterization of environments in which a certain capture strategy\nworks [8], visibility-based pursuit-evasion [9], sensing limitations [10, 11] etc. Finally, if both time\nand space are assumed to be discrete, then the underlying space is represented as a graph with\nnodes and edges, and on each move a player can move from one node to another by traversing the\nedge(s) connecting them. The techniques in this formulation tend to be different, and we refer the\nreader to a representative set of papers [12, 13, 14, 15].\nOur objective in this paper is to study the k-capture problem in the unbounded continuous\nspace and discrete time framework. In particular, we assume that a group of n pursuers (hyenas)\nwish to capture an evader (lion) who is free to move in the m-dimensional Euclidean space. The\nplayers take turns: the evader moves first, the pursuers move next and all of the pursuers can\nmove simultaneously. On its turn, each player can move anywhere inside a unit disk centered at\nits current position. (In other words, the maximum speed of the players is normalized to one.) We\nassume that no two players may occupy the same position in the environment except at the moment\nof capture. Technically, this assumption is used only to rule out the possibility of a trivial pursuer\nstrategy where they partition themselves into size k subgroups, with each subgroup moving as a\n\"meta pursuer.\" Co-location may also be unrealistic in many physical systems, and by disallowing\n2\n\n\fit we only strengthen our results because pursuers without co-location are weaker in power than\nthose with co-location.\nWe say that the evader is k-captured, for some specified value of k, if after a finite time, at\nleast k pursuers reach the evader's location. However, if fewer than k pursuers reach the evader's\nlocation, then the evader is able to capture (or destroy) those pursuers. In other words, if at the end\nof a pursuer move, the evader occupies the same position as some of the pursuers, then the game\neither ends (k-capture occurs), or all the j, where j < k, pursuers at that location are captured\nleaving only the evader. We study the necessary and sufficient conditions under which such a kcapture is possible, and derive bounds on the worst-case time needed to achieve this. Additionally,\nwe address a version of this problem played in a compact and convex subset of a Euclidean space.\nIn particular, our paper makes four main contributions. First, we show that a necessary condition for k-capture is that the evader must be located inside the k-Hull of the pursuers at the\nbeginning of every evader move. The k-Hull is the set of all points p such that any line through p\ndivides the given points into two sets of at least k points each. Second, we show that this simple\nk-Hull condition is also sufficient. In other words, if there is ever a time when this condition is\nsatisfied, and in particular if it holds at time t = 0, then the pursuers can k-capture the evader\nin finite time. Our proof of sufficiency is constructive, and based on a new multi-pursuer strategy.\nThird, we derive an upper bound for the time needed to capture the evader, as a function of the\ninitial positions of the pursuers and of the evader. Finally, for a version of this problem played in a\ncompact and convex environment in a Euclidean space, we design a novel strategy and show that\nthe evader is k-captured using k pursuers.\nThis paper is organized as follows. The problem formulation and the necessity of the k-Hull\ncondition for capture are presented in Section 2. Our multi-pursuer capture strategy and the\nsufficiency of the k-Hull condition is presented in Section 3. A version of this problem played in a\ncompact and convex environment is analyzed in Section 4. The conclusions and future directions\nfor this work are summarized in Section 5.\n\n2\n\nProblem Formulation and Necessary Condition for k-Capture\n\nOur pursuit-evasion game is played in an m-dimensional Euclidean space, with n pursuers p1 , p2 , . . . , pn\nand a single evader e. The positions of these agents at any time t are denoted as pj (t), for\nj = 1, 2, . . . , n, and e(t), where t \u2208 Z\u22650 . In Section 4, we also consider the capture problem in a\ncompact convex environment.\nWe assume that the game is played in discrete time using alternate moves: on a turn, the evader\nmoves first, all the pursuers simultaneously move next. We assume a normalized maximum speed of\none, meaning that each player can move to any position inside a closed ball of radius one centered\nat the player's current position. More precisely, the players' motions are described by the following\nequations:\ne(t + 1) = e(t) + ue (t, p1 (t), . . . , pn (t)),\npj (t + 1) = pj (t) + upj (t, e(t), e(t + 1)),\nwhere ue and upj are unit vectors, termed as strategies of the evader e and the pursuer pj ,\nrespectively. These motion equations say that each agent's strategy depends on the current positions\n3\n\n\fof all other players, and that each agent can move to any position within distance one of its current\nposition. (The apparent asymmetry in the equations of the evader and the pursuers is due to the\nfact that the evader moves first, so the pursuers' moves can depend on the evader's positions at\ntimes t and t + 1.)\nThe capture occurs when evader is at the same location as some of the pursuers. The k-capture\nof the evader requires at least k pursuers, while fewer than k pursuers are themselves captured by\nthe evader.1 Formally, we say that the evader is k-captured if there exists a finite time T and a\nsubset C \u2282 {p1 , . . . , pn } of k pursuers such that kpj (T ) \u2212 e(T )k = 0 but kpj (t) \u2212 e(t)k > 0, for\nall t < T and all pj \u2208 C. In other words, the k-capture occurs at a time T if at least k pursuers\nsimultaneously reach the evader's location at time T , and none of these pursuers have ever been\ncaptured in the past.2 We say that the evader escapes if there exists no finite time at which the\npursuers k-capture the evader. Finally, we require that no two players occupy the same point in\nthe environment except at the time of capture.\nWe now formulate a necessary condition for k-capture, which is then complemented by Section 3\nthat shows that this condition is also sufficient. Our necessary condition prescribes the location of\nthe evader relative to the locations of the pursuers for the k-capture to occur. This condition is\nindependent of the pursuers' strategy: that is, if the condition is violated, then there always exists\nan evader strategy for escape regardless of the pursuers' strategy.\nNaturally, the convex hull of the pursuers' locations plays a key role in the game. This is not\nsurprising because the convex hull is precisely the set of all evader locations that are capturable in\nthe classical single pursuer game, as is well-known [5].\nLemma 2.1 If the evader's initial location is not inside the interior of the convex hull of the\npursuers, then it cannot be k-captured, even for k = 1.\nProof: If the evader is not in the interior of the convex hull, then there exists a hyperplane\nthrough the evader's location such that all the pursuers lie in one (closed) half-space defined by the\nhyperplane. The evader simply escapes by moving perpendicular to this hyperplane, away from\nthe pursuers, at maximum speed.\n\u0003\n\n2.1\n\nThe k -Hull\n\nWhen k > 1, we need a generalized notion of the convex hull. The standard convex hull can be\ndefined as the set of points so that any hyperplane tangent to the hull contains at least one point\nof the hull in each of the two half-spaces. If we require that at least k points lie in each half-space,\nthen we get a structure called k-Hull, introduced by Cole, Sharir and Yap [16], which also has\nintimate connections to other fundamental structures in computational geometry such as k-levels\nand k-sets [17].\n1\n\nWe remark, however, that in the discrete time alternate moves model, the evader cannot force a pursuer's capture\nbecause the pursuers move after the evader. Indeed, if the evader moves to the current location of a pursuer p, then\np can always move away from the evader at its turn. However, one cannot rule out a pursuers' strategy that involves\nsacrificing some of them to ultimately achieve k-capture.\n2\nWhile it is sufficient to ensure the safety of only the k pursuers who perform the k-capture, in our strategy, all\nthe pursuers will remain safe.\n\n4\n\n\fDefinition 1 (k-Hull) Let S be a set of n points in the plane, and let k be an integer. The k-Hull\nof S denoted by Hullk (S) is the set of points p such that, for any hyperplane `(p) through p, there\nare at least k points of S in each closed half-space of `(p).\nClearly, the standard convex hull is the same as the 1-Hull, and it is also easy to see that\nthe (k + 1)-Hull is contained in the k-Hull. One can also show, using Helly's Theorem [18], that\nthe k-Hull is always non-empty for k \u2264 dn/(m + 1)e, where m is the dimension of the underlying\nEuclidean space. We, therefore, assume throughout this paper that 1 \u2264 k \u2264 dn/(m + 1)e. In\nparticular, the standard convex hull in two dimensions, is well-defined for 3 or more non-collinear\npoints, but 2-Hull requires at least n = 5 points in the plane. Fig. 1 shows the two possible\nconfigurations for n = 5, k = 2 for a planar environment.\n\nFigure 1: Illustrating the k-Hull. Two possible configurations for 2-Hull of n = 5 points.\nFigure 1: Illustrating the k-Hull. Configurations for 2-Hull of n = 5 points in the plane.\nRemark 2.2 (k-Hull Computation) The k-Hulls are also efficiently computed. We refer the\nRemark\n2.2for\n(k-Hull\nWhile computational\ncomplexity\nis thethe\nnotk-Hull\nfocus inof worstour\nreader\nto [15]\ndetails,Computation)\nbut a simple rotation-based\nalgorithm\ncan compute\n2\npaper,\nwe\ndo\npoint\nout\nthat\nk-Hulls\nare\nalso\nefficiently\ncomputable.\nUnder\nthe\npoint-hyperplane\ncase time O(n log n) time. More sophisticated algorithms exploit the fact that k-Hull contains at\n1/3 ) correspond\nduality,\nto rely\nthe level\nk in an convex\narrangement\nof hyperplanes,\ntherefore\nmost\nO(nkthey\nvertices, and\non dynamic\nhull data\nstructures toand\ncompute\nit incomputed\nworst-case\nm ) 2time in m dimensions. The bound can be improved somewhat using more sophisti1/3\neasily\nin\nO(n\ntime O(nk log n).\ncated algorithms and analysis. For instance, in the two-dimensional plane, k-Hull contains at most\nO(nk 1/3 ) vertices, and using dynamic convex hull data structures, it can be computed in worst-case\n2.2 The 1/3\nNecessary Condition\ntime O(nk log2 n) [16].\nIn a pleasing generalization of 1-capture, it turns out that the k-Hull of the pursuers' locations is\nprecisely the set of evader locations that are k-capturable. Throughout, we will use the notation\nHull\ndenote\nthe interior\nof the k-Hull. We have the following theorem stating our necessary\n2.2ok toThe\nNecessary\nCondition\ncondition.\nIn a pleasing generalization of 1-capture, it turns out that the k-Hull of the pursuers' locations is\nTheorem\n2.3 set\nThe\ncan be k-captured\nby pursuers Throughout,\np1 , p2 , . . . , pnweonly\nprecisely the\nof evader\nevader elocations\nthat are k-capturable.\nwill ifuse the notation\no\nHullk to denote the interior of the k-Hull. We have the following theorem stating our necessary\ne(t) \u2208 Hullok (p1 (t), . . . , pn (t)),\ncondition.\nat all times t \u2208 Z\u22650 , where Hullok is the interior of the k-Hull.\nProof: The proof is by contradiction. Suppose that the evader's position e(t) violates the condition\n5\nof the theorem at some time t. Then, there exist a hyperplane H\u0304 through e(t) that separates a subset\nC of the pursuers from the rest, which we call C\u0304, such that |C| < k, and therefore |C\u0304| \u2265 n \u2212 k + 1.\nIn this case, the evader can escape by moving according to the following strategy:\n\n\fTheorem 2.3 The evader e can be k-captured by pursuers p1 , p2 , . . . , pn only if\ne(t) \u2208 Hullok (p1 (t), . . . , pn (t)),\nat all times t \u2208 Z\u22650 , where Hullok is the interior of the k-Hull.\nProof: The proof is by contradiction. Suppose that the evader's position e(t) violates the condition\nof the theorem at some time t. Then, there exist a hyperplane H\u0304 through e(t) that separates a subset\nC of the pursuers from the rest, which we call C\u0304, such that |C| < k, and therefore |C\u0304| \u2265 n \u2212 k + 1.\nIn this case, the evader can escape by moving according to the following strategy:\nMove with maximum speed in the direction normal to H\u0304 towards the side containing\nC.\nWe observe that e(t) 6\u2208 Hullo1 (C\u0304)-this is because e(t) lies on H\u0304, the hyperplane defining the\nhalf-space that contains C\u0304. By Lemma 2.1, therefore, none of the n \u2212 k + 1 pursuers in C\u0304 can catch\nthe evader when the evader uses the above-mentioned strategy. Therefore, only the (at most) k \u2212 1\npursuers in C can reach the evader, and the k-capture of evader is not possible. This completes\nthe proof.\n\u0003\nThe necessary condition asserts that if there is ever a time when the evader is outside the kHull of the pursuers, then it has an escape strategy. The main result of our paper, presented in\nthe following section, shows that this necessary condition is also sufficient. In particular, if the\nevader lies in the pursuers' k-Hull at the initial time instant t = 0, then the pursuers are able to\nk-capture it. (Clearly, if evader is not inside the k-Hull initially, then it can escape unless it plays\nsub-optimally and move inside the pursuers' k-Hull at a later time, allowing them to capture it.)\n\n3\n\nProof of Sufficiency\n\nIn this section, we prove our main result, which is to show that the necessary condition of Theorem 2.3 is also sufficient. The proof, which is constructive, outlines a strategy for the pursuers and\nderives an upper bound on the time needed for the capture. Our analysis exploits properties of the\npursuers' k-Hull, and so we begin with some geometric preliminaries.\n\n3.1\n\nGeometric Preliminaries and an Orientation-Preserving Strategy\n\nIn general, the orientations of the pursuers with respect to the evader will change once the pursuit\nbegins. We will show, however, that pursuers can coordinate their moves to preserve their individual\ndirections relative to the evader's location. Such a strategy will allow us to conclude that if the\nevader is in the k-Hull of the pursuers at the initial instant, then it will remain in the k-Hull at all\nsubsequent instants.\nLet us call a pursuers' strategy orientation-preserving if the orientations of the vectors pi \u2212e are\npreserved throughout the pursuit. We will prove that there is an orientation-preserving k-capture\nstrategy for the pursuers. But first, we establish a key geometric lemma about such an strategy.\nLet ue (t) denote the evader's move at time t, where the vector ue is a point on the m-dimensional\nsphere S. Let \u03b8i (ue ) denote the (smaller) angle between vectors pi (t) \u2212 e(t) and ue (t). Define,\ng(ue ) := maxk {cos \u03b81 (ue ), . . . , cos \u03b8n (ue )},\n6\n\n\fwhere maxk refers to the k-th maximum of the n quantities.\nThe following result states that as long as the pursuers follow an orientation-preserving strategy,\none can always find k favorable pursuers at each instant of time, for whom the k respective \u03b8's are\nall less than a number which remains invariant at all times and which is strictly less than \u03c0/2.\nLemma 3.1 Suppose that the evader lies inside the k-Hull of the pursuers' initial locations, and\nthe pursuers follow an orientation-preserving strategy throughout the pursuit. Then, the following\nfacts hold at all times:\n\u2022 There exists a \u03b2max < \u03c0/2, such that at every instant of time,\n\u0012\n\u0013\n\u03b2max := arccos min g(ue ) .\nue \u2208S\n\n(1)\n\n\u2022 After any move by the evader at time t + 1, there exist at least k pursuers pi1 , . . . , pik such\nthat \u03b8ij \u2264 \u03b2max , for all j \u2208 {i1 , . . . , ik }.\n\nProof: Since e(0) \u2208 Hullok (p1 (0), . . . , pn (0)), an orientation preserving strategy will ensure that\ne(t) \u2208 Hullok (p1 (t), . . . , pn (t)), for all time instants t. Thus, for any t, the quantity g(ue ) is identically defined as for t = 0, and therefore for the first claim, it suffices to show the existence of a\n\u03b2max < \u03c0/2 at time t = 0, which satisfies Eq. (1).\nTo see this, we can write g(ue ) at time t = 0 as\n\u001a\n\u001b\n(p1 (0) \u2212 e(0)) * ue\n(pn (0) \u2212 e(0)) * ue\ng(ue ) = maxk\n,...,\n,\nkp1 (0) \u2212 e(0)k\nkpn (0) \u2212 e(0)k\nand therefore g(*) is a continuous function of ue . Since ue \u2208 S, which is a compact set, g(*) attains\na minimum for some u\u2217e in S. It now remains to show that the minimum value g(u\u2217e ) > 0. Now,\nfor every choice of ue , we must have at least k pursuers pi1 , . . . , pik such that \u03b8j < \u03c0/2, for all\nj \u2208 {i1 , . . . , ik }. If this were not the case for some \u016be , then the hyperplane perpendicular to \u016be\nthrough e would separate k \u2212 1 pursuers from the remaining, implying that e \u2208\n/ Hullok (p1 , . . . , pn ).\nThus, for every ue \u2208 S, g(ue ) > 0 and in particular, g(u\u2217e ) > 0. Thus, \u03b2max = arccos(g(u\u2217e )) < \u03c0/2.\nThus, the first claim is established.\nThe second claim follows from the fact that there always exist some k pursuers pi1 , . . . , pik such\nthat \u03b8j < \u03c0/2, for all j \u2208 {i1 , . . . , ik }, and since cos \u03b2max \u2264 cos \u03b8j .\n\u0003\nRemark 3.2 (General Position) Throughout this section, we assume that no two pursuers are\ncollinear with the evader, which implies that the vectors pi (0) \u2212 e(0) all have distinct orientations\nat t = 0, for all 1 \u2264 i \u2264 n. We could easily ensure this condition by an initial move by the pursuers,\nas follows. Suppose \u2220pi (0)e(0)pj (0) = 0, for some i, j, where the notation \u2220p x q denotes the\n(smaller) angle between vectors p \u2212 x and q \u2212 x. Let the evader's initial move is from position e(0)\nto e(1). Then, all the pursuers except pi move parallel to e(1) \u2212 e(0) with step size ke(1) \u2212 e(0)k.\nThe pursuer pi also moves with step size ke(1) \u2212 e(0)k but in a direction making a sufficiently\nsmall but positive angle \u03b1 with e(1) \u2212 e(0). Since Hullok (p1 , . . . , pn ) is an open set and a continuous\nfunction of the pursuer locations, there exists a sufficiently small but positive angle \u03b1 so that e(1)\nstill lies inside Hullok (p1 , . . . , pn ) at time t = 1. If there are multiple collinearities, then the same\nstrategy can be used to break all of them while preserving the invariant that the evader lies inside\nthe k-Hull.\nWe are now ready to describe our k-capture strategy and prove its correctness.\n7\n\n\f3.2\n\nA Strategy for k-Capture\n\nOne simple-minded strategy for capture is to let each pursuer maximally advance towards the\nevader's new position at each move. Because the evader lies in Hullok , this strategy reduces at least\none pursuer's distance to e. But it does not ensure that k pursuers reach the evader simultaneously\nand so cannot guarantee k-capture. Instead, we let only those pursuers that are not the closest to\nthe evader execute this kind of move, while those closest to the evader carry out a parallel move that\nmaintains their distance and angle to the evader. We call this the advance move. More specifically,\nthe pursuers who are closest to the evader move to maintain their distance and angle to the evader,\nwhile the remaining pursuers advance towards the evader. Unfortunately, while this strategy keeps\nthe pursuers safe, it also keeps them away from the evader, and in the worst-case all the pursuers\nmay become equidistant to the evader and then stagnate. We, therefore, introduce a second move,\ncalled the cone move, which ensures that the distance of the closest pursuers itself decreases but in\nsuch a way that at least k pursuers remain closest to the evader.\nThe following algorithm describes at a pseudo-code level the overall strategy. The terms Pclosest\nand Cone, respectively, denote the set of closest pursuers and a Cone region, and are defined\nprecisely following the algorithm.\nAlgorithm 1: k-Capture\nAssumes: e(0) satisfies the k-Hull necessary condition.\n1 For each t = 1, 2, . . . and for each j \u2208 {1, . . . , n},\n2 Determine dmin (t) = kp \u2212 e(t)k, where p \u2208 Pclosest (t)\n3 if pj is among k pursuers pi1 , . . . , pik that are in Pclosest (t) and in Cone(k, t) then\n4\npj uses Cone move corresponding to pi1 , . . . , pik\n5 else\n6\npj uses Advance move with parameter dmin (t)\n7\n\nend for\n\nIn the following, we give a precise definition of the Advance move and the Cone move. Informally,\nthe Advance move is used by a pursuer to reduce its distance from the evader if it is sufficiently far\nfrom the evader. The Cone move is used by a pursuer together with at least k \u2212 1 other pursuers,\nif all of them are among the closest to the evader, and if the evader has made a move which is\nfavorable for those pursuers. When both the moves are possible for a pursuer, the Cone move has\nthe priority.\nDefinition 2 (Advance Move) Suppose the evader moves from e(t) to e(t + 1). Then, given a\nparameter d \u2265 0, the Advance move of a pursuer pj is the following:\n\u2022 Draw a line through e(t + 1) parallel to the vector pj (t) \u2212 e(t).\n\n\u2022 Move to the position pj (t + 1) on this line for which |d \u2212 ke(t + 1) \u2212 pj (t + 1)k| is minimized.\n\nFig. 2 illustrates the Advance move. Our modification to the original Planes algorithm [5]\nis the inclusion of the parameter d. This parameter keeps a pursuer pj from moving straight\ntowards e if that pursuer is the closest one to the evader. Therefore, with the parameter setting\nd = ke(t)\u2212pj (t)k, the Advance move forces the pursuer pj to move parallel to the evader, and with\n8\n\n\fparameter d \u2265 0, the Advance move of a pursuer pj is the following:\n\u2022 Draw a line through e(t + 1) parallel to the vector pj (t) \u2212 e(t).\n\n\u2022 Move to the position pj (t + 1) on this line for which |d \u2212 \"e(t + 1) \u2212 pj (t + 1)\"| is minimized.\n\npj (t + 1)\ne(t + 1)\n\npj (t + 1)\n\ne(t + 1)\n\npj (t)\n\npj (t)\n\ne(t)\n\ne(t)\n\nFigure\n2:2:Illustrating\nthe\nAdvance\nFigure\nIllustrating the\nAdvance\nmove.move.\nthe samethe\nstepAdvance\nsize as the move.\nevader. This\nshown in the right\nThe left\nsubfigure\nFig. 2exactly\nillustrates\nOurismodification\nto subfigure.\nthe original\nPlanes\nalgorithm [5]\nshows\na\ngeneric\napplication\nof\nthe\nAdvance\nmove.\nis the inclusion of the parameter d. This parameter keeps a pursuer pj from moving straight\nWe now describe the Cone move, which is used by k or more pursuers when they are among\ntowards e\nif that pursuer is the closest one to the evader. Therefore, with the parameter setting\nthe closest pursuers to the evader, and when they are located inside a Cone region, which we define\nd = \"e(t)\u2212p\n(t)\",\nthe\nAdvance\nmove\nthea finite\npursuer\nmove\nparallel\nto thepursuers,\nevader, and with\nj to will\nnext. jWe\nshow\nlater\n(cf. Lemma\n3.4)forces\nthat after\ntime,pthere\nbe at\nleast k closest\nso the\nfollowing\nfocuses\non suchThis\npursuers.\nexactly the\nsame\nstepdiscussion\nsize as the\nevader.\nis shown in the right subfigure. The left subfigure\nshows a generic\napplication\nLet Pclosest\n(t) denoteof\nthethe\nset Advance\nof pursuersmove.\nthat are closest to the evader e(t) at time t. That is,\nPclosest (t) := {pi (t) : i \u2208 argmin1,...,n kpi (t) \u2212 e(t)k}.\nDefinition 3 (Cone) The closed positive cone formed with vertex at e(t), the axis along e(t + 1) \u2212\n8 \u03b2max is called the Cone(k, t).\ne(t) (i.e., along ue (t)), and with half angle equal to\nDefinition 4 (Cone Move) If some k pursuers pi1 (t), . . . ,\npik (t) are in Pclosest (t) and also in Cone(k, t), then the Cone move for pi1 , . . . , pik is defined as\nfollows:\n\u2022 draw a line lj through e(t + 1), parallel to pj (t) \u2212 e(t), for all j \u2208 {i1 , . . . , ik }.\n\n\u2022 pj (t + 1) is the point on line lj that minimizes kpj (t + 1) \u2212 e(t + 1)k subject to the constraint\nthat\nkpi1 (t + 1) \u2212 e(t + 1)k = . . . = kpik (t + 1) \u2212 e(t + 1)k.\n\nFig. 3 offers a geometric interpretation of the Cone move. The key intuition behind the Cone\nmove is that the k closest pursuers in Cone(k, t) can reduce their distance to the evader, and remain\nin Pclosest (t + 1), using the Cone move. We can give a more precise expression for the new locations\nin a Cone move, as follows.\nAssume without loss of generality that \u03b8i1 \u2265 \u03b8j , \u2200j \u2208 {i1 , . . . , ik } . Then, choose pi1 (t + 1)\nsatisfying the following conditions:\n\u2022 kpi1 (t + 1) \u2212 pi1 (t)k = 1, and\n\n\u2022 \u2220pi1 (t + 1)pi1 (t)e(t) = arcsin(ue (t) sin \u03b8i1 ), where ue (t) = ke(t + 1) \u2212 e(t)k.\n\nThe positions pj (t + 1), for all j \u2208 {i2 , . . . , ik }, are chosen to satisfy the following conditions:\np\n\u2022 kpj (t + 1) \u2212 pj (t)k2 = 1 + u2e (cos \u03b8j \u2212 cos \u03b8i )2 + 2ue (cos \u03b8j \u2212 cos \u03b8i ) 1 \u2212 u2e sin2 \u03b8i .\n\u2022 \u2220pj (t + 1)pj (t)e(t) = arcsin(ue (t) sin \u03b8j ).\n\n9\n\n\f\u2022 draw a line lj through e(t + 1), parallel to pj (t) \u2212 e(t), for all j \u2208 {i1 , . . . , ik }.\n\n\u2022 pj (t + 1) is the point on line lj that minimizes \"pj (t + 1) \u2212 e(t + 1)\" subject to the constraint\nthat \"pi1 (t + 1) \u2212 e(t + 1)\" = . . . = \"pik (t + 1) \u2212 e(t + 1)\".\nl ik\n\npik (t)\n\npik (t + 1)\nl i2\npi2 (t + 1)\n\n\u03b8ik\n\npi2 (t)\n\n+\ne(t\n\n1)\npi1 (t + 1)\nl i1\n\n\u03b8 i1\n\npi1 (t)\n\ne(t)\n\nFigure 3:Figure\nIllustrating\nthe Cone\nMove\nThe\nshaded\nis Cone(k,\nt). If the evader\n3: Illustrating\nthe Cone\nMovefor\nfor kk pursuers.\npursuers. The\nshaded\nregionregion\nis Cone(k,\nt). If the evader\nmoves into\nCone(i,\nk, t), then\nthethepursuers\nthat\ntheir distances\nto the evader\nmoves\ninto Cone(k,\nt), then\npursuers p\npi1,,.. .. .. ,,ppiki+k\u22121\nmove move\nso thatso\ntheir\ndistances\nto the evader\ndecrease\nby\nthe\nsame\nfinite\namount.\ndecrease by the same finite amount.\nFig. 33.3\noffers\na geometric\ninterpretation\nProof\nof k-Capture\nSufficiencyof the Cone move. The key intuition behind the Cone\nmove is that the k closest pursuers in Cone(k, t), can reduce their distance to the evader, and\nthe rest of this section, we prove that Algorithm 1 succeeds. We begin with the observation that\nremain inInP\nclosest (t + 1), using the Cone move. We can give a more precise expression for the new\nk-Capture\nis orientation-preserving, since throughout the algorithm, the direction of the vectors\nlocationspin\na Cone move, as follows.\nj \u2212 e remains invariant for each j.\nAssume without loss of generality that \u03b8i1 \u2265 \u03b8j , \u2200j \u2208 {i1 , . . . , ik } . Then, choose pi1 (t + 1)\n3.3 (Orientation\nsatisfyingProposition\nthe following\nconditions: Preserving) The Algorithm k-Capture is orientation-preserving.\nOur proof of k-Capture depends on three technical lemmas showing, respectively, that some k\n\n\u2022 \"pipursuers\n\u2212 pi1 (t)\"\n= to1,the\nand\nclosest\nevader, that every cone move reduces the minimum distance by a\n1 (t + 1)become\nfinite amount, and that irrespective of the evader's strategy, the minimum distance decreases by a\n\u2022 \u2220pi1 (t + 1)pi1 (t)e(t) = arcsin(ue (t) sin \u03b8i1 ), where ue (t) = \"e(t + 1) \u2212 e(t)\".\n\nfinite amount. Throughout the following discussion, it is assumed that the pursuers all follow the\nAlgorithm k-Capture.\n\nThe positions pj (t + 1), for all j \u2208 {i2 , . . . , ik }, are chosen to satisfy the following conditions:\nThe bound on the capture time depends on dmin (0) := minni=1 kpi (0) \u2212 e(0)k\n!and dmax (0) :=\n2\n2\n2\n2\nn kp (0) \u2212 e(0)k,\nwhich\nare\nthe\nminimum\nand\nthe\nmaximum\ndistance\nbetween\nmax\n1a\u2212pursuer\nu2e sinand\n\u03b8i .\n\u2022 \"pj (t +\ni pj (t)\" = 1 + ue (cos \u03b8j \u2212 cos \u03b8i ) + 2ue (cos \u03b8j \u2212 cos \u03b8i )\ni=11) \u2212\nthe evader at the initial time t = 0. The following lemma proves the closest pursuers property.\n\n\u2022 \u2220pj (t + 1)pj (t)e(t) = arcsin(ue (t) sin \u03b8j ).\n\nLemma 3.4 (Pclosest cardinality) After a finite time upper bounded by n(1 + dmax /\u03b2max ), some\nk pursuers are in the set Pclosest .\n\n9\n\nProof: From statement 2 of Lemma 3.1, at every instant of time and for any move of the evader,\nthere exists some k pursuers pi1 , . . . , pik such that for all j \u2208 {i1 , . . . , ik }, \u03b8j \u2264 \u03b2max . If all of\nthese k pursuers are in Pclosest (t), then this result stands proved. Otherwise, for every t, there\nexists some pursuer (say pj (t)) out of the k pursuers, which is not in Pclosest (t), and is such that\n\u03b8j \u2264 \u03b2max . So at time t + 1, the Advance move by pj will ensure that either kpj (t + 1) \u2212 e(t + 1)k \u2264\nkpj (t) \u2212 e(t)k \u2212 cos \u03b2max or pj (t + 1) \u2208 Pclosest (t + 1).\n10\n\n\fThus, in the worst case, after at most n(1 + dmax / cos \u03b2max ) time instants, some k pursuers must\nbe Pclosest .\n\u0003\nLet dmin (t) be the distance of the closest pursuer from the evader at time t. Once k pursuers\nare in Pclosest , the following lemma establishes a lower bound on the decrease of dmin assuming that\na Cone move occurs, which is favorable for the pursuers.\nLemma 3.5 Let pi1 , . . . , pik \u2208 Pclosest be k pursuers closest to the evader at time t. If these\npursuers' next move is a Cone move, then after the pursuers' move, we have\ndmin (t + 1) \u2264 dmin (t) \u2212 cos \u03b2max .\nProof: Let \u03b8j be the largest among the angles \u03b8i1 , . . . , \u03b8ik . Using the new locations of the pursuers\nin the Cone move, we obtain,\ndmin (t) \u2212 dmin (t + 1) = ue cos \u03b8j + 1 * cos \u2220pj (t + 1)pj (t)e(t)\nq\n= ue cos \u03b8j + 1 \u2212 u2e sin2 \u03b8j\n\u2265 cos \u03b8j \u2265 cos \u03b2max ,\n\nsince \u03b8j \u2264 \u03b2max from the definition of the Cone region. The lemma follows.\n\n\u0003\n\nFinally, the next lemma derives a lower bound on the decrease of dmin for the worst-case evader\nmove, while the pursuers follow the strategy of Algorithm k-Capture.\nLemma 3.6 If some k pursuers become closest to the evader at some time t, then the following\nholds:\n\u2022 after every subsequent pursuer move, some k pursuers are in Pclosest , and\n\n\u2022 after at most n(1 + dmax / cos \u03b2max ) pursuer moves, dmin decreases by at least cos \u03b2max .\n\nProof: Let A and B be two groups of pursuers in Pclosest at time t, of which group A comprises\nof some k pursuers. If all pursuers of group A are in the Cone region at time t, then group A will\nmake a Cone move which ensures that all pursuers in A are in Pclosest at time t + 1. Thus, the first\nclaim trivially holds. Otherwise, all pursuers in A move parallel to the evader at time t + 1. Now,\nif group B does not contain k pursuers, then at time t + 1, all pursuers in group B are forced to\nmove parallel to the evader, since they do not satisfy the criterion to make a Cone move. Thus,\nthe pursuers in group A satisfy the first claim at time t + 1. Finally, if group B contains some k\npursuers and are in the Cone region at time t, then these k pursuers make a Cone move and satisfy\nthe first claim at time t + 1. Thus, the first claim holds at all times.\nNow, let us consider the second claim. From Proposition 3.3 and statement 2 of Lemma 3.1,\nat every instant of time and for any move of the evader, there exists some k pursuers pi1 , . . . , pik\nsuch that \u03b8j (t) \u2264 \u03b2max , for all j \u2208 {i1 , . . . , ik }. We need to consider two cases:\n\u2022 [All of pi1 (t), . . . , pik (t) are in Pclosest (t):]\nIn this case, the claim follows from Lemma 3.5 because all of these pursuers lie in Cone(k, t).\n\n11\n\n\f\u2022 [At least one of out of the k pursuers, say pj (t) is not in Pclosest (t):]\nWithout loss of generality, assume that pj (t) 6\u2208 Pclosest (t). Then, at time t + 1, the Advance\nmove by pj will ensure that either kpj (t + 1) \u2212 e(t + 1)k \u2264 kpj (t) \u2212 e(t)k \u2212 cos \u03b2max or\npj (t + 1) \u2208 Pclosest (t + 1). Thus, in the worst-case, it requires at most n(1 + dmax / cos \u03b2max )\nmoves before all n pursuers are in Pclosest . Then, the next pursuer move is necessarily a Cone\nmove, because for any choice of the evader move, there exists some k pursuers which are now\nequidistant from the evader, which lie in the Cone region. By Lemma 3.5, the distance of the\nk closest pursuers from the evader strictly decreases by at least cos \u03b2max .\n\u0003\n\nThis completes the proof of the lemma.\nWe can now state our main theorem on k-Capture.\n\nTheorem 3.7 If the evader lies in the interior of the pursuers' k-Hull at t = 0, i.e., e(0) \u2208\nHullok (p1 (0), . . . , pn (0)), then it can be k-Captured in at most n(1 + dmax / cos \u03b2max )2 moves.\nProof: By Lemma 3.4, after at most\nn(1 + dmax /\u03b2max )\nmoves, some k pursuers are in Pclosest . Thereafter, Lemma 3.6 ensures that the distance of some k\nclosest pursuers to the evader decreases by at least cos \u03b2max after every n(1+dmax / cos \u03b2max ) moves.\nSince capture is defined after the pursuers' move, after at most n(1 + dmax / cos \u03b2max )dmax / cos \u03b2max\npursuer moves, we obtain dmin = 0, that is, the evader and some k pursuers are coincident, which\nsatisfies the conditions of k-capture. An upper bound on the time taken for the k-capture of the\nevader follows by summing the bounds of Lemma 3.4 and Lemma 3.6. This completes the proof of\nthe theorem.\n\u0003\nRemark 3.8 (Lower bound on Capture time) A lower bound on the time taken to capture\nis dmax / cos \u03b2max . To see this, consider the following initial condition and evader strategy. The\nevader's strategy is to move along a fixed vector ue with unit step. Let p1 , . . . , pk be furthest\nfrom the evader initially, and be located on the boundary of the resulting Cone(k, 0). The rest of\nthe pursuers are located outside Cone(k, 0). This evader strategy and the initial pursuer locations\nensure that the evader is captured after a time of at least dmax / cos \u03b2max , independent of the\npursuers' strategy.\n\n4\n\nBounded Environments\n\nIn this section, we show a simple strategy for k-capture that always succeeds in a compact and\nconvex subset of a Euclidean space. If every pursuer were to use an established strategy by Sgall [3]\nindependently of the other pursuers, at each instant of time, then the distance between each pursuer\nand the evader would decrease to zero, but at different instants in time. Although this approach does\nnot guarantee k-capture in general, it suggests that intuitively, it should be possible to coordinate\nthe moves of each pursuer to achieve k-capture from any set of initial locations in the environment.\nTherefore, in contrast with the previous sections wherein there existed a necessary condition for\nk-capture, we will now directly present a strategy which requires k pursuers, and which achieves\nk-capture of the evader in at most O(D2 ) time steps, where D is the diameter of the environment.\n\n12\n\n\fers in a favorable formation so that they can apply the steps in the second phase. In particular,\nitializing move will show that it is possible to achieve a configuration of the pursuers and the\nr such that k \u2212 1 pursuers are located between a lead pursuer and the evader.\n\nhe second phase will mimic the Lion strategy [1] for the lead pursuer, while the other k \u2212 1\nOur strategy comprises of two phases. The first phase is an initializing move, which gets the\ners will maintain\ninvariant\nof being\nbetween\nlead\npursuer\nthe evader at all\npursuers inan\na favorable\nformation\nso that located\nthey can apply\nthe stepsthe\nin the\nsecond\nphase. Inand\nparticular,\nthe initializing\nmove\nthat it is possible\nachieve a configuration\nthe pursuers\nthe\nThe initial\nlocations\nof will\ntheshow\npursuers\nbeing to\nsufficiently\nclose toofeach\notherand\nensures\nthat the\nevader such that k \u2212 1 pursuers are located between a lead pursuer and the evader.\nr gets captured if it moves to the location of any pursuer. We show that this phase terminates\nThe second phase will mimic Sgall's strategy [3] for the lead pursuer, while the other k \u2212 1\nhe evader pursuers\nbeing\nk-captured.\nwill maintain an invariant of being located between the lead pursuer and the evader at all\nt us begintimes.\nwithThe\nthe\nInitializing\ninitial\nlocations of move.\nthe pursuers being sufficiently close to each other ensures that the\n\nalizing\n\nevader gets captured if it moves to the location of any pursuer. We show that this phase terminates\ninto the evader being k-captured.\nMove\nLet us begin with the Initializing move.\n\ns phase, the\ngroup themselves such that they are located inside a sphere of\n4.1 pursuers\nInitializingfirst\nMove\ns equal to half. This essentially means that every pursuer can reach the location of any other\nIn this phase, the pursuers first group themselves such that they are located inside a sphere of\ner, in one radius\ntimeequal\nstep.\nto half. This essentially means that every pursuer can reach the location of any other\now, consider\na\nclosed\nsphere\npursuer, in one time\nstep. O of radius half which contains the pursuers at time t = 0. Let\note the intersection\nof athe\nsphere\njoining\nthe the\nevader's\natLet\ntime t = 1 to\nNow, consider\nclosed\nsphere O\nO ofwith\nradiusline\nhalf which\ncontains\npursuers location\nat time t = 0.\n` denote\nthe independent\nintersection of theofsphere\nwith line joining\nlocation\nat time tto\n= 1find\nto k distinct\nenter of O.\nNow,\nthe Olocation\ne(1), the\nit evader's\nis always\npossible\nthe center of O. Now, independent of the location e(1), it is always possible to find k distinct\nons p1 (1),locations\n. . . , pkp(1)\neach contained in !, such that p1 (1),\n. , pare\nare with\ncollinear\nwith e(1)\nk (1)\n. . . , .p.k (1)\ncollinear\ne(1)\n1 (1), . . . , pk (1) each contained in `, such that p1 (1),\nand\np2 (1),\n. , pk (1) lie between\ne(1).Figure\nFigure 41shows\nan illustration\nof this move.\nlie. .between\np1 (1) pand\ne(1).\nshows\nan illustration\nof this move.\n1 (1) and\n2 (1), . . . , p\nk (1)\ne(1)\n\np3(0)\n!\n\nO\n\np2(0)\np1(0)\n\nFigure 4: Illustrating\nthe initializing\nmove. It the\nis always\npossible to move.\nensure that the pursuers are\nFigure\n1: Illustrating\ninitializing\ncollinear with the evader and within a unit distance of each other. In this figure, the circle centered\nat O, has radius equal to half unit.\n\nhis terminates the initializing move, and we are now ready to present the k-capture strategy.\nThis terminates the initializing move, and we are now ready to present the k-capture strategy.\n\nhile it is sufficient to ensure the safety of only the k pursuers who perform the k-capture, in our strategy, all\nrsuers will remain safe.\n4.2 An algorithm for k-Capture\nAt each time instant t, p1 makes the Sgall move,\n2 described as below.\n1. Join e(t \u2212 1) and p1 (t \u2212 1) and extend it beyond p1 (t \u2212 1) to intersect the environment at C.\n2. Move to the point closest to e(t) and on the line joining e(t) and C.\n13\n\n\f1\n\nure 2, and is summarized in Algorithm 1.\n\nAll other pursuers pick distinct points between p1 (t) and e(t). This strategy is illustrated in\nFigure 5, and is summarized in Algorithm 2.\n\ne(t)\n\ne(t \u2212 1)\n\np3(t \u2212 1)\n\np2(t \u2212 1)\np1(t \u2212 1)\n\nC\nFigure 5: Illustrating a move of Algorithm 2. Pursuer p1 follows the Sgall move, while all the\nFigure 2: Illustrating a move of Algorithm 1.\nothers pick distinct points between p1 and e to move to.\n\nAlgorithm 2: Sgall-like strategy\nlgorithm 1:\nk-Capture\nAssumes: The players are in a configuration resulting from the Initializing move.\nAssumes: 1The\nplayers\nare\nFor each\nt = 1, 2,\n. . .,in a configuration resulting from the Initializing move.\np12,\nmakes\nFor each t 2= 1,\n. . ., the Sgall Move.\n3\nFor each j \u2208 {2, . . . , k},\np1 makes4 the pSgall\nMove.\nj moves to the furthest point from p1 between p1 (t) and e(t), and on the line joining\nFor each jp1\u2208(t){2,\n. . , k},\nand. e(t).\n5\nend\nfor\npj moves to the furthest point from p1 between p1 (t) and e(t), and on the line joining\n6 end for\np1 (t) and e(t).\nend for Thus, we obtain the following result.\nend for\nProposition 4.1 With the initializing move and subsequently Algorithm 2, the pursuers k-capture\nthe evader in O(D2 ) number of time steps, where D is the diameter of the compact environment.\n\nThus, we obtain\nthepfollowing\nresult.\nProof: Since\nmove throughout the pursuit, ke \u2212 p1 k becomes equal to zero in at\n1 uses the Sgall\n\nmost O(D2 ) number of time steps. Each pursuer move in step 4 of the algorithm exists since the\nconvex.\nThus, the remaining\nk \u2212 subsequently\n1 pursuers ensureAlgorithm\nthat the evader\nk-captured\nopositionenvironment\n2.1 Withis the\ninitializing\nmove and\n1, isthe\npursuers\nwhen p21 becomes coincident with e.\n\u0003\n\nk-capture\nevader in O(D ) number of time steps, where D is the diameter of the compact environment.\n\noof: Since5p1 Closing\nuses the Remarks\nSgall move throughout the pursuit, #e \u2212 p1 # becomes equal to zero in at\n2\nt O(D ) number of time steps. Each pursuer move in step 4 of the algorithm exists since the\nIn this paper, we introduced a new variant of the classical pursuit-evasion problem in an mronment is\nconvex.Euclidean\nThus, space,\nthe remaining\n\u2212 1 pursuers\nthat reach\nthe the\nevader\ndimensional\nwhich requireskmultiple\npursuers to ensure\nsimultaneously\nevaderis k-captured\nn p1 becomes coincident with e.\n!\n14\n\n3\n\n\ffor capture. We showed that, for k-capture to occur, the evader must lie inside the k-Hull, in a\npleasing generalization of the convex hull rule for the single pursuer capture. The main result of\nthe paper was to show that this simple necessary condition is also sufficient. The proof of this\nsufficiency required a new pursuit strategy, requiring both an Advance move, which is a modified\nversion of a known Planes algorithm and a new type of Cone move, which requires a careful coordination among the pursuers. For a version of this problem played in a compact and convex\nenvironment, we showed that k-capture is always possible.\nOur work suggests a number of intriguing problems for future research. Interesting directions\ninclude improving the upper bound on the time taken to capture the evader and addressing versions\nof this problem in general environments, with obstacles.\n\nReferences\n[1] J. E. Littlewood, Littlewood's Miscellany.\n\nCambridge University Press, 1986.\n\n[2] R. K. Guy, \"Unsolved problems in combinatorial games,\" in Combinatorial Games, ser. Proc.\nSymp. Appl. Math., R. K. Guy, Ed., 1991, vol. 43, pp. 183\u2013189.\n[3] J. Sgall, \"A solution of David Gale's lion and man problem,\" Theoretical Computational Science, vol. 259, no. (1-2), pp. 663\u2013670, 2001.\n[4] R. Isaacs, Differential Games.\n\nWiley, 1965.\n\n[5] S. Kopparty and C. V. Ravishankar, \"A framework for pursuit evasion games in Rn ,\" Information Processing Letters, vol. 96, no. 3, pp. 114\u2013122, 2005.\n[6] L. Alonso, A. S. Goldstein, and E. M. Reingold, \"Lion and Man: Upper and lower bounds,\"\nORSA Journal of Computing, vol. 4, no. 4, pp. 447\u2013452, 1992.\n[7] V. Isler, S. Kannan, and S. Khanna, \"Randomized pursuit-evasion in a polygonal environment,\" IEEE Transactions on Robotics, vol. 5, no. 21, pp. 875\u2013884, 2005.\n[8] S. B. Alexander, R. Bishop, and R. Ghrist, \"Capture pursuit games on unbounded domains,\"\nEnseign. Math. (2), vol. 55, no. 1-2, pp. 103\u2013125, 2009.\n[9] L. J. Guibas, J. C. Latombe, S. M. LaValle, D. Lin, and R. Motwani, \"A visibility-based\npursuit-evasion problem,\" International Journal on Computational Geometry and Applications, vol. 9, no. 4, pp. 471\u2013494, 1998.\n[10] S. D. Bopardikar, F. Bullo, and J. P. Hespanha, \"On discrete-time pursuit-evasion games with\nsensing limitations,\" IEEE Transactions on Robotics, vol. 24, no. 6, pp. 1429\u20131439, 2008.\n[11] N. Karnad and V. Isler, \"Bearing-only pursuit,\" in IEEE Int. Conf. on Robotics and Automation, Pasadena, CA, USA, May 2008, pp. 2665\u20132670.\n[12] T. D. Parsons, \"Pursuit-evasion in a graph,\" in Theory and Applications of Graphs, ser. Lecture\nNotes in Mathematics, Y. Alavi and D. Lick, Eds. Springer, 1978, vol. 642, pp. 426\u2013441.\n[13] M. Aigner and M. Fromme, \"A game of cops and robbers,\" Discrete Applied Mathematics,\nvol. 8, pp. 1\u201312, 1984.\n15\n\n\f[14] V. Isler, and N. Karnad, \"The Role of Information in the Cop-Robber Game,\" Theoretical\nComputer Science, vol. 399, no. 3, pp. 179\u2013190, 2008.\n[15] K. Klein and S. Suri, \"Robot kabaddi,\" in 22nd Canadian Conference on Computational\nGeometry (CCCG), Winnipeg, Canada, August 2010.\n[16] R. Cole, M. Sharir, and C. K. Yap, \"On k-hulls and related problems,\" SIAM J. Comput.,\nvol. 16, no. 1, pp. 61\u201377, 1987.\n[17] H. Edelsbrunner, Algorithms in Combinatorial Geometry.\n\nSpringer, 1987.\n\n[18] E. Helly, \"\u00dcber mengen konvexer k\u00f6rper mit gemeinschaftlichen punkten,\" Jahresbericht\nDeutsch. Math. Vereining., vol. 32, pp. 175\u2013176, 1923.\n\n16\n\n\f"}