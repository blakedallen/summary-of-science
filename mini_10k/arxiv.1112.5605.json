{"id": "http://arxiv.org/abs/1112.5605v1", "guidislink": true, "updated": "2011-12-23T15:46:56Z", "updated_parsed": [2011, 12, 23, 15, 46, 56, 4, 357, 0], "published": "2011-12-23T15:46:56Z", "published_parsed": [2011, 12, 23, 15, 46, 56, 4, 357, 0], "title": "A Study of CAPTCHAs for Securing Web Services", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1112.6155%2C1112.5374%2C1112.0773%2C1112.2475%2C1112.4745%2C1112.1893%2C1112.4466%2C1112.4566%2C1112.1209%2C1112.2440%2C1112.6191%2C1112.6112%2C1112.0055%2C1112.3286%2C1112.1245%2C1112.5605%2C1112.3085%2C1112.3790%2C1112.2560%2C1112.2691%2C1112.5383%2C1112.0524%2C1112.6387%2C1112.1781%2C1112.4206%2C1112.1454%2C1112.0694%2C1112.3187%2C1112.1030%2C1112.4464%2C1112.2840%2C1112.0951%2C1112.4114%2C1112.5931%2C1112.2620%2C1112.1175%2C1112.2373%2C1112.5898%2C1112.4250%2C1112.5395%2C1112.1627%2C1112.0035%2C1112.3818%2C1112.1850%2C1112.6174%2C1112.2385%2C1112.5948%2C1112.0946%2C1112.4384%2C1112.3526%2C1112.2252%2C1112.6141%2C1112.2919%2C1112.1753%2C1112.4212%2C1112.3867%2C1112.6140%2C1112.6336%2C1112.0759%2C1112.4965%2C1112.6114%2C1112.1300%2C1112.2222%2C1112.0866%2C1112.4125%2C1112.0662%2C1112.3917%2C1112.5902%2C1112.4704%2C1112.5670%2C1112.0439%2C1112.3207%2C1112.1446%2C1112.4825%2C1112.1218%2C1112.0806%2C1112.2462%2C1112.3738%2C1112.2745%2C1112.0075%2C1112.1067%2C1112.3852%2C1112.5981%2C1112.6325%2C1112.2065%2C1112.2575%2C1112.2274%2C1112.4347%2C1112.4043%2C1112.1477%2C1112.4199%2C1112.5098%2C1112.0697%2C1112.4638%2C1112.1262%2C1112.5047%2C1112.3507%2C1112.1387%2C1112.2505%2C1112.5324%2C1112.2240&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "A Study of CAPTCHAs for Securing Web Services"}, "summary": "Atomizing various Web activities by replacing human to human interactions on\nthe Internet has been made indispensable due to its enormous growth. However,\nbots also known as Web-bots which have a malicious intend and pretending to be\nhumans pose a severe threat to various services on the Internet that implicitly\nassume a human interaction. Accordingly, Web service providers before allowing\naccess to such services use various Human Interaction Proof's (HIPs) to\nauthenticate that the user is a human and not a bot. Completely Automated\nPublic Turing test to tell Computers and Humans Apart (CAPTCHA) is a class of\nHIPs tests and are based on Artificial Intelligence. These tests are easier for\nhumans to qualify and tough for bots to simulate. Several Web services use\nCAPTCHAs as a defensive mechanism against automated Web-bots. In this paper, we\nreview the existing CAPTCHA schemes that have been proposed or are being used\nto protect various Web services. We classify them in groups and compare them\nwith each other in terms of security and usability. We present general method\nused to generate and break text-based and image-based CAPTCHAs. Further, we\ndiscuss various security and usability issues in CAPTCHA design and provide\nguidelines for improving their robustness and usability.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1112.6155%2C1112.5374%2C1112.0773%2C1112.2475%2C1112.4745%2C1112.1893%2C1112.4466%2C1112.4566%2C1112.1209%2C1112.2440%2C1112.6191%2C1112.6112%2C1112.0055%2C1112.3286%2C1112.1245%2C1112.5605%2C1112.3085%2C1112.3790%2C1112.2560%2C1112.2691%2C1112.5383%2C1112.0524%2C1112.6387%2C1112.1781%2C1112.4206%2C1112.1454%2C1112.0694%2C1112.3187%2C1112.1030%2C1112.4464%2C1112.2840%2C1112.0951%2C1112.4114%2C1112.5931%2C1112.2620%2C1112.1175%2C1112.2373%2C1112.5898%2C1112.4250%2C1112.5395%2C1112.1627%2C1112.0035%2C1112.3818%2C1112.1850%2C1112.6174%2C1112.2385%2C1112.5948%2C1112.0946%2C1112.4384%2C1112.3526%2C1112.2252%2C1112.6141%2C1112.2919%2C1112.1753%2C1112.4212%2C1112.3867%2C1112.6140%2C1112.6336%2C1112.0759%2C1112.4965%2C1112.6114%2C1112.1300%2C1112.2222%2C1112.0866%2C1112.4125%2C1112.0662%2C1112.3917%2C1112.5902%2C1112.4704%2C1112.5670%2C1112.0439%2C1112.3207%2C1112.1446%2C1112.4825%2C1112.1218%2C1112.0806%2C1112.2462%2C1112.3738%2C1112.2745%2C1112.0075%2C1112.1067%2C1112.3852%2C1112.5981%2C1112.6325%2C1112.2065%2C1112.2575%2C1112.2274%2C1112.4347%2C1112.4043%2C1112.1477%2C1112.4199%2C1112.5098%2C1112.0697%2C1112.4638%2C1112.1262%2C1112.5047%2C1112.3507%2C1112.1387%2C1112.2505%2C1112.5324%2C1112.2240&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Atomizing various Web activities by replacing human to human interactions on\nthe Internet has been made indispensable due to its enormous growth. However,\nbots also known as Web-bots which have a malicious intend and pretending to be\nhumans pose a severe threat to various services on the Internet that implicitly\nassume a human interaction. Accordingly, Web service providers before allowing\naccess to such services use various Human Interaction Proof's (HIPs) to\nauthenticate that the user is a human and not a bot. Completely Automated\nPublic Turing test to tell Computers and Humans Apart (CAPTCHA) is a class of\nHIPs tests and are based on Artificial Intelligence. These tests are easier for\nhumans to qualify and tough for bots to simulate. Several Web services use\nCAPTCHAs as a defensive mechanism against automated Web-bots. In this paper, we\nreview the existing CAPTCHA schemes that have been proposed or are being used\nto protect various Web services. We classify them in groups and compare them\nwith each other in terms of security and usability. We present general method\nused to generate and break text-based and image-based CAPTCHAs. Further, we\ndiscuss various security and usability issues in CAPTCHA design and provide\nguidelines for improving their robustness and usability."}, "authors": ["M. Tariq Banday", "N. A. Shah"], "author_detail": {"name": "N. A. Shah"}, "author": "N. A. Shah", "arxiv_comment": "9 Pages", "links": [{"href": "http://arxiv.org/abs/1112.5605v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1112.5605v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.CY", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "K.6.5; D.4.6; K.4.2", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1112.5605v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1112.5605v1", "journal_reference": "Banday, M.T., Shah, N.A. (2009). \"A Study of CAPTCHAs for Securing\n  Web Services,\" IJSDIA International Journal of Secure Digital Information\n  Age, ISSN: 0975-1823, 1(2), pp. 66-74, available online at:\n  http://ijsdia.org/main/?page_id=6", "doi": null, "fulltext": "IJSDIA International Journal of Secure Digital Information Age, Vol. 1. No. 2, December 2009\n\nISSN: 0975-1823\n\nA Study of CAPTCHAs for Securing Web Services\nM. Tariq Banday1, N. A. Shah2\n1\n\nP. G. Department of Electronics and Instrumentation Technology,\nUniversity of Kashmir, Srinagar - 6, India\nEmail: sgrmtb@kashmiruniversity.ac.in\n\n2\n\nP. G. Department of Electronics and Instrumentation Technology,\nUniversity of Kashmir, Srinagar - 6, India\nEmail: nassgr@yahoo.com\n\nAbstract: Atomizing various Web activities by replacing human to human interactions on the Internet has been\nmade indispensable due to its enormous growth. However, bots also known as Web-bots which have a malicious intend\nand pretending to be humans pose a severe threat to various services on the Internet that implicitly assume a human\ninteraction. Accordingly, Web service providers before allowing access to such services use various Human Interaction\nProof's (HIPs) to authenticate that the user is a human and not a bot. Completely Automated Public Turing test to tell\nComputers and Humans Apart (CAPTCHA) is a class of HIPs tests and are based on Artificial Intelligence. These tests\nare easier for humans to qualify and tough for bots to simulate. Several Web services use CAPTCHAs as a defensive\nmechanism against automated Web-bots. In this paper, we review the existing CAPTCHA schemes that have been\nproposed or are being used to protect various Web services. We classify them in groups and compare them with each\nother in terms of security and usability. We present general method used to generate and break text-based and imagebased CAPTCHAs. Further, we discuss various security and usability issues in CAPTCHA design and provide\nguidelines for improving their robustness and usability.\nKeywords: CAPTCHA, Human Interaction Proof, HIP, Text CAPTCHA, Image CAPTCHA, Audio CAPTCHA, Web\nService, CAPTCHA Usability, CAPTCHA Security, CAPTCHA Working.\n\n1.\n\nIntroduction\n\nHIPs [1] are schemes that allow a computer to distinguish\na specific class of humans over a network. HIPs can be\ndesigned to distinguish a human from a computer, one\nclass of humans from another or one particular human\nfrom another human. To do this, the computer presents a\nchallenge that must be easy for that class of humans to\npass, yet hard for non-members to pass. Additionally, the\nresults must be verifiable by a computer, and the protocol\nmust be publicly available [1]. CAPTCHA [2] is a class of\nHIPs that have been able to effectively prevent Web-bots\nfrom getting access to the Web services. CAPTCHA is a\nreverse Turing test based on text, image or audio based\nchallenge response system. Various implicitly human\ninteractions assumed services on the Internet use\nCAPTCHA techniques to ensure that the user of these\nservices is a human and not a Web-bot. Web services and\napplications that use CAPTCHA methods for as HIP\ninclude chat rooms, search engines, password systems,\nonline polls, e-mail services for account registrations,\nprevention of sending and receiving spam, blogs,\nmessaging services, free content downloading services\nand detecting phishing attacks [3]. CAPTCHAs have been\nable to prevent the abuse of several Web services and thus\noffer advantages but at the same time its use poses various\ndisadvantages. Text and image-based CAPTCHAs are\ndesigned hard and as such are unfriendly particularly for\nManuscript received: 24 March 2009\nManuscript revised: 19 August 2009\n\ndisabled and visually impaired people. Audio\nCAPTCHAs which are used as HIP for visually impaired\npeople are very difficult to pass. CAPTCHAs increase\nload on servers because of requirement for image database\nand huge server processing and thus result in delay of\nWeb page downloads and their subsequent refreshes.\nFurther, CAPTCHAs pose an annoyance to genuine user.\nA good CAPTCHA minimizes these disadvantages by\ngenerating a CAPTCHA test that satisfies its various\ndesired properties. These properties include i) automatic\ngeneration of the test, ii) quick and easy answer to the\ntest, iii) acceptance to all humans or a class of humans,\nand iv) resistance to attacks with publically known\nprotocol [2].\nThis paper studies various aspects of CAPTCHA methods\nthat include its types, generation methods, robustness\nagainst attacks and various usability aspects. It presents\nrelative merits and demerits of text and image based\nCAPTCHA methods. Section 2 presents a review of\nexisting CAPTCHA schemes. Section 3 illustrates\nworking of CAPTCHAs and general methods used for\ntheir generation. Section 4 discusses security and usability\nissues of CAPTCHA methods. It provides guidelines to\nimprove security control of CAPTCHA methods against\nvarious possible attacks and guidelines to improve their\nusability. Finally in section 5, we conclude and present\nfuture research directions.\n\n\fIJSDIA International Journal of Secure Digital Information Age, Vol. 1. No. 2\n\n67\n\n2.\n\nTypes of CAPTCHA methods\n\n2.1. Text-Based CAPTCHAs\nCAPTCHA was initially devised by Andrei Broder and\nhis colleagues in 1997 and in the same year Altavista\nwebsite used this method as a HIP [2] in the same year.\nThis method used a distorted English word that a user was\nasked to type. The distorted word was easier for users to\nunderstand but difficult for bots to recognize using OCR\ntechniques. Text based CAPTCHAs are in the form of an\nimage containing a difficult to recognize text string to be\nidentified and typed by the user in a text box provided\nnear the CAPTCHA image on the Web page. The\nCAPTCHA image is of low quality with different forms\nof noise and strong degradation applied to it.\nBlum and Von Ahn in Collaboration with Yahoo devised\nEZ-Gimpy and Gimpy CAPTCHA [4] to protect chat\nrooms from spammers. These CAPTCHAs challenges\n\nhave been broken by dictionary attacks which contained a\nlimited number of words in them [5]. A more secure type\nof text based HIP, called reCAPTCHA [6] has been\nproposed by the same authors. Baffle Text CAPTCHA [7]\nis the Xerox Pato Alto Research Center (PARC) version\nof Gimpy test. Prominent text based CAPTCHA\ntechniques include Scatter Type [8], Handwritten Word\nbased CAPTCHA [9] and Human Visual System masking\nCharacteristic CAPTCHA [10]. Various service providers\non the Internet like PayPal, Hotmail and YouTube use\ntheir own versions of text based CAPTCHAs on their\nwebsites and update them with newer versions frequently.\nWith an aim of improving usability of text-based\nCAPTCHAs, Richard Chow et al [11] have proposed a\ngeneric technique for converting a textual CAPTCHA into\na clickable CAPTCHA. It proposes placement of multiple\ntext CAPTCHA images in a grid among which some are\nEnglish words while others are not. The user must click\non all valid English words to pass this CAPTCHA test.\nSamples of various text-based CAPTCHAs are shown in\nfigure 1.\n\nFigure 1: Samples of Text-based CAPTCHAs\n\n2.2. Image-Based CAPTCHAs\nBlum and Von Ahn proposed initially image-based\nCAPTCHA called ESP-PIX CAPTCHA [2]. It used a\nlarger database of photographs and animated images of\neveryday objects. The CAPTCHA system presented a user\nwith a set of images all associated with the same object or\nconcept. The user was required to enter the object or\n\nconcept to which all the images belonged to e.g. the\nprogram might present pictures of Globe, Volleyball,\nPlanet and baseball expecting the user to correctly\nassociate all these pictures with the word ball. In general\nimage based CAPTCHAs present a visual pattern or\nconcept that the user needs to identify and act\naccordingly. Different image-based CAPTCHA scheme\nuse different patterns or concepts which are easy to be\n\n\fIJSDIA International Journal of Secure Digital Information Age, Vol. 1. No. 2\n\n68\nrecognized by the users and difficult for the bot programs\nto simulate.\nBesides several others, this class of CAPTCHA methods\ninclude: Microsoft Asirra [12], IMAge Generation for\nINternet AuthenticaTION (IMAGINATION) [13], Image\nBlock Exchange [14] and Face Recognition [15]\nCAPTCHAs. Mosaic-based Human Interactive Proof\ncalled MosaHIP [16] proposes a CAPTCHA scheme for\nsecuring the download of resource against Web-bots. It\nuses a single larger image called mosaic image which is\ncomposed of smaller and partially overlapping real and\n\nfake pictures. The user needs to drag a resource expressed\nin form of movable text object on the web page and drop\nit onto the area of the mosaic picture containing the image\nindicated in the CAPTCHA image. Google has proposed a\nCAPTCHA method in which a user has to adjust\nrandomly rotated images to their upright orientation [17].\nRecently, an Image Flip CAPTCHA [18] method\nproposes use of a composite CAPTCHA image\ncomprising of flipped and non-flipped images. The user\nneeds to click on all images that appear as normal and\nwithout any flip applied to them. Samples of various\nimage-based CAPTCHAs are shown in figure 2.\n\nFigure 2: Samples of Image-based CAPTCHAs\n\n2.3. Audio-Based CAPTCHAs\nThe first audio based CAPTCHA was implemented by\nNancy Chan to provide an alternative to text based\nCAPTCHAs for visually impaired people. Audio\nCAPTCHAs [19] take a random sequence drawn from\nrecordings of simple words or numbers, combine them\nand add some disturbance and noise to it. This recording\nis played when the user clicks a button provided on the\nweb page. The CAPTCHA system then asks the user to\nenter the words and/or numbers in the recording. Audio\nCAPTCHAs are more difficult to solve, hard to\ninternationalize and more demanding in terms of time and\nefforts in comparison to text and image CAPTCHAs.\n\nHowever, audio based CAPTCHA tests have become an\nalternative for visually impaired people. Most Web\nservices include it in addition to text and image\nCAPTCHAs.\n\n2.4. Other CAPTCHAs\nBesides above types of CAPTCHA tests, Collaborative\nFiltering [20] and Implicit [21] CAPTCHA challenge\nhave been proposed in literature. Collaborative filtering\nCAPTCHAs approaches differ from others in the scenes\nthat CAPTCHA designers do not initially know the\ncorrect answer for their designed CAPTCHA, but measure\nit from human opinion. Implicit CAPTCHA proposes\n\n\fIJSDIA International Journal of Secure Digital Information Age, Vol. 1. No. 2\n\n69\nsingle click challenges distinguished as necessary\nbrowsing links which can be answered through experience\nof the context of the particular Website. A review of the\nexisting CAPTCHA techniques is provided in [3, 22].\n\n3.\n\nstored in a database or files or some other service intended\nto be used by human users on the client. User request for a\nresource is send by the client computer to the server,\nwhich is granted to it if the resource is not protected. In\ncase the resource is CAPTCHA protected, the access is\ngranted to it only after passing CAPTCHA test as\ndepicted in figure 3.\n\nWorking of CAPTCHA\n\nA Web server may be holding both public and protected\nresources that may be in the form of web pages, data\n\nUnprotected\nResources\nUser Request\n\nProtected\nResource\n\nGrant Access\nNo\n\nYes\nCAPTCHA Page\n\nCAPTCHA Image\nGeneration\n\nStore\nGUID, etc.\n\nPost Cookie\n\nCookie\n\nRetrieve\nImage(s)\n\nGenerate\nAgain\n\nWeb\nBrowser\n\nImage\nDatabase\n\nState\n\nRetrieve Information\nDatabase\nGUID, etc.\n\nCAPTCHA\nProtected\nResources, Pages\nand Services\n\nResponse\nCAPTCHA Verification\nRetrieve\nCookie\nNo\n\nCAPTCHA Test\nPassed\n\nDeny Access\nMessage\n\nWeb Client\n\nGrant\nAccess\nYes\n\nWeb Server\nFigure 3: Working of CAPTCHA\n\nThe server uses some CAPTCHA image generation\nalgorithm to generate a CAPTCHA image. Different\nCAPTCHA techniques use different algorithms for image\ngeneration which may employ use of images stored in an\nimage database. The state information along with Global\nUnique Identifier (GUID) of the client and the CAPTCHA\nsolution is stored in the State Information Database (SID)\nat the server. Storing GUID of the client ensures that only\nclient that received CAPTCHA can produce a valid\nsolution. Instead of storing the CAPTCHA solution and\nother state information on server in SID, it be may stored\nin hashed or encrypted form in a cookie on the client. A\nweb page containing the generated CAPTCHA image and\nthe cookie is posted to the client which renders it in a web\nbrowser to the user. A human operator responds to\nCAPTCHA test and the response is passed by the client to\nthe server. The server verifies the authenticity of\nCAPTCHA solution by comparing the stored GUID and\nthe GUID of the client sending the solution. The solution\nprovided by the client is next compared with the solution\nstored in SID or cookie and accordingly either access is\ngranted or denied. In case access is denied, a message is\n\nposted to the client and the process starts afresh. A\nCAPTCHA implementation may temporarily block access\nfor a client if it repeatedly fails to respond to a number of\nCAPTCHA tests. Further, for a particular session once a\nCAPTCHA challenge has been passed by a client,\nsubsequent accesses to protected resources on the server\nmay be granted to it without putting it to further tests.\n\n3.1. CAPTCHA Image Generation Process\nIt is not possible to generalize the algorithm for\ngeneration of CAPTCHA image; however, the steps listed\nbelow provide a guideline for creation of a basic textbased CAPTCHA image:\ni.\nii.\n\nCreate a CAPTCHA image of desired dimension\nsufficient to hold the text string.\nSet the background color for the CAPTCHA\nimage. Instead of choosing a solid background\ncolor, a pattern or a stored background image\nmay be used. Some CAPTCHA tests use a simple\n\n\fIJSDIA International Journal of Secure Digital Information Age, Vol. 1. No. 2\n\n70\n\niii.\n\niv.\n\nv.\n\nvi.\n\nvii.\n\nwhite background while others fill the image with\nsome form of noise.\nGenerate n random characters from the\ndesignated character set and/or digit set.\nGenerally upper and lower case English\nalphabets are used as character set and 10 Arabic\nnumerals are used as digit set. A CAPTCHA test\nwhich is case insensitive and uses both alphabets\nand numbers thus has total combinations of 36\ncharacters while as the one which is case\nsensitive, has a total combination of 62\ncharacters. The character generation algorithm is\nmade to generate those characters which are\nsimilar to one another in some manner and will\nmake the string complex to be understood by the\nOCR techniques.\nChose the font, font size, font style, font color and\nother related attributes. Most CAPTCHA\nimplementations make use of personalized fonts\nand apply twist to characters so as to make OCR\ntechniques to fail. Some CAPTCHA tests use\ndifferent fonts and styles for different characters\nto make the test more secure.\nSelect a random spacing between each generated\ncharacter. The spacing is chosen in a manner that\nsome characters partially overlap one another.\nThe text string is then placed on the CAPTCHA\nimage.\nOptionally, generate lines and arcs or other\nobjects with desired parameters and place it on\nthe CAPTCHA image to make the characters\ninseparable by the OCR programs.\nFinally, apply a distortion to the generated\nCAPTCHA image by using some mathematical\ntransformation. The application of the distortion\nmakes characters within the image to twist and\nthus increases the difficulty for the OCR\nprograms to decode it.\n\nImage-based CAPTCHA techniques involve the use of\ndifferent patterns or concepts which the user needs to\nidentify. Thus the algorithms for image generation, size\nand dimensions of generated CAPTCHA image, the size\nand types of the images in image database and the\ndifficulty level of each vary significantly from one\nanother. These techniques create a composite CAPTCHA\nimage of required dimension and optionally add desired\ntype of noise and other objects to it forming a complex\nbackground. Next, they select images or objects from the\nimage database present at the server or by downloading\nthe images from the Internet and apply various\ntransformations like scaling, rotation, transparency, etc. to\neach and place them on the CAPTCHA image at desired\npositions. The resultant CAPTCHA image is shown to the\nuser. The user needs to identify the object or concept\npresented in this image and act accordingly. The solution\nto CAPTCHA challenges may be a set of points on the\nCAPTCHA image or a text string or both. The solution to\nthe CAPTCHA test is either stored in a database on the\nserver along with other state information or in a cookie at\n\nthe client computer. A Web service called CAPTCHA\ngeneration [23] is a new step towards generation of\nCAPTCHA schemes that provide CAPTCHA APIs which\ncan be used by implicitly human interaction assumed Web\nservices to defend against bots. They also provide code\nthat permits programmers to generate customized\nCAPTCHA challenges.\n\n4.\n\nIssues in CAPTCHA Design\n\n4.1. Security Issues\nInefficiency of CAPTCHAs to resist to attacks aimed to\nbreak its underlying protocols via man-in-the middle or\noracle attacks [24] due to advances in OCR techniques\nhas necessitated designing of CAPTCHAs which are\nrobust, secure and usable. Research works carried out in\n[5, 24, 25] discuss the inefficiency or report the breaking\nof various CAPTCHA techniques. Breaking a CAPTCHA\nmeans to solve a CAPTCHA challenge by writing a\ncomputer program [24]. It is a two step process vis-\u00e0-vis\nsegmentation and character recognition [26]. Content\nBased Image Retrieval (CBIR) methods are used for\nsegmentation of an image in regions, identification of\nregions of interest and extraction of semantic content\nexpressed by the image or part of it. Success of an attack\nto break a CAPTCHA technique highly depends upon the\naccuracy obtained in the segmentation process\nSegmentation process chunks the image into letters and\npasses these chunks to the character recognition stage\nwhich attempts to map each chunk to a particular letter or\ndigit. Jeff Yen et al in the research work reported in [24]\ndemonstrate the breaking of most visual CAPTCHA\nschemes publicly available as Web service for CAPTCHA\ngeneration at captchaservice.org. A simple breaking\nprocedure of text based CAPTCHAs involve\nsegmentation of text string into individual segments,\nmapping of segments to characters and use of dictionary\nto guess the correct word. The complexity involved in\nsegmentation process depends upon the complexity in\nalgorithms used to generate the CAPTCHA test. A snake\nsegmentation or geometric analysis may be used to further\nstrengthen the segmentation process [24]. Character\nrecognition may involve use of dictionary to facilitate the\ncharacter recognition process in identifying the candidate\ntext string. Segmentation process involves use of edge\ndetection or thresholding to segment an image into\nregions. An edge detection technique detects outline of\nobjects in an image by detecting jumps in its image\nintensity function. In simple thresholding pixels of image\nare set to white if their intensity exceeds a certain\nthreshold value otherwise they are set to black.\nBackground of an image can be separated from its\nforeground if threshold value(s) clearly separate(s) the\ntwo otherwise an adaptive thresholding which changes the\nintensity threshold for every pixel of the image in relation\nwith the pixel intensity values of its neighboring pixels\nmay be used to separate the foreground from the\nbackground. Shape matching [27], though a complex and\n\n\f71\ntime consuming process may be used to break an image\nCAPTCHA technique. It involves image collection of\npreviously presented images, restoring these images to\ntheir original form and then comparing them with images\npresented in the subsequent tests to reveal difference\nbetween them. Random guessing wherein an attacker\nmay click randomly on any portion(s) of the presented\nimage to pass the test is yet another possible attack to\ndefeat image based CAPTCHAs. Proxy through unaware\nusers [22] also called laundry attack may be used by an\nattacker to break the CAPTCHA test. In this type of\nattack, attackers may download the CAPTCHA image and\npresent it to unaware users on unrelated Web sites\ncontrolled by the attackers. As an example, an attacker\nmay control a large network of pornographic or other\nsimilar Web sites where a visitor would be prompted with\na CAPTCHA test to access a resource or download a\ntorrent. The user not aware of the underlying mistrust\nsolves the CAPTCHA challenge. Thus obtained response\nis sent by the Web site to the attacker who uses the\nreceived response along with other asked properties to\ngain access to the protected Web service. Further, a weak\nImplementation [28] of any CAPTCHA technique like\nallowing a session ID authorized by a single successful\nchallenge to be re-used repeatedly to gain access to some\nprotected service make that CAPTCHA technique\ninsecure. CAPTCHA solutions that are stored in cookies\nof the client computers also make the test vulnerable to\nattacks.\n\n4.2. Securing CAPTCHAs against attacks\nA CAPTCHA test may be considered secure that is at\nleast as expensive for a hacker as it would cost him using\nhuman operators [8, 28]. The security of a particular\nCAPTCHA test can be analyzed by investigating its\nresistance to attacks that possibly may be used to break it\n[28]. Further, tests against real users and bots can greatly\nhelp in ascertaining its security state.\nVarious methods are used to make text-based\nCAPTCHAs difficult to break. These methods include\nfont tricks, choice of letters, noise, color model, overlap,\ndistortion and degradation [26].\nTo make text\nCAPTCHAs secure against dictionary attacks, a complex\nbackground and some random object like circles, arcs,\nlines, etc. are added to the CAPTCHA image. This makes\nsegmentation process difficult as it results in images of\ninter-connected components. The presences of complex\nbackground or clutter impose challenges to perform visual\nconcept detection and identification [29] making\nCAPTCHAs secure against segmentation. Security against\nshape matching and segmentation can be improved by\ndistorting CAPTCHA images by application of\ntransformations like scaling, rotation and transparency.\nThis makes restoration of images to original form difficult\nwhich is required for successful shape matching. The\nprobability of a successful random guess can be decreased\nby increasing the area of CAPTCHA image and\n\nIJSDIA International Journal of Secure Digital Information Age, Vol. 1. No. 2\n\ndecreasing that of each sub image. Making a CAPTCHA\nimage meaningful only in the specific context of the Web\nsite that is protected will make CAPTCHA image not\nfungible and thus secure against laundry attacks [21].\nInvalidating the CAPTCHA image after a specific time\ncan also be used as a solution against laundry attacks [30].\nInsecurity on account of weak implementation of\nCAPTCHA methods can be overcome by careful analysis,\ncode reviews and timely updates. Use of encryption or\nhashing algorithm to secure CAPTCHA results either in\ncookies on client computers or database on the Web\nserver minimizes security vulnerabilities of CAPTCHA.\nFurther, CAPTCHA implementation should employ\nGlobal Unique Identifier (GUID) to ensure that sender of\nthe CAPTCHA solution is really the computer which was\nsend a CAPTCHA challenge by the server.\n\n4.3. Usability Issues\nUsability is a measure of the effectiveness, efficiency and\nsatisfaction with which specified users can achieve\nspecified goals in a particular environment [31].\nAccuracy, response time and perceived difficulty of using\na CAPTCHA scheme determine the usability of a\nparticular CAPTCHA test. Accuracy is a measure of\ncorrectness with which users can respond to a CAPTCHA\nchallenge without making mistakes. Response time is the\ntime taken by a user to react to the CAPTCHA challenge.\nPerceived difficulty is the difficulty observed by the users\nin solving CAPTCHA challenges. High accuracy, low\nresponse time and low perceived difficultly are desired to\nmake CAPTCHAs usable.\nDistortion is used in CAPTCHAs to improve its security\ncontrol; however, the use of excessive or unmanaged\ndistortion level and methods may not only make\nCAPTCHAs unusable but also will lower its security\ncontrol because the system would have to allow multiple\nattempts for failed tests [32]. Distortions also create\nambiguous characters, hard to apart from each other and\nidentify and thus are unfriendly to foreigners who are not\nnative speakers of the language in which CAPTCHA is\nimplemented. Inappropriate or unorganized CAPTCHA or\nany unsolicited or offensive image or text appearing in the\nCAPTCHA content will considerably reduce its usability.\nA CAPTCHA test can alienate or even frustrate a\nlegitimate user if its presentation is poor. Use of color\nenhances the user interface but its misuse can cause both\nusability and security problems [32]. Research work\ncarried out in [32] reported effective segmentation of\noverlapped characters generated through Cryptograph\nCAPTCHA by picking up pixels from the CAPTCHA\nimage having same color. A CAPTCHA user interface\nmay require a user to input response by typing characters\nin a text box or by selecting the answers from a dropdown\nlist or by clicking on correct portion(s) of the CAPTCHA\nimage. Most of the existing CAPTCHA challenges\nparticularly text-based challenges use a text box to input\nresponse from the user, which in comparison to other user\n\n\f72\ninterfaces besides being difficult to work with is time\nconsuming. An optimum size of CAPTCHA image is\nhighly desired to have a balance between usability and\nsecurity [28]. Large dimensions reduce the chances of\nsuccessful blind attacks and thus improve security control.\nIt also fastens the response time due to improved visibility\nof the sub-images or text within the CAPTCHA image.\nHowever, large images involve huge server processing for\napplying transformations and for transferring the images\nfrom the image database which decrease the performance.\nOn the other side, smaller images offer advantages of\nfaster image downloads and occupy less screen area\nmaking it easy to integrate the CAPTCHA challenge\nwithin the Web page. Further, use of CAPTCHAs has\nposed Web Accessibility challenge that could create a\ndigital divide between normal and disabled users of Web\nServices.\n\n4.4. Improving Usability\nJeff Yen and Ahmad Salar El Ahmad in their recent study\n[32] have provided a three dimensional framework for\nexamining and improving the usability of CAPTCHAs.\nUnder each dimension namely distortion, content and\npresentation, various usability issues have been identified\nand explained.\nDistortion should be applied in a controlled manner to\navoid creation of ambiguous characters or images which\nwith some difficulty level can be identified. The\nidentification of the sub-images or embedded characters\ncan be made easy by showing current a portion of the\nCAPTCHA image in zoomed-in state when the user\nhovers over that portion of the image. Recently proposed\nPartial Credit Algorithm [28], in which \"almost right\"\nanswers are treated as strong evidence that a user is\nhuman can be used to improve usability against complex\ndistortions. The maximum and minimum allowable\ndistortion levels for each sub-image may be automatically\ncontrolled by keeping track of images that legitimate users\nhave failed to recognize. Use of well known images i.e.\nimages which can be recognized easily by most of the\nusers will improve usability of image-based CAPTCHAs.\nTo improve the presentation of a CAPTCHA test various\nusability issues that must be addressed while designing a\nCAPTCHA challenge, are use of color, user interface and\nappropriate screen area so as to make the challenge\nsimple, easy to answer, easy to integrate with the Web\npage and highly accurate [33]. A clickable interface\nsimplifies and speeds-up the entry of the CAPTCHA\nsolutions which improves user friendliness and permits\nthe use of CAPTCHA on devices with small displays\nwhere they would otherwise be unusable. Using multiple\ntypes of CAPTCHAs like audio CAPTCHA along with\ntext or image based CAPTCHA has become an alternative\nfor visually impaired people to gain access to the\nprotected Web resource. Further, guidelines that have\nbeen provided by World Wide Web consortium's (W3C)\nWeb Accessibility Initiative (WAI) to make the Web sites\n\nIJSDIA International Journal of Secure Digital Information Age, Vol. 1. No. 2\n\naccessible to the users with disabilities which must be\nfollowed to make them accessible to disabled persons. It\nis highly recommended to carry out usability tests of a\nCAPTCHA method against humans to ascertain its\nusability. The tests should analyze accuracy, response\ntime and user satisfaction on different image sizes with\ndifferent distortion levels.\n\n5.\n\nConclusion\n\nText-based CAPTCHA are most widely deployed and are\nin use since years in major web sites. Further, they are\nintuitive to users and can provide strong security if\nproperly designed. Early text-based CAPTCHAs were\nstraight forward for humans to solve. Advances in OCR\ntechniques and consequently efficiency of bots in\nbreaking text-based CAPTCHAs improved as a result of\nwhich text-based CAPTCHAs are designed harder.\nCurrently text-based CAPTCHAs have become\nsufficiently hard for humans to solve and thus their\nusability has decreased at least for an ordinary user.\nOften ordinary users fail to solve hard text-based\nCAPTCHAs in their first attempt. Text-based CAPTCHA\ntechniques have localization issues and thus are not\nfriendly to foreigners. They use text box to input\nresponses from the users, which in comparison to other\nuser interfaces besides being difficult to work with, is also\ntime consuming. Image-based CAPTCHA schemes have\nbeen proposed as an alternative to text-based CAPTCHAs\nbut they have not been able to replace text-based. The\nWeb page area required for displaying the CAPTCHA\nimage and size of CAPTCHA image in all image-based\nCAPTCHA schemes is more in comparison to that\nrequired in text based methods. Further, the processes\ninvolved in creating image database, its storage\nrequirement at the server and the delay caused by image\nprocessing at the server with each page refresh limits the\nuse of image-based CAPTCHA schemes. Breaking a\nCAPTCHA challenge is difficult and it is very rare to find\n100% success rate, however several CAPTCHA\nimplementations have been broken and thus are proved to\nbe inefficient. The advances in OCR techniques in terms\nof pattern recognition and computer vision have made\nCAPTCHAs prone to more and more attacks and thus, it\nis imperative to validate the robustness and effective\nusability of new CAPTCHA technique rigorously. A huge\nscope for research exists in designing new and novel\nCAPTCHA techniques that are user friendly, require less\nserver processing and offer improved security control\nagainst bots.\n\nReferences\n[1] H. Baird and K. Popat, \"Human Interactive Proofs\nand Document Image Analysis\", In Proceedings of\nthe 5th IAPR International Workshop on\nDocument Analysis Systems (DAS'02), Princeton,\nNJ, USA, 2002, Vol. 2423 of Lecture Notes in\nComputer Science (LNCS), pp. 531-537, Springer.\n\n\f73\n[2] M. Blum, L. A. von Ahn, and J. Langford, \"The\nCAPTCHA Project, Completely Automatic Public\nTuring Test to Tell Computers and Humans Apart,\"\nNov. 2000, http://www.captcha.net, Dept. of\nComputer Science, Carnegie-Mellon Univ.\n[3] S. Shirali-Shahreza, M. Shirali-Shahreza and M. T.\nManzuri-Shalmani,\"Easy and Secure Login by\nCAPTCHA,\" International Review on Computers\nand Software (IRECOS)\", Vol. 2, No. 4, July\n2007, pp. 393-400.\n[4] L. von Ahn, M. Blum, and J. Langford, \"Telling\nHumans and Computers Apart Automatically\",\nCommunications of the ACM, Vol. 47, No. 2,\nFebruary 2004, pp. 57-60.\n[5] G. Mori and J. Malik, \"Recognizing Objects in\nAdversarial Clutter: Breaking a Visual CAPTCHA\"\nIn Proceedings of the Conference on Computer\nVision and Pattern Recognition, Madison, USA,\n2003, pp. 134-141.\n[6] M. Blum, L. A. von Ahn, and J. Langford,\n\"reCAPTCHA: Stop spam, read books\", Dept. of\nComputer Science, Carnegie Mellon University,\nhttp://www.recaptcha.net/, 2007, accessed 25 August\n2008.\n[7] M. Chew and H.S. Baird, \"BaffleText, a Human\nInteraction Proof\", In Proceedings of the 10th\nSPIE/IS&T Document Recognition and Retrieval\nConference (DRR'03), Santa Clara, CA, USA,\n2003, pp. 305-316.\n[8] M. Chew and J. D. Tygar, \"Image Recognition\nCAPTCHAs\", In Proceedings of the 7th\nInternational Information Security Conference\n(ISC 2004). 2004, Springer.\n[9] A. Rusu and V. Govindaraju, \"Handwritten\nCAPTCHA: Using the Difference in the Abilities of\nHumans and Machines in Reading Handwritten\nWords\", In Proceedings of the 9th International\nWorkshop on Frontiers in Handwriting\nRecognition (IWFHR- 9 2004), Kokubunji, Tokyo,\nJapan, 2004, pp. 226-231.\n[10] R. Ferzli, R. Bazzi, and L. J. Karam, \"A CAPTCHA\nBased on the Human Visual Systems Masking\nCharacterists\", In Proceedings of the 2006 IEEE\nInternational Conference on Multimedia and\nExpo (ICME'06), Toronto, Ontario, Canada, 2006,\npp. 517-520.\n[11] R. Chow, P. Golle, M. Jakobsson, L. Wang, and X.\nWang, \"Making CAPTCHAs Clickable\" In\nProceedings of the 9th Workshop on Mobile\nComputing Systems and Applications, Napa\nValley, CA, USA, 2008, pp. 91-94.\n[12] Microsoft,\n\"Microsoft\nAsirra\",\nhttp://research.microsoft.com/asirra/, accessed 25\nAug 2008.\n[13] R. Datta, J. Li, and J. Z. Wang, \"Imagination: A\nRobust Image-Based CAPTCHA Generation\nSystem\", In Proceedings of the 13th Annual ACM\nInternational\nConference\non\nMultimedia\n(MULTIMEDIA05), New York, NY, USA, 2005,\npp. 331-334, ACM Press.\n\nIJSDIA International Journal of Secure Digital Information Age, Vol. 1. No. 2\n\n[14] W. H. Liao, \"A CAPTCHA Mechanism by\nExchanging Image Blocks\", In Proceedings of\nthe18th International Conference on Pattern\nRecognition (ICPR06), Hong Kong, 2006, Vol. 1,\npp. 1179-1183.\n[15] D. Misra and K. Gaj, \"Face Recognition\nCAPTCHAs\", In Proceedings of the Advanced\nInternational Conference on Telecommunications\nand International Conference on Internet and\nWeb Applications and Services (AICT/ICIW'06),\nGuadeloupe, French Caribbean, 2006, pp. 122-127.\n[16] A. Basso, \"Multimedia Content Protection from\nMassive Automated Access and Unauthorized\nDistribution\", PhD. Thesis, University of Torinto,\n2008,\nAvailable\nonline\nat:\nwww.di.unito.it/~phd/documents/tesi/XX/phdthesis-alessandro-basso.pdf\n[17] R. Gossweiler, M. Kamvar, and S. Baluja, \"Whats\nUp CAPTCHA? A CAPTCHA Based On Image\nOrientation\", In Proceedings of the 18th\nInternational Conference on World Wide Web,\nMadrid, Spain, 2009, pages 841-850.\n[18] M.T. Banday and N.A. Shah, \"Image Flip\nCAPTCHA,\" The ISC Int'l Journal of\nInformation Security, Vol. 1, No. 2, July 2009, pp.\n105-123.\n[19] T.Y Chan. \"Using a Text-to-Speech Synthesizer to\nGenerate a Reverse Turing Test\", In Proceedings of\nthe 15th IEEE International Conference on Tools\nwith Artificial Intelligence, Sacramento, CA, USA,\n2003, pp. 226-232.\n[20] M. Chew and J. D. Tygar, \"Collaborative Filtering\nCAPTCHAs\", In Proceedings of the 2nd\nInternational Workshop on Human Interactive\nProofs (HIP'05), Bethlehem, PA, USA, 2005, pp.\n66-81, Springer.\n[21] H. S. Baird and J. L. Bentley, \"Implicit\nCAPTCHAs\", In Proceedings of the IS&T/SPIE\nDocument Recognition & Retrieval XII\nConference, San Jose, CA, USA, 2005, pp. 191196.\n[22] C. Pope and K. Kaur, \"Is It Human or Computer?\nDefending E-Commerce with Captchas\", IEEE IT\nProfessional, Vol. 7, No. 2, 2005, 43-49.\n[23] T. Converse, \"CAPTCHA generation as a web\nservice,\" In proceedings of 2nd International\nworkshop on Human Interactive Proofs (HIP'05)\ned. by H. S. Baird and D. P. Lopresti, SpringerVerlog. LNCS 3517, Bethlerem, PA, USA, 2005, pp.\n82-96.\n[24] J. Yen and A. S. Ahmad, \"Breaking Visual\nCAPTCHAs with Nave Pattern Recognition\nAlgorithms\", In Proceedings of the 23rd Annual\nComputer Security Applications Conference,\nMiami Beach, Florida, USA, 2007, pp. 279-291,\nIEEE Computer Society.\n[25] J. Yen and A. S. Ahmad, \"A Low-cost Attack on\nMicrosoft CAPTCHA\" In Proceedings of the 15th\nACM\nConference\non\nComputer\nand\n\n\fIJSDIA International Journal of Secure Digital Information Age, Vol. 1. No. 2\n\n74\n\n[26]\n\n[27]\n\n[28]\n\n[29]\n\n[30]\n\n[31]\n[32]\n\n[33]\n\nCommunications Security, Alexandria, Virginia,\nUSA, 2008, pp. 543-554.\nP. Gutmann, D. Naccache and C. C. Palme,\n\"CAPTCHAs: Humans vs. Bots\", IEEE Security &\nPrivacy, 2006, pp. 68-70.\nY. Mingqiqng, K. Kidiyo and R. Joseph, \"Shape\nMatching and Object Recognition Using Chord\nContexts\", In proceedings of Visualizations, 2008\nInternational Conference, July 2008, pp. 63-69.\nJ. Elson, J. R. Douceur, J. Howell, and J. Saul.\nAsirra: A CAPTCHA that Exploits Interest-Aligned\nManual Image Categorization. In Proceedings of\n14th ACM Conference on Computer and\nCommunications Security (CCS), Alexandria,\nVirginia, USA, 2007, pp. 366-374, ACM.\nM. S. Lew, N. Sebe, C. Djeraba, and R. Jain,\n\"Content-Based Multimedia Information Retrieval:\nState of the Art and Challenges\", ACM\nTransactions\non\nMultimedia\nComputing,\nCommunications,\nand\nApplications\n(TOMCCAP), Vol. 2, No. 1, 2006, pp.1-19.\nR. Jones and K. L. Klinker, \"Beyond the Session\nTimeout: Automatic Hierarchical Segementation of\nSearch Topics in Query Logs\" , In Proceedings of\nthe 17th ACM Conference on Information and\nKnowledge Management, Napa Valley, California,\nUSA, 2008, pp. 699-708.\nISO,\n\"International\nOrganization\nfor\nStandardization\", http://www.iso.org\nJ. Yan and A. S. Ahmad, \" Usability of CAPTCHAs\nor Usability Issues in CAPTCHA Design\", In\nProceedings of the 4th Symposium on Usable\nPrivacy and Security, Pittsburgh, PA, USA, 2008,\npp. 44-52.\nG. Sauer, H. Hochheiser, J. Feng, and J. Lazar,\n\"Towards a Universally Usable CAPTCHA. In\nProceedings of the Symposium on Accessible\nPrivacy and Security\", ACM Symposium On\nUsable Privacy and Security (SOUPS'08),\nPittsburgh, PA, USA, 2008.\n\nBiographies\nM. Tariq Banday was born in 1969.\nHe did his M. Sc. and M. Phil. Degrees\nfrom the Department of Electronics,\nUniversity of Kashmir, Srinagar, India\nin 1996 and 2008 respectively. He did\nadvanced diploma course in computers\nand qualified UGC NET examination\nin 1997 and 1998. At present he is\nworking as Assistant Professor in the\nDepartment\nof\nElectronics\n&\nInstrumentation\nTechnology,\nUniversity of Kashmir, Srinagar, India. He has to his credit\nseveral research publications in reputed journals and conference\nproceedings. He is a lifetime member of Computer Society of\nIndia and International Association of Engineers. His current\nresearch interests include Network Security, Internet Protocols\nand Network Architecture.\n\nNisar A. Shah was born in 1953. He\ndid his M. Sc. and Ph. D. Degrees\nfrom the department of Physics,\nUniversity of Kashmir, Srinagar, India\nin 1976 and 1981 respectively. At\npresent he is working as Professor in\nthe Department of Electronics &\nInstrumentation\nTechnology,\nUniversity of Kashmir. He has to his\ncredit about 150 research publications\nwhich have been published in national\nand international journals of repute. He has supervised several\nresearch scholars in M. Phil. and Ph. D. programs. His current\nresearch interests include Digital Signal Processing and Network\nSecurity.\n\n\f"}