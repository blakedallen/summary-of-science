{"id": "http://arxiv.org/abs/1111.0046v1", "guidislink": true, "updated": "2011-10-31T21:50:57Z", "updated_parsed": [2011, 10, 31, 21, 50, 57, 0, 304, 0], "published": "2011-10-31T21:50:57Z", "published_parsed": [2011, 10, 31, 21, 50, 57, 0, 304, 0], "title": "Chain: A Dynamic Double Auction Framework for Matching Patient Agents", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1111.4684%2C1111.0095%2C1111.0046%2C1111.5696%2C1111.4909%2C1111.6640%2C1111.4032%2C1111.1827%2C1111.4921%2C1111.6882%2C1111.2289%2C1111.0006%2C1111.1764%2C1111.1529%2C1111.6773%2C1111.3497%2C1111.3983%2C1111.6697%2C1111.4950%2C1111.0130%2C1111.5737%2C1111.5048%2C1111.3225%2C1111.6134%2C1111.4569%2C1111.5406%2C1111.3535%2C1111.5994%2C1111.1875%2C1111.2624%2C1111.6743%2C1111.6578%2C1111.0054%2C1111.2304%2C1111.4852%2C1111.3122%2C1111.2411%2C1111.6554%2C1111.4295%2C1111.2823%2C1111.1628%2C1111.2151%2C1111.3452%2C1111.0915%2C1111.5910%2C1111.1222%2C1111.3160%2C1111.5856%2C1111.1994%2C1111.5080%2C1111.1004%2C1111.5139%2C1111.4658%2C1111.2663%2C1111.5077%2C1111.5903%2C1111.2830%2C1111.5079%2C1111.3056%2C1111.3717%2C1111.1547%2C1111.0252%2C1111.2299%2C1111.4547%2C1111.4021%2C1111.7045%2C1111.2894%2C1111.1489%2C1111.2588%2C1111.6590%2C1111.5842%2C1111.1256%2C1111.1084%2C1111.4936%2C1111.3059%2C1111.3484%2C1111.4778%2C1111.3446%2C1111.7070%2C1111.1219%2C1111.1612%2C1111.0553%2C1111.4539%2C1111.3655%2C1111.0141%2C1111.3973%2C1111.0645%2C1111.5510%2C1111.5505%2C1111.3173%2C1111.6825%2C1111.2919%2C1111.3529%2C1111.6123%2C1111.3716%2C1111.5628%2C1111.4720%2C1111.2661%2C1111.5087%2C1111.2438%2C1111.2630&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Chain: A Dynamic Double Auction Framework for Matching Patient Agents"}, "summary": "In this paper we present and evaluate a general framework for the design of\ntruthful auctions for matching agents in a dynamic, two-sided market. A single\ncommodity, such as a resource or a task, is bought and sold by multiple buyers\nand sellers that arrive and depart over time. Our algorithm, Chain, provides\nthe first framework that allows a truthful dynamic double auction (DA) to be\nconstructed from a truthful, single-period (i.e. static) double-auction rule.\nThe pricing and matching method of the Chain construction is unique amongst\ndynamic-auction rules that adopt the same building block. We examine\nexperimentally the allocative efficiency of Chain when instantiated on various\nsingle-period rules, including the canonical McAfee double-auction rule. For a\nbaseline we also consider non-truthful double auctions populated with\nzero-intelligence plus\"-style learning agents. Chain-based auctions perform\nwell in comparison with other schemes, especially as arrival intensity falls\nand agent valuations become more volatile.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1111.4684%2C1111.0095%2C1111.0046%2C1111.5696%2C1111.4909%2C1111.6640%2C1111.4032%2C1111.1827%2C1111.4921%2C1111.6882%2C1111.2289%2C1111.0006%2C1111.1764%2C1111.1529%2C1111.6773%2C1111.3497%2C1111.3983%2C1111.6697%2C1111.4950%2C1111.0130%2C1111.5737%2C1111.5048%2C1111.3225%2C1111.6134%2C1111.4569%2C1111.5406%2C1111.3535%2C1111.5994%2C1111.1875%2C1111.2624%2C1111.6743%2C1111.6578%2C1111.0054%2C1111.2304%2C1111.4852%2C1111.3122%2C1111.2411%2C1111.6554%2C1111.4295%2C1111.2823%2C1111.1628%2C1111.2151%2C1111.3452%2C1111.0915%2C1111.5910%2C1111.1222%2C1111.3160%2C1111.5856%2C1111.1994%2C1111.5080%2C1111.1004%2C1111.5139%2C1111.4658%2C1111.2663%2C1111.5077%2C1111.5903%2C1111.2830%2C1111.5079%2C1111.3056%2C1111.3717%2C1111.1547%2C1111.0252%2C1111.2299%2C1111.4547%2C1111.4021%2C1111.7045%2C1111.2894%2C1111.1489%2C1111.2588%2C1111.6590%2C1111.5842%2C1111.1256%2C1111.1084%2C1111.4936%2C1111.3059%2C1111.3484%2C1111.4778%2C1111.3446%2C1111.7070%2C1111.1219%2C1111.1612%2C1111.0553%2C1111.4539%2C1111.3655%2C1111.0141%2C1111.3973%2C1111.0645%2C1111.5510%2C1111.5505%2C1111.3173%2C1111.6825%2C1111.2919%2C1111.3529%2C1111.6123%2C1111.3716%2C1111.5628%2C1111.4720%2C1111.2661%2C1111.5087%2C1111.2438%2C1111.2630&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "In this paper we present and evaluate a general framework for the design of\ntruthful auctions for matching agents in a dynamic, two-sided market. A single\ncommodity, such as a resource or a task, is bought and sold by multiple buyers\nand sellers that arrive and depart over time. Our algorithm, Chain, provides\nthe first framework that allows a truthful dynamic double auction (DA) to be\nconstructed from a truthful, single-period (i.e. static) double-auction rule.\nThe pricing and matching method of the Chain construction is unique amongst\ndynamic-auction rules that adopt the same building block. We examine\nexperimentally the allocative efficiency of Chain when instantiated on various\nsingle-period rules, including the canonical McAfee double-auction rule. For a\nbaseline we also consider non-truthful double auctions populated with\nzero-intelligence plus\"-style learning agents. Chain-based auctions perform\nwell in comparison with other schemes, especially as arrival intensity falls\nand agent valuations become more volatile."}, "authors": ["J. L. Bredin", "Q. Duong", "D. C. Parkes"], "author_detail": {"name": "D. C. Parkes"}, "author": "D. C. Parkes", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1613/jair.2303", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/1111.0046v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1111.0046v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.GT", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.GT", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1111.0046v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1111.0046v1", "arxiv_comment": null, "journal_reference": "Journal Of Artificial Intelligence Research, Volume 30, pages\n  133-179, 2007", "doi": "10.1613/jair.2303", "fulltext": "Journal of Artificial Intelligence Research 30 (2007) 133\u2013179\n\nSubmitted 3/07; published 9/07\n\nChain: A Dynamic Double Auction Framework for Matching\nPatient Agents\nJonathan Bredin\n\nbredin@acm.org\n\narXiv:1111.0046v1 [cs.GT] 31 Oct 2011\n\nDept. of Mathematics and Computer Science, Colorado College\nColorado Springs, CO 80903, USA\n\nDavid C. Parkes\nQuang Duong\n\nparkes@eecs.harvard.edu\nqduong@fas.harvard.edu\n\nSchool of Engineering and Applied Sciences, Harvard University\nCambridge, MA 02138, USA\n\nAbstract\nIn this paper we present and evaluate a general framework for the design of truthful\nauctions for matching agents in a dynamic, two-sided market. A single commodity, such\nas a resource or a task, is bought and sold by multiple buyers and sellers that arrive\nand depart over time. Our algorithm, Chain, provides the first framework that allows a\ntruthful dynamic double auction (DA) to be constructed from a truthful, single-period (i.e.\nstatic) double-auction rule. The pricing and matching method of the Chain construction\nis unique amongst dynamic-auction rules that adopt the same building block. We examine\nexperimentally the allocative efficiency of Chain when instantiated on various single-period\nrules, including the canonical McAfee double-auction rule. For a baseline we also consider\nnon-truthful double auctions populated with \"zero-intelligence plus\"-style learning agents.\nChain-based auctions perform well in comparison with other schemes, especially as arrival\nintensity falls and agent valuations become more volatile.\n\n1. Introduction\nElectronic markets are increasingly popular as a method to facilitate increased efficiency\nin the supply chain, with firms using markets to procure goods and services. Two-sided\nmarkets facilitate trade between many buyers and many sellers and find application to\ntrading diverse resources, including bandwidth, securities and pollution rights. Recent\nyears have also brought increased attention to resource allocation in the context of ondemand computing and grid computing. Even within settings of cooperative coordination,\nsuch as those of multiple robots, researchers have turned to auctions as methods for task\nallocation and joint exploration (Gerkey & Mataric, 2002; Lagoudakis et al., 2005; Lin &\nZheng, 2005).\nIn this paper we consider a dynamic two-sided market for a single commodity, for instance a unit of a resource (e.g. time on a computer, some quantity of memory chips) or\na task to perform (e.g. a standard database query to execute, a location to visit). Each\nagent, whether buyer or seller, arrives dynamically and needs to be matched within a time\ninterval. Cast as a task-allocation problem, a seller can perform the task when allocated\nwithin some time interval and incurs a cost when assigned. A buyer has positive value for\nthe task being assigned (to any seller) within some time interval. The arrival time, acceptable time interval, and value (negative for a seller) for a trade are all private information\nc 2007 AI Access Foundation. All rights reserved.\n\n\fBredin, Parkes and Duong\n\nto an agent. Agents are self-interested and can choose to misrepresent all and any of this\ninformation to the market in order to obtain a more desirable price.\nThe matching problem combines elements of online algorithms and sequential decision\nmaking with considerations from mechanism design. Unlike traditional sequential decision\nmaking, a protocol for this problem must provide incentives for agents to report truthful\ninformation to a match-maker. Unlike traditional mechanism design, this is a dynamic\nproblem with agents that arrive and leave over time. We model this problem as a dynamic\ndouble auction (DA) for identical items. The match-maker becomes the auctioneer. Each\nseller brings a task to be performed during a time window and each buyer brings the\ncapability to perform a single task. The double-auction setting also is of interest in its own\nright as a protocol for matching in a dynamic business-to-business exchange.\nUncertainty about the future coupled with the two-sided nature of the market leads to\nan interesting mechanism design problem. For example, consider the scenario where the\nauctioneer must decide how (and whether) to match a seller with reported cost of $6 at the\nend of its time interval with a present and unmatched buyer, one of which has a reported\nvalue of $8 and one a reported value of $9. Should the auctioneer pair the higher bidder\nwith the seller? What happens if a seller, willing to sell for $4, arrives after the auctioneer\nacts upon the matching decision? How should the matching algorithm be designed so that\nno agent can benefit from misstating its earliest arrival, latest departure, or value for a\ntrade?\nChain provides a general framework that allows a truthful dynamic double auction to\nbe constructed from a truthful, single-period (i.e. static) double-auction rule. The auctions\nconstructed by Chain are truthful, in the sense that the dominant strategy for an agent,\nwhatever the future auction dynamics and bids from other agents, is to report its true\nvalue for a trade (negative if selling) and true patience (maximal tolerance for trade delay)\nimmediately upon arrival into the market. We also allow for randomized mechanisms and,\nin this case, require strong truthfulness: the DA should be truthful for all possible random\ncoin flips of the mechanism. One of the DAs in the class of auctions implied by Chain\nis a dynamic generalization of McAfee's (1992) canonical truthful, no-deficit auction for a\nsingle period. Thus, we provide the first examples of truthful, dynamic DAs that allow for\ndynamic price competition between buyers and sellers.1\nThe main technical challenge presented by dynamic DAs is to provide truthfulness without incurring a budget deficit, while handling uncertainty about future trade opportunities.\nOf particular concern is to ensure that an agent does not indirectly affect its price through\nthe effect of its bid on the prices faced by other agents and thus other supply and demand\nin the market. We need to preclude this because the availability of trades depends on the\nprice faced by other agents. For example, a buyer that is required to pay $4 in the DA to\ntrade might like to decrease the price that a potentially matching seller will receive from $6\nto $3 to allow for trade.\nChain is a modular approach to auction design, which takes as a building block a singleperiod matching rule and provides a method to invoke the rule in each of multiple periods\nwhile also providing for truthfulness. We characterize properties that a well-defined single1. The closest work in the literature is due to Blum et al. (2006), who present a truthful, dynamic DA for\nour model that matches bids and asks based on a price sampled from some bid-independent distribution.\nWe compare the performance of our schemes with this scheme in Section 6.\n\n134\n\n\fChain: An Online Double Auction\n\nperiod matching rule must satisfy in order for Chain to be truthful. We further identify the\ntechnical property of strong no-trade, with which we can isolate agents that fail to trade in\nthe current period but can nevertheless survive and be eligible to trade in a future period.\nAn auction designer defines the strong no-trade predicate, in addition to providing a welldefined single-period matching rule. Instances within this class include those constructed\nin terms of both \"price-based\" matching rules and \"competition-based\" matching rules.\nBoth can depend on history and be adaptive, but only the competition-based rules use the\nactive bids and asks to determine the prices in the current period, facilitating a more direct\ncompetitive processes.\nIn proving that Chain, when combined with a well-defined matching rule and a valid\nstrong no-trade predicate, is truthful we leverage a recent price-based characterization for\ntruthful online mechanisms (Hajiaghayi et al., 2005). We also show that the pricing and\nmatching rules defined by Chain are unique amongst the family of mechanisms that are\nconstructed with a single-period matching rule as a building block. Throughout our work we\nassume that a constant limits every buyer and seller's patience. To motivate this assumption\nwe provide a simple environment in which no truthful, no-deficit DA can implement some\nconstant fraction of the number of the efficient trades, for any constant.\nWe adopt allocative efficiency as our design objective, which is to say auction protocols\nthat maximize the expected total value from the sequence of trades. We also consider net\nefficiency, wherein any net outflow of payments to the marketmaker is also accounted for in\nconsidering the quality of a design. Experimental results explore the allocative efficiency of\nChain when instantiated to various single-period matching rules and for a range of different\nassumptions about market volatility and maximal patience. For a baseline we consider the\nefficiency of a standard (non-truthful) open outcry DA populated with simple adaptive\ntrading agents modeled after \"zero-intelligence plus\" (ZIP) agents (Cliff & Bruten, 1998;\nPreist & van Tol, 1998). We also compare the efficiency of Chain with that of a truthful\nonline DA due to Blum et al. (2006), which selects a fixed trading price to guarantee\ncompetitiveness in an adversarial model.\nFrom within the truthful mechanisms we find that adaptive, price-based instantiations\nof Chain are the most effective for high arrival intensity and low volatility. Even defining\na single, well-chosen price that is optimized for the market conditions can be reasonably\neffective in promoting efficient trades in low volatility environments. On the other hand,\nfor medium to low arrival intensity and medium to high volatility we find that the Chainbased DAs that allow for dynamic price competition, such as the McAfee-based rule, are\nmost efficient. The same qualitative observations hold whether one is interested in allocative efficiency or net efficiency, although the adaptive, price-based methods have better\nperformance in terms of net efficiency. The Blum et al. (2006) rule fairs poorly in our\ntests, which is perhaps unsurprising given that it is optimized for worst-case performance\nin an adversarial setting. When populated with ZIP agents, we find that non-truthful DAs\ncan provide very good efficiency in low volatility environments but poor performance in\nhigh volatility environments. The good performance of the ZIP-based market occurs when\nagents learn to bid approximately truthfully; i.e., when the market operates as if truthful,\nbut without incurring the stringent cost (e.g., through trading constraints) of imposing\ntruthfulness explicitly. An equilibrium analysis is available only for the truthful DAs; we\n135\n\n\fBredin, Parkes and Duong\n\nhave no way of knowing how close the ZIP agents are to playing an equilibrium, and note\nthat the ZIP agents do not even consider performing time-based manipulations.\n1.1 Outline\nSection 2 introduces the dynamic DA model, including our assumptions, and presents\ndesiderata for online DAs and a price-based characterization for the design of truthful\ndynamic auctions. Section 3 defines the Chain algorithm together with the building block\nof a well-defined, single-period matching rule and the strong no-trade predicate. Section 4\ngives a number of instantiations to both price-based and competition-based matching rules,\nincluding a general method to define the strong no-trade predicate given a price-based instantiation. Section 5 proves truthfulness, no-deficit and feasibility of the Chain auctions\nand also establishes their uniqueness amongst auctions constructed from the same singleperiod matching-rule building block. The importance of the assumption about maximal\nagent patience is established. Section 6 presents our empirical analysis, including a description of the simple adaptive agents that we use to populate a non-truthful open-outcry DA\nand provide a benchmark. Section 7 gives related work. In Section 8 we conclude with a\ndiscussion about the merits of truthfulness in markets and present possible extensions.\n\n2. Preliminaries: Basic Definitions\nConsider a dynamic auction model with discrete, possibly infinite, time periods T =\n{1, 2, . . .}, indexed by t. The double auction (DA) provides a market for a single commodity.\nAgents are either buyers or sellers interested in trading a single unit of the commodity. An\nagent's type, \u03b8i = (ai , di , wi ) \u2208 \u0398i , where \u0398i is the set of possible types for agent i, defines\nan arrival ai , departure di , and value wi \u2208 R for trade. If the agent is a buyer, then wi > 0.\nIf the agent is a seller, then wi \u2264 0. We assume a maximal patience K, so that di \u2264 ai + K\nfor all agents.\nThe arrival time models the first time at which an agent learns about the market or\nlearns about its value for a trade. Thus, information about its type is not available before\nperiod ai (not even to agent i) and the agent cannot engage in trade before period ai . The\ndeparture time, di , models the final period in which a buyer has positive value for a trade,\nor the final period in which a seller is willing to engage in trade. We model risk-neutral\nagents with quasi-linear utility, wi \u2212 p when a trade occurs in t \u2208 [ai , di ] and payment p\nis collected (with p < 0 if the agent is a seller). Agents are rational and self-interested,\nand act to maximize expected utility. By assumption, sellers have no utility for payments\nreceived after their true departure period.\nThroughout this paper we adopt bid to refer, generically, to a claim that an agent \u2013\neither a buyer or a seller \u2013 makes to a DA about its type. In addition, when we need to be\nspecific about the distinction between claims made by buyers and claims made by sellers\nwe refer to the bid from a buyer and the ask from a seller.\n2.1 Example\nConsider the following naive generalization of the (static) trade-reduction DA (Lavi & Nisan,\n2005; McAfee, 1992) to this dynamic environment. A bid from an agent is a claim about\n136\n\n\fChain: An Online Double Auction\n\nits type \u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i ), necessarily made in period t = \u00e2i . Bids are active while t \u2208 [\u00e2i , d\u02c6i ]\nand no trade has occurred.\nThen in each period t, use the trade-reduction DA to determine which (if any) of the\nactive bids trade and at what price. These trades occur immediately. The trade-reduction\nDA (tr-DA) works as follows: Let B denote the set of bids and S denote the set of asks.\nInsert a dummy bid with value +\u221e into B and a dummy ask with value 0 into S. When\n|B| \u2265 2 and |S| \u2265 2 then sort B and S in order of decreasing value. Let \u0175b0 \u2265 \u0175b1 \u2265 . . . and\n\u0175s0 \u2265 \u0175s1 \u2265 . . . denote the bid and ask values with (b0 , s0 ) denoting the dummy bid-ask\npair. Let m \u2265 0 index the last pair of bids and asks to clear in the efficient trade, such that\n\u0175bm + \u0175sm \u2265 0 and \u0175bm+1 + \u0175sm+1 < 0. When m \u2265 2 then bids {b1 , . . . , bm\u22121 } and asks\n{s1 , . . . , sm\u22121 } trade and payment \u0175bm is collected from each winning buyer and payment\n\u2212\u0175sm is made to each winning seller.\nFirst consider a static tr-DA with the following bids and asks:\nS\nB\ni \u0175i i \u0175i\nb\u22171 15 s\u22171 -1\nb\u22172 10 s\u22172 -1\nb\u22173 4 s\u22173 -2\nb4 3 s4 -2\ns5 -5\nThe line indicates that bids (1\u20134) and asks (1\u20134) could be matched for efficient trade.\nBy the rules of the tr-DA, bids (1\u20133) and asks (1\u20133) trade, with payments $3 collected from\nwinning buyers and payment $2 made to winning sellers. The auctioneer earns a profit of\n$3. The asterisk notation indicates the bids and asks that trade. The tr-DA is truthful, in\nthe sense that it is a dominant-strategy for every agent to report its true value whatever\nthe reports of other agents. For intuition, consider the buy-side. The payment made by\nwinners is independent of their bid price while the losing bidder could only win by bidding\nmore than $4, at which point his payment would be $4 and more than his true value.\nNow consider a dynamic variation with buyer types {(1, 2, 15), (1, 2, 10), (1, 2, 4), (2, 2, 3)}\nand seller types {(1, 2, \u22121), (2, 2, \u22121), (1, 1, \u22122), (2, 2, \u22122), (1, 2, \u22125)}. When agents are truthful, the dynamic tr-DA plays out as follows:\nperiod 1\nperiod 2\nS\nB\nS\nB\ni \u0175i i \u0175i\ni \u0175i i \u0175i\nb\u22171 15 s\u22171 -1\nb\u22172 10 s\u22172 -1\nb3 4 s4 -2\nb2 10 s3 -2\nb3 4 s5 -5\nb4 3 s5 -5\nIn period 1, buyer 1 and seller 1 trade at payments of $10 and $2 respectively. In\nperiod 2, buyer 2 and seller 2 trade at payments of $4 and $2 respectively. But now we can\nconstruct two kinds of manipulation to show that this dynamic DA is not truthful. First,\nbuyer 1 can do better by delaying his reported arrival until period 2:\n137\n\n\fBredin, Parkes and Duong\n\nperiod 1\nperiod 2\nS\nB\nS\nB\ni \u0175i i \u0175i\ni \u0175i i \u0175i\nb\u22171 15 s\u22172 -1\nb\u22172 10 s\u22171 -1\nb3 4 s4 -2\nb3 4 s3 -2\ns5 -5\nb4 3 s5 -5\nNow, buyer 2 trades in period 1 and does not set the price to buyer 1 in period 2. Instead,\nbuyer 1 now trades in period 2 and makes payment $4.\nSecond, buyer 3 can do better by increasing his reported value:\nperiod 1\nperiod 2\nS\nB\nS\nB\ni \u0175i i \u0175i\ni \u0175i i \u0175i\nb\u22173 6 s\u22172 -1\nb\u22171 15 s\u22171 -1\n\u2217\n\u2217\nb2 10 s3 -2\nb4 3 s4 -2\nb3 6 s5 -5\ns5 -5\nNow, buyers 1 and 2 both trade in period 1 and this allows buyer 3 to win (at a price\nbelow his true value) in period 2. This is a particularly interesting manipulation because\nthe agent's manipulation is by increasing its bid above its true value. By doing so, it allows\nmore trades to occur and makes the auction less competitive in the next period.\n2.2 Dynamic Double Auctions: Desiderata\nWe consider only direct-revelation, dynamic DAs that restrict the message that an agent\ncan send to the auctioneer to a single, direct claim about its type. We also consider \"closed\"\nauctions so that an agent receives no feedback before reporting its type and cannot condition\nits strategy on the report of another agent.2\nGiven this, let \u03b8 t denote the set of agent types reported in period t, \u03b8 = (\u03b8 1 , \u03b8 2 , . . . , \u03b8 t , . . . , )\ndenote a complete type profile (perhaps unbounded), and \u03b8 \u2264t denote the type profile restricted to agents with (reported) arrival no later than period t. A report \u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i )\nrepresents a commitment to buy (sell) one unit of the commodity in any period t \u2208 [\u00e2i , d\u02c6i ]\nfor a payment of at most \u0175i . Thus, if a seller reports a departure time d\u02c6i > di , it must\ncommit to complete a trade that occurs after her true departure and even though a seller\nis modeled as having no utility for payments received after her true departure.\nA dynamic DA, M = (\u03c0, x), defines an allocation policy \u03c0 = {\u03c0 t }t\u2208T and payment\npolicy x = {xt }t\u2208T , where \u03c0it (\u03b8 \u2264t ) \u2208 {0, 1} indicates whether or not agent i trades in period\nt given reports \u03b8 \u2264t, and xti (\u03b8 \u2264t ) \u2208 R indicates a payment made by agent i, negative if this is\na payment received by the agent. The auction rules can also be stochastic, so that \u03c0it (\u03b8 \u2264t )\nand xti (\u03b8 \u2264t ) are random variables. For a dynamic DA to be well defined, it must hold that\n\u03c0it (\u03b8 \u2264t ) = 1 in at most one period t \u2208 [ai , di ] and zero otherwise, and the payment collected\nfrom agent i is zero except in periods t \u2208 [ai , di ].\nIn formalizing the desiderata for dynamic DAs, it will be convenient to adopt (\u03c0(\u03b8), x(\u03b8))\nto denote the complete sequence of allocation decisions given reports \u03b8, with shorthand\n2. The restriction to direct-revelation, online mechanisms is without loss of generality when combined with\na simple heart-beat message from an agent to indicate its presence in any period t during its reported\narrival-departure interval. See the work of Pai and Vohra (2006) and Parkes (2007).\n\n138\n\n\fChain: An Online Double Auction\n\n\u03c0i (\u03b8) \u2208 {0, 1} and xi (\u03b8) \u2208 R to indicate whether agent i trades during its reported arrivaldeparture interval, and the total payment made by agent i, respectively. By a slight abuse\nof notation, we write i \u2208 \u03b8 \u2264t to denote that agent i reported a type no later than period t.\nLet B denote the set of buyers and S denote the set of sellers.\nWe shall require that the dynamic DA satisfies no-deficit, feasibility, individual-rationality\nand truthfulness. No-deficit ensures that the auctioneer has a cash surplus in every period:\nDefinition 1 (no-deficit) A dynamic DA, M = (\u03c0, x) is no-deficit if:\nX\nX\n\u2032\n\u2032\nxti (\u03b8 \u2264t ) \u2265 0, \u2200t, \u2200\u03b8\n\n(1)\n\ni\u2208\u03b8 \u2264t t\u2032 \u2208[ai ,min(t,di )]\n\nFeasibility ensures that the auctioneer does not need to take a short position in the\ncommodity traded in the market in any period:\nDefinition 2 (feasible trade) A dynamic DA, M = (\u03c0, x) is feasible if:\nX\nX\nX\nX\n\u2032\n\u2032\n\u2032\n\u2032\n\u03c0it (\u03b8 \u2264t ) \u2265 0, \u2200t, \u2200\u03b8\n\u03c0it (\u03b8 \u2264t ) \u2212\ni\u2208\u03b8 \u2264t ,i\u2208S t\u2032 \u2208[ai ,min(t,di )]\n\n(2)\n\ni\u2208\u03b8 \u2264t ,i\u2208B t\u2032 \u2208[ai ,min(t,di )]\n\nThis definition of feasible trade assumes that the auctioneer can \"hold\" an item that\nis matched between a seller-buyer pair, for instance only releasing it to the buyer upon\nhis reported departure. See the remark concluding this section for a discussion of this\nassumption.\nLet vi (\u03b8i , \u03c0(\u03b8i\u2032 , \u03b8\u2212i )) \u2208 R denote the value of an agent with type \u03b8i for the allocation\ndecision made by policy \u03c0 given report (\u03b8i\u2032 , \u03b8\u2212i ), i.e. vi (\u03b8i , \u03c0(\u03b8i\u2032 , \u03b8\u2212i )) = wi if the agent\ntrades in period t \u2208 [ai , di ] and 0 if it trades outside of this interval and is a buyer, or \u2212\u221e if\nit trades outside of this interval and is a seller. Individual-rationality requires that agent i's\nutility is non-negative when it reports its true type, whatever the reports of other agents:\nDefinition 3 (individual-rational) A dynamic DA, M = (\u03c0, x) is individual-rational\n(IR) if vi (\u03b8i , \u03c0(\u03b8)) \u2212 xi (\u03b8) \u2265 0 for all i, all \u03b8.\nIn order to define truthfulness, we introduce notation C(\u03b8i ) \u2286 \u0398i for \u03b8i \u2208 \u0398i to denote\nthe set of available misreports to an agent with true type \u03b8i . In the standard model adopted\nin offline mechanism design, it is typical to assume C(\u03b8i ) = \u0398i with all misreports available.\nHere, we shall assume no early-arrival misreports, with C(\u03b8i ) = {\u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i ) : ai \u2264 \u00e2i \u2264\nd\u02c6i }. This assumption of limited misreports is adopted in earlier work on online mechanism\ndesign (Hajiaghayi et al., 2004), and is well-motivated when the arrival time is the first\nperiod in which a buyer first decides to acquire an item or the period in which a seller first\ndecides to sell an item.\nDefinition 4 (truthful) Dynamic DA, M = (\u03c0, x), is dominant-strategy incentivecompatible, or truthful, given limited misreports C if:\n\u2032\n\u2032\n\u2032\n\u2032\nvi (\u03b8i , \u03c0(\u03b8i , \u03b8\u2212i\n)) \u2212 xi (\u03b8i , \u03b8\u2212i\n) \u2265 vi (\u03b8i , \u03c0(\u03b8\u0302i , \u03b8\u2212i\n)) \u2212 xi (\u03b8\u0302i , \u03b8\u2212i\n).\n\u2032 \u2208 C(\u03b8 ), all \u03b8\nfor all \u03b8\u0302i \u2208 C(\u03b8i ), all \u03b8i , all \u03b8\u2212i\n\u2212i\n\u2212i \u2208 \u0398\u2212i .\n\n139\n\n\fBredin, Parkes and Duong\n\nThis is a robust equilibrium concept: an agent maximizes its utility by reporting its\ntrue type whatever the reports of other agents. Truthfulness is useful because it simplifies\nthe decision problem facing bidders: an agent can determine its optimal bidding strategy\nwithout a model of either the auction dynamics or the other agents. In the case that\nthe allocation and payment policy is stochastic, then we adopt the requirement of strong\ntruthfulness so that an agent maximizes its utility whatever the random sequence of coin\nflips within the auction.\nRemark. The flexible definition of feasibility, in which the auctioneer is able to take a\nlong position in the commodity, allows the auctioneer to time trades by receiving the unit\nsold by a seller in one period but only releasing it to a buyer in a later period. This allows\nfor truthfulness in environments in which bidders can overstate their departure period. In\nsome settings this is an unreasonable requirement, however, for instance when the commodity represents a task that is performed, or because a physical good is being traded\nin an electronic market.3 In these cases, the definition of feasibility strengthened to require exact trade-balance in every period. The tradeoff is that available misreports must\nbe further restricted, with agents limited to reporting no late-departures in addition to no\nearly-arrivals (Lavi & Nisan, 2005; Hajiaghayi et al., 2005). For the rest of the paper we\nwork in the \"relaxed feasibility, no early-arrival\" model. The Chain framework can be immediately extended to the \"strong-feasibility, no early-arrival and no late-departure\" model\nby executing trades immediately rather than delaying the trade until a buyer's departure.\n\n3. Chain: A Framework for Truthful Dynamic DAs\nChain provides a general algorithmic framework with which to construct truthful dynamic\nDAs from well-defined single-period matching rules, such as the tr-DA rules described in\nthe earlier section.\nBefore introducing Chain we need a few more definitions: Bids reported to Chain are\nactive while t \u2264 d\u02c6i (for reported departure period d\u02c6i ), and while the bid is unmatched\nand still eligible to be matched. In each period, a single-period matching rule is used to\ndetermine whether any of the active bids will trade and also which (if any) of the bids that\ndo not match will remain active in the next period.\nNow we define the building blocks, well-defined single-period matching rules, and introduce the important concept of a strong no-trade predicate, which is defined for a singleperiod matching rule.\n3.1 Building Block: A Single-Period Matching Rule\nt\nn\nIn defining a matching rule, it is helpful to adopt bt \u2208 Rm\n>0 and s \u2208 R\u22640 to denote the\nactive bids and active asks in period t, where there are m \u2265 0 and n \u2265 0 bids and asks\nrespectively. The bids and asks that were active in earlier periods but are no longer active\nform the history in period t, denoted H t \u2208 Rh where h \u2265 0 is the size of the history.\nA single-period matching rule (hereafter a matching rule), Mmr = (\u03c0mr , xmr ) defines\nan allocation rule \u03c0mr (H t , bt , st , \u03c9) \u2208 {0, 1}(m+n) and a payment rule xmr (H t , bt , st , \u03c9) \u2208\n\n3. Note that if the task is a computational task, then tasks can be handled within this model by requiring\nthat the seller performs the task when it is matched but with a commitment to hold onto the result until\nthe matched buyer is ready to depart.\n\n140\n\n\fChain: An Online Double Auction\n\nfunction SimpleMatch(H t ,bt ,st )\nmatched := \u2205\npt := mean(|H t |)\nwhile (bt 6= \u2205)&(st 6= \u2205) do\ni := 0, bi := \u2212\u01eb, j := 0, sj := \u2212\u221e\nwhile (bi < pt )&(bt 6= \u2205) do\ni := random(bt ), bt := bt \\ {i}\nend while\nwhile (sj < \u2212pt )&(st 6= \u2205) do\nj := random(st ), st := st \\ {j}\nend while\nif (i 6= 0)&(j 6= 0) then\nmatched := matched \u222a {(i, j)}\nend if\nend while\nend function\n\nFigure 1: A well-defined matching rule defined in terms of the mean bid price in the history.\nR(m+n) . Here, we include random event \u03c9 \u2208 \u03a9 to allow explicitly for stochastic matching\nand allocation rules.\nDefinition 5 (well-defined matching rule) A matching rule Mmr = (\u03c0mr , xmr ) is welldefined when it is strongly truthful, no-deficit, individual-rational, and strong-feasible.\nHere, the properties of truthfulness, no-deficit, and individual-rationality are exactly\nthe single-period specializations of those defined in the previous section. For instance,\na matching rule is truthful in this sense when the dominant strategy for an agent in a\nDA defined with this rule, and in a static environment, is to bid truthfully and for all\npossible random events \u03c9. Similarly for individual-rationality. No-deficit requires that the\ntotal payments are always non-negative. Strong-feasibility requires that exactly the same\nnumber of asks are accepted as bids, again for all random events.\nOne example of a well-defined matching rule is the tr-DA, which is invariant to the\nhistory of bids and asks. For an example of a well-defined, adaptive (history-dependent)\nand price-based matching rule, consider procedure SimpleMatch in Figure 1. The SimpleMatch matching rule computes the mean of the absolute value of the bids and asks in\nthe history H t and adopts this as the clearing price in the current period. It is a stochastic\nmatching rule because bids and asks are picked from the sets bt and st at random and\noffered the price. We can reason about the properties of SimpleMatch as follows:\n(a) truthful: the price pt is independent of the bids and the probability that a bid (or\nask) is matched is independent of its bid (or ask) price\n(b) no-deficit: payment pt is collected from each matched buyer and made to each\nmatched seller\n(c) individual-rational: only bids bi \u2265 pt and asks sj \u2265 \u2212pt are accepted.\n(d) feasible: bids and asks are introduced to the \"matched\" set in balanced pairs\n141\n\n\fBredin, Parkes and Duong\n\n3.2 Reasoning about Trade (Im)Possibility\nIn addition to defining a matching rule Mmr , we allow a designer to (optionally) designate\na subset of losing bids that satisfy a property of strong no-trade. Bids that satisfy strong\nno-trade are losing bids for which trade was not possible at any bid price (c.f. ask price\nfor asks), and moreover for which additional independence conditions hold between bids\nprovided with this designation.\nWe first define the weaker concept of no-trade.\nIn the following, notation\n\u03c0mr,i (H t , bt , st , \u03c9|\u0175i ) indicates the allocation decision made for bid (or ask) i when its bid\n(ask) price is replaced with \u0175i :\nDefinition 6 (no-trade) Given matching rule Mmr = (\u03c0mr , xmr ) then the set of agents,\nNTt , for which no trade is possible in period t and given random events \u03c9 are those for\nwhich \u03c0mr,i (H t , bt , st , \u03c9|\u0175i ) = 0, for every \u0175i \u2208 R>0 when i \u2208 bt and for every \u0175i \u2208 R\u22640\nwhen i \u2208 st .\nIt can easily happen that no trade is possible, for instance when the agent is a buyer\nand there are no sellers on the other side of the market. Let SNTt \u2286 NTt denote the set\nof agents designated with the property of strong no-trade. Unlike the no-trade property,\nstrong no-trade need not be uniquely defined for a matching rule. To be valid, however, the\nconstruction offered by a designer for strong no-trade must satisfy the following:\nDefinition 7 (strong no-trade) A construction for strong no-trade, SNTt \u2286 NTt , is\nvalid for a matching rule when:\n(a) \u2200i \u2208 NTt with d\u02c6i > t, whether or not i \u2208 SNTt is unchanged for all alternate reports\n\u03b8i\u2032 = (a\u2032i , d\u2032i , wi\u2032 ) 6= \u03b8\u0302i while d\u2032i > t,\n(b) \u2200i \u2208 SNTt with d\u02c6i > t, the set {j : j \u2208 SNTt , j 6= i, d\u02c6j > t} is unchanged for all\nreports \u03b8i\u2032 = (a\u2032i , d\u2032i , wi\u2032 ) 6= \u03b8\u0302i while d\u2032i > t, and independent even of whether or not agent i is\npresent in the market.\nThe strong no-trade conditions must be checked only for agents with a reported departure later than the current period. Condition (a) requires that such an agent in NTt cannot\naffect whether or not it satisfies the strong no-trade predicate as long as it continues to\nreport a departure later than the current period. Condition (b) is defined recursively, and\nrequires that if such an agent is identified as satisfying strong no-trade, then its own report\nmust not affect the designation of strong no-trade to other agents, with reported departure\nlater than the current period, while it continues to report a departure later than the current\nperiod \u2013 even if it delays its reported arrival until a later period.\nStrong no-trade allows for flexibility in determining whether or not a bid is eligible for\nmatching. Specifically, only those bids that satisfy strong no-trade amongst those that lose\nin the current period can remain as a candidate for trade in a future period. The property\nis defined to ensure that such a \"surviving\" agent does not, and could not, affect the set of\nother agents against which it competes in future periods.\n142\n\n\fChain: An Online Double Auction\n\nExample 1 Consider the tr-DA matching rule defined earlier with bids and asks\nB\nS\n\u0175i\ni \u0175i i\n\u2217\n\u2217\nb1 10 s1 \u22124\nb2 8 s2 \u22126\nb3 6 s3 \u22128\nBid 1 and ask 1 trade at price 8 and \u22126 respectively. NTt = \u2205 because bids 2 and 3 could\neach trade if they had (unilaterally) submitted a bid price of greater than 10. Similarly for\nasks 2 and 3. Now consider the order book\nS\nB\ni \u0175i i\n\u0175i\nb1 8 s1 \u22126\nb2 7 s2 \u221210\nb3 2 s3 \u221212\nNo trade occurs. In this case, NTt = {b1 , b2 , b3 , s1 }. No trade is possible for any bids, even\nbids 2 and 3, because \u0175b1 + \u0175s2 = 8 \u2212 10 < 0. But, trade is possible for asks 2 and 3, because\n\u0175b2 + \u0175s1 = 7 \u2212 6 \u2265 0 and either ask could trade by submitting a low enough ask price.\nExample 2 Consider the tr-DA matching rule and explore possible alternative constructions for strong no-trade.\n(i) Dictatorial: in each period t, identify an agent that could be present in the period in\na way that is oblivious to all agent reports. Let i denote the index of this agent. If i \u2208 NTt ,\nthen include SNTt = {i}. Strong no-trade condition (a) is satisfied because whether or not i\nis selected as the \"dictator\" is agent-independent, and given that it is selected, then whether\nor not trade is possible is agent-independent. Condition (b) is trivially satisfied because\n|SNTt | = 1 and there is no cross-agent coupling to consider.\n(ii) SNTt := NTt . Consider the order book\nS\nB\ni \u0175i i\n\u0175i\nb1 3 s1 \u22124\nb2 2 s2 \u22126\nb3 1 s3 \u22128\nSuppose all bids and asks remain in the market for at least one more period. Clearly,\nNTt = {b1 , b2 , b3 , s1 , s2 , s3 }. Consider the candidate construction SNTt = NTt . Strong notrade condition (a) is satisfied because whether or not i is in set NTt is agent-independent.\nCondition (b) is not satisfied, however. Consider bid 2. If bid 2's report had been 8 instead\nof 2 then trade would be possible for bids 1 and 3, and SNTt = NTt = {b2 , s1 , s2 , s3 }. Thus,\nwhether or not bids 1 and 3 satisfy the strong no-trade predicate depends on the value of bid\n2. This is not a valid construction for strong no-trade for the tr-DA matching rule.\n(iii) SNTt = NTt if |bt | < 2 or |st | < 2, and SNTt = \u2205 otherwise. As above, strong\nno-trade condition (a) is immediately satisfied. Moreover, condition (b) is now satisfied\nbecause trade is not possible for any bid or ask irrespective of bid values because there are\nsimply not enough bids or asks to allow for trade with tr-DA (which needs at least 2 bids\nand at least 2 asks).\n143\n\n\fBredin, Parkes and Duong\n\nFigure 2: The decision process in Chain upon arrival of a new bid. If admitted, then the bid\nparticipates in a sequence of matching events while it remains unmatched and in the\nstrong no-trade set. The bid matches at the first available opportunity and is priced\nimmediately.\n\nExample 3 Consider a variant of the SimpleMatch matching rule, defined with fixed\nprice 9. We can again ask whether SNTt := NTt is a valid construction for strong no-trade.\nThroughout this example suppose all bids and asks remain in the market for at least one\nmore period. First consider a bid with \u0175b1 = 8 and two asks with values \u0175s1 = \u22126 and\n\u0175s2 = \u22127. Here, NTt = {s1 , s2 } because the asks cannot trade whatever their price since\nthe bid is not high enough to meet the fixed trading price of 9. Moreover, SNTt = {s1 , s2 }\nis a valid construction; strong no-trade condition (a) is satisfied as above and condition (b)\nis satisfied because whether or not ask 2 is in NTt (and thus SNTt ) is independent of the\nprice on ask 1, and vice versa. But consider instead a bid with \u0175b1 = 8 and an ask with\n\u0175s1 = \u221210. Now, NTt = {b1 , s1 } and SNTt = {b1 , s1 } is our candidate strong no-trade set.\nHowever if bid 1 had declared value 10 instead of 8 then NTt = {b1 } and ask 1 drops out of\nSNTt . Thus, strong no-trade condition (b) is not satisfied.\nWe see from the above examples that it can be quite delicate to provide a valid, nontrivial construction of strong no-trade. Note, however, that SNTt = \u2205 is a (trivial) valid\nconstruction for any matching rule. Note also that the strong no-trade conditions (a) and\n(b) require information about the reported departure period of a bid. Thus, while the\nmatching rules do not use temporal information about bids, this information is used in the\nconstruction for strong no-trade.\n3.3 Chain: From Matching Rules to Truthful, Dynamic DAs\nThe control flow in Chain is illustrated in Figure 2. Upon arrival of a new bid, an admission\ndecision is made and bid i is admitted if its value \u0175i is at least its admission price qi . An\nadmitted bid competes in a sequence of matching events, where a matching event simply\napplies the matching rule to the set of active bids and asks. If a bid fails to match in some\nperiod and is not in the strong no-trade set (i \u2208\n/ SNTt ), then it is priced out and leaves the\nmarket without trading. Otherwise, if it is still before its departure time (t \u2264 d\u02c6i ), then it is\navailable for matching in the next period.\nEach bid is always in one of three states: active, matched or priced-out. Bids are active\nif they are admitted to the market until t \u2264 d\u02c6i , or until they are matched or priced-out. An\n144\n\n\fChain: An Online Double Auction\n\nactive bid becomes matched in the first period (if any) when it trades in the single-period\nmatching rule. An active bid is marked as priced-out in the first period in which it loses\nbut is not in the strong no-trade set. As soon as a bid is no longer active, it enters the\nhistory, H t , and the information about its bid price can be used in defining matching rules\nfor future periods.\nLet E t denote the set of bids that will expire in the current period. A well-defined\nmatching rule, when coupled with a valid strong no-trade construction, must provide Chain\nwith the following information, given history H t , active bids bt and active asks st , and\nexpiration set E t in period t:\n(a) for each bid or ask, whether it wins or loses\n(b) for each winning bid or ask, the payment collected (negative for an ask)\n(c) for each losing bid or ask, whether or not it satisfies the strong no-trade condition\nNote that the expiration set E t is only used for the strong no-trade construction. This\ninformation is not made available to the matching rule. The following table summarizes the\nuse of this information within Chain. Note that a winning bid cannot be in set SNTt :\nLose\nWin\n\n\u00acSNTt\npriced-out\nmatched\n\nSNTt\nsurvive\nn/a\n\nWe describe Chain by defining the events that occur for a bid upon its arrival into the\nmarket, and then in each period in which it remains active:\nUpon arrival: Consider all possible earlier arrival periods t\u2032 \u2208 [d\u02c6i \u2212K, \u00e2i \u22121] consistent\nwith the reported type. There are no such periods to consider if the bid is maximally\n\u2032\npatient. If the bid would lose and not be in SNTt for any one of these arrival periods\nt\u2032 , then it is not admitted. Otherwise, the bid would win in all periods t\u2032 for which\n\u2032\ni\u2208\n/ SNTt , and define the admission price as:\nq(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) :=\n\nmax\n\nt\u2032 \u2208[d\u02c6i \u2212K,\u00e2i \u22121],i\u2208SNT\n/\n\n\u2032\n\nt\u2032\n\n[pti , \u2212\u221e],\n\n(3)\n\n\u2032\n\nwhere pti is the payment the agent would have made (negative for a seller) in arrival\nperiod t\u2032 (as determined by running the myopic matching rule in that period). When\n\u2032\nthe agent would lose in all earlier arrival periods t\u2032 (and so i \u2208 SNTt for all t\u2032 ), or\nthe bid is maximally patient, then the admission price defaults to \u2212\u221e and the bid is\nadmitted.\nWhile active: Consider period t \u2208 [\u00e2i , d\u02c6i ]. If the bid is selected to trade by the myopic\nmatching rule, then mark it as matched and define final payment:\nxti (\u03b8 \u2264t ) = max(q(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), pti ),\n\n(4)\n\nwhere pti is the price (negative for a seller) determined by the myopic matching rule in\nthe current period. If this is a buyer, then collect the payment but delay transferring\nthe item until period d\u02c6i . If this is a seller, then collect the item but delay making\nthe payment until the reported departure period. If the bid loses and is not in SNTt ,\nthen mark the bid as priced-out.\n145\n\n\fBredin, Parkes and Duong\n\nWe illustrate Chain by instantiating it to various matching rules in the next section.\nIn Section 5 we prove that Chain is strongly truthful and no-deficit when coupled with a\nwell-defined matching rule and a valid strong no-trade construction. We will see that the\ndelay in buyer delivery and seller payment ensures truthful revelation of a trader's departure\ninformation. For instance, in the absence of this delay, a buyer might be able to do better by\nover-reporting departure information, still trading early enough but now for a lower price.\n3.4 Comments\nWe choose not to allow the single-period matching rules to use the reported arrival and\ndeparture associated with active bids and asks. This maintains a clean separation between\nnon-temporal considerations (in the matching rules) and temporal considerations (in the\nwider framework of Chain). This is also for simplicity. The single-period matching rules\ncan be allowed to depend on the reported arrival-departure interval, as long as the (singleperiod) rules are monotonic in tighter arrival-departure intervals, in the sense that an agent\nthat wins for some \u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i ) continues to win and for an improved price if it instead\nreports (a\u2032i , d\u2032i , \u0175i ) with [a\u2032i , d\u2032i ] \u2282 [\u00e2i , d\u02c6i ]. However, whether or not trade is possible must\nbe independent of the reported arrival-departure interval and similarly for strong no-trade.\nDeterminations such as these would need to be made with respect to the most patient type\n(d\u02c6i \u2212 K, d\u02c6i , \u0175i ) given report \u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i ).\n\n4. Practical Instantiations: Price-Based and Competition-Based Rules\nIn this section we offer a number of instantiations of the Chain online DA framework. We\npresent two different classes of well-defined matching rules: those that are price-based and\ncompute simple price statistics based on the history which are then used for matching, and\nthose that we refer to as competition-based and leverage the history but also consider direct\ncompetition between the active bids and asks in any period. In each case, we establish that\nthe matching rules are well-defined and provide a valid strong no-trade construction.\n4.1 Price-Based Matching Rules\nEach one of these rules constructs a single price, pt , in period t based on the history H t of\nearlier bids and asks that are traded or expired. For this purpose we define variations on a\nreal valued statistic, \u03be(H t ), that is used to define this price given the history. Generalizing\nthe SimpleMatch procedure, as introduced in Section 3.1, the price pt is used to determine\nthe trades in period t. We also provide a construction for strong no-trade in this context.\nThe main concern in setting prices is that they may be too volatile, with price updates\ndriving the admission price higher (via the max operator in the admission rule of Chain)\nand having the effect of pricing bids and asks out of the market. We describe various forms\nof smoothing and windowing, all designed to provide adaptivity while dampening shortterm variations. In each case, the parameters (e.g. the smoothing factor, or the window\nsize) can be determined empirically through off-line tuning.\nWe experiment with five price variants:\nHistory-EWMA: Exponentially-weighted moving average. The bid history, H t , is used\nto define price pt in period t, computed as pt := \u03bb \u03be(H t ) + (1 \u2212 \u03bb)pt\u22121 , where \u03bb \u2208 (0, 1] is a\n146\n\n\fChain: An Online Double Auction\n\nsmoothing constant and \u03be(H t ) is a statistic defined for bids and asks that enter the history\nin period t. Experimentally we find that the mean statistic, \u03be mean (H t ), of the absolute\nvalues of bids and asks that enter the history performs well with \u03bb of 0.05 or lower for most\nscenarios that we test. For cases in which \u03be(H t ) is not well-defined because of too few (or\nzero) new bids or asks, then we set pt := pt\u22121 .\nHistory-median: Compute price pt from a statistic over a fixed-size window of the most\nrecent history, pt := \u03be(H t , \u2206) where \u2206 is the window-size, i.e. defining bids introduced\nto history H t in periods [t \u2212 \u2206, . . . , t]. Experimentally, we find that the median statistic,\n\u03be median (H t , \u2206), of the absolute bid and ask values performs well for the scenarios we test,\nwith the window size depending inversely with the volatility of agents' valuations. Typically,\nwe observe optimal window sizes of 20 and 150, depending on volatility. For cases in which\n\u03be(H t , \u2206) is not well-defined because of too few (or zero) new bids or asks, then we set\npt := pt\u22121 .\nHistory-clearing: Identical to the history-median rule except the statistic \u03be(H t , \u2206) is\ndefined as (bm \u2212 sm )/2 where bm and sm are the lowest value pair of trades that would be\nexecuted in the efficient (value-maximizing) trade given all bids and asks to enter history\nH t in periods [t \u2212 \u2206, . . . , t]. Empirically, we find similar optimal window sizes for historyclearing as for history-median.\nHistory-McAfee: Define the statistic \u03be(H t , \u2206) to represent the McAfee price, defined in\nSection 4.2, for the bids in H t had they all simultaneously arrived.\nFixed price: This simple rule computes a single fixed price pt := p\u2217 for all trading periods,\nwith the price optimized offline to maximize the average-case efficiency of the dynamic DA\ngiven Chain and the associated single-period matching rule that leverages price p\u2217 as the\ncandidate trading price.\nFor each pricing variant, procedure Match (see Figures 3\u20134) is used to determine which\nbids win (at price pt ), which lose, and, of those that lose, which satisfy the strong notrade predicate. The subroutine used to determine the current price is referred to as\ndetermineprice in Match. We provide as input to Match the set E t in addition to\n(H t , bt , st ) because Match also constructs the strong no-trade set, and E t is used exclusively for this purpose.\nThe proof of the following lemma is technical and is postponed until the Appendix.\nLemma 1 Procedure Match defines a valid strong no-trade construction.\nTheorem 1 Procedure Match defines a well-defined matching rule and a valid strong notrade construction.\nProof: No-deficit, feasibility, and individual-rationality are immediate by the construction\nof Match since bids and asks are added to matched in pairs, with the same payment, and\nonly if the payment is less than or equal to their value. Truthfulness is also easy to see: the\norder with which a bid (or ask) is selected is independent of its bid price, and the price it\nfaces, when selected, is independent of its bid. If the price is less than or equal to its bid,\nthen whether or not it trades depends only on its order. The rest of the claim follows from\nLemma 1.\n\u0003\n147\n\n\fBredin, Parkes and Duong\n\nfunction Match(H t ,bt ,st ,E t )\nmatched := \u2205, lose := \u2205, NTt := \u2205, SNTt := \u2205\nstop := false\npt := determineprice(H t )\nwhile \u00ac stop do\ni := 0, j := 0, checkedB := \u2205, checkedS := \u2205\nwhile ((checkedB \u2282 bt )&(i=0)) \u2228 ((checkedS \u2282 st )&(j=0)) do\nif (i = 0)&(j = 0) then\nS\nk := random(bt \\ checkedB st \\ checkedS )\nelse if (i = 0) then\nk := random(bt \\ checkedB )\nelse if (j = 0) then\nk := random(st \\ checkedS )\nend if\nif (k \u2208 bt ) then\ncheckedB := checkedB \u222a {k}\nif (bk \u2265 pt ) then\ni := k\nend if\nelse\ncheckedS := checkedS \u222a {k}\nif (sk \u2265 \u2212pt ) then\nj := k\nend if\nend if\nend while\nif (i 6= 0)&(j 6= 0) then S\nmatched := S\nmatched\n{(i, j)} S\nlose := lose\n(checkedB \\ {i})\n(checkedS \\ {j})\nt\nt\nt\nt\nb := b \\ checkedB , s := s \\ checkedS\nelse\nstop := true\nend if\nend while\nend function\nFigure 3: The procedure used for single-period matching in applying Chain to the pricebased rules. The algorithm continues in Figure 4.\n\n148\n\n\fChain: An Online Double Auction\n\nfunction Match (continued)(H t ,bt ,st ,E t )\nif (i 6= 0)&(j =S\n0) then\nlose := lose st , NTt := bt\nif (\u2203k \u2208 bt * ((bk \u2265 pt )&(d\u02c6k = t))) \u2228 (\u2200k \u2208 st * (d\u02c6k = t)) then\nSNTt := bt\nelse\nSNTt := bt \\ checkedB\nend if\nelse if (j 6= 0)&(i\nS = 0) then\nlose := lose bt , NTt := st\nif (\u2203k \u2208 st * ((sk \u2265 \u2212pt )&(d\u02c6k = t))) \u2228 (\u2200k \u2208 bt * (d\u02c6k = t)) then\nSNTt := st\nelse\nSNTt := st \\ checkedS\nend if\nelse if (i = 0)&(j\nS t = 0) then\nt\nt\nNT := b s\n\u02c6k = t)) \u2228 (\u2200k \u2208 st * (d\u02c6k = t)) then\nif (\u2200k \u2208 bt * (dS\nt\nt\nSNT := b st\nend if\nend if\nend function\n\n\u22b2I\n\n\u22b2 I-a\n\n\u22b2 II\n\n\u22b2 III\n\nFigure 4: Continuing procedure from Figure 3 for single-period matching in applying Chain\nto the price-based rules.\n\nExample 4 (i) Bid bt = {8}, ask st = {\u22126}, indexed {1, 2} and price pt = 9. The outer\nwhile loop in Figure 3 terminates with j = 2 and i = 0 in Case II. The bid is marked as\na loser while NTt = {2}. If the bid will depart immediately, then SNTt = {2}, otherwise\nSNTt = \u2205.\n(ii) Bid bt = {8}, asks st = {\u22126, \u22127}, indexed {1, 2, 3}, and price pt = 9. Suppose that\nask 2 is selected before ask 3 in the outer while loop. Then the loop terminates with j = 2\nand i = 0 in Case II and NTt = {2, 3}. Suppose the bid and asks leave the market later\nthan this period. Then SNTt = {3} because checkedS = {2}.\n(iii) Bid bt = {8} and ask st = {\u221210}, indexed {1, 2}, price pt = 9 and both the bid and\nthe ask is patient. The outer while loop terminates with i = 0 and j = 0 in Case III so\nthat NTt = {1, 2}. However, SNTt = \u2205.\n\n4.2 Competition-Based Matching Rules\nEach one of these rules determines which bids match in the current period through price\ncompetition between the active bids. We present three variations: McAfee, WindowedMcAfee and Active-McAfee. The latter two rules are hybrid rules in that they leverage\n149\n\n\fBredin, Parkes and Duong\n\nhistory of past offers, in smoothing prices generated by the competition-based matching\nrules.\nMcAfee: Use the static DA protocol due to McAfee as the matching rule. Let B denote\nthe set of bids and S denote the set of asks. If min(|B|, |S|) < 2, then there is no trade.\nOtherwise, first insert two dummy bids with value {\u221e, 0} and two dummy asks with value\n{0, \u2212\u221e} into the set of bids and asks. Let b0 \u2265 b1 \u2265 . . . \u2265 bm and s0 \u2265 s1 \u2265 . . . \u2265\nsn . . . denote the bid and ask values with (b0 , s0 ) denoting dummy pair (\u221e, 0) and (bm , sn )\ndenoting dummy pair (0, \u2212\u221e) and ties otherwise broken at random. Let m \u2265 0 index\nthe last pair of bids and asks to clear in the efficient trade, such that bm + sm \u2265 0 and\nbm+1 + sm+1 < 0. When m \u2265 1, consider the following two cases:\nm+1\n\u2264 bm and \u2212pm+1 \u2264 sm then the first m bids and\n\u2022 (Case I) If price pm+1 = bm+1 \u2212s\n2\nasks trade and payment pm+1 is collected from each winning buyer and made to each\nwinning seller.\n\n\u2022 (Case II) Otherwise, the first m \u2212 1 bids and asks trade and payment bm is collected\nfrom each winning buyer and payment \u2212sm is made to each winning seller.\nTo define NTt , replace a bid that does not trade with a bid reporting a very large value\nand see whether this bid trades. To determine whether trade is possible for an ask that\ndoes not trade: replace the ask with an ask reporting value \u01eb > 0, some small \u01eb. Say\nthat there is a quorum if and only if there are at least two bids and at least two asks, i.e.\nmin(|bt |, |st |) \u2265 2. Define strong no-trade as follows: set SNTt := NTt = bt \u222a st when\nthere is no quorum and SNTt := \u2205 otherwise.\nLemma 2 For any bid bi in the McAfee matching rule, then for any other bid (or ask) j\nthere is some bid b\u0302i that will make trade possible for bid (or ask) j when there is a quorum.\nProof: Without loss of generality, suppose there are three bids and three asks. Label the\nbids (a, c, e) and the asks (b, d, f ), both ordered from highest to lowest so that (a, b) is the\nmost competitive bid-ask pair. Proceed by case analysis on bids. The analysis is symmetric\nfor asks and omitted. Let tp(i) \u2208 {0, 1} denote whether or not trade is possible for bid i, so\nthat i \u2208 NTt \u21d4 tp(i) = 0. For bid a: when b \u2265 \u2212(a \u2212 d)/2 then tp(c) = tp(e) = 1 and this\ninequality can always be satisfied for a large enough a; when a \u2265 (c \u2212 d)/2 then tp(b) = 1\nand when a \u2265 (c \u2212 b)/2 then tp(d) = tp(f ) = 1, and both of these inequalities are satisfied\nfor a large enough a. For bid c: when b \u2265 \u2212(c \u2212 d)/2 then tp(a) = 1 and when, in addition,\nc > a, then tp(e) = 1 and each one of these inequalities are satisfied for a large enough c;\nsimilarly when c \u2265 (a \u2212 d)/2 then tp(b) = 1 and when c \u2265 (a \u2212 b)/2 then tp(d) = tp(f ) = 1.\nAnalysis for bid e follows from that for bid c.\n\u0003\nLemma 3 The construction for strong no-trade is valid and there is no valid strong notrade construction that includes more than one losing bid or ask that will not depart in the\ncurrent period for any period in which there is a quorum.\nProof: To see that this is a valid construction, notice that strong no-trade condition (a)\nholds since any bid (or ask) is always in both NTt and SNTt . Similarly, condition (b)\ntrivially holds (with the other bids and asks remaining in SNTt even if any bid is not\n150\n\n\fChain: An Online Double Auction\n\npresent in the market). To see that this definition is essentially maximal, consider now that\nmin(|bt |, |st |) \u2265 2. For contradiction, suppose that two losing bids {i, j} with departure\nafter the current period are designated as strong no-trade. But, strong no-trade condition\n(b) fails because of Lemma 2 because either bid could have submitted an alternate bid price\nthat would remove the other bid from NTt and thus necessarily also from SNTt .\n\u0003\nThe construction offered for SNTt cannot be extended even to include one agent selected\nat random from the set i \u2208 NTt that will not depart immediately, in the case of a quorum.\nSuch a construction would fail strong no-trade condition (b) when the set NTt contains\nmore than one bid (or ask) that does not depart in the current period, because bid i's\nabsence from the market would cause some other agent to be (randomly) selected as SNTt .\n\nWindowed-McAfee: This myopic matching rule is parameterized on window size \u2206.\nAugment the active bids and asks with the bids and asks introduced to the history H t in\nperiods t\u2032 \u2208 {t \u2212 \u2206 + 1, . . . , t}. Run McAfee with this augmented set of bids and asks and\ndetermine which of these bids and asks would trade. Denote this candidate set C. Some\nactive agents identified as matching in C may not be able to trade in this period because\nC can also contain non-active agents.\nLet B \u2032 and S \u2032 denote, respectively, the active bids and active asks in set C. WindowedMcAfee then proceeds by picking a random subset of min(|B \u2032 |, |S \u2032 |) bids and asks to trade.\nWhen |B \u2032 | =\n6 |S \u2032 |, then some bids and asks will not trade.\nDefine strong no-trade for this matching rule as:\n(i) if there are no active asks but active bids, then SNTt := bt\n(ii) if there are no active bids but active asks, then SNTt := st\n(iii) if there are fewer than 2 asks or fewer than 2 bids in the augmented bid set, then\nSNTt := bt \u222a st ,\nand otherwise set SNTt := \u2205. In all cases it should be clear that SNTt \u2286 NTt .\nLemma 4 The strong no-trade construction for windowed-McAfee is valid.\nProof: That this is a valid SNT criteria in case (iii) follows immediately from the validity\nof the SNT criteria for the standard McAfee matching rule. Consider case (i). Case (ii)\nis symmetric and omitted. For strong no-trade condition (a), we see that all bids i \u2208 NTt\nand also i \u2208 SNTt , and whether or not they are designated strong no-trade is independent\nof their own bid price but simply because there are no active asks. Similarly, for strong\nno-trade condition (b), we see that all bids (and never any asks) are in SNTt whatever the\nbid price of any particular bid (and even whether or not it is present).\n\u0003\nEmpirically, we find that the efficiency of Windowed-McAfee is sensitive to the size of\nt\nH , but that frequently the best choice is a small window size that includes only the active\nbids.\nActive-McAfee: Active-McAfee augments the active bids and asks to include all unexpired but traded or priced-out offers. It proceeds as in Windowed-McAfee given this\naugmented bid set.\n151\n\n\fBredin, Parkes and Duong\n\n4.3 Extended Examples\nWe next provide two stylized examples to demonstrate the matching performed by Chain\nusing both a price-based and a competition-based matching rule. For both examples, we\nassume a maximal patience of K = 2. Moreover, while we describe when Chain determines\nthat a bid or an ask trades, remember that a winning buyer is not allocated the good until\nits reported departure and a winning seller does not receive payment until its reported\ndeparture.\nExample 5 Consider Chain using an adaptive, price-based matching rule. The particular\ndetails of how prices are determined are not relevant. Assume that the prices in periods 1\nand 2 are {p1 , p2 } = {8, 7} and the maximal patience is three periods. Now consider period\n3 and suppose that the order book is empty at the end of period 2 and that the bids and asks\nin Table 1 arrive in period 3.\nS\nB\n\u0175i d\u02c6i d\u02c6i \u2212K qi\npi SNT?\n\u0175i d\u02c6i d\u02c6i \u2212K qi\npi SNT? i\nb1 * 15 4\n2\n7\n7\nN\ns1 -1 4\n2\n-7 n/a\nY\ns2 * -3 5\n3\n\u2212\u221e -6.5\nN\nb2 * 10 3\n1\n8\n8\nN\nb3 7 3\n1\n8 n/a\nN\ns3 -4 3\n1\n-7 n/a\nY\ns4 * -5 4\n2\n-7 -6.5\nN\nb4 6 5\n3\n\u2212\u221e n/a\nN\ns5 -10 5\n3\n\u2212\u221e n/a\nY\ni\n\nTable 1: Bids and asks that arrive in period 3. Bids {b1 , b2 } match with asks {s2 , s4 } (as indicated\nwith a *). Bid b3 is priced-out upon admission because qb3 > \u0175b3 (indicated with a strikethrough). The admission price is qi and the payment made by an agent that trades is\npi . Column 'SNT?' indicates whether or not the bid or ask satisfies the strong no-trade\npredicate. Asks {s1 , s5 } survive into the next period because they are in SNT and have\ndi > 3.\n\nBids {b1 , b2 , b4 } and asks {s1 , .., s5 } are admitted. Bid b3 is priced out because qb3 =\nmax(p1 , p2 , \u2212\u221e) = max(8, 7, \u2212\u221e) = 8 > \u0175b3 = 7 by Eq. (3). Note that b4 and s5 are\nadmitted despite low bids (asks) because they have maximal patience and their admission\nprices are \u2212\u221e. Now, suppose that p3 := 6.5 is defined by the matching rule and consider\napplying Match to the admitted bids and asks.\nSuppose that the bids are randomly ordered as (b4 , b2 , b1 ) and the asks as\n(s4 , s2 , s1 , s3 , s5 ). Bid b4 is picked first but priced-out because \u0175b4 = 6 < p3 = 6.5. Bid\nb2 is tentatively accepted (\u0175b2 = 10 \u2265 p3 = 6.5) and then ask s4 is accepted (ws4 = \u22125 \u2265\np3 = \u22126.5). Bid b2 is matched with ask s4 , with payment max(qb2 , p3 ) = max(8, 6.5) = 8\nfor b2 by Eq. (4) and payment max(qs4 , p3 ) = max(\u2212\u221e, \u22126.5) = \u22126.5 for s4 . Bid b1 is then\ntentatively accepted (15 \u2265 6.5) and then matched with ask s2 , which is accepted because\n\u22123 \u2265 \u22126.5. The payments are max(7, 6.5) = 7 for b1 and max(\u2212\u221e, \u22126.5) = \u22126.5 for s2 .\nAsk s3 expires but asks s1 and s5 survive and are marked i \u2208 SNT in this period because\nthey were never offered the chance to match with any bid. These asks will be active in period\n4.\nNote the role of the admission price in truthfulness. Had bid b1 delayed arrival until\nperiod 4, its admission price would be max(p2 , p3 , \u2212\u221e) = max(7, 6.5) = 7 and its payment\n152\n\n\fChain: An Online Double Auction\n\nin period 4 (if it matches) at least 7. Similarly, had ask s4 delayed arrival, then its admission\nprice would be max(\u22127, \u22126.5, \u2212\u221e) = \u22126.5 and the maximal payment it can receive in period\n4 is 6.5.\nExample 6 Consider Chain using the McAfee-based matching rule with K = 3 and with\nthe same bids and asks arriving in period 3. Suppose that the prices in periods 1 and 2 that\nwould have been faced by a buyer are {p1b , p2b } = {8, 7} and {p1s , p2s } = {\u22127, \u22126} for a seller.\nThese prices are determined by inserting an additional bid (with value \u221e) or an additional\nask (with value 0) into the order books in each of periods 1 and 2. We will illustrate this\nfor period 3. Consider now the bids and asks in period 3 in Table 2.\n\ni wi di\nb1 * 15 4\nb2 * 10 3\nb3 7 3\nb4 6 5\n\nS\nB\ndi \u2212K qi\npi SNT? i\nwi di di \u2212K qi\npi SNT?\n2\n7\n7\nN\ns1 * -1 4\n2\n-6\n-4\nN\ns2 * -3 5\n3\n\u2212\u221e -4\nN\n1\n8\n8\nN\n1\n8 n/a\nN\ns3 -4 3\n1\n-6 n/a\nN\n3\n\u2212\u221e n/a\nN\ns4 -5 4\n2\n-6 n/a\nN\ns5 -10 5\n3\n\u2212\u221e n/a\nN\n\nTable 2: Bids and asks that arrive in period 3. Bids {b1 , b2 } match with asks {s1 , s2 } (as indicated\nwith a *). Bid b3 is priced-out upon admission because qb3 > \u0175b3 . The admission price is\nqi and the payment made by an agent that trades is pi . Column 'SNT?' indicates whether\nor not the bid or ask satisfies the strong no-trade predicate. No asks or bids survive into\nthe next period.\n\nAs before bid b3 is not admitted. The myopic matching rule now runs the (static) McAfee\nauction rule on bids {b1 , b2 , b4 } and asks {s1 , .., s5 }. Consider bids and asks in decreasing\norder of value, the last efficient trade is indexed m = 3 with \u0175b4 + \u0175s3 = 6 \u2212 4 \u2265 0. But\npm+1 = (0\u2212(\u22125))/2 = 2.5 (inserting a dummy bid with value 0 as described in Section 4.2).\nPrice \u2212pm+1 = \u22122.5 > s3 = \u22124 and this trade cannot be executed by McAfee. Instead,\nbuyers {b1 , b2 } trade and face price pbm = \u0175b4 = 6 and sellers {s1 , s2 } trade and face price\npsm = \u0175s3 = \u22124. Bids b4 and asks {s3 , s4 , s5 } are priced-out and do not survive into the\nnext round. Ultimately, payment max(qb1 , pbm ) = max(7, 6) = 7 is collected from buyer b1\nand payment max(qb2 , pbm ) = max(8, 6) = 8 is collected from buyer b2 . For sellers, payment\nmax(\u22126, \u22124) = \u22124 and max(\u2212\u221e, \u22124) = \u22124 for s1 and s2 respectively.\nThe prices p3b and p3s that are used in Eq. (3) to define the admission price for bids and\nasks with arrivals in periods 4 and 5 are determined as follows. For the buy-side price, we\nintroduce an additional bid with bid-price \u221e. With this the bid values considered by McAfee\nwould be (\u221e, 15, 10, 6, 0) and the ask values would be (\u22121, \u22123, \u22124, \u22125, \u221210), where a dummy\nbid with value 0 is included on the buy-side. The last efficient pair to trade is m = 4 with\n6 \u2212 5 \u2265 0 and pm+1 = (0 \u2212 (\u221210))/2 = 5, which satisfies this bid-ask pair. Therefore the\nbuy-side price, p3b := 5. On the sell-side, we introduce an additional ask with ask-price\n0 so that the bid values considered by McAfee are (15, 10, 6, 0) (again, with a dummy bid\nincluded) and the ask values are (0, \u22121, \u22123, \u22124, \u22125, \u221210). This time m = 3 and the last\nefficient pair to trade is 6 \u2212 3 \u2265 0. Now pm+1 = (0 \u2212 (\u22124))/2 = 2 and this price does not\n153\n\n\fBredin, Parkes and Duong\n\nsatisfy s2 , with \u2212pm+1 > s2 and price psm+1 = s2 = \u22123 is adopted. Therefore the sell-side\nprice, p3s := \u22123.\nAgain, we can see that bidder 1 cannot improve its price by delaying its entry until period\n4. The admission price for the bidder would be max(p2b , p3b ) = max(7, p3b ) \u2265 7 and thus its\npayment in period 4, if it matches, will be at least 7.4 Similarly for ask s1 , which would face\nadmission price max{p2s , p3s } = max{\u22126, \u22124} = \u22124 and can receive a payment of at most 4\nin period 4. We leave it as an exercise for the reader to verify that p3s = \u22124 if ask s1 delays\nits arrival until period 4 (in comparison, p3s = \u22123 when ask s1 is truthful).\nBecause the McAfee-based pricing scheme computes a price and clears the order book\nfollowing every period in which there are at least two bids and two asks, the bid activity\nperiods tend to be short in comparison to the adaptive, price-based rules where orders can\nbe kept active longer when there is an asymmetry in the number of bids and asks in the\nmarket. In fact, one interesting artifact that occurs with adaptive, price-based matching\nrules is that the admission-price and SNT can perpetuate this kind of bid-ask asymmetry.\nOnce the market has more asks than bids, SNT becomes likely for future asks, but not bids.\nTherefore, bids are much more likely than asks to be immediately priced out of the market\nby failing to meet the admission price constraint.\n\n5. Theoretical Analysis: Truthfulness, Uniqueness, and Justifying\nBounded-Patience\nIn this section we prove that Chain combined with a well-defined matching rule and a valid\nstrong no-trade construction generates a truthful, no-deficit, feasible and individual-rational\ndynamic DA. In Section 5.2, we establish that uniqueness of Chain amongst dynamic DAs\nthat are constructed from single-period matching rules as building blocks. In Section 5.3,\nwe establish the importance of the existence of a maximal bound on bidder patience by\npresenting a simple environment in which no truthful, no-deficit DA can implement even a\nsingle trade despite the number of efficient trades can be increased without bound.\n5.1 The Chain Mechanism is Strongly Truthful\nIt will be helpful to adopt a price-based interpretation of a valid single-period matching rule.\nGiven rule Mmr , define an agent-independent price, zi (H t , At \\ i, \u03c9) \u2208 R where At = bt \u222a st ,\nsuch that for all i, all bids bt , all asks st , all history H t , and all random events \u03c9 \u2208 \u03a9. We\nhave:\n(A1) \u0175i \u2212 zi (H t , At \\ i, \u03c9) > 0 \u21d2 \u03c0mr,i (H t , bt , st , \u03c9) = 1, and \u0175i \u2212 zi (H t , At \\ i, \u03c9) <\n0 \u21d2 \u03c0mr,i (H t , bt , st , \u03c9) = 0\n(A2) payment xmr,i (H t , bt , st , \u03c9) = zi (H t , At \\ i, \u03c9) if \u03c0mr,i (H t , bt , st , \u03c9) = 1 and\nxmr,i (H t , bt , st , \u03c9) = 0 otherwise\n4. We can check that p3b := 6 in this case. Suppose that bidder 1 were not present in period 3. Now consider\nintroducing an additional bid with value \u221e so that the bids values are {\u221e, 10, 6, 0} (with a dummy bid)\nwith ask values {\u22121, \u22123, \u22124, \u22125, \u221210}. Then m = 3 and pm+1 = (0 \u2212 (\u22125))/2 = 2.5, which does not\nsupport the trade between bid b4 and ask s3 . Instead, pbm = \u0175b4 = 6 is adopted, and we would have\np3b := 6. Of course, this is exactly the price determined by McAfee for bid b1 in period 3 when the bidder\nis truthful.\n\n154\n\n\fChain: An Online Double Auction\n\nThe interpretation is that there is an agent-independent price, zi (H t , At \\ i, \u03c9), that is\nat least \u0175i when the agent loses and no greater than \u0175i otherwise. In particular, zi (H t , At \\\ni, \u03c9) = \u221e when i \u2208 NTt . Although an agent's price is only explicit in a matching rule when\nthe agent trades, it is well known that such a price exists for any truthful, single-parameter\nmechanism; e.g., see works by Archer and Tardos (2001) and Goldberg and Hartline (2003).5\nMoving forward we adopt price zi to characterize the matching rule used as a building block\nfor Chain, and assume without loss of generality properties (A1) and (A2).\nGiven this, we will now establish the truthfulness of Chain by appeal to a price-based\ncharacterization due to Hajiaghayi et al. (2005) for truthful, dynamic mechanisms. We state\n(without proof) a variant on the characterization result that holds for stochastic policies\n(\u03c0, x) and strong-truthfulness. The theorem that we state is also specialized to our DA\nenvironment. We continue to adopt \u03c9 \u2208 \u03a9 to capture the realization of stochastic events\ninternal to the mechanism:\nTheorem 2 (Hajiaghayi et al., 2005) A dynamic DA M = (\u03c0, x), perhaps stochastic, is\nstrongly truthful for misreports limited to no early-arrivals if and only if, for every agent i,\nall \u03b8\u0302i , all \u03b8\u2212i , and all random events \u03c9 \u2208 \u03a9, there exists a price pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) such that:\n(B1) the price is independent of agent i's reported value\n(B2) the price is monotonic-increasing in tighter [a\u2032i , d\u2032i ] \u2282 [\u00e2i , d\u02c6i ]\n(B3) trade \u03c0i (\u03b8\u0302i , \u03b8\u2212i ) = 1 whenever pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < \u0175i and \u03c0i (\u03b8\u0302i , \u03b8\u2212i ) = 0 whenever\npi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) > \u0175i , and the trade is performed for a buyer upon its departure period\nd\u02c6i .\n(B4) the agent's payment is xi (\u03b8\u0302i , \u03b8\u2212i ) = pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) when \u03c0i (\u03b8\u0302i , \u03b8\u2212i ) = 1, with\nxi (\u03b8\u0302i , \u03b8\u2212i ) = 0 otherwise, and the payment is made to a seller upon its departure, d\u02c6i .\nwhere random event \u03c9 is independent of the report of agent i in as much as it affects the\nprice to agent i.\nJust as for the single-period, price-based characterization, the price pi (ai , di , \u03b8\u2212i , \u03c9) need\nnot always be explicit in Chain. Rather, the theorem states that given any truthful dynamic\nDA, such as Chain, there exists a well-defined price function with these properties of valueindependence (B1) and arrival-departure monotonicity (B2), and such that they define the\ntrade (B3) and the payment (B4).\nTo establish the truthfulness of Chain, we prove that it is well-defined with respect to\nthe following price function:\npi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) = max(q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030ci (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)),\n\n(5)\n\nwhere\nq\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) =\n\nmax\n\nt\nt\u2208[d\u02c6i \u2212K,\u00e2i \u22121],i\u2208SNT\n/\n\n(zi (H t , At \\ i, \u03c9), \u2212\u221e)\n\n(6)\n\n5. A single-parameter mechanism is one in which the private information of an agent is limited to one\nnumber. This fits the single-period matching problem because the arrival and departure information\nis discarded. Moreover, although there are both buyers and sellers, the problem is effectively singleparameter because no buyer can usefully pretend to be a seller and vice versa.\n\n155\n\n\fBredin, Parkes and Duong\n\nand\np\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) =\n\n\u001a\n\nzi (H t\u2217 , At\u2217 \\ i, \u03c9) , if decision(i) = 1\n+\u221e\n, otherwise\n\n(7)\n\nwhere decision(i) = 0 indicates that i \u2208 SNTt for all t \u2208 [\u00e2i , d\u02c6i ] and decision(i) = 1\notherwise, and where t\u2217 \u2208 [\u00e2i , d\u02c6i ] is the first period in which i \u2208\n/ SNTt . We refer to this\nas the decision period. Term q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) denotes the admission price, and is defined on\nperiods t before the agent arrives for which i \u2208\n/ SNTt had it arrived in that period. Note\ncarefully that the rules of Chain are implicit in defining this price function. For instance,\nwhether or not i \u2208 SNTt in some period t depends, for example, on the other bids that\nremain active in that period.\nWe now establish conditions (B1)\u2013(B4). The proofs of the technical lemmas are deferred\nuntil the Appendix. The following lemma is helpful and gets to the heart of the strong notrade concept.\nLemma 5 The set of active agents (other than i) in period t in Chain is independent of\ni's report while agent i remains active, and would be unchanged if i's arrival is later than\nperiod t.\nThe following result establishes properties (B1) and (B2).\nLemma 6 The price constructed from admission price q\u030c and post-arrival price p\u030c is valueindependent and monotonic-increasing when the matching rule in Chain is well-defined,\nthe strong no-trade construction is valid, and agent patience is bounded by K.\nHaving established properties (B1) and (B2) for price function pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), we just\nneed to establish (B3) and (B4) to show truthfulness. The timing aspect of (B3) and (B4),\nwhich requires that the buyer receives an item and the seller receives its payment upon\nreported departure, is already clear from the definition of Chain.\nTheorem 3 The online DA Chain is strongly truthful, no-deficit, feasible and individualrational when the matching rule is well-defined, the strong no-trade construction is valid,\nand agent patience is bounded by K.\nProof: Properties (B1) and (B2) follow from Lemma 6. The timing aspects of (B3) and\n(B4) are immediate. To complete the proof, we first consider (B3). If q\u030c > \u0175i , then agent\ni is priced out at admission by Chain because this reflects that zi (H t , At \\ i, \u03c9) > \u0175i in\nsome t \u2208 [d\u02c6i \u2212 K, \u00e2i \u2212 1] with i \u2208\n/ SNTt , and thus the bid would lose if it arrived in that\nperiod (either because it could trade, but for a payment greater than its reported value, or\nbecause i \u2208 NTt ). Also, if there is no decision period, then p\u030c = \u221e, which is consistent with\nChain, because there is no bid price at which a bid will trade when i \u2208 SNTt for all periods\nt \u2208 [\u00e2i , d\u02c6i ]. Suppose now that there is a decision period t\u2217 and q\u030c < \u0175i . If p\u030c > \u0175i , then there\nshould be no trade. This is the case in Chain, because the price zi (H t\u2217 , At\u2217 \\ i, \u03c9) in t\u2217 is\ngreater than \u0175i and thus the agent is priced-out. If p\u030c < \u0175i then the bid should trade and\nindeed it does, again because the price zi in that period satisfies (A1) and (A2) with respect\nto the matching rule. Turning to (B4), it is immediate that the payments collected in Chain\n156\n\n\fChain: An Online Double Auction\n\nare equal to price pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), because if bid i trades then pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2264 \u0175i and\nthus q\u030c \u2264 \u0175i and p\u030c \u2264 \u0175i . The admission price q(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) = q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) when q\u030c \u2264 \u0175i\nbecause price zi is well-defined by properties (A1) and (A2). Similarly, the payment pt\u2217\ndefined by the matching rule in Chain in the decision period is equal to p\u030c.\nThat Chain is individual-rational and feasible follows from inspection. Chain is nodeficit because the payment collected from every agent (whether a buyer or a seller) is at\nleast that defined by a valid matching rule in the decision period t\u2217 (it can be higher when\nthe admission price is higher than this matching price), the matching rules are themselves\nno-deficit, and because the auctioneer delays making a payment to a seller until its reported\ndeparture but collects payment from a buyer immediately upon a match.\n\u0003\nWe remark that information can be reported to bidders that are not currently participating in the market, for instance to assist in their valuation process. If this information\nis delayed by at least the maximal patience of a bidder, so that the bid of a current bidder\ncannot influence the other bids and asks that it faces, then this is without any strategic\nconsequences. Of course, without this constraint, or with bidders that participate in the\nmarket multiple times, the effect of such feedback would require careful analysis and bring\nus outside of the private values framework.\n5.2 Chain is Unique amongst Dynamic DAs that are constructed from Myopic\nMatching Rules\nIn what follows, we establish that Chain is unique amongst all truthful, dynamic DAs that\nadopt well-defined, myopic matching rules as simple building blocks. For this, we define\nthe class of canonical, dynamic DAs, which take a well-defined single period matching rule\ncoupled with a valid strong no-trade construction, and satisfy the following requirements:\n(i) agents are active until they are matched or priced-out,\n(ii) agents participate in the single-period matching rule while active\n(iii) agents are matched if and only if they trade in the single-period matching rule.\nWe think that these restrictions capture the essence of what it means to construct a\ndynamic DA from single-period matching rules. Notice that a number of design elements are\nleft undefined, including the payment collected from matched bids, when to mark an active\nbid as priced-out, what rule to use upon admission, and how to use the strong no-trade\ninformation within the dynamic DA. In establishing a uniqueness result, we leverage the\nnecessary and sufficient price-based characterization in Theorem 2, and exactly determine\nthe price function pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) to that defined in Eq. (4) and associated with Chain.\nThe proofs for the two technical lemmas are deferred until the Appendix.\nLemma 7 A strongly truthful, canonical dynamic DA must define price pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265\nzi (H t\u2217 , At\u2217 \\ i, \u03c9) where t\u2217 is the decision period for bid i (if it exists). Moreover, the bid\nmust be priced-out in period t\u2217 if it is not matched.\nLemma 8 A strongly truthful, canonical and individual-rational dynamic DA must define\nprice pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), and a bid with \u0175i < q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) must be pricedout upon admission.\n157\n\n\fBredin, Parkes and Duong\n\nTheorem 4 The dynamic DA algorithm Chain uniquely defines a strongly truthful,\nindividual-rational auction among canonical dynamic DAs that only designate bids as pricedout when necessary.\nProof: If there is no decision period, then we must have pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) = \u221e, by canonical\n(iii) coupled with (B3). Combining this with Lemmas 7 and 8, we have pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265\nmax(q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)). We have also established that a bid must be pricedout if its bid value is less than the admission price, or it fails to match in its decision\nperiod. Left to show is that the price is exactly as in Chain, and that a bid is admitted\nwhen its value \u0175i \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) and retained as active when it is in the strong notrade set. The last two control aspects are determined once we choose a rule that \"only\ndesignates bids as priced-out when necessary.\" We prefer to allow a bid to remain active\nwhen this does not compromise truthfulness or individual-rationality. Finally, suppose\nfor contradiction that p\u2032 = pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) > max(q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)). Then\nan agent with max(q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)) < wi < p\u2032 would prefer to bid \u0175i =\nq\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)) \u2212 \u01eb and avoid winning \u2013 otherwise its payment would be\ngreater than its value.\n\u0003\n5.3 Bounded Patience Is Required for Reasonable Efficiency\nChain depends on a maximal bound on patience used to calculate the admission price faced\nby a bidder on entering the market with Eq. (3). To motivate this assumption about the\nexistence of a maximal patience, we construct a simple environment in which the number of\ntrades implemented by a truthful, no-deficit DA can be made an arbitrarily small fraction\nof the number of efficient trades with even a small number of bidders having potentially unbounded patience. This illustrates that a bound on bidder patience is required for dynamic\nDAs with reasonable performance.\nIn achieving this negative result, we impose the additional requirement of anonymity,\nThis anonymity property is already satisfied by Chain, when coupled with matching rules\nthat satisfy anonymity, as is the case with all the rules presented in Section 4. In defining\nanonymity, extend the earlier definition of a dynamic DA, M = (\u03c0, x), so that allocation\npolicy \u03c0 = {\u03c0 t }t\u2208T defines the probability \u03c0it (\u03b8 \u2264t ) \u2208 [0, 1] that agent i trades in period t\ngiven reports \u03b8 \u2264t . Payment, x = {xt }t\u2208T , continues to define the payment xti (\u03b8 \u2264t ) by agent\ni in period t, and is a random variable when the mechanism is stochastic.\nDefinition 8 (anonymity) A dynamic DA, M = (\u03c0, x) is anonymous if allocation policy\n\u03c0 = {\u03c0 t }t\u2208T defines probability of trade \u03c0it (\u03b8 \u2264t ) in each period t that is independent of\nidentity i and invariant to a permutation of (\u03b8 \u2264t \\ i) and if the payment xti (\u03b8 \u2264t ), contingent\non trade by agent i, is independent of identity i and invariant to a permutation of (\u03b8 \u2264t \\ i).\nWe now consider the following simple environment. Informally, there will be a random\nnumber of high-valued phases in which bids and asks have high value and there might be a\nsingle bidder with patience that exceeds that of the other bids and asks in the phase. These\nhigh-valued phases are then followed by some number, perhaps zero, of low-valued phases\nwith bounded-patience bids and asks. Formally, there are Th \u2265 1 high-valued phases\n(a random variable, unknown to the auction), each of duration L \u2265 1 periods, indexed\nk \u2208 {0, 1, . . . , Th \u2212 1} and each with:\n158\n\n\fChain: An Online Double Auction\n\n\u2022 N or N \u2212 1 bids with type (1 + kL, (k + 1)L, vH ),\n\u2022 0 or 1 bids with type (1 + kL, d, \u03b1vH ) for some mark-up parameter, \u03b1 > 1 and some\nhigh-patience parameter, d \u2208 T ,\n\u2022 N asks with type (1 + kL, (k + 1)L, \u2212(vH \u2212 \u01eb)),\nfollowed by some number (perhaps zero) of low-valued phases, also of duration L, and\nindexed k \u2208 {Th , . . . , \u221e}, with:\n\u2022 N or N \u2212 1 bids with type (1 + kL, (k + 1)L, vL )\n\u2022 N asks with type (1 + kL, (k + 1)L, \u2212(vL \u2212 \u01eb)),\nwhere N \u2265 1, 0 < vL < vH , and bid-spread parameter \u01eb > 0. Note that any phase can\nbe the last phase, with no additional bids or asks arriving in the future.\nDefinition 9 (reasonable DA) A dynamic DA is reasonable in this simple environment\nif there is some parameterization of new bids, N \u2265 1, and periods-per-phase, L \u2265 1, for\nwhich it will execute at least one trade between new bids and new asks in each phase,\nfor any choice of high value vH , low value vL < vH , bid-spread \u01eb > 0, mark-up \u03b1 > 1, high\npatience d.\nAll of the dynamic DAs presented in Section 4 can be parameterized to make them\nreasonable for a suitably large N \u2265 1 and L \u2265 1, and without the possibility of a bid with\nan unbounded patience.\nTheorem 5 No strongly truthful, individual-rational, no-deficit, feasible, anonymous dynamic DA can be reasonable when a bidder's patience can be unbounded.\nProof: Fix any N \u2265 1, L \u2265 1, and for the number of high-valued phases, Th \u2265 1, set the\ndeparture of a high-patience agent to d = (Th + 1)L. Keep vH > vL > 0, \u01eb > 0, and \u03b1 > 1\nas variables to be set within the proof. Assume a dynamic DA is reasonable, so that it\nselects at least one new bid-ask pair to trade in each phase. Consider phase k = 0 and with\nN \u2212 1 agents of types (1, L, vH ), N of type (1, L, \u2212(vH \u2212 \u01eb)) and 1 agent of patient type,\n(1, (Th + 1)L, \u03b1vH ). If the patient bid deviates to (1, L, vH ), then the bids are all identical,\nand with probability at least 1/N the bid would win by anonymity and reasonableness.\nAlso, by anonymity, individual-rationality and no-deficit we have that the payment made\nby any winning bid is the same, and must be p\u2032 \u2208 [vH \u2212\u01eb, vH ]. (If the payment had been less\nthan this, the DA would run at a deficit since the sellers require at least this much payment\nfor individual-rationality.) Condition now on the case that the patient bid would win if it\ndeviates and reports (1, L, vH ). Suppose the bidder is truthful, reports (1, (Th + 1)L, \u03b1vH )\nbut does not trade in this phase. But, if phase k = 0 is the last phase with new bids and\nasks, then the bid will not be able to trade in the future and for strong-truthfulness the\nDA would need to make a payment of at least \u03b1vH \u2212 vH = (\u03b1 \u2212 1)vH in a later phase to\nprevent the bid having a useful deviation to (1, L, vH ) and winning in phase k = 0. But, if:\nN \u01eb < (\u03b1 \u2212 1)vH ,\n159\n\n(8)\n\n\fBredin, Parkes and Duong\n\nthen the DA cannot make this payment without failing no-deficit (because N \u01eb is an upperbound on the surplus the auctioneer could extract from bidders in this phase without\nviolating individual-rationality). We will later pick values of \u03b1, \u01eb and vH , to satisfy Eq. (8).\nSo, the bid must trade when it reports (1, (Th + 1)L, \u03b1vH ), in the event that it would win\nwith report (1, L, vH ), as \"insurance\" against this being the last phase with new bids and\nasks. Moreover, it should trade for payment, p\u2032 \u2208 [vH \u2212 \u01eb, vH ], to ensure an agent with true\ntype (1, L, vH ) cannot benefit by reporting (1, (Th + 1)L, \u03b1vH ).\nNow suppose that this was not the last phase with new bids and asks, and Th > 1.\nNow consider what would happen if the patient bid in phase k = 0 deviated and reported\n(1 + Th L, (Th + 1)L, vL ). As before, this bid would win with probability at least 1/N by\nanonymity and reasonableness, but now with some payment p\u2032\u2032 \u2208 [vL \u2212 \u01eb, vL ]. Condition\nnow on the case that the patient bid would win, both with a report of (1, L, vH ) and with a\nreport of (1 + Th L, (Th + 1)L, vL ). When truthful, it trades in phase k = 0 with payment at\nleast vH \u2212 \u01eb. If it had reported (1 + Th L, (Th + 1)L, vL ), it would trade in phase k = Th for\npayment at most vL . For strong truthfulness, the DA must make an additional payment to\nthe patient agent of at least (vH \u2212 vL ) \u2212 (vH \u2212 (vH \u2212 \u01eb)) = vH \u2212 vL \u2212 \u01eb. But, suppose that\nthe high and low values are such that,\n(Th + 1)N \u01eb < vH \u2212 vL \u2212 \u01eb.\n\n(9)\n\nMaking this payment in this case would violate no-deficit, because (Th +1)N \u01eb is an upperbound on the surplus the auctioneer can extract from bidders across all phases, including\nthe current phase, without violating individual-rationality. But now we can fix any vL > 0,\n\u01eb < vL and choose vH > (Th + 1)N \u01eb + vL + \u01eb to satisfy Eq. (9) and \u03b1 > (N \u01eb/vH ) + 1\nto satisfy Eq. (8). Thus, we have proved that no truthful dynamic DA can choose a bidask pair to trade in period k = 0. The proof can be readily extended to show a similar\nproblem with choosing a bid-ask pair in any period k < Th , by considering truthful type of\n(1 + kL, (Th + 1)L, \u03b1vH ).\n\u0003\nTo drive home the negative result: notice that the number of efficient trades can be\nincreased without limit by choosing an arbitrarily large Th , and that no truthful, dynamic DA with these properties will be able to execute even a single trade in each of\nthese {0, . . . , Th \u2212 1} periods. Moreover, we see that only a vanishingly small fraction of\nhigh-patience agents is required for this negative result. The proof only requires that at\nleast one patient agent is possible in all of the high-valued phases.\n\n6. Experimental Analysis\nIn this section, we evaluate in simulation each of the Chain-based DAs introduced in\nSection 4. We measure the allocative efficiency (total value from the trades), net efficiency\n(total value discounted for the revenue that flows to the auctioneer), and revenue to the\nauctioneer. All values are normalized by the total offline value of the optimal matching.\nFor comparison we also implement several other matching schemes: the truthful, surplusmaximizing matching algorithm presented by Blum et al. (2006), an untruthful greedy\nmatching algorithm using truthful bids as input to provide an upper-bound on performance,\nand an untruthful DA populated with simple adaptive agents that are modeled after the\nZero-intelligence Plus trading algorithm that has been leveraged in the study of static\nDAs (Cliff & Bruten, 1998; Preist & van Tol, 1998).\n160\n\n\fChain: An Online Double Auction\n\n6.1 Experimental Set-up\nTraders arrive to the market as a Poisson stream to exchange a single commodity at discrete\nmoments. This is a standard model of arrival in dynamic systems, economic or otherwise.\nEach trader, equally likely to be a buyer or seller, arrives after the previous with an exponentially distributed delay, with probability density function (pdf):\nf (x) = \u03bbe\u2212\u03bbx ,\n\nx \u2265 0,\n\n(10)\n\nwhere \u03bb > 0 represents the arrival intensity in agents per second. Later we present results\nas the interarrival time, \u03bb1 , is varied between 0.05 and 1.5; i.e., as the arrival intensity is\nvaried between 20 and 23 . A single trial continues until at least 5,000 buyers and 5,000 sellers\nhave entered the market. In our experiments we vary the maximal patience K between 2\nand 10. For the distribution on an agent's activity period (or patience, di \u2212 ai ), we consider\nboth a uniform distribution with pdf:\nf (x) =\n\n1\n,\nK\n\nx \u2208 [0, K],\n\n(11)\n\nand a truncated exponential distribution with pdf:\nf (x) = \u03b1e\u2212\u03b1x ,\n\nx \u2208 [0, K],\n\n(12)\n\nwhere \u03b1 = \u2212 ln(0.05)/K so that 95% of the underlying exponential distribution is less than\nthe maximal patience. Both arrival time and activity duration are rounded to the nearest\nintegral time period. A trader who arrives and departs during the same period is assumed\nto need an immediate trade and is active for only one period.\nEach trader's valuation represents a sample drawn at its arrival from a uniform distribution with spread 20% about the current mean valuation. (The value is positive for a bid\nand negative for an ask.) To simulate market volatility, we run experiments that vary the\naverage valuation using Brownian motion, a common model for valuation volatility upon\nwhich many option pricing models are based (Copeland & Weston, 1992). At every time\nperiod, the mean valuation randomly increases or decreases by a constant multiplier, e\u00b1\u03b3 ,\nwhere \u03b3 is the approximate volatility and varied between 0 and 0.15 in our experiments.\nWe plot the mean efficiency of 100 runs for each experiment, with the same sets of bids\nand asks used across all double auctions. All parameters of an auction rule are reoptimized\nfor each market environment; e.g., we can find the optimal fixed price and the optimal\nsmoothing parameters offline given the ability to sample from the market model.\n6.2 Chain Implementation\nWe implement Chain for the five price-based matching rules (history-clearing, historymedian, history-McAfee, history-EWMA, and fixed-price) and the three competition-based\nmatching rules (McAfee, active-McAfee, and windowed-McAfee).\nThe price-based implementations keep a fixed-size set of the most recently expired,\ntraded, or priced-out offers, H t . Offers priced-out by their admission prices are inserted\ninto H t prior to computing pt . The history-clearing metric computes a price to maximize the\nnumber of trades to agents represented by H t had they all been contemporary. The historymedian metric chooses the price to be the median of the absolute valuation of the offers\n161\n\n\fBredin, Parkes and Duong\n\nin H t . The history-McAfee method computes the \"McAfee price\" for the scenario where\nall agents represented by H t are simultaneously present. The EWMA metric computes an\nexponentially-weighted average of bids in the order that they expire, trade, or price out.\nThe simulations initialize the price to the average of the mean buy and sell valuations. If\ntwo bids expire during the same period, they are included in arbitrary order to the moving\naverage.\nNone of the metrics require more than one parameter, which is optimized offline with\naccess to the model of the market environment. Parameter optimization proceeds by uniformly sampling the parameter range, smoothing the result by averaging each result with\nits immediate neighbors. The optimization repeats twice more over a narrower range about\nthe smoothed maximum, returning the parameter that maximizes (expected) allocative efficiency. None of the price-based methods appeared to be sensitive to small (<10%) changes\nin the size of H t . With most simulations, the window size was chosen to be about 150 offers. For EWMA, the smoothing factor was usually chosen to be around 0.05 or lower. The\nwindowed-McAfee matching rule, however, was extremely sensitive to window size for simulations with volatile valuations, and the search process frequently converged to suboptimal\nlocal maxima.\nThe admission price in the price-based methods is computed by first determining\nwhether Match would check the value of the bid against bid price if the bid had arrived in\nsome earlier period t\u2032 . Rather than simulate the entire Match procedure, it is sufficient to\ndetermine the probability \u03c1i of this event. This is determined by checking the construction\n\u2032\nof the strong no-trade sets in that earlier period. If SNTt contains non-departing buyers\n(sellers), then the probability that an additional seller (buyer) would be examined is 1 and\n\u03c1i = 1. Otherwise the probability is equal to the ratio of the number of bids (asks) examined not included in SNTt and one more than the total number of bids (asks) present.\n\u2032\nFinally, with probability \u03c1i the price the agent would have faced in period t\u2032 is defined as pt\n\u2032\n\u2032\n(\u2212pt for sellers), and otherwise it is \u2212\u221e. Here, pt is the history-dependent price defined\nin period t\u2032 .\nThe competition-based matching rules price out all non-trading bids at the end of each\nperiod in which trade occurs (because of the definition of strong no-trade in that context).\nThe admission prices are calculated by considering the price that a bid (ask) would have\nfaced in some period t\u2032 before its reported arrival. In such a period, the price for a bid (ask)\nis determined by inserting an additional bid (ask) with valuation \u221e (0) and applying the\ncompetition-based matching rule to that (counterfactual) state. From this we determine\nwhether the agent would win for its reported value, and if so what price it would face.\n6.3 Optimal Offline Matching\nWe use a commercial integer program solver (CPLEX6 ) to compute the optimal offline\nsolution, i.e. with complete knowledge about all offers received over time. In determining\nthe offline solution we enforce the constraint that a trade can only be executed if the activity\nperiods of both buyer, i, and seller, j, overlap,\n(ai \u2264 dj ) \u2227 (aj \u2264 di )\n6. www.ilog.com\n\n162\n\n(13)\n\n\fChain: An Online Double Auction\n\nAn integer-program formulation to maximize total value is:\nmax\n\nX\n\nxij (wi + wj )\n\n(14)\n\n(i,j)\u2208overlap\n\nX\n\ns.t. 0 \u2264\n\nxij \u2264 1, \u2200j \u2208 ask\n\ni:(i,j)\u2208overlap\n\n0\u2264\n\nX\n\nxij \u2264 1, \u2200i \u2208 bid\n\nj:(i,j)\u2208overlap\n\nxij \u2208 {0, 1}, \u2200i, j,\n\nwhere (i, j) \u2208 overlap is a bid-ask pair that could potentially trade because they have\noverlapping arrival and departure intervals satisfying Eq. (13). The decision variable xij \u2208\n{0, 1} indicates that bid i matches with ask j. This provides the optimal, offline allocative\nefficiency.\n6.4 Greedy Online Matching\nWe implement a greedy matching algorithm that immediately matches offers that yield nonnegative budget surplus. This is a non-truthful matching rule but provides an additional\ncomparison point for the efficiency of the other matching schemes. During each time period,\nthe greedy matching algorithm orders active bids and asks by their valuations, exactly as\nthe McAfee mechanism does, and matches offers until pairs no longer generate positive\nsurplus. The algorithm's performance allows us to infer the number of offers that the\noptimal matching defers before matching and the amount of surplus lost by the McAfee\nmethod due to trade reduction and due to the additional constraint of admission pricing.\n6.5 Worst-Case Optimal Matching\nBlum et al. (2006) derive a mechanism equivalent to our fixed-price matching mechanism,\nexcept that the price used is chosen from the cumulative distribution\n1\nln\nD(x) =\nr\u03b1\n\n\u0012\n\nx \u2212 wmin\n(r \u2212 1)wmin\n\n\u0013\n\n,\n\n(15)\n\nwhere r is the fixed point to the equation\nr = ln\n\n\u0012\n\nwmax \u2212 wmin\n(r \u2212 1)wmin\n\n\u0013\n\n,\n\n(16)\n\nand wmin \u2265 0 and wmax \u2265 0 are the minimum and maximum absolute valuations of all\ntraders in the market. For our simulations, we give the mechanism the exact knowledge of\nthe minimum and maximum absolute valuations for each schedule. Blum et al. (2006) show\nthat this method guarantees an expected competitive ratio of max(2, ln(wmax /wmin )) with\nrespect to the optimal offline solution in an adversarial setting. We were interested to see\nhow will this performed in practice in our simulations.\n163\n\n\fBredin, Parkes and Duong\n\n6.6 Strategic Open-outcry Matching: ZIP Agents\nTo compare Chain with the existing literature on continuous double auctions, we implement\na DA that in every period sorts all active offers and matches the highest valued bids with\nthe lowest valued asks so long as the match yields positive net surplus. The DA prices each\ntrading pair at the mean of the pair's declared valuations. Since the trade price depends\non a bidder's declaration, the market does not support truthful bidding strategies. We must\ntherefore adopt a method to simulate the behavior of bidding agents within this simple open\noutcry market.\nFor this, we randomly assign each bid to one of several \"protocol agents\" that each use\na modified ZIP trading algorithm, as initially presented by Cliff and Bruten (1998) and\nimproved upon by Preist and van Tol (1998). The ZIP algorithm is a common benchmark\nused to compare learned bidding behavior in a simple double-auction trading environment\nin which agents are present at once and adjust their bids in seeking a profitable trade. We\nadapt the ZIP algorithm for use in our dynamic environment.\nIn our experiments we consider five of these protocol agents. New offers are assigned\nuniformly at random to a protocol agent, which remains persistent throughout the simulation. Each offer is associated with a patience category, k \u2208 {low, medium, high}, defined\nto evenly partition the range of possible offer patience. Each protocol agent, j, is defined\nwith parameters (rj , \u03b2j , \u03b3j ) and maintains a profit margin, \u03bckj , on each patience category k.\nParameters (\u03b2j , \u03b3j ) control the adaptivity of the protocol agent in how it adjusts the target\nprofit margin on an individual offer, with \u03b2j \u223c U (0.1, 0.2) defining the offer-level learning\nrate and \u03b3j \u223c U (0.2, 0.8) defining the offer-level damping factor. Parameter rj \u2208 [0, 1] is\nthe learning rate adopted for updating the profit margins.\nThe protocol agents are trained over 10 trials and their final performance is measured\nin the 11th trial. The learning rate decreases through the training session and depends on\nthe initial learning rate rj0 and the adjustment rate rj+ . In period t \u2208 {1, . . . , tkend } of trial\nk \u2208 {1, . . . , T + 1}, where T = 10 is the number of trials used for training and tkend is the\nnumber of periods in trial k, the learning rate is defined as:\nrj := 1 \u2212\n\nrj0\n\n+ (k \u2212\n\n1)rj+\n\n+\n\n\u0012\n\nt\ntkend\n\n\u00132\n\nrj+\n\n!\n\n(17)\n\nwhere rj+ = (1 \u2212 rj0 )/(T + 1). We define rj0 := 0.7. The effect of this adjustment rule is that\nrj is initially 0.3, decreases during training, and trends to 0.0 as t \u2192 tend in trial k = 11.\nWithin a given trial, upon assignment of a new offer i in patience category k, the protocol\nagent managing the offer initializes (\u03bci (t), \u03b4i (t)) := (\u03bckj , 0), where \u03bci (t) represents the target\nprofit margin for the offer and \u03b4i (t) represents a profit-margin correction term. The target\nprofit margin and the profit margin correction term are adjusted for offer i in subsequent\nperiods while the bid remains active.\nThe target profit margin is used to define a bid price for the offer in each period while\nit remains active:\n\u0175i (t) := wi (1 + \u03bci (t)).\n164\n\n(18)\n\n\fChain: An Online Double Auction\n\nAt the end of a period in which an offer matches or simply expires, the profit margin\n\u03bckj for its patience category is updated as:\n\u03bckj := (1 \u2212 rj )\u03bckj + rj \u03bci (t),\n\n(19)\n\nwhere the amount of adaptivity depends on the learning rate rj . Because the profit margin\non an offer decays over its lifetime, this update adjusts towards a small profit margin if\nthe offer expires or took many periods to trade, and a larger profit margin otherwise. The\nlong-term learning of a protocol agent occurs through the profit margin assigned to each\npatience category.\nAt the start of a period each protocol agent also computes target prices for bids and\nasks in each patience category. These are used to drive an adjustment in the target profit\nmargin for each active bid and ask. Target prices \u03c4bk (t) and \u03c4sk (t) are computed as:\n\uf8f1\n{\u0175i (t \u2212 1)} + \u03be , if 0 > max {\u0175i (t \u2212 1)} + max {\u0175i (t \u2212 1)}\n\uf8f2 (1 + \u03b7) max\ni\u2208S(t\u22121)\ni\u2208B k (t\u22121)\ni\u2208B k (t\u22121)\nk\n\u03c4b (t) :=\n\uf8f3 (1 \u2212 \u03b7) max {\u0175i (t \u2212 1)} \u2212 \u03be , otherwise\ni\u2208B k (t\u22121)\n\n(20)\n\nand,\n\u03c4sk (t)\n\n:=\n\n\uf8f1\n\uf8f2 (1 + \u03b7)\n\n\uf8f3 (1 \u2212 \u03b7)\n\nmax {\u0175i (t \u2212 1)} + \u03be , if 0 > max {\u0175i (t \u2212 1)} + max {\u0175i (t \u2212 1)}\ni\u2208B(t\u22121)\n\ni\u2208S k (t\u22121)\n\ni\u2208S k (t\u22121)\n\nmax {\u0175i (t \u2212 1)} \u2212 \u03be , otherwise\n\ni\u2208S k (t\u22121)\n\n(21)\n\nwhere \u03be, \u03b7 \u223c U (0, 0.05). Here, B(t \u2212 1) and S(t \u2212 1) denote the set of active bids and asks\nin the market in period t \u2212 1 (defined before market clearing), and B k (t \u2212 1) and S k (t \u2212 1)\ndenote the restrictions to patience category k. The target price on a bid in category k\nis set to something slightly greater than the most competitive bid in the previous round\nwhen that bid could not trade, and slightly less otherwise. Similarly for the target price on\nasks, where these prices are negative, so that increasing the target price makes an ask more\ncompetitive.\nTarget prices are used to adjust the target profit margin at the start of each period on\nall active offers that arrived in some earlier period, where the influence of target prices is\nthrough the profit-margin correction term:\n\u03bci (t) :=\n\n(\u0175i (t \u2212 1) + \u03b4i (t))\n\u2212 1,\nwi\n\n(22)\n\nand the profit-margin correction term, \u03b4i (t), is defined in terms of the target price \u03c4ik (t)\n(equal to \u03c4bk (t) if i is a bid and \u03c4sk (t) otherwise) as,\n\u03b4i (t) := \u03b3j \u03b4i (t \u2212 1) + (1 \u2212 \u03b3j )\u03b2j (\u03c4ik (t) \u2212 \u0175i (t \u2212 1)),\n\n(23)\n\nwhere \u03b3j and \u03b2j are the offer-level learning rates and damping factor. The value wi and the\n\"-1\" term in Eq. (22) provide normalization. Eq. (23) is the Widrow-Hoff (Hassoun, 1995)\nrule, designed to minimize the least mean square error in the profit margin and adopted\nhere to mimic earlier ZIP designs.\n165\n\n\fBredin, Parkes and Duong\n\n6.7 Experimental Results\nOur experimental results show that market conditions drive DA choice. We compare allocative efficiency, revenue, and net efficiency. All results are averaged over 100 trials.\nIn experiments we found only minimal qualitative differences between the use of the two\npatience distributions. The uniform patience distribution provides a slight increase in efficiency over result using exponential patience, caused by a larger proportion of patient\nagents which relaxes somewhat the admission-price constraint in Eq. (3). For this reason\nwe choose to report only results for the uniform patience distribution.\nWhile the performance of all methods are summarized in Table 3, we omit the performance of some markets from the plots to keep the presentation of results as clear as possible.\nWe do not plot the price-based results for the median- or clearing-based prices because the\nperformance was typically around that of the performance of Chain instantiated on the\nhistory-EWMA price. We do not plot the windowed-McAfee results because of inconsistent performance, and in most cases, upon manual inspection, it was optimal to choose the\nsmallest possible window size, i.e. including only active bids and making it equivalent to\nactive-McAfee.\nOur plots also leave out the performance of the Blum et al. (2006) worst-case optimal\nmatching scheme because it was dominated by the fixed-price Chain instantiation and in\nmany cases failed to yield any substantial surplus. We note here that the modeling assumption made by Blum et al. (2006) is quite different than that in our work: they worry about\nperformance in an adversarial environment while we consider probabilistic environments.\nOur fixed-price Chain mechanism operates essentially identically to the surplus-maximizing\nscheme of Blum et al. (2006), except that Chain can also use additional statistical information to set the ideal price, rather than drawing the price from a distribution that is used to\nguarantee worst-case performance against an adversary. We defer the results for the Blum\net al. (2006) scheme to Table 3.\nFigures 5\u20138 plot results from two sets of experiments, one for high-patience/low-volatility\nand one for low-patience/high-volatility, as we vary the inter-arrival time (and thus the\narrival intensity), volatility and maximal patience. All plots are for allocative efficiency\nexcept Figure 6, where we consider net efficiency. Active-McAfee is included on Figure 5,\nbut not on any other plots because it did not improve upon the McAfee performance in\nthe other environments. To emphasize: the results for greedy provide an upper-bound on\nthe best possible performance because this is a non-truthful algorithm, simulated here with\ntruthful inputs.\nIn Figure 5 (left) we see that from within the truthful DAs, the McAfee-based DA has\nthe best efficiency for medium to low arrival intensities. There also is a general decrease\nin performance, relative to the optimal offline solution, as the arrival intensity falls. This\ntrend, also observed with the greedy (non-truthful) DA, occurs because the Chain scheme\nis myopic in that it matches as soon as the static DA building block finds a match, while\nit is better to be less myopic when arrival intensity is low. The McAfee-based DAs are less\nsensitive to this than other methods because they can aggressively update prices using the\nactive traders. The price-based DAs experience inefficiencies due to the lag in price updates\nbecause they use only expired, traded, and priced-out offers to calculate prices.\n166\n\n\fChain: An Online Double Auction\n\n(patience=6, volatility=0.01)\ngreedy\nzip\nmcafee\newma\nactive-mcafee\nfixed-price\n\n1.2\n1\n\ngreedy\nmcafee\nactive-mcafee\newma\nfixed-price\nzip\n\n1.4\nAllocative Efficiency\n\n1.4\nAllocative Efficiency\n\n(patience=2, volatility=0.08)\n\n0.8\n0.6\n0.4\n0.2\n\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n0.8\n1\nInter-arrival Time\n\n1.2\n\n1.4\n\n0\n\n0.2\n\n0.4\n\n0.6\n0.8\n1\nInter-arrival Time\n\n1.2\n\n1.4\n\nFigure 5: Allocative efficiency vs. inter-arrival time (1 / intensity) for several DAs. The left\nplot shows high-patience, low-volatility simulations, whereas the right plots results from\nlow-patience, high-volatility runs. Both sets of experiments use uniform patience distributions.\n\n(patience=6, volatility=0.01)\ngreedy\nzip\nmcafee\newma\nactive-mcafee\nfixed-price\n\n1.2\n1\n\ngreedy\nmcafee\nactive-mcafee\newma\nfixed-price\nzip\n\n1.4\n1.2\nNet Efficiency\n\n1.4\n\nNet Efficiency\n\n(patience=2, volatility=0.08)\n\n0.8\n0.6\n\n1\n0.8\n0.6\n\n0.4\n\n0.4\n\n0.2\n\n0.2\n\n0\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n0.8\n1\nInter-arrival Time\n\n1.2\n\n1.4\n\n0\n\n0.2\n\n0.4\n\n0.6\n0.8\n1\nInter-arrival Time\n\n1.2\n\n1.4\n\nFigure 6: Net efficiency vs. inter-arrival time (1 / intensity) for several DAs. The left plot\nshows high-patience, low-volatility simulations, whereas the right plots results from lowpatience, high-volatility runs. Both sets of experiments use uniform patience distributions.\n\n167\n\n\fBredin, Parkes and Duong\n\nFor very high arrival intensity we see Active-McAfee dominates McAfee. Active-McAfee\nsmooths the price, which helps to mitigate the impact of fluctuations in cost on the admission\nprice via Eq. (3) in return for less responsiveness. This is helpful in \"well-behaved\" markets\nwith high arrival intensity and low volatility but was not helpful in most environments we\nstudied, where the additional responsiveness provided by the (vanilla) McAfee scheme paid\noff.\nThe ZIP market also has good performance in this high-patience/low-volatility environment. The reason is simple: this is an easy environment for simple learning agents, and the\nagents quickly learn to be truthful. We emphasize that these ZIP market results should be\ntreated with caution and are certainly optimistic. This is because the ZIP agents are not\nprogrammed to consider timing-based manipulations. The effect in this environment is that\nthe ZIP market tends to operate as if a truthful market, but without the cost of imposing\ntruthfulness explicitly via market-clearing rules. By comparison the Chain auctions are\nfully strategyproof, to both value and temporal manipulations.\nCompare now with Figure 5 (right), which is for low patience and high volatility. Now we\nsee that McAfee dominates across the range of arrival intensities. Moreover, the performance\nof ZIP is now quite poor because the agents do not have enough time to adjust their bids\n(patience is low) and high volatility makes this a more difficult environment. With volatile\nvaluations, the possibility of valuation swings leaves open the possibility of larger profits,\nluring agents to set wider profit margins, but only after the market changes. The ZIP agents\nalso have fewer concurrent competitive offers to use in setting useful price targets during\nlearning. As we might expect, high volatility also negatively impacts the efficiency of the\nfixed-price scheme.\nIn Figure 6 we see that the net efficiency trends are qualitatively similar except that the\ncompetition-based DAs such as McAfee fare less well in comparison with the price-based\nDAs. The auctioneer accrues more revenue for competition-based matching rules such as\nMcAfee because they often generate buy and sell prices with a spread. Together with\nthe competition-based schemes being intrinsically more dynamic, this drives an increased\nprice spread in Chain via the admission price constraints. In Figure 6 (left) we see that\nthe fixed-price scheme performs well for high arrival intensity while EWMA dominates for\nintermediate arrival intensities. The McAfee scheme is still dominant for lower patience and\nhigher volatility (Figure 6, right).\nTo reinforce these observations, in Table 3 we present the the net efficiency, allocative\nefficiency and (normalized) revenue across all arrival intensities (i.e. inter-arrival time from\n0.05 to 1.5) and for both low and high volatility trials. All five price-based methods, all\nthree competition-based methods, and all three comparison methods are included. We\nhighlight the best performing competition-based method, price-based method, as well as\nthe performance of the ZIP market (skipping over the non-truthful, greedy algorithm). We\nomit information about the mean standard error for each measurement because in no case\ndid this error exceed a tenth of a percent of the mean optimal surplus. From within the\ntruthful DAs, we see that the McAfee-based scheme dominates overall for both allocative\nand net efficiency and both low and high volatility, although EWMA competes with McAfee\nfor net efficiency in low volatility markets. Notice also the good performance of the ZIPbased market (with the aforementioned caveat about the restricted strategy space) at low\nvolatilities.\n168\n\n\fChain: An Online Double Auction\n\nscenario\nlow-volt/high-pat\nhigh-volt/low-pat\nnet\nalloc rev\nnet\nalloc rev\n0.33 0.47 0.14 0.40 0.45 0.05\n0.24 0.35 0.11 0.32 0.37 0.05\n0.24 0.26 0.02 0.21 0.23 0.03\n0.33 0.34 0.01 0.17 0.17 0.01\n0.33 0.35 0.03 0.19 0.22 0.03\n0.23 0.23 0.00 0.04 0.04 0.00\n0.33 0.34 0.01 0.15 0.16 0.01\n0.33 0.34 0.01 0.17 0.18 0.01\n0.10 0.10 0.00 0.02 0.02 0.00\n0.86 0.86 0.00 0.87 0.87 0.00\n0.82 0.82 0.00 0.23 0.23 0.00\n\nmcafee\nactive-mcafee\nwindowed-mcafee\nhistory-clearing\nhistory-ewma\nhistory-fixed\nhistory-mcafee\nhistory-median\nblum et al.\ngreedy\nzip\n\nTable 3: Net efficiency, allocative efficiency and auctioneer revenue (all normalized by the optimal\nvalue from trade), averaged across all arrival intensities (0.05\u20131.5) and for low and high\nvalue volatility. The best performing competition-based, price-based and 'other' (ignoring\ngreedy, which is not truthful) results are highlighted.\n\n(patience=6, inter-arrival=1.0)\n1.4\n\ngreedy\nzip\nmcafee\newma\nfixed-price\n\n1\n\ngreedy\nmcafee\newma\nzip\nfixed-price\n\n1.2\nAllocative Efficiency\n\n1.2\nAllocative Efficiency\n\n(patience=2, inter-arrival=1.0)\n1.4\n\n0.8\n0.6\n0.4\n0.2\n\n1\n0.8\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.1\n\n0.12\n\n0.14\n\n0\n\nVolatility\n\n0.02 0.04 0.06 0.08\n\n0.1\n\n0.12 0.14\n\nVolatility\n\nFigure 7: Allocative efficiency vs. volatility for several DAs for a fairly low arrival intensity. The\nleft plot is for large maximal patience and the right plot is for small maximal patience.\nBoth sets of experiments use uniform patience distributions.\n\nFigure 7 plots allocative efficiency versus volatility for high patience (left) and low\npatience (right) and for fairly low arrival intensity. Higher volatility hurts all methods \u2013\nespecially the ZIP agents, which struggle to learn appropriate profit and price targets,\nprobably due to few opportunities to update prices for every individual offer. The McAfee\nscheme fairs very well, showing good robustness for both large patience and small patience\nenvironments. The fixed-price scheme has the best performance when there is zero volatility\nbut its efficiency falls off extremely quickly as volatility increases.\n169\n\n\fBredin, Parkes and Duong\n\n(inter-arrival=1.0, volatility=0.01)\n1.4\n\ngreedy\nzip\nmcafee\newma\nfixed-price\n\n1\n\ngreedy\nzip\nmcafee\newma\nfixed-price\n\n1.2\nAllocative Efficiency\n\n1.2\nAllocative Efficiency\n\n(inter-arrival=1.0, volatility=0.08)\n1.4\n\n0.8\n0.6\n0.4\n0.2\n\n1\n0.8\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n2\n\n4\n6\nMaximal Patience\n\n8\n\n10\n\n0\n\n2\n\n4\n6\nMaximal Patience\n\n8\n\n10\n\nFigure 8: Allocative efficiency vs. maximal patience for several DAs and fairly low arrival intensity.\nThe left plot is for low volatility and the right plot is for high volatility. Both sets of\nexperiments use uniform patience distributions.\n\nWe also consider the effect of varying maximal patience. This is shown in Figure 8,\nwith low volatility (left) and high volatility (right). Again, the McAfee scheme is the best\nof the truthful DAs based on Chain. We also see that the performance of ZIP improves\nas patience increases due to more opportunities for learning. Perversely, a larger patience\ncan negatively affect the truthful DAs. In part this is simply because the performance of\ngreedy online schemes, relative to the offline optimal, decreases as patience increases and\nthe offline optimal matching is able to draw more benefit from its lack of myopia.\nWe also suspected another culprit, however. The possibility of the presence of patient\nagents requires the truthful DAs to include additional terms in the max operator in Eq. (3)\nto prevent manipulations, leading to higher admission prices and less admitted offers. To\nbetter understand this effect we experimented with delayed market clearing in the McAfee\nscheme, where the market matches agents only every \u03c4 -th period (the \"clearing duration\").\nThe idea is to make a tradeoff between using fewer admission prices and the possibility that\nwe will miss the opportunity to match some impatient offers.\nFigure 9 shows allocative efficiency when the matching mechanism clears less frequently\nand for different maximal patience, K. Figure 9 (left) is for low volatility. There we\nsee that the best clearing duration is roughly 1, 2, 3 and 4 for maximal patience of K \u2208\n{4, 6, 8, 10} and that by optimizing the clearing duration the performance of McAfee remains\napproximately constant as maximal patience increases. In Figure 9 (right) we consider the\neffect in a high volatility environment, with these results averaged over 500 trials because the\nperformance of the DA has higher variance. We see a qualitatively similar trend, although\nhigher maximal patience now hurts overall and cannot be fully compensated for by tuning\nthe clearing duration.\n\n7. Related Work\nStatic two-sided market problems have been widely studied (Myerson & Satterthwaite, 1983;\nChatterjee & Samuelson, 1987; Satterthwaite & Williams, 1989; Yoon, 2001; Deshmukh\n170\n\n\fChain: An Online Double Auction\n\n(inter-arrival=1.0 patience=K, volatility=0.01)\n\n(inter-arrival=1.0 patience=K, volatility=0.08)\n\n0.55\n\n0.45\n0.4\nAllocative Efficiency\n\nAllocative Efficiency\n\n0.5\n0.45\n0.4\n0.35\n0.3\nK=4\nK=6\nK=8\nK=10\n\n0.25\n0.2\n0.15\n0\n\n0.35\n0.3\n0.25\nK=4\nK=6\nK=8\nK=10\n\n0.2\n0.15\n2\n\n4\n6\nClearing Duration\n\n8\n\n10\n\n0\n\n2\n\n4\n6\nClearing Duration\n\n8\n\n10\n\nFigure 9: Allocative efficiency vs. clearing duration in the McAfee-based Chain auction for fairly\nlow arrival intensity and as maximal patience is varied from 4 to 10. The left plot is\nfor low volatility and the right plot is for high volatility. Both sets of experiments use\nuniform patience distributions.\n\net al., 2002). In a classic result, Myerson and Satterthwaite proved that it is impossible to\nachieve efficiency with voluntary participation and without running a deficit, even relaxing\ndominant-strategy equilibrium to a Bayesian-Nash equilibrium. Some truthful DAs are\nknown for static problems (McAfee, 1992; Huang et al., 2002; Babaioff & Nisan, 2004;\nBabaioff & Walsh, 2005). For instance, McAfee introduced a DA that sometimes forfeits\ntrade in return for achieving truthfulness. McAfee's auction achieves asymptotic efficiency\nas the number of buyers and sellers increases. Huang et al. extend McAfee's mechanism\nto handle agents exchanging multiple units of a single commodity. Babaioff and colleagues\nhave considered extensions of this work to supply-chain and spatially distributed markets.\nOur problem is also similar to a traditional continuous double auction (CDA), where\nbuyers and sellers may at any time submit offers to a market that pairs an offer as soon\nas a matching offer is submitted. Early work considered market efficiency of CDAs with\nhuman experiments in labs (Smith, 1962), while recent work investigates the use of software\nagents to execute trades (Rust et al., 1994; Cliff & Bruten, 1998; Gjerstad & Dickhaut,\n1998; Tesauro & Bredin, 2002). While these markets have no dominant strategy equilibria,\npopulations of software trading agents can learn to extract virtually all available surplus,\nand even simple automated trading strategies outperform human traders (Das et al., 2001).\nHowever, these studies of CDAs assume that all traders share a known deadline by which\ntrades must be executed. This is quite different from our setting, in which we have dynamic\narrival and departure.\nTruthful one-sided online auctions, in which agents arrive and depart across time, have\nreceived some recent attention (Lavi & Nisan, 2000; Hajiaghayi et al., 2004, 2005; Porter,\n2004; Lavi & Nisan, 2005). We adopt and extend the monotonicity-based truthful characterization in the work of Hajiaghayi et al. (2005) in developing our framework for truthful\nDAs. Our model of DAs must also address some of the same constraints on timing that\noccur in Porter, Hajiaghayi, and Lavi and Nisan's work. In these previous works, the items\n171\n\n\fBredin, Parkes and Duong\n\nwere reusable or expiring and could only be allocated in particular periods. In our work we\nprovide limited allowance to the match-maker, allowing it to hold onto a seller's item until\na matched buyer is ready to depart (perhaps after the seller has departed).\nThe closest work in the literature is due to Blum et al. (2006), who present online matching algorithms for the same dynamic DA model. The main focus in their paper is on the\ndesign of matching algorithms with good worst-case performance in an adversarial setting,\ni.e. within the framework of competitive analysis. Issues related to incentive compatibility\nreceive less attention. One way in which their work is more general is that they also study\ngoals of profit and maximizing the number of trades, in addition to the goal of maximizing\nsocial welfare that we consider in our work. However, the only algorithmic result that they\npresent that is truthful in our model (where agents can misreport arrival and departure) is\nfor the goal of social welfare. The DA that they describe is an instance of Chain in which\na fixed price is drawn from a distribution at the start of time, and used as the matching\nprice in every period. Perhaps unsurprisingly, given their worst-case approach, we observe\nthat their auction performs significantly worse than Chain defined for a fixed price that is\npicked to optimize welfare given distributional information about the domain.\n\n8. Conclusions\nWe presented a general framework to construct algorithms to match buyers with sellers in\nonline markets where both valuation and activity-period information are private to agents.\nThese algorithms guarantee truthful dominant strategies by first imposing a minimum admission price for each offer and then pricing and pairing the offer at the first opportunity.\nAt the heart of the Chain framework lies a pricing algorithm that must for each offer either\ndetermine a price independent of any information describing the offer or choose to discard\nthe offer. The pricing algorithm should be chosen to match market conditions. We present\nseveral examples of suitable pricing schemes, including fixed-price, moving-average, and\nMcAfee-based schemes.\nMore often than not, we find that the competition-based scheme that employs a McAfeebased rule to truthfully price the market delivers the best allocative efficiency. For exceptionally low volatility and high arrival intensity, we find that adaptive price-based schemes\nsuch as an exponentially-weighted moving average (EWMA) and even fixed price schemes\nperform well. We see qualitatively similar results for net efficiency, where the revenue that\naccrues to the auctioneer is discounted, albeit that the price-based rules such as EWMA\nhave improved performance because they have no price spread. The observations are rooted\nin simulations comparing the market efficiency under each mechanism with the optimal offline solution.\nAdditionally, we compare the efficiency of our truthful markets with a fixed-price worstcase optimal scheme presented by Blum et al. (2006), a market of strategic agents using\na variant on the ZIP price update algorithm developed by Cliff and Bruten (1998) for\ncontinuous double auctions, and a non-truthful, greedy matching algorithm to provide an\nupper-bound on performance. The best of our schemes yield around 33% net efficiency\nin low volatility, high patience environments and 40% net efficiency in high volatility, low\npatience environments, while the greedy bound suggests that as much as 86% efficiency\nis possible with non-strategic agents. We note that the Blum et al.scheme, designed for\nadversarial settings, fairs poorly in our simulations (< 10%).\n172\n\n\fChain: An Online Double Auction\n\nOne can argue, we think convincingly, that truthfulness brings benefits in itself in that it\navoids the waste of costly counterspeculation and promotes fairness in markets (Sandholm,\n2000; Abdulkadiro\u01e7lu et al., 2006). On the other hand, it is certainly of interest that\nthe gap between the efficiency of greedy matching with non-truthful matching and that of\nour truthful auctions is so large. Here, we observe that the ZIP-populated (non-truthful)\nmarkets achieve around 82% efficiency in low volatility environments but collapse to around\n23% efficiency in high volatility environments. Based on this, one might conjecture that\ndesigning for truthfulness is especially important in badly behaved, highly volatile (\"thin\")\nenvironments but less important in well behaved, less volatile (\"thick\") environments.\nFormalizing this tradeoff between providing absolute truthfulness and approximate\ntruthfulness, and while considering the nature of the environment, is an interesting direction for future work (see paper by Parkes et al., 2001). Given that reporting of market\nstatistics can be incorporated within our framework (see Section 5.1), and given that markets also play a role in information aggregation and value discovery, future research should\nalso consider this additional aspect of market design. Perhaps there is an interesting tradeoff\nbetween efficiency, truthful value revelation, and the process of information aggregation.\nWhile the general Chain framework achieves good efficiency, further tuning seems possible. One direction is to adopt a meta-pricing scheme that chooses, or blends, prices from\ncompeting algorithms. Another direction is to consider richer temporal models; e.g., the\nvalue of goods to agents might decay or grow over time to better account for the time\nvalue of assets. A richer temporal model might also consider the possibility of agents or the\nmatch-maker taking short positions (including short-term cash deficits) to increase trade.\nIt is also interesting to extend our work to markets with non-identical goods and more\ncomplex valuation models such as bundle trades (Chu & Shen, 2007; Babaioff & Walsh,\n2005; Gonen et al., 2007), and to dynamic matching problems without prices, such as an\nonline variation of the classic \"marriage\" problem (Gusfield & Irving, 1989).\n\nAcknowledgments\nAn earlier version of this paper appeared in the Proceedings of the 21st Conference on Uncertainty in Artificial Intelligence, 2005. This paper further characterizes necessary conditions\nfor truthful online trade; truthfully matches offers using a generalized framework based\nupon an arbitrary truthful static pricing rule; and compares the efficiency of our truthful\nframework to that achieved in non-truthful markets populated with strategic trading agents\nand with that of worst-case optimal double auctions.\nParkes is supported in part by NSF grant IIS-0238147 and an Alfred P. Sloan Fellowship\nand Bredin would like to thank the Harvard School of Engineering and Applied Sciences\nfor hosting his sabbatical during which much this work was completed. Thanks also to\nthe three anonymous reviewers, who provided excellent suggestions in improving an earlier\ndraft of this paper.\n\nAppendix: Proofs\nLemma 1 Procedure Match defines a valid strong no-trade construction.\n173\n\n\fBredin, Parkes and Duong\n\nProof: In all cases, SNTt \u2286 NTt . The set NTt is correctly constructed: equal to all\nremaining bids bt when (j = 0) in Case I, all remaining bids st when (i = 0) in Case II,\nand all remaining bids and asks otherwise. In each case, no bid (or ask) in NTt could have\ntraded at any price because there was no available bid or ask on the opposite of the market\ngiven its order.\nIn verifying strong no-trade (SNT) conditions (a) and (b), we proceed by case analysis.\nCase I. (i 6= 0) and (j = 0). NTt := bt .\n(I-1) \u2200k \u2208 st * (d\u02c6k = t) and SNTt := bt . For SNT-a, consider l \u2208 NTt with d\u02c6l > t. If\nl deviates and i changes but we remain in Case I then NTt is unchanged and still\ncontains l. If l deviates and i \u2192 0 then, we go to Case III and SNTt := bt \u222a st and still\ncontains l. For SNT-b, consider l \u2208 SNTt that deviates with d\u02c6l > t. Again, either we\nremain in this case and SNTt is unchanged or i \u2192 0 and we go to Case III. But now\nSNTt still contains all bt and is therefore unchanged for all agents with d\u02c6k > t.\n(I-2) Buyer k \u2208 bt with d\u02c6k = t and bk \u2265 pt and SNTt := bt . For SNT-a, consider l \u2208 NTt\nwith d\u02c6l > t. We remain in this case for any deviation by buyer l because buyer k\nwill ensure i 6= 0, and so SNTt remains unchanged and still contains l. For SNT-b, if\nl \u2208 SNTt with d\u02c6l > t deviates we again remain in this case and SNTt is unchanged.\n(I-3) Some seller with d\u02c6k > t and no buyer with d\u02c6k\u2032 = t willing to accept the price.\nSNTt := bt \\ checkedB . For SNT-a, consider l \u2208 NTt with d\u02c6l > t. First, suppose\nl \u2208 checkedB and i 6= l. If l deviates but still has d\u02c6l > t, then even if i := l then we\nremain in this case and l does not enter SNTt . Second, suppose l \u2208 checkedB and\n(i = l). If l deviates but still has d\u02c6l > t, then even if (i = 0) and (j = 0), we go\nto Case III and SNTt = \u2205 and l does not enter SNTt . Third, suppose l \u2208\n/ checkedB\n\u02c6\n\u02c6\nand dl > t. Deviating while dl > t has no effect and we remain in this case and l\nremains in SNTt . For SNT-b, consider l \u2208 SNTt with d\u02c6l > t, i.e. with l \u2208\n/ checkedB .\nIf l deviates but d\u02c6l > t, then this has no effect and we remain in this case and SNTt\nremains unchanged.\nCase II. (j 6= 0) and (i = 0). NTt := st . Symmetric with Case I.\nCase III. (i = 0) and (j = 0). NTt := bt \u222a st .\n(III-1) \u2200k \u2208 bt * (d\u02c6k = t) but \u2203k\u2032 \u2208 st * (d\u02c6k\u2032 > t) and SNTt := bt \u222a st . For SNT-a, consider\nl \u2208 NTt with d\u02c6l > t. This must be an ask. If l deviates but we remain in this case,\nthen l remains in SNTt . If j := l, then we go to Case II and SNTt := st and l remains\nin SNTt . For SNT-b, consider l \u2208 SNTt with d\u02c6l > t, which must be an ask. If l\ndeviates but we remain in this case, SNTt is unchanged. If l deviates and j := l, then\nwe go to Case II, SNTt := st , and buyers bt are removed from SNTt . But this is OK\nbecause all buyers depart in period t anyway.\n(III-2) \u2200k \u2208 st cdot(d\u02c6k = t) but \u2203k\u2032 \u2208 bt * (d\u02c6k\u2032 > t) and SNTt := bt \u222a st . Symmetric to Case\nIII-1.\n(III-3) \u2200k \u2208 bt * (d\u02c6k = t) and \u2200k \u2208 st cdot(d\u02c6k = t). SNTt := bt \u222a st . SNT-a and SNT-b are\ntrivially met because no bids or asks have departure past the current period.\n174\n\n\fChain: An Online Double Auction\n\n(III-4) \u2203k \u2208 bt * (d\u02c6k > t) and \u2203k\u2032 \u2208 st * (d\u02c6k\u2032 > t) and SNTt := \u2205. For SNT-a, consider l \u2208 NTt\nwith d\u02c6l > t. Assume that l is a bid. If l deviates and d\u02c6l > t and i = 0 then we remain\nin this case and l is not in SNTt . If l deviates and d\u02c6l > t but i := l, then we go to\nCase I and we are necessarily in Sub-case (I-a) because d\u02c6l > t and there can be no\nother bid willing to accept the price (else i 6= 0 in the first place). Thus, we would\nhave SNTt := bt \\ checkedB and l would not be in SNTt . For SNT-b, this is trivially\nsatisfied because there are no agents l \u2208 SNTt .\n\u0003\nLemma 5 The set of active agents (other than i) in period t in Chain is independent of\ni's report while agent i remains active, and would be unchanged if i's arrival is later than\nperiod t.\nProof: Fix some arrival period \u00e2i . Show for any \u00e2i \u2265 ai , the set of active agents in period\nt \u2265 \u00e2i while i is active is the same as At without agent i's arrival until some a\u2032i > t. Proceed\nby induction on the number of periods that t is after \u00e2i . For period t = \u00e2i this is trivial.\nNow consider some period \u00e2i + r, for some r \u2265 1 and assume the inductive hypothesis for\n\u2032\n\u00e2i + r \u2212 1. Since i is still active then, i \u2208 SNTt for t\u2032 = \u00e2i + r \u2212 1, and therefore the other\n\u2032\nagents in SNTt that survive into this period are independent of agent i's report by strong\nno-trade condition (b). This completes the proof.\n\u0003\nLemma 6 The price constructed from admission price q\u030c and post-arrival price p\u030c is valueindependent and monotonic-increasing when the matching rule in Chain is well-defined,\nthe strong no-trade construction is valid, and agent patience is bounded by K.\nProof: First fix \u00e2i , d\u02c6i and \u03b8\u2212i . To show value-independence (B1), first note that q\u030c is\nvalue-independent, since whether or not i \u2208 SNTt in some pre-arrival period t is valueindependent by strong no-trade condition (a) and price zi (H t , At \\ i, \u03c9) in such a period\nis agent-independent by definition. Term p\u030c is also value-independent: the decision period\nt\u2217 to agent i, if any, is independent of \u0175i since the other agents that remain active are\nindependent of agent i while it is active by Lemma 5, and whether or not i \u2208 SNTt is\nvalue-independent by strong no-trade (a); and the price in t\u2217 is value-independent when\nthe set of other active agents are value-independent.\nNow fix \u03b8\u2212i and show the price is monotonically-increasing in a tighter arrival-departure\ninterval (B2). First note that q\u030c is monotonic-increasing in [\u00e2i , d\u02c6i ] \u2282 [ai , di ] because an earlier\nd\u02c6i and later \u00e2i increases the domain t \u2208 [d\u02c6i \u2212 K, \u00e2i \u2212 1] on which q\u030c is defined. Fix some\n\u00e2i \u2265 ai . Argue the price increases with earlier d\u2032i \u2264 d\u02c6i , for any d\u02c6i > \u00e2i . To see this, note that\neither d\u02c6i < t\u2217 and so pi (\u00e2i , d\u2032i , \u03b8\u2212i , \u03c9) = \u221e for all d\u2032i \u2264 d\u02c6i , or d\u02c6i \u2265 t\u2217 and the price is constant\nuntil d\u02c6i < t\u2217 at which point it becomes \u221e. Fix some d\u02c6i \u2265 ai . Argue the price increases with\nlater a\u2032i \u2265 \u00e2i , where \u00e2i \u2265 d\u02c6i \u2212 K. First, while a\u2032i \u2264 t\u2217, then p\u030c is unchanged by Lemma 5.\nThe interesting case is when a\u2032i > t\u2217, especially when q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9).\nBy reporting a later arrival, the agent can delay its decision period and perhaps hope to\nachieve a lower price. But, note that in this case t\u2217 \u2208 [d\u02c6i \u2212 K, a\u2032i \u2212 1] since d\u02c6i \u2212 K \u2264 \u00e2i and\nt\u2217 \u2208 [\u00e2i , a\u2032i \u2212 1] and so q\u030c(a\u2032i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 p\u030c(H t\u2217 , At\u2217 \\ i, \u03c9) because q\u030c now includes the price\nin period t\u2217 since i \u2208\n/ SNTt\u2217 in that pre-arrival period by Lemma 5. Overall, we see that\nalthough p\u030c may decrease, max(q\u030c, p\u030c) cannot decrease.\n\u0003\n175\n\n\fBredin, Parkes and Duong\n\nLemma 7 A strongly truthful, canonical dynamic DA must define price pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265\nzi (H t\u2217 , At\u2217 \\ i, \u03c9) where t\u2217 is the decision period for bid i (if it exists). Moreover, the bid\nmust be priced-out in period t\u2217 if it is not matched.\nProof: (a) First, suppose zi (H t\u2217 , At\u2217 \\ i, \u03c9) > \u0175i but bid i is not priced-out and instead\nsurvives as an active bid into the next period. But with i \u2208\n/ SNTt\u2217 , the set of active bids in\nperiod t \u2217 +1 need not be independent of agent i's bid and the price zi (H t\u2217+1 , At\u2217+1 \\ i, \u03c9)\nneed not be agent-independent. Yet, canonical rule (iii) requires that this price be used\nto determine whether or not the agent matches, and so the dynamic DA need not be\ntruthful. (b) Now assume for contradiction that pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < zi (H t\u2217 , At\u2217 \\ i, \u03c9). First,\nif zi (H t\u2217 , At\u2217 \\ i, \u03c9) < \u221e, then an agent with value pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < wi < zi (H t\u2217 , At\u2217 \\ i, \u03c9)\nwill report \u0175i = zi (H t\u2217 , At\u2217 \\ i, \u03c9) + \u01eb and trade now for a final payment less than its true\nvalue (whereas it would be priced-out if it reported its true value). If zi (H t\u2217 , At\u2217 \\i, \u03c9) = \u221e,\nthen pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < zi (H t\u2217 , At\u2217 \\i, \u03c9) implies that some bids will survive this period even\nthough they are priced-out by the matching rule and not in the strong no-trade set. This\ncompromises the truthfulness of the dynamic DA, as discussed in part (a).\n\u0003\nLemma 8 A strongly truthful, canonical and individual-rational dynamic DA must define\nprice pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), and a bid with \u0175i < q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) must be pricedout upon admission.\nProof: Suppose d\u02c6i < \u00e2i + K so that [d\u02c6i \u2212 K, \u00e2i \u2212 1] is non-empty. For d\u02c6i = \u00e2i + K \u2212 1,\nwhen t = d\u02c6i \u2212 K is a decision period (and i \u2208\n/ SNTt ), we have\npi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 pi (d\u02c6i \u2212 K, d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 zi (H t , At \\ i, \u03c9),\n\n(24)\n\nwhere the first inequality is by monotonicity (B2) and the second follows from Lemma 7\nsince d\u02c6i \u2212 K is a decision period, and would remain one with report \u03b8i\u2032 = (d\u02c6i \u2212 K, d\u02c6i , wi\u2032 )\nby Lemma 5. This establishes pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) for d\u02c6i = \u00e2i + K \u2212 1. When\nd\u02c6i = \u00e2i + K \u2212 2, then we need Eq. (24), and also when t = d\u02c6i \u2212 K + 1 is a decision period\n(and i \u2208\n/ SNTt ) we have,\n\npi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 pi (d\u02c6i \u2212 K + 1, d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 zi (H t , At \\ i, \u03c9),\n\n(25)\n\nby the same reasoning as above. This generalizes to di = ai + K \u2212 r for r \u2208 {2, . . . , K}\nto establish pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) for the general case. To see the bid must be\npriced-out when \u0175i < q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), note that if it were to remain active it could match in\nthe matching rule and by canonical (iii) need to trade, and thus fail individual-rationality\nsince the payment collected would be more than the value.\n\u0003\n\nReferences\nAbdulkadiro\u01e7lu, A., Pathak, P. A., Roth, A. E., & S\u00f6nmez, T. (2006). Changing the Boston\nschool choice mechanism. Tech. rep., National Bureau of Economic Research Working\nPaper No. 11965.\nArcher, A., & Tardos, E. (2001). Truthful mechanisms for one-parameter agents. In Proceedings of the 42nd IEEE Symposium on Foundations of Computer Science, pp. 482\u2013491.\n176\n\n\fChain: An Online Double Auction\n\nBabaioff, M., & Nisan, N. (2004). Concurrent auctions across the supply chain. Journal of\nArtificial Intelligence Research, 21, 595\u2013629.\nBabaioff, M., Nisan, N., & Pavlov, E. (2001). Mechanisms for a spatially distributed market.\nIn Proceedings of the 5th ACM Conference on Electronic Commerce, pp. 9\u201320.\nBabaioff, M., & Walsh, W. E. (2005). Incentive-compatible, budget-balanced, yet highly\nefficient auctions for supply chain formation. Decision Support Systems, 39, 123\u2013149.\nBlum, A., Sandholm, T., & Zinkevich, M. (2006). Online algorithms for market clearing.\nJournal of the ACM, 53, 845\u2013879.\nChatterjee, K., & Samuelson, L. (1987). Bargaining with two-sided incomplete information:\nAn infinite horizon model with alternating offers. Review of Economic Studies, 54,\n175\u2013192.\nChu, L. Y., & Shen, Z. M. (2007). Truthful double auction mechanisms for e-marketplace.\nOperations Research. To appear.\nCliff, D., & Bruten, J. (1998). Simple bargaining agents for decentralized market-based\ncontrol.. In Proceedings of the European Simulation Multiconference \u2013 Simulation Past, Present and Future, pp. 478\u2013485, Manchester, UK.\nCopeland, T. E., & Weston, J. F. (1992). Financial Theory and Corporate Policy (Third\nedition). Addison-Wesley, Reading, MA.\nDas, R., Hanson, J. E., Kephart, J. O., & Tesauro, G. (2001). Agent-human interactions\nin the continuous double auction. In Proceedings of the 17th International Joint\nConference on Artificial Intelligence, pp. 1169\u20131187.\nDeshmukh, K., Goldberg, A. V., Hartline, J. D., & Karlin, A. R. (2002). Truthful and competitive double auctions. In Proceedings of the European Symposium on Algorithms,\npp. 361\u2013373.\nGerkey, B. P., & Mataric, M. J. (2002). Sold!: Auction methods for multirobot coordination.\nIEEE Transactions on Robotics and Automation, 18 (5), 758\u2013768.\nGjerstad, S., & Dickhaut, J. (1998). Price formation in double auctions. Games and\nEconomic Behavior, 22 (1), 1\u201329.\nGoldberg, A., & Hartline, J. (2003). Envy-free auctions for digital goods. In Proceedings of\nthe 4th ACM Conference on Electronic Commerce, pp. 29\u201335.\nGonen, M., Gonen, R., & Pavlov, E. (2007). Generalized trade reduction mechanisms. In\nProceedings of the 8th ACM Conference on Electronic Commerce, pp. 20\u201329.\nGusfield, D., & Irving, R. W. (1989). The Stable Marriage Problem: Structure and Algorithms. MIT Press, Cambridge, MA.\nHajiaghayi, M. T., Kleinberg, R., Mahdian, M., & Parkes, D. C. (2005). Online auctions with\nre-usable goods. In Proceedings of the 6th ACM Conference on Electronic Commerce,\npp. 165\u2013174.\nHajiaghayi, M. T., Kleinberg, R., & Parkes, D. C. (2004). Adaptive limited-supply online\nauctions. In Proceedings of the 5th ACM Conference on Electronic Commerce, pp.\n71\u201380.\n177\n\n\fBredin, Parkes and Duong\n\nHassoun, M. H. (1995). Fundamentals of Artificial Neural Networks. MIT Press, Cambridge,\nMA.\nHuang, P., Scheller-Wolf, A., & Sycara, K. (2002). Design of a multi-unit double auction\ne-market. Computational Intelligence, 18, 596\u2013617.\nLagoudakis, M., Markakis, V., Kempe, D., Keskinocak, P., Koenig, S., Kleywegt, A., Tovey,\nC., Meyerson, A., & Jain, S. (2005). Auction-based multi-robot routing. In Proceedings\nof the Robotics Science and Systems Conference, pp. 343\u2013350.\nLavi, R., & Nisan, N. (2005). Online ascending auctions for gradually expiring goods. In\nProceedings of the ACM-SIAM Symposium on Discrete Algorithms, pp. 1146\u20131155.\nLavi, R., & Nisan, N. (2000). Competitive analysis of incentive compatible on-line auctions.\nIn Proceedings of the 2nd ACM Conference on Electronic Commerce, pp. 233\u2013241.\nLin, L., & Zheng, Z. (2005). Combinatorial bids based multi-robot task allocation method.\nIn Proceedings of the 2005 IEEE International Conference on Robotics and Automation, pp. 1145\u20131150.\nMcAfee, R. P. (1992). A dominant strategy double auction. Journal of Economic Theory,\n56 (2), 434\u2013450.\nMyerson, R. B., & Satterthwaite, M. A. (1983). Efficient mechanisms for bilateral trading.\nJournal of Economic Theory, 29, 265\u2013281.\nPai, M., & Vohra, R. (2006). Optimal dynamic auctions. Tech. rep., Kellogg School of\nManagement, Northwestern University.\nParkes, D. C. (2007). Online mechanisms. In Nisan, N., Roughgarden, T., Tardos, E., &\nVazirani, V. (Eds.), Algorithmic Game Theory, chap. 16. Cambridge University Press.\nParkes, D. C., Kalagnanam, J. R., & Eso, M. (2001). Achieving budget-balance with\nVickrey-based payment schemes in exchanges. In Proceedings of the 17th International Joint Conference on Artificial Intelligence, pp. 1161\u20131168.\nPorter, R. (2004). Mechanism design for online real-time scheduling. In Proceedings of the\n5th ACM Conference on Electronic Commerce, pp. 61\u201370.\nPreist, C., & van Tol, M. (1998). Adaptive agents in a persistent shout double auction. In In\nProceedings of the First International Conference on Information and Computation\nEconomies, pp. 11\u201318.\nRust, J., Miller, J., & Palmer, R. (1994). Characterizing effective trading strategies: Insights\nfrom the computerized double auction tournament. Journal of Economic Dynamics\nand Control, 18, 61\u201396.\nSandholm, T. (2000). Issues in computational Vickrey auctions. International Journal of\nElectronic Commerce, 4 (3), 107\u2013129.\nSatterthwaite, M. A., & Williams, S. R. (1989). Bilateral trade with the sealed bid k-double\nauction: Existence and efficiency. Journal of Economic Theory, 48, 107\u2013133.\nSmith, V. L. (1962). An experimental study of competitive market behavior. Journal of\nPolitical Economy, 70, 111\u2013137.\n178\n\n\fChain: An Online Double Auction\n\nTesauro, G., & Bredin, J. (2002). Strategic sequential bidding in auctions using dynamic programming. In Proceedings of the First International Joint Conference on Autonomous\nAgents and Multiagent Systems, pp. 591\u2013598, Bologna, Italy.\nYoon, K. (2001). The Modified Vickrey Double Auction. Journal of Economic Theory, 101,\n572\u2013584.\n\n179\n\n\fJournal of Artificial Intelligence Research 30 (2007) 133\u2013179\n\nSubmitted 3/07; published 9/07\n\nChain: A Dynamic Double Auction Framework for Matching\nPatient Agents\nJonathan Bredin\n\nbredin@acm.org\n\narXiv:1111.0046v1 [cs.GT] 31 Oct 2011\n\nDept. of Mathematics and Computer Science, Colorado College\nColorado Springs, CO 80903, USA\n\nDavid C. Parkes\nQuang Duong\n\nparkes@eecs.harvard.edu\nqduong@fas.harvard.edu\n\nSchool of Engineering and Applied Sciences, Harvard University\nCambridge, MA 02138, USA\n\nAbstract\nIn this paper we present and evaluate a general framework for the design of truthful\nauctions for matching agents in a dynamic, two-sided market. A single commodity, such\nas a resource or a task, is bought and sold by multiple buyers and sellers that arrive\nand depart over time. Our algorithm, Chain, provides the first framework that allows a\ntruthful dynamic double auction (DA) to be constructed from a truthful, single-period (i.e.\nstatic) double-auction rule. The pricing and matching method of the Chain construction\nis unique amongst dynamic-auction rules that adopt the same building block. We examine\nexperimentally the allocative efficiency of Chain when instantiated on various single-period\nrules, including the canonical McAfee double-auction rule. For a baseline we also consider\nnon-truthful double auctions populated with \"zero-intelligence plus\"-style learning agents.\nChain-based auctions perform well in comparison with other schemes, especially as arrival\nintensity falls and agent valuations become more volatile.\n\n1. Introduction\nElectronic markets are increasingly popular as a method to facilitate increased efficiency\nin the supply chain, with firms using markets to procure goods and services. Two-sided\nmarkets facilitate trade between many buyers and many sellers and find application to\ntrading diverse resources, including bandwidth, securities and pollution rights. Recent years\nhave also brought increased attention to resource allocation in the context of on-demand\ncomputing and grid computing. Even within settings of cooperative coordination, such as\nthose of multiple robots, researchers have turned to auctions as methods for task allocation\nand joint exploration (?, ?, ?).\nIn this paper we consider a dynamic two-sided market for a single commodity, for instance a unit of a resource (e.g. time on a computer, some quantity of memory chips) or\na task to perform (e.g. a standard database query to execute, a location to visit). Each\nagent, whether buyer or seller, arrives dynamically and needs to be matched within a time\ninterval. Cast as a task-allocation problem, a seller can perform the task when allocated\nwithin some time interval and incurs a cost when assigned. A buyer has positive value for\nthe task being assigned (to any seller) within some time interval. The arrival time, acceptable time interval, and value (negative for a seller) for a trade are all private information\nc 2007 AI Access Foundation. All rights reserved.\n\n\fBredin, Parkes and Duong\n\nto an agent. Agents are self-interested and can choose to misrepresent all and any of this\ninformation to the market in order to obtain a more desirable price.\nThe matching problem combines elements of online algorithms and sequential decision\nmaking with considerations from mechanism design. Unlike traditional sequential decision\nmaking, a protocol for this problem must provide incentives for agents to report truthful\ninformation to a match-maker. Unlike traditional mechanism design, this is a dynamic\nproblem with agents that arrive and leave over time. We model this problem as a dynamic\ndouble auction (DA) for identical items. The match-maker becomes the auctioneer. Each\nseller brings a task to be performed during a time window and each buyer brings the\ncapability to perform a single task. The double-auction setting also is of interest in its own\nright as a protocol for matching in a dynamic business-to-business exchange.\nUncertainty about the future coupled with the two-sided nature of the market leads to\nan interesting mechanism design problem. For example, consider the scenario where the\nauctioneer must decide how (and whether) to match a seller with reported cost of $6 at the\nend of its time interval with a present and unmatched buyer, one of which has a reported\nvalue of $8 and one a reported value of $9. Should the auctioneer pair the higher bidder\nwith the seller? What happens if a seller, willing to sell for $4, arrives after the auctioneer\nacts upon the matching decision? How should the matching algorithm be designed so that\nno agent can benefit from misstating its earliest arrival, latest departure, or value for a\ntrade?\nChain provides a general framework that allows a truthful dynamic double auction to\nbe constructed from a truthful, single-period (i.e. static) double-auction rule. The auctions\nconstructed by Chain are truthful, in the sense that the dominant strategy for an agent,\nwhatever the future auction dynamics and bids from other agents, is to report its true\nvalue for a trade (negative if selling) and true patience (maximal tolerance for trade delay)\nimmediately upon arrival into the market. We also allow for randomized mechanisms and,\nin this case, require strong truthfulness: the DA should be truthful for all possible random\ncoin flips of the mechanism. One of the DAs in the class of auctions implied by Chain\nis a dynamic generalization of McAfee's (?) canonical truthful, no-deficit auction for a\nsingle period. Thus, we provide the first examples of truthful, dynamic DAs that allow for\ndynamic price competition between buyers and sellers.1\nThe main technical challenge presented by dynamic DAs is to provide truthfulness without incurring a budget deficit, while handling uncertainty about future trade opportunities.\nOf particular concern is to ensure that an agent does not indirectly affect its price through\nthe effect of its bid on the prices faced by other agents and thus other supply and demand\nin the market. We need to preclude this because the availability of trades depends on the\nprice faced by other agents. For example, a buyer that is required to pay $4 in the DA to\ntrade might like to decrease the price that a potentially matching seller will receive from $6\nto $3 to allow for trade.\nChain is a modular approach to auction design, which takes as a building block a singleperiod matching rule and provides a method to invoke the rule in each of multiple periods\nwhile also providing for truthfulness. We characterize properties that a well-defined single1. The closest work in the literature is due to Blum et al. (?), who present a truthful, dynamic DA for our\nmodel that matches bids and asks based on a price sampled from some bid-independent distribution.\nWe compare the performance of our schemes with this scheme in Section 6.\n\n134\n\n\fChain: An Online Double Auction\n\nperiod matching rule must satisfy in order for Chain to be truthful. We further identify the\ntechnical property of strong no-trade, with which we can isolate agents that fail to trade in\nthe current period but can nevertheless survive and be eligible to trade in a future period.\nAn auction designer defines the strong no-trade predicate, in addition to providing a welldefined single-period matching rule. Instances within this class include those constructed\nin terms of both \"price-based\" matching rules and \"competition-based\" matching rules.\nBoth can depend on history and be adaptive, but only the competition-based rules use the\nactive bids and asks to determine the prices in the current period, facilitating a more direct\ncompetitive processes.\nIn proving that Chain, when combined with a well-defined matching rule and a valid\nstrong no-trade predicate, is truthful we leverage a recent price-based characterization for\ntruthful online mechanisms (?). We also show that the pricing and matching rules defined\nby Chain are unique amongst the family of mechanisms that are constructed with a singleperiod matching rule as a building block. Throughout our work we assume that a constant\nlimits every buyer and seller's patience. To motivate this assumption we provide a simple\nenvironment in which no truthful, no-deficit DA can implement some constant fraction of\nthe number of the efficient trades, for any constant.\nWe adopt allocative efficiency as our design objective, which is to say auction protocols\nthat maximize the expected total value from the sequence of trades. We also consider net\nefficiency, wherein any net outflow of payments to the marketmaker is also accounted for in\nconsidering the quality of a design. Experimental results explore the allocative efficiency of\nChain when instantiated to various single-period matching rules and for a range of different\nassumptions about market volatility and maximal patience. For a baseline we consider the\nefficiency of a standard (non-truthful) open outcry DA populated with simple adaptive\ntrading agents modeled after \"zero-intelligence plus\" (ZIP) agents (?, ?). We also compare\nthe efficiency of Chain with that of a truthful online DA due to Blum et al. (?), which\nselects a fixed trading price to guarantee competitiveness in an adversarial model.\nFrom within the truthful mechanisms we find that adaptive, price-based instantiations\nof Chain are the most effective for high arrival intensity and low volatility. Even defining\na single, well-chosen price that is optimized for the market conditions can be reasonably\neffective in promoting efficient trades in low volatility environments. On the other hand,\nfor medium to low arrival intensity and medium to high volatility we find that the Chainbased DAs that allow for dynamic price competition, such as the McAfee-based rule, are\nmost efficient. The same qualitative observations hold whether one is interested in allocative\nefficiency or net efficiency, although the adaptive, price-based methods have better performance in terms of net efficiency. The Blum et al. (?) rule fairs poorly in our tests, which is\nperhaps unsurprising given that it is optimized for worst-case performance in an adversarial setting. When populated with ZIP agents, we find that non-truthful DAs can provide\nvery good efficiency in low volatility environments but poor performance in high volatility\nenvironments. The good performance of the ZIP-based market occurs when agents learn\nto bid approximately truthfully; i.e., when the market operates as if truthful, but without\nincurring the stringent cost (e.g., through trading constraints) of imposing truthfulness explicitly. An equilibrium analysis is available only for the truthful DAs; we have no way of\nknowing how close the ZIP agents are to playing an equilibrium, and note that the ZIP\nagents do not even consider performing time-based manipulations.\n135\n\n\fBredin, Parkes and Duong\n\n1.1 Outline\nSection 2 introduces the dynamic DA model, including our assumptions, and presents\ndesiderata for online DAs and a price-based characterization for the design of truthful\ndynamic auctions. Section 3 defines the Chain algorithm together with the building block\nof a well-defined, single-period matching rule and the strong no-trade predicate. Section 4\ngives a number of instantiations to both price-based and competition-based matching rules,\nincluding a general method to define the strong no-trade predicate given a price-based instantiation. Section 5 proves truthfulness, no-deficit and feasibility of the Chain auctions\nand also establishes their uniqueness amongst auctions constructed from the same singleperiod matching-rule building block. The importance of the assumption about maximal\nagent patience is established. Section 6 presents our empirical analysis, including a description of the simple adaptive agents that we use to populate a non-truthful open-outcry DA\nand provide a benchmark. Section 7 gives related work. In Section 8 we conclude with a\ndiscussion about the merits of truthfulness in markets and present possible extensions.\n\n2. Preliminaries: Basic Definitions\nConsider a dynamic auction model with discrete, possibly infinite, time periods T =\n{1, 2, . . .}, indexed by t. The double auction (DA) provides a market for a single commodity.\nAgents are either buyers or sellers interested in trading a single unit of the commodity. An\nagent's type, \u03b8i = (ai , di , wi ) \u2208 \u0398i , where \u0398i is the set of possible types for agent i, defines\nan arrival ai , departure di , and value wi \u2208 R for trade. If the agent is a buyer, then wi > 0.\nIf the agent is a seller, then wi \u2264 0. We assume a maximal patience K, so that di \u2264 ai + K\nfor all agents.\nThe arrival time models the first time at which an agent learns about the market or\nlearns about its value for a trade. Thus, information about its type is not available before\nperiod ai (not even to agent i) and the agent cannot engage in trade before period ai . The\ndeparture time, di , models the final period in which a buyer has positive value for a trade,\nor the final period in which a seller is willing to engage in trade. We model risk-neutral\nagents with quasi-linear utility, wi \u2212 p when a trade occurs in t \u2208 [ai , di ] and payment p\nis collected (with p < 0 if the agent is a seller). Agents are rational and self-interested,\nand act to maximize expected utility. By assumption, sellers have no utility for payments\nreceived after their true departure period.\nThroughout this paper we adopt bid to refer, generically, to a claim that an agent \u2013\neither a buyer or a seller \u2013 makes to a DA about its type. In addition, when we need to be\nspecific about the distinction between claims made by buyers and claims made by sellers\nwe refer to the bid from a buyer and the ask from a seller.\n2.1 Example\nConsider the following naive generalization of the (static) trade-reduction DA (?, ?) to\nthis dynamic environment. A bid from an agent is a claim about its type \u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i ),\nnecessarily made in period t = \u00e2i . Bids are active while t \u2208 [\u00e2i , d\u02c6i ] and no trade has\noccurred.\nThen in each period t, use the trade-reduction DA to determine which (if any) of the\nactive bids trade and at what price. These trades occur immediately. The trade-reduction\n136\n\n\fChain: An Online Double Auction\n\nDA (tr-DA) works as follows: Let B denote the set of bids and S denote the set of asks.\nInsert a dummy bid with value +\u221e into B and a dummy ask with value 0 into S. When\n|B| \u2265 2 and |S| \u2265 2 then sort B and S in order of decreasing value. Let \u0175b0 \u2265 \u0175b1 \u2265 . . . and\n\u0175s0 \u2265 \u0175s1 \u2265 . . . denote the bid and ask values with (b0 , s0 ) denoting the dummy bid-ask\npair. Let m \u2265 0 index the last pair of bids and asks to clear in the efficient trade, such that\n\u0175bm + \u0175sm \u2265 0 and \u0175bm+1 + \u0175sm+1 < 0. When m \u2265 2 then bids {b1 , . . . , bm\u22121 } and asks\n{s1 , . . . , sm\u22121 } trade and payment \u0175bm is collected from each winning buyer and payment\n\u2212\u0175sm is made to each winning seller.\nFirst consider a static tr-DA with the following bids and asks:\nS\nB\ni \u0175i i \u0175i\nb\u22171 15 s\u22171 -1\nb\u22172 10 s\u22172 -1\nb\u22173 4 s\u22173 -2\nb4 3 s4 -2\ns5 -5\nThe line indicates that bids (1\u20134) and asks (1\u20134) could be matched for efficient trade.\nBy the rules of the tr-DA, bids (1\u20133) and asks (1\u20133) trade, with payments $3 collected from\nwinning buyers and payment $2 made to winning sellers. The auctioneer earns a profit of\n$3. The asterisk notation indicates the bids and asks that trade. The tr-DA is truthful, in\nthe sense that it is a dominant-strategy for every agent to report its true value whatever\nthe reports of other agents. For intuition, consider the buy-side. The payment made by\nwinners is independent of their bid price while the losing bidder could only win by bidding\nmore than $4, at which point his payment would be $4 and more than his true value.\nNow consider a dynamic variation with buyer types {(1, 2, 15), (1, 2, 10), (1, 2, 4), (2, 2, 3)}\nand seller types {(1, 2, \u22121), (2, 2, \u22121), (1, 1, \u22122), (2, 2, \u22122), (1, 2, \u22125)}. When agents are truthful, the dynamic tr-DA plays out as follows:\nperiod 1\nperiod 2\nS\nB\nS\nB\ni \u0175i i \u0175i\ni \u0175i i \u0175i\nb\u22172 10 s\u22172 -1\nb\u22171 15 s\u22171 -1\nb3 4 s4 -2\nb2 10 s3 -2\nb3 4 s5 -5\nb4 3 s5 -5\nIn period 1, buyer 1 and seller 1 trade at payments of $10 and $2 respectively. In\nperiod 2, buyer 2 and seller 2 trade at payments of $4 and $2 respectively. But now we can\nconstruct two kinds of manipulation to show that this dynamic DA is not truthful. First,\nbuyer 1 can do better by delaying his reported arrival until period 2:\nperiod 1\nperiod 2\nS\nB\nS\nB\ni \u0175i i \u0175i\ni \u0175i i \u0175i\nb\u22172 10 s\u22171 -1\nb\u22171 15 s\u22172 -1\nb3 4 s4 -2\nb3 4 s3 -2\ns5 -5\nb4 3 s5 -5\n137\n\n\fBredin, Parkes and Duong\n\nNow, buyer 2 trades in period 1 and does not set the price to buyer 1 in period 2. Instead,\nbuyer 1 now trades in period 2 and makes payment $4.\nSecond, buyer 3 can do better by increasing\nperiod 1\nS\nB\ni \u0175i i \u0175i\nb\u22171 15 s\u22171 -1\nb\u22172 10 s\u22173 -2\nb3 6 s5 -5\n\nhis reported value:\nperiod 2\nB\nS\ni \u0175i i \u0175i\nb\u22173 6 s\u22172 -1\nb4 3 s4 -2\ns5 -5\n\nNow, buyers 1 and 2 both trade in period 1 and this allows buyer 3 to win (at a price\nbelow his true value) in period 2. This is a particularly interesting manipulation because\nthe agent's manipulation is by increasing its bid above its true value. By doing so, it allows\nmore trades to occur and makes the auction less competitive in the next period.\n2.2 Dynamic Double Auctions: Desiderata\nWe consider only direct-revelation, dynamic DAs that restrict the message that an agent\ncan send to the auctioneer to a single, direct claim about its type. We also consider \"closed\"\nauctions so that an agent receives no feedback before reporting its type and cannot condition\nits strategy on the report of another agent.2\nGiven this, let \u03b8 t denote the set of agent types reported in period t, \u03b8 = (\u03b8 1 , \u03b8 2 , . . . , \u03b8 t , . . . , )\ndenote a complete type profile (perhaps unbounded), and \u03b8 \u2264t denote the type profile restricted to agents with (reported) arrival no later than period t. A report \u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i )\nrepresents a commitment to buy (sell) one unit of the commodity in any period t \u2208 [\u00e2i , d\u02c6i ]\nfor a payment of at most \u0175i . Thus, if a seller reports a departure time d\u02c6i > di , it must\ncommit to complete a trade that occurs after her true departure and even though a seller\nis modeled as having no utility for payments received after her true departure.\nA dynamic DA, M = (\u03c0, x), defines an allocation policy \u03c0 = {\u03c0 t }t\u2208T and payment\npolicy x = {xt }t\u2208T , where \u03c0it (\u03b8 \u2264t ) \u2208 {0, 1} indicates whether or not agent i trades in period\nt given reports \u03b8 \u2264t, and xti (\u03b8 \u2264t ) \u2208 R indicates a payment made by agent i, negative if this is\na payment received by the agent. The auction rules can also be stochastic, so that \u03c0it (\u03b8 \u2264t )\nand xti (\u03b8 \u2264t ) are random variables. For a dynamic DA to be well defined, it must hold that\n\u03c0it (\u03b8 \u2264t ) = 1 in at most one period t \u2208 [ai , di ] and zero otherwise, and the payment collected\nfrom agent i is zero except in periods t \u2208 [ai , di ].\nIn formalizing the desiderata for dynamic DAs, it will be convenient to adopt (\u03c0(\u03b8), x(\u03b8))\nto denote the complete sequence of allocation decisions given reports \u03b8, with shorthand\n\u03c0i (\u03b8) \u2208 {0, 1} and xi (\u03b8) \u2208 R to indicate whether agent i trades during its reported arrivaldeparture interval, and the total payment made by agent i, respectively. By a slight abuse\nof notation, we write i \u2208 \u03b8 \u2264t to denote that agent i reported a type no later than period t.\nLet B denote the set of buyers and S denote the set of sellers.\n2. The restriction to direct-revelation, online mechanisms is without loss of generality when combined with\na simple heart-beat message from an agent to indicate its presence in any period t during its reported\narrival-departure interval. See the work of Pai and Vohra (?) and Parkes (?).\n\n138\n\n\fChain: An Online Double Auction\n\nWe shall require that the dynamic DA satisfies no-deficit, feasibility, individual-rationality\nand truthfulness. No-deficit ensures that the auctioneer has a cash surplus in every period:\nDefinition 1 (no-deficit) A dynamic DA, M = (\u03c0, x) is no-deficit if:\nX\nX\n\u2032\n\u2032\nxti (\u03b8 \u2264t ) \u2265 0, \u2200t, \u2200\u03b8\n\n(1)\n\ni\u2208\u03b8 \u2264t t\u2032 \u2208[ai ,min(t,di )]\n\nFeasibility ensures that the auctioneer does not need to take a short position in the\ncommodity traded in the market in any period:\nDefinition 2 (feasible trade) A dynamic DA, M = (\u03c0, x) is feasible if:\nX\nX\nX\nX\n\u2032\n\u2032\n\u2032\n\u2032\n\u03c0it (\u03b8 \u2264t ) \u2212\n\u03c0it (\u03b8 \u2264t ) \u2265 0, \u2200t, \u2200\u03b8\ni\u2208\u03b8 \u2264t ,i\u2208S t\u2032 \u2208[ai ,min(t,di )]\n\n(2)\n\ni\u2208\u03b8 \u2264t ,i\u2208B t\u2032 \u2208[ai ,min(t,di )]\n\nThis definition of feasible trade assumes that the auctioneer can \"hold\" an item that\nis matched between a seller-buyer pair, for instance only releasing it to the buyer upon\nhis reported departure. See the remark concluding this section for a discussion of this\nassumption.\nLet vi (\u03b8i , \u03c0(\u03b8i\u2032 , \u03b8\u2212i )) \u2208 R denote the value of an agent with type \u03b8i for the allocation\ndecision made by policy \u03c0 given report (\u03b8i\u2032 , \u03b8\u2212i ), i.e. vi (\u03b8i , \u03c0(\u03b8i\u2032 , \u03b8\u2212i )) = wi if the agent\ntrades in period t \u2208 [ai , di ] and 0 if it trades outside of this interval and is a buyer, or \u2212\u221e if\nit trades outside of this interval and is a seller. Individual-rationality requires that agent i's\nutility is non-negative when it reports its true type, whatever the reports of other agents:\nDefinition 3 (individual-rational) A dynamic DA, M = (\u03c0, x) is individual-rational\n(IR) if vi (\u03b8i , \u03c0(\u03b8)) \u2212 xi (\u03b8) \u2265 0 for all i, all \u03b8.\nIn order to define truthfulness, we introduce notation C(\u03b8i ) \u2286 \u0398i for \u03b8i \u2208 \u0398i to denote\nthe set of available misreports to an agent with true type \u03b8i . In the standard model adopted\nin offline mechanism design, it is typical to assume C(\u03b8i ) = \u0398i with all misreports available.\nHere, we shall assume no early-arrival misreports, with C(\u03b8i ) = {\u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i ) : ai \u2264 \u00e2i \u2264\nd\u02c6i }. This assumption of limited misreports is adopted in earlier work on online mechanism\ndesign (?), and is well-motivated when the arrival time is the first period in which a buyer\nfirst decides to acquire an item or the period in which a seller first decides to sell an item.\nDefinition 4 (truthful) Dynamic DA, M = (\u03c0, x), is dominant-strategy incentivecompatible, or truthful, given limited misreports C if:\n\u2032\n\u2032\n\u2032\n\u2032\nvi (\u03b8i , \u03c0(\u03b8i , \u03b8\u2212i\n)) \u2212 xi (\u03b8i , \u03b8\u2212i\n) \u2265 vi (\u03b8i , \u03c0(\u03b8\u0302i , \u03b8\u2212i\n)) \u2212 xi (\u03b8\u0302i , \u03b8\u2212i\n).\n\u2032 \u2208 C(\u03b8 ), all \u03b8\nfor all \u03b8\u0302i \u2208 C(\u03b8i ), all \u03b8i , all \u03b8\u2212i\n\u2212i\n\u2212i \u2208 \u0398\u2212i .\n\nThis is a robust equilibrium concept: an agent maximizes its utility by reporting its\ntrue type whatever the reports of other agents. Truthfulness is useful because it simplifies\nthe decision problem facing bidders: an agent can determine its optimal bidding strategy\nwithout a model of either the auction dynamics or the other agents. In the case that\nthe allocation and payment policy is stochastic, then we adopt the requirement of strong\ntruthfulness so that an agent maximizes its utility whatever the random sequence of coin\nflips within the auction.\n139\n\n\fBredin, Parkes and Duong\n\nRemark. The flexible definition of feasibility, in which the auctioneer is able to take a\nlong position in the commodity, allows the auctioneer to time trades by receiving the unit\nsold by a seller in one period but only releasing it to a buyer in a later period. This\nallows for truthfulness in environments in which bidders can overstate their departure period. In some settings this is an unreasonable requirement, however, for instance when\nthe commodity represents a task that is performed, or because a physical good is being\ntraded in an electronic market.3 In these cases, the definition of feasibility strengthened\nto require exact trade-balance in every period. The tradeoff is that available misreports\nmust be further restricted, with agents limited to reporting no late-departures in addition\nto no early-arrivals (?, ?). For the rest of the paper we work in the \"relaxed feasibility, no\nearly-arrival\" model. The Chain framework can be immediately extended to the \"strongfeasibility, no early-arrival and no late-departure\" model by executing trades immediately\nrather than delaying the trade until a buyer's departure.\n\n3. Chain: A Framework for Truthful Dynamic DAs\nChain provides a general algorithmic framework with which to construct truthful dynamic\nDAs from well-defined single-period matching rules, such as the tr-DA rules described in\nthe earlier section.\nBefore introducing Chain we need a few more definitions: Bids reported to Chain are\nactive while t \u2264 d\u02c6i (for reported departure period d\u02c6i ), and while the bid is unmatched\nand still eligible to be matched. In each period, a single-period matching rule is used to\ndetermine whether any of the active bids will trade and also which (if any) of the bids that\ndo not match will remain active in the next period.\nNow we define the building blocks, well-defined single-period matching rules, and introduce the important concept of a strong no-trade predicate, which is defined for a singleperiod matching rule.\n3.1 Building Block: A Single-Period Matching Rule\nt\nn\nIn defining a matching rule, it is helpful to adopt bt \u2208 Rm\n>0 and s \u2208 R\u22640 to denote the\nactive bids and active asks in period t, where there are m \u2265 0 and n \u2265 0 bids and asks\nrespectively. The bids and asks that were active in earlier periods but are no longer active\nform the history in period t, denoted H t \u2208 Rh where h \u2265 0 is the size of the history.\nA single-period matching rule (hereafter a matching rule), Mmr = (\u03c0mr , xmr ) defines\nan allocation rule \u03c0mr (H t , bt , st , \u03c9) \u2208 {0, 1}(m+n) and a payment rule xmr (H t , bt , st , \u03c9) \u2208\nR(m+n) . Here, we include random event \u03c9 \u2208 \u03a9 to allow explicitly for stochastic matching\nand allocation rules.\n\nDefinition 5 (well-defined matching rule) A matching rule Mmr = (\u03c0mr , xmr ) is welldefined when it is strongly truthful, no-deficit, individual-rational, and strong-feasible.\nHere, the properties of truthfulness, no-deficit, and individual-rationality are exactly\nthe single-period specializations of those defined in the previous section. For instance,\n3. Note that if the task is a computational task, then tasks can be handled within this model by requiring\nthat the seller performs the task when it is matched but with a commitment to hold onto the result until\nthe matched buyer is ready to depart.\n\n140\n\n\fChain: An Online Double Auction\n\nfunction SimpleMatch(H t ,bt ,st )\nmatched := \u2205\npt := mean(|H t |)\nwhile (bt 6= \u2205)&(st 6= \u2205) do\ni := 0, bi := \u2212\u01eb, j := 0, sj := \u2212\u221e\nwhile (bi < pt )&(bt 6= \u2205) do\ni := random(bt ), bt := bt \\ {i}\nend while\nwhile (sj < \u2212pt )&(st 6= \u2205) do\nj := random(st ), st := st \\ {j}\nend while\nif (i 6= 0)&(j 6= 0) then\nmatched := matched \u222a {(i, j)}\nend if\nend while\nend function\n\nFigure 1: A well-defined matching rule defined in terms of the mean bid price in the history.\na matching rule is truthful in this sense when the dominant strategy for an agent in a\nDA defined with this rule, and in a static environment, is to bid truthfully and for all\npossible random events \u03c9. Similarly for individual-rationality. No-deficit requires that the\ntotal payments are always non-negative. Strong-feasibility requires that exactly the same\nnumber of asks are accepted as bids, again for all random events.\nOne example of a well-defined matching rule is the tr-DA, which is invariant to the\nhistory of bids and asks. For an example of a well-defined, adaptive (history-dependent)\nand price-based matching rule, consider procedure SimpleMatch in Figure 1. The SimpleMatch matching rule computes the mean of the absolute value of the bids and asks in\nthe history H t and adopts this as the clearing price in the current period. It is a stochastic\nmatching rule because bids and asks are picked from the sets bt and st at random and\noffered the price. We can reason about the properties of SimpleMatch as follows:\n(a) truthful: the price pt is independent of the bids and the probability that a bid (or\nask) is matched is independent of its bid (or ask) price\n(b) no-deficit: payment pt is collected from each matched buyer and made to each\nmatched seller\n(c) individual-rational: only bids bi \u2265 pt and asks sj \u2265 \u2212pt are accepted.\n(d) feasible: bids and asks are introduced to the \"matched\" set in balanced pairs\n3.2 Reasoning about Trade (Im)Possibility\nIn addition to defining a matching rule Mmr , we allow a designer to (optionally) designate\na subset of losing bids that satisfy a property of strong no-trade. Bids that satisfy strong\nno-trade are losing bids for which trade was not possible at any bid price (c.f. ask price\nfor asks), and moreover for which additional independence conditions hold between bids\nprovided with this designation.\nWe first define the weaker concept of no-trade.\nIn the following, notation\nt\nt\nt\n\u03c0mr,i (H , b , s , \u03c9|\u0175i ) indicates the allocation decision made for bid (or ask) i when its bid\n(ask) price is replaced with \u0175i :\n141\n\n\fBredin, Parkes and Duong\n\nDefinition 6 (no-trade) Given matching rule Mmr = (\u03c0mr , xmr ) then the set of agents,\nNTt , for which no trade is possible in period t and given random events \u03c9 are those for\nwhich \u03c0mr,i (H t , bt , st , \u03c9|\u0175i ) = 0, for every \u0175i \u2208 R>0 when i \u2208 bt and for every \u0175i \u2208 R\u22640\nwhen i \u2208 st .\nIt can easily happen that no trade is possible, for instance when the agent is a buyer\nand there are no sellers on the other side of the market. Let SNTt \u2286 NTt denote the set\nof agents designated with the property of strong no-trade. Unlike the no-trade property,\nstrong no-trade need not be uniquely defined for a matching rule. To be valid, however, the\nconstruction offered by a designer for strong no-trade must satisfy the following:\nDefinition 7 (strong no-trade) A construction for strong no-trade, SNTt \u2286 NTt , is\nvalid for a matching rule when:\n(a) \u2200i \u2208 NTt with d\u02c6i > t, whether or not i \u2208 SNTt is unchanged for all alternate reports\n\u2032\n\u03b8i = (a\u2032i , d\u2032i , wi\u2032 ) 6= \u03b8\u0302i while d\u2032i > t,\n(b) \u2200i \u2208 SNTt with d\u02c6i > t, the set {j : j \u2208 SNTt , j 6= i, d\u02c6j > t} is unchanged for all\nreports \u03b8i\u2032 = (a\u2032i , d\u2032i , wi\u2032 ) 6= \u03b8\u0302i while d\u2032i > t, and independent even of whether or not agent i is\npresent in the market.\nThe strong no-trade conditions must be checked only for agents with a reported departure later than the current period. Condition (a) requires that such an agent in NTt cannot\naffect whether or not it satisfies the strong no-trade predicate as long as it continues to\nreport a departure later than the current period. Condition (b) is defined recursively, and\nrequires that if such an agent is identified as satisfying strong no-trade, then its own report\nmust not affect the designation of strong no-trade to other agents, with reported departure\nlater than the current period, while it continues to report a departure later than the current\nperiod \u2013 even if it delays its reported arrival until a later period.\nStrong no-trade allows for flexibility in determining whether or not a bid is eligible for\nmatching. Specifically, only those bids that satisfy strong no-trade amongst those that lose\nin the current period can remain as a candidate for trade in a future period. The property\nis defined to ensure that such a \"surviving\" agent does not, and could not, affect the set of\nother agents against which it competes in future periods.\n\nExample 1 Consider the tr-DA matching rule defined earlier with bids and asks\n142\n\n\fChain: An Online Double Auction\n\nB\ni\nb\u22171\nb2\nb3\n\nS\n\u0175i\n10\n8\n6\n\ni\ns\u22171\ns2\ns3\n\n\u0175i\n\u22124\n\u22126\n\u22128\n\nBid 1 and ask 1 trade at price 8 and \u22126 respectively. NTt = \u2205 because bids 2 and 3 could\neach trade if they had (unilaterally) submitted a bid price of greater than 10. Similarly for\nasks 2 and 3. Now consider the order book\nS\nB\ni \u0175i i\n\u0175i\nb1 8 s1 \u22126\nb2 7 s2 \u221210\nb3 2 s3 \u221212\nNo trade occurs. In this case, NTt = {b1 , b2 , b3 , s1 }. No trade is possible for any bids, even\nbids 2 and 3, because \u0175b1 + \u0175s2 = 8 \u2212 10 < 0. But, trade is possible for asks 2 and 3, because\n\u0175b2 + \u0175s1 = 7 \u2212 6 \u2265 0 and either ask could trade by submitting a low enough ask price.\nExample 2 Consider the tr-DA matching rule and explore possible alternative constructions for strong no-trade.\n(i) Dictatorial: in each period t, identify an agent that could be present in the period in\na way that is oblivious to all agent reports. Let i denote the index of this agent. If i \u2208 NTt ,\nthen include SNTt = {i}. Strong no-trade condition (a) is satisfied because whether or not i\nis selected as the \"dictator\" is agent-independent, and given that it is selected, then whether\nor not trade is possible is agent-independent. Condition (b) is trivially satisfied because\n|SNTt | = 1 and there is no cross-agent coupling to consider.\n(ii) SNTt := NTt . Consider the order book\nS\nB\ni \u0175i i\n\u0175i\nb1 3 s1 \u22124\nb2 2 s2 \u22126\nb3 1 s3 \u22128\nSuppose all bids and asks remain in the market for at least one more period. Clearly,\nNTt = {b1 , b2 , b3 , s1 , s2 , s3 }. Consider the candidate construction SNTt = NTt . Strong notrade condition (a) is satisfied because whether or not i is in set NTt is agent-independent.\nCondition (b) is not satisfied, however. Consider bid 2. If bid 2's report had been 8 instead\nof 2 then trade would be possible for bids 1 and 3, and SNTt = NTt = {b2 , s1 , s2 , s3 }. Thus,\nwhether or not bids 1 and 3 satisfy the strong no-trade predicate depends on the value of bid\n2. This is not a valid construction for strong no-trade for the tr-DA matching rule.\n(iii) SNTt = NTt if |bt | < 2 or |st | < 2, and SNTt = \u2205 otherwise. As above, strong\nno-trade condition (a) is immediately satisfied. Moreover, condition (b) is now satisfied\nbecause trade is not possible for any bid or ask irrespective of bid values because there are\nsimply not enough bids or asks to allow for trade with tr-DA (which needs at least 2 bids\nand at least 2 asks).\n143\n\n\fBredin, Parkes and Duong\n\nFigure 2: The decision process in Chain upon arrival of a new bid. If admitted, then the bid\nparticipates in a sequence of matching events while it remains unmatched and in the\nstrong no-trade set. The bid matches at the first available opportunity and is priced\nimmediately.\n\nExample 3 Consider a variant of the SimpleMatch matching rule, defined with fixed\nprice 9. We can again ask whether SNTt := NTt is a valid construction for strong no-trade.\nThroughout this example suppose all bids and asks remain in the market for at least one\nmore period. First consider a bid with \u0175b1 = 8 and two asks with values \u0175s1 = \u22126 and\n\u0175s2 = \u22127. Here, NTt = {s1 , s2 } because the asks cannot trade whatever their price since\nthe bid is not high enough to meet the fixed trading price of 9. Moreover, SNTt = {s1 , s2 }\nis a valid construction; strong no-trade condition (a) is satisfied as above and condition (b)\nis satisfied because whether or not ask 2 is in NTt (and thus SNTt ) is independent of the\nprice on ask 1, and vice versa. But consider instead a bid with \u0175b1 = 8 and an ask with\n\u0175s1 = \u221210. Now, NTt = {b1 , s1 } and SNTt = {b1 , s1 } is our candidate strong no-trade set.\nHowever if bid 1 had declared value 10 instead of 8 then NTt = {b1 } and ask 1 drops out of\nSNTt . Thus, strong no-trade condition (b) is not satisfied.\nWe see from the above examples that it can be quite delicate to provide a valid, nontrivial construction of strong no-trade. Note, however, that SNTt = \u2205 is a (trivial) valid\nconstruction for any matching rule. Note also that the strong no-trade conditions (a) and\n(b) require information about the reported departure period of a bid. Thus, while the\nmatching rules do not use temporal information about bids, this information is used in the\nconstruction for strong no-trade.\n3.3 Chain: From Matching Rules to Truthful, Dynamic DAs\nThe control flow in Chain is illustrated in Figure 2. Upon arrival of a new bid, an admission\ndecision is made and bid i is admitted if its value \u0175i is at least its admission price qi . An\nadmitted bid competes in a sequence of matching events, where a matching event simply\napplies the matching rule to the set of active bids and asks. If a bid fails to match in some\nperiod and is not in the strong no-trade set (i \u2208\n/ SNTt ), then it is priced out and leaves the\nmarket without trading. Otherwise, if it is still before its departure time (t \u2264 d\u02c6i ), then it is\navailable for matching in the next period.\nEach bid is always in one of three states: active, matched or priced-out. Bids are active\nif they are admitted to the market until t \u2264 d\u02c6i , or until they are matched or priced-out. An\n144\n\n\fChain: An Online Double Auction\n\nactive bid becomes matched in the first period (if any) when it trades in the single-period\nmatching rule. An active bid is marked as priced-out in the first period in which it loses\nbut is not in the strong no-trade set. As soon as a bid is no longer active, it enters the\nhistory, H t , and the information about its bid price can be used in defining matching rules\nfor future periods.\nLet E t denote the set of bids that will expire in the current period. A well-defined\nmatching rule, when coupled with a valid strong no-trade construction, must provide Chain\nwith the following information, given history H t , active bids bt and active asks st , and\nexpiration set E t in period t:\n(a) for each bid or ask, whether it wins or loses\n(b) for each winning bid or ask, the payment collected (negative for an ask)\n(c) for each losing bid or ask, whether or not it satisfies the strong no-trade condition\nNote that the expiration set E t is only used for the strong no-trade construction. This\ninformation is not made available to the matching rule. The following table summarizes the\nuse of this information within Chain. Note that a winning bid cannot be in set SNTt :\nLose\nWin\n\n\u00acSNTt\npriced-out\nmatched\n\nSNTt\nsurvive\nn/a\n\nWe describe Chain by defining the events that occur for a bid upon its arrival into the\nmarket, and then in each period in which it remains active:\nUpon arrival: Consider all possible earlier arrival periods t\u2032 \u2208 [d\u02c6i \u2212K, \u00e2i \u22121] consistent\nwith the reported type. There are no such periods to consider if the bid is maximally\n\u2032\npatient. If the bid would lose and not be in SNTt for any one of these arrival periods\nt\u2032 , then it is not admitted. Otherwise, the bid would win in all periods t\u2032 for which\n\u2032\ni\u2208\n/ SNTt , and define the admission price as:\nq(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) :=\n\nmax\n\nt\u2032 \u2208[d\u02c6i \u2212K,\u00e2i \u22121],i\u2208SNT\n/\n\n\u2032\n\nt\u2032\n\n[pti , \u2212\u221e],\n\n(3)\n\n\u2032\n\nwhere pti is the payment the agent would have made (negative for a seller) in arrival\nperiod t\u2032 (as determined by running the myopic matching rule in that period). When\n\u2032\nthe agent would lose in all earlier arrival periods t\u2032 (and so i \u2208 SNTt for all t\u2032 ), or\nthe bid is maximally patient, then the admission price defaults to \u2212\u221e and the bid is\nadmitted.\nWhile active: Consider period t \u2208 [\u00e2i , d\u02c6i ]. If the bid is selected to trade by the myopic\nmatching rule, then mark it as matched and define final payment:\nxti (\u03b8 \u2264t ) = max(q(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), pti ),\n\n(4)\n\nwhere pti is the price (negative for a seller) determined by the myopic matching rule in\nthe current period. If this is a buyer, then collect the payment but delay transferring\nthe item until period d\u02c6i . If this is a seller, then collect the item but delay making\nthe payment until the reported departure period. If the bid loses and is not in SNTt ,\nthen mark the bid as priced-out.\n145\n\n\fBredin, Parkes and Duong\n\nWe illustrate Chain by instantiating it to various matching rules in the next section.\nIn Section 5 we prove that Chain is strongly truthful and no-deficit when coupled with a\nwell-defined matching rule and a valid strong no-trade construction. We will see that the\ndelay in buyer delivery and seller payment ensures truthful revelation of a trader's departure\ninformation. For instance, in the absence of this delay, a buyer might be able to do better by\nover-reporting departure information, still trading early enough but now for a lower price.\n3.4 Comments\nWe choose not to allow the single-period matching rules to use the reported arrival and\ndeparture associated with active bids and asks. This maintains a clean separation between\nnon-temporal considerations (in the matching rules) and temporal considerations (in the\nwider framework of Chain). This is also for simplicity. The single-period matching rules\ncan be allowed to depend on the reported arrival-departure interval, as long as the (singleperiod) rules are monotonic in tighter arrival-departure intervals, in the sense that an agent\nthat wins for some \u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i ) continues to win and for an improved price if it instead\nreports (a\u2032i , d\u2032i , \u0175i ) with [a\u2032i , d\u2032i ] \u2282 [\u00e2i , d\u02c6i ]. However, whether or not trade is possible must\nbe independent of the reported arrival-departure interval and similarly for strong no-trade.\nDeterminations such as these would need to be made with respect to the most patient type\n(d\u02c6i \u2212 K, d\u02c6i , \u0175i ) given report \u03b8\u0302i = (\u00e2i , d\u02c6i , \u0175i ).\n\n4. Practical Instantiations: Price-Based and Competition-Based Rules\nIn this section we offer a number of instantiations of the Chain online DA framework. We\npresent two different classes of well-defined matching rules: those that are price-based and\ncompute simple price statistics based on the history which are then used for matching, and\nthose that we refer to as competition-based and leverage the history but also consider direct\ncompetition between the active bids and asks in any period. In each case, we establish that\nthe matching rules are well-defined and provide a valid strong no-trade construction.\n4.1 Price-Based Matching Rules\nEach one of these rules constructs a single price, pt , in period t based on the history H t of\nearlier bids and asks that are traded or expired. For this purpose we define variations on a\nreal valued statistic, \u03be(H t ), that is used to define this price given the history. Generalizing\nthe SimpleMatch procedure, as introduced in Section 3.1, the price pt is used to determine\nthe trades in period t. We also provide a construction for strong no-trade in this context.\nThe main concern in setting prices is that they may be too volatile, with price updates\ndriving the admission price higher (via the max operator in the admission rule of Chain)\nand having the effect of pricing bids and asks out of the market. We describe various forms\nof smoothing and windowing, all designed to provide adaptivity while dampening shortterm variations. In each case, the parameters (e.g. the smoothing factor, or the window\nsize) can be determined empirically through off-line tuning.\nWe experiment with five price variants:\nHistory-EWMA: Exponentially-weighted moving average. The bid history, H t , is used\nto define price pt in period t, computed as pt := \u03bb \u03be(H t ) + (1 \u2212 \u03bb)pt\u22121 , where \u03bb \u2208 (0, 1] is a\n146\n\n\fChain: An Online Double Auction\n\nsmoothing constant and \u03be(H t ) is a statistic defined for bids and asks that enter the history\nin period t. Experimentally we find that the mean statistic, \u03be mean (H t ), of the absolute\nvalues of bids and asks that enter the history performs well with \u03bb of 0.05 or lower for most\nscenarios that we test. For cases in which \u03be(H t ) is not well-defined because of too few (or\nzero) new bids or asks, then we set pt := pt\u22121 .\nHistory-median: Compute price pt from a statistic over a fixed-size window of the most\nrecent history, pt := \u03be(H t , \u2206) where \u2206 is the window-size, i.e. defining bids introduced\nto history H t in periods [t \u2212 \u2206, . . . , t]. Experimentally, we find that the median statistic,\n\u03be median (H t , \u2206), of the absolute bid and ask values performs well for the scenarios we test,\nwith the window size depending inversely with the volatility of agents' valuations. Typically,\nwe observe optimal window sizes of 20 and 150, depending on volatility. For cases in which\n\u03be(H t , \u2206) is not well-defined because of too few (or zero) new bids or asks, then we set\npt := pt\u22121 .\nHistory-clearing: Identical to the history-median rule except the statistic \u03be(H t , \u2206) is\ndefined as (bm \u2212 sm )/2 where bm and sm are the lowest value pair of trades that would be\nexecuted in the efficient (value-maximizing) trade given all bids and asks to enter history\nH t in periods [t \u2212 \u2206, . . . , t]. Empirically, we find similar optimal window sizes for historyclearing as for history-median.\nHistory-McAfee: Define the statistic \u03be(H t , \u2206) to represent the McAfee price, defined in\nSection 4.2, for the bids in H t had they all simultaneously arrived.\nFixed price: This simple rule computes a single fixed price pt := p\u2217 for all trading periods,\nwith the price optimized offline to maximize the average-case efficiency of the dynamic DA\ngiven Chain and the associated single-period matching rule that leverages price p\u2217 as the\ncandidate trading price.\nFor each pricing variant, procedure Match (see Figures 3\u20134) is used to determine which\nbids win (at price pt ), which lose, and, of those that lose, which satisfy the strong notrade predicate. The subroutine used to determine the current price is referred to as\ndetermineprice in Match. We provide as input to Match the set E t in addition to\n(H t , bt , st ) because Match also constructs the strong no-trade set, and E t is used exclusively for this purpose.\nThe proof of the following lemma is technical and is postponed until the Appendix.\nLemma 1 Procedure Match defines a valid strong no-trade construction.\nTheorem 1 Procedure Match defines a well-defined matching rule and a valid strong notrade construction.\nProof: No-deficit, feasibility, and individual-rationality are immediate by the construction\nof Match since bids and asks are added to matched in pairs, with the same payment, and\nonly if the payment is less than or equal to their value. Truthfulness is also easy to see: the\norder with which a bid (or ask) is selected is independent of its bid price, and the price it\nfaces, when selected, is independent of its bid. If the price is less than or equal to its bid,\nthen whether or not it trades depends only on its order. The rest of the claim follows from\nLemma 1.\n\u0003\n147\n\n\fBredin, Parkes and Duong\n\nfunction Match(H t ,bt ,st ,E t )\nmatched := \u2205, lose := \u2205, NTt := \u2205, SNTt := \u2205\nstop := false\npt := determineprice(H t )\nwhile \u00ac stop do\ni := 0, j := 0, checkedB := \u2205, checkedS := \u2205\nwhile ((checkedB \u2282 bt )&(i=0)) \u2228 ((checkedS \u2282 st )&(j=0)) do\nif (i = 0)&(j = 0) then\nS\nk := random(bt \\ checkedB st \\ checkedS )\nelse if (i = 0) then\nk := random(bt \\ checkedB )\nelse if (j = 0) then\nk := random(st \\ checkedS )\nend if\nif (k \u2208 bt ) then\ncheckedB := checkedB \u222a {k}\nif (bk \u2265 pt ) then\ni := k\nend if\nelse\ncheckedS := checkedS \u222a {k}\nif (sk \u2265 \u2212pt ) then\nj := k\nend if\nend if\nend while\nif (i 6= 0)&(j 6= 0) then S\nmatched := S\nmatched\n{(i, j)} S\nlose := lose\n(checkedB \\ {i})\n(checkedS \\ {j})\nt\nt\nt\nt\nb := b \\ checkedB , s := s \\ checkedS\nelse\nstop := true\nend if\nend while\nend function\nFigure 3: The procedure used for single-period matching in applying Chain to the pricebased rules. The algorithm continues in Figure 4.\n\n148\n\n\fChain: An Online Double Auction\n\nfunction Match (continued)(H t ,bt ,st ,E t )\nif (i 6= 0)&(j =S\n0) then\nlose := lose st , NTt := bt\nif (\u2203k \u2208 bt * ((bk \u2265 pt )&(d\u02c6k = t))) \u2228 (\u2200k \u2208 st * (d\u02c6k = t)) then\nSNTt := bt\nelse\nSNTt := bt \\ checkedB\nend if\nelse if (j 6= 0)&(i\nS = 0) then\nlose := lose bt , NTt := st\nif (\u2203k \u2208 st * ((sk \u2265 \u2212pt )&(d\u02c6k = t))) \u2228 (\u2200k \u2208 bt * (d\u02c6k = t)) then\nSNTt := st\nelse\nSNTt := st \\ checkedS\nend if\nelse if (i = 0)&(j\nS t = 0) then\nt\nt\nNT := b s\n\u02c6k = t)) \u2228 (\u2200k \u2208 st * (d\u02c6k = t)) then\nif (\u2200k \u2208 bt * (dS\nt\nt\nSNT := b st\nend if\nend if\nend function\nFigure 4:\n\n\u22b2I\n\n\u22b2 I-a\n\n\u22b2 II\n\n\u22b2 III\n\nContinuing procedure from Figure 3 for single-period matching in applying\nChain to the price-based rules.\n\nExample 4 (i) Bid bt = {8}, ask st = {\u22126}, indexed {1, 2} and price pt = 9. The outer\nwhile loop in Figure 3 terminates with j = 2 and i = 0 in Case II. The bid is marked as\na loser while NTt = {2}. If the bid will depart immediately, then SNTt = {2}, otherwise\nSNTt = \u2205.\n(ii) Bid bt = {8}, asks st = {\u22126, \u22127}, indexed {1, 2, 3}, and price pt = 9. Suppose that\nask 2 is selected before ask 3 in the outer while loop. Then the loop terminates with j = 2\nand i = 0 in Case II and NTt = {2, 3}. Suppose the bid and asks leave the market later\nthan this period. Then SNTt = {3} because checkedS = {2}.\n(iii) Bid bt = {8} and ask st = {\u221210}, indexed {1, 2}, price pt = 9 and both the bid and\nthe ask is patient. The outer while loop terminates with i = 0 and j = 0 in Case III so\nthat NTt = {1, 2}. However, SNTt = \u2205.\n\n4.2 Competition-Based Matching Rules\nEach one of these rules determines which bids match in the current period through price\ncompetition between the active bids. We present three variations: McAfee, WindowedMcAfee and Active-McAfee. The latter two rules are hybrid rules in that they leverage\n149\n\n\fBredin, Parkes and Duong\n\nhistory of past offers, in smoothing prices generated by the competition-based matching\nrules.\nMcAfee: Use the static DA protocol due to McAfee as the matching rule. Let B denote\nthe set of bids and S denote the set of asks. If min(|B|, |S|) < 2, then there is no trade.\nOtherwise, first insert two dummy bids with value {\u221e, 0} and two dummy asks with value\n{0, \u2212\u221e} into the set of bids and asks. Let b0 \u2265 b1 \u2265 . . . \u2265 bm and s0 \u2265 s1 \u2265 . . . \u2265\nsn . . . denote the bid and ask values with (b0 , s0 ) denoting dummy pair (\u221e, 0) and (bm , sn )\ndenoting dummy pair (0, \u2212\u221e) and ties otherwise broken at random. Let m \u2265 0 index\nthe last pair of bids and asks to clear in the efficient trade, such that bm + sm \u2265 0 and\nbm+1 + sm+1 < 0. When m \u2265 1, consider the following two cases:\nm+1\n\u2264 bm and \u2212pm+1 \u2264 sm then the first m bids and\n\u2022 (Case I) If price pm+1 = bm+1 \u2212s\n2\nasks trade and payment pm+1 is collected from each winning buyer and made to each\nwinning seller.\n\n\u2022 (Case II) Otherwise, the first m \u2212 1 bids and asks trade and payment bm is collected\nfrom each winning buyer and payment \u2212sm is made to each winning seller.\nTo define NTt , replace a bid that does not trade with a bid reporting a very large value\nand see whether this bid trades. To determine whether trade is possible for an ask that\ndoes not trade: replace the ask with an ask reporting value \u01eb > 0, some small \u01eb. Say\nthat there is a quorum if and only if there are at least two bids and at least two asks, i.e.\nmin(|bt |, |st |) \u2265 2. Define strong no-trade as follows: set SNTt := NTt = bt \u222a st when\nthere is no quorum and SNTt := \u2205 otherwise.\nLemma 2 For any bid bi in the McAfee matching rule, then for any other bid (or ask) j\nthere is some bid b\u0302i that will make trade possible for bid (or ask) j when there is a quorum.\nProof: Without loss of generality, suppose there are three bids and three asks. Label the\nbids (a, c, e) and the asks (b, d, f ), both ordered from highest to lowest so that (a, b) is the\nmost competitive bid-ask pair. Proceed by case analysis on bids. The analysis is symmetric\nfor asks and omitted. Let tp(i) \u2208 {0, 1} denote whether or not trade is possible for bid i, so\nthat i \u2208 NTt \u21d4 tp(i) = 0. For bid a: when b \u2265 \u2212(a \u2212 d)/2 then tp(c) = tp(e) = 1 and this\ninequality can always be satisfied for a large enough a; when a \u2265 (c \u2212 d)/2 then tp(b) = 1\nand when a \u2265 (c \u2212 b)/2 then tp(d) = tp(f ) = 1, and both of these inequalities are satisfied\nfor a large enough a. For bid c: when b \u2265 \u2212(c \u2212 d)/2 then tp(a) = 1 and when, in addition,\nc > a, then tp(e) = 1 and each one of these inequalities are satisfied for a large enough c;\nsimilarly when c \u2265 (a \u2212 d)/2 then tp(b) = 1 and when c \u2265 (a \u2212 b)/2 then tp(d) = tp(f ) = 1.\nAnalysis for bid e follows from that for bid c.\n\u0003\nLemma 3 The construction for strong no-trade is valid and there is no valid strong notrade construction that includes more than one losing bid or ask that will not depart in the\ncurrent period for any period in which there is a quorum.\nProof: To see that this is a valid construction, notice that strong no-trade condition (a)\nholds since any bid (or ask) is always in both NTt and SNTt . Similarly, condition (b)\ntrivially holds (with the other bids and asks remaining in SNTt even if any bid is not\n150\n\n\fChain: An Online Double Auction\n\npresent in the market). To see that this definition is essentially maximal, consider now that\nmin(|bt |, |st |) \u2265 2. For contradiction, suppose that two losing bids {i, j} with departure\nafter the current period are designated as strong no-trade. But, strong no-trade condition\n(b) fails because of Lemma 2 because either bid could have submitted an alternate bid price\nthat would remove the other bid from NTt and thus necessarily also from SNTt .\n\u0003\nThe construction offered for SNTt cannot be extended even to include one agent selected\nat random from the set i \u2208 NTt that will not depart immediately, in the case of a quorum.\nSuch a construction would fail strong no-trade condition (b) when the set NTt contains\nmore than one bid (or ask) that does not depart in the current period, because bid i's\nabsence from the market would cause some other agent to be (randomly) selected as SNTt .\n\nWindowed-McAfee: This myopic matching rule is parameterized on window size \u2206.\nAugment the active bids and asks with the bids and asks introduced to the history H t in\nperiods t\u2032 \u2208 {t \u2212 \u2206 + 1, . . . , t}. Run McAfee with this augmented set of bids and asks and\ndetermine which of these bids and asks would trade. Denote this candidate set C. Some\nactive agents identified as matching in C may not be able to trade in this period because\nC can also contain non-active agents.\nLet B \u2032 and S \u2032 denote, respectively, the active bids and active asks in set C. WindowedMcAfee then proceeds by picking a random subset of min(|B \u2032 |, |S \u2032 |) bids and asks to trade.\nWhen |B \u2032 | =\n6 |S \u2032 |, then some bids and asks will not trade.\nDefine strong no-trade for this matching rule as:\n(i) if there are no active asks but active bids, then SNTt := bt\n(ii) if there are no active bids but active asks, then SNTt := st\n(iii) if there are fewer than 2 asks or fewer than 2 bids in the augmented bid set, then\nSNTt := bt \u222a st ,\nand otherwise set SNTt := \u2205. In all cases it should be clear that SNTt \u2286 NTt .\nLemma 4 The strong no-trade construction for windowed-McAfee is valid.\nProof: That this is a valid SNT criteria in case (iii) follows immediately from the validity\nof the SNT criteria for the standard McAfee matching rule. Consider case (i). Case (ii)\nis symmetric and omitted. For strong no-trade condition (a), we see that all bids i \u2208 NTt\nand also i \u2208 SNTt , and whether or not they are designated strong no-trade is independent\nof their own bid price but simply because there are no active asks. Similarly, for strong\nno-trade condition (b), we see that all bids (and never any asks) are in SNTt whatever the\nbid price of any particular bid (and even whether or not it is present).\n\u0003\nEmpirically, we find that the efficiency of Windowed-McAfee is sensitive to the size of\nt\nH , but that frequently the best choice is a small window size that includes only the active\nbids.\nActive-McAfee: Active-McAfee augments the active bids and asks to include all unexpired but traded or priced-out offers. It proceeds as in Windowed-McAfee given this\naugmented bid set.\n151\n\n\fBredin, Parkes and Duong\n\n4.3 Extended Examples\nWe next provide two stylized examples to demonstrate the matching performed by Chain\nusing both a price-based and a competition-based matching rule. For both examples, we\nassume a maximal patience of K = 2. Moreover, while we describe when Chain determines\nthat a bid or an ask trades, remember that a winning buyer is not allocated the good until\nits reported departure and a winning seller does not receive payment until its reported\ndeparture.\nExample 5 Consider Chain using an adaptive, price-based matching rule. The particular\ndetails of how prices are determined are not relevant. Assume that the prices in periods 1\nand 2 are {p1 , p2 } = {8, 7} and the maximal patience is three periods. Now consider period\n3 and suppose that the order book is empty at the end of period 2 and that the bids and asks\nin Table 1 arrive in period 3.\nS\nB\n\u0175i d\u02c6i d\u02c6i \u2212K qi\npi SNT?\n\u0175i d\u02c6i d\u02c6i \u2212K qi\npi SNT? i\nb1 * 15 4\n2\n7\n7\nN\ns1 -1 4\n2\n-7 n/a\nY\ns2 * -3 5\n3\n\u2212\u221e -6.5\nN\nb2 * 10 3\n1\n8\n8\nN\nb3 7 3\n1\n8 n/a\nN\ns3 -4 3\n1\n-7 n/a\nY\ns4 * -5 4\n2\n-7 -6.5\nN\nb4 6 5\n3\n\u2212\u221e n/a\nN\ns5 -10 5\n3\n\u2212\u221e n/a\nY\ni\n\nTable 1: Bids and asks that arrive in period 3. Bids {b1 , b2 } match with asks {s2 , s4 } (as indicated\nwith a *). Bid b3 is priced-out upon admission because qb3 > \u0175b3 (indicated with a strikethrough). The admission price is qi and the payment made by an agent that trades is\npi . Column 'SNT?' indicates whether or not the bid or ask satisfies the strong no-trade\npredicate. Asks {s1 , s5 } survive into the next period because they are in SNT and have\ndi > 3.\n\nBids {b1 , b2 , b4 } and asks {s1 , .., s5 } are admitted. Bid b3 is priced out because qb3 =\nmax(p1 , p2 , \u2212\u221e) = max(8, 7, \u2212\u221e) = 8 > \u0175b3 = 7 by Eq. (3). Note that b4 and s5 are\nadmitted despite low bids (asks) because they have maximal patience and their admission\nprices are \u2212\u221e. Now, suppose that p3 := 6.5 is defined by the matching rule and consider\napplying Match to the admitted bids and asks.\nSuppose that the bids are randomly ordered as (b4 , b2 , b1 ) and the asks as\n(s4 , s2 , s1 , s3 , s5 ). Bid b4 is picked first but priced-out because \u0175b4 = 6 < p3 = 6.5. Bid\nb2 is tentatively accepted (\u0175b2 = 10 \u2265 p3 = 6.5) and then ask s4 is accepted (ws4 = \u22125 \u2265\np3 = \u22126.5). Bid b2 is matched with ask s4 , with payment max(qb2 , p3 ) = max(8, 6.5) = 8\nfor b2 by Eq. (4) and payment max(qs4 , p3 ) = max(\u2212\u221e, \u22126.5) = \u22126.5 for s4 . Bid b1 is then\ntentatively accepted (15 \u2265 6.5) and then matched with ask s2 , which is accepted because\n\u22123 \u2265 \u22126.5. The payments are max(7, 6.5) = 7 for b1 and max(\u2212\u221e, \u22126.5) = \u22126.5 for s2 .\nAsk s3 expires but asks s1 and s5 survive and are marked i \u2208 SNT in this period because\nthey were never offered the chance to match with any bid. These asks will be active in period\n4.\nNote the role of the admission price in truthfulness. Had bid b1 delayed arrival until\nperiod 4, its admission price would be max(p2 , p3 , \u2212\u221e) = max(7, 6.5) = 7 and its payment\n152\n\n\fChain: An Online Double Auction\n\nin period 4 (if it matches) at least 7. Similarly, had ask s4 delayed arrival, then its admission\nprice would be max(\u22127, \u22126.5, \u2212\u221e) = \u22126.5 and the maximal payment it can receive in period\n4 is 6.5.\nExample 6 Consider Chain using the McAfee-based matching rule with K = 3 and with\nthe same bids and asks arriving in period 3. Suppose that the prices in periods 1 and 2 that\nwould have been faced by a buyer are {p1b , p2b } = {8, 7} and {p1s , p2s } = {\u22127, \u22126} for a seller.\nThese prices are determined by inserting an additional bid (with value \u221e) or an additional\nask (with value 0) into the order books in each of periods 1 and 2. We will illustrate this\nfor period 3. Consider now the bids and asks in period 3 in Table 2.\n\ni wi di\nb1 * 15 4\nb2 * 10 3\nb3 7 3\nb4 6 5\n\nS\nB\ndi \u2212K qi\npi SNT? i\nwi di di \u2212K qi\npi SNT?\n2\n7\n7\nN\ns1 * -1 4\n2\n-6\n-4\nN\ns2 * -3 5\n3\n\u2212\u221e -4\nN\n1\n8\n8\nN\n1\n8 n/a\nN\ns3 -4 3\n1\n-6 n/a\nN\n3\n\u2212\u221e n/a\nN\ns4 -5 4\n2\n-6 n/a\nN\ns5 -10 5\n3\n\u2212\u221e n/a\nN\n\nTable 2: Bids and asks that arrive in period 3. Bids {b1 , b2 } match with asks {s1 , s2 } (as indicated\nwith a *). Bid b3 is priced-out upon admission because qb3 > \u0175b3 . The admission price is\nqi and the payment made by an agent that trades is pi . Column 'SNT?' indicates whether\nor not the bid or ask satisfies the strong no-trade predicate. No asks or bids survive into\nthe next period.\n\nAs before bid b3 is not admitted. The myopic matching rule now runs the (static) McAfee\nauction rule on bids {b1 , b2 , b4 } and asks {s1 , .., s5 }. Consider bids and asks in decreasing\norder of value, the last efficient trade is indexed m = 3 with \u0175b4 + \u0175s3 = 6 \u2212 4 \u2265 0. But\npm+1 = (0\u2212(\u22125))/2 = 2.5 (inserting a dummy bid with value 0 as described in Section 4.2).\nPrice \u2212pm+1 = \u22122.5 > s3 = \u22124 and this trade cannot be executed by McAfee. Instead,\nbuyers {b1 , b2 } trade and face price pbm = \u0175b4 = 6 and sellers {s1 , s2 } trade and face price\npsm = \u0175s3 = \u22124. Bids b4 and asks {s3 , s4 , s5 } are priced-out and do not survive into the\nnext round. Ultimately, payment max(qb1 , pbm ) = max(7, 6) = 7 is collected from buyer b1\nand payment max(qb2 , pbm ) = max(8, 6) = 8 is collected from buyer b2 . For sellers, payment\nmax(\u22126, \u22124) = \u22124 and max(\u2212\u221e, \u22124) = \u22124 for s1 and s2 respectively.\nThe prices p3b and p3s that are used in Eq. (3) to define the admission price for bids and\nasks with arrivals in periods 4 and 5 are determined as follows. For the buy-side price, we\nintroduce an additional bid with bid-price \u221e. With this the bid values considered by McAfee\nwould be (\u221e, 15, 10, 6, 0) and the ask values would be (\u22121, \u22123, \u22124, \u22125, \u221210), where a dummy\nbid with value 0 is included on the buy-side. The last efficient pair to trade is m = 4 with\n6 \u2212 5 \u2265 0 and pm+1 = (0 \u2212 (\u221210))/2 = 5, which satisfies this bid-ask pair. Therefore the\nbuy-side price, p3b := 5. On the sell-side, we introduce an additional ask with ask-price\n0 so that the bid values considered by McAfee are (15, 10, 6, 0) (again, with a dummy bid\nincluded) and the ask values are (0, \u22121, \u22123, \u22124, \u22125, \u221210). This time m = 3 and the last\nefficient pair to trade is 6 \u2212 3 \u2265 0. Now pm+1 = (0 \u2212 (\u22124))/2 = 2 and this price does not\n153\n\n\fBredin, Parkes and Duong\n\nsatisfy s2 , with \u2212pm+1 > s2 and price psm+1 = s2 = \u22123 is adopted. Therefore the sell-side\nprice, p3s := \u22123.\nAgain, we can see that bidder 1 cannot improve its price by delaying its entry until period\n4. The admission price for the bidder would be max(p2b , p3b ) = max(7, p3b ) \u2265 7 and thus its\npayment in period 4, if it matches, will be at least 7.4 Similarly for ask s1 , which would face\nadmission price max{p2s , p3s } = max{\u22126, \u22124} = \u22124 and can receive a payment of at most 4\nin period 4. We leave it as an exercise for the reader to verify that p3s = \u22124 if ask s1 delays\nits arrival until period 4 (in comparison, p3s = \u22123 when ask s1 is truthful).\nBecause the McAfee-based pricing scheme computes a price and clears the order book\nfollowing every period in which there are at least two bids and two asks, the bid activity\nperiods tend to be short in comparison to the adaptive, price-based rules where orders can\nbe kept active longer when there is an asymmetry in the number of bids and asks in the\nmarket. In fact, one interesting artifact that occurs with adaptive, price-based matching\nrules is that the admission-price and SNT can perpetuate this kind of bid-ask asymmetry.\nOnce the market has more asks than bids, SNT becomes likely for future asks, but not bids.\nTherefore, bids are much more likely than asks to be immediately priced out of the market\nby failing to meet the admission price constraint.\n\n5. Theoretical Analysis: Truthfulness, Uniqueness, and Justifying\nBounded-Patience\nIn this section we prove that Chain combined with a well-defined matching rule and a valid\nstrong no-trade construction generates a truthful, no-deficit, feasible and individual-rational\ndynamic DA. In Section 5.2, we establish that uniqueness of Chain amongst dynamic DAs\nthat are constructed from single-period matching rules as building blocks. In Section 5.3,\nwe establish the importance of the existence of a maximal bound on bidder patience by\npresenting a simple environment in which no truthful, no-deficit DA can implement even a\nsingle trade despite the number of efficient trades can be increased without bound.\n5.1 The Chain Mechanism is Strongly Truthful\nIt will be helpful to adopt a price-based interpretation of a valid single-period matching rule.\nGiven rule Mmr , define an agent-independent price, zi (H t , At \\ i, \u03c9) \u2208 R where At = bt \u222a st ,\nsuch that for all i, all bids bt , all asks st , all history H t , and all random events \u03c9 \u2208 \u03a9. We\nhave:\n(A1) \u0175i \u2212 zi (H t , At \\ i, \u03c9) > 0 \u21d2 \u03c0mr,i (H t , bt , st , \u03c9) = 1, and \u0175i \u2212 zi (H t , At \\ i, \u03c9) <\n0 \u21d2 \u03c0mr,i (H t , bt , st , \u03c9) = 0\n(A2) payment xmr,i (H t , bt , st , \u03c9) = zi (H t , At \\ i, \u03c9) if \u03c0mr,i (H t , bt , st , \u03c9) = 1 and\nxmr,i (H t , bt , st , \u03c9) = 0 otherwise\n4. We can check that p3b := 6 in this case. Suppose that bidder 1 were not present in period 3. Now consider\nintroducing an additional bid with value \u221e so that the bids values are {\u221e, 10, 6, 0} (with a dummy bid)\nwith ask values {\u22121, \u22123, \u22124, \u22125, \u221210}. Then m = 3 and pm+1 = (0 \u2212 (\u22125))/2 = 2.5, which does not\nsupport the trade between bid b4 and ask s3 . Instead, pbm = \u0175b4 = 6 is adopted, and we would have\np3b := 6. Of course, this is exactly the price determined by McAfee for bid b1 in period 3 when the bidder\nis truthful.\n\n154\n\n\fChain: An Online Double Auction\n\nThe interpretation is that there is an agent-independent price, zi (H t , At \\ i, \u03c9), that is\nat least \u0175i when the agent loses and no greater than \u0175i otherwise. In particular, zi (H t , At \\\ni, \u03c9) = \u221e when i \u2208 NTt . Although an agent's price is only explicit in a matching rule when\nthe agent trades, it is well known that such a price exists for any truthful, single-parameter\nmechanism; e.g., see works by Archer and Tardos (?) and Goldberg and Hartline (?).5\nMoving forward we adopt price zi to characterize the matching rule used as a building\nblock for Chain, and assume without loss of generality properties (A1) and (A2).\nGiven this, we will now establish the truthfulness of Chain by appeal to a price-based\ncharacterization due to Hajiaghayi et al. (?) for truthful, dynamic mechanisms. We state\n(without proof) a variant on the characterization result that holds for stochastic policies\n(\u03c0, x) and strong-truthfulness. The theorem that we state is also specialized to our DA\nenvironment. We continue to adopt \u03c9 \u2208 \u03a9 to capture the realization of stochastic events\ninternal to the mechanism:\nTheorem 2 (?) A dynamic DA M = (\u03c0, x), perhaps stochastic, is strongly truthful for\nmisreports limited to no early-arrivals if and only if, for every agent i, all \u03b8\u0302i , all \u03b8\u2212i , and\nall random events \u03c9 \u2208 \u03a9, there exists a price pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) such that:\n(B1) the price is independent of agent i's reported value\n(B2) the price is monotonic-increasing in tighter [a\u2032i , d\u2032i ] \u2282 [\u00e2i , d\u02c6i ]\n(B3) trade \u03c0i (\u03b8\u0302i , \u03b8\u2212i ) = 1 whenever pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < \u0175i and \u03c0i (\u03b8\u0302i , \u03b8\u2212i ) = 0 whenever\npi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) > \u0175i , and the trade is performed for a buyer upon its departure period\nd\u02c6i .\n(B4) the agent's payment is xi (\u03b8\u0302i , \u03b8\u2212i ) = pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) when \u03c0i (\u03b8\u0302i , \u03b8\u2212i ) = 1, with\nxi (\u03b8\u0302i , \u03b8\u2212i ) = 0 otherwise, and the payment is made to a seller upon its departure, d\u02c6i .\nwhere random event \u03c9 is independent of the report of agent i in as much as it affects the\nprice to agent i.\nJust as for the single-period, price-based characterization, the price pi (ai , di , \u03b8\u2212i , \u03c9) need\nnot always be explicit in Chain. Rather, the theorem states that given any truthful dynamic\nDA, such as Chain, there exists a well-defined price function with these properties of valueindependence (B1) and arrival-departure monotonicity (B2), and such that they define the\ntrade (B3) and the payment (B4).\nTo establish the truthfulness of Chain, we prove that it is well-defined with respect to\nthe following price function:\npi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) = max(q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030ci (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)),\n\n(5)\n\nwhere\nq\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) =\n\nmax\n\nt\nt\u2208[d\u02c6i \u2212K,\u00e2i \u22121],i\u2208SNT\n/\n\n(zi (H t , At \\ i, \u03c9), \u2212\u221e)\n\n(6)\n\n5. A single-parameter mechanism is one in which the private information of an agent is limited to one\nnumber. This fits the single-period matching problem because the arrival and departure information\nis discarded. Moreover, although there are both buyers and sellers, the problem is effectively singleparameter because no buyer can usefully pretend to be a seller and vice versa.\n\n155\n\n\fBredin, Parkes and Duong\n\nand\np\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) =\n\n\u001a\n\nzi (H t\u2217 , At\u2217 \\ i, \u03c9) , if decision(i) = 1\n+\u221e\n, otherwise\n\n(7)\n\nwhere decision(i) = 0 indicates that i \u2208 SNTt for all t \u2208 [\u00e2i , d\u02c6i ] and decision(i) = 1\notherwise, and where t\u2217 \u2208 [\u00e2i , d\u02c6i ] is the first period in which i \u2208\n/ SNTt . We refer to this\nas the decision period. Term q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) denotes the admission price, and is defined on\nperiods t before the agent arrives for which i \u2208\n/ SNTt had it arrived in that period. Note\ncarefully that the rules of Chain are implicit in defining this price function. For instance,\nwhether or not i \u2208 SNTt in some period t depends, for example, on the other bids that\nremain active in that period.\nWe now establish conditions (B1)\u2013(B4). The proofs of the technical lemmas are deferred\nuntil the Appendix. The following lemma is helpful and gets to the heart of the strong notrade concept.\nLemma 5 The set of active agents (other than i) in period t in Chain is independent of\ni's report while agent i remains active, and would be unchanged if i's arrival is later than\nperiod t.\nThe following result establishes properties (B1) and (B2).\nLemma 6 The price constructed from admission price q\u030c and post-arrival price p\u030c is valueindependent and monotonic-increasing when the matching rule in Chain is well-defined,\nthe strong no-trade construction is valid, and agent patience is bounded by K.\nHaving established properties (B1) and (B2) for price function pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), we just\nneed to establish (B3) and (B4) to show truthfulness. The timing aspect of (B3) and (B4),\nwhich requires that the buyer receives an item and the seller receives its payment upon\nreported departure, is already clear from the definition of Chain.\nTheorem 3 The online DA Chain is strongly truthful, no-deficit, feasible and individualrational when the matching rule is well-defined, the strong no-trade construction is valid,\nand agent patience is bounded by K.\nProof: Properties (B1) and (B2) follow from Lemma 6. The timing aspects of (B3) and\n(B4) are immediate. To complete the proof, we first consider (B3). If q\u030c > \u0175i , then agent\ni is priced out at admission by Chain because this reflects that zi (H t , At \\ i, \u03c9) > \u0175i in\nsome t \u2208 [d\u02c6i \u2212 K, \u00e2i \u2212 1] with i \u2208\n/ SNTt , and thus the bid would lose if it arrived in that\nperiod (either because it could trade, but for a payment greater than its reported value, or\nbecause i \u2208 NTt ). Also, if there is no decision period, then p\u030c = \u221e, which is consistent with\nChain, because there is no bid price at which a bid will trade when i \u2208 SNTt for all periods\nt \u2208 [\u00e2i , d\u02c6i ]. Suppose now that there is a decision period t\u2217 and q\u030c < \u0175i . If p\u030c > \u0175i , then there\nshould be no trade. This is the case in Chain, because the price zi (H t\u2217 , At\u2217 \\ i, \u03c9) in t\u2217 is\ngreater than \u0175i and thus the agent is priced-out. If p\u030c < \u0175i then the bid should trade and\nindeed it does, again because the price zi in that period satisfies (A1) and (A2) with respect\nto the matching rule. Turning to (B4), it is immediate that the payments collected in Chain\n156\n\n\fChain: An Online Double Auction\n\nare equal to price pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), because if bid i trades then pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2264 \u0175i and\nthus q\u030c \u2264 \u0175i and p\u030c \u2264 \u0175i . The admission price q(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) = q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) when q\u030c \u2264 \u0175i\nbecause price zi is well-defined by properties (A1) and (A2). Similarly, the payment pt\u2217\ndefined by the matching rule in Chain in the decision period is equal to p\u030c.\nThat Chain is individual-rational and feasible follows from inspection. Chain is nodeficit because the payment collected from every agent (whether a buyer or a seller) is at\nleast that defined by a valid matching rule in the decision period t\u2217 (it can be higher when\nthe admission price is higher than this matching price), the matching rules are themselves\nno-deficit, and because the auctioneer delays making a payment to a seller until its reported\ndeparture but collects payment from a buyer immediately upon a match.\n\u0003\nWe remark that information can be reported to bidders that are not currently participating in the market, for instance to assist in their valuation process. If this information\nis delayed by at least the maximal patience of a bidder, so that the bid of a current bidder\ncannot influence the other bids and asks that it faces, then this is without any strategic\nconsequences. Of course, without this constraint, or with bidders that participate in the\nmarket multiple times, the effect of such feedback would require careful analysis and bring\nus outside of the private values framework.\n5.2 Chain is Unique amongst Dynamic DAs that are constructed from Myopic\nMatching Rules\nIn what follows, we establish that Chain is unique amongst all truthful, dynamic DAs that\nadopt well-defined, myopic matching rules as simple building blocks. For this, we define\nthe class of canonical, dynamic DAs, which take a well-defined single period matching rule\ncoupled with a valid strong no-trade construction, and satisfy the following requirements:\n(i) agents are active until they are matched or priced-out,\n(ii) agents participate in the single-period matching rule while active\n(iii) agents are matched if and only if they trade in the single-period matching rule.\nWe think that these restrictions capture the essence of what it means to construct a\ndynamic DA from single-period matching rules. Notice that a number of design elements are\nleft undefined, including the payment collected from matched bids, when to mark an active\nbid as priced-out, what rule to use upon admission, and how to use the strong no-trade\ninformation within the dynamic DA. In establishing a uniqueness result, we leverage the\nnecessary and sufficient price-based characterization in Theorem 2, and exactly determine\nthe price function pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) to that defined in Eq. (4) and associated with Chain.\nThe proofs for the two technical lemmas are deferred until the Appendix.\nLemma 7 A strongly truthful, canonical dynamic DA must define price pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265\nzi (H t\u2217 , At\u2217 \\ i, \u03c9) where t\u2217 is the decision period for bid i (if it exists). Moreover, the bid\nmust be priced-out in period t\u2217 if it is not matched.\nLemma 8 A strongly truthful, canonical and individual-rational dynamic DA must define\nprice pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), and a bid with \u0175i < q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) must be pricedout upon admission.\n157\n\n\fBredin, Parkes and Duong\n\nTheorem 4 The dynamic DA algorithm Chain uniquely defines a strongly truthful,\nindividual-rational auction among canonical dynamic DAs that only designate bids as pricedout when necessary.\nProof: If there is no decision period, then we must have pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) = \u221e, by canonical\n(iii) coupled with (B3). Combining this with Lemmas 7 and 8, we have pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265\nmax(q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)). We have also established that a bid must be pricedout if its bid value is less than the admission price, or it fails to match in its decision\nperiod. Left to show is that the price is exactly as in Chain, and that a bid is admitted\nwhen its value \u0175i \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) and retained as active when it is in the strong notrade set. The last two control aspects are determined once we choose a rule that \"only\ndesignates bids as priced-out when necessary.\" We prefer to allow a bid to remain active\nwhen this does not compromise truthfulness or individual-rationality. Finally, suppose\nfor contradiction that p\u2032 = pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) > max(q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)). Then\nan agent with max(q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)) < wi < p\u2032 would prefer to bid \u0175i =\nq\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9)) \u2212 \u01eb and avoid winning \u2013 otherwise its payment would be\ngreater than its value.\n\u0003\n5.3 Bounded Patience Is Required for Reasonable Efficiency\nChain depends on a maximal bound on patience used to calculate the admission price faced\nby a bidder on entering the market with Eq. (3). To motivate this assumption about the\nexistence of a maximal patience, we construct a simple environment in which the number of\ntrades implemented by a truthful, no-deficit DA can be made an arbitrarily small fraction\nof the number of efficient trades with even a small number of bidders having potentially unbounded patience. This illustrates that a bound on bidder patience is required for dynamic\nDAs with reasonable performance.\nIn achieving this negative result, we impose the additional requirement of anonymity,\nThis anonymity property is already satisfied by Chain, when coupled with matching rules\nthat satisfy anonymity, as is the case with all the rules presented in Section 4. In defining\nanonymity, extend the earlier definition of a dynamic DA, M = (\u03c0, x), so that allocation\npolicy \u03c0 = {\u03c0 t }t\u2208T defines the probability \u03c0it (\u03b8 \u2264t ) \u2208 [0, 1] that agent i trades in period t\ngiven reports \u03b8 \u2264t . Payment, x = {xt }t\u2208T , continues to define the payment xti (\u03b8 \u2264t ) by agent\ni in period t, and is a random variable when the mechanism is stochastic.\nDefinition 8 (anonymity) A dynamic DA, M = (\u03c0, x) is anonymous if allocation policy\n\u03c0 = {\u03c0 t }t\u2208T defines probability of trade \u03c0it (\u03b8 \u2264t ) in each period t that is independent of\nidentity i and invariant to a permutation of (\u03b8 \u2264t \\ i) and if the payment xti (\u03b8 \u2264t ), contingent\non trade by agent i, is independent of identity i and invariant to a permutation of (\u03b8 \u2264t \\ i).\nWe now consider the following simple environment. Informally, there will be a random\nnumber of high-valued phases in which bids and asks have high value and there might be a\nsingle bidder with patience that exceeds that of the other bids and asks in the phase. These\nhigh-valued phases are then followed by some number, perhaps zero, of low-valued phases\nwith bounded-patience bids and asks. Formally, there are Th \u2265 1 high-valued phases\n(a random variable, unknown to the auction), each of duration L \u2265 1 periods, indexed\nk \u2208 {0, 1, . . . , Th \u2212 1} and each with:\n158\n\n\fChain: An Online Double Auction\n\n\u2022 N or N \u2212 1 bids with type (1 + kL, (k + 1)L, vH ),\n\u2022 0 or 1 bids with type (1 + kL, d, \u03b1vH ) for some mark-up parameter, \u03b1 > 1 and some\nhigh-patience parameter, d \u2208 T ,\n\u2022 N asks with type (1 + kL, (k + 1)L, \u2212(vH \u2212 \u01eb)),\nfollowed by some number (perhaps zero) of low-valued phases, also of duration L, and\nindexed k \u2208 {Th , . . . , \u221e}, with:\n\u2022 N or N \u2212 1 bids with type (1 + kL, (k + 1)L, vL )\n\u2022 N asks with type (1 + kL, (k + 1)L, \u2212(vL \u2212 \u01eb)),\nwhere N \u2265 1, 0 < vL < vH , and bid-spread parameter \u01eb > 0. Note that any phase can\nbe the last phase, with no additional bids or asks arriving in the future.\nDefinition 9 (reasonable DA) A dynamic DA is reasonable in this simple environment\nif there is some parameterization of new bids, N \u2265 1, and periods-per-phase, L \u2265 1, for\nwhich it will execute at least one trade between new bids and new asks in each phase,\nfor any choice of high value vH , low value vL < vH , bid-spread \u01eb > 0, mark-up \u03b1 > 1, high\npatience d.\nAll of the dynamic DAs presented in Section 4 can be parameterized to make them\nreasonable for a suitably large N \u2265 1 and L \u2265 1, and without the possibility of a bid with\nan unbounded patience.\nTheorem 5 No strongly truthful, individual-rational, no-deficit, feasible, anonymous dynamic DA can be reasonable when a bidder's patience can be unbounded.\nProof: Fix any N \u2265 1, L \u2265 1, and for the number of high-valued phases, Th \u2265 1, set the\ndeparture of a high-patience agent to d = (Th + 1)L. Keep vH > vL > 0, \u01eb > 0, and \u03b1 > 1\nas variables to be set within the proof. Assume a dynamic DA is reasonable, so that it\nselects at least one new bid-ask pair to trade in each phase. Consider phase k = 0 and with\nN \u2212 1 agents of types (1, L, vH ), N of type (1, L, \u2212(vH \u2212 \u01eb)) and 1 agent of patient type,\n(1, (Th + 1)L, \u03b1vH ). If the patient bid deviates to (1, L, vH ), then the bids are all identical,\nand with probability at least 1/N the bid would win by anonymity and reasonableness.\nAlso, by anonymity, individual-rationality and no-deficit we have that the payment made\nby any winning bid is the same, and must be p\u2032 \u2208 [vH \u2212\u01eb, vH ]. (If the payment had been less\nthan this, the DA would run at a deficit since the sellers require at least this much payment\nfor individual-rationality.) Condition now on the case that the patient bid would win if it\ndeviates and reports (1, L, vH ). Suppose the bidder is truthful, reports (1, (Th + 1)L, \u03b1vH )\nbut does not trade in this phase. But, if phase k = 0 is the last phase with new bids and\nasks, then the bid will not be able to trade in the future and for strong-truthfulness the\nDA would need to make a payment of at least \u03b1vH \u2212 vH = (\u03b1 \u2212 1)vH in a later phase to\nprevent the bid having a useful deviation to (1, L, vH ) and winning in phase k = 0. But, if:\nN \u01eb < (\u03b1 \u2212 1)vH ,\n159\n\n(8)\n\n\fBredin, Parkes and Duong\n\nthen the DA cannot make this payment without failing no-deficit (because N \u01eb is an upperbound on the surplus the auctioneer could extract from bidders in this phase without\nviolating individual-rationality). We will later pick values of \u03b1, \u01eb and vH , to satisfy Eq. (8).\nSo, the bid must trade when it reports (1, (Th + 1)L, \u03b1vH ), in the event that it would win\nwith report (1, L, vH ), as \"insurance\" against this being the last phase with new bids and\nasks. Moreover, it should trade for payment, p\u2032 \u2208 [vH \u2212 \u01eb, vH ], to ensure an agent with true\ntype (1, L, vH ) cannot benefit by reporting (1, (Th + 1)L, \u03b1vH ).\nNow suppose that this was not the last phase with new bids and asks, and Th > 1.\nNow consider what would happen if the patient bid in phase k = 0 deviated and reported\n(1 + Th L, (Th + 1)L, vL ). As before, this bid would win with probability at least 1/N by\nanonymity and reasonableness, but now with some payment p\u2032\u2032 \u2208 [vL \u2212 \u01eb, vL ]. Condition\nnow on the case that the patient bid would win, both with a report of (1, L, vH ) and with a\nreport of (1 + Th L, (Th + 1)L, vL ). When truthful, it trades in phase k = 0 with payment at\nleast vH \u2212 \u01eb. If it had reported (1 + Th L, (Th + 1)L, vL ), it would trade in phase k = Th for\npayment at most vL . For strong truthfulness, the DA must make an additional payment to\nthe patient agent of at least (vH \u2212 vL ) \u2212 (vH \u2212 (vH \u2212 \u01eb)) = vH \u2212 vL \u2212 \u01eb. But, suppose that\nthe high and low values are such that,\n(Th + 1)N \u01eb < vH \u2212 vL \u2212 \u01eb.\n\n(9)\n\nMaking this payment in this case would violate no-deficit, because (Th +1)N \u01eb is an upperbound on the surplus the auctioneer can extract from bidders across all phases, including\nthe current phase, without violating individual-rationality. But now we can fix any vL > 0,\n\u01eb < vL and choose vH > (Th + 1)N \u01eb + vL + \u01eb to satisfy Eq. (9) and \u03b1 > (N \u01eb/vH ) + 1\nto satisfy Eq. (8). Thus, we have proved that no truthful dynamic DA can choose a bidask pair to trade in period k = 0. The proof can be readily extended to show a similar\nproblem with choosing a bid-ask pair in any period k < Th , by considering truthful type of\n(1 + kL, (Th + 1)L, \u03b1vH ).\n\u0003\nTo drive home the negative result: notice that the number of efficient trades can be\nincreased without limit by choosing an arbitrarily large Th , and that no truthful, dynamic DA with these properties will be able to execute even a single trade in each of\nthese {0, . . . , Th \u2212 1} periods. Moreover, we see that only a vanishingly small fraction of\nhigh-patience agents is required for this negative result. The proof only requires that at\nleast one patient agent is possible in all of the high-valued phases.\n\n6. Experimental Analysis\nIn this section, we evaluate in simulation each of the Chain-based DAs introduced in\nSection 4. We measure the allocative efficiency (total value from the trades), net efficiency\n(total value discounted for the revenue that flows to the auctioneer), and revenue to the\nauctioneer. All values are normalized by the total offline value of the optimal matching.\nFor comparison we also implement several other matching schemes: the truthful, surplusmaximizing matching algorithm presented by Blum et al. (?), an untruthful greedy matching\nalgorithm using truthful bids as input to provide an upper-bound on performance, and an\nuntruthful DA populated with simple adaptive agents that are modeled after the Zerointelligence Plus trading algorithm that has been leveraged in the study of static DAs (?,\n?).\n160\n\n\fChain: An Online Double Auction\n\n6.1 Experimental Set-up\nTraders arrive to the market as a Poisson stream to exchange a single commodity at discrete\nmoments. This is a standard model of arrival in dynamic systems, economic or otherwise.\nEach trader, equally likely to be a buyer or seller, arrives after the previous with an exponentially distributed delay, with probability density function (pdf):\nf (x) = \u03bbe\u2212\u03bbx ,\n\nx \u2265 0,\n\n(10)\n\nwhere \u03bb > 0 represents the arrival intensity in agents per second. Later we present results\nas the interarrival time, \u03bb1 , is varied between 0.05 and 1.5; i.e., as the arrival intensity is\nvaried between 20 and 23 . A single trial continues until at least 5,000 buyers and 5,000 sellers\nhave entered the market. In our experiments we vary the maximal patience K between 2\nand 10. For the distribution on an agent's activity period (or patience, di \u2212 ai ), we consider\nboth a uniform distribution with pdf:\nf (x) =\n\n1\n,\nK\n\nx \u2208 [0, K],\n\n(11)\n\nand a truncated exponential distribution with pdf:\nf (x) = \u03b1e\u2212\u03b1x ,\n\nx \u2208 [0, K],\n\n(12)\n\nwhere \u03b1 = \u2212 ln(0.05)/K so that 95% of the underlying exponential distribution is less than\nthe maximal patience. Both arrival time and activity duration are rounded to the nearest\nintegral time period. A trader who arrives and departs during the same period is assumed\nto need an immediate trade and is active for only one period.\nEach trader's valuation represents a sample drawn at its arrival from a uniform distribution with spread 20% about the current mean valuation. (The value is positive for a bid\nand negative for an ask.) To simulate market volatility, we run experiments that vary the\naverage valuation using Brownian motion, a common model for valuation volatility upon\nwhich many option pricing models are based (?). At every time period, the mean valuation\nrandomly increases or decreases by a constant multiplier, e\u00b1\u03b3 , where \u03b3 is the approximate\nvolatility and varied between 0 and 0.15 in our experiments.\nWe plot the mean efficiency of 100 runs for each experiment, with the same sets of bids\nand asks used across all double auctions. All parameters of an auction rule are reoptimized\nfor each market environment; e.g., we can find the optimal fixed price and the optimal\nsmoothing parameters offline given the ability to sample from the market model.\n6.2 Chain Implementation\nWe implement Chain for the five price-based matching rules (history-clearing, historymedian, history-McAfee, history-EWMA, and fixed-price) and the three competition-based\nmatching rules (McAfee, active-McAfee, and windowed-McAfee).\nThe price-based implementations keep a fixed-size set of the most recently expired,\ntraded, or priced-out offers, H t . Offers priced-out by their admission prices are inserted\ninto H t prior to computing pt . The history-clearing metric computes a price to maximize the\nnumber of trades to agents represented by H t had they all been contemporary. The historymedian metric chooses the price to be the median of the absolute valuation of the offers\n161\n\n\fBredin, Parkes and Duong\n\nin H t . The history-McAfee method computes the \"McAfee price\" for the scenario where\nall agents represented by H t are simultaneously present. The EWMA metric computes an\nexponentially-weighted average of bids in the order that they expire, trade, or price out.\nThe simulations initialize the price to the average of the mean buy and sell valuations. If\ntwo bids expire during the same period, they are included in arbitrary order to the moving\naverage.\nNone of the metrics require more than one parameter, which is optimized offline with\naccess to the model of the market environment. Parameter optimization proceeds by uniformly sampling the parameter range, smoothing the result by averaging each result with\nits immediate neighbors. The optimization repeats twice more over a narrower range about\nthe smoothed maximum, returning the parameter that maximizes (expected) allocative efficiency. None of the price-based methods appeared to be sensitive to small (<10%) changes\nin the size of H t . With most simulations, the window size was chosen to be about 150 offers. For EWMA, the smoothing factor was usually chosen to be around 0.05 or lower. The\nwindowed-McAfee matching rule, however, was extremely sensitive to window size for simulations with volatile valuations, and the search process frequently converged to suboptimal\nlocal maxima.\nThe admission price in the price-based methods is computed by first determining\nwhether Match would check the value of the bid against bid price if the bid had arrived in\nsome earlier period t\u2032 . Rather than simulate the entire Match procedure, it is sufficient to\ndetermine the probability \u03c1i of this event. This is determined by checking the construction\n\u2032\nof the strong no-trade sets in that earlier period. If SNTt contains non-departing buyers\n(sellers), then the probability that an additional seller (buyer) would be examined is 1 and\n\u03c1i = 1. Otherwise the probability is equal to the ratio of the number of bids (asks) examined not included in SNTt and one more than the total number of bids (asks) present.\n\u2032\nFinally, with probability \u03c1i the price the agent would have faced in period t\u2032 is defined as pt\n\u2032\n\u2032\n(\u2212pt for sellers), and otherwise it is \u2212\u221e. Here, pt is the history-dependent price defined\nin period t\u2032 .\nThe competition-based matching rules price out all non-trading bids at the end of each\nperiod in which trade occurs (because of the definition of strong no-trade in that context).\nThe admission prices are calculated by considering the price that a bid (ask) would have\nfaced in some period t\u2032 before its reported arrival. In such a period, the price for a bid (ask)\nis determined by inserting an additional bid (ask) with valuation \u221e (0) and applying the\ncompetition-based matching rule to that (counterfactual) state. From this we determine\nwhether the agent would win for its reported value, and if so what price it would face.\n6.3 Optimal Offline Matching\nWe use a commercial integer program solver (CPLEX6 ) to compute the optimal offline\nsolution, i.e. with complete knowledge about all offers received over time. In determining\nthe offline solution we enforce the constraint that a trade can only be executed if the activity\nperiods of both buyer, i, and seller, j, overlap,\n(ai \u2264 dj ) \u2227 (aj \u2264 di )\n6. www.ilog.com\n\n162\n\n(13)\n\n\fChain: An Online Double Auction\n\nAn integer-program formulation to maximize total value is:\nmax\n\nX\n\nxij (wi + wj )\n\n(14)\n\n(i,j)\u2208overlap\n\nX\n\ns.t. 0 \u2264\n\nxij \u2264 1, \u2200j \u2208 ask\n\ni:(i,j)\u2208overlap\n\n0\u2264\n\nX\n\nxij \u2264 1, \u2200i \u2208 bid\n\nj:(i,j)\u2208overlap\n\nxij \u2208 {0, 1}, \u2200i, j,\n\nwhere (i, j) \u2208 overlap is a bid-ask pair that could potentially trade because they have\noverlapping arrival and departure intervals satisfying Eq. (13). The decision variable xij \u2208\n{0, 1} indicates that bid i matches with ask j. This provides the optimal, offline allocative\nefficiency.\n6.4 Greedy Online Matching\nWe implement a greedy matching algorithm that immediately matches offers that yield nonnegative budget surplus. This is a non-truthful matching rule but provides an additional\ncomparison point for the efficiency of the other matching schemes. During each time period,\nthe greedy matching algorithm orders active bids and asks by their valuations, exactly as\nthe McAfee mechanism does, and matches offers until pairs no longer generate positive\nsurplus. The algorithm's performance allows us to infer the number of offers that the\noptimal matching defers before matching and the amount of surplus lost by the McAfee\nmethod due to trade reduction and due to the additional constraint of admission pricing.\n6.5 Worst-Case Optimal Matching\nBlum et al. (?) derive a mechanism equivalent to our fixed-price matching mechanism,\nexcept that the price used is chosen from the cumulative distribution\n1\nln\nD(x) =\nr\u03b1\n\n\u0012\n\nx \u2212 wmin\n(r \u2212 1)wmin\n\n\u0013\n\n,\n\n(15)\n\nwhere r is the fixed point to the equation\nr = ln\n\n\u0012\n\nwmax \u2212 wmin\n(r \u2212 1)wmin\n\n\u0013\n\n,\n\n(16)\n\nand wmin \u2265 0 and wmax \u2265 0 are the minimum and maximum absolute valuations of all\ntraders in the market. For our simulations, we give the mechanism the exact knowledge of\nthe minimum and maximum absolute valuations for each schedule. Blum et al. (?) show\nthat this method guarantees an expected competitive ratio of max(2, ln(wmax /wmin )) with\nrespect to the optimal offline solution in an adversarial setting. We were interested to see\nhow will this performed in practice in our simulations.\n163\n\n\fBredin, Parkes and Duong\n\n6.6 Strategic Open-outcry Matching: ZIP Agents\nTo compare Chain with the existing literature on continuous double auctions, we implement\na DA that in every period sorts all active offers and matches the highest valued bids with\nthe lowest valued asks so long as the match yields positive net surplus. The DA prices each\ntrading pair at the mean of the pair's declared valuations. Since the trade price depends\non a bidder's declaration, the market does not support truthful bidding strategies. We must\ntherefore adopt a method to simulate the behavior of bidding agents within this simple open\noutcry market.\nFor this, we randomly assign each bid to one of several \"protocol agents\" that each\nuse a modified ZIP trading algorithm, as initially presented by Cliff and Bruten (?) and\nimproved upon by Preist and van Tol (?). The ZIP algorithm is a common benchmark\nused to compare learned bidding behavior in a simple double-auction trading environment\nin which agents are present at once and adjust their bids in seeking a profitable trade. We\nadapt the ZIP algorithm for use in our dynamic environment.\nIn our experiments we consider five of these protocol agents. New offers are assigned\nuniformly at random to a protocol agent, which remains persistent throughout the simulation. Each offer is associated with a patience category, k \u2208 {low, medium, high}, defined\nto evenly partition the range of possible offer patience. Each protocol agent, j, is defined\nwith parameters (rj , \u03b2j , \u03b3j ) and maintains a profit margin, \u03bckj , on each patience category k.\nParameters (\u03b2j , \u03b3j ) control the adaptivity of the protocol agent in how it adjusts the target\nprofit margin on an individual offer, with \u03b2j \u223c U (0.1, 0.2) defining the offer-level learning\nrate and \u03b3j \u223c U (0.2, 0.8) defining the offer-level damping factor. Parameter rj \u2208 [0, 1] is\nthe learning rate adopted for updating the profit margins.\nThe protocol agents are trained over 10 trials and their final performance is measured\nin the 11th trial. The learning rate decreases through the training session and depends on\nthe initial learning rate rj0 and the adjustment rate rj+ . In period t \u2208 {1, . . . , tkend } of trial\nk \u2208 {1, . . . , T + 1}, where T = 10 is the number of trials used for training and tkend is the\nnumber of periods in trial k, the learning rate is defined as:\nrj := 1 \u2212\n\nrj0\n\n+ (k \u2212\n\n1)rj+\n\n+\n\n\u0012\n\nt\ntkend\n\n\u00132\n\nrj+\n\n!\n\n(17)\n\nwhere rj+ = (1 \u2212 rj0 )/(T + 1). We define rj0 := 0.7. The effect of this adjustment rule is that\nrj is initially 0.3, decreases during training, and trends to 0.0 as t \u2192 tend in trial k = 11.\nWithin a given trial, upon assignment of a new offer i in patience category k, the protocol\nagent managing the offer initializes (\u03bci (t), \u03b4i (t)) := (\u03bckj , 0), where \u03bci (t) represents the target\nprofit margin for the offer and \u03b4i (t) represents a profit-margin correction term. The target\nprofit margin and the profit margin correction term are adjusted for offer i in subsequent\nperiods while the bid remains active.\nThe target profit margin is used to define a bid price for the offer in each period while\nit remains active:\n\u0175i (t) := wi (1 + \u03bci (t)).\n164\n\n(18)\n\n\fChain: An Online Double Auction\n\nAt the end of a period in which an offer matches or simply expires, the profit margin\n\u03bckj for its patience category is updated as:\n\u03bckj := (1 \u2212 rj )\u03bckj + rj \u03bci (t),\n\n(19)\n\nwhere the amount of adaptivity depends on the learning rate rj . Because the profit margin\non an offer decays over its lifetime, this update adjusts towards a small profit margin if\nthe offer expires or took many periods to trade, and a larger profit margin otherwise. The\nlong-term learning of a protocol agent occurs through the profit margin assigned to each\npatience category.\nAt the start of a period each protocol agent also computes target prices for bids and\nasks in each patience category. These are used to drive an adjustment in the target profit\nmargin for each active bid and ask. Target prices \u03c4bk (t) and \u03c4sk (t) are computed as:\n\uf8f1\n{\u0175i (t \u2212 1)} + \u03be , if 0 > max {\u0175i (t \u2212 1)} + max {\u0175i (t \u2212 1)}\n\uf8f2 (1 + \u03b7) max\ni\u2208S(t\u22121)\ni\u2208B k (t\u22121)\ni\u2208B k (t\u22121)\nk\n\u03c4b (t) :=\n\uf8f3 (1 \u2212 \u03b7) max {\u0175i (t \u2212 1)} \u2212 \u03be , otherwise\ni\u2208B k (t\u22121)\n\n(20)\n\nand,\n\u03c4sk (t)\n\n:=\n\n\uf8f1\n\uf8f2 (1 + \u03b7)\n\n\uf8f3 (1 \u2212 \u03b7)\n\nmax {\u0175i (t \u2212 1)} + \u03be , if 0 > max {\u0175i (t \u2212 1)} + max {\u0175i (t \u2212 1)}\ni\u2208B(t\u22121)\n\ni\u2208S k (t\u22121)\n\ni\u2208S k (t\u22121)\n\nmax {\u0175i (t \u2212 1)} \u2212 \u03be , otherwise\n\ni\u2208S k (t\u22121)\n\n(21)\n\nwhere \u03be, \u03b7 \u223c U (0, 0.05). Here, B(t \u2212 1) and S(t \u2212 1) denote the set of active bids and asks\nin the market in period t \u2212 1 (defined before market clearing), and B k (t \u2212 1) and S k (t \u2212 1)\ndenote the restrictions to patience category k. The target price on a bid in category k\nis set to something slightly greater than the most competitive bid in the previous round\nwhen that bid could not trade, and slightly less otherwise. Similarly for the target price on\nasks, where these prices are negative, so that increasing the target price makes an ask more\ncompetitive.\nTarget prices are used to adjust the target profit margin at the start of each period on\nall active offers that arrived in some earlier period, where the influence of target prices is\nthrough the profit-margin correction term:\n\u03bci (t) :=\n\n(\u0175i (t \u2212 1) + \u03b4i (t))\n\u2212 1,\nwi\n\n(22)\n\nand the profit-margin correction term, \u03b4i (t), is defined in terms of the target price \u03c4ik (t)\n(equal to \u03c4bk (t) if i is a bid and \u03c4sk (t) otherwise) as,\n\u03b4i (t) := \u03b3j \u03b4i (t \u2212 1) + (1 \u2212 \u03b3j )\u03b2j (\u03c4ik (t) \u2212 \u0175i (t \u2212 1)),\n\n(23)\n\nwhere \u03b3j and \u03b2j are the offer-level learning rates and damping factor. The value wi and the\n\"-1\" term in Eq. (22) provide normalization. Eq. (23) is the Widrow-Hoff (?) rule, designed\nto minimize the least mean square error in the profit margin and adopted here to mimic\nearlier ZIP designs.\n165\n\n\fBredin, Parkes and Duong\n\n6.7 Experimental Results\nOur experimental results show that market conditions drive DA choice. We compare allocative efficiency, revenue, and net efficiency. All results are averaged over 100 trials.\nIn experiments we found only minimal qualitative differences between the use of the two\npatience distributions. The uniform patience distribution provides a slight increase in efficiency over result using exponential patience, caused by a larger proportion of patient\nagents which relaxes somewhat the admission-price constraint in Eq. (3). For this reason\nwe choose to report only results for the uniform patience distribution.\nWhile the performance of all methods are summarized in Table 3, we omit the performance of some markets from the plots to keep the presentation of results as clear as possible.\nWe do not plot the price-based results for the median- or clearing-based prices because the\nperformance was typically around that of the performance of Chain instantiated on the\nhistory-EWMA price. We do not plot the windowed-McAfee results because of inconsistent performance, and in most cases, upon manual inspection, it was optimal to choose the\nsmallest possible window size, i.e. including only active bids and making it equivalent to\nactive-McAfee.\nOur plots also leave out the performance of the Blum et al. (?) worst-case optimal\nmatching scheme because it was dominated by the fixed-price Chain instantiation and in\nmany cases failed to yield any substantial surplus. We note here that the modeling assumption made by Blum et al. (?) is quite different than that in our work: they worry about\nperformance in an adversarial environment while we consider probabilistic environments.\nOur fixed-price Chain mechanism operates essentially identically to the surplus-maximizing\nscheme of Blum et al. (?), except that Chain can also use additional statistical information\nto set the ideal price, rather than drawing the price from a distribution that is used to\nguarantee worst-case performance against an adversary. We defer the results for the Blum\net al. (?) scheme to Table 3.\nFigures 5\u20138 plot results from two sets of experiments, one for high-patience/low-volatility\nand one for low-patience/high-volatility, as we vary the inter-arrival time (and thus the\narrival intensity), volatility and maximal patience. All plots are for allocative efficiency\nexcept Figure 6, where we consider net efficiency. Active-McAfee is included on Figure 5,\nbut not on any other plots because it did not improve upon the McAfee performance in\nthe other environments. To emphasize: the results for greedy provide an upper-bound on\nthe best possible performance because this is a non-truthful algorithm, simulated here with\ntruthful inputs.\nIn Figure 5 (left) we see that from within the truthful DAs, the McAfee-based DA has\nthe best efficiency for medium to low arrival intensities. There also is a general decrease\nin performance, relative to the optimal offline solution, as the arrival intensity falls. This\ntrend, also observed with the greedy (non-truthful) DA, occurs because the Chain scheme\nis myopic in that it matches as soon as the static DA building block finds a match, while\nit is better to be less myopic when arrival intensity is low. The McAfee-based DAs are less\nsensitive to this than other methods because they can aggressively update prices using the\nactive traders. The price-based DAs experience inefficiencies due to the lag in price updates\nbecause they use only expired, traded, and priced-out offers to calculate prices.\n166\n\n\fChain: An Online Double Auction\n\n(patience=6, volatility=0.01)\ngreedy\nzip\nmcafee\newma\nactive-mcafee\nfixed-price\n\n1.2\n1\n\ngreedy\nmcafee\nactive-mcafee\newma\nfixed-price\nzip\n\n1.4\nAllocative Efficiency\n\n1.4\nAllocative Efficiency\n\n(patience=2, volatility=0.08)\n\n0.8\n0.6\n0.4\n0.2\n\n1.2\n1\n0.8\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n0.8\n1\nInter-arrival Time\n\n1.2\n\n1.4\n\n0\n\n0.2\n\n0.4\n\n0.6\n0.8\n1\nInter-arrival Time\n\n1.2\n\n1.4\n\nFigure 5: Allocative efficiency vs. inter-arrival time (1 / intensity) for several DAs. The left\nplot shows high-patience, low-volatility simulations, whereas the right plots results from\nlow-patience, high-volatility runs. Both sets of experiments use uniform patience distributions.\n\n(patience=6, volatility=0.01)\ngreedy\nzip\nmcafee\newma\nactive-mcafee\nfixed-price\n\n1.2\n1\n\ngreedy\nmcafee\nactive-mcafee\newma\nfixed-price\nzip\n\n1.4\n1.2\nNet Efficiency\n\n1.4\n\nNet Efficiency\n\n(patience=2, volatility=0.08)\n\n0.8\n0.6\n\n1\n0.8\n0.6\n\n0.4\n\n0.4\n\n0.2\n\n0.2\n\n0\n\n0\n0\n\n0.2\n\n0.4\n\n0.6\n0.8\n1\nInter-arrival Time\n\n1.2\n\n1.4\n\n0\n\n0.2\n\n0.4\n\n0.6\n0.8\n1\nInter-arrival Time\n\n1.2\n\n1.4\n\nFigure 6: Net efficiency vs. inter-arrival time (1 / intensity) for several DAs. The left plot\nshows high-patience, low-volatility simulations, whereas the right plots results from lowpatience, high-volatility runs. Both sets of experiments use uniform patience distributions.\n\n167\n\n\fBredin, Parkes and Duong\n\nFor very high arrival intensity we see Active-McAfee dominates McAfee. Active-McAfee\nsmooths the price, which helps to mitigate the impact of fluctuations in cost on the admission\nprice via Eq. (3) in return for less responsiveness. This is helpful in \"well-behaved\" markets\nwith high arrival intensity and low volatility but was not helpful in most environments we\nstudied, where the additional responsiveness provided by the (vanilla) McAfee scheme paid\noff.\nThe ZIP market also has good performance in this high-patience/low-volatility environment. The reason is simple: this is an easy environment for simple learning agents, and the\nagents quickly learn to be truthful. We emphasize that these ZIP market results should be\ntreated with caution and are certainly optimistic. This is because the ZIP agents are not\nprogrammed to consider timing-based manipulations. The effect in this environment is that\nthe ZIP market tends to operate as if a truthful market, but without the cost of imposing\ntruthfulness explicitly via market-clearing rules. By comparison the Chain auctions are\nfully strategyproof, to both value and temporal manipulations.\nCompare now with Figure 5 (right), which is for low patience and high volatility. Now we\nsee that McAfee dominates across the range of arrival intensities. Moreover, the performance\nof ZIP is now quite poor because the agents do not have enough time to adjust their bids\n(patience is low) and high volatility makes this a more difficult environment. With volatile\nvaluations, the possibility of valuation swings leaves open the possibility of larger profits,\nluring agents to set wider profit margins, but only after the market changes. The ZIP agents\nalso have fewer concurrent competitive offers to use in setting useful price targets during\nlearning. As we might expect, high volatility also negatively impacts the efficiency of the\nfixed-price scheme.\nIn Figure 6 we see that the net efficiency trends are qualitatively similar except that the\ncompetition-based DAs such as McAfee fare less well in comparison with the price-based\nDAs. The auctioneer accrues more revenue for competition-based matching rules such as\nMcAfee because they often generate buy and sell prices with a spread. Together with\nthe competition-based schemes being intrinsically more dynamic, this drives an increased\nprice spread in Chain via the admission price constraints. In Figure 6 (left) we see that\nthe fixed-price scheme performs well for high arrival intensity while EWMA dominates for\nintermediate arrival intensities. The McAfee scheme is still dominant for lower patience and\nhigher volatility (Figure 6, right).\nTo reinforce these observations, in Table 3 we present the the net efficiency, allocative\nefficiency and (normalized) revenue across all arrival intensities (i.e. inter-arrival time from\n0.05 to 1.5) and for both low and high volatility trials. All five price-based methods, all\nthree competition-based methods, and all three comparison methods are included. We\nhighlight the best performing competition-based method, price-based method, as well as\nthe performance of the ZIP market (skipping over the non-truthful, greedy algorithm). We\nomit information about the mean standard error for each measurement because in no case\ndid this error exceed a tenth of a percent of the mean optimal surplus. From within the\ntruthful DAs, we see that the McAfee-based scheme dominates overall for both allocative\nand net efficiency and both low and high volatility, although EWMA competes with McAfee\nfor net efficiency in low volatility markets. Notice also the good performance of the ZIPbased market (with the aforementioned caveat about the restricted strategy space) at low\nvolatilities.\n168\n\n\fChain: An Online Double Auction\n\nscenario\nlow-volt/high-pat\nhigh-volt/low-pat\nnet\nalloc rev\nnet\nalloc rev\n0.33 0.47 0.14 0.40 0.45 0.05\n0.24 0.35 0.11 0.32 0.37 0.05\n0.24 0.26 0.02 0.21 0.23 0.03\n0.33 0.34 0.01 0.17 0.17 0.01\n0.33 0.35 0.03 0.19 0.22 0.03\n0.23 0.23 0.00 0.04 0.04 0.00\n0.33 0.34 0.01 0.15 0.16 0.01\n0.33 0.34 0.01 0.17 0.18 0.01\n0.10 0.10 0.00 0.02 0.02 0.00\n0.86 0.86 0.00 0.87 0.87 0.00\n0.82 0.82 0.00 0.23 0.23 0.00\n\nmcafee\nactive-mcafee\nwindowed-mcafee\nhistory-clearing\nhistory-ewma\nhistory-fixed\nhistory-mcafee\nhistory-median\nblum et al.\ngreedy\nzip\n\nTable 3: Net efficiency, allocative efficiency and auctioneer revenue (all normalized by the optimal\nvalue from trade), averaged across all arrival intensities (0.05\u20131.5) and for low and high\nvalue volatility. The best performing competition-based, price-based and 'other' (ignoring\ngreedy, which is not truthful) results are highlighted.\n\n(patience=6, inter-arrival=1.0)\n1.4\n\ngreedy\nzip\nmcafee\newma\nfixed-price\n\n1\n\ngreedy\nmcafee\newma\nzip\nfixed-price\n\n1.2\nAllocative Efficiency\n\n1.2\nAllocative Efficiency\n\n(patience=2, inter-arrival=1.0)\n1.4\n\n0.8\n0.6\n0.4\n0.2\n\n1\n0.8\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n0.02\n\n0.04\n\n0.06\n\n0.08\n\n0.1\n\n0.12\n\n0.14\n\n0\n\nVolatility\n\n0.02 0.04 0.06 0.08\n\n0.1\n\n0.12 0.14\n\nVolatility\n\nFigure 7: Allocative efficiency vs. volatility for several DAs for a fairly low arrival intensity. The\nleft plot is for large maximal patience and the right plot is for small maximal patience.\nBoth sets of experiments use uniform patience distributions.\n\nFigure 7 plots allocative efficiency versus volatility for high patience (left) and low\npatience (right) and for fairly low arrival intensity. Higher volatility hurts all methods \u2013\nespecially the ZIP agents, which struggle to learn appropriate profit and price targets,\nprobably due to few opportunities to update prices for every individual offer. The McAfee\nscheme fairs very well, showing good robustness for both large patience and small patience\nenvironments. The fixed-price scheme has the best performance when there is zero volatility\nbut its efficiency falls off extremely quickly as volatility increases.\n169\n\n\fBredin, Parkes and Duong\n\n(inter-arrival=1.0, volatility=0.01)\n1.4\n\ngreedy\nzip\nmcafee\newma\nfixed-price\n\n1\n\ngreedy\nzip\nmcafee\newma\nfixed-price\n\n1.2\nAllocative Efficiency\n\n1.2\nAllocative Efficiency\n\n(inter-arrival=1.0, volatility=0.08)\n1.4\n\n0.8\n0.6\n0.4\n0.2\n\n1\n0.8\n0.6\n0.4\n0.2\n\n0\n\n0\n0\n\n2\n\n4\n6\nMaximal Patience\n\n8\n\n10\n\n0\n\n2\n\n4\n6\nMaximal Patience\n\n8\n\n10\n\nFigure 8: Allocative efficiency vs. maximal patience for several DAs and fairly low arrival intensity.\nThe left plot is for low volatility and the right plot is for high volatility. Both sets of\nexperiments use uniform patience distributions.\n\nWe also consider the effect of varying maximal patience. This is shown in Figure 8,\nwith low volatility (left) and high volatility (right). Again, the McAfee scheme is the best\nof the truthful DAs based on Chain. We also see that the performance of ZIP improves\nas patience increases due to more opportunities for learning. Perversely, a larger patience\ncan negatively affect the truthful DAs. In part this is simply because the performance of\ngreedy online schemes, relative to the offline optimal, decreases as patience increases and\nthe offline optimal matching is able to draw more benefit from its lack of myopia.\nWe also suspected another culprit, however. The possibility of the presence of patient\nagents requires the truthful DAs to include additional terms in the max operator in Eq. (3)\nto prevent manipulations, leading to higher admission prices and less admitted offers. To\nbetter understand this effect we experimented with delayed market clearing in the McAfee\nscheme, where the market matches agents only every \u03c4 -th period (the \"clearing duration\").\nThe idea is to make a tradeoff between using fewer admission prices and the possibility that\nwe will miss the opportunity to match some impatient offers.\nFigure 9 shows allocative efficiency when the matching mechanism clears less frequently\nand for different maximal patience, K. Figure 9 (left) is for low volatility. There we\nsee that the best clearing duration is roughly 1, 2, 3 and 4 for maximal patience of K \u2208\n{4, 6, 8, 10} and that by optimizing the clearing duration the performance of McAfee remains\napproximately constant as maximal patience increases. In Figure 9 (right) we consider the\neffect in a high volatility environment, with these results averaged over 500 trials because the\nperformance of the DA has higher variance. We see a qualitatively similar trend, although\nhigher maximal patience now hurts overall and cannot be fully compensated for by tuning\nthe clearing duration.\n\n7. Related Work\nStatic two-sided market problems have been widely studied (?, ?, ?, ?, ?). In a classic result,\nMyerson and Satterthwaite proved that it is impossible to achieve efficiency with voluntary\n170\n\n\fChain: An Online Double Auction\n\n(inter-arrival=1.0 patience=K, volatility=0.01)\n\n(inter-arrival=1.0 patience=K, volatility=0.08)\n\n0.55\n\n0.45\n0.4\nAllocative Efficiency\n\nAllocative Efficiency\n\n0.5\n0.45\n0.4\n0.35\n0.3\nK=4\nK=6\nK=8\nK=10\n\n0.25\n0.2\n0.15\n0\n\n0.35\n0.3\n0.25\nK=4\nK=6\nK=8\nK=10\n\n0.2\n0.15\n2\n\n4\n6\nClearing Duration\n\n8\n\n10\n\n0\n\n2\n\n4\n6\nClearing Duration\n\n8\n\n10\n\nFigure 9: Allocative efficiency vs. clearing duration in the McAfee-based Chain auction for fairly\nlow arrival intensity and as maximal patience is varied from 4 to 10. The left plot is\nfor low volatility and the right plot is for high volatility. Both sets of experiments use\nuniform patience distributions.\n\nparticipation and without running a deficit, even relaxing dominant-strategy equilibrium to\na Bayesian-Nash equilibrium. Some truthful DAs are known for static problems (?, ?, ?, ?).\nFor instance, McAfee introduced a DA that sometimes forfeits trade in return for achieving\ntruthfulness. McAfee's auction achieves asymptotic efficiency as the number of buyers and\nsellers increases. Huang et al. extend McAfee's mechanism to handle agents exchanging\nmultiple units of a single commodity. Babaioff and colleagues have considered extensions\nof this work to supply-chain and spatially distributed markets.\nOur problem is also similar to a traditional continuous double auction (CDA), where\nbuyers and sellers may at any time submit offers to a market that pairs an offer as soon\nas a matching offer is submitted. Early work considered market efficiency of CDAs with\nhuman experiments in labs (?), while recent work investigates the use of software agents\nto execute trades (?, ?, ?, ?). While these markets have no dominant strategy equilibria,\npopulations of software trading agents can learn to extract virtually all available surplus,\nand even simple automated trading strategies outperform human traders (?). However,\nthese studies of CDAs assume that all traders share a known deadline by which trades must\nbe executed. This is quite different from our setting, in which we have dynamic arrival and\ndeparture.\nTruthful one-sided online auctions, in which agents arrive and depart across time, have\nreceived some recent attention (?, ?, ?, ?, ?). We adopt and extend the monotonicity-based\ntruthful characterization in the work of Hajiaghayi et al. (?) in developing our framework\nfor truthful DAs. Our model of DAs must also address some of the same constraints on\ntiming that occur in Porter, Hajiaghayi, and Lavi and Nisan's work. In these previous\nworks, the items were reusable or expiring and could only be allocated in particular periods.\nIn our work we provide limited allowance to the match-maker, allowing it to hold onto a\nseller's item until a matched buyer is ready to depart (perhaps after the seller has departed).\n171\n\n\fBredin, Parkes and Duong\n\nThe closest work in the literature is due to Blum et al. (?), who present online matching\nalgorithms for the same dynamic DA model. The main focus in their paper is on the\ndesign of matching algorithms with good worst-case performance in an adversarial setting,\ni.e. within the framework of competitive analysis. Issues related to incentive compatibility\nreceive less attention. One way in which their work is more general is that they also study\ngoals of profit and maximizing the number of trades, in addition to the goal of maximizing\nsocial welfare that we consider in our work. However, the only algorithmic result that they\npresent that is truthful in our model (where agents can misreport arrival and departure) is\nfor the goal of social welfare. The DA that they describe is an instance of Chain in which\na fixed price is drawn from a distribution at the start of time, and used as the matching\nprice in every period. Perhaps unsurprisingly, given their worst-case approach, we observe\nthat their auction performs significantly worse than Chain defined for a fixed price that is\npicked to optimize welfare given distributional information about the domain.\n\n8. Conclusions\nWe presented a general framework to construct algorithms to match buyers with sellers in\nonline markets where both valuation and activity-period information are private to agents.\nThese algorithms guarantee truthful dominant strategies by first imposing a minimum admission price for each offer and then pricing and pairing the offer at the first opportunity.\nAt the heart of the Chain framework lies a pricing algorithm that must for each offer either\ndetermine a price independent of any information describing the offer or choose to discard\nthe offer. The pricing algorithm should be chosen to match market conditions. We present\nseveral examples of suitable pricing schemes, including fixed-price, moving-average, and\nMcAfee-based schemes.\nMore often than not, we find that the competition-based scheme that employs a McAfeebased rule to truthfully price the market delivers the best allocative efficiency. For exceptionally low volatility and high arrival intensity, we find that adaptive price-based schemes\nsuch as an exponentially-weighted moving average (EWMA) and even fixed price schemes\nperform well. We see qualitatively similar results for net efficiency, where the revenue that\naccrues to the auctioneer is discounted, albeit that the price-based rules such as EWMA\nhave improved performance because they have no price spread. The observations are rooted\nin simulations comparing the market efficiency under each mechanism with the optimal offline solution.\nAdditionally, we compare the efficiency of our truthful markets with a fixed-price worstcase optimal scheme presented by Blum et al. (?), a market of strategic agents using a variant\non the ZIP price update algorithm developed by Cliff and Bruten (?) for continuous double\nauctions, and a non-truthful, greedy matching algorithm to provide an upper-bound on\nperformance. The best of our schemes yield around 33% net efficiency in low volatility, high\npatience environments and 40% net efficiency in high volatility, low patience environments,\nwhile the greedy bound suggests that as much as 86% efficiency is possible with non-strategic\nagents. We note that the Blum et al.scheme, designed for adversarial settings, fairs poorly\nin our simulations (< 10%).\nOne can argue, we think convincingly, that truthfulness brings benefits in itself in that\nit avoids the waste of costly counterspeculation and promotes fairness in markets (?, ?).\nOn the other hand, it is certainly of interest that the gap between the efficiency of greedy\n172\n\n\fChain: An Online Double Auction\n\nmatching with non-truthful matching and that of our truthful auctions is so large. Here, we\nobserve that the ZIP-populated (non-truthful) markets achieve around 82% efficiency in low\nvolatility environments but collapse to around 23% efficiency in high volatility environments.\nBased on this, one might conjecture that designing for truthfulness is especially important\nin badly behaved, highly volatile (\"thin\") environments but less important in well behaved,\nless volatile (\"thick\") environments.\nFormalizing this tradeoff between providing absolute truthfulness and approximate\ntruthfulness, and while considering the nature of the environment, is an interesting direction for future work (see paper by ?). Given that reporting of market statistics can be\nincorporated within our framework (see Section 5.1), and given that markets also play a\nrole in information aggregation and value discovery, future research should also consider\nthis additional aspect of market design. Perhaps there is an interesting tradeoff between\nefficiency, truthful value revelation, and the process of information aggregation.\nWhile the general Chain framework achieves good efficiency, further tuning seems possible. One direction is to adopt a meta-pricing scheme that chooses, or blends, prices from\ncompeting algorithms. Another direction is to consider richer temporal models; e.g., the\nvalue of goods to agents might decay or grow over time to better account for the time\nvalue of assets. A richer temporal model might also consider the possibility of agents or the\nmatch-maker taking short positions (including short-term cash deficits) to increase trade.\nIt is also interesting to extend our work to markets with non-identical goods and more complex valuation models such as bundle trades (?, ?, ?), and to dynamic matching problems\nwithout prices, such as an online variation of the classic \"marriage\" problem (?).\n\nAcknowledgments\nAn earlier version of this paper appeared in the Proceedings of the 21st Conference on Uncertainty in Artificial Intelligence, 2005. This paper further characterizes necessary conditions\nfor truthful online trade; truthfully matches offers using a generalized framework based\nupon an arbitrary truthful static pricing rule; and compares the efficiency of our truthful\nframework to that achieved in non-truthful markets populated with strategic trading agents\nand with that of worst-case optimal double auctions.\nParkes is supported in part by NSF grant IIS-0238147 and an Alfred P. Sloan Fellowship\nand Bredin would like to thank the Harvard School of Engineering and Applied Sciences\nfor hosting his sabbatical during which much this work was completed. Thanks also to\nthe three anonymous reviewers, who provided excellent suggestions in improving an earlier\ndraft of this paper.\n\nAppendix: Proofs\nLemma 1 Procedure Match defines a valid strong no-trade construction.\nProof: In all cases, SNTt \u2286 NTt . The set NTt is correctly constructed: equal to all\nremaining bids bt when (j = 0) in Case I, all remaining bids st when (i = 0) in Case II,\nand all remaining bids and asks otherwise. In each case, no bid (or ask) in NTt could have\ntraded at any price because there was no available bid or ask on the opposite of the market\ngiven its order.\n173\n\n\fBredin, Parkes and Duong\n\nIn verifying strong no-trade (SNT) conditions (a) and (b), we proceed by case analysis.\nCase I. (i 6= 0) and (j = 0). NTt := bt .\n(I-1) \u2200k \u2208 st * (d\u02c6k = t) and SNTt := bt . For SNT-a, consider l \u2208 NTt with d\u02c6l > t. If\nl deviates and i changes but we remain in Case I then NTt is unchanged and still\ncontains l. If l deviates and i \u2192 0 then, we go to Case III and SNTt := bt \u222a st and still\ncontains l. For SNT-b, consider l \u2208 SNTt that deviates with d\u02c6l > t. Again, either we\nremain in this case and SNTt is unchanged or i \u2192 0 and we go to Case III. But now\nSNTt still contains all bt and is therefore unchanged for all agents with d\u02c6k > t.\n(I-2) Buyer k \u2208 bt with d\u02c6k = t and bk \u2265 pt and SNTt := bt . For SNT-a, consider l \u2208 NTt\nwith d\u02c6l > t. We remain in this case for any deviation by buyer l because buyer k\nwill ensure i 6= 0, and so SNTt remains unchanged and still contains l. For SNT-b, if\nl \u2208 SNTt with d\u02c6l > t deviates we again remain in this case and SNTt is unchanged.\n(I-3) Some seller with d\u02c6k > t and no buyer with d\u02c6k\u2032 = t willing to accept the price.\nSNTt := bt \\ checkedB . For SNT-a, consider l \u2208 NTt with d\u02c6l > t. First, suppose\nl \u2208 checkedB and i 6= l. If l deviates but still has d\u02c6l > t, then even if i := l then we\nremain in this case and l does not enter SNTt . Second, suppose l \u2208 checkedB and\n(i = l). If l deviates but still has d\u02c6l > t, then even if (i = 0) and (j = 0), we go\nto Case III and SNTt = \u2205 and l does not enter SNTt . Third, suppose l \u2208\n/ checkedB\n\u02c6\n\u02c6\nand dl > t. Deviating while dl > t has no effect and we remain in this case and l\nremains in SNTt . For SNT-b, consider l \u2208 SNTt with d\u02c6l > t, i.e. with l \u2208\n/ checkedB .\n\u02c6\nIf l deviates but dl > t, then this has no effect and we remain in this case and SNTt\nremains unchanged.\nCase II. (j 6= 0) and (i = 0). NTt := st . Symmetric with Case I.\nCase III. (i = 0) and (j = 0). NTt := bt \u222a st .\n(III-1) \u2200k \u2208 bt * (d\u02c6k = t) but \u2203k\u2032 \u2208 st * (d\u02c6k\u2032 > t) and SNTt := bt \u222a st . For SNT-a, consider\nl \u2208 NTt with d\u02c6l > t. This must be an ask. If l deviates but we remain in this case,\nthen l remains in SNTt . If j := l, then we go to Case II and SNTt := st and l remains\nin SNTt . For SNT-b, consider l \u2208 SNTt with d\u02c6l > t, which must be an ask. If l\ndeviates but we remain in this case, SNTt is unchanged. If l deviates and j := l, then\nwe go to Case II, SNTt := st , and buyers bt are removed from SNTt . But this is OK\nbecause all buyers depart in period t anyway.\n(III-2) \u2200k \u2208 st cdot(d\u02c6k = t) but \u2203k\u2032 \u2208 bt * (d\u02c6k\u2032 > t) and SNTt := bt \u222a st . Symmetric to Case\nIII-1.\n(III-3) \u2200k \u2208 bt * (d\u02c6k = t) and \u2200k \u2208 st cdot(d\u02c6k = t). SNTt := bt \u222a st . SNT-a and SNT-b are\ntrivially met because no bids or asks have departure past the current period.\n(III-4) \u2203k \u2208 bt * (d\u02c6k > t) and \u2203k\u2032 \u2208 st * (d\u02c6k\u2032 > t) and SNTt := \u2205. For SNT-a, consider l \u2208 NTt\nwith d\u02c6l > t. Assume that l is a bid. If l deviates and d\u02c6l > t and i = 0 then we remain\nin this case and l is not in SNTt . If l deviates and d\u02c6l > t but i := l, then we go to\nCase I and we are necessarily in Sub-case (I-a) because d\u02c6l > t and there can be no\nother bid willing to accept the price (else i 6= 0 in the first place). Thus, we would\n174\n\n\fChain: An Online Double Auction\n\nhave SNTt := bt \\ checkedB and l would not be in SNTt . For SNT-b, this is trivially\nsatisfied because there are no agents l \u2208 SNTt .\n\u0003\nLemma 5 The set of active agents (other than i) in period t in Chain is independent of\ni's report while agent i remains active, and would be unchanged if i's arrival is later than\nperiod t.\nProof: Fix some arrival period \u00e2i . Show for any \u00e2i \u2265 ai , the set of active agents in period\nt \u2265 \u00e2i while i is active is the same as At without agent i's arrival until some a\u2032i > t. Proceed\nby induction on the number of periods that t is after \u00e2i . For period t = \u00e2i this is trivial.\nNow consider some period \u00e2i + r, for some r \u2265 1 and assume the inductive hypothesis for\n\u2032\n\u00e2i + r \u2212 1. Since i is still active then, i \u2208 SNTt for t\u2032 = \u00e2i + r \u2212 1, and therefore the other\n\u2032\nagents in SNTt that survive into this period are independent of agent i's report by strong\nno-trade condition (b). This completes the proof.\n\u0003\nLemma 6 The price constructed from admission price q\u030c and post-arrival price p\u030c is valueindependent and monotonic-increasing when the matching rule in Chain is well-defined,\nthe strong no-trade construction is valid, and agent patience is bounded by K.\nProof: First fix \u00e2i , d\u02c6i and \u03b8\u2212i . To show value-independence (B1), first note that q\u030c is\nvalue-independent, since whether or not i \u2208 SNTt in some pre-arrival period t is valueindependent by strong no-trade condition (a) and price zi (H t , At \\ i, \u03c9) in such a period\nis agent-independent by definition. Term p\u030c is also value-independent: the decision period\nt\u2217 to agent i, if any, is independent of \u0175i since the other agents that remain active are\nindependent of agent i while it is active by Lemma 5, and whether or not i \u2208 SNTt is\nvalue-independent by strong no-trade (a); and the price in t\u2217 is value-independent when\nthe set of other active agents are value-independent.\nNow fix \u03b8\u2212i and show the price is monotonically-increasing in a tighter arrival-departure\ninterval (B2). First note that q\u030c is monotonic-increasing in [\u00e2i , d\u02c6i ] \u2282 [ai , di ] because an earlier\nd\u02c6i and later \u00e2i increases the domain t \u2208 [d\u02c6i \u2212 K, \u00e2i \u2212 1] on which q\u030c is defined. Fix some\n\u00e2i \u2265 ai . Argue the price increases with earlier d\u2032i \u2264 d\u02c6i , for any d\u02c6i > \u00e2i . To see this, note that\neither d\u02c6i < t\u2217 and so pi (\u00e2i , d\u2032i , \u03b8\u2212i , \u03c9) = \u221e for all d\u2032i \u2264 d\u02c6i , or d\u02c6i \u2265 t\u2217 and the price is constant\nuntil d\u02c6i < t\u2217 at which point it becomes \u221e. Fix some d\u02c6i \u2265 ai . Argue the price increases with\nlater a\u2032i \u2265 \u00e2i , where \u00e2i \u2265 d\u02c6i \u2212 K. First, while a\u2032i \u2264 t\u2217, then p\u030c is unchanged by Lemma 5.\nThe interesting case is when a\u2032i > t\u2217, especially when q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < p\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9).\nBy reporting a later arrival, the agent can delay its decision period and perhaps hope to\nachieve a lower price. But, note that in this case t\u2217 \u2208 [d\u02c6i \u2212 K, a\u2032i \u2212 1] since d\u02c6i \u2212 K \u2264 \u00e2i and\nt\u2217 \u2208 [\u00e2i , a\u2032i \u2212 1] and so q\u030c(a\u2032i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 p\u030c(H t\u2217 , At\u2217 \\ i, \u03c9) because q\u030c now includes the price\nin period t\u2217 since i \u2208\n/ SNTt\u2217 in that pre-arrival period by Lemma 5. Overall, we see that\nalthough p\u030c may decrease, max(q\u030c, p\u030c) cannot decrease.\n\u0003\nLemma 7 A strongly truthful, canonical dynamic DA must define price pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265\n\nzi (H t\u2217 , At\u2217 \\ i, \u03c9) where t\u2217 is the decision period for bid i (if it exists). Moreover, the bid\nmust be priced-out in period t\u2217 if it is not matched.\nProof: (a) First, suppose zi (H t\u2217 , At\u2217 \\ i, \u03c9) > \u0175i but bid i is not priced-out and instead\nsurvives as an active bid into the next period. But with i \u2208\n/ SNTt\u2217 , the set of active bids in\n175\n\n\fBredin, Parkes and Duong\n\nperiod t \u2217 +1 need not be independent of agent i's bid and the price zi (H t\u2217+1 , At\u2217+1 \\ i, \u03c9)\nneed not be agent-independent. Yet, canonical rule (iii) requires that this price be used\nto determine whether or not the agent matches, and so the dynamic DA need not be\ntruthful. (b) Now assume for contradiction that pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < zi (H t\u2217 , At\u2217 \\ i, \u03c9). First,\nif zi (H t\u2217 , At\u2217 \\ i, \u03c9) < \u221e, then an agent with value pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < wi < zi (H t\u2217 , At\u2217 \\ i, \u03c9)\nwill report \u0175i = zi (H t\u2217 , At\u2217 \\ i, \u03c9) + \u01eb and trade now for a final payment less than its true\nvalue (whereas it would be priced-out if it reported its true value). If zi (H t\u2217 , At\u2217 \\i, \u03c9) = \u221e,\nthen pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) < zi (H t\u2217 , At\u2217 \\i, \u03c9) implies that some bids will survive this period even\nthough they are priced-out by the matching rule and not in the strong no-trade set. This\ncompromises the truthfulness of the dynamic DA, as discussed in part (a).\n\u0003\nLemma 8 A strongly truthful, canonical and individual-rational dynamic DA must define\nprice pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), and a bid with \u0175i < q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) must be pricedout upon admission.\nProof: Suppose d\u02c6i < \u00e2i + K so that [d\u02c6i \u2212 K, \u00e2i \u2212 1] is non-empty. For d\u02c6i = \u00e2i + K \u2212 1,\nwhen t = d\u02c6i \u2212 K is a decision period (and i \u2208\n/ SNTt ), we have\npi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 pi (d\u02c6i \u2212 K, d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 zi (H t , At \\ i, \u03c9),\n\n(24)\n\nwhere the first inequality is by monotonicity (B2) and the second follows from Lemma 7\nsince d\u02c6i \u2212 K is a decision period, and would remain one with report \u03b8i\u2032 = (d\u02c6i \u2212 K, d\u02c6i , wi\u2032 )\nby Lemma 5. This establishes pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) for d\u02c6i = \u00e2i + K \u2212 1. When\nd\u02c6i = \u00e2i + K \u2212 2, then we need Eq. (24), and also when t = d\u02c6i \u2212 K + 1 is a decision period\n(and i \u2208\n/ SNTt ) we have,\npi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 pi (d\u02c6i \u2212 K + 1, d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 zi (H t , At \\ i, \u03c9),\n\n(25)\n\nby the same reasoning as above. This generalizes to di = ai + K \u2212 r for r \u2208 {2, . . . , K}\nto establish pi (\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) \u2265 q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9) for the general case. To see the bid must be\npriced-out when \u0175i < q\u030c(\u00e2i , d\u02c6i , \u03b8\u2212i , \u03c9), note that if it were to remain active it could match in\nthe matching rule and by canonical (iii) need to trade, and thus fail individual-rationality\nsince the payment collected would be more than the value.\n\u0003\n\n176\n\n\f"}