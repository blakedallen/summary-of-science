{"id": "http://arxiv.org/abs/0711.1227v1", "guidislink": true, "updated": "2007-11-08T09:33:19Z", "updated_parsed": [2007, 11, 8, 9, 33, 19, 3, 312, 0], "published": "2007-11-08T09:33:19Z", "published_parsed": [2007, 11, 8, 9, 33, 19, 3, 312, 0], "title": "Designing as Construction of Representations: A Dynamic Viewpoint in\n  Cognitive Design Research", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0711.2191%2C0711.2030%2C0711.1723%2C0711.4234%2C0711.0766%2C0711.4580%2C0711.2996%2C0711.4519%2C0711.4361%2C0711.1879%2C0711.0431%2C0711.2690%2C0711.4965%2C0711.0252%2C0711.3028%2C0711.1398%2C0711.4317%2C0711.4486%2C0711.1665%2C0711.3612%2C0711.1713%2C0711.2467%2C0711.4916%2C0711.2606%2C0711.3811%2C0711.3704%2C0711.1022%2C0711.4573%2C0711.3819%2C0711.1684%2C0711.2972%2C0711.4212%2C0711.0448%2C0711.0970%2C0711.4249%2C0711.0811%2C0711.1796%2C0711.4658%2C0711.2899%2C0711.4678%2C0711.0630%2C0711.0014%2C0711.0827%2C0711.0889%2C0711.0103%2C0711.0547%2C0711.0688%2C0711.3345%2C0711.4397%2C0711.0214%2C0711.0605%2C0711.0137%2C0711.1945%2C0711.4441%2C0711.3876%2C0711.2199%2C0711.3744%2C0711.3053%2C0711.1543%2C0711.0086%2C0711.1227%2C0711.3048%2C0711.4298%2C0711.1909%2C0711.4329%2C0711.1809%2C0711.1680%2C0711.2735%2C0711.4835%2C0711.2363%2C0711.4348%2C0711.0968%2C0711.1555%2C0711.3875%2C0711.1124%2C0711.2186%2C0711.3622%2C0711.2648%2C0711.1066%2C0711.3466%2C0711.0695%2C0711.4499%2C0711.4240%2C0711.4393%2C0711.0094%2C0711.4644%2C0711.1623%2C0711.0988%2C0711.2281%2C0711.0830%2C0711.1369%2C0711.4772%2C0711.4325%2C0711.3492%2C0711.0072%2C0711.4437%2C0711.2410%2C0711.2907%2C0711.0679%2C0711.3103%2C0711.3971&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Designing as Construction of Representations: A Dynamic Viewpoint in\n  Cognitive Design Research"}, "summary": "This article presents a cognitively oriented viewpoint on design. It focuses\non cognitive, dynamic aspects of real design, i.e., the actual cognitive\nactivity implemented by designers during their work on professional design\nprojects. Rather than conceiving de-signing as problem solving - Simon's\nsymbolic information processing (SIP) approach - or as a reflective practice or\nsome other form of situated activity - the situativity (SIT) approach - we\nconsider that, from a cognitive viewpoint, designing is most appropriately\ncharacterised as a construction of representations. After a critical discussion\nof the SIP and SIT approaches to design, we present our view-point. This\npresentation concerns the evolving nature of representations regarding levels\nof abstraction and degrees of precision, the function of external\nrepresentations, and specific qualities of representation in collective design.\nDesigning is described at three levels: the organisation of the activity, its\nstrategies, and its design-representation construction activities (different\nways to generate, trans-form, and evaluate representations). Even if we adopt a\n\"generic design\" stance, we claim that design can take different forms\ndepending on the nature of the artefact, and we propose some candidates for\ndimensions that allow a distinction to be made between these forms of design.\nWe discuss the potential specificity of HCI design, and the lack of cognitive\ndesign research occupied with the quality of design. We close our discussion of\nrepresentational structures and activities by an outline of some directions\nregarding their functional linkages.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0711.2191%2C0711.2030%2C0711.1723%2C0711.4234%2C0711.0766%2C0711.4580%2C0711.2996%2C0711.4519%2C0711.4361%2C0711.1879%2C0711.0431%2C0711.2690%2C0711.4965%2C0711.0252%2C0711.3028%2C0711.1398%2C0711.4317%2C0711.4486%2C0711.1665%2C0711.3612%2C0711.1713%2C0711.2467%2C0711.4916%2C0711.2606%2C0711.3811%2C0711.3704%2C0711.1022%2C0711.4573%2C0711.3819%2C0711.1684%2C0711.2972%2C0711.4212%2C0711.0448%2C0711.0970%2C0711.4249%2C0711.0811%2C0711.1796%2C0711.4658%2C0711.2899%2C0711.4678%2C0711.0630%2C0711.0014%2C0711.0827%2C0711.0889%2C0711.0103%2C0711.0547%2C0711.0688%2C0711.3345%2C0711.4397%2C0711.0214%2C0711.0605%2C0711.0137%2C0711.1945%2C0711.4441%2C0711.3876%2C0711.2199%2C0711.3744%2C0711.3053%2C0711.1543%2C0711.0086%2C0711.1227%2C0711.3048%2C0711.4298%2C0711.1909%2C0711.4329%2C0711.1809%2C0711.1680%2C0711.2735%2C0711.4835%2C0711.2363%2C0711.4348%2C0711.0968%2C0711.1555%2C0711.3875%2C0711.1124%2C0711.2186%2C0711.3622%2C0711.2648%2C0711.1066%2C0711.3466%2C0711.0695%2C0711.4499%2C0711.4240%2C0711.4393%2C0711.0094%2C0711.4644%2C0711.1623%2C0711.0988%2C0711.2281%2C0711.0830%2C0711.1369%2C0711.4772%2C0711.4325%2C0711.3492%2C0711.0072%2C0711.4437%2C0711.2410%2C0711.2907%2C0711.0679%2C0711.3103%2C0711.3971&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "This article presents a cognitively oriented viewpoint on design. It focuses\non cognitive, dynamic aspects of real design, i.e., the actual cognitive\nactivity implemented by designers during their work on professional design\nprojects. Rather than conceiving de-signing as problem solving - Simon's\nsymbolic information processing (SIP) approach - or as a reflective practice or\nsome other form of situated activity - the situativity (SIT) approach - we\nconsider that, from a cognitive viewpoint, designing is most appropriately\ncharacterised as a construction of representations. After a critical discussion\nof the SIP and SIT approaches to design, we present our view-point. This\npresentation concerns the evolving nature of representations regarding levels\nof abstraction and degrees of precision, the function of external\nrepresentations, and specific qualities of representation in collective design.\nDesigning is described at three levels: the organisation of the activity, its\nstrategies, and its design-representation construction activities (different\nways to generate, trans-form, and evaluate representations). Even if we adopt a\n\"generic design\" stance, we claim that design can take different forms\ndepending on the nature of the artefact, and we propose some candidates for\ndimensions that allow a distinction to be made between these forms of design.\nWe discuss the potential specificity of HCI design, and the lack of cognitive\ndesign research occupied with the quality of design. We close our discussion of\nrepresentational structures and activities by an outline of some directions\nregarding their functional linkages."}, "authors": ["Willemien Visser"], "author_detail": {"name": "Willemien Visser"}, "author": "Willemien Visser", "links": [{"href": "http://arxiv.org/abs/0711.1227v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0711.1227v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.HC", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.HC", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0711.1227v1", "affiliation": "INRIA Rocquencourt", "arxiv_url": "http://arxiv.org/abs/0711.1227v1", "arxiv_comment": null, "journal_reference": "Human-Computer Interaction 21, 1 (2006) 103-152", "doi": null, "fulltext": "This text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nDesigning as Construction of Representations:\nA Dynamic Viewpoint in Cognitive Design Research\nWillemien Visser1\n\nINRIA - National Institute for Research in Computer Science and Control\n\nABSTRACT\nThis article presents a cognitively oriented viewpoint on design. It focuses on cognitive, dynamic\naspects of real design, i.e., the actual cognitive activity implemented by designers during their work on\nprofessional design projects. Rather than conceiving designing as problem solving-Simon's symbolic\ninformation processing (SIP) ap-proach-or as a reflective practice or some other form of situated\nactivity-the situativity (SIT) approach-we consider that, from a cognitive viewpoint, designing is\nmost appropriately characterised as a construction of representations. After a critical discussion of the\nSIP and SIT approaches to design, we present our viewpoint. This presentation concerns the evolving\nnature of representations regarding levels of abstraction and degrees of precision, the function of\nexternal representations, and specific qualities of representation in collective design. Designing is\ndescribed at three levels: the organisation of the activity, its strategies, and its design-representation\nconstruction activities (different ways to generate, transform, and evaluate representations). Even if we\nadopt a \"generic design\" stance, we claim that design can take different forms depending on the\nnature of the artefact, and we propose some candidates for dimensions that allow a distinction to be\nmade between these forms of design. We discuss the potential specificity of HCI design, and the lack\nof cognitive design research occupied with the quality of design. We close our discussion of\nrepresentational structures and activities by an outline of some directions regarding their functional\nlinkages.\n\nWillemien Visser is a cognitive psychologist with an interest in cognitive design research. She is a senior researcher\nin the \"EIFFEL-Cognition & Cooperation in Design\" team of INRIA, the French National Institute for Research\nin Computer Science and Control.\n1\n\n1\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nCONTENTS\n1. INTRODUCTION\n1.1. Overview of the Article\n1.2. Some Preliminary Terminological Points\nDesign and Problem Solving\nProblem\nProblem Solving\n2. TWO ALTERNATIVE APPROACHES TO DESIGN\n2.1 The Classical View of Design: The SIP Approach\nSimon's Framework for Design: The Sciences of the Artificial\nDiscussion of the SIP Approach\n2.2. Modern Views on Design: The SIT Approach\nEarly SIT-Inspired Research\nCurrent SIT-Inspired Research\nDiscussion of the SIT Approach\n2.3. Confronting SIP and SIT Approaches to Design\n3. DESIGNING AS CONSTRUCTION OF REPRESENTATIONS\n3.1.Designs as Representations\nThe Evolving Nature of Representations: Levels of Abstraction\nThe Evolving Nature of Representations: Degrees of Precision\nExternal Representations\nInterdesigner Compatible Representations in Collective Design (\"Shared\" Representations)\nRepresentations at the Source of a Design Project: \"Design Problems\"\nUsing Knowledge in Design\n3.2. Designing as an Activity: Construction of Representations\nThe Intermingled Character of Design and Its Surrounding Activities\nOrganising One's Design\nDesign Strategies\nDesign-Representation Construction Activities\n3.3. Discussion\nThe Potential Specificity of HCI Design\nDesign Quality\nDifferent Forms of Design\nLinking Representational Structures and Activities\n4. CONCLUSION\n4.1. SIP and SIT, Individual and Collective Design\n4.2. Design Is Not Problem Solving: Design Involves Problem Solving\n\n2\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\n4.3. Design as Construction of Representations\n\n1. INTRODUCTION\nDesign is an important, all-pervading domain of human activity, and the object of design is not\nlimited to new sport cars but also covers artefacts as diverse as meals (Byrne, 1977), traffic signals\n(Bisseret, Figeac-Letang, & Falzon, 1988), route plans (Chalm\u00e9, Visser, & Denis, 2004; HayesRoth & Hayes-Roth, 1979), and, of course, software (D\u00e9tienne, 2002).12 This article compares the\ntwo main paradigms that govern today's cognitively oriented studies of design-abbreviated into\n\"cognitive design studies\"-and then presents our view on design, which considers that design is\nmost appropriately characterised as a construction of representations.\n\n1.1. Overview of the Article\nThe article is organised as follows. Through some preliminary terminological points, Section 1\npresents the aspects of design on which we focus. Section 2 describes the two main paradigms in\ncurrent cognitive design research (i.e., the symbolic information processing [SIP] and situativity\n[SIT] perspectives). Section 3, which comprises the main body of this article, describes the\napproach to design that we have been developing for some 20 years. Much of the data comes\nfrom our own work, which has largely consisted of empirical observational field studies conducted\non professional designers in various task domains (software, mechanical, and industrial design). In\nthe Conclusion, we review the central themes of this article and discuss some issues to be\nexamined in further research.\n\n1.2. Some Preliminary Terminological Points\nThis article focuses on cognitive, dynamic aspects of real design (i.e., the actual cognitive\nactivity implemented by designers during their work on professional design projects). It is hoped\nthat the elements presented will be used to build a descriptive process model.\nThis section makes explicit some presuppositions underlying these qualifications that are\nfamiliar to researchers from cognitive psychology and ergonomics, but which may be informative\nfor readers from other disciplines.\n\"Cognitive aspects\" refer to designers' cognitive processes, knowledge, and representations as\ndistinguished from sociocultural and emotional aspects of design.\n\"Dynamic\" refers to the use of knowledge and representations, in contrast to their content.\n\"Cognitive activity\" refers to the way in which people realise their task at a cognitive level.\n\"Task\" refers to, either what people are supposed to do (prescribed task), or the task that they set\nthemselves and which they carry out (actual task; Leplat, 1981).\nWe focus on real design rather than design performed in artificially restricted conditions (such\nas in laboratory experiments), and on actual design rather than the design task or the design\nprocess that are the reference in design methods, and prescriptive and stage models. In the rest of\nthis article, \"design activity\" or \"designing\" refers to this real, actual design activity.\n\n3\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nDesign and Problem Solving\nWe consider that design involves problem solving, but that design is not (only) problem solving.\nThis position will become clearer in what follows. Here we briefly discuss the notions \"problem\"\nand \"problem solving,\" which seem to require some comment, given certain remarks and\ndiscussions in the design literature.\nProblem\nMuch misunderstanding and disagreement seem to be due to the specific, technical sense of\nproblem in cognitive psychology. Both in prescientific and in scientific contexts, the term is often\nused as referring to a difficulty or a deficiency (Kelley & Hartfield, 1996; Stolterman, 1991), whereas\nin cognitive psychology, \"problem\" qualifies someone's mental representation of their task (also\nnoticed by Stacey & Eckert, 2003, p. 179).\nWe adopt Mayer's (1989) distinction between two types of problems. A task is a \"routine\nproblem\" for someone if its representation, although not eliciting a memorised answer, can be\nsolved by applying a well-known procedure. For \"nonroutine problems,\" a person's task\nrepresentation does not evoke a procedure, and so one must be constructed. For most adults, 863\n\u2022 725 will be a routine problem, whereas it will be a nonroutine problem for nearly every young\nchild. The problem character of a task is thus a relative feature that depends on the task situation\nand on the person who must deal with it: A task that constitutes a problem for one person does\nnot necessarily do so for another person (Leplat, 1981).\nDesign tasks involve solving both routine and nonroutine problems. This article focuses on the\nnonroutine problems in design projects. From the cognitive viewpoint that we adopt, these are\nthe most interesting.\nProblem Solving\nProblem solving refers to a global process, not to one particular step. This process involves all\nthe activities that lead from a problem specification to its solution(s). It takes place through a large\nnumber of small steps, \"from problem detection through various attempts to problem solution or\nproblem abandonment\" (Gilhooly, 1989, p. 5). Examples of these steps are problem forming,\nproblem finding (Simon, 1987/1995; see also Thomas, 1989), problem formulation (Gilhooly,\n1989; Thomas, 1989), problem setting (Sch\u00f6n, 1983), problem structuring, and problem framing\n(Sch\u00f6n, 1988).\n\n2. TWO ALTERNATIVE APPROACHES TO DESIGN\nThe two major approaches in cognitive design research are the classical cognitive-science\nIn this article, an \"artefact\" (something that is \"man-made as opposed to natural\", Simon, 1969/1999) refers to any\nentity that one may design be it physical (buildings or machine-tools) or symbolic (music, software, social welfare\npolicies, route plans, or any procedure).\n2\n\n4\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nparadigm in terms of symbolic information processing (SIP) and the main alternative approach in\nterms of situatedness and reflective practice.\n\n2.1. The Classical View of Design: The SIP Approach\nThe SIP approach to design is mainly based on Herbert A. Simon's work. With more or less\nprofound modifications, its framework has been adopted by many authors (Akin, 1986; Baykan,\n1996; Eastman, 1969; Goel, 1995). Si-mon's ideas continue to be \"a dominant force within the\nfield,\" as noticed by Roozenburg and Dorst (1999). They illustrate their claim by observing that\nin the first two Design Thinking Research Symposia in 1992 and 1994 (Cross, Christiaans, &\nDorst, 1996; Cross, Dorst, & Roozenburg, 1992), \"Simon was referred to more than anyone else:\n31 direct references and goodness knows how many indirect ones in 32 papers\" (Roozenburg &\nDorst, 1999, p. 34).\nSimon's bibliography, which comprises nearly 1000 titles,3 contains only some 10 references\ndirectly discussing cognitive aspects of design. Yet, one of Simon's seminal works, The Sciences of the\nArtificial (1969/1999),4 and his article The Structure of Ill-Structured Problems (1973/1984), are among\nthe central references in cognitive design research.\nTwo steps can be distinguished in Simon's contribution to a cognitive design theory. First,\ntogether with Alan Newell, Simon elaborated the principles underlying the approach to problem\nsolving that has since been called SIP (Newell & Simon, 1972; for a succinct presentation, Simon,\n1979). Afterward, Simon applied this paradigm to design (Simon, 1969/1999, 1971/1975,\n1973/1984, 1987/1995). In these analyses, Simon identified and elaborated several of the\ncharacteristics of design that have formed the basis of cognitive design research by later\nresearchers.\nSimon's Framework for Design: The Sciences of the Artificial\nIn this section we first present four characteristics introduced by Simon that still occupy a\ncentral place in cognitive design research-even if they do not remain uncontested.\nDesign Problems: Ill-Structured Problems? Even if Simon was one of the first authors to discuss design\nproblems' structuredness, he did not consider it a specific characteristic of design. He considers\nthat many problems often treated as well-structured problems (WSP) would be better regarded as\nill-structured problems (ISP; Simon, 1973/1984, p. 182). This even holds for chess playing and\ntheorem proving, the kind of problems on which Newell and Simon (1972) based the analyses\nunderlying their SIP model. These observations, however, do not lead Simon to conclude that all\nproblems are ill-structured, or that problem structuredness is a relative characteristic. Instead, he\nconsiders that \"ill-structured problems\" are only so at first analysis: thanks to problem-solvers\napplying certain problem-solving strategies, these problems rapidly acquire structure.\n\nhttp://www.psy.cmu.edu/psy/faculty/hsimon/HSBib-1930\u20131950.htmlretrieved on September 15, 2005.\nThis book went into three editions, each one completing and revising the previous one: 1969, 1981, and 1996.\nOur article refers to the third printing of the third edition (Simon, 1969/1999).\n3\n4\n\n5\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nDesign: A Cognitive Activity Rather Than a Professional Status. For ergonomists and cognitive\npsychologists, Simon is an intellectual precursor when he states, in 1969, that \"design\" refers to a\ntype of cognitive activity, not a professional status restricted to certain design professionals, such\nas engineering designers or architects. \"Everyone designs who devises courses of action aimed at\nchanging existing situations into preferred ones\" (Simon, 1969/1999, p. 111).\nDesign: A Satisficing Activity. Making decisions without complete information by accepting \"good\nenough\" solutions rather than optimising and calculating the optimum one (Simon, 1971/1975), is\na distinctive characteristic of design.\nDesign: A Regular Problem-Solving Activity. For Simon, design is problem solving, exactly like the\nother activities he studied. According to his \"nothing special\" position (Klahr & Simon, 2001, p.\n76), the \"mechanisms that have shown themselves to be efficacious for handling large, albeit\napparently well-structured domains should be extendable to ill-structured domains without any\nneed for introducing qualitatively new components\" (Simon, 1973/1984, p. 197). Solving ISPs\n\"merely\" requires a preliminary stage: one first structures the ISP, and then solves the resulting\nWSP. Simon's only remark about the relative importance of this structuring activity is that \"there\nis merit to the claim that much problem solving effort is directed at structuring problems, and\nonly a fraction of it at solving problems once they are structured\" (p. 187).\nDiscussion of the SIP Approach\nIn this section, we discuss six aspects of design for which we consider that Simon\nmisrepresented design (for a detailed discussion of these points, see Visser, 2004). We will end this\nsection with some words on more nuanced positions formulated by Simon and a hypothesis\nconcerning his view on design.\nUnderestimating the Specificity of Ill-Structured Problems Solving. As noticed previously, Simon\n(1973/1984) considers that, one first structures a problem and then solves it, using generally\napplicable problem-solving mechanisms. Empirical observations on professional designers at work\nhave shown, however, that it is throughout the design process that these so-called \"structuring\"\nactivities occur, by, for example, (re)interpretation, inference, exploration, and analogical\nreasoning.\nUnderestimating the Importance of Problem-Representation Construction. While it is true that Simon\nsometimes states that the construction of representations is important in design, he generally does\nso in a final subsection or presents it as a detail that \"deserves further examination.\" It is clearly\nperipheral to an SIP approach to problem solving.\nUnderestimating the Specificity of Nondeterministic Leaps-Overesti-mating the Importance of Recognition.\nSimon does not deny that intuition, insight, and inspiration may play a role in expert activities.\nHowever, these activities are not the result of any mysterious, inexplicable internal force. \"Most\nintuitive leaps are acts of recognition\" (Simon, 1969/1999, p. 89).\n\"Interesting\" design ideas often depend on leaps between domains (Visser, 1991). In this case,\nthe number of possible candidates for recognition is huge and the chance that there already exist\n6\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nlinks between target and source representations is tiny. The required \"nondeterministic\" leaps\nmay depend on profound analogies (Johnson-Laird, 1989, p. 313). The critical step then consists\nin designers \"seeing\" their target in such a way that their representation evokes an analogous\nsource in memory! Once such a representation has been constructed, it is indeed \"simply\" an act\nof recognition.\nOverestimating the Importance of Systematic Problem Decomposition. For Simon, systematic problem\ndecomposition plays a fundamental role in design. Empirical studies show, however, that\ndesigners certainly decompose, but often not in a systematic way. The same design can often be\nbroken down in different ways (Reitman, 1964, p. 296). Decomposition is frequently based, not\non problem structure, but on a designer's experience (Goel & Pirolli, 1992). It often results in\n\"unwanted side effects\" (i.e., multiple interdependencies among subproblems that, as Simon\n(1973/1984, p. 191) himself notices, \"are likely to be neglected or underemphasized\"). It may also\nlead to disjoint subproblems whose articulation constitutes a problem as such.\nOverestimating the Importance of Search. Newell and Simon (1972) postulated that \"problem solving\ntakes place by search in a problem space\" even if this \"does not mean that all behavior relevant to\nproblem solving\" is search. For example, \"defining the situation,\" which may lead to \"problem\nredefinition,\" \"contrasts sharply\" with search and thus is \"an important type of infor-mationprocessing to understand\" (p. 761). Neither Newell and Simon (1972), nor Simon (1969/1999)\ndid, however, develop this issue.\n\"Problem solving as search\" models focus on traversal of spaces containing the solutions that\nare possible-in theory (the \"basic problem space\") or in designers' representation (their \"problem\nspace\"). The solutions are already there and are \"simply\" to be located in the space in question. In\ndesign, problem representations are, however, often not readily available through memory retrieval:\nthey have to be constructed (cf. design as exploration, Gero, 1998; Logan & Smithers, 1993;\nNavinchandra, 1991).\nOverestimating the Importance of Means\u2013Ends Analysis. This main problem-solving method in Newell\nand Simon's (1972) classical laboratory studies is also supposed to work in design (Simon,\n1969/1999, p. 121). In our view, it will, however, seldom be appropriate in design. Indeed, to use\nthis method, one must be \"able to represent differences between the desired and the present\" (i.e.,\nbetween the problem's goal state and its current state). For design problems, this will often be\ndifficult. \"The\" goal state may not yet have been specified but if it has, it may not be done\ncompletely or not definitively. Even if the goal and current states have been specified, it will often\nbe difficult, if not impossible, to compare them, as their representations will be at different levels\nor in different modalities.\nSimon's More Nuanced Positions. Simon's position with respect to design is not consistent over time.\nMore nuanced positions appear, especially in more recent texts on scientific discovery and\ncreative thinking (Cagan, Kotovsky, & Simon, 2001; Kaplan & Simon, 1990; Klahr & Simon,\n2001; Kulkarni & Simon, 1988). Yet, already in his 1973 paper on ill-structured problems, Simon\nwrote:\nDefiniteness of problem structure is largely an illusion that arises when we systematically\nconfound the idealized problem that is presented to an idealized (and unlimitedly powerful)\n\n7\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nproblem solver with the actual problem that is to be attacked by a problem solver with limited\n(even if large) computational capacities. (p. 186)\nMore such declarations appear, but they remain isolated in the further context of Simon's\nwork. Simon did not integrate them, for example, in later editions of the Sciences of the Artificial (for\nfurther details concerning these, perhaps only apparent, contradictory positions, see Visser, 2004).\nA Possible Explanation of Simon's Approach to Design. Our explanation of Simon's approach to\ndesign is based on Simon considering differently\n.\n.\n\n\u2022\n\u2022\n\nCognitive activities in economics and in design.\nDesign activities in engineering and in social planning.\n\nSimon's position vis-\u00e0-vis cognitive activity displayed in economics seems subtler than with\nregard to design thinking. Simon is very sensitive to the way in which economic theories idealize\nhuman rationality and neglect its limits. He even obtained the Nobel prize in economics thanks to\nhis completely new approach in terms of \"bounded rationality,\" proposed to explain people's economic behaviour- and their satisficing actions. With respect to design, however, Simon\nsurprisingly seems to underestimate human cognitive limitations.\nSimon's approach to design seems to be based on his view of what he presents implicitly as the\nprototype of design: engineering design (and, to a lesser degree, architectural design). Simon states\nthat in social planning \"representation problems take on new dimensions\" relative to the\n\"relatively well-struc-tured, middle-sized tasks\" of engineering and architectural design\n(1969/1999, p. 141). Simon assumes that for \"real-world problems of [the] complexity\" of social\nplanning, designers may refer to \"weaker\" criteria than for standard design. Especially for this\ntype of problems, an appropriate representation may be essential. \"Numbers are not the name of\nthis game but rather representational structures that permit functional reasoning, however\nqualitative it may be.\" (p. 146).\nThus, Simon's approach of design could be less mysterious if one might suppose that he\nconsiders\n.\n.\n\n\u2022\n\u2022\n\nRoutine engineering and architectural design as standard design.\nSocial planning as a special form of design radically different from standard design.\n\n2.2. Modern Views on Design. The SIT Approach\nFrom the 1980s onward, researchers have started to formulate, with respect to the SIP\napproach, alternative views on human activities in their actual accomplishment. In this article we\nwill focus on \"situavity theory (SIT),\" adopting the term proposed by Greeno and Moore (1993) to\ncover approaches in terms of both \"situated cognition\" and \"situated action.\" We view SIT as a\ngeneral framework that may embrace viewpoints on the analysis of design that are more specific.\nWe consider as instances of SIT (e.g., the \"reflective practice,\" \"re-flection-in-action,\" and\n\"knowing-in-action\"), on which Sch\u00f6n focuses.\nTwo groups of studies will be discussed in this section: early SIT studies and research that is\nmore recent.\n8\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nOne other alternative approach to design that deserves to be mentioned separately is the\nargumentative model proposed by Rittel (1972/1984; see also Rittel & Webber, 1973/1984).\n\"The act of designing consists in making up one's mind in favour of, or against, various positions\non each issue\" (p. 325).\nEarly SIT-Inspired Research\nExcepting Rittel, Sch\u00f6n is, as far as we know, the first author after Simon to introduce a new\napproach to cognitive design theory. His interest in design originated from an educational\nperspective. He was concerned with the way in which \"professionals think in action\" as \"reflective\npractitioners\" (Sch\u00f6n, 1983) and with the education required to become a practitioner.\nProceeding as an ethnologist\u2013anthropologist in his observations, Sch\u00f6n discusses in detail\nparticular design situations. This leads him to characterise design as a \"reflective conversation\nwith the materials of a design situation\" (Sch\u00f6n, 1992). Architects (e.g., observing their drawing,\ntransforming it and observing the result) may discover \"unintended consequences\" of this transformation (Sch\u00f6n & Wiggins, 1992, p. 143). Such \"new discoveries\" call for new reflection-inaction, resulting in \"improvisation on the spot\" to respond to the surprises. Even if architects have\ncertain intentions when transforming a drawing, these aims may evolve in \"seeing-movingseeing\" cycles (Sch\u00f6n & Wiggins).\nFor Sch\u00f6n (1988), designing is \"not primarily ... a form of 'problem solving,' 'information\nprocessing,' or 'search,'\" but a kind of \"making.\" \"Designers make ... representations of things to be\nbuilt.\" \"The designer constructs the design world within which he/she sets the dimensions of\nhis/her problem space, and invents the moves by which he/she attempts to find solutions\"\n(Sch\u00f6n, 1992, p. 11). Research into problem solving generally considers problems as \"given\" to\nthe person who is confronted with them. Sch\u00f6n judges that such an approach neglects the process\nof \"problem setting\" \"by which we define the decision to be made, the ends to be achieved, and\nthe means that may be chosen. In real-world practice, problems ... must be constructed from the\nmaterials of problematic situations which are puzzling, troubling, and uncertain\" (1983, pp.\n39\u201340).\nBucciarelli (1984), an engineer, used participant observation to apply the reflective-practice\napproach to collective engineering design.\nCurrent SIT-Inspired Research\nIt is mainly on a critical basis with respect to Sch\u00f6n-especially in relation to his lack of\nprecision regarding the operationalisation of the notions he pro-posed-that current SIT-inspired\nresearch is being developed (Adams, Turns, & Atman, 2003; Dorst, 1997; Dorst & Dijkhuis,\n1995; Roozenburg & Dorst, 1999; Valkenburg, 2001; Valkenburg & Dorst, 1998).\nDorst and Dijkhuis compared Simon's and Sch\u00f6n's \"fundamentally different paradigms\"\n(Dorst, 1997, p. 204), focusing on Sch\u00f6n's \"design-as-experi-enced\" view. They consider that\n\"design is not just a process or a profession, \"it is experienced as a situation that a designer finds\nhim/herself in\" (Dorst & Dijkhuis, 1995, p. 264).\nDorst (1997) was one of the first authors to undertake this comparison. In an empirical study,\nhe evaluated the ability of each paradigm to describe \"integration,\" which Dorst considered as\n\n9\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\n\"one of the key issues of design-as-ex-perienced.\" \"Someone is designing in an integrated manner\nwhen he/she displays a reasoning process building up a network of decisions concerning a topic\n(part of the problem or solution), while taking account of different contexts\" (Roozenburg &\nDorst, 1999, p. 34).\nDorst (1997) concluded that the two perspectives are differentially accurate and fruitful for\ndescribing and understanding different design phases. Examined from Simon's perspective, a\ndesigner works as if design involves \"objective interpretation.\" From Sch\u00f6n's viewpoint, a\ndesigner looks at design as if it involves \"subjective interpretation.\" Sch\u00f6n's perspective is most\nappropriate for conceptual design, less so for preceding phases (Roozenburg & Dorst, 1999, p.\n35). For detail design, it will probably also \"lose some of its descriptive power\" (p. 36). For the\ninformation phase, Simon's paradigm performs better. An analysis of the individual Delft\nprotocol (Cross et al., 1996) led Dorst and Dijkhuis (1995) to conclude that it is also appropriate\nfor the embodiment phase.\nIn an empirical study, Dorst and Dijkhuis (1995) examined how accurately descriptions of\ndesign based on Simon's and on Sch\u00f6n's approaches each capture the activity \"as experienced by\nthe designers themselves\" (p. 261). \"Distilling\" data-processing systems from both paradigms, the\nauthors use the resulting descriptions to compare their \"descriptive value.\" Considering it\nessential that a description method preserves the link between process and content in design\ndecisions, the authors evaluate how each system is able to do so.\nThe results of the rational problem-solving system are presented in four separate graphs. The\nauthors conclude that, using this system, it is difficult to relate process and content. The results of\nthe reflection-in-action system are exemplified in a descriptive summary of the protocol. This\nallows the authors to narratively link process and content for several central system components.\nDorst and Dijkhuis (1995) thus concluded that, in contrast to the rational problem-solving system,\nthe reflection-in-action paradigm makes it possible to relate the design process and its content (p.\n274).\nValkenburg and Dorst (1998) investigated the \"suitability\" of the \"mechanism of reflective\npractice\" to describe team designing. Using protocol analysis, they compare two design teams\nwith respect to Sch\u00f6n's four central reflec-tive-practice activities in design: naming, framing,\nmoving, and reflecting. The two design teams vary in their success. Valkenburg and Dorst\nattributed the disparity to the differences in \"effective design time\" spent on the four activities.\nCompared to their unsuccessful colleagues, the successful team spends less time on naming (3%\nvs. 49%), more time on moving (73% vs. 39%), and reflecting (21% vs. 8%). However, both\nteams spend the same small amount of time on framing (only some 3% to 4% of their time). One\noften refers to Sch\u00f6n because of his emphasis on framing in design, but here this activity thus\noccupies quantitatively a marginal position. Yet, the successful team consecutively develops five\ndifferent frames, whereas the unsuccessful team develops only one frame.\nIn a review of several experimental studies conducted on engineering students, Adams et al.\n(2003) proposed operationalisation of the two notions \"problem setting\" and \"engage in a\nreflective conversation [with a situation] listening to [the] situation's back-talk.\" Using verbalprotocol data, the authors compare entering and graduating students. Each of the activities proposed as operationalisation of the two notions correlate positively with measures of quality, thus\nproviding substance to these notions.\nCompared to their freshmen colleagues, graduating students define more broadly the problem\n10\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nthey are solving (a problem-setting attribute), and are more likely to engage in activities that\ntrigger shifts in their mode of analysis, thus accomplishing redefinition of problem-solution\nelements (effective-lis-tening and reflective-conversation attributes).\nBased on their results, the authors conclude that \"problem setting and engaging in a reflective\nconversation across problem setting and problem solving activities are important features of\neffective design practice\" (p. 292).\nValkenburg (2001), in her analysis of Sch\u00f6n's framework, concluded that \"not all designing is\ndone in a reflective practice way.\" In her empirical studies on team design, she also observes\n\"other ways of working\": a \"wait-and-see attitude\" and \"[dealing] with the design problem as a\nset of separate design issues.\"\nDiscussion of the SIT Approach\nWe distinguish the early and more recent SIT-inspired research.\nOur critique of early SIT-inspired work concerns\n.\n\u2022\nIts character with respect to theoretical paradigms, which is quite allusive.\n.\n\u2022\nThe definition of its central notions, which lacks precision.\n.\n\u2022\nIts methods for data collection, analysis and modelling, which offer no tools to\nderive higher-level descriptions from the data (see also Nardi, 1996, p. 83).\n.\n\u2022\nThe character of its conclusions, which is anecdotal. Early SIT-inspired studies\noften stop short by merely presenting raw data, rather than providing results likely to be\nreplicable and conclusions likely to be generalisable across situations.\nIn addition, Sch\u00f6n's ideas on design are based on design students interacting with experienced\ndesigners, other than design professionals working for themselves or designing together. They\nconcern \"reflection-on-action\" rather than reflection-in-action (Valkenburg, 2001).\nTo conclude: the early SIT-inspired studies present extremely rich descriptions of unique\ndesigners implementing unique activities in unique situations.\nIn more recent SIT-related studies, Dorst and other researchers have been presenting analyses\nand formulating theoretical frameworks with more precision. Certain authors have started to\noperationalise the central notions in Sch\u00f6n's work. Their studies constitute examples of ways to\ndirectly and indirectly capture and measure these notions in empirical data. Adams et al. (2003)'s\nwork substantiates some of Sch\u00f6n's ideas that had been inspiring, but rather vague in that they\ncould cover extremely diverse behavioural phenomena. Research like theirs opens up a way to\ndevelop Sch\u00f6n's framework at a theoretical level and to counter criticisms such as those\nformulated concerning the early SIT research!\nIn a comparative analysis of Sch\u00f6n's design-as-experienced view, Dorst and Dijkhuis (1995)\nconcluded that the rational problem-solving system was not appropriate to relate process and\ncontent in design decisions. We consider that the different types of description formats used by\nthe authors (separately presented graphs vs. narratively connected descriptions) may have induced\nthis conclusion. One cannot separate the influence of the paradigms from the influence of the\ndescription formats.\nIn spite of several criticisms formulated with respect to SIT-especially Sch\u00f6n's version-we\n11\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nconsider the contributions of this approach essential-also thanks to Sch\u00f6n! The insistence on the\nrole of constructive aspects of design, such as modifying design ideas based on new data, but\nespecially adopting new views on \"old\" data, concurs with our approach to design as the construction of representations.\n\n2.3. Confronting SIP and SIT Approaches to Design\nEach research community chooses its focus of interest for research-at the cost of simplifying\nand ignoring other topics. Studies conducted by reference to the SIP paradigm pay more\nattention to people's use of knowledge and representations in problem solving than to the generation\nof representations, and they do not analyse activities as they occur in interaction with other people\nand the broader environment. SIT-inspired authors focus on the consequences of these interactions\nand the role played by the environment, the social and cultural setting, and the situations in which people\nfind themselves, but they usually ignore thorough analysis, especially of cognitive structures and\nactivities.\nWe agree with SIT proponents Greeno and Moore (1993) when they contend that, in the SIP\ntheory, \"the structure of interactive relations between cognitive agents and the physical systems\nand other people they interact with\" is contained in a black box. SIP theory did not analyse these\ninteractive relations \"in anything like the detail that has been characteristic of analyses of\nhypothesized cognitive structures and procedures.\"\nSIT researchers state that designers' \"dominant resource\" is the situational context. For SIP\nresearchers this resource seems to be the range of designers' problem-solving methods. Even if the\nSIP approach does not deny that these resources may evolve under the influence of designers'\ninteraction with their environment, it does not pay much attention to these factors, which play a\ncentral role in SIT-related approaches. If SIT approaches do not deny the existence of internal\nresources, it is only recently that they have begun to analyse them. We saw that the SIT\nparadigm-especially, in its reflective-practice form-is evolving toward theoretical frameworks\nthat are more substantial.\nOne might be tempted to conclude with Norman (1993) that the \"two traditions do not seem to\nbe contradictory,\" that \"they emphasize different behaviours and different methods of study\".\nIndeed, for a designer confronted with a design task, resources for action-the elaboration of\nrepresentations, strategies, and other action-depend on both internal (knowledge) and external\n(social and artefactual) data. We judge, however, that these two types of data are not in a\nsymmetric relation: it is the designer who, using her or his knowledge and representational activities,\nestablishes the relationship between internal and external data. As these links are to be established\nby way of representation, we attribute such an essential role to the construction of\nrepresentations-by the designer!\n\n3. DESIGNING AS CONSTRUCTION OF REPRESENTATIONS\nGlobally characterised, designing consists in specifying an artefact, given requirements that\nindicate-generally neither explicitly, nor completely-one or more functions to be fulfilled, and\nneeds and objectives to be satisfied by the artefact, under certain conditions expressed by\nconstraints. At a cognitive level, this specification activity consists in developing (generating,\n\n12\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\ntransforming, and evaluating) representations of the artefact until they are so concrete, detailed, and\nprecise that the resulting representation-the specifications of the arte-fact-specify explicitly and\ncompletely the implementation of the artefact.\nThe ultimate design representation must express three aspects of the artefact: what-the\nartefact itself-how-the procedure by which it should be im-plemented-and why-the design\nrationale (i.e., \"the reason why the design should be as it is\"; Stacey & Eckert, 2003, p. 170).\nThe implementation of the specifications into the artefact requires further activities other than\ndesigning-even if it is generally still interspersed with more or less important design decisions,\nbecause the specifications will not be totally explicit and complete. Indeed, \"design never ends.\"\nOther design prolongations occur through users' participation in design and through\nmaintenance.\nThe following two sections discuss the two perspectives that, analytically, can be distinguished\nin this characterisation of design: the structures that are constructed (evolving design\nrepresentations) and the corresponding construction activity (its organisation, strategies and\nactivities).\n\n3.1. Designs as Representations\nThere has been much discussion on representations (e.g., about \"representation vs. no\nrepresentation\" and \"symbolic vs. nonsymbolic representation\").\nComing from different origins, Brooks (1991) and Dreyfus (2002) have each, in a paper entitled\nIntelligence Without Representation, claimed that intelligent behaviour does not require representation.\nIn this article, we clearly consider that people construct and use representations-but not of an\n\"original,\" which would be re-presented. Re-presentation is a misleading (the German \"Vorstellung\"\nis less confusing). It should not be interpreted literally: we do not re-present an independent\n\"reality\" beyond our experience. This position is close to Von Glasersfeld's (1981) radical\nconstructivism.\nRepresentations are neither \"complete\" nor \"objective.\" Adapting somewhat Ochanine's\n(1978) notion, they are \"operative\" in that they are not as much functionally distorted and\nrestricted to task-relevant characteristics (Ochanine's view), but shaped by these characteristics.\nVariations in cognitive commitment play an important role in this selection.\nRepresentations are also goal-oriented. They are \"constructions, which for some purposes,\nunder certain conditions, used by certain people, in certain situations, may be found useful, not\ntrue or false\" (Bannon, 1995, p. 67). They are built to make things \"visible so that they can be\nseen, talked about, and potentially, manipulated\" (Suchman, 1995, p. 63). This visibility is not\nonly for others: an important role in design is played by designers making visible things for\nthemselves, so that, in Sch\u00f6n's terms, they can engage a \"conversation\" with them, and so\nadvance their design activity.\nWith respect to the symbolic nature of representations, we refer to the analysis made by Goel\nin Sketches of Thought (1995). Goel is not \"against representation\", not even \"against symbolic\nrepresentations.\" Symbolic representations are, however, not all there is.\nFor Goel (1995) lassical cognitive science is based on what he calls the Computational Theory\nof Mind (CTM), which claims that cognitive processes are computational and require a\n13\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nrepresentational system with some very stringent properties. These CTM properties are syntactic\n(disjointness, finite differentiation) and semantic (unambiguity, disjointness, finite differentiation;\nchapters 7 and 8 passim, especially Table 8.1). For well-structured puzzle problems, these\nproperties work well, but in ill-structured, open-ended, real-world problems, such as design, other\ntypes of representation also play an essential role. Based on Goodman's (1969, quoted in Goel,\n1995) analysis of symbol systems, Goel explains why \"sketching\" is so essential and typical for\ndesign.\nGoel's use of the term sketching is not restricted to a particular form of pictorial symbol systems.\nThe term refers to the use of any non-notational symbol system (i.e., a system characterised by\nnon-CTM properties), which, in informal terms, may be qualified as imprecise, fluid, amorphous,\nindeterminate, and ambiguous.\nIn the rest of this article, \"sketch\" is used in its common, restricted sense of a particular type of\ndrawing, and not in Goel (1995)'s technical, broad acceptation.\nThe Evolving Nature of Representations: Levels of Abstraction\nOne of the first results in cognitive design studies in architecture was that, in early phases,\ndesigners construct and use different representations than in later phases (Goel, 1995; Lebahar,\n1983). An important difference concerns two orthogonal abstraction hierarchies:\n.\n\u2022\nThe implementation hierarchy (Rasmussen's 1986 abstraction hierarchy):\nrepresentations differ from abstract, i.e. related to the artefact's purpose, to concrete (i.e., related\nto the structural or physical properties that specify its implementation).\n.\n\u2022\nThe part\u2013whole hierarchy (aggregation hierarchy): representations differ from\nglobal to detailed.\nWe do not adopt the term refinement for the second hierarchy, because authors often not only use it\nfor detailing but also for concretisation.\nIn their activity, designers do not progress through the corresponding representation levels in a\nsystematic, fixed order. Instead, they come and go between representations at level n and level n\n\u00b1 m-even if, globally, there will be more activity at a functional level in early stages and more\nactivity at a structural level in later stages. Goel notices that problem structuring \"occurs at the\nbeginning of the task ... but may also recur periodically as needed\" (1995, p. 114). In addition,\n\"designers differ substantially in the path they take through [the design space] and how quickly or\nslowly they traverse its various phases\" (p. 123; see also McGown, Green, & Rodgers, 1998).\nThe Evolving Nature of Representations: Degrees of Precision\nA further difference between representations in early and in later phases is that initial\nrepresentations are necessarily imprecise (Goel, 1995; Lebahar, 1983)-and thus incomplete.\nDuring conceptual design, designers need flexible forms of representation that, for one thing,\nexpress the provisional character of the underlying ideas, and for another, prevent them from\npremature commitment to specific options. Only gradually, as design progresses, do\nrepresentations gain in precision. In domains where external representations play an important\nrole, the type of drawings changes from sketches to drafts with dimensions and tolerances\n\n14\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\n(McGown et al., 1998). Sketches may indeed translate provisionality, a function that in face-toface, oral communication may be achieved by particular forms of phrasing and intonation (Stacey\n& Eckert, 2003, p. 167).\nExternal Representations\nRecently many cognitive design studies have come to focus on external representations. This\ninterest should not lead to neglecting the importance of internal representations. Even if mental\nrepresentations have received much attention in traditional cognitive science research, we still\nlack data on their potential specific features in design. Cognitive design studies discuss \"mental\nmodels,\" \"mental images,\" and other internal representations that are supposed to preserve in\nanalogue form, features of the represented entity, but their precise role is not yet clear (Verstijnen,\nHeylighen, Wagemans, & Neuckermans, 2001; Verstijnen, Leeuwen, Goldschmidt, Hamel, &\nHennessey, 1998).\nAmong the numerous different forms that external representations may take (graphical or\nverbal\u2013textual; oral or written; two-dimensional or three-dimensional; notes, flowcharts,\ndrawings, plans, or scale models), drawings have received particular attention. Many studies\nexamine their importance, especially in the early phases of design, and particularly in domains\nconcerned with physical artefacts, such as architecture and industrial and mechanical design\n(Design Studies, 1998; Do, Gross, Neiman, & Zimring, 2000; Goel, 1995; Kavakli, Scrivener, &\nBall, 1998; McGown et al., 1998; Neiman, Gross, & Do, 1999; Rodgers, Green, & McGown,\n2000; Scrivener, 1997; Tseng, Scrivener, & Ball, 2002; Verstijnen et al., 2001; Verstijnen et al.,\n1998). In these domains, \"visual representations are omnipresent throughout the design process,\nfrom early sketches to CAD-rendered general arrangement drawings\" (McGown et al., 1998).\nAccording to Hwang and Ullman (quoted in McGown et al., 1998, p. 432), \"67% of the marks\nmade on paper during conceptual activity are sketches.\"\nAn interesting characteristic of drawings is that, unlike oral expressions, they leave\ntraces-even if many exploratory drawings are thrown away (McGown et al., 1998). Later on,\ndesigners can come back to these residual representations, examine them at ease, show them to\ncolleagues (cf. also their possible role in maintenance; e.g., in forms of design rationale).\nImportant functions of external representations depend on the externalisation and visualisation\nthey allow and that may facilitate designing. They enable activities on the entity\nrepresented-generally, the artefact under design-that are more difficult or even impossible on\nthe corresponding internal representations. Using an external representation, it is often easier to\n\"manipulate\" an entity, to reason on it, to test hypotheses and other ideas on its subject. External\nrepresentations often facilitate the exploration of alternatives, the prediction of outcomes or\nconsequences of new ideas (Do et al., 2000). Through the possibilities of simulation, drawings\nmay serve to generate solutions: it is easy to try out quickly, and cheaply, different options. They\nare also useful in evaluation: juxtaposing various drawings or mock-ups, a designer may compare\ndifferent possibilities. These instrumental functions of external representations are essential for\ndesigners, to advance their design, work on it through controlled reasoning activities, but also\nunintentional discovery. Intermediary results of designers' activity in the form of external representations, may lead them, in \"reflective conversation\" with these representations, to evolve in\ntheir interpretations, intentions and ideas for solutions.\n\n15\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nExternal representations are also of course helpful as memory aids in an extension of internal\nmemory (to temporarily stock provisional ideas, and permanently archive intermediate or final\nsolutions).\n\"Computational offloading\" refers to the observation that, compared to internal\nrepresentations, the use of external representations reduces the amount of cognitive effort\nrequired to solve informationally equivalent problems (Larkin & Simon, 1987; Zhang, 1997).\nSketches. These preliminary drawings for later elaboration, are generally drawn by hand; few\ncomputerised systems really allow sketching (but see Decortis, Leclercq, Boulanger, & Safin,\n2004; Leclercq, 1999).\nThanks to their fluidity and imprecision, sketches are supposed to give access to knowledge not\nyet retrieved, to evoke new ways of looking and seeing and, thus, to result in an enhancement of\ncreativity and innovation in design. In research in visual, graphic brainstorming, Van der Lugt\n(2000) has analysed this claim. Given his conclusion that \"in early idea generation, sentential, or\npartly sentential, variations of the brainstorming tool ... perform stronger than [their] graphic\nvariations\" (p. 521), one may claim that external, graphical representations are not the panacea\nfor creativity enhancement!\nInterdesigner Compatible Representations in Collective Design (\"Shared\" Representations)\nGiven that they associate components from various domains of specialty, design projects\ngenerally require multiple skills-and thus collaboration.\nThe role of representations in collective design varies according to its phases. During\ndistributed design, designers each have their own tasks and specific goals to pursue. When\ncodesigning, they have a common goal that they aim to reach by applying their specific skills and\nexpertise. It is then essential that designers who each also have their personal perspective,5 establish a \"common ground\" (Clark & Brennan, 1991) or a \"common frame of reference\" (De\nTerssac & Chabaud, 1990). These representations concern agreements, especially on the\ndefinition of tasks, states of the design, references of central notions, and weights of criteria and\nconstraints. They are often qualified as \"shared,\" but given the fact that one has no objective\nreference, we prefer to characterise them as inter-designer compatible representations (cf. Von\nGlasersfeld, 1981).\nRepresentations at the Source of a Design Project: \"Design Problems\"\nThe representation at the source of a design project expresses the requirements for the\nartefact-or, in problem-solving terms, the problem to be solved.\nQualifying design as a \"problem\" refers to designers' representation of the task that consists in\nsatisfying the requirements. It does not convey any presupposition with respect, either to the\nIn recent years, the notion \"viewpoint\" has been proposed in many publications, without having received a clear\ndefinition that distinguishes it from other representations. We use the term perspective, not in a technical sense (i.e., to\nrefer to a particular type of representation), but to focus on the fact that different designers may have constructed\ndifferent representations of a \"same\" entity (artefact or other), and that in their representation of a \"same\" entity,\ndifferent aspects (attributes) may receive different weights.\n5\n\n16\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nrequirements being exhaustively and unambiguously developed when the designers receive them\n(Carroll, Rosson, Chin, & Koenemann, 1997, 1998), or to a definitive representation of the\nrequirements being constructed by the designers when they first analyse them.\nThe \"design as a problem\" approach has been the object of many SIP-in-spired cognitive\ndesign research studies (see references in Bayazit, 2004; Cross, 2001, 2004; D\u00e9tienne, 2002;\nEastman, 2001). In this section, we will therefore discuss only two characteristics on which we\npropose a complementary or different view. These are design problems' ill-definedness and the\nway in which the artefact is constrained by these representations that constitute design problems.\nIll-Definedness. Instead of ill-structured we adopt the term ill-defined to refer to both problem's illstructuredness, and the ill-specified character of all three problem components: initial state, goal\nstate, and operators. This position is inspired by Reitman (1964; see also Thomas & Carroll,\n1979/1984). Many authors consider design problems to be ill-defined because of one or two\ncomponents being ill-specified. They, for example, propose that de-sign-problem specifications\nhave open constraints, or that design problems admit several solutions.\nReitman (1964) distinguished different types of problems according to the degree of\nspecification of each component. In design problems, only the goal state generally receives some\nexplicit specification, by a description of the artefact's function and of other constraints on the\nartefact-even if this specification is abstract and incomplete. Initial state and operators are\ngenerally underspecified. Implicitly, they may be supposed to correspond to the state of the art in\nthe domain.\nProblem-definedness is clearly a relative characteristic (cf. also Newell, 1969, p. 375; Sch\u00f6n,\n1988, p. 184).\nConstraints on the artefact. Several authors, especially in A.I., analyse design as constraint\nmanagement and satisfaction (Logan & Smithers, 1993; Stefik, 1981a, 1981b). Darses (1990a;\n1990b), analysing such approaches from a cognitive\u2013ergonomics viewpoint, concludes that, even\nif these interdependent variables play a central role in design, designers' activity also refers to\nother sources for action (e.g., action plans and schemata).\nThe constraints that design problems are to satisfy are often conflicting. Dealing with trade-offs\namong constraints, and with different possibilities to do so, is central in satisficing. Combined with\ndesign's complexity (i.e., its multidimensional and interdependent organisation), this leads to\nmaking the analysis, structuring, and pruning of constraints into an essential aspect of design\nactivity.\nEven if, formally, it is generally possible to transform an ill-defined problem into a well-defined\none by closing all open constraints (Reitman, 1964), such a transformation corresponds to a form\nof premature commitment that designers may well regret afterwards.\nAccording to a common-sense belief, constraints are often considered as obstructing people's\n\"freedom.\" However, constraints are useful, if not necessary, in narrowing down a space of\npossibilities that may otherwise be too large for exploration. \"Even\" the expression of artistic\ncreativity requires constraints (cf. Stacey & Eckert, 2003, p. 166).\nUsing Knowledge in Design\n\n17\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nThe importance of knowledge holds for most professional domains, but it is particularly critical\nin an activity that essentially consists in representational activities. Design requires general,\nabstract knowledge and weak, generally applicable methods, but above all designers need\ndomain-specific knowledge, and the corresponding strong, knowledge-intensive methods. We\nsuppose that satisficing (e.g., requires more domain-specific knowledge than does optimising).\nThis also holds for the creativity that is particularly important in design compared to routine\nactivities. In addition, knowledge is a key element in the exercise of analogical reasoning-which\nmay, in turn, be related to design creativity (but see Visser, 1996).\nNonalgorithmic, nonformalised activities-necessary in creativity, satisficing, (re)interpretation,\nand qualitative simulation-require knowledge. Of course, to proceed to complex calculations, a\ndesigner also needs knowledge, but of a sort that can be learned. The knowledge that is very\nimportant in design is not gained through formal education, but through experience. Designers\nmay acquire such knowledge as a result of their work on many different types of projects, and\ntheir interaction with colleagues who have other specialties.\nWithout knowledge, no interpretation, thus neither the possibility to look at a project in a way\ndifferent from one's colleagues, nor that of seeing things differently than one did during a\nprevious project! The task-and goal-ori-ented character of representation results from an\ninteraction between one's knowledge and experience, and the situation one is in.\nKnowledge determines if a design task constitutes a problem. Working with ill-defined problem\ndata is only possible if one has specific knowledge-in addition to generic knowledge.\nFurthermore, knowledge is a critical resource underlying most strategies. If simulation via\nrepresentations works, it is thanks to one's knowledge. Reuse is, by definition, impossible without\nknowledge (it is not a components library that makes knowledge superfluous). Handling\nconstraints (especially constructed constraints) would be hard without it.\nThese are only a few examples, mentioned to indicate the importance of knowledge in design.\nSeveral related issues are not discussed here: distinctions between knowledge in the application\ndomain, underlying theoretical and technical domains, and relevant nontechnical domains\n(Visser, 1995b), knowledge concerning design methods, and knowledge of ergonomics, and social,\npolitical, economic, or legal aspects of the artefact and its use. As designers generally are not\nexpert in all these different domains, the need of design projects for wide-ranging knowledge\nrequires collaboration between professionals from various domains.\n\n3.2. Designing as an Activity: Construction of Representations\nAfter a short discussion of the relations between designing and the tasks surrounding it, we\ndiscuss consecutively the activity at three levels: its organisation, its strategies, and its activities.\nThe Intermingled Character of Design and Its Surrounding Activities\nRequirements specification, the task that precedes design, is not supposed to involve designing.\nAccording to a common viewpoint, requirements are \"out there\" and can fully be gathered at the\nbeginning of a design project. In the course of a series of participatory design sessions, Carroll et\nal. (1997, 1998) noticed, however, how project requirements evolved. \"The client's original\nfunctional requirements ... were radically and continuously transformed ... Qualitatively\n\n18\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\ndifferent requirements become accessible or salient\" (1998, p. 1167). The authors did not analyse\nthis as \"initially mistaken notions being subsequently corrected,\" or as \"more requirements work\nleading to successively finer decompositions\" (1997, p. 62). They qualified the process of\ncollaborative requirements gathering as requirements development-in our terms, requirements\ndesign.\nA comparable relation may be identified between design and implementation. Generally there\nwill be, during the task that follows design in an arte-fact's development, decisions that, from a\ncognitive viewpoint, may be qualified as design. Correspondingly, already during design there are\nimplementation activities. In our software-design study, we observed that specifying software and\nnot coding it right away may be difficult for software designers (Visser, 1987).\nOrganising One's Design\nThe interwoven character of activities also holds at a lower level, inside the global design task.\nThe process followed by designers in industrial, complex projects does not progress through\nindependent consecutive stages. Designers do not first structure \"the\" problem and then solve it:\ndesign is not a process going from analysing \"the\" problem specifications to synthesising \"the\"\nsolution. Neither do designers systematically traverse the three stages often distinguished in\nproblem solving: construction of a problem representation, solution generation, and solution\nevaluation.\nSince the 1980s, an increasing number of authors have claimed, based on empirical design\nstudies, that the actual organisation of design activity is not a simple implementation of systematic\ndecomposition strategies (especially, top-down combined with breadth-first or depth-first),\nfollowing preestablished plans (especially, hierarchical plans). The qualification that has come to\nqualify the way in which designers organise their activity is \"opportunistic\" (Visser, 1987, 1994)\nor \"serendipitous\" (Guindon, Krasner, & Curtis, 1987).\nLike many colleagues (see, e.g., Ball & Ormerod, 1995), we assume that designers have\nprinciples that guide their activity. Designers are aware that the use of a combined top-down\nbreadth-first strategy is a valuable approach to organise their design properly (e.g., to obtain wellstructured specifications, think of all design components, and correctly handle their interactions).\nThey are conscious that the avoidance of premature commitment is precious and that the\nbreadth-first decomposition minimises this risk. However, designers, for one thing, meet\ndifficulties in the implementation of such systematic strategies, and, for another, use other\nresources to organise their activity than simply the structured plans provided by systematic\nstrategies. These strategies indeed impose a heavy load on memory and hinder exploitation of\npossibilities for action that may be interesting for different reasons.\nTo discuss these issues, we need to anticipate the general presentation of design strategies, and\npresent these decomposition strategies.\nTop-Down and Bottom-Up Strategies, Breadth-First and Depth-First Strategies. The top-down strategy\nconsists in descending a problem's theoretical \"solution tree\" from the most abstract level down to\nthe lowest, concrete and detailed level, without ever returning to a higher level.\nIn addition, design methodologies advocate that one combine the top-down strategy with a\nbreadth-first strategy: when decomposing a prob-lem-solution, one should develop, consecutively,\n\n19\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nall the elements of the current problem-solution at the same level of the solution tree, before going\non to the next level.\nSeveral authors of early empirical studies conducted on design, especially in the domain of\nsoftware design, claimed that the integrated top-down, breadth-first decomposition, was usually\nindeed the global strategy implemented by experts (Adelson, Littman, Ehrlich, Black, & Soloway,\n1985; Adelson & Soloway, 1988; Ball & Ormerod, 1995; Byrne, 1977; Davies, 1991; Jeffries,\nTurner, Polson, & Atwood, 1981).\nHowever, top-down balanced refinement seldom occurs absolutely. Some 10 years ago, we\nanalysed the results of 15 empirical studies on design in diverse domains, focusing on designers'\norganisation of their activity (Visser, 1992, 1994). We concluded that, with one exception\n(Adelson & Soloway, 1988), each study showed one or more factors that contributed to the\nopportunistic character of the organisation of design.\nThe Opportunistic Organisation of Design. Hayes-Roth and Hayes-Roth's (1979) study on errand\nplanning is generally the reference for qualifying design organisation as opportunistic. We have\napplied the authors' view of opportunism to more \"typical\" design tasks (functional specification,\nVisser, 1994, and software design, Visser, 1987) (see also Bisseret et al., 1988, for traf-fic-signal\nsetting, and Whitefield, 1986, for mechanical design). Our focus was designers' organisation of\ntheir activity (Visser, 1990).\nOpportunism is not just a \"blanket-term to denote any design activity that deviates from a single,\nrigid design approach\" as Ball & Ormerod (1995) considered opportunism proponents to do. We\nattribute the particular nonsystematic character that we qualify as opportunistic, to the fact that\ndesigners, rather than systematically implementing a structured decomposition strategy, take into\nconsideration the data which they have at the time: specifically, their knowledge, the state of their\ndesign in progress, their representation of this design, and the information at their disposal\n(Visser, 1994). Considering this data in addition to the possibilities provided by systematic\ndecomposition, designers considerably increase their potential range of action.\nIn our studies, we identified six categories of data as being factors that lead to the opportunistic\norganisation of design. They range from information provided to the designer by an external\ninformation source (in particular, the client or a colleague), via information the designer \"comes\nacross\" when \"drifting\" (involuntary attention switching to a design object or action other than\nthe current one), to mental representations that are activated by the representations used for the\ncurrent design action (e.g., because of analogical relations between both representations) and\nwhich may concern design objects or procedures (for more details, see Visser, 1990, 1994).\nDiscussion of Our Opportunistic-Organisation Position. Not all researchers share the view that design is\norganised opportunistically. Davies (1991) has characterised program design as \"broadly topdown with opportunistic local episodes\" (p. 176)-exactly the opposite of our \"organisation of design activities [as] opportunistic, with hierarchical episodes\" (title of Visser, 1994)! With respect to\nthis issue, we follow Hayes-Roth and Hayes-Roth (1979, p. 307) who, to solve \"the apparent\nconflict\" between the two models, proposed considering the top-down, successive refinement\nmodel as a special case of the opportunistic model. Indeed, the model that allows for various organisational structures is more general than a model that allows only for one or two structures in\narticulation (top-down combined with breadth-first or depth-first). Yet, we favour an\n\n20\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nopportunistic model not only because of this formal argument but also for \"positive\" reasons (see\nfollowing).\nWith respect to these modelling choices, several questions may be raised. How great a lack of\nsystematicity can be tolerated by a systematic-decomposi-tion model? Alternatively, what degree\nof systematicity can be qualified as a particular form of \"opportunism,\" before this qualification\nbecomes inappropriate?\nIn his conclusion, Davies (1991) noted that the differences between experts and novices may be\ndue to differential \"use and reliance upon external memory sources\" (p. 186). This point becomes\ncentral in Ball and Ormerod's (1995) discussion. These authors argued that \"much of what has\nbeen described as opportunistic design behaviour appears to reflect a mix of breath-first and\ndepth-first modes of solution development\" (p. 131), even if design is also \"subject to potentially\ndiverging influences such as serendipitous events and design failures\" (p. 145).\nOur view on these positions is that we do not deny that designers may proceed in a breadthfirst or depth-first way, but we want to emphasise that\n.\n\u2022\nThey often do so occasionally and locally, rather than systematically and throughout their\ndesign process.\n.\n\u2022\nA breadth-first\u2013depth-first mix can take different forms, and if a mix pattern has\nvarious occurrences, these will generally be interspersed with other ways of proceeding, involving\nthe risk that the breadth-first and depth-first qualifications loose their applicability.\n.\n\u2022\nAn occasional, local breadth \"first\"\u2013depth \"first\" mix is just one form in which\nopportunism can reveal itself in design.\nIf design was in effect \"simply\" \"a mix of breadth-first and depth-first modes,\" it might indeed\nbe exaggerated to resort to opportunism that, in this case, opens up a needless large space of\npossible forms of structuredness and unstructuredness.\nWith respect to the structured character of design organisation, opportunism proponents\n(Guindon et al., 1987; Kant, 1985; Ullman, Dietterich, & Staufer, 1988; Visser, 1988; Voss,\nGreene, Post, & Penner, 1983) do question the systematic implementation not only of breath-first\nand depth-first approaches but also of systematic top-down refinement, an issue that Ball and\nOrmerod (1995) omit completely from their discussion. However, Jeffries et al. 's (1981) results,\nwhich are one of the foundations of Ball and Ormerod's (1995) claim, show that the top-down\nstrategy also is not systematically implemented by expert designers.\nWe close this section by a short discussion of the \"potential causes of unstructured activity\"\n(Ball & Ormerod, 1995, p. 145). Ball and Ormerod (1995) conceded that \"like Guindon (1990)\nand Visser (1990) [they] recognize a number of [such causes]. These include factors such as social\ninfluences, memory failures, design failures, information unavailability, boredom and\nserendipitous events\" (p. 145).\nWe suppose that most, if not all, cognitive functioning is, for an important part, under the\ndependence of people's limited information processing capacities (cf. Simon's bounded\nrationality). We suppose, however, that in addition to the more or less frequently arising\nimpossibility of working in a systematic way because of cognitive deficiencies, there are also positive\ncauses of opportunism. Designers also decide to take advantage of opportunities, in spite of other\n\n21\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\npossibilities. The decision to exploit analogical relations, information available because a\ncolleague passes by, or \"discoveries\" that emerge as by-products of systematic design actions, are\nall examples of instances of such positive factors leading to an opportunistically organised activity.\nDesign Strategies\nGiven the focus of this article, we will discuss strategies that are used by experienced,\nprofessional designers (rather than students, as in most studies on this topic; see also Akin,\n1979/1984; Gilmore, 1990; Visser & Hoc, 1990).\nReuse Versus Design From Scratch. All use of knowledge could be qualified \"reuse\" in that\nknowledge is based on the processing of previously encountered data, experience, and\nrepresentations constructed and used in the past. We have proposed to reserve \"reuse\" for the use\nof specific knowledge that is at the same abstraction level as the target for whose processing this\nknowledge is retrieved (Visser, 1995a; cf. case-based reasoning, Visser & Trousse, 1993).\nReuse has been observed in various empirical design studies. The exploitation of specific\nexperiences from the past is indeed particularly useful in design, especially in nonroutine design\n(which might seem surprising, but see Visser, 1996).\nMany aspects of reuse have been examined in cognitive design studies: its phases, strategies,\ntypes of reusable entities and entities reused, types of exploitation, effects of reuse on productivity,\nand difficulties and risks of reuse (see D\u00e9tienne, 2002; Visser, 1995a). In this article, we only hint\nat the question concerning the origin of reuse in design. Under which conditions do designers\ndecide to solve a problem by reuse, rather than refer to general knowledge (i.e., design from\nscratch)? Designers need to take this decision during the construction of a target-problem\nrepresentation. Both Burkhardt and D\u00e9tienne (1995) and Visser (1987) concluded that the cost of\nreuse is the main factor in this process (an observation in line with the importance of cognitive\neconomy as primordial criterion underlying design organisation (Visser, 1994).\nSimulation. Simulation, often presented as an important evaluation strategy, is also used in\ngeneration. Mental simulation may serve to understand and elaborate the problem requirements\n(Guindon et al., 1987; Kant, 1985; Ullman et al., 1988) or to evoke from memory knowledge\nrelating to a problem (Baykan, 1996, p. 141).\nIn design domains involving physical artefacts, designers also simulate by means of external\nrepresentations such as drawings and mock-ups. In a comparative analysis of manual and\ncomputer-assisted design, Dillon and Sweeney observed that such simulation \"acted as a powerful\nvisual aid\" to some of the manually working designers, whereas \"no directly comparable facility\nexisted on CAD\" (1988, p. 484).\nSelecting a Kernel Idea and Premature Commitment. Several authors have observed that designers,\nearly on in their activity, tend to select a \"primary generator\", that is a few simple objectives\nadopted to generate the initial solution kernel (Darke, 1979/1984). They then stick to such a\n\"central concept\" in what is going to become their global design solution (Guindon et al., 1987;\nKant, 1985; Ullman et al., 1988).\nOne might thus conclude that designers neglect to elaborate and compare alternative\n\n22\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nrepresentations of design problem-solutions. The literature provides, however, other observations.\nIn a study on professional design review meetings, Ball and Ormerod (2000) conjectured that it is\nindividual or de-contextualised design that induces such an early fixation. They indeed observe\nthat the design team explores a range of alternative concepts. In our study on industrial\ncomposite-structure design by a team of mechanical designers (Visser, 1993), the two most\nexperienced designers were observed to come up with a multitude of solution principles. There\nare nevertheless also experimental studies of individually conducted design in which designers formulate several solution ideas (e.g., Eastman, 1969).\nSelecting a kernel idea early on in the design process and sticking to it, may be considered a\nform of premature commitment. Several authors noticed that designers often try to avoid such\nearly fixation (Lebahar, 1983; Reitman, 1964). The apparent contradiction may be removed in at\nleast two ways:\n.\n\u2022\nDesigners may declare or aspire to refrain from premature commitment, but in\nfact not put these intentions in practice (cf. our observation that designers' accounts about their\nactivity often do not coincide with their actual activity, Visser, 1990).\n.\n\u2022\nEarly on in the design process, designers may select a kernel idea at a conceptual\nlevel, but later on, they may refrain from premature commitment at a more concrete or detailed\nlevel, by not fixing all values for its variables.\nDesign-Representation Construction Activities\nMany recent studies concern representational structures in design, especially external\nrepresentations, but the cognitive activities and operations6 involved in their construction and use\nhave not been analysed extensively.\nWe distinguish three types of activities on representations: generation, transformation, and\nevaluation. We also discuss the use of representations in collective design.\nGeneration and Transformation of Representations. The first two \"stages\" distinguished from a\nproblem-solving perspective (construction of a problem representation, and solution generation)\nboth involve construction of representations, even if the input and output representations are\ndifferent.\nA representation is never generated \"out of nothing.\" One always transforms representations,\nfrom the first design action onward. Yet, we qualify the construction of representations as\n\"generation\" if one's memory is its main source. It is never its only source: both the state of the\ndesign project (requirements and their follow-up included) and other contributions \"from the\noutside world\" will influence a designer. Designers will usually generate a first representation of a\ndesign project by interpreting the requirements.\nGeneration may be implemented by different types of processes and operations: from the\nsimple evocation of knowledge from memory, to the elaboration of \"new\" representations out of\nmnesic knowledge entities without a clear link to the current task (Visser, 1991). Schema\ninstantiation is the form of knowledge evocation that has received much attention in software6\n\nExcept when an action is clearly an operation, we will use the term activity to refer to activities and operations.\n\n23\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\ndesign studies (D\u00e9tienne, 2002).\nWe distinguish transformation activities according to the type of transformation between input\nrepresentation rx and output representation ry. They may replicate (reformulate ri into ri', or\nduplicate it, Goel, 1995), add (transform ri into ri' by introduction of \"small alterations\", Van der\nLugt, 2002), detail (break up ri into components ri1 to rin), concretise (transform ri into ri' that\nrepresents ri from a more concrete perspective), modify (transform ri into another version, ri',\nneither detailing, nor concretising it), or substitute (replace ri by an alternative representation rj,\nneither detailing, nor concretising it; cf. Van der Lugt's 2002 \"tangential transformations\" (i.e.,\n\"wild leaps into a different direction\").\nMany activities play a more or less direct role in these different types of transformation. Some\nexamples (varying between operations and activities) are interpretation, association,\nbrainstorming, reinterpretation, confrontation, adjustment, integration, analysis, exploration,\ninference, restructuring, combining, drawing (sketching, drafting, and other forms), hypothesising,\njustifying. In this article, we only comment on some of them.\nWe do not present activities that correspond to configurations of other activities, such as\ncognitive synchronisation, or conflict resolution, which we analysed in terms of \"exchanges\"\n(polylogal verbal\u2013interactional units) in our analysis of technical-review meetings (D'Astous,\nD\u00e9tienne, Visser, & Robillard, 2004). Neither do we discuss basic processes (mechanisms). Finally,\nwe do not include activities at the action-management level, such as planning, organisation,\nregulation, or control.\nEven if it is too simplistic to describe a first design \"stage\" as \"analysis,\" it corresponds to a\ncentral activity in the initial phases of a design project. Constraints analysis is essential to\ndisambiguate design requirements. Analysing the current design state may be a way to introduce\ndetail or concreteness in the project.\nAnalogical reasoning occurs in all three representational activities. We have mentioned it in\ndifferent contexts: as a factor of opportunism, in creativ-ity-requiring activities, to tackle illdefined problems by interpreting them, and to generate \"interesting\" design ideas.\nDifferent forms of inference are used in design. Induction is much more frequent than\ndeduction. Goel (1995) identifies only 1.3% \"(overt) deductive inferences\" in his observations. In\nour composite-structure design study (Visser, 1991), neither did we notice any overt form of\ndeduction.\nRestructuring and combining representations are often mentioned as components of the\ncreative process (Verstijnen et al., 2001; Verstijnen et al., 1998). Verstijnen et al. show that they\nare two separate constituents of creativity that function differently. Restructuring an existing\nexternal representation (drawing) is difficult to perform mentally, and is facilitated-but only for\nexperienced designers-if one is allowed or encouraged to sketch. Combining (synthesising) parts\nof such a representation, however, can be performed by only using mental imagery.\nAs tools for reinterpretation, activities such as restructuring and combining may be used to\ngenerate new ideas. Drawing is also a tool for other activities. It may serve restructuring,\ncombining, analysis, or simulation. It may also fulfil interactional functions, such as informing, or\nexplaining. It can even have several functions simultaneously (e.g., simulation, explanation, and\nstoring).\nConfrontation, adjustment, and integration of representations play a specific role in collective\ndesign.\n24\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nEvaluation of Representations. According to design methodologies, the generation and evaluation of\nsolutions are two different stages in a design project. Many empirical studies have shown,\nhowever, that designers intertwine the two. The participants in the technical review meetings that\nwe studied (D'Astous et al., 2004) were supposed to follow a particular method in which design\nwas not supposed to occur. They came up, however, with alternative solutions (i.e., they were not\nonly recording the underlying negative evaluations).\nEvaluating an entity consists in assessing it vis-\u00e0-vis one or more references (Bonnardel, 1991).\nIn the context of design, evaluation may occur when a representation is presented by its author,\nor interpreted by colleagues, as an \"idea\" or \"solution proposal.\" Colleagues may interpret a\nrepresentation as a solution proposal without its author presenting it explicitly as such, and they\nmay evaluate it without its author explicitly requesting them to do so (Visser, 1993).\nAccording to their source, different types of evaluative references are distinguished (Bonnardel,\n1991; Ullman et al., 1988), and depending on the type of reference used, evaluation may adopt\ndifferent strategies (Martin, D\u00e9tienne, & Lavigne, 2000, 2001).\nEvaluative references are forms of knowledge. As expected, designers' expertise in a domain\ninfluences their use of these references (D'Astous et al., 2004).\nGiven that in a collective design setting, designers may have different perspectives regarding a\nproject, proposals are not only evaluated on purely technical, \"objective\" evaluative criteria. They\nare also the object of negotiation, and the final agreement concerning a solution also results from\ncompromises between designers (Martin et al., 2000, 2001). In addition, not only solution\nproposals, but also evaluation criteria and procedures undergo evaluation (D'Astous et al., 2004).\nEvaluation has functions at both the action\u2013execution, and the ac-tion\u2013management level of\nthe activity. Designers do not only evaluate design objects (solutions, criteria), but also their design\nprocess, its progression and direction (Visser, 1996).\nConstruction of Interdesigner Compatible Representations. We consider that the main function of both\nlanguage7 and drawing, in collective design, is not the simple expression of ideas previously\ndeveloped in an internal medium. Besides the functions that representations play in both\nindividual and collective design settings, various aspects of the externalisation possibilities of\nrepresentations provide additional functions specific to collective design. These functions go\ntogether with different cooperative activities, which vary according to the phases of the design\nproject.\nDuring distributed design, where the designers' central activity is coordination to manage task\ninterdependencies, representations of course play a role. Yet, it is in codesign that they have a\nparticular function due to its collective setting.\nConstruction of compatible representations when co-designing proceeds through activities\nqualified as \"grounding\" (Clark & Brennan, 1991) and \"cognitive synchronisation\" (D'Astous et\nal., 2004; Falzon, 1994). D'Astous et al. (2004) showed that constructing such representations of\nthe to-be-reviewed design solution was a prerequisite for the prescribed task to occur (i.e., evaluation of this solution).\nGiven that designers have their personal perspectives, collaboration between designers calls for\nconfrontation, adjustment, and integration of these different representations for the designers to\n7\n\nIn this article, \"language\" only refers to verbal language, not to other semiotic systems.\n\n25\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nbe able to reach a common solution. A great amount of time is spent on these activities (D'Astous\net al., 2004; Herbsleb et al., 1995; Karsenty, 1991; Olson, Olson, Carter, & Storrosten, 1992;\nStempfle & Badke-Schaub, 2002).\nThe specific benefit of visual expression in creative collective activity has been examined by\nVan der Lugt (2002). He showed that sketching using brainsketching tools contributes to creative\nactivity in idea-generation groups, but not as expected: it especially supports reinterpretation of\none's own ideas, and so stimulates creativity in individual idea generation. Reinterpretation of\nideas generated by other group members is not enhanced. Collective working is thus not the\npanacea for all complex processes.\nAnother interactional situation is the communication between designers and users. With\nrespect to interactive-software design, Carroll (2002) noticed that there is a big and crucial \"gap\"\nbetween the worldviews held by designers of software and its potential users. Participatory design\nis one way to bridge this gap.\nArgumentation-a \"hot item\" in studies on cooperative activities-has only been touched\nupon in this article (cf. Rittel's 1972/1984 argumentative model). Authors attribute a more or less\nbroad sense to the notion. We conceive argumentation as an attempt to modify the\nrepresentations held by one's interlocutors. Many activities in codesign are thus argumentative.\nIn collective design, representations may function as \"boundary objects\" (Star, 1988), which\nserve as an interface between people from different \"communities of practice.\" They can take on\nmany different forms, both representational and artefactual. Their succeeding does not mean that\npeople view them in the same way.\nAn example of \"boundary representations\"(the term is ours) are the \"technical sketches\" that the\nknitwear designers examined by Eckert (see Stacey & Eckert, 2003, p. 163) use to communicate\nwith the technicians who are to realise the garments. They do not work as boundary objects,\nbecause they do not contain sufficient detail to be understandable by the different parties\ninvolved.\n\n3.3. Discussion\nOur approach to design will be discussed in the general Conclusion. Here we restrict ourselves\nto some specific points to which we will not return. Given the focus of this journal, design of HCI\nreceives special discussion. We further discuss the rare cognitive design research that has been\nconcerned with the result of design. A third discussion point concerns the assumption that certain\ndimensions of the object of design influence the design activity,\ni.e. the idea that, in spite of generic design characteristics, there are different \"forms\" of design.\nFinally, we prolong the discussion of representational structures in design and the activities\noperating on them. The next-and necessary (Anderson, 1978)-step is to link the two in a\nprocess model of design. Based on tendencies identified in cognitive design studies, we will outline\nhere some initial directions regarding functional linkages between representational structures and\nactivities.\nThe Potential Specificity of HCI Design\nDesign in the domain of HCI has been widely discussed for some 25 years. Some authors\n\n26\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nnotice the similarities between the design of user interfaces and that of other types of artefacts\n(e.g., architecture or automotive design). In all these domains, \"a good design relies on principles\nsuch as ease-of-use and providing functionality that meets real needs\" (Ford & Marchak, 1997).\nWinograd (1996) considers that its user-oriented character makes software design comparable to\narchitectural and graphic design, and different from engineering design. He also considers,\nhowever, that the design of interactive software is completely different from other software design\n(Winograd, 1997). Among the arguments advanced for all these claims, none are based on cognitive analyses of the activities.\nIn the literature that seems to tackle design of HCI, design activity is often \"discovered\" as an\nunexplored continent. Presenting some observations, evoking one or more questions, authors\nadvance some general ideas without any reference to the numerous results and models in the\ndomain of cognitive design research. This approach may even be found among those involved in\nCHI, the conference in the domain of HCI. Both empirical work and modelling approaches of the\ncognitive aspects of design activity are rare among contributions to this conference. In 1995, CHI\n\"instituted a new section called design briefings for presentation of notable designs and for\ndiscussion of how those designs came to be\" (Winograd, 1996, p. xiv). These contributions did not\ndiscuss, however, the cognitive aspects of this \"coming to be.\"\nAnother example is a paper in the Special Interest Community in Com-puter-Human\nInteraction (SIGCHI ) bulletin. Dykstra-Erickson, Mackay, and Arnowitz (2001) proposed a\nstarting point for the discussion of design in SIGCHI (p. 109; emphasis ours). Seemingly unaware of\nthe existing tradition in cognitive design studies, the \"fundamental topic\" of the paper is the question: \"what is 'design,' and how do we define 'designers'?\" (p. 109). To answer these questions,\nthe authors introduce three different \"perspectives on design\": Norman's culturo-organisational\nview, Sarah Kuhn's sociotechnical approach, and Kelley's idea that \"design\" and \"designer\" have\na much broader coverage than is generally acknowledged and that design, amongst other aspects,\ncomprises visualising.\" A dilemma for the CHI community [is that] 'design' really isn't something\nthat can be narrowly defined\" (p. 113). The authors \"propose\" that design \"needs to be further\nqualified\" and that this could take place \"at the CHI table\" (p. 113).\nMany studies in the domain of \"interactive computing systems for human use\" (as ACM\nSIGCHI defines HCI) seem to be related to designing. Nevertheless, little attention is paid to the\ncognitive, dynamic aspects of the underlying activity (our software-design study has disclosed\nsome aspects of the way in which a designer's activity may be guided by user considerations;\nVisser, 1987).\nStudies on design knowledge considered relevant for HCI designers rarely analyse the way in\nwhich designers use such knowledge. Referring to authorities such as Norman and Draper (1986),\nauthors advance that the HCI-design model emphasises user-centredness during the design\nprocess, but they do not describe by which cognitive activities designers of HCI systems may realise this\nuser-centredness in their activity.\nIn theory, the design of HCI might exploit certain conclusions from soft-ware-design studies,\nwhich historically occupies a strong position in cognitive design research. However, many of these\nstudies provide little data on actual design. First, most of them concern \"programming\" in the\nsense of coding (i.e., implementation of design decisions, rather than the elaboration of these\ndecisions; cf. the designation of \"Psychology of programming\" and the corresponding Empirical\nStudies of Programmers workshops; see also Gilmore, Winder, & D\u00e9tienne, 1994; Hoc, Green,\n27\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nSamur\u00e7ay, & Gilmore, 1990). Second, most studies concern small tasks- be it design or\ncoding-examined in artificially restricted laboratory conditions, whereas several critical, distinctive characteristics of design only appear in real, professional design. In our software-design study,\nwe corroborated the hypothesis that strategies used in a professional design setting differ, at least\nin part, from those used by novice, student programmers working on limited problems (Visser,\n1987). Recent software-design studies focus on teamwork, but the collaboration concerns\ndesigners, not designers and users.\nThe absence of studies in the domain of HCI design on cognitive, dynamic aspects of the\nactivity may seem surprising. It may be due to the scarcity of cognitive psychologists in the HCI\ncommunity. Ergonomists and others working in the domain of human factors, cognitively\noriented or not, indeed often lack a research tradition into cognitive activities-at a microscopic\nlevel, at least (Garrigou & Visser, 1998).\nThis discussion is not intended to suggest that the research in HCI is not occupied with\nrelevant cognitive aspects. The artefact's impact on the user and its consequences for user\ninvolvement in design are research topics that are central to this domain and that have not been\nmuch examined in other domains of design.\nYet, at the end of this section, the question remains: Is there specificity to HCI design-and so,\nwhat is it? (cf. our section on \"Different Forms of Design\").\nDesign Quality\nIt seems significant to us that cognitive design research has not been greatly occupied with the\nresult of design. Researchers in this domain have noticed that an artefact may take different forms\nwithout one being \"better\" than the other, but they have rarely examined cognitive factors\nunderlying design quality. This quality remains mostly the affair of design engineers and\nmethodologists, who are concerned with measuring, or estimating, both the effort put into the\nprocess and the quality of the result (see Jedlitschka & Ciolkowski, 2004, for software). We have\ndefended elsewhere the idea that measuring process effort and product quality, and establishing a\nrelation between the two cannot be performed without a model of the cognitive activities involved\nin the design task, and without a measurement of these activities (D\u00e9tienne, Burkhardt, & Visser,\n2004). Today, the data that cognitive models may provide regarding this issue is, however, still\nsporadic. It is probably no coincidence that the only cognitive design study on this theme has\nbeen conducted in the framework of a collaboration project between psychologists and\nengineering-design researchers. In this project, Fricke (1999) identified several characteristics of\nthe activities of successful designers. Cognitive design studies, however, have shown at length that\ndesigners often do not implement the corresponding successful procedures or strategies.\nDifferent Forms of Design\n\"Activities as diverse as software design, architectural design, naming and letter-writing appear\nto have much in common\" (Thomas & Carroll, 1979/1984). There are, however, not only\nimportant similarities between design activities in different domains, but also important\ndifferences between design tasks and nondesign tasks (Goel, 1994; Thomas & Carroll,\n1979/1984). We adhere to this idea of \"generic design,\" and yet, we suppose that the nature of\n\n28\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nthe artefact introduces specificities in the corresponding design activities.\nAs far as we know, this assumption has never been the object of specific cognitive analysis.\nWithout presenting any empirical or theoretical evidence, Hubka and Eder (1987) advanced that\nthe type of design object influences the activity.\nOur discussion starts, once again, with Simon's position. If Simon adhered to the hypothesis we\nare formulating here, this could explain, at least in part, his different views on standard design\nand social planning. His publications, however, did not discuss this idea.\nIn this section, we will propose some candidates for dimensions underlying differences between\nforms of design.\nWe do not deal with the effect that the use of different design methodologies may have on\ndesigning and on the resulting design (as shown by Lee & Pennington, 1994, for software design\nusing an object-oriented or a procedural paradigm).\nDependencies Between Function and Form. An initial distinction opposes domains where function and\nform can be aligned, to domains where individual forms are devised to do many functions\nsimultaneously. In the first type of domain, to each particular form corresponds a particular\nfunction. In software design (e.g., to a functional decomposition corresponds directly form\ndecomposition). In the second type of domain (e.g., mechanical design) each design decision can\naffect each subsequent decision, because a goal may be achieved by modifying a previously\nspecified form rather than by introducing a new one (Ullman et al., 1988). One may suppose that\nthese differences imply differences in decomposition activities.\n\"Designing in Space Versus Time\" (Thomas & Carroll, 1979/1984). Research has shown that\ndesigners deal differently with temporal and spatial constraints (Chalm\u00e9, Visser, & Denis, 2004;\ndetailed in Visser, 2004), but the relative difficulty and especially the underlying factors of these\ntwo types of design have not been settled unambiguously.\nDistance Between Design Concept and Final Product. L\u00f6wgren (1995,\np. 94) opposes \"external\" software design (\"design of the external behavior and appearance of the\nproduct, the services it offers to users and its place in the organization\") to other types of design,\ne.g., architectural and engineering design. In external software design \"it is technically possible to\nevolve a software prototype into a final product\"-something difficult (or even impossible) in\nthese other fields. Therefore, in domains such as external software design, \"the 'distance' between\nthe design concept and the final product is shorter than in, say, architecture\" (p. 93). This does\nnot imply, however, that in those domains, design and implementation are not separated. It\nmight, however, clarify our observation that software designers find it particularly difficult to\nseparate design from coding (Visser, 1987).\nDelay of Implementation. Something that has been considered to make the solving of social-science\nproblems quite difficult, is the \"delay from the time a solution is proposed and accepted to when it\nis fully implemented\" (Voss et al., 1983). \"Naturally, a good solution anticipates changes in conditions, but anticipation can be quite difficult\" (Voss et al.). This remark that was formulated with\nrespect to social-science problems is particularly applicable in social domains, but may also hold\nfor other design areas. The underlying factor may influence evaluation of solution proposals.\n\n29\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nPossible Forms of Evaluation. Domains differ in the means that may be used to evaluate design\nproposals (Malhotra, Thomas, Carroll, & Miller, 1980, pp. 129\u2013130). In engineering, \"objective\"\nmeasures of future artefacts' performance can be used. One can calculate whether a particular\ndesign meets functional requirements (e.g., accommodation and maximum load). Using such\nmeasures, different proposals can be ranked somewhat objectively. The results of qualitative\nevaluation on subjective criteria such as aesthetics, are much more difficult to translate into a\n\"score.\"\nArtefacts' Behaviour Over Time. \"Interactive systems are designed to have a certain behavior over\ntime, whereas houses typically are not\" (L\u00f6wgren, 1995, p. 94). Even if this assertion is\nquestionable, their behaviour over time is a dimension on which artefacts differ. Houses may not\ndisplay \"behaviour\" over time, but they change. \"Good\" designers anticipate the transformations\nthat their design may undergo through, for example, its use. Nevertheless, systems such as\norganisations are subject to stronger evolutions than buildings.\nArtefacts' Transformative Nature. Artefacts' behaviour over time is to be distinguished from what\nCarroll et al. (1997, p. 63) call the \"transformative\" nature of certain systems. The systems Carroll\nand al. develop (enabling novel educational activities) \"fundamentally [alter] possibilities for\nhuman behavior and experience.\"\nOther Dimensions. Other possible dimensions are: design of structures vs. design of processes, role of the\nuser in design, maturity of a domain, impact of an artefact on human activity and the possibility to anticipate it.\n\"Software design versus other 'forms' of design\" is a label in search of underlying dimensions.\nOne frequently encounters in the cognitive design research literature allusions to, or implicit\ntestimonies of the specific character of software design compared to other types of design\n(Atwood, McCain, & Williams, 2002). The responsible dimensions remain, however, unexplored.\nOur list of candidate dimensions that might differentiate forms of design is a start for their\ndiscussion and analysis. A further step would be to elucidate if indeed, and if so how these and\nother differences influence design activity and its result, the artefact.\nLinking Representational Structures and Activities\nThis section examines functional linkages between representational structures and activities\nthrough the scheme \"Input representation\u2013Activity\u2013Out-put representation\". Different\ndependencies exist: the input or output representation may constrain an activity (I_Repr or\nO_Repr _ Act), or be constrained by the activity (Act _ I_Repr or O_Repr), or two elements can\nmutually constrain each other (_). The constraint may concern different aspects of an element.\nFor representations, it may, for example, be their external or internal, notational or nonnotational nature (in Goel's 1995 terms).\nOur first observation is a case of Act _ I_Repr, Act constraining the notational nature of\nI_Repr. We suppose that activities concerned with gaining new perspectives on representations\n(association, [re]interpretation, inductive inference) will more often be based on non-notational\nrepresentations, such as sketches and other fluid forms of representation, than on notational\nrepresentations, such as drafts with dimensions and tolerances.\n\n30\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nThe second case is one of Act _ O_Repr, where Act constrains the inter-nal\u2013external character\nof O_Repr. Interpretational activities will specifically result in internal representations -even if\ndesigners may use external representations to proceed to these representational activities.\nThe provisionality that non-notational forms of drawings may convey through roughness, and\nface-to-face, oral communication through specific phrasing and intonation, points to an Act _\nI_Repr relation between these non-notational representational systems and particular\ninteractional activities in cooperative design.\nThe last two examples concern I_Repr _ Act. First, in domains of design concerned with\nphysical artefacts, a common association exists between sim-ulation-based evaluation and\nexternal representations (from two-dimensional drawings to three-dimensional mock-ups).\nSecond, calculation and comparable activities will use notational, more formalised\nrepresentational systems and will, in design, be associated with particular notational types of\nrepresentations such as drafts with dimensions and tolerances. These algorithmic activities may be\nused for the quantitative form of evaluation.\nThe next step toward a process model of design will require identifying more such functional\nlinkages, and, especially, the organisation of the different activities and corresponding\nrepresentations, into a structure, such as the blackboard framework that we adopted in previous\nstudies for the designers' organisation of their activity (Visser, 1994).\n\n4. CONCLUSION\nIn this conclusion, we will first come back to issues that have been central to this article: SIP,\nSIT and design, and design as problem solving. We then onclude our article with a brief review of\nthe proposal we have been intro ducing in this article.\n\n4.1. SIP and SIT, Individual and Collective Design\nAs noticed several times in this article, our critique on the SIP paradigm concerns its\noversystematic view of design. Where Simon seems to focus on the common points between\ndesign and other problem-solving tasks (his \"nothing special\" view), Sch\u00f6n and other SIT\nresearchers seem to be more interested in design's specificities.\nGreeno (1997), once collaborating with Simon (Greeno & Simon, 1988), came to adopt a SIT\nperspective. He judges that the SIP perspective\nTakes the theory of individual cognition as its basis and builds toward a broader theory by\nincrementally developing analyses of additional components that are considered as contexts. The\nsituative perspective takes the theory of social and ecological interaction as its basis and builds toward\na more comprehensive theory by developing increasingly detailed analyses of information structures\nin the contents of people's interactions. (p. 5)\n\nThis viewpoint is compatible with our view that the two positions are not contradictory, but\ncomplementary-not only because SIP would focus on individual design, and SIT on interactions\nin design.\n31\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nNevertheless, the switch of focus in design studies, from individual to collaborative design, has\nentailed an evolution of the theoretical frameworks. The purely cognitive framework based on the\nSIP approach is not sufficient for modelling individual design, but to address the collective,\ninteractional nature of work, it is certainly inadequate. Because of its interest for situational resources, the SIT approach has in principle the potential to propose a more appropriate view on\ndesign. We have seen in this article how recent studies adopting the reflective-practitioner\nviewpoint are developing increasingly detailed analyses of central SIT notions-and not only in\ncollective design settings.\n\n4.2. Design Is Not Problem Solving: Design Involves Problem Solving\nMany authors state that design is not \"problem solving.\" Others consider that design is not only\nproblem \"solving\" but also problem \"setting,\" \"structuring,\" and \"framing\" to name just a few\nother activities advanced. Certain criticisms addressed by SIT proponents at the SIP approach\nare based, in our view, on terminological confusions, especially concerning \"problem\" and\n\"problem solving.\" For a na\u00efve reader, these terms may indeed seem inappropriate when applied\nto design. As we noticed however, even if the technical cognitive-psychology acceptation of\n\"problem solving\" covers a wide range of problem-centred activities, many of them, especially the\nconstruction and use of representations, do not receive much attention in SIP-oriented studies.\nNevertheless, these two activities are at the core of design. That is why, in our view, even if design\ndoes indeed involve problem solving in a broad sense, characterising it as \"problem solving\" does\nnot capture its essence! Design is problem solving in the sense that its requirements generally will\nnot evoke a memorized procedure, but this does not tell us much about the activities used to\n\"solve\" the corresponding \"design problem\"!\n\n4.3. Design as Construction of Representations\nMost features presented in this article as characteristic of design contribute to characterise the\nunderlying activity as being multifaceted: its ill-definedness, complexity, ambiguity, the\nincomplete and especially the conflicting nature of its constraints-and the importance of\nrepresentations, diverse with respect to their abstraction and precision, their internal or external,\nnotational or non-notational character.\nIn an activity that functions by way of representations, knowledge plays a central role.\nRecognition is important, too-and Simon was completely right in highlighting its role. Yet, we\nconsider that Simon overestimated its importance relative to the controlled use of knowledge. To\nrecognise a potentially relevant element of knowledge, there must be memory associations\nbetween target (features of the situation) and source (knowledge elements). Otherwise, controlled\nsearch or exploration has to be used, leading-if one is lucky-to discoveries of unintended,\nuseful consequences.\nAs regards a professional activity as design, the knowledge on which both recognition and\nanalogical reasoning and other knowledge-intensive activities are based, is grounded mainly in\nprofessional experience (but not only; see Visser, 1995b). Such knowledge also shapes the illdefinedness of a problem. For a designer with extensive and long experience in several\napplication domains, a task that constitutes an ill-defined problem for an inexperienced colleague,\n32\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nmay constitute a task with routine aspects. Knowledge-intensive tasks have an evolving nature\nwith respect to their \"problem\" character, their \"routine\" character, their \"ill-definedness\"-and\npossibly even their \"design\" character.\nAdopting an entirely \"problem-solver-oriented\" approach, Thomas and Carroll (1979/1984,\np. 222) proposed viewing design, not as a particular \"type\" of problem, but as a \"way of looking\nat\" a problem-we might say a particular representation of a problem. Theorem proving, for\nexample, can be viewed as designing if, say, the requirement to stay inside certain formal rules is\nrelaxed and creativity is allowed; in this case, although the initial goal was to prove a theorem, the\ngoal in fact becomes \"to find out something interesting.\" In the same way, \"designing\" a house by\napplying a set of standard rules to the stated requirements is no longer \"design\" in a cognitiveactivity oriented sense. Therefore, whether a task is \"design\" depends entirely on the person who\nfaces the task. \"Much of what [people] call technological progress may be viewed as a process of\nrendering ill-structured design problems as more well-structured procedures for accomplishing\nthe same ends-without requiring design\" (Thomas & Carroll, 1979/1984, p. 222). Indeed, if a\ndesign task is no longer open-ended, ill-defined, ambiguous, if its constraints are the object of\nagreement, a \"design problem\" can become a \"transformation prob-lem\"-or even no longer\nconstitute a \"problem\" at all!\nOur current proposal is consequential in that it opens new directions, both for research and for\nsupport. Qualifying design as problem solving does not inform us of the activities and structures\nimplemented. The qualification of design as construction of representations guides the further\nexploration of forms that this construction may take, through still other activities and representational structures, depending on still other dimensions, than we have proposed in this article.\nA new vision of a domain provides new possibilities for its study, and as a consequence opens\nnew views of needs for assistance and the potential support modalities. If domain-specific but\nvaried knowledge, and representational activities and structures are indeed so essential in design,\nif designers' way of looking at their projects is indeed so critical to their success, then a valuable\napproach is the development of systems-not only technological, but also methodological and\norganisational-that may support these activities and structures, and encourage the development\nof such knowledge through designers' involvement in many different types of projects.\n\nNOTES\nAcknowledgments. The author wishes to thank Fran\u00e7oise D\u00e9tienne, Pierre Falzon, and four anonymous\nreviewers for their precious comments on earlier versions of this article. They obliged me to go further in\nmy reflections on design and construction of representations, on design as construction of representations.\nAuthor's Address. Willemien Visser, INRIA-National Institute for Research in Computer Science and\nControl, EIFFEL-Cognition & Cooperation in Design, B\u00e2t. 23 -Rocquencourt B.P. 105, 78153 Le\nChesnay Cedex, France. Email: Willemien.Visser@inria.fr.\nHCI Editorial Record. First manuscript received March 22, 2004. Revisions received September 28, 2004\nand May 11, 2005. Accepted by John M. Carroll. Final manuscript received September 23, 2005. \u2013Editor\n\n33\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nREFERENCES\nAdams, R. S., Turns, J., & Atman, C. J. (2003). Educating effective engineering designers: the role of\nreflective practice. Design Studies, 24(3), 275\u2013294.\nAdelson, B., Littman, D. C., Ehrlich, K., Black, J. B., & Soloway, E. (1985). Novice-ex-pert differences in\nsoftware design. In B. Shackel (Ed.), Human-computer interac-tion-INTERACT '84. Amsterdam: NorthHolland.\nAdelson, B., & Soloway, E. (1988). A model of software design. In M. T. H. Chi, R. Glaser, & M. J. Farr\n(Eds.), The nature of expertise (pp. 185\u2013208). Hillsdale, NJ: Lawrence Erlbaum Associates, Inc.\nAkin, \u00d6. (1979/1984). An exploration of the design process. In N. Cross (Ed.), Developments in design\nmethodology (pp. 189\u2013207). Chichester, UK: Wiley.\nAkin, \u00d6. (1986). Psychology of architectural design. London: Pion.\nAnderson, J. R. (1978). Arguments concerning representations for mental imagery. Psychological Review, 85,\n249\u2013277.\nAtwood, M. E., McCain, K. W., & Williams, J. C. (2002). How does the design community think about design?\nDIS'02, Designing Interactive Systems conference.\nBall, L. J., & Ormerod, T. C. (1995). Structured and opportunistic processes in design: A critical\ndiscussion. International Journal of Human-Computer Studies, 43, 131\u2013151.\nBall, L. J., & Ormerod, T. C. (2000). Putting ethnography to work: The case for a cognitive ethnography\nof design. International Journal of Human-Computer Studies, 53, 147\u2013168.\nBannon, L. J. (1995). The politics of design: representing work. Communications of the ACM, 38(9), 66\u201368.\nBayazit, N. (2004). Investigating design: a review of forty years of design research. Design Issues, 20(1),\n16\u201329.\nBaykan, C. A. (1996). Design strategies. In N. Cross, H. Christiaans, & K. Dorst (Eds.), Analysing design\nactivity (pp. 133\u2013150). Chichester, UK: Wiley.\nBisseret, A., Figeac-Letang, C., & Falzon, P. (1988). Modeling opportunistic reasonings: the cognitive activity of traffic\nsignal setting technicians (Research report No. 898). Rocquencourt, France: Institut National de Recherche\nen Informatique et en Automatique.\nBonnardel, N. (1991). Criteria used for evaluation of design solutions. In Y. Qu\u00e9innec & F. Daniellou\n(Eds.), 11th Congress of the International Ergonomics Association: Designing for everyone and everybody (Vol. 2, pp.\n1043\u20131045). London: Taylor & Francis.\nBrooks, R. (1991). Intelligence without representation. Artificial Intelligence, 47(1\u20133), 139\u2013159.\nBucciarelli, L. (1984). Reflective practice in engineering design. Design Studies, 5(3), 185\u2013190.\nBurkhardt, J.-M., & D\u00e9tienne, F. (1995, 27\u201329 June). An empirical study of software reuse by experts in objectoriented design. Proceedings of INTERACT'95, Lillehammer, Norway.\nByrne, R. (1977). Planning meals: Problem-solving on a real data-base. Cognition, 5, 287\u2013332.\nCagan, J., Kotovsky, K., & Simon, H. A. (2001). Scientific discovery and inventive engineering design:\nCognitive and computational similarities. In E. K. Antonsson & J. Cagan (Eds.), Formal engineering design\nsynthesis (pp. 442\u2013465). New York: Cambridge University Press.\nCarroll, J. M. (2002). Dimensions of participation. Elaborating Herbert Simon's \"Science of Design\". Workshop\n\"User-Centred Design\" of the International Conference In Honour of Herbert Simon \"The Sciences of\nDesign. The Scientific Challenge for the 21st Century.\" Lyon, France: INSA.\nCarroll, J. M., Rosson, M. B., Chin, G., & Koenemann, J. (1997, 18\u201320 August). Requirements development:\nstages of opportunity for collaborative needs discovery. DIS'97 conference, Designing Interactive Systems:\nprocesses, practices, methods, and techniques, Amsterdam.\nCarroll, J. M., Rosson, M. B., Chin, G., & Koenemann, J. (1998). Requirements development in scenariobased design. IEEE Transactions on Software Engineering, 24(12), 1156\u20131170.\nChalm\u00e9, S., Visser, W., & Denis, M. (2004). Cognitive effects of environmental knowledge on urban route\n\n34\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nplanning strategies. In T. Rothengatter & R. D. Huguenin (Eds.), Traffic and Transport Psychology. Theory\nand Application (pp. 61\u201371). Amsterdam: Elsevier.\nClark, H. H., & Brennan, S. E. (1991). Grounding in communication. In L. Resnick, J.-M. Levine & S. D.\nTeasley (Eds.), Perspectives on socially shared cognition (pp. 127\u2013149). Washington, DC: APA.\nCross, N. (2001). Design cognition: results from protocol and other empirical studies of design activity. In\nC. Eastman, W. M. McCracken, & W. C. Newstetter (Eds.), Design knowing and learning: cognition in design\neducation (pp. 79\u2013103). Amsterdam: Elsevier.\nCross, N. (2004). Expertise in design: an overview. Design Studies. Special issue Expertise in design, 25(5),\n427\u2013442.\nCross, N., Christiaans, H., & Dorst, K. (Eds.). (1996). Analysing design activity. Chichester, UK: Wiley.\nCross, N., Dorst, K., & Roozenburg, N. F. M. (Eds.). (1992). Research in design thinking. Delft, The\nNetherlands: Delft University Press.\nDarke, J. (1979/1984). The primary generator and the design process. In N. Cross (Ed.), Developments in\ndesign methodology (pp. 175\u2013188). Chichester, UK: Wiley\nDarses, F. (1990a, 2\u20136 September). An assessment of the constraint satisfaction approach for design: A psychological\ninvestigation. 5th European Conference on Cognitive Ergonomics (ECCE-5), Urbino, Italia.\nDarses, F. (1990b). Constraints in design: towards a methodology of psychological analysis based on AI Formalisms.\nINTERACT'90, North Holland.\nD'Astous, P., D\u00e9tienne, F., Visser, W., & Robillard, P. N. (2004). Changing our view on design evaluation\nmeetings methodology: a study of software technical review meetings. Design Studies, 25, 625\u2013655.\nDavies, S. P. (1991). Characterizing the program design activity: neither strictly top-down nor globally\nopportunistic. Behaviour & Information Technology, 10(3), 173\u2013190.\nDecortis, F., Leclercq, P., Boulanger, C., & Safin, S. (2004, March). New digital environments to support\ncreativity. International Seminar on Learning and Technology at Work, Institute of Education, London.\nDesign Studies. (1998). Special issue on Sketching and drawing in design. Design Studies, 19(4), 385\u2013546.\nD\u00e9tienne, F. (2002). Software design. Cognitive aspects. London: Springer.\nD\u00e9tienne, F., Burkhardt, J.-M., & Visser, W. (2004). Cognitive effort in collective software design:\nmethodological perspectives in cognitive ergonomics. In A. Jedlitschka & M. Ciolkowski (Eds.), The\nFuture of Empirical Studies in Software Engi\nneering. 2nd International Workshop, WSESE 2003, Roman Castles, Italy, September 2003 Proceedings (pp. 23\u201331).\nStuttgart, Germany: Frauenhofer IRB Verlag.\nDe Terssac, G., & Chabaud, C. (1990). R\u00e9f\u00e9rentiel op\u00e9ratif commun et fiabilit\u00e9 [Operative frames of\nreference and reliablity]. In J. Leplat & G. De Terssac (Eds.), Les facteurs humains de la fiabilit\u00e9 dans les\nsyst\u00e8mes complexes [Human factors of reliablity in complex systems] (pp. 111\u2013139). Paris: Octar\u00e8s.\nDillon, A., & Sweeney, M. (1988, 5\u20139 September). The application of cognitive psychology to CAD. HCI'88\nConference on People and Computers IV, Manchester, GB.\nDo, E. Y.-L., Gross, M. D., Neiman, B., & Zimring, C. M. (2000). Intentions in and relations among\ndesign drawings. Design Studies, Special issue on Visual design representation, 21(5), 483\u2013503.\nDorst, K. (1997). Describing design. A comparison of paradigms, doctoral dissertation, Delft, The Netherlands:\nTechnische Universiteit Delft [University of Technology].\nDorst, K., & Dijkhuis, J. (1995). Comparing paradigms for describing design activity. Design Studies, 16(2),\n261\u2013274.\nDreyfus, H. L. (2002). Intelligence Without Representation-Merleau-Ponty's Critique of Mental\nRepresentation: The Relevance of Phenomenology to Scientific Explanation. Phenomenology and the\nCognitive Sciences. Special issue on Dreyfus and Representationalism, 1(4), 367\u2013383.\nDykstra-Erickson, E., Mackay, W., & Arnowitz, J. (2001). design (of) interactions, march-april, 109\u2013117.\nEastman, C. (1969). Cognitive processes and ill-defined problems: a case study of design. In D. Walker &\nL. M. Norton (Eds.), IJCAI'69, International Joint Conference on Artificial Intelligence (pp. 669\u2013690). San\n\n35\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nMateo, CA: Kaufmann.\nEastman, C. (2001). New directions in design cognition: studies of representation and recall. In C.\nEastman, W. M. McCracken, & W. C. Newstetter (Eds.), Design knowing and learning: cognition in design\neducation (pp. 147\u2013198). Amsterdam: Elsevier.\nFalzon, P. (1994). Dialogues fonctionnels et activit\u00e9 collective [Functional dialogs and collective activity].\nLe Travail Humain, 57(4), 299\u2013312.\nFord, S., & Marchak, F. M. (1997). The future of visual interaction design? SIGCHI Bulletin, 29(1).\nFricke, G. (1999). Successful approaches in dealing with differently precise design problems. Design Studies,\nSpecial Issue: Empirical Studies of Engineering Design in Germany, 20(5), 417\u2013430.\nGarrigou, A., & Visser, W. (1998, 9\u201311 f\u00e9vrier). L'articulation d'approches macroscopiques et microscopique en\nergonomie: une tentative de prise de recul sur une pratique de recherche en cours [Organising macroscopic and microscopic\napproaches in ergonomics: an attempt to stand back from a research practice in progress]. Actes des Deuxi\u00e8mes\nJourn\u00e9es \"Recherche et Ergonomie\" de la SELF (Soci\u00e9t\u00e9 d'Ergonomie de Langue Fran\u00e7aise), Toulouse\n(France).\nGero, J. S. (1998). Conceptual designing as a sequence of situated acts. In I. Smith (Ed.), Artificial Intelligence\nin structured engineering (pp. 165\u2013177). Berlin: Springer.\nGilhooly, K. J. (1989). Human and machine problem solving: toward a comparative cognitive science. In\nK. J. Gilhooly (Ed.), Human and machine problem solving (pp. 1\u201312). New York: Plenum.\nGilmore, D. J. (1990). Methodological issues in the study of programming. In J. M. Hoc, T. Green, R.\nSamur\u00e7ay & D. Gilmore (Eds.), Psychology of programming. London: Academic.\nGilmore, D. J., Winder, R., & D\u00e9tienne, F. (Eds.). (1994). User-centred requirements for software engineering\nenvironments. Berlin: Springer.\nGoel, V. (1994). A comparison of design and nondesign problem spaces. Artificial Intelligence in Engineering, 9,\n53\u201372.\nGoel, V. (1995). Sketches of thought. Cambridge: MIT Press.\nGoel, V., & Pirolli, P. (1992). The structure of design problem spaces. Cognitive Science, 16, 395\u2013429.\nGreeno, J. G. (1997). Response: On claims that answer the wrong questions. Educational Researcher, 26(1),\n5\u201317.\nGreeno, J. G., & Moore, J. L. (1993). Situativity and symbols: Response to Vera and Simon. Cognitive\nScience, 17(1), 49\u201360.\nGreeno, J. G., & Simon, H. A. (1988). Problem solving and reasoning. In R. C. Atkinson, R. J. Herrnstein,\nG. Lindzey, & R. D. Luce (Eds.), Stevens' handbook of experimental psychology (2nd ed., Vol. II, pp. 589\u2013672).\nNew York: Wiley.\nGuindon, R., Krasner, H., & Curtis, B. (1987). Breakdowns and processes during the early activities of\nsoftware design by professionals. In G. M. Olson, S. Sheppard, &\nE. Soloway (Eds.), Empirical studies of programmers: Second workshop. Norwood, NJ:\nAblex. Hayes-Roth, B., & Hayes-Roth, F. (1979). A cognitive model of planning.\nCognitive Science, 3, 275\u2013310.\nHerbsleb, J. D., Klein, H., Olson, G. M., Brunner, H., Olson, J. S., & Harding, J. (1995). Object-oriented\nanalysis and design in software project teams. Human-Com-puter Interaction, 10(2 & 3), 249\u2013292.\nHoc, J.-M., Green, T. R. G., Samur\u00e7ay, R., & Gilmore, D. J. (Eds.). (1990). Psychology of programming.\nLondon: Academic.\nHubka, V., & Eder, W. E. (1987). A scientific approach to engineering design. Design Studies, 8(3), 123\u2013137.\nJedlitschka, A., & Ciolkowski, M. (Eds.). (2004). The Future of Empirical Studies in Software Engineering. 2nd\nInternational Workshop, WSESE 2003, Roman Castles, Italy, September 2003 Proceedings. Stuttgart, Germany:\nFrauenhofer IRB Verlag.\nJeffries, R., Turner, A. A., Polson, P. G., & Atwood, M. E. (1981). The processes involved in designing\nsoftware. In J. R. Anderson (Ed.), Cognitive skills and their acquisition (pp. 255\u2013283). Hillsdale, NJ:\n\n36\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nLawrence Erlbaum Associates, Inc.\nJohnson-Laird, P. N. (1989). Analogy and the exercise of creativity. In S. Vosniadou &\nA. Ortony (Eds.), Similarity and analogical reasoning. Cambridge: Cambridge University\nPress. Kant, E. (1985). Understanding and automating algorithm design. IEEE\nTransactions on Software Engineering, SE-11, 1361\u20131374. Kaplan, C. A., & Simon, H. A.\n(1990). In search of insight. Cognitive Psychology, 22, 374\u2013419.\nKarsenty, L. (1991). Design strategies in database conceptual modelling. In Y. Qu\u00e9innec & F. Daniellou\n(Eds.), 11th Congress of the International Ergonomics Association: Designing for everyone and everybody. London:\nTaylor & Francis.\nKavakli, M., Scrivener, S. A. R., & Ball, L. (1998). Structure in idea sketching behaviour. Design Studies,\nSpecial Issue on Sketching and Drawing in Design, 19(4), 485\u2013517.\nKelley, D., & Hartfield, B. (1996). The designer's stance. In T. Winograd (Ed.), Bringing design to software\n(pp. 151\u2013170). New York: ACM Press.\nKlahr, D., & Simon, H. A. (2001). What have psychologists (and others) discovered about the process of\nscientific discovery? Current Directions in Psychological Science, June, 10(3), 75\u201379.\nKulkarni, D., & Simon, H. A. (1988). The processes of scientific discovery: The strategy of\nexperimentation. Cognitive Science, 12, 139\u2013175.\nLarkin, J. H., & Simon, H. A. (1987). Why a diagram is (sometimes) worth 10,000 words. Cognitive Science,\n11, 65\u2013100.\nLebahar, J. C. (1983). Le dessin d'architecte. Simulation graphique et r\u00e9duction d'incertitude [Architectural drawing.\nGraphic simulation and uncertainty reduction]. Roquevaire, France: Editions Parenth\u00e8ses.\nLeclercq, P. (1999). Interpretative tool for architectural sketches. 1st International Roundtable Conference on\nVisual and Spatial Reasoning in Design. \"Computational and cognitive approaches.\"Cambridge, MA:\nMIT.\nLee, A., & Pennington, N. (1994). The effects of paradigms on cognitive activities in design. International\nJournal of Human-Computer Studies, 40, 577\u2013601.\nLeplat, J. (1981). Task analysis and activity analysis in situations of field diagnosis. In J. Rasmussen & W.\nB. Rouse (Eds.), Human Detection and Diagnostic of System Failures (pp. 289\u2013300). New York: Plenum.\nLogan, B., & Smithers, T. (1993). Creativity and design as exploration. In J. S. Gero &\nM. L. Maher (Eds.), Modeling creativity and knowledge-based design (pp. 193\u2013175). Hillsdale, NJ:\nLawrence Erlbaum Associates, Inc. L\u00f6wgren, J. (1995). Applying design methodology to software\ndevelopment. DIS'95, Designing Interactive Systems conference. Malhotra, A., Thomas, J. C.,\nCarroll, J. M., & Miller, L. A. (1980). Cognitive processes in design. International Journal of\nMan-Machine Studies, 12, 119\u2013140.\nMartin, G., D\u00e9tienne, F., & Lavigne, E. (2000, 17\u201320 juillet). Negotiation in collaborative assessment of design\nsolutions: an empirical study on a Concurrent Engineering process. International Conference on Concurrent\nEngineering, CE'2000, Lyon (France).\nMartin, G., D\u00e9tienne, F., & Lavigne, E. (2001, July 9\u201313). Analysing viewpoints in design through the\nargumentation process. INTERACT2001, Tokyo, Japan.\nMayer, R. E. (1989). Human nonadversary problem solving. In K. J. Gilhooly (Ed.), Human and machine\nproblem solving (pp. 39\u201356). New York: Plenum.\nMcGown, A., Green, G., & Rodgers, P. A. (1998). Visible ideas: information patterns of conceptual sketch\nactivity. Design Studies, 19(4), 431\u2013453.\nNardi, B. A. (1996). Studying context: a comparison of activity theory, situated action models, and\ndistributed cognition. In B. A. Nardi (Ed.), Context and consciousness. Activity theory and human-computer\ninteraction (2nd printing 1997) (pp. 69\u2013102). Cambridge, MA: MIT Press.\nNavinchandra, D. (1991). Exploration and innovation in design. New-York: Springer. Neiman, B., Gross, M.\nD., & Do, E. Y.-L. (1999, August 23\u201325). Sketches and their functions in early design. A retrospective analysis of a\n\n37\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\npavilion house. 4th Design Thinking Research Symposium, DTRS99, Cambridge, MA.\nNewell, A. (1969). Heuristic programming: Ill structured problems. In J. Aronovsky (Ed.), Progress in\noperations research. New York: Wiley.\nNewell, A., & Simon, H. A. (1972). Human problem solving. Englewood Cliffs, NJ: Prentice Hall.\nNorman, D. A. (1993). Cognition in the head and in the world: An introduction to the special issue on\nsituated action. Cognitive Science, 17(1), 1\u20136.\nNorman, D. A., & Draper, S. W. (Eds.). (1986). User centered system design. New perspectives on human-computer\ninteraction. Hillsdale, NJ: Lawrence Erlbaum Associates, Inc.\nOchanine, D. (1978). Le r\u00f4le des images op\u00e9ratives dans la r\u00e9gulation des activit\u00e9s de travail [The role of\noperative images in work activity regulation]. Psychologie et Education, 3, 63\u201379.\nOlson, G. M., Olson, J. S., Carter, M. R., & Storrosten, M. (1992). Small group design meetings: An\nanalysis of collaboration. Human-Computer Interaction, 7, 347\u2013374.\nRasmussen, J. (1986). Information processing and human-machine interaction: an approach to cognitive engineering.\nAmsterdam: North-Holland.\nReitman, W. (1964). Heuristic decision procedures, open constraints, and the structure of ill-defined\nproblems. In M. W. Shelley & G. L. Bryan (Eds.), Human judgments and optimality (pp. 282\u2013315). New\nYork: Wiley.\nRittel, H. W. J. (1972/1984). Second-generation design methods (Interview with Donald P. Grant and\nJean-Pierre Protzen). In N. Cross (Ed.), Developments in design methodology (pp. 317\u2013327). Chichester, UK:\nWiley.\nRittel, H. W. J., & Webber, M. M. (1973/1984). Planning problems are wicked problems. In N. Cross\n(Ed.), Developments in design methodology. Chichester, UK: Wiley.\nRodgers, P. A., Green, G., & McGown, A. (2000). Using concept sketches to track design progress. Design\nStudies, Special issue on Visual design representation, 21(5), 451\u2013464.\nRoozenburg, N. F. M., & Dorst, K. (1999). Describing design as a reflective practice: Observations on\nSch\u00f6n's theory of practice. In E. Frankenberger, P. Badke-Schaub & H. Birkhofer (Eds.), Designers. The\nkey to successful product development (pp. 29\u201341). London: Springer.\nSch\u00f6n, D. A. (1983). The reflective practitioner: How professionals think in action.New York: Basic Books.\nSch\u00f6n, D. A. (1988). Designing: Rules, types and worlds. Design Studies, 9(3), 181\u2013190.\nSch\u00f6n, D. A. (1992). Designing as reflective conversation with the materials of a design situation.\nKnowledge-Based Systems, 5(1), 3\u201314.\nSch\u00f6n, D. A., & Wiggins, G. (1992). Kinds of seeing and their functions in designing. Design Studies, 13(2),\n135\u2013156.\nScrivener, S. A. R. (1997). Drawing from visual thinking. TRACEY electronic journal, Issue \"Thinking\"\nRetrieved\nSeptember\n21,\n2005,\nfrom\nhttp://www.lboro.ac.uk/departments/ac/tracey/thin/scriven.html\nSimon, H. A. (1969/1999). The sciences of the artificial (3rd, rev. ed. 1996; Orig. ed. 1969; 2nd, rev. ed. 1981) (3\ned.). Cambridge, MA: MIT Press.\nSimon, H. A. (1971/1975). Style in design. In C. Eastman (Ed.), Spatial synthesis in com-puter-aided building\ndesign (pp. 287\u2013309). London: Applied Science Publishers.\nSimon, H. A. (1973/1984). The structure of ill-structured problems. Artificial Intelligence, 4, 181\u2013201.\nSimon, H. A. (1979). Information processing models of cognition. Annual Review of Psychology, 30, 363\u2013396.\nSimon, H. A. (1987/1995). Problem forming, problem finding, and problem solving in design. In A.\nCollen & W. W. Gasparski (Eds.), Design and systems: General applications of methodology (Vol. 3, pp.\n245\u2013257). New Brunswick, NJ: Transaction Publishers.\nStacey, M., & Eckert, C. (2003). Against ambiguity. Computer Supported Cooperative Work, 12(2), 153\u2013183.\nStar, S. L. (1988). The structure of ill-structured solutions: heterogeneous prob-lem-solving, boundary\nobjects and distributed artificial intelligence. In M. Huhns & L. Gasser (Eds.), Distributed Artificial\n38\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\nIntelligence (Vol. 3, pp. 37\u201354). Los Altos, CA: Morgan Kaufman.\nStefik, M. J. (1981a). Planning and meta-planning (MOLGEN: Part 2). Artificial Intelligence, 16, 141\u2013170.\nStefik, M. J. (1981b). Planning with constraints (MOLGEN: Part 1). Artificial Intelligence, 16, 111\u2013140.\nStempfle, J., & Badke-Schaub, P. (2002). Thinking in design teams. An analysis of team communication.\nDesign Studies, 23(5), 473\u2013496.\nStolterman, E. (1991). How system designers think. About design and methods. Some reflections based on\nan interview study. e-SJIS.org, Scandinavian Journal of Information Systems, 3, 137\u2013150.\nSuchman, L. A. (1995). Making work visible. Communications of the ACM, 38(9), 56\u201364.\nThomas, J. C. (1989). Problem solving by human-machine interaction. In K. J. Gilhooly (Ed.), Human and\nmachine problem solving (pp. 317\u2013362). New York: Plenum.\nThomas, J. C., & Carroll, J. M. (1979/1984). The psychological study of design. Design Studies, 1(1), 5\u201311.\nAlso in Cross, Nigel (Ed.) (1984). Developments in design methodology (pp. 1221\u20131235). Chichester, UK:\nWiley.\nTseng, W., Scrivener, S. A. R., & Ball, L. (2002). The impact of functional knowledge on sketching. In E.\nEdmonds, L. Candy, T. Kavanagh & T. Hewett (Eds.), C&C'02. Creativity and Cognition (pp. 57\u201364).\nUllman, D. G., Dietterich, T. G., & Staufer, L. A. (1988). A model of the mechanical design process based\non empirical data. AI EDAM, 2, 33\u201352.\nValkenburg, R. (2001). Sch\u00f6n revised: describing team designing with reflection-in-ac-tion. In P. Lloyd &\nH. Christiaans (Eds.), Proceedings of DTRS 5 (pp. 315\u2013329). Delft, The Netherlands: Delft University\nPress Science.\nValkenburg, R., & Dorst, K. (1998). The reflective practice of design teams. Design Studies, 19(3), 249\u2013271.\nVan der Lugt, R. (2000). Developing a graphic tool for creative problem solving in design groups. Design\nStudies, Special issue on Visual design representation, 21(5), 505\u2013522.\nVan der Lugt, R. (2002). Functions of sketching in design idea generation meetings. In\nE. Edmonds, L. Candy, T. Kavanagh & T. Hewett (Eds.), C&C'02. Creativity and Cognition.\nVerstijnen, I. M., Heylighen, A., Wagemans, J., & Neuckermans, H. (2001, 17\u201319 July). Sketching, analogies,\nand creativity. On the shared research interests of psychologists and designers. 2nd International Conference on\nVisual and Spatial reasoning in Design, VR'01, Bellagio, Lake Como, Italy.\nVerstijnen, I. M., Leeuwen, C. V., Goldschmidt, G., Hamel, R., & Hennessey, J. M. (1998). Sketching and\ncreative discovery. Design Studies, Special issue on sketching and drawing in design, 19(4), 519\u2013546.\nVisser, W. (1987). Strategies in programming programmable controllers: a field study on a professional\nprogrammer. In G. M. Olson, S. Sheppard, & E. Soloway (Eds.), Empirical studies of programmers: Second\nworkshop (pp. 217\u2013230). Norwood, NJ: Ablex.\nVisser, W. (1988). Giving up a hierarchical plan in a design activity (Research report No. 814). Rocquencourt\n(France): Institut National de Recherche en Informatique et en Automatique. Also accessible at\nhttp://www.inria.fr/rrrt/rr-0814.html\nVisser, W. (1990). More or less following a plan during design: opportunistic deviations in specification.\nInternational Journal of Man-Machine Studies. Special issue: What programmers know, 33, 247\u2013278.\nVisser, W. (1991). Evocation and elaboration of solutions: Different types of prob-lem-solving actions. An\nempirical study on the design of an aerospace artifact. In T. Kohonen & F. Fogelman-Souli\u00e9 (Eds.),\nThird COGNITIVA symposium. COGNITIVA\n90. At the crossroads of Artificial Intelligence, Cognitive science, and Neuroscience, Paris (pp. 689\u2013696). Amsterdam:\nElsevier. Also accessible at http://hal.inria.fr/ inria-00000165\nVisser, W. (1992). Design organization: There is more to expert knowledge than is dreamed of in the planner's philosophy\n(Research report No. 1765). Rocquencourt (France): Institut National de Recherche en Informatique et\nen Automatique. Also in J. Perrin & D. Vinck (Eds.), The role of design in the shaping of technology.\nProceedings from the COST A3 and COST A4 workshop, Lyon, France, 3 and 4 February 1995 (pp.\n\n39\n\n\fThis text is a post-print of an article published in Human-Computer Interaction,\nSpecial Issue \"Foundations of Design in HCI,\" 21(1), 103-152.\nThe original publication is available at\nhttp://www.leaonline.com/doi/abs/10.1207/s15327051hci2101_4?cookieSet=1&journalCode=hci\n\n213\u2013269). Luxembourg: Office for Official Publications of the European Communities. Also accessible\nat http://www.inria.fr/rrt/rr=1765.html\nVisser, W. (1993). Collective design: A cognitive analysis of cooperation in practice. In N. F. M.\nRoozenburg (Ed.), Proceedings of ICED 93, 9th International Conference on Engineering Design (Vol. 1, pp.\n385\u2013392). Z\u00fcrich: HEURISTA.\nVisser, W. (1994). Organisation of design activities: opportunistic, with hierarchical episodes. Interacting\nWith Computers, 6(3), 239\u2013274 (Executive summary: 235\u2013238).\nVisser, W. (1995a). Reuse of knowledge: Empirical studies. In M. Veloso & A. Aamodt (Eds.), Case-based\nreasoning research and development (pp. 335\u2013346). Berlin: Springer.\nVisser, W. (1995b). Use of episodic knowledge and information in design problem solving. Design Studies,\n16(2), 171\u2013187.\nVisser, W. (1996). Two functions of analogical reasoning in design: a cognitive-psychology approach.\nDesign Studies, 17, 417\u2013434.\nVisser, W. (2004). Dynamic aspects of design cognition: Elements for a cognitive model of design (Research report No.\n5144). Rocquencourt, France: Institut National de Recherche en Informatique et en Automatique. Also\naccessible at http://www.inria.fr/rrrt/rr-5144.html\nVisser, W., & Hoc, J.-M. (1990). Expert software design strategies. In J.-M. Hoc, T. Green, R. Samur\u00e7ay\n& D. Gilmore (Eds.), Psychology of programming (pp. 235\u2013250). London: Academic.\nVisser, W., & Trousse, B. (1993). Reuse of designs: desperately seeking an interdisciplinary cognitive\napproach. In W. Visser (Ed.), Proceedings of the IJCAI Thirteenth International Joint Conference on Artificial\nIntelligence Workshop \"Reuse of designs: an interdisciplinary cognitive approach\", Chamb\u00e9ry (France), August 29, 1993\n(pp. 1\u201314 of 11\u201313). Rocquencourt (France): Institut National de Recherche en Informatique et en\nAutomatique.\nVon Glasersfeld, E. (1981). An introduction to radical constructivism. Retrieved September 21, 2005, from\nhttp://srri.nsm.umass.edu/vonGlasersfeld/onlinePapers/html/082.html\nVoss, J. F., Greene, T. R., Post, T. A., & Penner, B. C. (1983). Problem-solving skill in the social sciences.\nIn G. Bower (Ed.), The psychology of learning and motivation (Vol. 17, pp. 165\u2013213). New York: Academic\nPress.\nWhitefield, A. (1986). An analysis and comparison of knowledge use in designing with and without CAD.\nIn A. Smith (Ed.), Knowledge engineering and computer modelling in CAD. Proceedings of CAD86. Seventh\nInternational Conference on the Computer as a Design Tool. London: Butterworths.\nWinograd, T. (Ed.). (1996). Bringing design to software. New York: ACM Press.\nWinograd, T. (1997). From computing machinery to interaction design. (Retrieved September 21, 2005, from\nhttp://hci.stanford.edu/winograd/acm97.html)\nZhang, J. (1997). The nature of external representations in problem solving. Cognitive Science, 21(2),\n179\u2013218.\n\n40\n\n\f"}