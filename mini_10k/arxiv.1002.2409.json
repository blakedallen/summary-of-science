{"id": "http://arxiv.org/abs/1002.2409v1", "guidislink": true, "updated": "2010-02-11T19:58:10Z", "updated_parsed": [2010, 2, 11, 19, 58, 10, 3, 42, 0], "published": "2010-02-11T19:58:10Z", "published_parsed": [2010, 2, 11, 19, 58, 10, 3, 42, 0], "title": "Changing Neighbors k Secure Sum Protocol for Secure Multi Party\n  Computation", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1002.1797%2C1002.4791%2C1002.4123%2C1002.3236%2C1002.4153%2C1002.3966%2C1002.0350%2C1002.4568%2C1002.1758%2C1002.0754%2C1002.4982%2C1002.0814%2C1002.4594%2C1002.3829%2C1002.2532%2C1002.3040%2C1002.4612%2C1002.0628%2C1002.3364%2C1002.1660%2C1002.3045%2C1002.4769%2C1002.1208%2C1002.1008%2C1002.0415%2C1002.1937%2C1002.3843%2C1002.0237%2C1002.2054%2C1002.0644%2C1002.3582%2C1002.1794%2C1002.2522%2C1002.4218%2C1002.3846%2C1002.4566%2C1002.4882%2C1002.1922%2C1002.2718%2C1002.0469%2C1002.1974%2C1002.1085%2C1002.3756%2C1002.2558%2C1002.0768%2C1002.0665%2C1002.4768%2C1002.2208%2C1002.3838%2C1002.4451%2C1002.1269%2C1002.1344%2C1002.2409%2C1002.3961%2C1002.0357%2C1002.4966%2C1002.2534%2C1002.3646%2C1002.4283%2C1002.4443%2C1002.1360%2C1002.2676%2C1002.2843%2C1002.1962%2C1002.1260%2C1002.2891%2C1002.2205%2C1002.0797%2C1002.0604%2C1002.0338%2C1002.2867%2C1002.0883%2C1002.4567%2C1002.4047%2C1002.0605%2C1002.3226%2C1002.4236%2C1002.1936%2C1002.4690%2C1002.3003%2C1002.1248%2C1002.3197%2C1002.0130%2C1002.1843%2C1002.2819%2C1002.1370%2C1002.2286%2C1002.3953%2C1002.2002%2C1002.0917%2C1002.1799%2C1002.3206%2C1002.2903%2C1002.1236%2C1002.2779%2C1002.0090%2C1002.0292%2C1002.4446%2C1002.0183%2C1002.0102%2C1002.0029&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Changing Neighbors k Secure Sum Protocol for Secure Multi Party\n  Computation"}, "summary": "Secure sum computation of private data inputs is an important component of\nSecure Multi party Computation (SMC).In this paper we provide a protocol to\ncompute the sum of individual data inputs with zero probability of data\nleakage. In our proposed protocol we break input of each party into number of\nsegments and change the arrangement of the parties such that in each round of\nthe computation the neighbors are changed. In this protocol it becomes\nimpossible for semi honest parties to know the private data of some other\nparty.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1002.1797%2C1002.4791%2C1002.4123%2C1002.3236%2C1002.4153%2C1002.3966%2C1002.0350%2C1002.4568%2C1002.1758%2C1002.0754%2C1002.4982%2C1002.0814%2C1002.4594%2C1002.3829%2C1002.2532%2C1002.3040%2C1002.4612%2C1002.0628%2C1002.3364%2C1002.1660%2C1002.3045%2C1002.4769%2C1002.1208%2C1002.1008%2C1002.0415%2C1002.1937%2C1002.3843%2C1002.0237%2C1002.2054%2C1002.0644%2C1002.3582%2C1002.1794%2C1002.2522%2C1002.4218%2C1002.3846%2C1002.4566%2C1002.4882%2C1002.1922%2C1002.2718%2C1002.0469%2C1002.1974%2C1002.1085%2C1002.3756%2C1002.2558%2C1002.0768%2C1002.0665%2C1002.4768%2C1002.2208%2C1002.3838%2C1002.4451%2C1002.1269%2C1002.1344%2C1002.2409%2C1002.3961%2C1002.0357%2C1002.4966%2C1002.2534%2C1002.3646%2C1002.4283%2C1002.4443%2C1002.1360%2C1002.2676%2C1002.2843%2C1002.1962%2C1002.1260%2C1002.2891%2C1002.2205%2C1002.0797%2C1002.0604%2C1002.0338%2C1002.2867%2C1002.0883%2C1002.4567%2C1002.4047%2C1002.0605%2C1002.3226%2C1002.4236%2C1002.1936%2C1002.4690%2C1002.3003%2C1002.1248%2C1002.3197%2C1002.0130%2C1002.1843%2C1002.2819%2C1002.1370%2C1002.2286%2C1002.3953%2C1002.2002%2C1002.0917%2C1002.1799%2C1002.3206%2C1002.2903%2C1002.1236%2C1002.2779%2C1002.0090%2C1002.0292%2C1002.4446%2C1002.0183%2C1002.0102%2C1002.0029&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Secure sum computation of private data inputs is an important component of\nSecure Multi party Computation (SMC).In this paper we provide a protocol to\ncompute the sum of individual data inputs with zero probability of data\nleakage. In our proposed protocol we break input of each party into number of\nsegments and change the arrangement of the parties such that in each round of\nthe computation the neighbors are changed. In this protocol it becomes\nimpossible for semi honest parties to know the private data of some other\nparty."}, "authors": ["Rashid Sheikh", "Beerendra Kumar", "Durgesh Kumar Mishra"], "author_detail": {"name": "Durgesh Kumar Mishra"}, "author": "Durgesh Kumar Mishra", "arxiv_comment": "IEEE format, International Journal of Computer Science and\n  Information Security, IJCSIS January 2010, ISSN 1947 5500,\n  http://sites.google.com/site/ijcsis/", "links": [{"href": "http://arxiv.org/abs/1002.2409v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1002.2409v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1002.2409v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1002.2409v1", "journal_reference": "International Journal of Computer Science and Information\n  Security, IJCSIS, Vol. 7, No. 1, pp. 239-243, January 2010, USA", "doi": null, "fulltext": "(IJCSIS) International Journal of Computer Science and Information Security,\nVol. 7, No. 1, 2010\n\nChanging Neighbors k-Secure Sum Protocol\nfor Secure Multi-Party Computation\nRashid Sheikh, Beerendra Kumar\n\nDurgesh Kumar Mishra\n\nSSSIST, Sehore, INDIA\n\nAcropolis Institute of Technology and Research\nIndore, INDIA .\n\n,\n.\n\nof the bank. In such situations the SMC solutions\nare important. The best example of SMC is the\nsecure sum computation where all the\ncooperating parties want to compute the sum of\ntheir individual data inputs while preserving\nconfidentiality of inputs [10]. The secure sum\nprotocol proposed by Clifton et al. in [10] uses\nrandomization method for computing the sum. In\nthis protocol two adjacent parties to a middle\nparty can collude maliciously to know the data of\na middle party. We proposed new protocols in\n[11] where the probability of data leakage has\nbeen reduced by segmenting the data block into a\nfixed number of segments.\nIn this paper we propose a novel secure sum\ncomputation protocol with zero probability of\ndata leakage. In this protocol we change the\nposition of the parties so that the neighbors are\nchanged in each round of the computation. This\nprotocol which is an extension of our previous\nprotocol we call as ck-Secure Sum Protocol.\n\nAbstract- Secure sum computation of private\ndata inputs is an important component of\nSecure Multi-party Computation (SMC).In\nthis paper we provide a protocol to compute\nthe sum of individual data inputs with zero\nprobability of data leakage. In our proposed\nprotocol we break input of each party into\nnumber of segments and change the\narrangement of the parties such that in each\nround of the computation the neighbors are\nchanged. In this protocol it becomes\nimpossible for semi honest parties to know the\nprivate data of some other party.\nKeywords- Secure Multi-party Computation\n(SMC), Privacy, Computation Complexity,\nSemi honest Parties, k-Secure Sum Protocol,\nInformation Security, Trusted Third Party\n(TTP).\nI. INTRODUCTION\nIn today's world of information technology\nopportunities exist for joint computation\nrequiring privacy of the inputs. These\ncomputations occur between parties which may\nnot have trust in one another. In literature this\nsubject is called Secure Multi-party Computation\n(SMC). It is aimed at privacy of individual\ninputs and the correctness of the result. Formally\nin SMC the parties P1, P2 ,..., Pn want to\ncompute some common function f(x1, x2,..., xn )\nof inputs x1, x2,...,xn such a party can know only\nits own input xi and the value of the function f .\nThe SMC problems use two computation\nmodels; ideal model and real model. In ideal\nmodel there exists a Trusted Third Party (TTP)\nwhich accepts inputs from all the parties,\nevaluates the common function. In real model\nthe parties agree on some protocol which allows\nall the parties to evaluate the function. For\nexample if two banks cooperatively want to\nknow details about some customer but no bank is\nwilling to disclose the details of the customer to\nother bank due to privacy of customer or policy\n\n2. BACKGROUND\nThe subject of SMC began in 1982 when Yao\nproposed his millionaire's problem in which two\nmillionaires wanted to know who was richer\nwithout revealing individual wealth to each other\n[1]. The solution provided was for semi honest.\nThe semi honest parties follow the protocol but\nalso try to know some other information. The\nconcept was extended to multi-party computation\n[2]. Goldreich et al. also used circuit evaluation\nprotocols for secure computation. Some real life\napplications of SMC emerged like Private\nInformation Retrieval (PIR) [3, 4], Privacypreserving data mining [5, 6], Privacy-preserving\ngeometric computation [7], Privacy-preserving\nscientific computation [8], Privacy-preserving\nstatistical analysis [9] etc. An excellent review of\nSMC is provided by Du et al. in [12] where they\ndeveloped a framework for SMC problem\ndiscovery and transformation of normal problem\nto SMC problem. A review of SMC problems\nwith a focus on telecommunication systems is\nprovided by Oleshchuk et al. in [13]. Anonymity\n\n239\n\nhttp://sites.google.com/site/ijcsis/\nISSN 1947-5500\n\n\f(IJCSIS) International Journal of Computer Science and Information Security,\nVol. 7, No. 1, 2010\n\nenabled SMC was proposed by Mishra et al. in\n[14] where the identities of the parties are hidden\nfor achieving privacy.\nIn this paper the protocol is motivated by the\nwork of Clifton et al. [10] where they proposed a\ntoolkit of components for solution to SMC\nproblems. They proposed that one of\ncomponents of the toolkit for SMC is the secure\nsum computation. Secure sum computation is\nused in many distributed data mining\napplications where many geographically\ndistributed sites compute sum of values from\nindividual sites. The secure sum protocol\nproposed in [10] used random numbers for\nprivacy of individual data inputs. In this scheme\nany two parties Pi-1 and Pi+1 can collude to know\nthe secret data of party Pi by performing only\none computation. We proposed k-Secure Sum\nProtocol and Extended k-Secure Sum Protocol in\n[11] where the probability of data leakage is\nsignificantly reduced by breaking the data block\nof individual party in number of segments. The\nprobability of data leakage decreases as the\nnumber of segments in a data block is increased.\nAs per our survey no secure sum protocol is\navailable in the literature with zero probability of\ndata leakage when two neighbors collude. In this\npaper we proposed zero probability protocol for\nsecure sum computation namely ck-Secure Sum\nProtocol in which neighbors are changed in each\nround of computation.\n\nFigure 1: Initial architecture of ck-Secure Sum\nProtocol\nblock into k = n-1 segments where n is the\nnumber of parties involved in the cooperative\nsum computation. We propose P1 to be the\nprotocol initiator. The position of the protocol\ninitiator is kept fixed in each round of\ncomputation. For the first round of the\ncomputation parties are arranged in a serial\nfashion as P1, P2, ..., Pn. The protocol initiator\nstarts computation using k-secure sum protocol\nto get the sum of first segment of each party.\nBefore second round of computation starts P2\nexchanges its position with P3. In next round of\nthe computation P2 exchanges its position with\nP4 and so on until P2 exchanges its position with\nPn. Generalizing the method we can say that in\nith round of the computation P2 exchanges its\nposition with Pi+1 until Pn is reached. In each\nround of computation segments are added using\nk-secure sum protocol [11] and the partial sum is\npassed to the next party until all the segments\nare added and the sum is announced by the\nprotocol initiator party. Snapshots for a fourparty case are shown in fig 2\n\n3.\n\nPROPOSED ARCHITECTURE AND THE\nPROTOCOL DESCRIPTION\nThe initial architecture of the protocol is shown\nin fig 1 where parties are arranged in a ring. Each\nparty breaks the data block into k segments\nwhich is equal to n-1. For example in fig 1 four\nparties break their data block into three\nsegments. Initially the parties are arranged\nsequentially as P1, P2 , ..., Pn . In the next round\nof the computation P2 exchanges its position\nwith P3 and in subsequent rounds P2 exchanges\nits position with P4 and so on until Pn is reached.\n3.1 INFORMAL DESCRIPTION OF CK-SECURE SUM\nPROTOCOL\nWe observed in secure sum protocol [10] and ksecure sum protocol [11] that a middle party can\nbe hacked by two neighbor parties with some\nprobability. The motivation for ck-Secure Sum\nProtocol is that we change the neighbors in each\nround of segment computation. Thus it is\nguaranteed that no two semi honest parties can\nlearn all the data segments of a victim party. In\nthis protocol also each party breaks the data\n\n3.2 FORMAL DESCRIPTION OF CK-SECURE SUM\nPROTOCOL\nThe ck-Secure Sum Protocol is an extension of kSecure Sum Protocol [11] and is based on\nchanging neighbors in each round of segment\ncomputation. The party P1 is selected as the\nprotocol initiator party which starts the\ncomputation by sending the first data segment.\nThe party traverses towards Pn in each round of\nthe computation. The number of parties for this\n\n240\n\nhttp://sites.google.com/site/ijcsis/\nISSN 1947-5500\n\n\f(IJCSIS) International Journal of Computer Science and Information Security,\nVol. 7, No. 1, 2010\n\nprotocol must be four or more. When all the\nrounds of segment summation is completed the\nsum is announced by the protocol initiator party\n\n3.3 PERFORMANCE ANALYSIS OF CKSECURE SUM PROTOCOL\nIn this protocol each data segment is secret of the\nparty and chosen with its own way. If two\nneighbor parties collude they can know only one\nsegment in one round of the computation. The\nprotocol guarantees that a party will not have\nsame two neighbors in all the rounds of the\ncomputations. The neighbors are changed at least\nonce during secure sum computation. Thus any\ntwo neighbors to a middle party cannot know all\nthe segments of a party. The semi honest parties\ncannot learn more information than the result.\nThus the probability of data leakage by two\ncolluder parties to a middle party is zero.\nNumber of rounds of computation is n-1 and the\nnumber of exchanges between parties is n-2. The\nonly drawback of this scheme is that the\ntopology of the computational network changes\nin each round of the computation. The\ncommunication and computation complexity\nboth are O (n2).\n3.4 CONCLUSION AND FUTURE SCOPE\nSecure sum computation is an important element\nof toolkit for SMC solution. Protocols are needed\nfor secure sum computation with greater security\nto individual data. The protocol ck-Secure Sum\nProtocol changes neighbors in each round of\ncomputation. Our proposed protocol provides\nzero probability of data leakage by two colluding\nparties when they want to attack data of a middle\nparty. This is an appreciable improvement over\nprevious protocols available in the literature.\nEfforts can be made to reduce the computation\nand the communication complexity preserving\nthe property of zero hacking.\n\nFigure 2: Snapshots of ck-Secure Sum Protocol\nfor four-party case.\nThe algorithm: ck-Secure Sum\n1. Define P1, P2 , ..., Pn as n parties where n >=\n4.\n2. Assume these parties have secret inputs x1,\nx2, ..., xn .\n3. Each party Pi breaks its data xi into k= n-1\nsegments di1 , di2 ,..., dik such that \u2211 dij =\nxi for j =1 to k.\n4. Arrange parties in a ring as P1, P2 , ..., Pn\nand select P1 as the protocol initiator.\n5. Assume rc =k and Sij = 0. /* Sij is partial\nsum and rc is round counter*/\n6. While rc!=0\nbegin\nfor j = 1 to k\nbegin\nfor i =1 to n\nbegin\nstarting from P1 each party computes\ncumulative sum Sij of its next segment\nand thereceived sum from its neighbor\nand sends to the next party in the ring\nend\nP2 exchanges its position with P(j+2) mod n\nend\nrc = rc \u2013 1\nend\n7. Party P1 announces the result as Sij .\n8. End of algorithm.\n\nREFERENCES\n[1] A.C.Yao, \"protocol for secure computations,\"\nin proceedings of the 23rd annual IEEE\nsymposium on foundation of computer\nscience, pages 160-164, Nov.1982.\n[2] O. Goldreich, S. Micali, and A. Wigderson,\n\"How to play any mental game,\" in STOC\n'87: Proceedings of the nineteenth annual\nACM conference on Theory of computing.\nNew York, NY, USA: ACM, pages 218-229\n1987.\n[3] B.Chor and N.Gilbao. \"Computationally\nPrivate Information Retrieval (Extended\nAbstract),\" In proceedings of 29th annual\nACM Symposium on Theory of Computing,\nEl Paso, TX USA, May 1997.\n[4] B. Chor, E. Kushilevitz, O. Goldreich,and\nM. Sudan, \"Private Information Retrieval ,\"\n\n241\n\nhttp://sites.google.com/site/ijcsis/\nISSN 1947-5500\n\n\f(IJCSIS) International Journal of Computer Science and Information Security,\nVol. 7, No. 1, 2010\n\nTransaction on Computer Research, vol. 2,\nissue 2, Feb. 2007.\n\nIn proceedings of the 36th Annual IEEE\nSymposium on Foundations of Computer\nScience, Milwaukee WI, pages 41-50, Oct.\n1995.\n[5] Y. Lindell and b. Pinkas, \"Privacy preserving\ndata mining,\" in advances in cryptographyCrypto2000, lecture notes in computer\nscience, vol. 1880, 2000.\n[6] R. Agrawal and R. Srikant.\n\"PrivacyPreserving Data Mining,\" In proceedings of\nthe 2000 ACM SIGMOD on management of\ndata, Dallas, TX USA, pages 439-450, May\n15-18 2000.\n[7] M. J. Atallah and W. Du. \"Secure Multiparty\nComputational Geometry,\" In proceedings of\nSeventh\nInternational\nWorkshop\non\nAlgorithms and Data Structures(WADS2001).\nProvidence, Rhode Island, USA, pages 165179, Aug. 8-10 2001.\n[8] W. Du and M.J. Atallah. \"Privacy-Preserving\nCooperative Scientific Computations,\" In\n14th IEEE Computer Security Foundations\nWorkshop, Nova Scotia, Canada, pages 273282, Jun. 11-13 2001.\n[9] W. Du and M.J.Atallah, \"Privacy-Preserving\nStatistical Analysis,\" In proceedings of the\n17th Annual Computer Security Applications\nConference, New Orleans, Louisiana, USA,\npages 102-110, Dec. 10-14 2001.\n[10] C. Clifton, M. Kantarcioglu, J.Vaidya, X.\nLin, and M. Y. Zhu, \"Tools for PrivacyPreserving Distributed\nData Mining,\"J.\nSIGKDD Explorations, Newsletter, vol.4,\nno.2, ACM Press, pages 28-34, Dec. 2002.\n[11] R. Sheikh, B. Kumar and D. K. Mishra,\n\"Privacy-Preserving\nk-Secure\nSum\nProtocol,\" in International Journal of\nComputer Science and Information Security,\nvol. 6 no.2, pages 184-188, Nov. 2009.\n[12] W. Du and M.J. Atallah, \"Secure Multiparty\nComputation\nProblems\nand\nTheir\nApplications: A Review and Open\nProblems,\" In proceedings of new security\nparadigm workshop, Cloudcroft, New\nMaxico, USA, pages 11-20, Sep. 11-13\n2001.\n[13] V. Oleshchuk, and V. Zadorozhny, \"Secure\nMulti-Party Computations and Privacy\nPreservation:Results and Open Problems,\"\nTelektronikk:\nTelenor's\nJournal\nof\nTechnology, vol. 103, no.2, 2007.\n[14] D. K. Mishra, M. Chandwani, \"Extended\nProtocol for Secure Multiparty Computation\nusing Ambiguous Identity,\" WSEAS\n\nAuthors Profile\nDr. Durgesh Kumar Mishra\nPh - +91 9826047547, +91-731-4730038\nEmail: durgeshmishra@ieee.org\n\nDr. Durgesh Kumar Mishra has received\nM.Tech. in Computer Science from DAVV,\nIndore in 1994 and PhD in Computer\nEngineering in 2008. Presently he is working as\nProfessor (CSE) and Dean (R&D) in Acropolis\nInstitute of Technology & Research, Indore, MP,\nIndia. He is having around 20 Yrs of teaching\nexperience and more than 5 Yrs of research\nexperience. He has completed his research work\nwith Dr. M. Chandwani, Director, IET-DAVV\nIndore, MP, India on Secure Multi-Party\nComputation. He has published more than 65\npapers in refereed International/National\nJournals and Conferences including IEEE and\nACM He is a senior member of IEEE and\nSecretary of IEEE MP-Subsection under the\nBombay Section, India. Dr. Mishra has delivered\ntutorials in IEEE International conferences in\nIndia as well as other countries. He is the\nprogramme committee member of several\nInternational conferences. He visited and\ndelivered invited talks in Taiwan, Bangladesh,\nUSA, UK etc. on Secure Multi-Party\nComputation of Information Security. He is an\nauthor of one book. He is reviewer of three\ninternational journals of information security. He\nis Chief Editor of Journal of Technology and\nEngineering Sciences. He has been a consultant\nto industries and Government organization like\nSales tax and Labor Department of Government\nof Madhya Pradesh, India.\n\n242\n\nhttp://sites.google.com/site/ijcsis/\nISSN 1947-5500\n\n\f(IJCSIS) International Journal of Computer Science and Information Security,\nVol. 7, No. 1, 2010\n\nBeerendra Kumar\nPh. +91 9770435336\nEmail: beerucsit@gmail.com\n\nRashid Sheikh\nPh. +91 9826024087\n\nEmail: rashidsheikhmrsc@yahoo.com\n\nRashid sheikh has received his Bachelor of\nEngineering degree in Electronics and\nTelecommunicationEngineering\nfrom\nShri\nGovindram Seksaria Institute of Technology and\nScience, Indore, M.P., India in 1994. He has 15\nyears of teaching experience. His subjects of\ninterest\ninclude\nComputer\nArchitecture,\nComputer Networking, Electrical Circuit\nanalysis,\nDigital\nComputer\nElectronics,\nOperating Systems and Assembly Language\nProgramming. Presently he is pursuing M. Tech.\n(Computer Science and Engineering) at SSSIST,\nSehore, M.P., India. He has published four\nresearch papers in National Conferences and one\nresearch paper in international journal. His\nresearch\nareas\nare\nSecure\nMultiparty\nComputation and MANET. He is the author of\nten books on Computer Organization and\nArchitecture.\n\nBeerendra Kumar has received B.Tech.\n(Bachelor of Technology) degree in Computer\nScience and Information Technology from\nInstitute of Engineering and Technology,\nRohilkhand University, Bareilly (U.P), India in\n2006. He has completed his M.Tech. (Master of\nTechnology) in Computer Science from SCS,\nDevi Ahilya University, Indore, India in 2008.He\nhas two years of teaching experience. His\nsubjects of interest include Computer\nNetworking, Theory of Computer Science, Data\nMining, Operating Systems and Analysis &\nDesign of Algorithms. He has published three\nresearch papers in national conferences and one\nresearch paper in international journal. His\nresearch areas are Computer Networks, Data\nMining, Secure Multiparty Computations and\nNeural Networks.\n\n243\n\nhttp://sites.google.com/site/ijcsis/\nISSN 1947-5500\n\n\f"}