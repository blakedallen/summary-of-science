{"id": "http://arxiv.org/abs/0905.4906v1", "guidislink": true, "updated": "2009-05-29T15:47:17Z", "updated_parsed": [2009, 5, 29, 15, 47, 17, 4, 149, 0], "published": "2009-05-29T15:47:17Z", "published_parsed": [2009, 5, 29, 15, 47, 17, 4, 149, 0], "title": "On Some Manipulations with Fuzzy Processes", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0905.4200%2C0905.2443%2C0905.1409%2C0905.2348%2C0905.3024%2C0905.3690%2C0905.3380%2C0905.2728%2C0905.1060%2C0905.1241%2C0905.3580%2C0905.0995%2C0905.0261%2C0905.2760%2C0905.0902%2C0905.1269%2C0905.0154%2C0905.4924%2C0905.3619%2C0905.0301%2C0905.3384%2C0905.4781%2C0905.3392%2C0905.4329%2C0905.2174%2C0905.0476%2C0905.4423%2C0905.1677%2C0905.4518%2C0905.3991%2C0905.2594%2C0905.0302%2C0905.1675%2C0905.1621%2C0905.2620%2C0905.4472%2C0905.4521%2C0905.3928%2C0905.1179%2C0905.2691%2C0905.4906%2C0905.4813%2C0905.3682%2C0905.1676%2C0905.2556%2C0905.1064%2C0905.0493%2C0905.2766%2C0905.0394%2C0905.1700%2C0905.1385%2C0905.3649%2C0905.3641%2C0905.0843%2C0905.0809%2C0905.3938%2C0905.0424%2C0905.4665%2C0905.3640%2C0905.4870%2C0905.3305%2C0905.3102%2C0905.3298%2C0905.2113%2C0905.2436%2C0905.1006%2C0905.1226%2C0905.0220%2C0905.4948%2C0905.2838%2C0905.0585%2C0905.2086%2C0905.3562%2C0905.3554%2C0905.2860%2C0905.4651%2C0905.2525%2C0905.4672%2C0905.3275%2C0905.0955%2C0905.2391%2C0905.1558%2C0905.3909%2C0905.0846%2C0905.3068%2C0905.1959%2C0905.3396%2C0905.2702%2C0905.3591%2C0905.1243%2C0905.2266%2C0905.1673%2C0905.2301%2C0905.4442%2C0905.3341%2C0905.2566%2C0905.4258%2C0905.3433%2C0905.3031%2C0905.4290%2C0905.0870&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "On Some Manipulations with Fuzzy Processes"}, "summary": "The paper starts from the observation on the complexity of the manipulation\nof fuzzy processes that increases very rapidly with the extents of the\nprocesses representation. Therefore, a productive approach is to divide the\nproblem into smaller parts, treated separately and then the results combined.\nSome algebraic results obtained by the authors are presented.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0905.4200%2C0905.2443%2C0905.1409%2C0905.2348%2C0905.3024%2C0905.3690%2C0905.3380%2C0905.2728%2C0905.1060%2C0905.1241%2C0905.3580%2C0905.0995%2C0905.0261%2C0905.2760%2C0905.0902%2C0905.1269%2C0905.0154%2C0905.4924%2C0905.3619%2C0905.0301%2C0905.3384%2C0905.4781%2C0905.3392%2C0905.4329%2C0905.2174%2C0905.0476%2C0905.4423%2C0905.1677%2C0905.4518%2C0905.3991%2C0905.2594%2C0905.0302%2C0905.1675%2C0905.1621%2C0905.2620%2C0905.4472%2C0905.4521%2C0905.3928%2C0905.1179%2C0905.2691%2C0905.4906%2C0905.4813%2C0905.3682%2C0905.1676%2C0905.2556%2C0905.1064%2C0905.0493%2C0905.2766%2C0905.0394%2C0905.1700%2C0905.1385%2C0905.3649%2C0905.3641%2C0905.0843%2C0905.0809%2C0905.3938%2C0905.0424%2C0905.4665%2C0905.3640%2C0905.4870%2C0905.3305%2C0905.3102%2C0905.3298%2C0905.2113%2C0905.2436%2C0905.1006%2C0905.1226%2C0905.0220%2C0905.4948%2C0905.2838%2C0905.0585%2C0905.2086%2C0905.3562%2C0905.3554%2C0905.2860%2C0905.4651%2C0905.2525%2C0905.4672%2C0905.3275%2C0905.0955%2C0905.2391%2C0905.1558%2C0905.3909%2C0905.0846%2C0905.3068%2C0905.1959%2C0905.3396%2C0905.2702%2C0905.3591%2C0905.1243%2C0905.2266%2C0905.1673%2C0905.2301%2C0905.4442%2C0905.3341%2C0905.2566%2C0905.4258%2C0905.3433%2C0905.3031%2C0905.4290%2C0905.0870&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The paper starts from the observation on the complexity of the manipulation\nof fuzzy processes that increases very rapidly with the extents of the\nprocesses representation. Therefore, a productive approach is to divide the\nproblem into smaller parts, treated separately and then the results combined.\nSome algebraic results obtained by the authors are presented."}, "authors": ["Lucian Luca", "Lucian L. Luca"], "author_detail": {"name": "Lucian L. Luca"}, "author": "Lucian L. Luca", "arxiv_comment": "10 pages, exposed on 5th International Conference \"Actualities and\n  Perspectives on Hardware and Software\" - APHS2009, Timisoara, Romania", "links": [{"href": "http://arxiv.org/abs/0905.4906v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0905.4906v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.LO", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.LO", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0905.4906v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0905.4906v1", "journal_reference": "Ann. Univ. Tibiscus Comp. Sci. Series VII(2009),215-224", "doi": null, "fulltext": "Anale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\nOn Some Manipulations\nwith Fuzzy Processes\nLucian Luca, Lucian L. Luca,\n\u201eTibiscus\" University, Timi\u015foara, Romania\nABSTRACT. The paper starts from the observation on the\ncomplexity of the manipulation of fuzzy processes that increases very\nrapidly with the extents of the processes representation. Therefore, a\nproductive approach is to divide the problem into smaller parts,\ntreated separately and then the results combined. Some algebraic\nresults obtained by the authors are presented.\nKEYWORDS: fuzzy process, refination, robustness, robust process,\nchaotic process\n\nIntroduction\nWe remind the notion of fuzzy process that we introduced in [LD01], a\nformalism for the notion of fuzzy contract between a device and its\nenvironment. Such a contract specifies the device-environment interface in\nterms of executions, which can be sequences of events, time functions, etc;\nyet we will consider them justly as elements of an arbitrary set E.\nLet E be the set of all executions and \u2206 : E \u2192 [0,1] and\n\u0393 : E \u2192 [0,1] be two fuzzy subsets of E. In what follows, we note with:\nX ={x \u2208E | \u2206(x) > 0}, Y = {x \u2208 E | \u0393( x) > 0}, B = {x \u2208 E | \u2206( x) = \u0393( x) = 0}\nand we respectively call:\n\u2022 X \u2013 the set of accessible executions;\n\u2022 Y \u2013 the set of acceptable executions;\n\u2022 B \u2013 the set of rejections.\nAdditionally, we note \u2206 X = \u2206 / X , \u0393Y = \u0393/ Y\n\n215\n\n\fAnale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\nDefinition 1: The pair p = (\u2206 X , \u0393Y ) , where \u2206 X and \u0393Y are defined as\nabove, is called a (vague) fuzzy process over E.\nThe set of all fuzzy processes over a pair of crisp subsets X and Y of\nE, as above, is called the space of the fuzzy process of (X, Y), and the set of\nall fuzzy process over E is called the space of the fuzzy process of E. \u25a0\n\nIn [Luc03] we studied in detail the refination (\u0001), we defined and\nstudied the operations with fuzzy processes: the sum (\u2295), the product (\u2297),\nthe intersection (\u0004), the reunion (\u0005), and the reflection (-).\nAs we could notice, the complexity of manipulation of fuzzy\nprocesses increases very rapidly with the representation of their extent.\nTherefore, a productive approach consists in dividing the problem into\nsmaller parts, treated separately and then combining the results.\n\n1 A new definition of refination\n\nWe start by presenting some algebraic results we have obtained:\nProposition 1: Let us have three fuzzy processes p, q and r over the E set of\nexecutions, then\n\np\u0001q \u21d2 p\u2297r\u0001q\u2297r\nDemonstration.\n\np\u0001q\n\n\uf8f1\uf8f4\u2206 p ( x) \u2265 \u2206q ( x)\n\uf8f1\uf8f4 X p \u2287 X q\n\u21d2 \uf8f2\n\uf8f2 p\n\uf8f4\uf8f3Y p \u2286 Yq\n\uf8f4\uf8f3\u0393 ( x) \u2264 \u0393 q ( x)\n\n\b\n\n\u21d3\n\n\uf8f1\uf8f4\u2206 p \u2297r ( x) \u2265 \u2206q \u2297r ( x)\n\uf8f1\uf8f4 X p \u2297r \u2287 X q \u2297r\np\u2297r\u0001q\u2297r \b \uf8f2\n\u21d2 \uf8f2\n\uf8f4\uf8f3\u0393 p \u2297r ( x) \u2264 \u0393 q \u2297r ( x)\n\uf8f3\uf8f4Y p \u2297r \u2286 Yq \u2297r\nYet,\n\n\u2206 pX\u2297 r ( x ) =\np\u2297r\n\n\u2206qX\u2297 r\nq\u2297r\n\n216\n\nmin {\u2206 p ( x ), \u2206r ( x )}\n\nx\u2208 X p \u2229 X r\n\n( x) =\n\nmin {\u2206q ( x ), \u2206r ( x )}\n\nx\u2208 X q \u2229 X r\n\n\fAnale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\n\uf8f1 X p\u2297r = X p \u2229 X r\n\uf8f4\n\uf8f2 X q\u2297r = X q \u2229 X r\n\uf8f4\n\uf8f3X p \u2287 X q\n\n\u21d2 X p \u2297r \u2287 X q \u2297r\n\n~\n~\n~\n~\nY p\u2297r = (Y p \u2229 Yr ) \u222a ( X p \u2229 Yr ) \u222a (Y p \u2229 X r )\n~\n~\n~\n~\nYq\u2297r = (Yq \u2229 Yr ) \u222a ( X q \u2229 Yr ) \u222a (Yq \u2229 X r )\n\nY p \u2286 Yq \u21d2 Y p \u2229 Yr \u2286 Y p \u2229 Yr\n~\n~\n~\n~\n~\n~\nX p \u2286 X q \u21d2 X p \u2229 Yr \u2286 X q \u2229 Yr\n~\n~\n~\n~\n~\n~\nYq \u2286 Y p \u21d2 Yq \u2229 X r \u2286 Y p \u2229 X r\nthat is Y p \u2297r \u2286 Yq\u2297r\n\u25a0\nCorollary 1: Let the fuzzy processes p and q be over the E set of executions,\n\nthen\n\np\u0001q \u21d2 p\u0001p\u2297q\n\nDemonstration: Considering from the proposition 1 we obtain:\np \u0001 q \u21d2 p = p\u2297 p\u0001 q \u2297 p= p \u2297 q \u25a0\nCorollary 2: Let the fuzzy processes p1, p2, q1, q2 and q be over the E set of\nexecutions:\n\ni)\n\np1 \u0001 q1 \u2227 p2 \u0001 q2 \u21d2 p1 \u2297 p2 \u0001 q1 \u2297 q2\n\nii)\n\np1 \u0001 q \u2227 p2 \u0001 q \u21d2 p1 \u2297 p2 \u0001 q\n\nDemonstration. i) From proposition 1 we obtain that:\n\np1 \u0001 q1 \u21d2 p1 \u2297 p2 \u0001 q1 \u2297 p2\np2 \u0001 q2 \u21d2 p2 \u2297 q1 \u0001 q2 \u2297 q1 \u21d2\nq1 \u2297 p2 \u0001 q1 \u2297 q2\n(from the commutativity of \u2297)\nFrom the transitivity of the refination relation:\np1 \u2297 p2 \u0001 q1 \u2297 p2 \u0001 q1 \u2297 q2\nii) immediately results from the idempondency of \u2297, by the substitution of\nq1, respectively q2 with q and applying the relation i):\np1 \u0001 q \u2227 p2 \u0001 q \u21d2 p1 \u2297 p2 \u0001 q \u2297 q = q \u25a0\n217\n\n\fAnale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\nProposition 1, together with the transitivity of the refination and the\ncommutativity of the product, enables the modular and hierarchical\nverification. The problem is to determine if p \u0001 q, where p is a specification\nand q an implementation. The idea is to determine a chain of intermediate\nspecifications t0, t1,...,tn so that t0=p \u015fi tn=q.\nThe intermediate specifications (including p and q) may be broken\ninto components:\nti = a1 \u2297 a2 \u2297 ...\nti+1 = (b11 \u2297 b12 \u2297 ...) \u2297 (b21 \u2297 b22 \u2297 ...) \u2297 ...\nThen, we verify for each j, that:\naj \u0001 bj1 \u2297 bj2 \u2297 ...\nFrom the monotony of the product \u2297 comparing with \u0001, it follows:\nti \u0001 ti+1 , i \u2208 {0,1,..., n \u2212 1}\nand from the transitivity we establish that for p \u0001 q.\nIf we also consider the property of idempotency the consecutive\nspecifications can be partially covered: the refination between p and q can\nbe checked by breaking p in more parts:\np = p1 \u2297 p2 \u2297 ...\nand, then, by comparing each part with q. The parts of p can be considered\nthe properties that must be individually verified. If for each index i, pi \u0001 q,\nthen p \u0001 q.\nIt is obvious that the technique of modular and hierarchical\nverification, with a finite number of levels of specifications and with a finite\nnumber of components at each level is justified by corollary 2.\nAn alternative definition of the refination is to say that an\n\"implementation\" q relatively is correct to a \"specification\" p, if q operates\nproperly in the environment of p. The question is whether this alternative\ndefinition is equivalent to the definition 8 (definition 8) of paper [LL09].\n218\n\n\fAnale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\nThe following proposition answers positively to this question and therefore\nit connects the notions of absolute and relative correctness (see [LL09]).\nTheorem 1. Let us have two fuzzy processes p and q over the set of\nexecutions E,\n\np \u0001 q \b - p \b q \u2208 RE\nDemonstration. Let us have p = (\u2206 pX , \u0393Yp ) and q = (\u2206qX , \u0393Yq )\np\n\np\n\nq\n\n(see\n\nq\n\nfigure1)\n-p \u2297 q \u2208 RE \b \u0393 p\u2297q = 1E \u21d4\n~\n~\n~\n~\n(Y\u2212 p \u2229 Yq ) \u222a ( X \u2212 p \u2229 Yq ) \u222a (Y\u2212 p \u2229 X q ) = E\n~ ~\n~\n~\n( X p \u2229 Yq ) \u222a (Yp \u2229 Yq ) \u222a ( X p \u2229 X q ) = E\n\nFigure 1.\n\n\u25a0\n\nThe above theorem allows us to verify whether an implementation\nsatisfies the specification, by placing the implementation in the environment\nof the specification and then verifying the condition of the absolute\ncorrectness of their product. Our result is identical to that obtained in the\nclassical approaches (i.e, [Ver94]).\n219\n\n\fAnale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\nWe can give an alternative definition for refination in terms of\ntesting: q is \"better than or as good\" as p if q passes all the tests that p can\npass. Passing a test r can be seen as an absence of rejections when the\ndevice is connected to r.\nThe following theorem shows that this definition of refination is\nequivalent to the definition 8 from [LD01], and therefore it provides a new\nconnection between the notions of absolute and relative correctness from the\nspace of the fuzzy process.\nTheorem 2: Let us have two fuzzy processes p and q over the set of\nexecutions E,\n\np \u0001 q \b \u2200r \u000e ( r \u2297 p \u2208 RE \u21d2 r \u2297 q \u2208 RE )\nDemonstration. From theorem 1 and proposition 1 we have that:\n\nr \u2297 p \u2208 RE \u21d2 - r \u0001 p\nr \u2297 q \u2208 RE \u21d2 - r \u0001 q\nSo, it is sufficient to show that:\np \u0001 q \b \u2200r \u000e ( - r \u0001 p \u21d2 - r \u0001 q )\nThe first implication follows from the transitivity of the refineries:\np\u0001q \u2227 -r \u0001 p \u21d2 -r \u0001 q\nReciprocally, let us have r = -p, then -r = p and from the reflexivity of the\nrefination \u21d2 - r \u0001 q. From the hypothesis -r \u0001 q and because -r = p, it\nfollows that p \u0001 q \u25a0\n\n2 Robust processes\n\nIn concurrency theory it is often used \"the testing paradigm\", which we\nformulate in terms of fuzzy processes: being given a process p, which\nrepresents a known specification and a process q, which is part of a known\nimplementation, and a process r, which represents the unknown part of the\nimplementation, then\np \u0001 q\u2297r\noften called \"the design inequality\".\nThe following theorem solves this design inequality, characterizing\nits solutions as those fuzzy processes that refine a minimal solution.\n220\n\n\fAnale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\nTheorem 3: Let us have the fuzzy processes p, q and r over the same set of\nexecutions E,\n\np\u0001q\u2297r \b p\u2295-q \u0001r\nDemonstration.\n\np \u0001 q \u2297 r \b - p \u2297 (q \u2297 r) \u2208 RE \b\n\n-p \u2297 q \u2297 r \u2208 RE \b -p \u2297(- -q) \u2297 r \u2208 RE \b\n- ( p \u2295 -q) \u2297 r \u2208 RE \b p \u2295 -q \u0001 r \u25a0\nA classic design inequality is the software designing for embedded\nsystems. In this sense, p is the specification known as embedded system, q\nis the known description of the underlying machine, and r is the unknown\nspecification for software.\nOften in the designing of systems it is expected that the subsystems\n(parts) are very easy to handle and have a defined behavior in any\nenvironment. Such features are modeled in the space of fuzzy processes\nusing the properties of robustness: the device specified by a fuzzy process\naccepts any execution, regardless the way in which the environment behaves\ntowards the execution. Consequently, the environments (users) should be\nassumed to be completely unpredictable in the sense that they do not offer\nany guarantee in terms of avoided executions.\nThese observations support the following theorem, which shows\nhow a fuzzy process can be \"split\" in two parts, a robust and a chaotic one.\nTheorem 4: Let it be a fuzzy process p over the set of executions E:\n\ni) p \u0005 \u03a9 \u2208 RE\nii) p \u0004 \u03a9 \u2208 HE\niii) p = (p \u0005 \u03a9) \u2297 (p \u0004 \u03a9)\nDemonstration.\np\ni) \u2206 \u0005\u03a9(x) = min {\u2206 pX ( x),1E ( x)} = \u2206 pX ( x)\np\n\nx\u2208X p \u2229 E\n\n\u0393\n\np\u0005\u03a9\n\n(x) = max {\u0393Yp ( x),1E ( x)} = 1E\nx\u2208Yp \u2229 E\n\nii)\n\np\n\np\n\nthen p \u0005 \u03a9 \u2208 RE\np\n\u2206 \u0004\u03a9(x) = max {\u2206 pX ( x),1E ( x)} = 1E ( x)\nx\u2208X p \u2229 E\n\np\n\n221\n\n\fAnale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\n\u0393\n\np\u0004\u03a9\n\n(x) = min {\u0393Yp ( x),1E ( x)} = \u0393Yp\np\n\nx\u2208Yp \u2229 E\n\niii)\n\np\n\nthen p \u0004 \u03a9 \u2208 HE\nq = (p \u0005 \u03a9) \u2297 (p \u0004\u03a9) = (\u2206pX ,1E ) \u2297 (1E , \u0393Yp ) = (\u2206pX , \u0393Yp ) = p ,\np\n\n~\nbecause X p \u2286 Y p\n\np\n\np\n\np\n\n\u25a0\n\nThe robust fuzzy processes can be viewed as pure guarantees and the\nchaotic fuzzy processes can be seen as pure requirements. Theorem 4 shows\nexactly the fact that any fuzzy process is the product resulted from a pure warranty\nand a pure requirement. Moreover, it gives a method to calculate the factors.\nThe next proposition shows that the product of two robust devices or\nof two robust environments is also robust, namely the fact that if all\ncomponents of the system are robust, then the system is robust. Moreover, it\nindicates even other properties of closure for many fuzzy robust processes,\nin the finite case (comparing to the operations defined in [LL09]).\nProposition 2: RE set is closed to \u2297, \u2295, \u0005 and \u0004.\nDemonstration. Let p and q be two fuzzy robust processes. Then the\nproposition is immediate if we calculate the sets of acceptable executions\nfor\n\np \u2297 q, p \u2295 q, p \u0005 q, p \u0004 q\nFor example:\n\n~\n~\n~\n~\nY p\u2297q = (Y p \u2229 Yq ) \u222a ( X p \u2229 Yq ) \u222a (Y p \u2229 X q ) = E\n\n\u25a0\n\nUsing the properties of distributivity, commutativity, idempotency,\netc. of the reunion and classic intersection, we obtain the following\nproperty:\nProposition 3: Let us have three fuzzy processes p, q and r over the set of\nexecutions E,\n\ni)\n\np\u0001q \b p\u0005q=q \b p\u0004q=p\n\nii)\n\np\u0004(q\u0005r) = (p\u0004q)\u0005(p\u0004r)\n\niii)\n\np\u0005(q\u0004r) = (p\u0005q)\u0004(p\u0005r)\n\nMoreover, we notice that \u03a9 \u0005 -\u03a9 = \u03a9 .\n222\n\n\u25a0\n\n\fAnale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\nReferences\n\n[LD01]\n\nL. Luca, I. Despi - Toward a Definition of Fuzzy Processes,\nProceedings of the 5th International Symposium on Economics\nInformatics, Bucharest, pp. 855-859, May 2001.\n\n[LL09]\n\nL. Luca, L. L. Luca \u2013 About Operations of Fuzzy Processes,\nProceedings of the 5th International Symposium, Timi\u015foara,\nMay 2009.\n\n[Luc03]\n\nLuca, L. \u2013 Spa\u0163ii de procese fuzzy, Editura Mirton, Timi\u015foara,\n2003\n\n[Neg95]\n\nR. Negulescu - Process spaces, Technical Report CS-95-48,\nDepartment of Computer Science, University of Waterloo,\nOntario, Canada, December, 1995.\n\n[Neg98]\n\nR. Negulescu - Process Spaces and Formal Verification of\nAsynchronous Circuits, PhD thesis, Department of Computer\nScience, University of Waterloo, Ontario, Canada, August,\n1998.\n\n[Ver94]\n\nT. Verhoeff - The testing paradigm applied to network structure,\nComputing Science Notes 94/10, Department of Mathematics\nand Computer Science, Eindhoven University of Technology,\nThe Nederlands, 1994.\n\n223\n\n\fAnale. Seria Informatic\u0103. Vol. VII fasc. 1 \u2013 2009\nAnnals. Computer Science Series. 7th Tome 1st Fasc. \u2013 2009\n\n224\n\n\f"}