{"id": "http://arxiv.org/abs/1011.0199v1", "guidislink": true, "updated": "2010-10-31T20:00:47Z", "updated_parsed": [2010, 10, 31, 20, 0, 47, 6, 304, 0], "published": "2010-10-31T20:00:47Z", "published_parsed": [2010, 10, 31, 20, 0, 47, 6, 304, 0], "title": "BQCD - Berlin quantum chromodynamics program", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1011.3575%2C1011.5013%2C1011.2248%2C1011.4091%2C1011.4325%2C1011.6145%2C1011.5638%2C1011.5994%2C1011.2626%2C1011.4474%2C1011.2195%2C1011.1496%2C1011.6477%2C1011.1488%2C1011.1719%2C1011.4933%2C1011.4060%2C1011.0548%2C1011.3535%2C1011.0199%2C1011.2644%2C1011.1839%2C1011.6324%2C1011.1986%2C1011.3254%2C1011.4873%2C1011.1053%2C1011.5951%2C1011.4364%2C1011.1186%2C1011.2568%2C1011.0032%2C1011.4908%2C1011.5084%2C1011.4924%2C1011.3066%2C1011.6511%2C1011.0076%2C1011.4488%2C1011.2018%2C1011.3486%2C1011.2627%2C1011.2465%2C1011.0574%2C1011.2608%2C1011.0803%2C1011.3983%2C1011.6622%2C1011.0247%2C1011.0767%2C1011.2798%2C1011.2450%2C1011.0305%2C1011.0689%2C1011.4892%2C1011.0814%2C1011.0931%2C1011.1253%2C1011.3226%2C1011.4654%2C1011.1005%2C1011.5855%2C1011.6313%2C1011.6359%2C1011.2476%2C1011.6349%2C1011.2183%2C1011.3665%2C1011.4169%2C1011.1510%2C1011.3094%2C1011.4536%2C1011.0835%2C1011.0049%2C1011.2032%2C1011.4628%2C1011.2973%2C1011.2076%2C1011.2457%2C1011.2815%2C1011.3119%2C1011.1769%2C1011.3523%2C1011.2711%2C1011.4563%2C1011.5505%2C1011.1773%2C1011.1959%2C1011.6087%2C1011.5350%2C1011.1819%2C1011.4841%2C1011.6094%2C1011.0386%2C1011.3999%2C1011.6281%2C1011.4050%2C1011.6107%2C1011.5076%2C1011.5665%2C1011.2256&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "BQCD - Berlin quantum chromodynamics program"}, "summary": "We publish BQCD as free software under the GNU General Public License. BQCD\nis a Hybrid Monte-Carlo program that simulates lattice QCD with dynamical\nWilson fermions. It is one of the main production programs of the QCDSF\ncollaboration. The program can simulate 2 and 2 + 1 fermion flavours with pure,\nclover improved, and stout smeared fat link Wilson fermions as well as standard\nplaquette, and an improved (rectangle) gauge action. The single flavour is\nsimulated with the Rational Hybrid Monte-Carlo algorithm.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1011.3575%2C1011.5013%2C1011.2248%2C1011.4091%2C1011.4325%2C1011.6145%2C1011.5638%2C1011.5994%2C1011.2626%2C1011.4474%2C1011.2195%2C1011.1496%2C1011.6477%2C1011.1488%2C1011.1719%2C1011.4933%2C1011.4060%2C1011.0548%2C1011.3535%2C1011.0199%2C1011.2644%2C1011.1839%2C1011.6324%2C1011.1986%2C1011.3254%2C1011.4873%2C1011.1053%2C1011.5951%2C1011.4364%2C1011.1186%2C1011.2568%2C1011.0032%2C1011.4908%2C1011.5084%2C1011.4924%2C1011.3066%2C1011.6511%2C1011.0076%2C1011.4488%2C1011.2018%2C1011.3486%2C1011.2627%2C1011.2465%2C1011.0574%2C1011.2608%2C1011.0803%2C1011.3983%2C1011.6622%2C1011.0247%2C1011.0767%2C1011.2798%2C1011.2450%2C1011.0305%2C1011.0689%2C1011.4892%2C1011.0814%2C1011.0931%2C1011.1253%2C1011.3226%2C1011.4654%2C1011.1005%2C1011.5855%2C1011.6313%2C1011.6359%2C1011.2476%2C1011.6349%2C1011.2183%2C1011.3665%2C1011.4169%2C1011.1510%2C1011.3094%2C1011.4536%2C1011.0835%2C1011.0049%2C1011.2032%2C1011.4628%2C1011.2973%2C1011.2076%2C1011.2457%2C1011.2815%2C1011.3119%2C1011.1769%2C1011.3523%2C1011.2711%2C1011.4563%2C1011.5505%2C1011.1773%2C1011.1959%2C1011.6087%2C1011.5350%2C1011.1819%2C1011.4841%2C1011.6094%2C1011.0386%2C1011.3999%2C1011.6281%2C1011.4050%2C1011.6107%2C1011.5076%2C1011.5665%2C1011.2256&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We publish BQCD as free software under the GNU General Public License. BQCD\nis a Hybrid Monte-Carlo program that simulates lattice QCD with dynamical\nWilson fermions. It is one of the main production programs of the QCDSF\ncollaboration. The program can simulate 2 and 2 + 1 fermion flavours with pure,\nclover improved, and stout smeared fat link Wilson fermions as well as standard\nplaquette, and an improved (rectangle) gauge action. The single flavour is\nsimulated with the Rational Hybrid Monte-Carlo algorithm."}, "authors": ["Yoshifumi Nakamura", "Hinnerk St\u00fcben"], "author_detail": {"name": "Hinnerk St\u00fcben"}, "author": "Hinnerk St\u00fcben", "arxiv_comment": "7 pages, 1 figure, poster presented at the XXVIII International\n  Symposium on Lattice Field Theory (Lattice 2010), June 14-19 2010,\n  Villasimius, Italy", "links": [{"href": "http://arxiv.org/abs/1011.0199v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1011.0199v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "hep-lat", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "hep-lat", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1011.0199v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1011.0199v1", "journal_reference": "PoS Lattice2010:040,2010", "doi": null, "fulltext": "arXiv:1011.0199v1 [hep-lat] 31 Oct 2010\n\nBQCD \u2013 Berlin quantum chromodynamics program\n\nYoshifumi Nakamura\nInstitut f\u00fcr Theoretische Physik, Universit\u00e4t Regensburg, 93040 Regensburg, Germany\nCenter for Computational Sciences, University of Tsukuba, Tsukuba, Ibaraki 305-8577, Japan\nE-mail: yoshi@ccs.tsukuba.ac.jp\n\nHinnerk St\u00fcben\u2217\nKonrad-Zuse-Zentrum f\u00fcr Informationstechnik Berlin, 14195 Berlin, Germany\nE-mail: stueben@zib.de\nWe publish BQCD as free software under the GNU General Public License. BQCD is a Hybrid\nMonte-Carlo program that simulates lattice QCD with dynamical Wilson fermions. It is one of the\nmain production programs of the QCDSF collaboration. The program can simulate 2 and 2 + 1\nfermion flavours with pure, clover improved, and stout smeared fat link Wilson fermions as well\nas standard plaquette, and an improved (rectangle) gauge action. The single flavour is simulated\nwith the Rational Hybrid Monte-Carlo algorithm.\n\nThe XXVIII International Symposium on Lattice Field Theory, Lattice2010\nJune 14-19, 2010\nVillasimius, Italy\n\u2217 Speaker.\n\nc Copyright owned by the author(s) under the terms of the Creative Commons Attribution-NonCommercial-ShareAlike Licence.\n\nhttp://pos.sissa.it/\n\n\fBQCD\n\nHinnerk St\u00fcben\n\n1. Introduction\nBerlin quantum chromodynamics program (BQCD) is a Hybrid Monte-Carlo [1] program for\nsimulating lattice QCD with dynamical Wilson fermions. The development of BQCD started in\n1998 for the two flavour case and the standard Wilson action. It was written for a study of parallel\ntempering [2]. At that time the whole parallelisation framework was completed. Soon the program\nwas extended in two different directions. The first direction was the implementation of clover O(a)\nimprovement of the fermion action. With the availability of clover improvement BQCD became\none of the main production codes of the QCDSF collaboration [3]. The second direction was the\naddition of an external field to the standard Wilson action in order to study the Aoki phase [4].\nThe next milestone was the implementation of the Hasenbusch trick [5, 6]. Starting in 2006 the\ncode has been largely extended to enable simulations including a third fermion flavour [7, 8, 9, 10].\nThis extension includes the implementation of Rational Hybrid Monte-Carlo (RHMC) [11] for the\nsimulation of the third quark flavour as well as many algorithmic and performance improvements.\nThe code is also being used by the DIK Collaboration for simulations at finite temperature\n[12, 13]. Several people took BQCD as a starting point for adding their own code for measurements.\nThe plan of the QPACE project [14] to port BQCD, in particular the fermion matrix multiplication\nand solvers [15], to their machine has triggered the publication of the code as free software under\nthe GNU General Public License on the occasion of this Lattice conference. The source and a\nmanual can be downloaded from [16]. A description on building and testing binaries can be found\nin the manual.\n\n2. Actions\nThe program can simulate the QCD with the following actions. The gauge action can be the\nWilson action\nWilson\nS = SG\n=\n\n1\nRe Tr (1 \u2212Uplaquette )\nplaquette 3\n\n\u2211\n\nor a Symanzik improved gauge action\n#\n\"\n6\n1\n1\nSG = 2 c0 \u2211\nRe Tr (1 \u2212Uplaquette ) + c1 \u2211\nRe Tr (1 \u2212Urectangle ) ,\ng\nrectangle 3\nplaquette 3\n\n(2.1)\n\n(2.2)\n\nwith c0 + 8c1 = 1. The fermion action can be the Wilson action\n\u0003\n\u0002\n\b\nSFWilson = \u2211 \u03c8\u0304 (x)\u03c8 (x) \u2212 \u03ba \u03c8\u0304 (x)U\u03bc\u2020 (x \u2212 \u03bc\u0302 )(1 + \u03b3\u03bc )\u03c8 (x \u2212 \u03bc\u0302 ) + \u03c8\u0304 (x)U\u03bc (x)(1 \u2212 \u03b3\u03bc )\u03c8 (x + \u03bc\u0302 ) ,\nx\n\n(2.3)\nthe Wilson action plus an explicitly parity-flavour symmetry breaking source term, where \u03c4 3 is the\nthird Pauli matrix\nSF = SFWilson + h \u2211 \u03c8\u0304 (x)i\u03b35 \u03c4 3 \u03c8 (x) ,\n(2.4)\nx\n\nthe clover action\n\ni\nSF = SFWilson \u2212 \u03ba cSW \u2211 \u03c8\u0304 (x)\u03c3\u03bc\u03bd F\u03bc\u03bd (x)\u03c8 (x) ,\n2\nx\n2\n\n(2.5)\n\n\fBQCD\n\nHinnerk St\u00fcben\n\nthe clover action plus a CP breaking term\ni\nSF = SFWilson \u2212 \u03ba cSW \u2211 \u03c8\u0304 (x)\u03c3\u03bc\u03bd F\u03bc\u03bd (x)\u03c8 (x) + \u03b8 \u03c8\u0304 (x)\u03b35 \u03c8 (x)\n2\nx\n\n(2.6)\n\nor a stout smeared fat link action (any term containing gauge links can be smeared), in particular\nthe SLiNC fermion action [9]\nn\nSF = \u2211 \u03c8\u0304 (x)\u03c8 (x) \u2212 \u03ba \u03c8\u0304 (x)U\u03bc\u2020 (x \u2212 \u03bc\u0302 )[1 + \u03b3\u03bc ]\u03c8 (x \u2212 \u03bc\u0302 )\nx\n(2.7)\no\ni\n\u2212 \u03ba \u03c8\u0304 (x)U\u03bc (x)[1 \u2212 \u03b3\u03bc ]\u03c8 (x + \u03bc\u0302 ) + \u03ba cSW \u03c8\u0304 (x)\u03c3\u03bc\u03bd F\u03bc\u03bd (x)\u03c8 (x) ,\n2\n\nwhere the gauge links U\u03bc are replaced by stout links [17]\n\nU\u03bc \u2192 \u0168\u03bc (x) = eiQ\u03bc (x) U\u03bc (x) ,\nwith\nQ\u03bc (x) =\n\n\u0014\n\u0015\n\u0001\n\u03b1\n1\nV\u03bc (x)U\u03bc\u2020 (x) \u2212U\u03bc (x)V\u03bc\u2020 (x) \u2212 Tr V\u03bc (x)U\u03bc\u2020 (x) \u2212U\u03bc (x)V\u03bc\u2020 (x) ,\n2i\n3\n\n(2.8)\n\n(2.9)\n\nwhere V\u03bc (x) is the sum over all staples associated with the link. Boundary condition for the gauge\nfield are periodic in all directions. For the fermions boundary conditions can be chosen to be\nanti-periodic or periodic for each dimension.\n\n3. Observables\nThe following gluonic observables can be measured: the average plaquette and average rectangular plaquette, the topological charge (the topological charge is measured with the field theoretic\nmethod after cooling the gauge field configuration), the Polyakov loop. In addition some fermionic\nbulk quantities can be measured (from stochastic estimators):\n1\nhTr(M \u22121 )i\n('chiral condensate')\n12V\n1\nhTr(\u03b35 M \u22121 )i\nh\u03c8\u0304\u03b35 \u03c8 i =\n12V\n1\nh\u03a02 i =\nhTr(M \u2020 M)\u22121 i\n('pion norm')\n12V\nh\u03c8\u0304\u03c8 i =\n\n4. Algorithmic improvements\n4.1 Integrators\nHMC trajectories can be integrated with leapfrog or Omelyan [18] integrators. Multi timescale\nintegration is possible with up to six time scales. In the following we explain a multi timescale setup\nthat is used in production for N f = 2 + 1 improved Wilson fermions. Starting point is the partition\nfunction\nZ =\n\nZ\n\nDU D\u03c8\u0304 D\u03c8 e\u2212S\n\nS = Sg (\u03b2 ) + Sl (\u03bal , cSW ) + Ss (\u03bas , cSW )\n3\n\n(4.1)\n(4.2)\n\n\fBQCD\n\nHinnerk St\u00fcben\n\nwhere Sg is a gluon action, Sl is an action for the degenerate u- and d-quarks and Ss is an action for\nthe strange quark. After integrating out fermions\n1\n\nS = Sg (\u03b2 ) \u2212 ln[det Ml\u2020 Ml ][det Ms\u2020 Ms ] 2 .\n\n(4.3)\n\nFirst even-odd preconditioning is applied\nl 2\ndet Ml\u2020 Ml \u221d det(1 + Too\n) det Q\u2020l Ql\n1\n2\n\ns\n[det Ms\u2020 Ms ] \u221d det(1 + Too\n)[det Q\u2020s Qs ]\n\n(4.4)\n1\n2\n\n(4.5)\n\nwhere\nQ = (1 + T )ee \u2212 Meo (1 + T )\u22121\noo Moe\ni\nT = cSW \u03ba \u03c3\u03bc\u03bd F\u03bc\u03bd .\n2\n\n(4.6)\n(4.7)\n\nThen det Q\u2020l Ql is separated following Hasenbusch [5]\ndet Q\u2020l Ql = detWl\u2020Wl det\n\nQ\u2020l Ql\nWlWl\u2020\n\n,\n\nW = Q+\u03c1.\n\n(4.8)\n\nFinally the standard action is modified to\ns\nl\n+ Slf 1 + Slf 2 + Ssf r ,\n+ Sdet\nS = Sg + Sdet\n\n(4.9)\n\nwhere\nl\n= \u22122 Tr log[1 + Too (\u03ba l )]\nSdet\ns\nSdet\nSlf 1\nSlf 2\n\n= \u2212 Tr log[1 + Too (\u03ba )]\ns\n\n=\n=\n\nSsf r =\n\n\u03c61\u2020 [W (\u03ba l )\u2020W (\u03ba l )]\u22121 \u03c61\n\u03c62\u2020W (\u03ba l )[Q(\u03ba l )\u2020 Q(\u03ba l )]\u22121W (\u03ba l )\u2020 \u03c62\nn\n1\n\u2020\n\u03c62+i\n[Q(\u03ba s )\u2020 Q(\u03ba s )]\u2212 2n \u03c62+i\ni=1\n\n\u2211\n\n(4.10)\n(4.11)\n(4.12)\n(4.13)\n(4.14)\n\nWe calculate S f r using the RHMC algorithm [11] with optimised values for n and the number of\nfractions. Each term of the action is split into one ultraviolet and two infrared parts,\nSUV = Sg\n\n(4.15)\n\nl\ns\nSIR\u22121 = Sdet\n+ Sdet\n+ Slf 1\n\nSIR\u22122 =\n\nSlf 2 + Ssf r .\n\nIn the leap-frog integrator SUV , SIR\u22121 and SIR\u22122 are put on three separate time scales,\n\u0012 \u0013i\n\u0012 \u0013\nh\n\u03b4\u03c4\n\u03b4 \u03c4 n\u03c4\nm1\nV (\u03c4 ) = VIR\u22122\nA VIR\u22122\n2\n2\n\u0013\n\u0013\n\u0012\n\u0012\n\u03b4\u03c4\n\u03b4\u03c4\nm2\nB VIR\u22121\nA = VIR\u22121\n2m1\n2m1\n\u0013 \u0012\n\u0013\n\u0013\n\u0012\n\u0012\n\u03b4\u03c4\n\u03b4\u03c4\n\u03b4\u03c4\nVQ\nVUV\nB = VUV\n2m1 m2\nm1 m2\n2m1 m2\n\nwhere n\u03c4 = \u03c4 /(\u03b4 \u03c4 ) and the V s are evolution operators of the Hamiltonian.\n4\n\n(4.16)\n(4.17)\n\n(4.18)\n(4.19)\n(4.20)\n\n\fBQCD\n\nHinnerk St\u00fcben\n\n4.2 Solvers\nBesides the standard conjugate gradient (cg) solver BiCGstab and GMRES were implemented.\nVariants with mixed precision arithmetics are available for cg and BiCGstab. In order to reduce\ntime spent in the solver chronological inversion [19] is employed and even-odd preconditioning as\nwell as Schwarz preconditioning [20] are used.\n\n5. Implementation details\nThe code is mostly written Fortran. The C preprocessor is used for preprocessing in general\nand the m4 macro processor for a few files. A simple mechanism is employed to automatically generate multi precision versions from the same source. BQCD is parallelised with MPI and OpenMP.\nThe first version of the program was parallelised for a Cray T3E with the shmem library. shmem\ncan still be used in the hopping matrix multiplication.\nRandom numbers are generated with ranlux [21, 22]. Binary data (SU(3) configurations) can\neither be stored in a native BQCD format or in the International Lattice DataGrid (ILDG) [23]\nformat. The input parameter file and the log file are simple text files that have a keyword value(s)\nstructure. Important parts of the program are instrumented for time profiling and performance\nmeasurements.\n\n#racks\n1/2\n1\n2\n4\n\n#cores\n2048\n4096\n8192\n16384\n\nhopping matrix\nmultiplication (Fortran)\nper core\noverall\nfraction\nMflop/s\nTflop/s\nof peak\n344\n0.70\n10.1 %\n429\n1.76\n12.6 %\n415\n3.40\n12.2 %\n407\n6.67\n12.0 %\n\ncg solver\nper core\nMflop/s\n385\n461\n444\n423\n\noverall\nTflop/s\n0.79\n1.89\n3.64\n6.93\n\nfraction\nof peak\n11.3 %\n13.6 %\n13.1 %\n12.4 %\n\nTable 1: Performance figures for a 483 \u00d7 96 lattice obtained with the pure Fortran implementation on a\nBlue Gene/P.\n\n#racks\n1/2\n1\n2\n4\n\n#cores\n2048\n4096\n8192\n16384\n\nhopping matrix\nmultiplication (assembler)\nper core\noverall\nfraction\nMflop/s\nTflop/s\nof peak\n1057\n2.16\n31.1 %\n1061\n4.35\n31.2 %\n1019\n8.35\n30.0 %\n923\n15.11\n27.1 %\n\ncg solver\nper core\nMflop/s\n821\n802\n763\n684\n\noverall\nTflop/s\n1.68\n3.28\n6.25\n11.21\n\nfraction\nof peak\n24.1 %\n23.6 %\n22.5 %\n20.1 %\n\nTable 2: Performance figures for a 483 \u00d7 96 lattice obtained with an assembler implementation of the hopping matrix multiplication on a Blue Gene/P.\n\n5\n\n\fBQCD\n\nHinnerk St\u00fcben\n\n48^3x96 lattice\nlinear scaling\nD assembler\ncg assembler\ncg Fortran\nD Fortran\n\nTflop/s\n\n10\n\n1\n\n1000\n\n10000\nnumber of cores\n\n100000\n\nFigure 1: Scaling plot of performance data from a Blue Gene/P given in Tables 1 and 2. The dotted line\nindicates linear scaling. Any linear scaling runs parallel to this line.\n\n6. Performance\nThe program scales very well to large numbers of cores. The pure Fortran case even displays\nsome super-linear speedup (see Figure 1). For Blue Gene and Itanium2 assembler implementations\nof the hopping matrix multiplication were provided by Th. Streuer. Performance figures for a 483 \u00d7\n96 lattice obtained on a Blue Gene/P are given in Tables 1 and 2. The assembler implementations\nmakes it possible to overlap communication with computation. This boosts the performance of the\nhopping multiplication of up to a factor of 3.1 and the whole conjugate gradient solver by a factor\nof 1.6 to 2.1 compared with the pure Fortran version. With this code it is possible to run simulations\nat a sustained overall speed of 11.2 Tflop/s\n\n7. Acknowledgements\nWe would like to thank Gerrit Schierholz, Roger Horsley, Dirk Pleiter, Paul Rakow and James\nZanotti for support, stimulating discussions and bug reports, Thomas Streuer for providing assembler code and Andrea Nobile for discussions on Schwarz preconditioning. The computations were\nperformed on the Blue Gene/P at J\u00fclich Supercomputer Centre, J\u00fclich, Germany.\n6\n\n\fBQCD\n\nHinnerk St\u00fcben\n\nReferences\n[1] S. Duane, A. D. Kennedy, B. J. Pendleton and D. Roweth, Phys. Lett. B 195 (1987) 216.\n[2] E. M. Ilgenfritz, W. Kerler, M. M\u00fcller-Preussker and H. St\u00fcben, Phys. Rev. D 65 (2002) 094506\n[arXiv:hep-lat/0111038].\n[3] H. St\u00fcben [QCDSF-UKQCD Collaboration], Nucl. Phys. Proc. Suppl. 94 (2001) 273,\n[arXiv:hep-lat/0011045].\n[4] E. M. Ilgenfritz, W. Kerler, M. M\u00fcller-Preussker, A. Sternbeck and H. St\u00fcben, Phys. Rev. D 69 (2004)\n074511, [arXiv:hep-lat/0309057].\n[5] M. Hasenbusch, Phys. Lett. B 519 (2001) 177 [arXiv:hep-lat/0107019].\n[6] A. Ali Khan, T. Bakeyev, M. G\u00f6ckeler, R. Horsley, D. Pleiter, P.E.L. Rakow, A. Sch\u00e4fer,\nG. Schierholz, H. St\u00fcben [QCDSF Collaboration], Nucl. Phys. Proc. Suppl. 129 (2004) 853\n[arXiv:hep-lat/0309078].\n[7] M. G\u00f6ckeler et al. [QCDSF Collaboration], PoS LAT2007 (2007) 041 [arXiv:0712.3525 [hep-lat]].\n[8] N. Cundy et al. [QCDSF-UKQCD Collaborations], PoS LAT2008 (2008) 132 [arXiv:0811.2355\n[hep-lat]].\n[9] N. Cundy et al., Phys. Rev. D 79 (2009) 094507 [arXiv:0901.3302 [hep-lat]].\n[10] W. Bietenholz et al. [QCDSF-UKQCD Collaborations], PoS LAT2009 (2009) 102 [arXiv:0910.2963\n[hep-lat]].\n[11] M. A. Clark and A. D. Kennedy, Nucl. Phys. Proc. Suppl. 129 (2004) 850 [arXiv:hep-lat/0309084].\n[12] Y. Nakamura et al., AIP Conf. Proc. 756 (2005) 242 [Nucl. Phys. Proc. Suppl. 140 (2005) 535]\n[arXiv:hep-lat/0409153].\n[13] V. G. Bornyakov et al., arXiv:0910.2392 [hep-lat].\n[14] H. Baier et al., arXiv:0911.2174 [hep-lat].\n[15] A. Nobile, PoS(LATTICE 2010)034.\n[16] http://www.zib.de/stueben/bqcd\n[17] C. Morningstar and M. J. Peardon, Phys. Rev. D 69 (2004) 054501 [arXiv:hep-lat/0311018].\n[18] T. Takaishi and P. de Forcrand, Phys. Rev. E 73 (2006) 036706 [arXiv:hep-lat/0505020].\n[19] R. C. Brower, T. Ivanenko, A. R. Levi and K. N. Orginos, Nucl. Phys. B 484 (1997) 353\n[arXiv:hep-lat/9509012].\n[20] M. L\u00fcscher, Comput. Phys. Commun. 165 (2005) 199 [arXiv:hep-lat/0409106].\n[21] M. L\u00fcscher, Comput. Phys. Commun. 79 (1994) 100 [arXiv:hep-lat/9309020].\n[22] http://luscher.web.cern.ch/luscher/ranlux\n[23] M. G. Beckett, B. Joo, C. M. Maynard, D. Pleiter, O. Tatebe and T. Yoshie, arXiv:0910.1692 [hep-lat].\n\n7\n\n\f"}