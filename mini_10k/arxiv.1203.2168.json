{"id": "http://arxiv.org/abs/1203.2168v1", "guidislink": true, "updated": "2012-03-09T20:20:06Z", "updated_parsed": [2012, 3, 9, 20, 20, 6, 4, 69, 0], "published": "2012-03-09T20:20:06Z", "published_parsed": [2012, 3, 9, 20, 20, 6, 4, 69, 0], "title": "Relativized Propositional Calculus", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1203.6211%2C1203.5820%2C1203.0885%2C1203.1148%2C1203.1285%2C1203.5055%2C1203.5206%2C1203.5935%2C1203.0318%2C1203.6088%2C1203.3941%2C1203.5638%2C1203.0245%2C1203.2891%2C1203.5147%2C1203.6827%2C1203.1587%2C1203.1936%2C1203.2096%2C1203.3420%2C1203.4620%2C1203.4664%2C1203.3960%2C1203.1954%2C1203.2788%2C1203.5228%2C1203.3164%2C1203.1033%2C1203.0437%2C1203.6446%2C1203.4176%2C1203.2233%2C1203.3210%2C1203.5442%2C1203.6092%2C1203.0189%2C1203.1080%2C1203.0765%2C1203.0910%2C1203.3255%2C1203.6373%2C1203.4747%2C1203.1578%2C1203.4255%2C1203.5862%2C1203.6573%2C1203.0826%2C1203.4266%2C1203.0392%2C1203.5861%2C1203.4903%2C1203.0516%2C1203.4051%2C1203.6637%2C1203.0557%2C1203.1536%2C1203.1226%2C1203.3409%2C1203.0801%2C1203.1217%2C1203.1641%2C1203.4090%2C1203.3247%2C1203.6719%2C1203.4722%2C1203.0035%2C1203.3225%2C1203.6376%2C1203.0402%2C1203.5614%2C1203.4248%2C1203.6616%2C1203.5609%2C1203.2550%2C1203.6127%2C1203.4425%2C1203.3397%2C1203.3750%2C1203.4037%2C1203.5177%2C1203.2114%2C1203.1431%2C1203.5410%2C1203.0125%2C1203.2642%2C1203.5608%2C1203.0004%2C1203.1043%2C1203.0937%2C1203.2168%2C1203.4157%2C1203.1614%2C1203.2285%2C1203.3290%2C1203.2762%2C1203.4621%2C1203.0089%2C1203.0832%2C1203.3922%2C1203.5998%2C1203.5447&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Relativized Propositional Calculus"}, "summary": "Proof systems for the Relativized Propositional Calculus are defined and\ncompared.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=1203.6211%2C1203.5820%2C1203.0885%2C1203.1148%2C1203.1285%2C1203.5055%2C1203.5206%2C1203.5935%2C1203.0318%2C1203.6088%2C1203.3941%2C1203.5638%2C1203.0245%2C1203.2891%2C1203.5147%2C1203.6827%2C1203.1587%2C1203.1936%2C1203.2096%2C1203.3420%2C1203.4620%2C1203.4664%2C1203.3960%2C1203.1954%2C1203.2788%2C1203.5228%2C1203.3164%2C1203.1033%2C1203.0437%2C1203.6446%2C1203.4176%2C1203.2233%2C1203.3210%2C1203.5442%2C1203.6092%2C1203.0189%2C1203.1080%2C1203.0765%2C1203.0910%2C1203.3255%2C1203.6373%2C1203.4747%2C1203.1578%2C1203.4255%2C1203.5862%2C1203.6573%2C1203.0826%2C1203.4266%2C1203.0392%2C1203.5861%2C1203.4903%2C1203.0516%2C1203.4051%2C1203.6637%2C1203.0557%2C1203.1536%2C1203.1226%2C1203.3409%2C1203.0801%2C1203.1217%2C1203.1641%2C1203.4090%2C1203.3247%2C1203.6719%2C1203.4722%2C1203.0035%2C1203.3225%2C1203.6376%2C1203.0402%2C1203.5614%2C1203.4248%2C1203.6616%2C1203.5609%2C1203.2550%2C1203.6127%2C1203.4425%2C1203.3397%2C1203.3750%2C1203.4037%2C1203.5177%2C1203.2114%2C1203.1431%2C1203.5410%2C1203.0125%2C1203.2642%2C1203.5608%2C1203.0004%2C1203.1043%2C1203.0937%2C1203.2168%2C1203.4157%2C1203.1614%2C1203.2285%2C1203.3290%2C1203.2762%2C1203.4621%2C1203.0089%2C1203.0832%2C1203.3922%2C1203.5998%2C1203.5447&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Proof systems for the Relativized Propositional Calculus are defined and\ncompared."}, "authors": ["Stephen Cook"], "author_detail": {"name": "Stephen Cook"}, "author": "Stephen Cook", "arxiv_comment": "8 pages", "links": [{"href": "http://arxiv.org/abs/1203.2168v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/1203.2168v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.CC", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CC", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/1203.2168v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/1203.2168v1", "journal_reference": null, "doi": null, "fulltext": "Relativized Propositional Calculus\nStephen Cook\nWorking paper, March, 20121\n\narXiv:1203.2168v1 [cs.CC] 9 Mar 2012\n\nMotivation:\nComplexity lower bounds and independence results are easier in a relativized setting. It\nseems reasonable to define a relativized setting for the propositional calculus in order to\nprove lower bounds.\nSyntax:\nThe language of PC(R) (propositional calculus relativized to R) consists of formulas built\nfrom atoms p, q, r, ... using the usual connectives 0,1,\u2227, \u2228, \u00ac, together with the relation symbol\nR. The usual formation rules for formulas apply, but in addition we agree that\nif A1 , ..., An are formulas, n \u2265 0, then R(A1 , ..., An ) is a formula\nSemantics:\nA structure \u03c4 consists of an assignment of a truth value p\u03c4 in {0, 1} (where 1 = TRUE and\n0 = FALSE) to each atom p, together with a set R\u03c4 \u2286 {0, 1}\u2217 of binary strings. Then each\nformula A of PC(R)gets a truth value A\u03c4 \u2208 {0, 1} in the obvious way. In particular,\nR(A1 , ..., An )\u03c4 = 1 \u21d0\u21d2 A\u03c41 ...A\u03c4n \u2208 R\u03c4\nThis syntax and semantics is essentially the same as that defined by Ben-David and Gringauze\n[3]. (See also [1].)\nWe say that A is valid iff A\u03c4 = 1 for all structures \u03c4 , and A is satisfiable iff A\u03c4 = 1 for some\nstructure \u03c4 .\nFor example,\n(R(p) \u2227 R(\u00acp)) \u2283 (R(q) \u2228 R(\u00acq))\nis valid. In general, A is valid iff \u00acA is unsatisfiable.\nTheorem 1: The satisfiability problem for PC(R)formulas is in NP (and hence NPcomplete).\nProof: A certificate for satisfiability need only specify \u03c4 for each atom in A, and for each\noccurrence of the form R(B1 , ..., Bn ) in A, some string v1 ...vn \u2208 {0, 1}n is specified to either\nbe in R\u03c4 or not in R\u03c4 . \u0003\nSystem PK(R):\nThis is Gentzen's sequent system PK for the propositional calculus (see for example [4] or\n[5]), except formulas are allowed to be PC(R)formulas, and in addition to the axiom scheme\nA \u2192 A, and the axioms \u2192 1 and 0 \u2192, we add the axiom scheme\n1\n\nThis is a slight revision of a working paper from June 4, 2003. Much of this material was presented at\nthe complexity theory workshop at Overwolfach, 30 April, 2003.\n\n1\n\n\fAX :\n\n~ A, D)\n~ \u2192 R(C,\n~ B, D)\n~\n\u00acA \u2228 B, A \u2228 \u00acB, R(C,\n\nwhich asserts that if A and B are equivalent, then one can be substituted for the other as\nan argument of R.\nUsing AX, each of the following four schemes E1,E2,E3,E4 has a PK(R) proof with a\nconstant number of sequents:\nE1)\nE2)\nE3)\nE4)\n\n~ A, D)\n~ \u2192 R(C,\n~ 1, D)\n~\nA, R(C,\n~ 1, D)\n~ \u2192 R(C,\n~ A, D)\n~\nA, R(C,\n~ A, D)\n~ \u2192 A, R(C,\n~ 0, D)\n~\nR(C,\n~ 0, D)\n~ \u2192 A, R(C,\n~ A, D)\n~\nR(C,\n\nTheorem 2: PK(R) is sound and complete. Further every valid sequent S has a PK(R)\nproof \u03c0 with O(2|S|) sequents, where each sequent in \u03c0 has length O(|S|), where |S| is the\ntotal number of symbols in S.\nRemark: In counting the number of sequents in a proof, we do not count weakenings and\nexchanges.\nProof: Soundness asserts that every sequent derivable in PK(R) is valid. This is true\nbecause the axioms are valid and the rules preserve validity.\nCompleteness asserts that every valid sequent has a PK(R) proof. To get an upper bound\non the number of lines in the proof, we make the following definition:\nDefinition 1: The cost c(A) of a formula A is the number of occurrences of \u2227, \u2228, \u00ac in A plus,\nfor each subformula R(B1 , ..., Bn ) in A, the number of formulas in the sequence B1 , ..., Bn\nother than 0 or 1. The cost c(S) of a sequent S is the sum of the costs of the formulas in\nthe sequent.\nFor example, the cost of R(p \u2227 q, p \u2227 q, p, 0, 1, 1) is 5: 2 for the two occurrences of \u2227, and 3\nfor the three nontrivial arguments of R.\nNote that c(A) \u2264 |A|, where |A| is the number of symbols in A, counting commas.\nLemma 1: For some constant d, each valid sequent S has a PK(R) proof with at most\nd2c(S) lines, where each line has length O(|S|).\nProof: Induction on c(S).\nBasis: Suppose that c(\u0393 \u2192 \u2206) = 0 and \u0393 \u2192 \u2206 is valid. Then any occurrence of R must be\nas a formula of the form R(v1 , ..., vn ) in one of the sequences \u0393 or \u2206, where each vi is either\n0 or 1. It is easy to check that either 1 is a formula in \u2206, or 0 is a formula in \u0393, or some\nformula occurs in both \u0393 and \u2206. In each case, \u0393 \u2192 \u2206 can be derived from an axiom (other\nthan AX)) by weakenings and exchanges.\nInduction Step: c(\u0393 \u2192 \u2206) > 0. Then some formula in either \u0393 or \u2206 must have a\nprincipal connective that is either \u2227, \u2228, \u00ac or R. For the cases \u2227, \u2228, \u00ac we derive \u0393 \u2192 \u2206 by\n2\n\n\fthe appropriate PK introduction rule (left or right), thus reducing the problem to deriving\none or two valid sequents, each of reduced cost, so the Induction Hypothesis applies.\nNow suppose that \u0393 \u2192 \u2206 has the form\n~ A, D)\n~\n\u0393\u2032 \u2192 \u2206\u2032 , R(C,\n\n(1)\n\nwhere A is not 0 or 1. Then we use the derivation below, based on E2 and E4 above, where\nwe have omitted weakenings and exchanges. All indicated inferences use the cut rule.\n~ 1, D)\n~\nA, \u0393\u2032 \u2192 \u2206\u2032 , R(C,\nE2\n~ A, D)\n~\nA, \u0393\u2032 \u2192 \u2206\u2032 , R(C,\n\n~ 0, D)\n~\n\u0393\u2032 \u2192 \u2206\u2032 , A, R(C,\nE4\n~ A, D)\n~\n\u0393\u2032 \u2192 \u2206\u2032 , A, R(C,\n\n~ A, D)\n~\n\u0393\u2032 \u2192 \u2206\u2032 , R(C,\nThis reduces the proof of (1) to the proof of two valid sequents, each of which has cost one\nless than the cost of (1). The induction hyposthesis applied to these two sequents gives us\nthe desired result.\nThe remaining case to consider is that \u0393 \u2192 \u2206 has the form\n~ A, D)\n~ \u2192 \u2206\u2032\n\u0393\u2032 , R(C,\nwhere again A is not 0 or 1. This time we use the derivation below, using E1 and E3:\n~ 0, D),\n~ \u0393\u2032 \u2192 \u2206\u2032 , A\nR(C,\nE3\n~ A, D),\n~ \u0393\u2032 \u2192 \u2206\u2032 , A\nR(C,\n\n~ 1, D),\n~ \u0393\u2032 \u2192 \u2206\u2032\nA, R(C,\nE1\n~ A, D),\n~ \u0393\u2032 \u2192 \u2206\u2032\nA, R(C,\n\n~ A, D)\n~ \u2192 \u2206\u2032\n\u0393\u2032 , R(C,\nNow we apply the induction hypothesis, as in the previous case.\n\nQuantified Relativized Propositional Calculus\nFormulas in QPC(R) are like those in PC(R), except we now allow quantifiers \u2200x and \u2203x,\nfor an atom x. The semantics are obtained in the obvious way by letting x range over {0, 1}.\nNotation: \u03a0q1 (R) is the class of formulas of QPC(R) of the form\n\u2200~xA(~x, ~p, R)\nwhere A is quantifier-free.\nTheorem 3: The satisfiability problem for QPC(R) is complete for NEXP. The same is\ntrue for the satisfiability problem restricted to \u03a0q1 (R) formulas.\nProof: It is easy to see that the satisfiability problem is in NEXP: Given a formula A of\nQPC(R), let n be the largest number of arguments of any occurrence if R in A. Guess at\n3\n\n\fa structure \u03c4 for A by writing down truth values to the free variables of A, and specifying\nR\u03c4 for R up to strings of length n by writing down a subset of {0, 1}\u2264n. Now verify that \u03c4\nsatisfies A.\nHardness can be established either by a direct reduction of Turing machine computations\nto QPC(R) satisfiability (proof due to Charles Rackoff), or by using the proof that succint\ncircuit satisfiability is NEXP complete (see page 494 of Christos Papadimitriou's textbook\non Computational Complexity) (proof due to Tsuyoshi Morioka).\nNotation: |A| denotes the length of a formula A; that is, the total number of occurrences\nof symbols in A.\nNote that if there are many different variables occurring in A then the binary length of A\ncould be as more like |A| log |A|.\nLemma 1A: (with Rackoff) For every nondeterministic TM M there is a polytime transformation FM such that for all x \u2208 {0, 1}\u2217, FM (x) is a \u03a0q1 (R) formula, and |FM (x)| = O(|x|),\nand\nA = FM (x) is satisfiable \u21d0\u21d2 M accepts x in at most 2|x| steps\nProof Outline: The proof is like that of the Cook-Levin Theorem. Let C0 , C2 , ..., CT be a\ncomputation of T = 2n steps of M on input x, where n = |x|. Here Ci is a bit string of length\nO(2n ) coding the configuration of M at step i. Thus the computation can be represented by\na relation R \u2286 {0, 1}O(n), where R(~p, ~q) represents bit p~ of C~q.\nThen FM (x) is the prenex form of S \u2227 I \u2227 E where\nS asserts that the computation starts right\nI asserts that the computation increments right\nE asserts that the computation ends right\nThe formula E is easy, since it merely asserts that the configuration CT is in an accepting\nstate.\nThe formula S asserts that the inital configuration, coded by R(~p, ~0) (as p~ ranges over all\npossible values), represents a tape configuration consisting of x followed by blanks, and the\ninitial state.\nTo see how to express this with a formula of length O(n) we assume for simplicity that\nx = x1 ...xn is a bit string over {0, 1}. We show how to construct a formula S1 (~p) of length\nO(n) which asserts that for i = 1, ..., n if ~p represents i in binary then (R(~p, ~0) \u2194 xi ). This\nexplains the interesting part of the construction of S.\nTo see how to construct S1 , let k = \u2308log2 (n + 1)\u2309 and suppose p1 , ..., pk represent the k\nlow-order bits when p~ represents a binary number i. (When i \u2264 n, then the reamaining bits\npk+1 , ..., pcn are 0.) Consider a Boolean circuit \u03b1 with inputs p1 , ..., pk and outputs r1 , ..., rn\nsuch that ri = 1 iff p1 ...pk represents i in binary. Note that \u03b1 can be constructed with O(n)\ngates by a simple recursion on k.\n4\n\n\fLet \u03b2(p1 , ..., pk , ~g , ~r) be a (quantifier-free) propositional formula of length O(n) which holds\niff the circuit \u03b1 with input values p1 , ..., pk takes on values ~g for its internal gates and values\n~r for its output gates. Then S1 (~p) is the formula\n\u2200~g \u2200~r[(\u03b2(p1 , ..., pk , ~g , ~r) \u2227 Z(~p)) \u2192 [R(~p, ~0) \u2194 ((r1 \u2227 x1 ) \u2228 ... \u2228 (rn \u2227 xn ))]]\nwhere\nZ(~p) \u2261 \u00acpk+1 \u2227 ... \u2227 \u00acpcn\nIt remains to discuss the formula I. This asserts that for all t < 2n , Ct+1 is the successor\nconfiguration to Ct (when Ct and Ct+1 are represented by R.) Given a reasonable representation of the Turing machine configurations, it is straightforwward to construct such a\n\u03a0q1 (R)-formula I of length O(n). \u0003\nCorollary: There is no proof system for the valid formulas of QPC(R)(or for the valid\n\u03a3q1 (R) formulas) with the property that every valid formula A has a proof P such that\n|P | = 2o(|A|)\n\n(2)\n\nwhere |P | is the bit length of P .\nProof of the Corollary: We use the following\nFact: There is a universal nondeterministic TM M0 such that for every nondeterministic\nTM M and all sufficiently large strings x which code M,\nM0 accepts x within 2|x| steps \u21d0\u21d2 M accepts x within 20.4|x| steps\nLet c0 be a constant such that, referring to Lemma 1A,\n|FM0 (x)| \u2264 c0 |x|, for all sufficiently long x\nNow suppose \u03a0 is a proof system for unsatisfiability which violates the Corollary, so every\nunsatisfiable \u03a3q1 (R) formula A has a proof P satisfying (2). Let M1 be a nondeterministic\nTM which on input x computes A = FM0 (x), guesses a proof P , and accepts iff P is a \u03a0\nproof of A (showing that A is unsatisfiable). Let \u03b4 = 0.2/c0 and let x1 be a sufficiently long\nstring coding M1 . Then\nM1 accepts x1 within 20.4|x1 | steps\n\u21d0\u21d2 there is a \u03a0 proof P of A = FM0 (x1 ) where |A| \u2264 c0 |x1 | and |P | \u2264 2\u03b4|A| \u2264 20.2|x1|\n\u21d0\u21d2 A is unsatisfiable\n\u21d0\u21d2 M0 does not accept x1 within 2|x1 | steps\n\u21d0\u21d2 M1 does not accept x1 within 2.4|x1 | steps.\nThis is a contradiction. \u0003\nSystem G(R):\nThis is the system G of quantified propositional calculus described in section 4.6 of Krajicek's\n5\n\n\fbook [5], extended so that formulas are allowed to be QPC(R) formulas, and we allow the\naxiom scheme AX above. In other words, G(R) is obtained from PK(R) by extending the\ndefinition of formula, and allowing the four quantifier rules of LK(Krajicek, page 58).\nTheorem 4: G(R) is sound and complete.\nProof: Soundness is easy, since as before the axioms are valid and the rules preserve validity.\nWe prove that every valid sequent has a G(R) proof by double induction, first on the\nmaximum quantifier depth of formulas in the sequent, and second on the cost c(S) of the\nsequent, as defined in Definition 1 above.\nTo see how to reduce the quantifier depth, consider the case\n\u0393\u2032 \u2192 \u2206\u2032 , \u2203xA(x)\nThis can be derived by two applications of \u2203-right and one of contraction from\n\u0393\u2032 \u2192 \u2206\u2032 , A(0), A(1)\nand this sequent is valid if the previous one is valid. \u0003\nRemark: It seems that the obvious upper bound for the above proof length is doubly\nexponential, even in the case of nonrelativized G, and even for the case nonrelativized G1 .\nConsider the example\n\u2192 \u2203x1 ...\u2203xn (A1 \u2227 ... \u2227 Am )\nIf we apply the above method to get rid of the existential quantifiers, we obtain a sequent\nwith 2n formulas, each of which is a conjunction of m formulas. Now to unwind all of these\nn\nconjunctions in the usual way seems to generate 2m2 sequents.\nRackoff points out that this large upper bound is not surprising for the relativized case. In\nfact, if a simply exponential upper bound could be found, it would follow from Theorem 3\nthat NEXP= coNEXP.\nHowever there is a simply exponential upper bound for the nonrelativized case.\nTheorem 5: (See Theorem VII.3.9 in [4].) Every valid sequent S of QPC (with no R) has\na tree-like G proof with O(2|S|) sequents (not counting weakenings and exchanges), where\neach sequent has length O(|S|) and all cut formulas are atomic.\nWork to be done:\n\u2022 Carry out the translations of the relativized theories S2i (R) and T2i (R) into QPC(R). It\nmay be easier to translate the two-sorted versions V i (R) and T V i (R). (The theories V i and\nT V i are presented in [4], where propositional translations are given.)\n\u2022 Once the translations have been written down, it should be possible to describe families of\nvalid QPC(R) formulas corresponding to various search problems, and prove lower bounds\n6\n\n\fon their G(R) proof lengths by the same search problem separations used to separate various\nrelativized theories of bounded arithmetic.\nExample: Let WPHP(R, n) be a relativized propositional formula (in fact a \u03a3q2 (R) for2\nmula) representing the weak pigeonhole principle PHPaa as follows. (Here we assume that\np~ and ~q are vectors of 2n variables, while ~r and ~s are vectors of just n variables.)\nWPHP(R, n) \u2261 \u2203~p\u2203~q\u2203~r[(~p 6= ~q \u2227 R(~p, ~r) \u2227 R(~q, ~r)) \u2228 \u2200~s\u00acR(~p, ~s)]\nConjecture 1: hWPHP(R, n)i does not have polysize G\u22172 (R) proofs.\nProposed Proof Outline:\n(i) Theorem 11.3.1, page 220 of Krajicek's book shows that the witnessing problem for\nWPHP(R, n) is not in F P N P (R) .\n(ii) The witnessing problem for G\u22172 (R) proofs of \u03a3q2 (R) formulas is in F P N P (R) . This is by\nanalogy with the fact that the witnessing problem for G\u22171 (R) proofs of \u03a3q1 (R) formulas is in\nF P (R).\n(iii) If hWPHP(R, n)i has polysize G\u22172 (R) proofs, then given n we could use an NP oracle\nto find a proof of WPHP(R, n)i, and then use (ii) to solve the witnessing problem with an\nNP (R) oracle. This contradicts (i). \u0003\nIn the same vein, we know (by translations into bounded depth Frege systems) that\nS2 (R) 6\u22a2 P HP (R)\n(see Pitassi's thesis). This suggests\nConjecture 2: hPHP(R, n)i does not have polysize Gi (R)-proofs, for any i.\nApparently we can translate theorems of S2 (R) both into quasipolysize families of bounded\ndepth Frege proofs, and into polysize families of G(R) proofs. This leads to\nConjecture 3 (Pudlak): Find an RSUV style isomormphism between AC 0 -Frege and G(R).\nIn a slightly different vein, we have\nConjecture 4: (Morioka:) The ITER(R) Tautologies do not have polysize G\u22171 (R) proofs.\nProposed Proof (Morioka): Prove a superpolynomial lower bound for the circuit size for\nsolving ITER(R).\n\u2022 Think about using the oracle separations of NC and P in [2] to separate relativized G\u22171 (R)\nand G1 (R).\n\u2022 (Far out:) Try for lower bounds for unrelativized G. Of course there's no super proof\nsystem for QPC (including G) under the assumption NP 6= PSPACE. Can we get a lower\nbound for G proofs under the weaker assumption P 6= PSPACE?\n7\n\n\fReferences\n1. Klaus Aehlig and Arnold Beckmann, Propositional Logic for Circuit Classes. CSL 2007.\n2. Klaus Aehlig, Stephen Cook, and Phuong Nguyen, Relativizing Small Complexity Classes\nand their Theories. CSL 2007.\n3. Shai Ben-David and Anna Gringauze, On the Existence of Optimal Propositional Proof\nSystems and Oracle-Relativized Propositional Logic. Manuscript, pp 1-12.\n4. Stephen Cook and Phuong Nguyen, Logical Foundations of Proof Complexity. ASL\nPerspectives in Logic Series, Cambridge University Press, 2010.\n5. Jan Krajicek, Bounded Arithmetic, Propositional Logic, and Complexity Theory. Cambridge, 1995.\n\n8\n\n\f"}