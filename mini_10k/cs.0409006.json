{"id": "http://arxiv.org/abs/cs/0409006v1", "guidislink": true, "updated": "2004-09-04T12:52:22Z", "updated_parsed": [2004, 9, 4, 12, 52, 22, 5, 248, 0], "published": "2004-09-04T12:52:22Z", "published_parsed": [2004, 9, 4, 12, 52, 22, 5, 248, 0], "title": "Maple+GrTensorII libraries for cosmology", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0304015%2Ccs%2F0304043%2Ccs%2F0304002%2Ccs%2F0304027%2Ccs%2F0304008%2Ccs%2F0304003%2Ccs%2F0304013%2Ccs%2F0304031%2Ccs%2F0304018%2Ccs%2F0304017%2Ccs%2F0304036%2Ccs%2F0304016%2Ccs%2F0304030%2Ccs%2F0304032%2Ccs%2F0304010%2Ccs%2F0304041%2Ccs%2F0304035%2Ccs%2F0304012%2Ccs%2F0304024%2Ccs%2F0304029%2Ccs%2F0304034%2Ccs%2F0304025%2Ccs%2F0304005%2Ccs%2F0304037%2Ccs%2F0304038%2Ccs%2F0304023%2Ccs%2F0304028%2Ccs%2F0409045%2Ccs%2F0409049%2Ccs%2F0409024%2Ccs%2F0409018%2Ccs%2F0409010%2Ccs%2F0409021%2Ccs%2F0409022%2Ccs%2F0409025%2Ccs%2F0409005%2Ccs%2F0409036%2Ccs%2F0409027%2Ccs%2F0409004%2Ccs%2F0409039%2Ccs%2F0409013%2Ccs%2F0409056%2Ccs%2F0409033%2Ccs%2F0409028%2Ccs%2F0409035%2Ccs%2F0409008%2Ccs%2F0409037%2Ccs%2F0409009%2Ccs%2F0409051%2Ccs%2F0409029%2Ccs%2F0409058%2Ccs%2F0409044%2Ccs%2F0409031%2Ccs%2F0409006%2Ccs%2F0409059%2Ccs%2F0409020%2Ccs%2F0409042%2Ccs%2F0409047%2Ccs%2F0409001%2Ccs%2F0409016%2Ccs%2F0409046%2Ccs%2F0409012%2Ccs%2F0409023%2Ccs%2F0409003%2Ccs%2F0409015%2Ccs%2F0409050%2Ccs%2F0409038%2Ccs%2F0409017%2Ccs%2F0409052%2Ccs%2F0409043%2Ccs%2F0409002%2Ccs%2F0409057%2Ccs%2F0409055%2Ccs%2F0409032%2Ccs%2F0409014%2Ccs%2F0409048%2Ccs%2F0409041%2Ccs%2F0409054%2Ccs%2F0409019%2Ccs%2F0409007%2Ccs%2F0409053%2Ccs%2F0409030%2Ccs%2F0409040%2Ccs%2F0409011%2Ccs%2F0409026%2Ccs%2F0409034%2Ccs%2F0403029%2Ccs%2F0403017%2Ccs%2F0403001%2Ccs%2F0403024%2Ccs%2F0403041%2Ccs%2F0403021%2Ccs%2F0403011%2Ccs%2F0403031%2Ccs%2F0403012%2Ccs%2F0403013%2Ccs%2F0403018%2Ccs%2F0403002%2Ccs%2F0403016%2Ccs%2F0403015%2Ccs%2F0403007&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Maple+GrTensorII libraries for cosmology"}, "summary": "The article mainly presents some results in using MAPLE platform for computer\nalgebra and GrTensorII package in doing calculations for theoretical and\nnumerical cosmology", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0304015%2Ccs%2F0304043%2Ccs%2F0304002%2Ccs%2F0304027%2Ccs%2F0304008%2Ccs%2F0304003%2Ccs%2F0304013%2Ccs%2F0304031%2Ccs%2F0304018%2Ccs%2F0304017%2Ccs%2F0304036%2Ccs%2F0304016%2Ccs%2F0304030%2Ccs%2F0304032%2Ccs%2F0304010%2Ccs%2F0304041%2Ccs%2F0304035%2Ccs%2F0304012%2Ccs%2F0304024%2Ccs%2F0304029%2Ccs%2F0304034%2Ccs%2F0304025%2Ccs%2F0304005%2Ccs%2F0304037%2Ccs%2F0304038%2Ccs%2F0304023%2Ccs%2F0304028%2Ccs%2F0409045%2Ccs%2F0409049%2Ccs%2F0409024%2Ccs%2F0409018%2Ccs%2F0409010%2Ccs%2F0409021%2Ccs%2F0409022%2Ccs%2F0409025%2Ccs%2F0409005%2Ccs%2F0409036%2Ccs%2F0409027%2Ccs%2F0409004%2Ccs%2F0409039%2Ccs%2F0409013%2Ccs%2F0409056%2Ccs%2F0409033%2Ccs%2F0409028%2Ccs%2F0409035%2Ccs%2F0409008%2Ccs%2F0409037%2Ccs%2F0409009%2Ccs%2F0409051%2Ccs%2F0409029%2Ccs%2F0409058%2Ccs%2F0409044%2Ccs%2F0409031%2Ccs%2F0409006%2Ccs%2F0409059%2Ccs%2F0409020%2Ccs%2F0409042%2Ccs%2F0409047%2Ccs%2F0409001%2Ccs%2F0409016%2Ccs%2F0409046%2Ccs%2F0409012%2Ccs%2F0409023%2Ccs%2F0409003%2Ccs%2F0409015%2Ccs%2F0409050%2Ccs%2F0409038%2Ccs%2F0409017%2Ccs%2F0409052%2Ccs%2F0409043%2Ccs%2F0409002%2Ccs%2F0409057%2Ccs%2F0409055%2Ccs%2F0409032%2Ccs%2F0409014%2Ccs%2F0409048%2Ccs%2F0409041%2Ccs%2F0409054%2Ccs%2F0409019%2Ccs%2F0409007%2Ccs%2F0409053%2Ccs%2F0409030%2Ccs%2F0409040%2Ccs%2F0409011%2Ccs%2F0409026%2Ccs%2F0409034%2Ccs%2F0403029%2Ccs%2F0403017%2Ccs%2F0403001%2Ccs%2F0403024%2Ccs%2F0403041%2Ccs%2F0403021%2Ccs%2F0403011%2Ccs%2F0403031%2Ccs%2F0403012%2Ccs%2F0403013%2Ccs%2F0403018%2Ccs%2F0403002%2Ccs%2F0403016%2Ccs%2F0403015%2Ccs%2F0403007&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The article mainly presents some results in using MAPLE platform for computer\nalgebra and GrTensorII package in doing calculations for theoretical and\nnumerical cosmology"}, "authors": ["Dumitru N. Vulcanov", "Valentina D. Vulcanov"], "author_detail": {"name": "Valentina D. Vulcanov"}, "author": "Valentina D. Vulcanov", "arxiv_comment": "LaTeX LLNCS style, 8 pages, accepted for SYNASC 2004 - 6th\n  International Symposium on Symbolic and Numeric Algorithms for Scientific\n  Computing, Timisoara, Romania, September 26-30 2004", "links": [{"href": "http://arxiv.org/abs/cs/0409006v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/cs/0409006v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.SC", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.SC", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "gr-qc", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "I.1; J.2", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/cs/0409006v1", "affiliation": "The West University of Timisoara, Romania", "arxiv_url": "http://arxiv.org/abs/cs/0409006v1", "journal_reference": null, "doi": null, "fulltext": "Maple+GrTensorII libraries for cosmology\nDumitru N. Vulcanov1 and Valentina D.Vulcanov2\n\narXiv:cs/0409006v1 [cs.SC] 4 Sep 2004\n\n1\n\nThe West University of Timi\u015foara\nFaculty of Physics, Theoretical and Computational Physics Department\nvulcan@physics.uvt.ro\n2\nThe West University of Timi\u015foara\nFaculty of Mathematics,\nvali@mitica.physics.uvt.ro\n\nAbstract. The article mainly presents some results in using MAPLE\nplatform for computer algebra (CA) and GrTensorII package in doing\ncalculations for theoretical and numerical cosmology.\nAMS Subject Classification: 68W30, 83C05, 85A40\nKeywords and phrases: computer algebra, general relativity, cosmology\n\n1\n\nIntroduction\n\nModern cosmology is based on general relativity (GR) and Einstein equations.\nGR requires lengthy (or cumbersome) calculations which could be solved by\ncomputer algebra methods. During the years, a plethora of CA platforms was\nused for GR purposes, as REDUCE (with EXCALC package), SHEEP or MAXIMA (see for example in [1], [2] or [4]). Although some advantages as flexibility\nand speed were obvious, recently, platforms as MAPLE or MATHEMATICA are\npreferred by those working in the field, due to their more advanced graphical\nfacilities - for a comparison between MAPLE and REDUCE see [3].\nIn the last years, an increased interest in theoretical cosmology is visible because of the new facts revealed by the experimental astrophysics, mainly in the\nsense that the universe is actually in an accelerated expansion period - the so\ncalled \"cosmic acceleration\" (see [7]) . In order to fit these new facts with the\nstandard model of the Universe some new mechanisms are proposed, based on\ndark-matter, dark-energy and/or cosmological constant hypothesis. New models are proposed in the literature practically on a daily basis demanding new\nspecific tools and libraries from the computational science, including CA applications specially designed for theoretical cosmology. Thus we concentrate here\nin symbolic manipulation of Einstein equations with MAPLE and GrTensorII\npackage (see at http://grtensor.org). We packed our procedures in a specific\nlibrary, containing all the necessary ingredients for theoretical cosmology - Friedmann equations, a scalar field minimally coupled with gravity and other matter\nfields terms to be used specifically.\nThe article is organized as follows : next section 2 introduces shortly GrTensorII package and his main facilities. Then section 3 presents how we implemented non-vacuum Einstein equations in a specific form for cosmology (based\n\n\fon Friedmann-Robertson-Walker - FRW metric) with the stress-energy tensor\ncomponents designed for interacting with gravity matter and one real scalar field\nseparately added. The last section is dedicated to some new results we obtained\nwith our MAPLE libraries in the so called \"reverse-technology\" [6] method for\ntreating inflation and cosmic expansion triggered by a real scalar field.\nOur library, called Cosmo, can be provided by request to the authors. We\nmainly used MAPLE 7 and MAPLE9 versions but as far as we know the library\ncan be used with other MAPLE environments starting with MAPLE V.\n\n2\n\nSome words about GrTensorII package\n\nGrTensorII is a free package from http://grtensor.org for the calculation\nand manipulation of components of tensors and related objects, embedded in\nMAPLE. Rather than focus upon a specific type or method of calculation, the\npackage has been designed to operate efficiently for a wide range of applications\nand allows the use of a number of different mathematical formalisms. Algorithms are optimized for the individual formalisms and transformations between\nformalisms has been made simple and intuitive. Additionally, the package allows for customization and expansion with the ability to define new objects,\nuser-defined algorithms, and add-on libraries.\nThe geometrical environment for which GrTensorII is designed is a Riemannian manifold with connection compatible with the riemannian metric. Thus\nthere are special commands and routines for introducing and calculating geometrical objects as the metric, Christoffel symbols, curvature (Ricci tensor and\nscalar) and the Einstein tensor - as for a couple of examples. Manipulating\nwith indices and extracting tensor components are easy to do from some special\ncommands and conventions. GrTensorII has a powerful facility for defining new\ntensors, using their natural definitions. As for an example, for calculating the\nBianchi identities\nGij;i = 0\n(1)\n(where Gij = Rij \u2212 12 gij R is the Einstein tensor defined with the Ricci tensor\nRij and the Ricci scalar R, gij is the metric and we denoted with the semicolon ;\nthe covariant derivative of the metric compatible connection) we can use a short\nsequence of GrTensorII commands for calculating the left side of eq. 1 :\n>\n>\n>\n>\n\ngrtw();\nqload(rob_sons);\ngrdef('bia{ ^i }:=G{ ^i ^j ;j }');\ngrcalc(bia(up)); grdisplay(bia(up));\n\nActually above, the first two commands are for starting the GrTensorII package\nand loading the FRW metric (previously constructed and stored in a special\ndirectory - GrTensorII provides also an entire collection of predefined metrics,\nbut the user can also define his owns using a gmake(...) command). The last\nline contains two commands, for effectively calculating the new bia(up) tensor\n\n\fand for displaying the results. If the metric in discussion is compatible with the\nconnection the bia() tensor must have all components vanishing.\nThe central point of any calculation with GrTensorII is grcalc() command.\nOften large terms result in individual tensor components which need to be simplified. For this gralter() and grmap() commands are provided equiped with\nseveral simplifying options, mainly coming from the simplifying commands of\nMAPLE and some specific to GrTensorII. Actually the user is free to choose his\nown simplification strategy inside these commands.\nSpecial libraries are also available for doing calculation in different frames or\nbasis and in Newman-Penrose formalism.\n\n3\n\nThe Cosmo library\n\nAs we mentioned earlier, in modern cosmology we are using the FriedmannRobertson-Walker metric (FRW), having the line element in spherical coordinates\n\u0014\n\u0015\ndr2\n2\n2\n2\n2\n2\n2 2\n2\n+ r (d\u03b8 + sin \u03b8 d\u03c6 )\n(2)\nds = \u2212c dt + R(t)\n1 \u2212 kr2\n\nas a generic metric for describing the dynamics of the universe. Here k is a\nconstant with arbitrary value, positive (for closed universes), negative (for open\nuniverse) and zero for flat universes. Usually, this constant is taken 1, \u22121 or\n0 respectively. R(t) is called scale factor, and is only function of time, due to\nthe homogeneity and isotropy of space as in standard model of the universe\nis presumed. The dynamic equations are obtained introducing (2) in the nonvacuum Einstein equations, namely\n1\n8\u03c0G\nGij = Rij \u2212 gij R + \u03bbgij = 4 Tij\n2\nc\n\n(3)\n\nwhere \u03bb is the cosmological constant, Tij the stress-energy tensor, G the gravitational constant, c the speed of light and i, j = 0, 1, 2, 3. The matter content of\nthe universe is given by the stress-energy tensor T ij which we shall use as :\nij\nT ij = T\u03c6ij + Tm\n\n(4)\n\nwhere the stress-energy tensor of a scalar field minimally coupled with gravity\nand the stress-energy tensor of the matter (other than the scalar field) have the\nform of a perfect fluid, namely :\nT\u03c6ij = (p\u03c6 + \u03c1\u03c6 )ui uj + p\u03c6 g ij\nij\nTm\n\ni j\n\n= (p + \u03c1)u u + pg\n\nij\n\n(5)\n(6)\n\nAbove the scalar field pressure and density are\n1\np\u03c6 = \u2212 \u2202 i \u2202i \u03c6 \u2212\n2\n1\n\u03c1\u03c6 = \u2212 \u2202 i \u2202i \u03c6 +\n2\n\n1\nV (\u03c6)\n2\n1\nV (\u03c6)\n2\n\n(7)\n(8)\n\n\fHere we used the 4-velocities ui obviously having ui ui = \u22121.\nIntroducing all these in (3) and defining the Hubble function (usually called\nHubble constant) and the deceleration factor as\nH(t) =\n\n\u1e58(t)\nR\u0308(t)\n; Q(t) = \u2212\nR0\n2H(t)2 R(t)\n\n(9)\n\nwhere a dot means time derivative and R0 is the initial (actual) scale factor,\nwe should obtain the dynamical equations describing the behavior of the universe, the so called Friedmann equations. The whole package will contain also\nthe conservation laws equations and the Klein-Gordon equation for the scalar\nfield, separately. We composed a sequence of GrTensorII commands for this purpose. First, defining the 4-velocities, the scalar field functions and the Einstein\nequations, we have\n>\n>\n>\n>\n\n>\n\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n\nrestart;grtw();qload(rob_sons);\ngrdef('u{ i } := -c*kdelta{ i $t}');\ngrdef('Scal := Phi(t)');\ngrdef('T1{ i j } := Scal{ ,i }*Scal{ ,j } g{ i j }*(g{ ^a ^b }*Scal{ ,a }*Scal{ ,b }+\nV(t))/2');\ngrdef('TT1{ i j } :=(epsilonphi(t)+\npphi(t))*u{ i }*u{ j } +\npphi(t)*g{ i j }');\npphi(t):=diff(Phi(t),t)^2/2/c^2-V(t)/2;\nepsilonphi(t):=diff(Phi(t),t)^2/2/c^2+V(t)/2;\ngrdef('test{ i j }:=T1{ i j }- TT1{ i j }');\ngrcalc(test(dn,dn)); grdisplay(test(dn,dn));\ngrdef('T2{ i j } := (epsilon(t) + p(t))*u{ i }*u{ j } +\np(t)*g{ i j}');\ngrdef('T{ i j } :=T1{ i j } + T2{ i j }');\ngrdef('cons{ i }:= T{ i ^j ;j }'); grcalc(cons(dn));\nEcuKG:=grcomponent(Box[Scal],[]) -DV(t)/2;\ngrdef('Ein{ i j } := G{ i j } - 8*Pi*G*T{ i j }/c^4');\ngrcalc(Ein(dn,dn)); gralter(Ein(dn,dn),expand);\n\nHere we defined twice the stress-energy components for the scalar field, due\nto the possibility of a direct definition (T1()) and through the corresponding\ndensity and pressure (TT1()). Because we are working in a coordinate frame,\nthese must have equal components and we can check it through test(dn,dn)\ntensor as having vanishing components. Finally the total stress-energy tensor\nand the Einstein equations are defined, as it is obvious. Separately we defined\nthe conservation law-equation (cons()) as the contracted covariant derivative of\nthe stress-energy tensor and the Klein-Gordon equation for the scalar field - as\nthe unique component of the d'Alembertian and adding a special function of the\nderivative of the potential in terms of the scalar field DV(t). We shall treat this\nas an extra variable to be extracted solving the equations.\n\n\fNext step is to extract, one by one the components of Ein(dn,dn) as the\nfinal form of (3) through a sequence of grcomponent commands followed by\ncertain simplifications and rearrangements of terms. As some of the equations\nare identical we shall restrict only to two of them, coupled with conservation and\nKlein-Gordon equations. As a result we denoted with Ecunr1 and Ecunr2 the\nindependent Einstein equations and with Ecunr3 the conservation law equation\n(EcuKG remains as it is). We also provided a separate equation (Ecnur22) for\none of the above terms written with the acceleration factor Q(t). Then comes a\nseries of substitution commands for casting the equations in terms of the Hubble\nfunction, deceleration factor and geometrical factor defined as K(t) = k/R(t)2 :\n>\n>\n>\n>\n>\n>\n>\n>\n>\n>\n\nEcunr1:=expand(simplify(subs(k=K(t)*RR(t)^2,Ecunr1)));\nEcunr2:=expand(simplify(subs(k=K(t)*RR(t)^2,Ecunr2)));\nEcunr1:=subs(diff(RR(t),t)=H(t)*RR(t),Ecunr1);\nEcunr22:=subs(diff(RR(t),t,t)=-2*H(t)^2*RR(t)*Q(t),\nEcunr2);\nEcunr22:=subs(diff(RR(t),t)=H(t)*RR(t),Ecunr22);\nEcunr2:=subs(diff(RR(t),t)=H(t)*RR(t),Ecunr2);\nEcunr2:=expand(Ecunr2);\nEcunr2:=subs(diff(RR(t),t)=H(t)*RR(t),Ecunr2);\nEcunr3:=subs(diff(RR(t),t)=H(t)*RR(t),Ecunr3);\nEcuKG:=subs(diff(RR(t),t)=H(t)*RR(t),EcuKG);\n\nFinally we have the Friedmann equations in the form :\ni 1\n1 h\n\u03c6\u0308(t)\n+\n3H(t)\n\u03c6\u0307(t)\n+ DV (t) = 0\nc2\n2\n3H(t)2 + 3c2 K(t) \u2212\n\ni\n4\u03c0G h\n\u03c6\u0307(t)2 + c2 V (t) + 2c2 \u01eb(t) = 0\n4\nc\n\n2\u1e22(t) + 3H(t)2 + c2 K(t) +\n\n4\u03c0G h\n\u03c6\u0307(t)2\nc4\n\u0003\n\u2212 c2 V (t) + 2c2 p(t) = 0\n\nH(t)2 (1 \u2212 4Q(t)) + c2 K(t) +\n\n4\u03c0G h\n\u03c6\u0307(t)2\nc4\n\u0003\n\u2212 c2 V (t) + 2c2 p(t) = 0\n\ni 1\n1 h\n2\n+ V\u0307 (t) + \u01eb\u0307(t) +\n\u03c6\u0308(t)\n\u03c6\u0307(t)\n+\n3H(t)\n\u03c6\u0307(t)\nc2\n2\n3H(t)(p(t) + \u01eb(t)) = 0\n\n(10)\n(11)\n\n(12)\n\n(13)\n\n(14)\n\nThese are the classical Friedmann equations (11 and 12, 13) together with KleinGordon equation (10) and the conservation law (14). After all these calculations\nare done we save a MAPLE type library, called cosmo.m through a save command. We have to point out here that there are some new facts around save\ncommand starting with MAPLE 6 version, so for this we need to do as :\n\n\f> parse(cat(\"save \",substring(convert([anames(),\n\"cosmo.m\"],string),2..-2)),statement);\nHaving this library stored, every-time one need the above equations, it can load\nfast through a read command. It provides all the functions and variables directly\nwithout running all the stuff we presented here above. Thus, the cosmo.m library provides all the necessary environment for doing calculation within the\nstandard model of cosmology, with FRW metric and a scalar field and other\nmatter variables included. For these last ones there are some functions left undefined (epsilon(t) and p(t)) where the user can define other matter fields than\nthe scalar field to be included in the model - even a second scalar field and/or\nthe cosmological constant as describing the dark-energy content of the Universe.\nThus our library can be used in more applications than those we presented in\nthe next section. In the same purpose, we left in the library some of the original\nequations unprocessed - having different names - as for example the components\nof the Einstein tensor (Ein(dn,dn)). Thus the user can finally save his own\nlibrary, expanding the class of the possible applications of our cosmo library.\nAs an example, we shall next point out some results we obtained by using this\nlibrary for the so called \"reverse-technology\" [6] treatment of inflation triggered\nby the scalar field.\n\n4\n\nSome results\n\nIn the standard treatment of cosmological models with scalar field, it is prescribed a certain potential function for the scalar field (taking into account some\nphysical reasons specific to the model processed) and then the dynamical Friedmann equations are solved (if it is possible) to obtain the time behavior of the\nscale factor of the universe. As recently some authors pointed out, a somehow\n\"reverse\" method [6] is also interesting, where the time behavior of the scale factor is \"a priori\" prescribed (as a function of time which will model the supposed\ntime behavior of the universe in inflation or in cosmic accelerated expansion)\nthen solving the Friedmann equations we can extract the shape of the corresponding potential for the theory. This is the so called \"reverse technology\" and\nwe shall use it here to illustrate the usage of our cosmo.m library.\nWe shall concentrate ourselves to the case of no matter variables other than\nthe scalar field. In this case we solve first equations (11) and (12) for the potential\nV (t) and \u03c6\u0307(t)2 , not before denoting the last one with a special intermediate\nMaple function called D2Phi(t) with subs command :\n> Ecunr1:=subs(diff(Phi(t),t)^2=D2Phi(t),Ecunr1);\n> Ecunr2:=subs(diff(Phi(t),t)^2=D2Phi(t),Ecunr2);\n> solve({Ecunr1,Ecunr2},{V(t),D2Phi(t)});\nThus we have [5] :\nV (t) =\n\ni\n1 h\n\u1e22(t) + 3H(t)2 + 2K(t)\n4\u03c0\n\n(15)\n\n\fi\n1 h\n\u2212\u1e22(t) + K(t)\n(16)\n4\u03c0\nHere and in the following pages we have, as usual geometrical units G = c = 1.\nHere we shall process one of the examples pointed out in Ellis and Madsen article\n[5], namely that one of de Sitter exponential expansion, where\n\u03c6\u03072 =\n\nR(t) = R0 e\u03c9t\n\n; H(t) = \u03c9\n\n(17)\n\nThus (15) and (16) became\nV (t) =\n\n3\u03c9 2\nk\n+\n4\u03c0\n2\u03c0e2\u03c9t\n\n; \u03c6\u0307(t)2 =\n\nk\n4\u03c0e2\u03c9t\n\n(18)\n\nafter simple evaluations of the corresponding Maple expressions. It is obvious\nthat \u03c6\u0307(t) can be simply obtained by square root of the above expression and can\nalso be integrated to give the potential as:\n\u221a\n1 ke\u2212\u03c9t\n\u03c6(t) = \u2212 \u221a\n+ \u03c60\n(19)\n2\n\u03c0\u03c9\nThe result is that, after evaluating the Einstein equations we have automatically\nsatisfied Ecunr1, Ecunr2 and Ecunr3 and the Klein Gordon equation has the\nform :\n\u221a\nk\u03c9\n1\nEcuKG = \u221a \u03c9t + DV (t) = 0\n(20)\n\u03c0e\n2\nThe last one is used to express the DV(t) by solving it, and it is a point to check\nthe calculation if this expression is equal to that one obtained directly from the\npotential. But this checking can be done only if we express, after a sequence of\nsimple subs and solve commands, the potential V (t) and his derivative DV (t)\nin terms of the scalar field, more precisely in terms of \u03c6(t) \u2212 \u03c60 . The result is\nV (\u03c6(t)) =\n\n3\u03c9\n+ 2\u03c9 2 (\u03c6(t) \u2212 \u03c60 )2\n4\u03c0\n\nDV (\u03c6(t)) = 4\u03c9 2 (\u03c6(t) \u2212 \u03c60 )\n\n(21)\n(22)\n\nThese results are in perfect agreement with the well-known results from [5].\nWe processed in the same way more examples, some of them completely\nnew. Our purpose was to produce Maple programs for processing the \"reversetechnology\" [5]-[6] method for these type of potentials with matter added to the\nmodel, especially dust or radiative matter. Although the steps for computing\nare the same, there are two points of the calculations where troubles can appear\nand the solution is not straightforward. The first one is the integration of the\nDPhi(t) obtained as the square root of D2Phi(t). Sometime it is not trivial to\ndo this, so in several cases we used approximation techniques, by evaluating the\ncosmological functions at the initial time. Our main purpose was to produce good\ninitial data for numerical solving the Einstein equations (with the Cactus code,\nfor example) thus these approximations can be a good solution for short time\n\n\fafter the initial time. The second trouble point is to evaluate the potential in\nterms of the scalar field, namely to extract the time variable from it. Sometimes\nhere we have transcendental equations and again some approximation methods\ncan solve the problem. Because these results are not in the topic of this article\nwe plan to report them in a future article.\n\nAcknowledgments\nSpecial thanks to one of the referees who revealed many week points of our\narticle. This work was partially supported by the Romanian Space Agency (grant\nnr. 258/2002-2004) and the Albert Einstein Institute, Potsdam, Germany.\n\nReferences\n1. Hehl F.W., Puntigam R.A., Ruder H. (eds.) - Relativity and Scientific Computing,\nSpringer-Verlag, Berlin, (1996)\n2. Grabmeier J, Kaltofen E, Weispfennig U. (eds.) - Handbook of Computer Algebra,\nSpringer-Verlag, Berlin, (2001)\n3. Vulcanov D.N., Calculation of the Dirac equation in curved spacetimes with possible\ntorsion using MAPLE and REDUCE, Computer Physics Communications, vol.\n154, p. 205, (2003)\n4. Vulcanov D.N., On the use of algebraic programming in the general relativity, grqc/0010085, (2001)\n5. Ellis G.F.R., Madsen M.S., Exact scalar field cosmologies, Classical and Quantum\nGravity, vol. 8, p. 667, (1991)\n6. Ellis G.F.R. et.al., The emergent universe : an explicit construction, Classical and\nQuantum Gravity, vol. 21, p. 233, (2004)\n7. Perlmutter S. et.al., The Cosmic Triangle : Revealing the State of the Universe,\nScience, vol. 284, p. 1481, (1999)\n\n\f"}