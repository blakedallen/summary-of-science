{"id": "http://arxiv.org/abs/cs/0411068v2", "guidislink": true, "updated": "2005-01-13T17:07:55Z", "updated_parsed": [2005, 1, 13, 17, 7, 55, 3, 13, 0], "published": "2004-11-18T19:40:59Z", "published_parsed": [2004, 11, 18, 19, 40, 59, 3, 323, 0], "title": "Planning for Directory Services in Public Key Infrastructures", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0503016%2Ccs%2F0503067%2Ccs%2F0503021%2Ccs%2F0503089%2Ccs%2F0503006%2Ccs%2F0503092%2Ccs%2F0503080%2Ccs%2F0503070%2Ccs%2F0503062%2Ccs%2F0503047%2Ccs%2F0503042%2Ccs%2F0503012%2Ccs%2F0503061%2Ccs%2F0503082%2Ccs%2F0503049%2Ccs%2F0503054%2Ccs%2F0503004%2Ccs%2F0503078%2Ccs%2F0503029%2Ccs%2F0503063%2Ccs%2F0503030%2Ccs%2F0503071%2Ccs%2F0503013%2Ccs%2F0503060%2Ccs%2F0503041%2Ccs%2F0503048%2Ccs%2F0503068%2Ccs%2F0503015%2Ccs%2F0503066%2Ccs%2F0503032%2Ccs%2F0503007%2Ccs%2F0503036%2Ccs%2F0503039%2Ccs%2F0503001%2Ccs%2F0503079%2Ccs%2F0503023%2Ccs%2F0503005%2Ccs%2F0503076%2Ccs%2F0503073%2Ccs%2F0503022%2Ccs%2F0503020%2Ccs%2F0503069%2Ccs%2F0503072%2Ccs%2F0503044%2Ccs%2F0503081%2Ccs%2F0503003%2Ccs%2F0503028%2Ccs%2F0503056%2Ccs%2F0503019%2Ccs%2F0503055%2Ccs%2F0503058%2Ccs%2F0503074%2Ccs%2F0503024%2Ccs%2F0503064%2Ccs%2F0503031%2Ccs%2F0503083%2Ccs%2F0503026%2Ccs%2F0503040%2Ccs%2F0503084%2Ccs%2F0503087%2Ccs%2F0503090%2Ccs%2F0503014%2Ccs%2F0503075%2Ccs%2F0503010%2Ccs%2F0503018%2Ccs%2F0503065%2Ccs%2F0503050%2Ccs%2F0503046%2Ccs%2F0503008%2Ccs%2F0503038%2Ccs%2F0503057%2Ccs%2F0503052%2Ccs%2F0503037%2Ccs%2F0503085%2Ccs%2F0503033%2Ccs%2F0503043%2Ccs%2F0503053%2Ccs%2F0503091%2Ccs%2F0503002%2Ccs%2F0503086%2Ccs%2F0503045%2Ccs%2F0503025%2Ccs%2F0503077%2Ccs%2F0411080%2Ccs%2F0411008%2Ccs%2F0411020%2Ccs%2F0411071%2Ccs%2F0411045%2Ccs%2F0411063%2Ccs%2F0411049%2Ccs%2F0411046%2Ccs%2F0411004%2Ccs%2F0411068%2Ccs%2F0411089%2Ccs%2F0411037%2Ccs%2F0411024%2Ccs%2F0411064%2Ccs%2F0411026%2Ccs%2F0411054%2Ccs%2F0411013%2Ccs%2F0411044&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Planning for Directory Services in Public Key Infrastructures"}, "summary": "In this paper we provide a guide for public key infrastructure designers and\nadministrators when planning for directory services. We concentrate on the LDAP\ndirectories and how they can be used to successfully publish PKI information.\nWe analyse their available mechanisms and propose a best practice guide for use\nin PKI. We then take a look into the German Signature Act and Ordinance and\ndiscuss their part as far as directories concerning. Finally, we translate\nthose to the LDAP directories practices.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0503016%2Ccs%2F0503067%2Ccs%2F0503021%2Ccs%2F0503089%2Ccs%2F0503006%2Ccs%2F0503092%2Ccs%2F0503080%2Ccs%2F0503070%2Ccs%2F0503062%2Ccs%2F0503047%2Ccs%2F0503042%2Ccs%2F0503012%2Ccs%2F0503061%2Ccs%2F0503082%2Ccs%2F0503049%2Ccs%2F0503054%2Ccs%2F0503004%2Ccs%2F0503078%2Ccs%2F0503029%2Ccs%2F0503063%2Ccs%2F0503030%2Ccs%2F0503071%2Ccs%2F0503013%2Ccs%2F0503060%2Ccs%2F0503041%2Ccs%2F0503048%2Ccs%2F0503068%2Ccs%2F0503015%2Ccs%2F0503066%2Ccs%2F0503032%2Ccs%2F0503007%2Ccs%2F0503036%2Ccs%2F0503039%2Ccs%2F0503001%2Ccs%2F0503079%2Ccs%2F0503023%2Ccs%2F0503005%2Ccs%2F0503076%2Ccs%2F0503073%2Ccs%2F0503022%2Ccs%2F0503020%2Ccs%2F0503069%2Ccs%2F0503072%2Ccs%2F0503044%2Ccs%2F0503081%2Ccs%2F0503003%2Ccs%2F0503028%2Ccs%2F0503056%2Ccs%2F0503019%2Ccs%2F0503055%2Ccs%2F0503058%2Ccs%2F0503074%2Ccs%2F0503024%2Ccs%2F0503064%2Ccs%2F0503031%2Ccs%2F0503083%2Ccs%2F0503026%2Ccs%2F0503040%2Ccs%2F0503084%2Ccs%2F0503087%2Ccs%2F0503090%2Ccs%2F0503014%2Ccs%2F0503075%2Ccs%2F0503010%2Ccs%2F0503018%2Ccs%2F0503065%2Ccs%2F0503050%2Ccs%2F0503046%2Ccs%2F0503008%2Ccs%2F0503038%2Ccs%2F0503057%2Ccs%2F0503052%2Ccs%2F0503037%2Ccs%2F0503085%2Ccs%2F0503033%2Ccs%2F0503043%2Ccs%2F0503053%2Ccs%2F0503091%2Ccs%2F0503002%2Ccs%2F0503086%2Ccs%2F0503045%2Ccs%2F0503025%2Ccs%2F0503077%2Ccs%2F0411080%2Ccs%2F0411008%2Ccs%2F0411020%2Ccs%2F0411071%2Ccs%2F0411045%2Ccs%2F0411063%2Ccs%2F0411049%2Ccs%2F0411046%2Ccs%2F0411004%2Ccs%2F0411068%2Ccs%2F0411089%2Ccs%2F0411037%2Ccs%2F0411024%2Ccs%2F0411064%2Ccs%2F0411026%2Ccs%2F0411054%2Ccs%2F0411013%2Ccs%2F0411044&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "In this paper we provide a guide for public key infrastructure designers and\nadministrators when planning for directory services. We concentrate on the LDAP\ndirectories and how they can be used to successfully publish PKI information.\nWe analyse their available mechanisms and propose a best practice guide for use\nin PKI. We then take a look into the German Signature Act and Ordinance and\ndiscuss their part as far as directories concerning. Finally, we translate\nthose to the LDAP directories practices."}, "authors": ["V. Karatsiolis", "M. Lippert", "A. Wiesmaier"], "author_detail": {"name": "A. Wiesmaier"}, "author": "A. Wiesmaier", "arxiv_comment": "12 pages; 1 figure; accepted at QSIG2005 (see\n  http://www-sec.uni-regensburg.de/sicherheit2005/index.shtml); camera ready\n  version", "links": [{"href": "http://arxiv.org/abs/cs/0411068v2", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/cs/0411068v2", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.CR", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/cs/0411068v2", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/cs/0411068v2", "journal_reference": "Proceedings of \"Sicherheit 2005\"; April 2005", "doi": null, "fulltext": "arXiv:cs/0411068v2 [cs.CR] 13 Jan 2005\n\nPlanning for Directory Services in Public Key\nInfrastructures\nVangelis Karatsiolis\nTechnische Universit\u00e4t Darmstadt,\nDarmstadt Centre for IT Security\nHochschulstr. 10, 64289 Darmstadt, Germany\nkaratsio@cdc.informatik.tu\u2013darmstadt.de\nMarcus Lippert, Alexander Wiesmaier\nTechnische Universit\u00e4t Darmstadt,\nDepartment of Computer Science,\nHochschulstr. 10, 64289 Darmstadt, Germany\nmal,wiesmaie@cdc.informatik.tu\u2013darmstadt.de\n\nAbstract: In this paper we provide a guide for public key infrastructure designers and\nadministrators when planning for directory services. We concentrate on the LDAP\ndirectories and how they can be used to successfully publish PKI information. We\nanalyse their available mechanisms and propose a best practice guide for use in PKI.\nWe then take a look into the German Signature Act and Ordinance and discuss their\npart as far as directories concerning. Finally, we translate those to the LDAP directories practices.\n\n1 Introduction\nPublic key infrastructures (PKIs) play a significant role in securing today's communication. Entities use certificates that enable security mechanisms like confidentiality, integrity, non\u2013repudiation and authenticity. There are two specifications for such certificates,\nnamely the X.509 [IT97] and the PKIX [HPFS02]. The first specification gave its name\nto these certificates which are called X.509 certificates. The goal of X.509 was to enable\nauthentication mechanisms for directories [IT97, Sec. 1]. But X.509 certificates are used\ntoday in various cases of internet security, for example in S/MIME to secure electronic\nmail [Ram04].\nX.509 certificates are issued by a certification authority (CA) and they are public documents. This fact suggests that they should be published in a public directory. The most\ncommonly used directories for this purpose are based on LDAP [HM02]. LDAP directories are used as the central place in a PKI, where certificates and associated revocation\ninformation, in the form of certificate revocation lists (CRLs), are stored and can be downloaded from various clients.\n\n\fThis paper is organised as follows: In Section 2, we take a look at the use of LDAP in PKI.\nWe discuss the certificate and CRL publishing, the security features of LDAP and different\nissues related to the planning of LDAP to support PKI. In Section 3, we investigate the\nrelationship of the German Signature Act and Ordinance to LDAP directories. We then\ndiscuss the LDAP related practices in this electronic signature law context. Lastly, in\nSection 4, we conclude the paper.\n\n2 LDAP and PKI\nLDAP directories are used to hold certificates and CRLs in order to provide dissemination\nof PKI information. There are other mechanisms to enable this like HTTP or FTP (for a\ndiscussion see [HP01, Chap. 9] and [AL99, Chap. 11]). All these mechanisms are scalable\nand standardised, but LDAP is the most commonly deployed solution. Many organisations\nalready operate such directories. A report for using Microsoft's Active Directory, which\nsupports LDAP, along with PKI in the corporate environment for 300.000 users is found\nin [GSB+ 04]. In addition, typical clients (like email clients) already have LDAP interfaces to retrieve CRLs and certificates. Nevertheless, the way that LDAP behaves in some\ncases, complicates its support to PKI. Chadwick [Cha03] makes an in\u2013depth study on this\nbehaviour. Gutmann [Gut00] suggests that a relational database is a better solution than\nLDAP as far as storing of certificates and CRLs concerning. In this paper we concentrate\non the use of LDAP, since this is a solution already employed by many PKI practitioners.\nOne of them is RegTP,1 the authority responsible for the German root CA, according to \u00a73\nof the German Signature Act2 [Leg01a]. RegTP uses an LDAP directory to provide public\navailability for qualified certificates as \u00a72.12.b SigG requires.\n\n2.1 Storing certificates\n2.1.1 User certificates\nInformation on an LDAP directory is hierarchically organised. In Figure 1 we can see\nthe entry of the user CN=Alice, O=Org, C=DE. The values between the commas\nare called relative distinguished names (RDN) and the whole value a distinguished name\n(DN). Every entry has a relative distinguished name. If someone moves from this entry to the root, and adds the relative distinguished name of every entry he meets, the\ndistinguished name for this entry is built. Relative distinguished names are usually in\nthe form attribute=value but they can also be multi\u2013valued and presented like\nattribute1=value1+attribute2=value2. This representation gives the ability to create unique RDNs among siblings in the directory. For example, in the case\nof certificates the issuer name and the serial number form together a unique representa1 It\n\nstands for Regulierungsbeh\u00f6rde f\u00fcr Telekommunikation und Post.\nabbreviate the German Signature Act as SigG from the German term which is Signaturgesetz.\n\n2 We\n\n\ftion [HPFS02, Sec. 4.1.2.2]. This representation could be used on the LDAP to create\nthese unique entries in the form of a multi\u2013valued RDN. Such a representation is work in\nprogress at the IETF [IET].\ndc=MyOrg,dc=de\n\nc=DE\n\no=OrgCA\n\nobjectClass: top\nobjectClass: pkiCA\nobjectClass:cRLDistributionPoint\ncn: MyCA\ncertificateRevocationList: MII.....X\ncACertificate: MII.....=\n\no=Org\n\ncn=MyCA\n\ncn=Alice\n\ncert1\n\ncert2\n\nobjectClass: top\nobjectClass: person\nobjectClass: pkiUser\nsn: Alice\ncn: Alice\nuserCertificate: MII..1.....=\nuserCertificate: MII..2.....=\nuserCertificate: MII..3.....=\n\ncert3\n\nFigure 1: A user and a CA entry in the directory. Beneath the user entry, the idea of having separate\nentries for each certificate is presented.\n\nEvery entry on the LDAP has attributes and every attribute has one value, or more in case\nof not single\u2013valued attributes (see [WCHK97] for details). All entries have the attribute\ncalled objectClass. This attribute describes the kind of the entry on the LDAP. Based on the\nobjectClass attribute values, the entry can have different properties. Different properties\ncan be applied to the entry by extending the values of the object class. In Figure 1 the\nattributes for an end\u2013user and a CA entry are shown. Usually, but not necessarily, the\nsubject distinguished name contained in the entry's certificate matches the distinguished\nname of the entry in the directory. In the end\u2013user entry the person object class as well\nas the pkiUser object class are present. The first one gives the entry the ability to hold\nattributes like the surname or the telephone number. The second one enables the entry to\nhold the userCertificate attribute which represents the X.509 certificate for this entry. The\nuserCertificate attribute holds the certificate in its binary form in the directory.\nThe PKI developer and administrator should make a careful decision on the schema (see\n[WCHK97, Sec. 3] for the definition) they want to use for publishing certificates. The\nsolution should not make any assumptions on the current status of the directory as well\nas it should not be planned to support only PKI. LDAP directories can be used to hold\ninformation not related to PKI. One choice is to use the strongAuthenticationUser object\nclass [Wah97]. The drawback with this approach is that this object class requires that a\ncertificate is present on the entry and therefore it can not be used in cases where the entry\n\n\fdoes not possess any certificates (for example, the certificate is removed from the directory\nafter its revocation). In addition, this object class refers to the X.509 strong authentication\nmechanism and it should not be used just as a certificate container. The solution is to\nuse the pkiUser object class [BHR99]. This attribute allows but does not require that the\nuserCertificate attribute is present. Therefore the previous drawback does not apply in this\ncase. Lastly, the inetOrgPerson object class allows the certificate to be published on the\nentry too. This object class may be used when the directory is not only used to support\nPKI but other organisational procedures and data.\n2.1.2 CA certificates\nThe object classes used to enable publishing of CA certificates differ to the ones for end\nusers. There are two choices. The first one is the certificationAuthority [Wah97] and the\nsecond one is the pkiCA [BHR99]. The certificationAuthority mandates that a CRL, the\nCA certificate as well as an authority revocation list3 (ARL) [IT97] must be published\non the directory. But very few CAs issue ARLs or the CA represented on this node may\ndecide not to issue CRLs itself. Therefore, this object class is not the best choice and the\nmore flexible pkiCA should be used. This object class allows CRLs, ARLs and CA certificates to be published. The CA certificate is represented from the caCertificate attribute,\nthe X.509 CA certificate in its binary encoded form. Lastly, both object classes allow the\ncrossCertificatePair attribute. This attribute represents the forward and reverse (or issuedToThisCA and issuedByThisCA) cross\u2013certificate pair for cross certification purposes.\n2.1.3 Certificate search\nCertificates in LDAP are stored as binary objects at the entry of their corresponding entity.\nTherefore locating the correct certificate forces the client to know this entry (probably\nfrom an email search or the subject distinguished name), download the certificate, then\nparse it and lastly examine whether this is the one it searches for or not. This process\nhowever, delegates the certificate search to a some kind of side\u2013information search, in fact\nsome information related to the owner of the certificate and not the certificate itself.\nA better approach is to publish information related to the certificate, in order to enable\nsearching for this data. There is a work in progress in the IETF [IET] that specifies such\nmeta\u2013data that are published together with the certificate. This work is easy to implement,\nsince the attributes can be extracted from the certificate and published along with it. This\nsimplifies the search for certificates with special attributes, since now on the node the properties of the certificates (like serial number, subject DN etc.) are held as attributes of the\nnode. This solution does not incorporate cross certificates from one CA to another (cross\ncertification) and future work should address this problem. Another work in progress in\nIETF [CL] specifies special matching rules on the directory to locate the correct certificates. This work is more extensive than the first one but more difficult to implement. This\nimplementation must take place at the side of the LDAP vendors and clients.\n3A\n\nlist associated with revocation information only for CA certificates.\n\n\fThe first work proposes also that every certificate will have its own entry subordinate to\nthe user entry (for a simple and not detailed draw of this idea, see Figure 1). This can\nhelp solving the following problem. When a user owns more than one certificate, this is\narranged in LDAP with a multi\u2013valued attribute, namely the userCertificate. A problem\nwith this approach arises if someone wants to locate only one specific certificate for this\nuser. Then, one must download all certificates and find out the correct one by searching for\nthe correct certificate locally. But if every certificate has its own entry then this problem\ndoes not apply anymore. A more generic solution to this problem is a new standard from\nIETF [CM04] which defines a method, that enables matching of the values (and not of\nthe attributes which is common in LDAP) with a special filter associated only with the\nvalues. Current practice should orient on the subentries solution since most LDAP servers\nand clients do not support the special matching rules and returning of matched values.\nLong term planning however, should incorporate the most generic solutions which are\non the other hand vendor and client dependent. Similar solutions can be applied to CA\ncertificates.\nAll solutions discussed here, should be used carefully with regard to reliability of the\ninformation contained on the LDAP server. This information is not signed information and\nit could have been manipulated from an attacker. Every client must verify the signature\non the certificate and CRL to ensure the security of the data. Nevertheless, LDAP has\na number of security features which can be turned on to guarantee that no unauthorised\nchanges occur in the directory. It can also then meet certain requirements of the Signature\nAct and Signature Ordinance [Leg01b].\n\n2.2 Security\nVarious security mechanisms can be applied to LDAP directories. They address different directions and therefore cover many security aspects of an on\u2013line electronic system.\nThese attractive security features make LDAP directories a perfect candidate for the directory services in the SigG context. First of all they allow different means of authentication. One is the simple authentication with password. Another possibility is to combine it\nwith SASL [Mye97] for a digest based authentication. For a description see [WAHM00].\nLastly, typical TLS client authentication is also possible.\nTLS [DA99] can also be used for securing the network traffic to the LDAP server. Of\ncourse, the server authentication is a necessary step in this protocol, and therefore the\nLDAP server must authenticate itself to the clients. TLS can be used to avoid that the\npasswords will travel in clear in the simple password authentication. For more on this\nscheme see [HMW00].\nApart from the authentication and security mechanism, access control mechanisms are\napplied to LDAP. The directory administrator can set access control lists (ACLs), in order\nto allow certain actions to definite individuals and special parts in the directory. This\nscheme is very strong and allows granular controls concerning persons, actions, and data\nin the directory. An application of the above could be that a revocation authority is able to\n\n\fpublish only CRLs on the directory, while the certification authority (CA) only certificates.\nIn [Cha00] and [Gre02, Chap. 5] more on the security of LDAP directories can be found.\nThere are several cases, in which these security mechanisms should be applied. For example, in order to avoid that an unauthorised user replaces a revocation list with an older\none, or just removes a certificate. Although certificates and CRLs are signed information\nand therefore their correctness can be proved, the integrity of the data on the directory is\nvery important in order to prevent such a misuse. In addition, using the TLS mechanism\nof LDAP, the server can authenticate itself. Thus, the publishing client can check whether\nit publishes the information on the correct server. This ensures that the certificates and\nrevocation information are published in the correct place, where the clients are expecting\nthis information to be published.\n\n2.3 Storing CRLs\nCRLs are stored in a special LDAP attribute called certificateRevocationList defined in\n[BHR99]. There are three object classes that allow this attribute, namely the certificationAuthority from [Wah97], the pkiCA and the cRLDistributionPoint defined in [BHR99].\nThe first one can not be used when indirect CRLs [HPFS02, Sec. 5] are utilised, since the\nentry on the directory is not a CA at all and no CA certificate should be present. The other\ntwo object classes allow the certificateRevocationList attribute without mandating this or\nother attributes. In addition the cRLDistributionPoint object class mandates the commonName attribute which gives the ability to build an entry on the LDAP with the CN node.\nThe best choice is a hybrid solution where both object classes are present (not necessarily\non the same entry). The pkiCA is used then to publish the CA and cross certificates and\nthe cRLDistributionPoint to publish any revocation information.\nIn case of indirect CRLs the cRLDistributionPoint object class is the only choice. The CRL\nissuer in this case is not the issuer of the certificate and the keyUsage on its certificate is for\nCRL signing. This CRL issuer does not possess any CA certificate and the pkiCA object\nclass as a choice would be just wrong, since it denotes a certification authority. In the case\nof the German root authority the CRLs issued are indirect ones. This is an implication of\nthe special validity model of the SigG. For more on this validity model see [Bau98].\nIn an X.509 certificate there is the possibility to state inside the certificate where to find\nrevocation information about it. This is arranged in a special extension called cRLDistributionPoints [HPFS02, Sec. 4.2.1.14]. In this extension the place where clients can locate\nthe CRL related to this certificate is provided. This can be an LDAP URL and/or a HTTP\nURL, among others, which implies also the mechanism used to obtain the CRL. Use of\nthis extension is recommended since it simplifies the revocation information management.\nThe LDAP URL for the entry on the directory in Figure 1, according to the format defined\nin [HS97], is:\nldap://192.168.0.1:389/CN=MyCA,O=OrgCA,C=DE,DC=MyOrg,DC=DE?\ncertificateRevocationList?base?objectClass=cRLDistributionPoint\n\n\fDelta CRLs can be published in the LDAP directory, too. The corresponding attribute is\nthe deltaRevocationList and an additional object class that can hold this attribute is the\ndeltaCRL [BHR99]. The cRLDistributionPoint object class can also hold delta CRLs.\nHowever, the way this information is arranged in the LDAP directory does not utilise the\nidea of delta CRLs, since these become meaningful only when the base CRL is also located\nin the directory. Every time a delta CRL is issued a full CRL must be issued, too. This\nis done in order for clients that can not handle delta CRLs to be able to have the freshest\nrevocation information. This was a mandatory step in the deprecated PKIX specification\nfor X.509 certificates [HFPS99]. This suggests that the newer CRL replaces the base CRL\n(it is typical that the newer CRL just overwrites the older one in the directory). This is\nnot a problem if the clients already have the base CRL in their cache. But new clients (or\neven clients which were off\u2013line when the base CRL was placed in the directory) have to\nwork with complete CRLs until they have the chance to locate a base CRL in the directory.\nTo overcome this, the newer CRL must be just added to the directory and not replace the\nolder one. In this case however, the clients must download all CRLs in order to find the\nbase CRL. In the newer PKIX specification [HPFS02], when a delta CRL is published, it\nis mandatory that the corresponding base CRL must be found in the directory. An LDAP\nmechanism to distinguish between the different CRLs is needed. The new scheme for\nCRLs proposed in IETF [IET], will support this and therefore this problem can be solved.\nIn this scheme every CRL is stored in its own entry, in a similar way to the certificate\nproposal.\n\n2.4 Naming plan\nIn order to arrange the information effectively in the hierarchical manner of an LDAP\ndirectory there is a proposal in RFC 2377 [GHSW98]. This RFC proposes the use of the\ndomain component attribute for the root of the directory. Domain names are unique and\nhierarchical. Therefore they can be used in order to provide unique names in the LDAP\nmodel. In [KWG+ 98] the appropriate object classes to enforce this proposal can be found.\nIn the Active Directory of Microsoft, the use of domain names as the root of the directory\nis mandatory [Gre02, Chap. 6]. Active Directory must be installed and configured properly\nin order to use the integrated CA shipped with Windows 2000 Server.\n\n2.5 Other uses of LDAP\nLDAP directories can be used of course for other purposes too. As already mentioned,\nmany organisations already operate LDAP directories to administrate and manage their\ninformation. A common LDAP use is for central authentication purposes in UNIX systems. In [KLW04] it is shown that LDAP directories can be used for providing proof\u2013of\u2013\npossession for encryption keys as well as delivery of software personal security environments (PSE). In those schemes there are two applications which come along. One is the\nactivation of certificates. With the term activation we denote the action to make the cer-\n\n\ftificates public available. The other application is the private key on demand, in which the\nuser can locate and download his PSE whenever he wants to use it. Guida et al. [GSB+ 04]\nhave used the Active Directory for the registration purposes inside the PKI, in order to\nextract identity information for the issuing of certificates.\n\n3 Directories and the German Signature Act\nQualified certificates must be verifiable and optionally available. With verifiable it is implied that a mechanism to determine whether this certificate exists as well to obtain information about its status is present. With available it is implied that the certificate itself\nis located in a position where everybody can find and download it. Every Certification\nService Provider (CSP) therefore, must provide a directory service where certificates and\nassociated revocation information is located. One complete technical solution to this consists of an OCSP server [MAM+ 99] to keep the certificates verifiable and an LDAP server\nto have the certificates available.4\nOCSP servers give signed answers to a client's query about the status of the certificate.\nThere are three possible answers. The first one is good, meaning that the certificate is not\nrevoked. The second one is revoked, meaning that the certificate is revoked and the third\nunknown, meaning that the certificate does not exist for this OCSP server (it is unknown to\nit). Therefore OCSP can be used to give information about the status of a certificate. The\nspecial extension CertHash has been specified by the ISIS\u2013MTT specification [TT04], in\norder to include also an existence evidence of the queried certificate. This extension holds\nthe hashed value of the certificate the clients want to verify. With this OCSP configuration the OCSP meets the verifiable requirement of the law. According to \u00a715.2.2.b SigV,\nthe verification of a qualified signature requires also a proof of existence of the qualified\ncertificate, as well as information about its status, at the signature creation time. Further\nwe show how LDAP can be used and be appropriate in the SigG context to provide availability of qualified certificates. But more mechanisms can also be employed in parallel.\nA candidate for example is the HTTP store as described in [Gut00]. There is a work in\nprogress at IETF [IET] that specifies this scheme. The above discussion demonstrates that\nany technical requirements are outside the scope of SigG. This is because the standards\nand techniques used to satisfy the law are subject to changes.\nAccording to \u00a73.1 SigV, no certificate must be published before its user is identified and\naccepts his qualified certificate. This means that compliant certification service providers\nmust wait for an activation of the certificate from its user. A typical certification process in\nthe corporate or institution environment usually automates the publishing of certificates.\nThis automation however, must not be performed in the SigG context. Complying implementations should enable an activation mechanism for the publishing of certificates. Only\nafter the user has accepted his certificate all signatures that he has calculated, even those\nbefore the acceptance, are considered in effect. When a certificate is activated, it should be\nverifiable and if its user requires it, also available. This implies that a certificate upon ac4 This\n\nis the current practice in RegTP.\n\n\ftivation must become unconditionally known to the OCSP but conditionally be published\non the LDAP server. Conforming CSPs must distinguish between certificates that must be\nkept public and those which must not and have the proper mechanism to resolve this.\nThe above is also discussed in \u00a75.2 SigV. The key owner must explicitly accept his secure\nsignature creation entity and confirm this to the CSP. Then it is the CSP's task to publish\nthe certificate in order to keep the certificates publicly available and verifiable by the public (\u00a72.12.b SigG). After the confirmation from the user, the CSP is obliged to keep the\ncertificate on the directory for at least five years after its expiration year (\u00a74 SigV). In the\ncase of accredited CSPs this time window is thirty years after the certificate expiration.\nCompliant publishing components should therefore call only add functions to the directory\nbut never delete functions. In LDAP this is translated to calling add requests and never call\ndelete or modify requests (for the definition see [WHK97]). This gives the ability to the\ndeveloper to ensure correct functioning and compliance to the directives. If any remove\naction must be performed (for example after the thirty years), then this should be done\nmanually and with the presence of a special monitoring mechanism. This mechanism will\ninform the administrator of his actions. For example, this mechanism will first fetch the\ncertificate from the LDAP before the delete request, demonstrate this to the administrator,\nwho now must check whether this is the correct certificate or not, and delete it after the\nadministrator's acknowledgement.\nMoreover, a special mechanism should exist that notifies in case of a failed operation. If\nan intended LDAP operation is not successful, the system must notify the administrator\nfor the erroneous behaviour. The problem must be explicitly stated, in order to give the\nadministrator a clear view of which step was not performed. Then, an out\u2013of\u2013band mechanism should be used to perform the unsuccessful step. It is clear that this out\u2013of\u2013band\nmechanism must have the same security properties as the regular one. Apart from this, a\nregular backup of the data on the directory must be performed by creating backup files of\nthe whole directory. This can be done with the help of the LDAP data interchange format (LDIF) [Goo00]. LDIF is a text format that describes the data on an LDAP directory.\nThe importance of the data persistence in the directory is depicted also in \u00a715.3 SigV. The\ncertificate presence as well as revocation information related to it must have a continuous\nstate in the directory. In addition, in the case of an accidental error or serious system crash,\nthe status of the directory can be retrieved as it was before this event.\nAccording to \u00a77.2 SigV, if a certificate is revoked this information must be published in the\ndirectory. In the LDAP case this is done by storing the CRL. As in the case of certificates,\nit must be ensured that the CRL publication was successful and if not, special countermeasures must be enforced. In the CRL publishing however, the activation mechanism is\nnot needed. In this case it is very important that as soon as the CRL is produced from the\nCA,5 this CRL is also published in the directory without any delay. Another difference\nis that in the CRL case a modify request is usually called, in order to replace the existent\nCRL in the directory. There is no need to keep all CRLs in the directory since the newest\nCRL contains revocation information of the previous CRLs within the same scope. If delta\nCRLs are used however, at least the base CRL should be found in the directory and not be\n5 Or\n\na revocation authority since the CRLs used in the SigG context are indirect CRLs.\n\n\fdeleted.\nThe access control mechanism of the LDAP is useful in this case, in order to distinguish\nbetween a CRL and a certificate publishing. The ACLs in the directory can be configured\nso that a special certificate publishing user is only allowed to add certificates (namely the\nuserCertificate attribute) and in a special path in the directory. Another user, the CRL\nuser, can publish only CRLs (namely the certificateRevocationList attribute). The other\nsecurity mechanisms must be used too. The TLS connection guarantees the identity of\nthe LDAP server and the client authentication ensures the identity of the user publishing\ndata on the LDAP. Then, no unauthorised actions on the LDAP can be performed (like\nremoving certificates or replacing CRLs) and moreover, publication takes place only on\nthe correct directory.\n\n4 Conclusion - Future Work\nWe analysed the LDAP directories and their use in PKI. LDAP is a reliable technical\nsolution to address the PKI information dissemination problems. We took a look especially\nin the SigG environment. We discussed a planning for LDAP, in order to meet the special\nSigG requirements associated with the public availability of certificates and revocation\ninformation. A lot of work is in progress at the IETF trying to solve problems related to\nLDAP and PKI. A good planning for LDAP, promises to provide a successful support to\nPKI as well as to other organisational procedures, particularly when the new proposals\nbecome a standard and incorporated in the current solutions.\nWe plan to design and implement an LDAP PKI client for management of certificates,\nCRLs and software PSEs. A new standard is specified in [MSNP04] which defines a\nsynchronisation method of an LDAP client with the LDAP directory. We will investigate\nhow this technique can be used to automatically download new CRLs and how certificates\nfor users which are already installed locally can be updated.\n\nAcknowledgements\nThe first author thanks Georgios Raptis for his help and guidance through the German Signature Act, and Markus Ruppert for discussions on management problems in the directory.\n\nReferences\n[AL99]\n\nC. Adams and S. Lloyd. Understanding Public-Key Infrastructure. New Riders Publishing, 1999.\n\n[Bau98]\n\nM. Baum. G\u00fcltigkeitsmodell des SigG. Datenschutz und Datensicherheit, 23(4):199\u2013\n205, 1998.\n\n\f[BHR99]\n\nS. Boeyen, T. Howes, and P. Richard. Internet X.509 Public Key Infrastructure\nLDAPv2 Schema. IETF Request For Comments, 2587, June 1999.\n\n[Cha00]\n\nD. W. Chadwick. Secure Directories. In Proceedings of the NATO Advanced Networking Workshop on Advanced Security Technologies in Networking, June 2000.\n\n[Cha03]\n\nD. Chadwick. Deficiencies in LDAP when used to support PKI. Communications of\nthe ACM, 46(3):99\u2013104, 2003.\n\n[CL]\n\nD. W. Chadwick and S. Legg. Internet X.509 Public Key Infrastructure LDAP Schema\nand Syntaxes for PKIs. http://sec.isi.salford.ac.uk/download/pkix-ldap-pki-schema00.txt.\n\n[CM04]\n\nD. Chadwick and S. Mullan. Returning Matched Values with the Lightweight Directory\nAccess Protocol version 3 (LDAPv3). IETF Request For Comments, 3876, September\n2004.\n\n[DA99]\n\nT. Dierks and C. Allen. The TLS Protocol Version 1.0. IETF Request For Comments,\n2246, January 1999.\n\n[GHSW98] A. Grimstad, R. Huber, S. Sataluri, and M. Wahl. Naming Plan for Internet DirectoryEnabled Applications. IETF Request For Comments, 2377, September 1998.\n[Goo00]\n\nG. Good. The LDAP Data Interchange Format (LDIF) - Technical Specification. IETF\nRequest For Comments, 2849, June 2000.\n\n[Gre02]\n\nB. Greenblatt. Building LDAP-Enabled Applications with Microsoft's Active Directory\nand Novell's NDS. Prentice Hall PTR, 2002.\n\n[GSB+ 04]\n\nR. Guida, R. Stahl, T. Bunt, G. Secrest, and J. Moorcones. Deploying and Using Public\nKey Technology: Lessons Learned in Real Life. IEEE Security & Privacy, 2(4):67\u201371,\n2004.\n\n[Gut00]\n\nP. Gutmann. A Reliable, Scalable General-purpose Certificate Store. In Proceedings\nof the 16th Annual Computer Security Applications Conference (ACSAC'00), pages\n278\u2013287, December 2000.\n\n[HFPS99]\n\nR. Housley, W. Ford, W. Polk, and D. Solo. Internet X.509 Public Key Infrastructure\nCertificate and CRL Profile. IETF Request For Comments, 2459, January 1999.\n\n[HM02]\n\nJ. Hodges and R. Morgan. Lightweight Directory Access Protocol (v3): Technical\nSpecification. IETF Request For Comments, 3377, September 2002.\n\n[HMW00]\n\nJ. Hodges, R. Morgan, and M. Wahl. Lightweight Directory Access Protocol (v3):\nExtension for Transport Layer Security. IETF Request For Comments, 2830, May\n2000.\n\n[HP01]\n\nR. Housley and T. Polk. Planning for PKI. John Wiley & Sons, Inc., 2001.\n\n[HPFS02]\n\nR. Housley, W. Polk, W. Ford, and D. Solo. Internet X.509 Public Key Infrastructure\nCertificate and Certificate Revocation List (CRL) Profile. IETF Request For Comments,\n3280, April 2002.\n\n[HS97]\n\nT. Howes and T. Smith. The LDAP URL Format. IETF Request For Comments, 2255,\nDecember 1997.\n\n[IET]\n\nPKIX Working Group IETF. Public\u2013Key Infrastructure IETF Working Group.\nhttp://www.ietf.org/html.charters/pkix-charter.html. Internet Drafts are updated often\nand on this site the newest status can be obtained.\n\n\f[IT97]\n\nRecommendation X.509 ITU-T. Information Technology - Open Systems Interconnection - The Directory: Authentication Framework. August 1997.\n\n[KLW04]\n\nV. Karatsiolis, M. Lippert, and A. Wiesmaier. Using LDAP Directories for Management of PKI Processes. In Proceedings of Public Key Infrastructure: First European\nPKI Workshop: Research and Applications, EuroPKI 2004, volume 3093 of Lecture\nNotes in Computer Science, pages 126\u2013134, June 2004.\n\n[KWG+ 98] S. Kille, M. Wahl, A. Grimstad, R. Huber, and S. Sataluri. Using Domains in\nLDAP/X.500 Distinguished Names. IETF Request For Comments, 2247, January 1998.\n[Leg01a]\n\nThe Legislator. Gesetz \u00fcber Rahmenbedingungen f\u00fcr elektronische Signaturen und zur\n\u00c4nderung weiterer Vorschriften. Bundesgesetzblatt Jahrgang 2001 Teil I, Nr. 22:876\u2013\n884, 21. Mai 2001.\n\n[Leg01b]\n\nThe Legislator. Verordnung zur elektronischen Signatur (Signaturverordnung-SigV).\nBundesgesetzblatt Jahrgang 2001 Teil I, Nr. 59:3074\u20133084, 21. November 2001.\n\n[MAM+ 99] M. Myers, R. Ankney, A. Malpani, S. Galperin, and C. Adams. X.509 Internet Public Key Infrastructure Online Certificate Status Protocol - OCSP. IETF Request For\nComments, 2560, June 1999.\n[MSNP04] R. Megginson, Ed., M. Smith, O. Natkovich, and J. Parham. Lightweight Directory Access Protocol (LDAP) Client Update Protocol (LCUP). IETF Request For Comments,\n3928, October 2004.\n[Mye97]\n\nJ. Myers. Simple Authentication and Security Layer (SASL). IETF Request For Comments, 2222, October 1997.\n\n[Ram04]\n\nB. Ramsdell. Secure/Multipurpose Internet Mail Extensions (S/MIME) Version 3.1\nMessage Specification. IETF Request For Comments, 3851, July 2004.\n\n[TT04]\n\nT7 and TeleTrust. Common ISIS\u2013MTT Specifications for Interoperable PKI Applications - Version 1.1. http://www.t7-isis.de/ISIS-MTT/isis-mtt.html, 2004.\n\n[Wah97]\n\nM. Wahl. A Summary of the X.500(96) User Schema for use with LDAPv3. IETF\nRequest For Comments, 2256, December 1997.\n\n[WAHM00] M. Wahl, H. Alvestrand, J. Hodges, and R. Morgan. Authentication Methods for\nLDAP. IETF Request For Comments, 2829, May 2000.\n[WCHK97] M. Wahl, A. Coulbeck, T. Howes, and S. Kille. Lightweight Directory Access Protocol\n(v3): Attribute Syntax Definitions. IETF Request For Comments, 2252, December\n1997.\n[WHK97]\n\nM. Wahl, T. Howes, and S. Kille. Lightweight Directory Access Protocol (v3). IETF\nRequest For Comments, 2251, December 1997.\n\n\f"}