{"id": "http://arxiv.org/abs/cs/0610039v1", "guidislink": true, "updated": "2006-10-08T05:34:12Z", "updated_parsed": [2006, 10, 8, 5, 34, 12, 6, 281, 0], "published": "2006-10-08T05:34:12Z", "published_parsed": [2006, 10, 8, 5, 34, 12, 6, 281, 0], "title": "The Application of Fuzzy Logic to the Construction of the Ranking\n  Function of Information Retrieval Systems", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0410064%2Ccs%2F0410073%2Ccs%2F0410066%2Ccs%2F0410028%2Ccs%2F0410065%2Ccs%2F0410033%2Ccs%2F0410029%2Ccs%2F0410009%2Ccs%2F0410010%2Ccs%2F0410036%2Ccs%2F0410048%2Ccs%2F0410021%2Ccs%2F0410042%2Ccs%2F0410075%2Ccs%2F0410017%2Ccs%2F0410003%2Ccs%2F0410011%2Ccs%2F0410038%2Ccs%2F0410044%2Ccs%2F0410026%2Ccs%2F0610003%2Ccs%2F0610018%2Ccs%2F0610140%2Ccs%2F0610104%2Ccs%2F0610166%2Ccs%2F0610146%2Ccs%2F0610044%2Ccs%2F0610051%2Ccs%2F0610004%2Ccs%2F0610001%2Ccs%2F0610027%2Ccs%2F0610120%2Ccs%2F0610097%2Ccs%2F0610145%2Ccs%2F0610088%2Ccs%2F0610082%2Ccs%2F0610075%2Ccs%2F0610173%2Ccs%2F0610117%2Ccs%2F0610020%2Ccs%2F0610016%2Ccs%2F0610064%2Ccs%2F0610070%2Ccs%2F0610067%2Ccs%2F0610036%2Ccs%2F0610138%2Ccs%2F0610112%2Ccs%2F0610094%2Ccs%2F0610062%2Ccs%2F0610015%2Ccs%2F0610169%2Ccs%2F0610033%2Ccs%2F0610107%2Ccs%2F0610110%2Ccs%2F0610171%2Ccs%2F0610156%2Ccs%2F0610061%2Ccs%2F0610005%2Ccs%2F0610046%2Ccs%2F0610039%2Ccs%2F0610031%2Ccs%2F0610040%2Ccs%2F0610060%2Ccs%2F0610167%2Ccs%2F0610014%2Ccs%2F0610131%2Ccs%2F0610022%2Ccs%2F0610092%2Ccs%2F0610155%2Ccs%2F0610071%2Ccs%2F0610007%2Ccs%2F0610089%2Ccs%2F0610096%2Ccs%2F0610170%2Ccs%2F0610175%2Ccs%2F0610010%2Ccs%2F0610157%2Ccs%2F0610149%2Ccs%2F0610106%2Ccs%2F0610132%2Ccs%2F0610021%2Ccs%2F0610159%2Ccs%2F0610023%2Ccs%2F0610081%2Ccs%2F0610102%2Ccs%2F0610118%2Ccs%2F0610139%2Ccs%2F0610161%2Ccs%2F0610160%2Ccs%2F0610158%2Ccs%2F0610069%2Ccs%2F0610153%2Ccs%2F0610172%2Ccs%2F0610041%2Ccs%2F0610038%2Ccs%2F0610147%2Ccs%2F0610130%2Ccs%2F0610099%2Ccs%2F0610150%2Ccs%2F0610119%2Ccs%2F0610127&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The Application of Fuzzy Logic to the Construction of the Ranking\n  Function of Information Retrieval Systems"}, "summary": "The quality of the ranking function is an important factor that determines\nthe quality of the Information Retrieval system. Each document is assigned a\nscore by the ranking function; the score indicates the likelihood of relevance\nof the document given a query. In the vector space model, the ranking function\nis defined by a mathematic expression. We propose a fuzzy logic (FL) approach\nto defining the ranking function. FL provides a convenient way of converting\nknowledge expressed in a natural language into fuzzy logic rules. The resulting\nranking function could be easily viewed, extended, and verified: * if (tf is\nhigh) and (idf is high) > (relevance is high); * if (overlap is high) >\n(relevance is high). By using above FL rules, we are able to achieve\nperformance approximately equal to the state of the art search engine Apache\nLucene (deltaP10 +0.92%; deltaMAP -0.1%). The fuzzy logic approach allows\ncombining the logic-based model with the vector model. The resulting model\npossesses simplicity and formalism of the logic based model, and the\nflexibility and performance of the vector model.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0410064%2Ccs%2F0410073%2Ccs%2F0410066%2Ccs%2F0410028%2Ccs%2F0410065%2Ccs%2F0410033%2Ccs%2F0410029%2Ccs%2F0410009%2Ccs%2F0410010%2Ccs%2F0410036%2Ccs%2F0410048%2Ccs%2F0410021%2Ccs%2F0410042%2Ccs%2F0410075%2Ccs%2F0410017%2Ccs%2F0410003%2Ccs%2F0410011%2Ccs%2F0410038%2Ccs%2F0410044%2Ccs%2F0410026%2Ccs%2F0610003%2Ccs%2F0610018%2Ccs%2F0610140%2Ccs%2F0610104%2Ccs%2F0610166%2Ccs%2F0610146%2Ccs%2F0610044%2Ccs%2F0610051%2Ccs%2F0610004%2Ccs%2F0610001%2Ccs%2F0610027%2Ccs%2F0610120%2Ccs%2F0610097%2Ccs%2F0610145%2Ccs%2F0610088%2Ccs%2F0610082%2Ccs%2F0610075%2Ccs%2F0610173%2Ccs%2F0610117%2Ccs%2F0610020%2Ccs%2F0610016%2Ccs%2F0610064%2Ccs%2F0610070%2Ccs%2F0610067%2Ccs%2F0610036%2Ccs%2F0610138%2Ccs%2F0610112%2Ccs%2F0610094%2Ccs%2F0610062%2Ccs%2F0610015%2Ccs%2F0610169%2Ccs%2F0610033%2Ccs%2F0610107%2Ccs%2F0610110%2Ccs%2F0610171%2Ccs%2F0610156%2Ccs%2F0610061%2Ccs%2F0610005%2Ccs%2F0610046%2Ccs%2F0610039%2Ccs%2F0610031%2Ccs%2F0610040%2Ccs%2F0610060%2Ccs%2F0610167%2Ccs%2F0610014%2Ccs%2F0610131%2Ccs%2F0610022%2Ccs%2F0610092%2Ccs%2F0610155%2Ccs%2F0610071%2Ccs%2F0610007%2Ccs%2F0610089%2Ccs%2F0610096%2Ccs%2F0610170%2Ccs%2F0610175%2Ccs%2F0610010%2Ccs%2F0610157%2Ccs%2F0610149%2Ccs%2F0610106%2Ccs%2F0610132%2Ccs%2F0610021%2Ccs%2F0610159%2Ccs%2F0610023%2Ccs%2F0610081%2Ccs%2F0610102%2Ccs%2F0610118%2Ccs%2F0610139%2Ccs%2F0610161%2Ccs%2F0610160%2Ccs%2F0610158%2Ccs%2F0610069%2Ccs%2F0610153%2Ccs%2F0610172%2Ccs%2F0610041%2Ccs%2F0610038%2Ccs%2F0610147%2Ccs%2F0610130%2Ccs%2F0610099%2Ccs%2F0610150%2Ccs%2F0610119%2Ccs%2F0610127&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "The quality of the ranking function is an important factor that determines\nthe quality of the Information Retrieval system. Each document is assigned a\nscore by the ranking function; the score indicates the likelihood of relevance\nof the document given a query. In the vector space model, the ranking function\nis defined by a mathematic expression. We propose a fuzzy logic (FL) approach\nto defining the ranking function. FL provides a convenient way of converting\nknowledge expressed in a natural language into fuzzy logic rules. The resulting\nranking function could be easily viewed, extended, and verified: * if (tf is\nhigh) and (idf is high) > (relevance is high); * if (overlap is high) >\n(relevance is high). By using above FL rules, we are able to achieve\nperformance approximately equal to the state of the art search engine Apache\nLucene (deltaP10 +0.92%; deltaMAP -0.1%). The fuzzy logic approach allows\ncombining the logic-based model with the vector model. The resulting model\npossesses simplicity and formalism of the logic based model, and the\nflexibility and performance of the vector model."}, "authors": ["Neil Rubens"], "author_detail": {"name": "Neil Rubens"}, "author": "Neil Rubens", "links": [{"href": "http://arxiv.org/abs/cs/0610039v1", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/cs/0610039v1", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.IR", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.IR", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.AI", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/cs/0610039v1", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/cs/0610039v1", "arxiv_comment": null, "journal_reference": "N. Rubens. The application of fuzzy logic to the construction of\n  the ranking function of information retrieval systems. Computer Modelling and\n  New Technologies, 10(1):20-27, 2006", "doi": null, "fulltext": "Information systems\nComputer Modelling and New Technologies, 2006, Vol.10, No.1, 20-27\nTransport and Telecommunication Institute, Lomonosov 1, LV-1019, Riga, Latvia\n\nTHE APPLICATION OF FUZZY LOGIC\nTO THE CONSTRUCTION\nOF THE RANKING FUNCTION\nOF INFORMATION RETRIEVAL SYSTEMS\nN.O. RUBENS\nUniversity of Massachusetts, Department of Computer Science\nAmherst, MA 01003, USA\n1 (413) 545-2744, norouben@nsm.umass.edu\nThe quality of the ranking function is an important factor that determines the quality of the Information Retrieval system. Each\ndocument is assigned a score by the ranking function; the score indicates the likelihood of relevance of the document given a query.\nIn the vector space model, the ranking function is defined by a mathematic expression such as:\nscore(q, d ) = \u2211 tf(t in d) * idf(t) * getBoost(t.field in d) * lengthNorm(t.field in d) * overlap(q,d) * queryNorm(q)\nt \u2208q\n\nWe propose a fuzzy logic (FL) approach to defining the ranking function. FL provides a convenient way of converting\nknowledge expressed in a natural language into fuzzy logic rules. The resulting ranking function could be easily viewed, extended,\nand verified:\n\u2022 if (tf is high) and (idf is high) \u2192 (relevance is high);\n\u2022 if (overlap is high) \u2192 (relevance is high).\nBy using above FL rules, we are able to achieve performance approximately equal to the state of the art search engine Apache\nLucene (\u2206P10 +0.92%; \u2206MAP -0.1%). The fuzzy logic approach allows combining the logic-based model with the vector model.\nThe resulting model possesses simplicity and formalism of the logic based model, and the flexibility and performance of the vector\nmodel.\nKeywords: Fuzzy Logic, fuzzy set, ranking function, information retrieval, vector space model, tf idf model, Boolean model\n\n1. Introduction\nInformation Retrieval (IR) model could be defined formally as a quadruple [D, Q, F, R(qi, dj)] where\nD is a set of logical views of documents, Q is a set of user queries, F is a framework for modelling\ndocuments and queries, and R(qi,dj) is a ranking function which associates a numeric value to the\ndocument dj according to a system assigned likelihood of relevance to a given user query qi [1]. The\nquality of the ranking function is an important factor that determines the quality of the IR system.\nLogic based Boolean model is one of the earliest models used in the IR systems. The Boolean model\nowes its former popularity to its clean formalism and simplicity. However, the Boolean model suffers\nfrom major drawbacks: binary decision criterion without any notion of a grading scale; difficulty of\ntranslating the query into Boolean expressions [1, 6, 4].\nVector model is a popular retrieval model. The main advantages of the vector model are: its termweighting scheme improves retrieval performance; its partial matching strategy allows retrieval of\ndocuments that approximate the query conditions; it's weighting scheme sorts the documents according to\ntheir degree of similarity to the query [1]. However, vector model does not possess clean formalism and\nsimplicity.\nFuzzy logic [13] allows combining the logic based model with the vector model. The resulting\nmodel possesses simplicity and formalism of the logic based model, and the flexibility and performance\nof the vector model.\n2. Related work\nFuzzy logic has not been applied to defining ranking function directly; however, fuzzy set model has\nbeen used to define fuzzy queries [2], fuzzy relationships between query terms and documents [7,8]. Each\nquery term defines a fuzzy set and each document has a degree of membership in the corresponding set.\nThe Fuzzy Set model performs query expansion based on principles of fuzzy logic. A thesaurus is\nconstructed by defining a term-term correlation matrix. The correlation matrix is used to define a fuzzy\n\n20\n\n\fInformation systems\nset associated to each index term ki. Document dj has a degree of membership \u03bci , j = 1 \u2212 \u220f (1 \u2212 ci , j ) . The\nk i \u2208d j\n\nprocedure to compute the document's relevance given a query is analogous to the procedure used by the\nBoolean model, except rules of fuzzy logic are used [8]. The fuzzy set model approach is not popular\namong the information retrieval community and has been discussed mainly in the literature dedicated to\nfuzzy theory [1]. Recent attempts utilizing fuzzy search were tried at TREC 2001 with the search engine\nNexTrieve. NexTrieve used a combination of the exact search and fuzzy search. The conference paper\nthat describes NexTrieve [3] unfortunately does not provide details on the theoretical foundation and\nimplementation of the system. It appears that application of the fuzzy logic was to the position, and to the\nscoring: terms in different parts of the document would get different scores and not all of the words would\nneed to be present in order for the document to get a high score. According to the authors of NexTrieve,\none of the biggest drawbacks of the system was that it did not take into account word frequency within a\ndocument and document length which has been shown to be a crucial part of the ranking score.\nPerformance of NexTrieve system was substandard with average precision of 0.13; and after some\nadditional modifications (adding word frequency, and document length parameters) were made, it went\nup to 0.19; which was still substandard [3].\n3. Motivation\n3.1. THEORETICAL FIT BETWEEN FUZZY LOGIC MODEL AND INFORMATION RETRIEVAL\nMODEL\nThe Information Retrieval system retrieves documents based on a given query. Both the documents\nand in most cases, the queries, are instances of natural language. Natural langue is often vague and\nuncertain [9]. It is difficult to judge something that is vague and uncertain with deterministic crisp\nformulas and/or crisp logical rules. Fuzzy logic is based on the theory of fuzzy sets, a theory which relates\nto classes of objects with un-sharp boundaries in which membership is a matter of degree [12].\nDocuments, queries and their characteristics could easily be viewed as fuzzy granular classes of objects\nwith un-sharp boundaries and fuzzy memberships in many concept areas [14].\nFuzzy logic is a logical system, which is an extension of multi-valued logic [12]. Use of fuzzy logic\nprovides the benefits of the Boolean method while overcoming its drawbacks. Since the concept of fuzzy\nlogic is quite intuitive, the fuzzy logic model provides a framework that is easy to understand for a\ncommon user of IR system. Documents retrieved by a query are evaluated by the rules of the Fuzzy\nInference System (FIS) that have precise semantics. Unlike the Boolean model that is based on binary\ndecision criterion {relevant, not relevant}, fuzzy logic expresses relevance as degrees of memberships\n(e.g., document | query could have a relevance measure with the following degrees of membership: 0.7\nhighly relevant and 0.5 moderately relevant and 0.1 not relevant). Fuzzy logic is tolerant of imprecise\ndata [1].\n3.2. EXPERT KNOWLEDGE TRANSFER PROCESS\nSince IR deals with natural language, many of the rules that are used to determine relevance of\ndocuments come from experts and from experience. Before the rules are converted to formulas, they are\noften communicated as observations in natural language (e.g., if most of the terms of the query are\npresent in the document, then the document is likely to be relevant; if a term of a query occurs in a\ndocument often, that will increase the likelihood of the document being relevant, etc.). Fuzzy logic allows\nincorporating rules into the system in a natural way. The basic concept underlying FL is that of a\nlinguistic variable, a variable whose values are words rather than numbers. FL may be viewed as a\nmethodology for computing with words rather than numbers. Even though words are inherently less\nprecise than numbers their use is closer to human intuition. Computing with words allows the tolerance\nfor imprecision [12].\n3.3. OPTIMIZATION/VERIFICATION PROCESS\nVarious graphical user interfaces such as Matlab Fuzzy Logic Toolbox provide a convenient way to\nview all the components of an FIS; to modify them easily; and to examine and verify the effects of\nchanges. Parameters of FIS could be modified systematically by utilizing various optimization\n\n21\n\n\fInformation systems\napproaches. The fuzzy logic approach is a very flexible one. It is possible to make small improvements\nwithout disturbing the integrity of the system, by changing parameters of the parts of the system such as\nrules and membership functions. If more granularity is desired more rules and/or membership functions\ncould be added.\n3.4. IMPLEMENTATION\nBaseline Model. The Ranking Fuzzy Inference System (R-FIS) could be based on various retrieval\nmodels that have well defined rules and provide access to underlying features. The vector model was\nchosen as the baseline model due to its good performance. The R-FIS input variables are typical variables\nthat are used in tf.idf based systems: tf.idf, overlap. It is beneficial to use variables that have been\nestablished to be significant in determination of document's relevance, without them, the results would\nsuffer [3].\n\nFigure 1. Fuzzy Inference System\n\n3.5. FUZZY INFERENCE SYSTEM\nRules. Ranking Fuzzy Inference System (R-FIS) is constructed with the use of Matlab Fuzzy Logic\nToolbox. The first step in construction of an FIS is to define rules. Rules will be derived from a common\nknowledge about information retrieval and the tf.idf weighting scheme. The order of the rules in FL does\nnot affect the output.\nIf many of the terms of the query are found in the document (overlap), the document is likely to be\nhighly relevant:\n\u2022 if (overlap is high) \u2192 (relevance is high)\nFor each of the query terms the following rules are defined:\nIf a query term in a document has high tf and idf measures, the document is likely to be highly relevant:\n\u2022 if (tf is high) and (idf is high) \u2192 (relevance is high)\nWe have found that the performance of the system is better if the rules that penalize low features\nare added. To achieve this we added the negated rules for each of the rules above:\n\u2022 if (overlap is not high) \u2192 (relevance is not high)\n\u2022 if (tf is not high) and (idf is not high) \u2192 (relevance is not high)\nApproach to simply negate the rules is compact but it assumes that the opposing membership\nfunction is inversely symmetrical. Another approach to creating negated rules is by adding appropriate\nmembership functions such as low and high.\nEach rule has a weight associated with it. In case of R-FIS each tf.idf rule was assigned a weight of\n1/t, where t is a number of terms in a query. Weight for the overlap rule was 1/6 of the weight of the tf.idf\nrule. Overlap rule weight is lower due to the fact that to some degree overlap rule is already represented\nin each of the tf.idf rules.\nFuzzy Sets / Membership Functions. It is necessary to give mathematical meaning to the linguistic\nvariables mentioned in above rules: high relevance, low relevance, high tf, low tf, high idf, low idf. It is\nnecessary to define fuzzy sets (see Figure 2). All input variables and output variables currently have two\nfuzzy sets associated with each variable: high, not high. If greater granularity is desired, more fuzzy sets\ncould be defined such as for example: very low, low, medium, high, very high, etc. A membership\nfunction is a curve that defines how each point in the input space is mapped to a degree of membership of\nfuzzy set. There are various membership function types such as: sigmoid, Gaussian, trapezoidal (trapmf),\ntriangular (trimf), etc. [5]. Gaussian and sigmoid based functions through a higher number of parameters\nprovide for a higher flexibility.\n\n22\n\n\fInformation systems\n\nFigure 2. Fuzzy Sets / Membership Functions\n\nGenerally Gaussian function better models the underlying variables, but knowledge about variables\nthat are being modelled is necessary in order to define parameters of the function appropriately. In this\ncase, linear functions such as trapmf and trimf achieve suitable performance without the need for further\ntuning. In certain cases, it seems more beneficial to use linear membership functions such as trapezoidal\nand triangular membership functions. For example, in the case of idf; it appears to be more efficient to\nN\nuse trapmf. Trimmf since idf has already been normalized with log function: idf = log( ) . For each of\nn\nthe input and output variables of the R-FIS two triangular membership functions were defined: high, not\nhigh.\nFuzzy Inference Process. The Fuzzy Inference Process is performed automatically, but in order to\nexplain how the system functions, each of the steps will be examined (see Figure 3).\n\nFigure 3. Fuzzy Inference Process\n\nInput Fuzzification. The first step is to take the crisp numerical values of the inputs and determine\nthe degree to which they belong to each of the appropriate fuzzy sets via membership functions [5]. For\nexample: tf1 = 0.7, this would be translated into 0.7 degree of membership in fuzzy set \"high\" and 0.3\ndegree of membership in fuzzy set \"not high\". Same procedure would be applied to all of the inputs\n(see Figure 4).\n\nFigure 4. Input Fuzzification\n\n23\n\n\fInformation systems\nFuzzy Operator Application. Once the inputs have been fuzzified, the degree to which each part of\nthe antecedent has been satisfied for each rule is known. If the antecedent of a given rule has more than\none part, the fuzzy operator is applied to obtain a number that represents the result of the antecedent for\nthat rule [5]. Let's examine rule: if (tf1 is high) and (idf1 is high) \u2192 (relevance is high). In this case the\ninput to the fuzzy operator is two membership values from fuzzified input variables: e.g. tf1 has a 0.7\ndegree of membership in fuzzy set high and idf1 has a 0.6 degree of membership in fuzzy set high. For\nthe R-FIS product (prod) was selected as a fuzzy operator for and method so the result is 0.7 * 0.6 = 0.42.\nThis procedure is applied to every rule. The and fuzzy operator could be seen as an aggregation applied\nlocally in this case to the terms of the rule. There are different operators for and operator such as: min,\nprod. Prod has a much better theoretical fit, since by using the prod operator, output is determined by all\nfeatures of the terms and not just the minimum one. Prod has also been established to be an appropriate\nand method realized by a formula based tf.idf model; since in the formula tf and idf are combined through\nuse of product operator:\nscore(q, d ) = \u2211 tf(t in d) * idf(t) * ...\nt \u2208q\n\nImplication Method Application. The input for the implication process is a single number given by\nthe antecedent, and the output is a fuzzy set. A consequent of the implication method is a fuzzy set\nrepresented by a membership function, which weights appropriately the linguistic characteristics that are\nattributed to it (see Figure 5). The consequent is reshaped using a function associated with the antecedent\n(a single number) and the weight of the rule. Implication is applied to every rule [5].\n\nFigure 5. Implication Method\n\nThe implication operator determines the shape of the consequent fuzzy set. The prod operator\nappears to be a better fit in comparison with the min operator; since prod scales the consequent fuzzy set\nunlike min that truncates the consequent fuzzy set. The prod operator allows the output fuzzy set to retain\nits shape properties; unlike the min operator that alters the shape of the resulting fuzzy set.\nOutput Aggregation. Since decision is based on all of the rules in the FIS, the rules must be\ncombined in order to make the decision. Aggregation is the process by which the fuzzy sets that represent\nthe outputs of each rule are combined into a single fuzzy set. The input of the aggregation process is the\nlist of fuzzy sets that represent the outputs of each rule (see Figure 6). The output of the aggregation\nprocess is a fuzzy set [5].\n\nFigure 6. Output Aggregation\n\nThere are a number of different aggregation methods available, such as: max, sum, probabilistic or.\nThe nature of the information retrieval dictates that the determination of the ranking should be done based\non all of the rules. In this case the sum aggregation method appears to be a much better fit. Sum has also\nbeen established to be an appropriate aggregation method by a formula based tf.idf model since terms are\ncombined through the sum operator: score(q, d ) = \u2211 ... .\nt \u2208q\n\nFigure 7. Output Defuzzification\n\nOutput Defuzzification. The input for the defuzzification process is\nthe aggregate output fuzzy set and the output is a single number (see\nFigure 7). Fuzziness helps the rule evaluation during the intermediate\nsteps; however the final desired output for each variable is generally a\nsingle number. Fuzzy set must be defuzzified in order to resolve a single\noutput value from the set. There are various methods for defuzzification\nsuch as: centroid, bisector, middle of maximum (the average of the\nmaximum value of the output set), largest of maximum, and smallest of\nmaximum.\n\n24\n\n\fInformation systems\nCentroid method is the most widely used method. In this case the centroid method is used, since it\nsatisfies the underlying properties of the system and exhibits the best performance. The centroid method\nreturns the centre of the area under the curve. In this case it is 0.469.\n4. Evaluation\n4.1. EVALUATION DATA SET\nTo evaluate the effectiveness of R-FIS, data from the NIST TREC 2004 Robust Retrieval Track was\nused. The robust retrieval track explores methods for improving the consistency of retrieval technology\nby focusing on poorly performing topics [10].\nTABLE 1. Document Corpus\nSource\n\n# Docs\n\nFinancial Times\n\n210,158\n\nSize (MB)\n564\n\nFederal Register 94\n\n55,630\n\n395\n\nFBIS, disk 5\n\n130,471\n\n470\n\nLA Times\n\n131,896\n\n475\n\nTotal Collection:\n\n528,155\n\n1904\n\nThe Robust test set contains 250 topics: topics 301-450 (ad hoc topics from TREC 6-8), topics\n601-650 (new topics for 2003 robust track), and topics 651-700 (new topics for 2004 robust track) [11].\nTABLE 2. Relevant document statistics for topic sets\nTopic Set\n\nNumber of topics\n\nMean Relevant per\ntopic\n\nMinimum Number\nRelevant\n\nMaximum Number\nRelevant\n\nOld\n\n200\n\n76.8\n\n3\n\n448\n\nNew\n\n49\n\n42.1\n\n3\n\n161\n\nHard\n\n50\n\n88.3\n\n5\n\n361\n\nCombined\n\n249\n\n69.9\n\n3\n\n448\n\nBaseline System. Apache Lucene version 1.4.3 [15] with query expansion module [16] was used as\nthe baseline search engine. Lucene is an open source, high-performance, full-featured text search engine\nwritten entirely in Java.\nSystem Configuration. FIS Rules:\n\u2022 if (overlap is high) \u2192 (relevance is high)\nFor each of the query terms:\n\u2022 if (tf is high) and (idf is high) \u2192 (relevance is high)\n\u2022 if (tf is not high) and (idf is not high) \u2192 (relevance is not high)\nTABLE 3. FIS Specifications\nFuzzy Inference System Type\n\nMamdani\n\nAnd method\n\nproduct\n\nImplication method\n\nproduct\n\nAggregation method\n\nsum\n\nDefuzzification\n\ncentroid\n\nMembership Function Type\n\ntriangular [0,1]\n\nEach rule has a weight associated with it. Each query term rule assigned a weight of 1/t, where t is a\nnumber of terms in a query. Weight for the overlap rule is 1/6 of the weight of the query term rule, due to\nthe fact that to some degree overlap rule is already represented in each of the query term rules (see\nFigure 8).\n\n25\n\n\fInformation systems\n\nFigure 8. Rule Surface\n\n4.2. PERFORMANCE EVALUATION\nTABLE 4. Evaluation Results\nTag\n\nTopic Set\n\nMAP\n\nP10\n\n%no\n\nLucene\n\nOld\n\n0.2232\n\n0.3945\n\n15.00%\n\nR-FIS\n\nOld\n\n-0.0061\n\n+0.0035\n\n-0.00%\n\nLucene\n\nNew\n\n0.2738\n\n0.4143\n\n10.20%\n\nR-FIS\n\nNew\n\n+0.0201\n\n+0.0326\n\n-2.00%\n\nLucene\n\nHard\n\n0.1374\n\n0.286\n\n28.00%\n\nR-FIS\n\nHard\n\n+0.0117\n\n+0.026\n\n-2.00%\n\nLucene\n\nCombined\n\n0.2332\n\n0.3984\n\n14.10%\n\nR-FIS\n\nCombined\n\n-0.001\n\n+0.0092\n\n-0.40%\n\nValues given are the mean average precision (MAP), precision at rank 10\naveraged over topics (P10), the percentage of topics with no relevant\nin the top ten retrieved (%no).\n\nR-FIS has slightly outperformed Lucene on all of the topic sets on the P10 and %no measures. MAP\nmeasure was slightly better for R-FIS on New and Hard topic sets and slightly worse for Old and\nCombined topic sets. Overall, we believe R-FIS performed very well, considering that Lucene is a state of\nthe art vector based search engine.\nConclusion\nWe presented a new method of defining the ranking function by combining the logic based model\nwith the vector model through the use of fuzzy logic. Fuzzy logic provides a convenient way of\nconverting existing knowledge into fuzzy logic rules. To construct a system with a good performance, a\nbasic understanding of the tf.idf principles and the basic principles of information retrieval theory appears\nto be sufficient. The resulting model possesses simplicity and formalism of the logic based model, and the\nflexibility and performance of the vector model.\nFor the baseline model we have used vector based model due to its speed and performance, but\nfuzzy logic approach could be applied to any retrieval model that has well defined rules and provides an\naccess to underlying features.\nAcknowledgments\nThe author would like to thank James Allan and William Kilmer for helpful discussions and\nsuggestions. I would also like to thank Open Source community for providing the numerous tools and\nsystems I have used to produce both my results and this paper.\n\n26\n\n\fInformation systems\nReferences\n[1]\n\nBaeza-Yates R.and Ribeiro-Neto B. (1999) Modern Information Retrieval. ACM Press\n\n[2]\n\nBordogna G.and Pasi G. (1995) Handling vagueness in information retrieval systems. In:\nProceedings of the Second New Zealand International Two-Stream Conference on Artificial\nNeural Networks and Expert Systems, Nov. 20-23, 1995, pp.110-114.\n\n[3]\n\nClare G., Hendrikse K. (2001) The NexTrieve Search System in TREC 2001. NIST Special\nPublication 500-250: The Tenth Text REtrieval Conference (TREC 2001)\n\n[4]\n\nCleverdon C. (1983) Optimizing Convenient Online Access to Bibliographic Databases.\nInformation Services and Use 4(1/2), pp.37-47.\n\n[5]\n\nFuzzy Logic Toolbox User's Guide (2004) The MathWorks Inc.\n\n[6]\n\nHarman D. (1992) Ranking Algorithms. Information retrieval: data structures and algorithms.\nPrentice-Hall, pp.363-392.\nMiyamoto S. (1990) Fuzzy sets in Information Retrieval and Cluster Analysis. Kluwer Academic\nPublishers\n\n[7]\n[8]\n\nOgawa Y., Morita T., Kobayashi K. (1991) A fuzzy document retrieval system using the keyword\nconnection matrix and a learning method. Fuzzy Sets and Systems 39, pp.163-179.\n\n[9]\n\nSubtil P., Mouaddib N., Foucaut O. (1996) A fuzzy information retrieval and management system\nand its applications. In: Proceedings of the ACM symposium on Applied Computing, February\n1996.\n\n[10]\n\nVoorhees E.M. (2004) Overview of the TREC 2004 Robust Retrieval Track. In: TREC 13, 2004.\n\n[11]\n\nVoorhees E.M. (2004) TREC 2004 Robust Track Guidelines. In: TREC 13, 2004.\n\n[12]\n\nZadeh L.A. (2004) Foreword to Fuzzy Logic Toolbox User's Guide. The MathWorks Inc.\n\n[13]\n\nZadeh L.A. (1965) Fuzzy sets. Information and control 8, 338-353\n\n[14]\n\nZadeh L.A. (1997) Toward a theory of fuzzy information granulation and its centrality in human\nreasoning and fuzzy logic. Fuzzy Sets and Systems 90 (2)\n\n[15]\n\nhttp://lucene.apache.org\n\n[16]\n\nhttp://lucene-qe.sourceforge.net\n\nReceived on the 21st of October 2005\n\n27\n\n\f"}