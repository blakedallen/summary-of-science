{"id": "http://arxiv.org/abs/cs/0610123v2", "guidislink": true, "updated": "2006-11-20T14:41:55Z", "updated_parsed": [2006, 11, 20, 14, 41, 55, 0, 324, 0], "published": "2006-10-20T11:35:05Z", "published_parsed": [2006, 10, 20, 11, 35, 5, 4, 293, 0], "title": "Proof Nets and the Identity of Proofs", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0610135%2Ccs%2F0610048%2Ccs%2F0610050%2Ccs%2F0610042%2Ccs%2F0610066%2Ccs%2F0610017%2Ccs%2F0610091%2Ccs%2F0610045%2Ccs%2F0610012%2Ccs%2F0610024%2Ccs%2F0610084%2Ccs%2F0610103%2Ccs%2F0610095%2Ccs%2F0610144%2Ccs%2F0610068%2Ccs%2F0610123%2Ccs%2F0610013%2Ccs%2F0610029%2Ccs%2F0610073%2Ccs%2F0610114%2Ccs%2F0610078%2Ccs%2F0610113%2Ccs%2F0610142%2Ccs%2F0610063%2Ccs%2F0610035%2Ccs%2F0610163%2Ccs%2F0610143%2Ccs%2F0610026%2Ccs%2F0610134%2Ccs%2F0610116%2Ccs%2F0610152%2Ccs%2F0610047%2Ccs%2F0610109%2Ccs%2F0610052%2Ccs%2F0610065%2Ccs%2F0610025%2Ccs%2F0610057%2Ccs%2F0610030%2Ccs%2F0610037%2Ccs%2F0610053%2Ccs%2F0610108%2Ccs%2F0610105%2Ccs%2F0610087%2Ccs%2F0610054%2Ccs%2F0610162%2Ccs%2F0610085%2Ccs%2F0610121%2Ccs%2F0610165%2Ccs%2F0610019%2Ccs%2F0610154%2Ccs%2F0610133%2Ccs%2F0610141%2Ccs%2F0610008%2Ccs%2F0610111%2Ccs%2F0610055%2Ccs%2F0610072%2Ccs%2F0610151%2Ccs%2F0610093%2Ccs%2F0610083%2Ccs%2F0610009%2Ccs%2F0610049%2Ccs%2F0610137%2Ccs%2F0610074%2Ccs%2F0610056%2Ccs%2F0610006%2Ccs%2F0610129%2Ccs%2F0610058%2Ccs%2F0610079%2Ccs%2F0610174%2Ccs%2F0610011%2Ccs%2F0610086%2Ccs%2F0610059%2Ccs%2F0610090%2Ccs%2F0610125%2Ccs%2F0610077%2Ccs%2F0610122%2Ccs%2F0610076%2Ccs%2F0610148%2Ccs%2F0610124%2Ccs%2F0610098%2Ccs%2F0610136%2Ccs%2F0610080%2Ccs%2F0610128%2Ccs%2F0610101%2Ccs%2F0610028%2Ccs%2F0610043%2Ccs%2F0610126%2Ccs%2F0610100%2Ccs%2F0610164%2Ccs%2F0610168%2Ccs%2F0610002%2Ccs%2F0408031%2Ccs%2F0408019%2Ccs%2F0408036%2Ccs%2F0408001%2Ccs%2F0408011%2Ccs%2F0408035%2Ccs%2F0408067%2Ccs%2F0408007%2Ccs%2F0408037%2Ccs%2F0408018&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Proof Nets and the Identity of Proofs"}, "summary": "These are the notes for a 5-lecture-course given at ESSLLI 2006 in Malaga,\nSpain. The URL of the school is http://esslli2006.lcc.uma.es/ . This version\nslightly differs from the one which has been distributed at the school because\ntypos have been removed and comments and suggestions by students have been\nworked in. The course is intended to be introductory. That means no prior\nknowledge of proof nets is required. However, the student should be familiar\nwith the basics of propositional logic, and should have seen formal proofs in\nsome formal deductive system (e.g., sequent calculus, natural deduction,\nresolution, tableaux, calculus of structures, Frege-Hilbert-systems, ...). It\nis probably helpful if the student knows already what cut elimination is, but\nthis is not strictly necessary. In these notes, I will introduce the concept of\n``proof nets'' from the viewpoint of the problem of the identity of proofs. I\nwill proceed in a rather informal way. The focus will be more on presenting\nideas than on presenting technical details. The goal of the course is to give\nthe student an overview of the theory of proof nets and make the vast amount of\nliterature on the topic easier accessible to the beginner. For introducing the\nbasic concepts of the theory, I will in the first part of the course stick to\nthe unit-free multiplicative fragment of linear logic because of its rather\nsimple notion of proof nets. In the second part of the course we will see proof\nnets for more sophisticated logics. This is a basic introduction into proof\nnets from the perspective of the identity of proofs. We discuss how deductive\nproofs can be translated into proof nets and what a correctness criterion is.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=cs%2F0610135%2Ccs%2F0610048%2Ccs%2F0610050%2Ccs%2F0610042%2Ccs%2F0610066%2Ccs%2F0610017%2Ccs%2F0610091%2Ccs%2F0610045%2Ccs%2F0610012%2Ccs%2F0610024%2Ccs%2F0610084%2Ccs%2F0610103%2Ccs%2F0610095%2Ccs%2F0610144%2Ccs%2F0610068%2Ccs%2F0610123%2Ccs%2F0610013%2Ccs%2F0610029%2Ccs%2F0610073%2Ccs%2F0610114%2Ccs%2F0610078%2Ccs%2F0610113%2Ccs%2F0610142%2Ccs%2F0610063%2Ccs%2F0610035%2Ccs%2F0610163%2Ccs%2F0610143%2Ccs%2F0610026%2Ccs%2F0610134%2Ccs%2F0610116%2Ccs%2F0610152%2Ccs%2F0610047%2Ccs%2F0610109%2Ccs%2F0610052%2Ccs%2F0610065%2Ccs%2F0610025%2Ccs%2F0610057%2Ccs%2F0610030%2Ccs%2F0610037%2Ccs%2F0610053%2Ccs%2F0610108%2Ccs%2F0610105%2Ccs%2F0610087%2Ccs%2F0610054%2Ccs%2F0610162%2Ccs%2F0610085%2Ccs%2F0610121%2Ccs%2F0610165%2Ccs%2F0610019%2Ccs%2F0610154%2Ccs%2F0610133%2Ccs%2F0610141%2Ccs%2F0610008%2Ccs%2F0610111%2Ccs%2F0610055%2Ccs%2F0610072%2Ccs%2F0610151%2Ccs%2F0610093%2Ccs%2F0610083%2Ccs%2F0610009%2Ccs%2F0610049%2Ccs%2F0610137%2Ccs%2F0610074%2Ccs%2F0610056%2Ccs%2F0610006%2Ccs%2F0610129%2Ccs%2F0610058%2Ccs%2F0610079%2Ccs%2F0610174%2Ccs%2F0610011%2Ccs%2F0610086%2Ccs%2F0610059%2Ccs%2F0610090%2Ccs%2F0610125%2Ccs%2F0610077%2Ccs%2F0610122%2Ccs%2F0610076%2Ccs%2F0610148%2Ccs%2F0610124%2Ccs%2F0610098%2Ccs%2F0610136%2Ccs%2F0610080%2Ccs%2F0610128%2Ccs%2F0610101%2Ccs%2F0610028%2Ccs%2F0610043%2Ccs%2F0610126%2Ccs%2F0610100%2Ccs%2F0610164%2Ccs%2F0610168%2Ccs%2F0610002%2Ccs%2F0408031%2Ccs%2F0408019%2Ccs%2F0408036%2Ccs%2F0408001%2Ccs%2F0408011%2Ccs%2F0408035%2Ccs%2F0408067%2Ccs%2F0408007%2Ccs%2F0408037%2Ccs%2F0408018&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "These are the notes for a 5-lecture-course given at ESSLLI 2006 in Malaga,\nSpain. The URL of the school is http://esslli2006.lcc.uma.es/ . This version\nslightly differs from the one which has been distributed at the school because\ntypos have been removed and comments and suggestions by students have been\nworked in. The course is intended to be introductory. That means no prior\nknowledge of proof nets is required. However, the student should be familiar\nwith the basics of propositional logic, and should have seen formal proofs in\nsome formal deductive system (e.g., sequent calculus, natural deduction,\nresolution, tableaux, calculus of structures, Frege-Hilbert-systems, ...). It\nis probably helpful if the student knows already what cut elimination is, but\nthis is not strictly necessary. In these notes, I will introduce the concept of\n``proof nets'' from the viewpoint of the problem of the identity of proofs. I\nwill proceed in a rather informal way. The focus will be more on presenting\nideas than on presenting technical details. The goal of the course is to give\nthe student an overview of the theory of proof nets and make the vast amount of\nliterature on the topic easier accessible to the beginner. For introducing the\nbasic concepts of the theory, I will in the first part of the course stick to\nthe unit-free multiplicative fragment of linear logic because of its rather\nsimple notion of proof nets. In the second part of the course we will see proof\nnets for more sophisticated logics. This is a basic introduction into proof\nnets from the perspective of the identity of proofs. We discuss how deductive\nproofs can be translated into proof nets and what a correctness criterion is."}, "authors": ["Lutz Strassburger"], "author_detail": {"name": "Lutz Strassburger"}, "author": "Lutz Strassburger", "links": [{"href": "http://arxiv.org/abs/cs/0610123v2", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/cs/0610123v2", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.LO", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.LO", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/cs/0610123v2", "affiliation": "INRIA Futurs", "arxiv_url": "http://arxiv.org/abs/cs/0610123v2", "arxiv_comment": null, "journal_reference": null, "doi": null, "fulltext": "Proof Nets and the Identity of Proofs\nLutz Strassburger\n\nN\u00b0 6013\nOctober 2006\n\napport\nde recherche\n\nISRN INRIA/RR--6013--FR+ENG\n\nTh\u00e8me SYM\n\nSN 0249-6399\n\narXiv:cs/0610123v2 [cs.LO] 20 Nov 2006\n\nINSTITUT NATIONAL DE RECHERCHE EN INFORMATIQUE ET EN AUTOMATIQUE\n\n\f\fProof Nets and the Identity of Proofs\nLutz Strassburger\nTh\u00e8me SYM - Syst\u00e8mes symboliques\nProjet Parsifal\nRapport de recherche n\u00b0 6013 - October 2006 - 74 pages\n\nAbstract: These are the notes for a 5-lecture-course given at ESSLLI 2006 in Malaga, Spain. The URL\nof the school is http://esslli2006.lcc.uma.es/. This version slightly differs from the one which has been\ndistributed at the school because typos have been removed and comments and suggestions by students have\nbeen worked in.\nThe course is intended to be introductory. That means no prior knowledge of proof nets is required. However,\nthe student should be familiar with the basics of propositional logic, and should have seen formal proofs in some\nformal deductive system (e.g., sequent calculus, natural deduction, resolution, tableaux, calculus of structures,\nFrege-Hilbert-systems, etc.). It is probably helpful if the student knows already what cut elimination is, but\nthis is not strictly necessary.\nIn these notes, I will introduce the concept of \"proof nets\" from the viewpoint of the problem of the identity\nof proofs. I will proceed in a rather informal way. The focus will be more on presenting ideas than on presenting\ntechnical details. The goal of the course is to give the student an overview of the theory of proof nets and make\nthe vast amount of literature on the topic easier accessible to the beginner.\nFor introducing the basic concepts of the theory, I will in the first part of the course stick to the unit-free\nmultiplicative fragment of linear logic because of its rather simple notion of proof nets. In the second part of\nthe course we will see proof nets for more sophisticated logics.\nThis is a basic introduction into proof nets from the perspective of the identity of proofs. We discuss how\ndeductive proofs can be translated into proof nets and what a correctness criterion is.\nKey-words: Proof nets, cut elimination, identity of proofs, correctness criterion, multiplicative linear logic,\npomset logic, classical logic\n\nUnit\u00e9 de recherche INRIA Futurs\nParc Club Orsay Universit\u00e9, ZAC des Vignes,\n4, rue Jacques Monod, 91893 ORSAY Cedex (France)\nT\u00e9l\u00e9phone : +33 1 72 92 59 00 - T\u00e9l\u00e9copie : +33 1 60 19 66 08\n\n\fReseaux de d\u00e9monstration et l'identit\u00e9 des d\u00e9monstrations\nR\u00e9sum\u00e9 : Pas de r\u00e9sum\u00e9\nMots-cl\u00e9s : Reseaux de d\u00e9monstration, \u00e9limination des coupures, identit\u00e9 des d\u00e9monstrations, logique lineaire,\nlogique classique\n\n\fProof Nets and the Identity of Proofs\n\n3\n\nContents\n1 Introduction\n1.1 The problem of the identity of proofs . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n1.2 Historical overview . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n1.3 Proof nets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n3\n3\n4\n4\n\n2 Unit-free multiplicative linear logic\n2.1 Sequent calculus for MLL\u2212 . . . . . . . . . . . . . . . . . . . . . . . . . . .\n2.2 From sequent calculus to proof nets, 1st way (sequent calculus rule based)\n2.3 From sequent calculus to proof nets, 2nd way (coherence graph based) . .\n2.4 From deep inference to proof nets . . . . . . . . . . . . . . . . . . . . . . .\n2.5 Correctness criteria . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n2.6 Two-sided proof nets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n2.7 Cut elimination . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n2.8 *-Autonomous categories (without units) . . . . . . . . . . . . . . . . . .\n2.9 Notes . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n.\n.\n\n5\n5\n7\n10\n11\n17\n29\n33\n39\n43\n\n3 Other fragments of linear logic\n3.1 Multiplicative exponential linear logic (without units)\n3.2 Multiplicative additive linear logic (without units) . .\n3.3 Intuitionistic multiplicative linear logic (without unit)\n3.4 Cyclic linear logic (without units) . . . . . . . . . . . .\n3.5 Multiplicative linear logic with units . . . . . . . . . .\n3.6 Mix . . . . . . . . . . . . . . . . . . . . . . . . . . . .\n3.7 Pomset logic and BV . . . . . . . . . . . . . . . . . . .\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n44\n44\n46\n48\n49\n51\n53\n53\n\n4 Intuitionistic logic\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n.\n.\n.\n.\n.\n.\n.\n\n58\n\n5 Classical Logic\n58\n5.1 Sequent calculus rule based proof nets . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 60\n5.2 Flow graph based proof nets (simple version) . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63\n5.3 Flow graph based proof nets (extended version) . . . . . . . . . . . . . . . . . . . . . . . . . . . . 68\n\n1\n1.1\n\nIntroduction\nThe problem of the identity of proofs\n\nWhenever we study mathematical objects within a certain mathematical theory, we normally know when two of\nthese objects are considered to be the same, i.e., are indistinguishable within the theory. For example in group\ntheory two groups are indistinguishable if they are isomorphic, in topology two spaces are considered the same\nif they are homeomorphic, and in graph theory we have the notion of graph isomorphism. However, in proof\ntheory the situation is different. Although we are able to manipulate and transform proofs in various ways,\nwe have no satisfactory notion telling us when two proofs are the same, in the sense that they use the same\nargument. The main reason is the lack of understanding of the essence of a proof, which in turn is caused by the\nbureaucracy involved in the syntactic presentation of proofs. It is therefore essential to find new presentations\nof proofs that are \"syntax-free\", in the sense that they avoid \"unnecessary bureaucracy\".\nFinding such presentations is, of course, of utter importance for logic and proof theory in its own sake. We\ncan only speak of a real theory of proofs, if we are able to identify its objects. Apart from that, the problem\nis of relevance not only for philosophy and mathematics, but also for computer science, because many logical\nsystems permit a close correspondence between proofs and programs. In the view of this so-called Curry-Howard\ncorrespondence, the question of the identity of proofs becomes the question of the identity of programs, i.e.,\nwhen are two programs just different presentations of the same algorithm. In other words, the fundamental\nproof theoretical question on the nature of proofs is closely related to the fundamental question on the nature\nof algorithms. In both cases the problem is finding the right presentation that is able to avoid unnecessary\nsyntactic bureaucracy.\n\nRR n\u00b0 6013\n\n\f4\n\n1.2\n\nLutz Strassburger\n\nHistorical overview\n\nInterestingly, the problem of the identity of proofs can be considered older than proof theory itself. Already in\n1900, when Hilbert was preparing his celebrated lecture, he considered to add a 24th problem, asking to develop\na theory of proofs that allows to compare proofs and provide criteria for judging which is the simplest proof of\na theorem.1 But only in the early 1920s, when Hilbert launched his famous program to give a formalization of\nmathematics in an axiomatic form, together with a proof that this axiomatization is consistent, formal proof\ntheory as we know it today came into existence.\nIt was G\u00f6del [G\u00f6d31], who first considered formal proofs as first-class citizens of the logical world, by\nassigning a unique number to each of them. Even though this work destroyed Hilbert's program, the idea of\ntreating proofs as mathematical objects-in the very same way as it is done with formulas-led eventually to our\nmodern understanding of formal proofs. Only a few years later, Gentzen [Gen34] provided the first structural\nanalysis of formal proofs and introduced methods of transforming them. His concept of cut elimination is still\nthe most central target of investigation in structural proof theory. But even after Gentzen's work, the natural\nquestion of asking for a notion of identity between proofs seemed silly because there are only two trivial answers:\ntwo proofs are the same if they prove the same formula, or, two proofs are the same if they are syntactically\nequal.\nIn [Pra71], Prawitz proposed the notion of normalization in natural deduction for determining the identity of\nproofs: two proofs are the same (in the sense that they stand for the same argument) if and only if they have the\nsame normal form. The normalization process in natural deduction corresponds to Gentzen's cut elimination in\nthe sequent calculus: All auxiliary lemmas are removed from the proof, which then uses only material that does\nalready appear in the formula to be proved. However, normalization does not respect any complexity issues\nbecause it is hyper-exponential. This means in particular that all so-called speed-up theorems are ignored. In\nfact, it can happen that a proof with cuts that fits a page is identified with a cut-free proof that exhausts the\nsize of the universe [Boo84]. Furthermore, it is probably quite difficult to convince a working mathematician of\nthe idea that a cunningly short proof using three clever lemmas should be the same as an extraordinarily long\nproof that does not use these lemmas, even if it can be obtained from the first one via cut elimination. After\nall, the main part of the mathematician's work consists of finding the right auxiliary lemmas in the first place.\nFrom the viewpoint of computer science the situation looks similar. Through the Curry-Howard correspondence, formulas become types and proofs become programs. The normalization of the proof corresponds to the\ncomputation of the program. Translating Prawitz' idea into this setting means that two programs are the same\nif and only if they have the same input-output-behavior, which completely disregards any reasonable complexity\nproperty.\nIndependently, Lambek [Lam68, Lam69] proposed an idea for identifying proofs that is based on commuting\ndiagrams in categories seen as deductive systems: two proofs are the same, if they constitute the same morphism\nin the category. For propositional intuitionistic logic on the one side, and Cartesian closed categories on the\nother side, the two notions coincide. Similarly, by using *-autonomous categories, one can make the two notions\ncoincide for linear logic (see Section 2.8). But for classical logic, the logic of our every day reasoning, neither\nnotion has a commonly agreed definition (see Section 5).2\nUnfortunately, the problem of identifying proofs has not received much attention since the work by Prawitz\nand Lambek. Probably one of the reasons is that the fundamental problem of the bureaucracy involved in\ndeductive systems (in which formal proofs are carried out) seemed to be an insurmountable obstacle. In fact,\nthe problem seems so difficult, that it is widely considered to be \"only philosophical\". However, behind the undeniable philosophical aspects, the problem clearly is a mathematical one and deserves a rigorous mathematical\ntreatment. The developments in logic, proof theory, and related fields within the last two decades suggest that\nit is worthwhile to give it a new attack. In these notes we will see some ideas in that direction.\n\n1.3\n\nProof nets\n\nThe term \"proof net\" has been coined by Girard [Gir87] for his \"bureaucracy-free\" presentation of proofs in\nlinear logic. He used the term \"bureaucracy\" for the phenomenon of \"trivial rule permutations\" in the sequent\ncalculus that do not change the essence of a proof.\nIn these notes, we will use the term \"proof net\" is a broader sense: A proof net is a graph theoretical or\ngeometric presentation that captures the essence of a proof and is free of any syntactic bureaucracy. Of course,\n1 This has been discovered by the historian R\u00fcdiger Thiele while studying the original notebooks of Hilbert [Thi03]. The history\nof proof theory might have taken a different development if Hilbert had included his 24th problem into the lecture.\n2 See also [Do\u016103] for a comparison of the two notions.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n5\n\nfor making this precise, it is necessary to say what is meant by \"the essence of a proof\" and by \"syntactic\nbureaucracy\". This is far from clear and is the target of most of today's research efforts on the problem of the\nidentity of proofs.\nAlthough we use Girard's terminology, some of the ideas and technical breakthroughs that we are going\nto present are much older. The proof nets for unit-free multiplicative logic (that we use as playground for\nintroducing the theory) are essentially the coherence graphs of Eilenberg, Kelly, and Mac Lane [EK66, KM71].\nFor the case of classical logic, the same idea has been rediscovered under the name of logical flow-graph by Buss\n[Bus91]. A very simplified version of proof nets for classical logic is based on Andrews' matings [And76] and\nBibel's connections [Bib81]. If the proof presentations by Andrews and Bibel (which are identical) are restricted\nto \"a linear version\" we can (by using the right notion of correctness) get back Girard's proof nets. But these\nlinear proof nets have a much better proof theoretical behavior than the nonlinear (i.e., classical) version. This\nis the reason why we start our survey with proof nets for linear logic.\n\n2\n\nUnit-free multiplicative linear logic\n\nUnit-free multiplicative linear logic (MLL\u2212 ) is a very simple logic, that has nonetheless a well-developed theory\nof proof nets.3 For this reason I will use MLL\u2212 to introduce the concept of proof nets.\n\n2.1\n\nSequent calculus for MLL\u2212\n\nWhen we define a logic in terms of a deductive system, we have to do two things. First, we have to define the\nset of well-formed formulas, and second, we have to define the subset of derivable (or provable) formulas, which\nis done via a set of inference rules4 . Here is the necessary data for MLL\u2212 : The set of formulas is defined via\nF ::= A | A \u22a5 | F O F | F \u000f F\nwhere A = {a, b, c, . . .} is a countable set of propositional variables, and A \u22a5 = {a\u22a5 , b\u22a5 , c\u22a5 , . . .} are their duals.\nIn the following, we will call the elements of the set A \u222a A \u22a5 atoms.\nThe (linear) negation of a formula is defined inductively via\na\u22a5\u22a5 = a\n\n(A \u000f B)\u22a5 = B \u22a5 O A\u22a5\n\n(A O B)\u22a5 = B \u22a5 \u000f A\u22a5\n\nNote that we invert the order of the arguments when we take the negation of a binary connective. This is not\nstrictly necessary (since for the time being we stay in the commutative world) but will simplify our life when it\ncomes to drawing pictures of proof nets in later sections.\nHere is a set of inference rules for MLL\u2212 given in the formalism of the sequent calculus:\nid\n\n\u22a5\n\n\u22a2 A ,A\n\u000f\n\n\u22a2 \u0393, A\n\nexch\n\n\u22a2 \u0393, A, B, \u2206\n\u22a2 \u0393, B, A, \u2206\n\n\u22a2 B, \u2206\n\n\u22a2 \u0393, A \u000f B, \u2206\n\nO\n\ncut\n\n\u22a2 \u0393, A\n\n\u22a2 \u0393, A, B, \u2206\n\u22a2 \u0393, A O B, \u2206\n\u22a2 A\u22a5 , \u2206\n\n(1)\n\n\u22a2 \u0393, \u2206\n\nNote that the sequent calculus needs (apart from the concept of formula) another kind of syntactic entity, called\nsequent. Very often these are just sets or multisets of formulas. But depending on the logic in question, sequents\ncan be more sophisticated structures like lists or partial orders (or whatever) of formulas. For us, throughout\nthese lecture notes, sequents will be finite lists of formulas, separated by a comma, and written with a \u22a2 at\nthe beginning. Usually they are denoted by \u0393 or \u2206.\n2.1.1\n\nExample If A and B are two different formulas, then\n\u22a2 A, B\n\n\u22a2 A, B, A\n\n\u22a2 A, A, B\n\nare three different sequents.\nWe say a sequent \u22a2 \u0393 is derivable (or provable) if there is a derivation (or proof tree) with \u22a2 \u0393 as conclusion.\nDefining this formally precise tends to be messy. Since the basic concept should be familiar for the reader, we\ncontent ourselves here by giving some examples.\n3 One\n\ncould even say the best developed theory of proof nets among all logics that are out there...\nbe precise, one should say axioms and inference rules. But we consider here axioms as special kinds of inference rules,\nnamely, those without premises.\n4 To\n\nRR n\u00b0 6013\n\n\f6\n\nLutz Strassburger\n\nExample The two sequents \u22a2 a\u22a5 , a \u000f b\u22a5 , b \u000f c\u22a5 , c and \u22a2 ((a O a\u22a5 ) \u000f b) O b\u22a5 are provable:\n\n2.1.2\n\nid\nid\nid\n\u000f\n\n\u22a2 b\u22a5 , b\n\n\u000f\n\n\u22a5\n\n\u22a2 a ,a\n\nid\n\n\u22a5\n\nO\n\n\u22a2 c\u22a5 , c\n\n\u000f\n\n\u22a5\n\n\u22a2 b ,b\u000fc ,c\n\n\u22a5\n\n\u22a5\n\nO\n\n\u22a5\n\n\u22a2 a ,a\u000fb ,b\u000fc ,c\n\n\u22a2 a\u22a5 , a\n\nid\n\n\u22a2 a O a\u22a5\n\n\u22a2 b\u22a5 , b\n\n\u22a5\n\n\u22a2 (a O a ) \u000f b, b\n\n(2)\n\n\u22a5\n\n\u22a2 ((a O a\u22a5 ) \u000f b) O b\u22a5\n\nOf course it can happen that a sequent or a formula has more than one proof. This is where things get interesting. At least for these course notes. Here are four different proofs of the sequent \u22a2 a\u22a5 O(a \u000f a), a O(a\u22a5 \u000f a\u22a5 ) ,\nthree of them do not contain the cut-rule:\nid\n\u000f\n\nid\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a, a\u22a5\n\n\u22a2 a\u22a5 , a \u000f a, a\u22a5\n\nO\n\u000f\n\n\u22a5\n\nexch\nO\n\n\u22a5\n\n\u22a2 a\u22a5 O(a \u000f a), a O(a\u22a5 \u000f a\u22a5 )\n\n\u22a2 a\u22a5 , a\n\nO\n\n\u22a2 a, a\u22a5\n\nexch\n\n\u22a2 a, a, a\u22a5 \u000f a\u22a5\n\n(4)\n\n\u22a2 a, a O(a\u22a5 \u000f a\u22a5 )\n\nid\n\n\u22a2 a\u22a5 , a\n\nexch\n\nO\n\n\u22a2 a, a\u22a5 \u000f a\u22a5 , a\n\n\u22a2 a\u22a5 O(a \u000f a), a O(a\u22a5 \u000f a\u22a5 )\n\n\u000f\n\n\u000f\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a\u22a5 , a \u000f a, a O(a\u22a5 \u000f a\u22a5 )\n\nid\n\nid\n\nid\n\n\u22a2 a, a\u22a5\n\nexch\n\nO\n\n(3)\n\n\u22a5\n\n\u22a2 a\u22a5 O(a \u000f a), a, a\u22a5 \u000f a\u22a5\n\n\u000f\n\n\u000f\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a O(a \u000f a), a \u000f a , a\n\nid\n\nid\n\nid\n\n\u22a2 a\u22a5 O(a \u000f a), a\u22a5\n\nO\n\n\u22a2 a, a\u22a5\n\n\u22a2 a\u22a5 , a \u000f a, a\u22a5\n\u22a2 a\u22a5 , a\u22a5 , a \u000f a\n\n(5)\n\n\u22a2 a\u22a5 , a\u22a5 O(a \u000f a)\n\n\u22a2 a, a\u22a5 \u000f a\u22a5 , a\u22a5 O(a \u000f a)\n\u22a2 a O(a\u22a5 \u000f a\u22a5 ), a\u22a5 O(a \u000f a)\n\u22a2 a\u22a5 O(a \u000f a), a O(a\u22a5 \u000f a\u22a5 )\n\nand one does contain the cut-rule:\nid\n\u000f\nid\nid\ncut\nid\n\u000f\n\n\u22a5\n\n\u22a5\n\n\u22a5\n\n\u22a2 a O(a \u000f a), (a O a ) \u000f a\n\nexch\ncut\n\n\u22a5\n\n\u22a5\n\n\u22a5\n\nid\n\n\u22a5\n\n\u22a2 a ,a\n\u22a5\n\n\u22a2 a O(a \u000f a), ((a O a ) \u000f a) \u000f a , a\n\u22a2 a\u22a5 O(a \u000f a), a, ((a\u22a5 O a\u22a5 ) \u000f a) \u000f a\u22a5\nO\n\n\u22a2 a\u22a5 , a\n\n\u000f\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a, a\u22a5\n\nexch\n\n\u22a2 a, a, a\u22a5 \u000f a\u22a5\n\n\u22a2 a\u22a5 , a \u000f a, a, a\u22a5 \u000f a\u22a5\n\nexch\nO\n\n\u22a2 a , a \u000f a, a, a\u22a5 \u000f a\u22a5\n\u22a5\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a, a\u22a5 \u000f a\u22a5 , a\n\n\u22a5\n\nO\n\nid\n\n\u22a5\n\n(6)\n\u22a5\n\n\u22a2 a O(a \u000f a), a, a \u000f a\n\n\u22a2 a, a\u22a5 O(a \u000f a), a\u22a5 \u000f a\u22a5\n\n\u22a2 a O(a\u22a5 O(a \u000f a)), a\u22a5 \u000f a\u22a5\n\n\u22a2 a\u22a5 O(a \u000f a), a, a\u22a5 \u000f a\u22a5\n\u22a2 a\u22a5 O(a \u000f a), a O(a\u22a5 \u000f a\u22a5 )\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n7\n\nAre these proofs really different? Or are they just different ways of writing down the same proof, i.e., they only\nseem different because of the syntactic bureaucracy that the sequent calculus forces upon us? In the following,\nwe will try to give a sensible answer to this question, and proof nets are a way to do so.\n2.1.3\n\nExercise\n\nGive at least two more sequent calculus proofs for the sequent\n\u22a2 a\u22a5 O(a \u000f a), a O(a\u22a5 \u000f a\u22a5 )\n\n2.2\n\n.\n\nFrom sequent calculus to proof nets, 1st way (sequent calculus rule based)\n\nAlthough, morally, the concept of proof net should stand independently from any deductive formalism, the\nproof nets introduced by Girard very much depend on the sequent calculus. The ideology is the following:\n2.2.1 Ideology A proof net is a graph in which every vertex represents an inference rule application in the\ncorresponding sequent calculus proof, and every edge of the graph stands for a formula appearing in the proof.\nA sequent calculus proof with conclusion \u22a2 A1 , A2 , . . . , An , written as\n??\n\u007f\n??\n\u007f\u007f\n?? \u03a0\n\u007f\n??\n\u007f\u007f\n?? \u007f\u007f\u007f\n?\u007f\u007f\n\u22a2 A1 , A2 , . . . , An\nis translated into a proof net with conclusions A1 , A2 , . . . , An , written as\n\u03c0\nA1\n\nA3\n\n...\n\nAn\n\nThis is done inductively, rule instance by rule instance, as shown in Figure 1. Note that the exch-rule does\nnot exactly follow the ideology.\nLet us see, what happens if we apply this translation to our four different proofs (3)\u2013(6): The first two, i.e.,\n(3) and (4), both yield the same proof net, namely\nid\n\nid\na\n\nid\n\na\na\u22a5\n\na\u22a5\na\u22a5\n\n\u000f\na\u000fa\n\nRR n\u00b0 6013\n\na\n\n\u000f\na\u22a5 \u000f a\u22a5\n\nO\n\nO\n\na\u22a5 O(a \u000f a)\n\na O(a\u22a5 \u000f a\u22a5 )\n\n(7)\n\n\f8\n\nLutz Strassburger\n\nid\nid\n\nexch\n\n\u2740\n\n\u22a2 A\u22a5 , A\n\nA\u22a5\n\nA\n\n\u03c0\n\n??\n?? \u03a0 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A, B, \u2206\n\n\u2740\n\u0393\n\nB A \u2206\n\n\u22a2 \u0393, B, A, \u2206\n\u03c0\n\nO\n\n??\n?? \u03a0 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A, B, \u2206\n\nA\n\n\u2740\n\nB\n\nO\n\n\u22a2 \u0393, A O B, \u2206\n\n\u0393\n\n\u03c01\n\n\u000f\n\n??\n?\n??\u03a01 \u007f\u007f\u007f ???\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n\u007f\n\u007f\n\u22a2 \u0393, A\n\u22a2 B, \u2206\n\n\u2206\n\nAOB\n\n\u03c02\nA\n\n\u2740\n\nB\n\n\u000f\n\n\u22a2 \u0393, A \u000f B, \u2206\n\n\u0393\n\n\u2206\n\nA\u000fB\n\n\u03c01\n\ncut\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A\u22a5 , \u2206\n\n\u03c02\nA\u22a5\n\nA\n\n\u2740\n\ncut\n\n\u0393\n\n\u2206\n\n\u22a2 \u0393, \u2206\n\nFigure 1: From sequent calculus to proof nets (sequent calculus rule driven)\n\nThe proof in (5) yields a different proof net:\nid\na\n\nid\n\na\u22a5\n\nid\na\n\na\u22a5\n\n\u000f\n\na\u22a5\na\n\n\u000f\n\n(8)\n\na\u22a5 \u000f a\u22a5\n\na\u000fa\n\nO\n\nO\n\na\u22a5 O(a \u000f a)\n\na O(a\u22a5 \u000f a\u22a5 )\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n9\n\nAnd for the proof in (6), we get\n\nid\n\nid\n\nid\n\nid\n\nid\na\n\n(a\u22a5\n\nO a\u22a5 ) \u000f a\n\na\u22a5\n\na\u22a5\n\nid\n\ncut\na\u22a5\n\n\u000f\n\na\n\na\n\n\u000f\n\na\u22a5\n\na\u22a5\n\n\u000f\n\na\u000fa\n\nO\na\n\n(9)\n\na\u22a5 O(a \u000f a)\n\na\u22a5\n\na\u22a5 \u000f a\u22a5\n\nO\na O(a\u22a5 O(a \u000f a))\n\n((a\u22a5 O a\u22a5 ) \u000f a) \u000f a\u22a5\n\ncut\na\u22a5 O(a \u000f a)\n\nO\na O(a\u22a5 \u000f a\u22a5 )\n\nThe proof nets for (3) and (4) are the same, and the ones for (5) and (6) are different. The big question is\nnow:\n2.2.2 Big Question: Is it reasonable to conclude that the two proofs in (3) and (4) are the same, while the\none in (5) is different, and the one in (6) is even more different?\nFor finding an answer, consider the following two (partial) sequent calculus proofs.\n\n\u000f\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A\n\nO\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 B, \u2206, C, D, \u03a3\n\n\u22a2 \u0393, A \u000f B, \u2206, C, D, \u03a3\n\u22a2 \u0393, A \u000f B, \u2206, C O D, \u03a3\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 B, \u2206, C, D, \u03a3\n\nvs.\n\u000f\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\nO\n\u22a2 B, \u2206, C O D, \u03a3\n\u22a2 \u0393, A\n\n(10)\n\n\u22a2 \u0393, A \u000f B, \u2206, C O D, \u03a3\n\nIt is certainly reasonable to say that the two proofs in (10) are essentially the same-whether we apply first the\n\u000f-rule or first the O-rule does not matter in this situation.\nThe phenomenon shown in (10) is called a trivial rule permutation. There are clearly more of them, and we\nwill not give a complete list here. The point to note here is that these trivial rule permutation are a type of\nbureaucracy, which is typical for the sequent calculus, and which was one of Girard's original motivations for\nthe introduction of proof nets. In fact, there is the following theorem:\n2.2.3 Theorem Two sequent calculus proofs using the rules in (1) translate into the same proof net if and\nonly if they can be transformed into each other via trivial rule permutations.\nWe will not give a proof here because it won't give any new insights. But to illustrate the main point,\nconsider the following three derivations\n??\n?? \u007f\u007f\u007f\n??\n??\n?? \u007f\u007f\n?? \u007f\u007f\u007f\n?? \u007f\u007f\u007f\n\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n\u007f\n\u007f\n\u22a2 B, C, B\n\u22a2 B, C, B\n\u22a2 B, C, B\nexch\n\u22a2 B, B, C\nO\nexch\nexch\n\u22a2 B O C, B\n\u22a2 B, B, C\n\u22a2 B, B, C\nexch\nO\n\u22a2 B, B O C\n\u22a2 B, B O C\nO\n\u22a2 B, B O C\nRR n\u00b0 6013\n\n\f10\n\nLutz Strassburger\n\nwhere B and C are arbitrary formulae, and the second instance of exch in the rightmost derivation exchanges\nthe two occurrences of B. Note that the leftmost and the middle derivation both consist of one instance of the\nO-rule and one instance of exch, but are not a trivial rule permutation. When we \"trivialy\" permute the O-rule\nand the exch-rule in the leftmost example, then we obtain the rightmost derivation, which contains one O-rule\nand two exchanges.\nNow the reader is invited to do the following exercise:\n2.2.4 Exercise Find a sequence of trivial rule permutations that transforms the proof in (3) into the one\nin (4). Convince yourselves that it is impossible to find a series of rule permutations that converts the proof in\n(4) into the one in (5).\n2.2.5\n\nExercise\n\nGive the proof nets for the two sequent proofs in (2).\n\n2.2.6 Exercise Give the proof nets for the sequent proofs that you found in Exercise 2.1.3, and compare\nthem with (7), (8), and (9).\n\n2.3\n\nFrom sequent calculus to proof nets, 2nd way (coherence graph based)\n\nLet us now discuss a second method for obtaining a proof net from a sequent calculus proof. Here the ideology\nis:\n2.3.1 Ideology A proof net consists of the formula tree/sequent forest of the conclusion of the proof, together\nwith some additional graph structure capturing the \"essence\" of the proof.\nIt turns out that for MLL\u2212 the \"essence\" of a proof is captured by the axiom links. More precisely, the proof\nnet is obtained by drawing the \"flow-graph\" (or \"coherence-graph\") through the sequent calculus proof. This\nmeans that we trace all atom occurrences through the proof. The idea is quite simple, but again, the formal\ndefinitions tend to be messy. For these lecture notes, I decided not to give the detailed definitions but to show\nthe idea via examples. Figure 2 shows how it is done for the examples (3),(4), and (5).\n2.3.2 Trivial Observation The flow-graphs drawn inside the proofs have crossings exactly at those places\nwhere the exchange rule is applied.\nNote that if the id-rule is applied only to atoms, and there is no cut-rule present, then we get (up to some\ntrivial change of notation) exactly the same proof nets as with the first method. The reason is that in MLL\u2212\nthere is a one-to-one correspondence between the binary connectives O and \u000f appearing in the sequent and\nthe instances of the inference rules for O and \u000f appearing in the proof. Further, every atom occurrence in the\nsequent is killed by an instance of the id-rule.\n2.3.3 Exercise Convince yourselves that indeed the two methods always yield the same result for cut-free\nproofs with only atomic instances of identity. Draw the flow graphs for the examples in (2) and the sequent\ncalculus proofs that you found in Exercise 2.1.3.\nIn Figure 3 we convert the example in (6) into a proof net via the flow-graph method. Note that this time\nthe result is different from the proof net in (9). There are two reasons. First, the non-atomic instance of the\nid-rule, and second, the presence of the cut-rule.\nThe non-atomic identity rule is not a problem because an important fact about the sequent calculus system\nin (1) is that the id-rule can be replaced by its atomic version without changing derivability:\nid\n\n\u22a2 A\u22a5 , A\n\n\u2740\n\natomic id\n\n\u22a2 a\u22a5 , a\n\nThis is done inductively by systematically replacing\nid\n\u000f\nid\n\n\u22a5\n\n\u22a5\n\n\u22a2 A OB ,B \u000fA\n\nby\n\n\u22a2 B\u22a5, B\n\nexch\nexch\nO\n\nid\n\n\u22a2 A, A\u22a5\n\n\u22a2 B \u22a5 , B \u000f A, A\u22a5\n\u22a2 B \u22a5 , A\u22a5 , B \u000f A\n\n(11)\n\n\u22a2 A\u22a5 , B \u22a5 , B \u000f A\n\u22a2 A\u22a5 O B \u22a5 , B \u000f A\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n11\n\nid\nid\n\u000f\n\nid\n\n\u22a2 a\u22a5 , a\n\nid\n\n\u22a2 a, a\u22a5\n\n\u22a2\n\n\u000f\n\na\u22a5\n\nexch\nO\n\nid\n\nO(a \u000f a), a\u22a5\na\u22a5\n\n\u22a2\n\n\u22a2 a, a\u22a5\n\n\u000f\n\n\u22a2 a\u22a5 , a \u000f a, a\u22a5\n\nO\n\nO(a \u000f a), a\u22a5\n\n\u22a2\n\na\u22a5 , a\n\n\u000f a\u22a5 , a\n\n\u000f\n\n\u22a2 a\u22a5 O(a \u000f a), a, a\u22a5 \u000f a\u22a5\n\n\u22a2\nO\n\n\u22a2 a\u22a5 O(a \u000f a), a O(a\u22a5 \u000f a\u22a5 )\n\nO\n\na\u22a5 , a\n\n\u22a2\n\n\u22a2\n\na, a, a\u22a5\n\n\u000f a\u22a5\n\na, a O(a\u22a5\n\n\u000f a\u22a5 )\n\n\u22a2 a\u22a5 , a \u000f a, a O(a\u22a5 \u000f a\u22a5 )\n\u22a2 a\u22a5 O(a \u000f a), a O(a\u22a5 \u000f a\u22a5 )\n\n\u2193\n\n\u000f\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a, a\u22a5 \u000f a\u22a5 , a\n\nexch\nid\n\nid\n\nexch\nid\n\u000f\n\n\u22a2\nO\n\nexch\n\nO\n\na, a\u22a5\n\u22a2\n\na, a\u22a5\n\na\u22a5 , a\n\n\u22a2\n\n\u000f\n\nid\n\n\u22a2\n\na,, a\u22a5\n\n\u000f\n\n\u22a2 a\u22a5 , a \u000f a,, a\u22a5\n\nO\n\n\u22a2\n\n\u000f\n\na\u22a5\n\nO\n\na\u22a5\n\n\u22a2\n\nexch\n\nid\n\nO( \u000f a),\nO(a\n), a\u22a5\nO( \u000f a),\nO(a\n), a\u22a5\n\n\u22a2\n\na\u22a5 , a\n\n\u000f a\u22a5 , a\n\nid\n\u000f\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a,, a\u22a5 \u000f a\u22a5\n\n\u22a2\nO\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a O(a\nO( \u22a5 \u000f a\u22a5 )\n\nO\n\na\u22a5 , a\n\nid\n\n\u22a2\n\n\u22a2\n\n\u22a2\n\na,, a,, a\u22a5\n\n\u000f a\u22a5\n\na,, a O(\nO(a\u22a5\n\n\u000f a\u22a5 )\n\n\u22a2 a\u22a5 , a \u000f a,, a O(\nO(a\u22a5 \u000f a\u22a5 )\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a O(a\nO( \u22a5 \u000f a\u22a5 )\n\n\u2193\n\n\u22a2 a\u22a5 O(a \u000f a), a O(a\u22a5 \u000f a\u22a5 )\n\n\u000f\n\n\u000f\n\n\u22a2\n\na\u22a5 , a\n\nid\n\n\u22a2\n\nid\n\u000f\n\n\u22a2\nO\n\nexch\n\nO\n\na,, a\u22a5\n\u22a2\n\na,, a\u22a5\n\nid\n\na,, a\u22a5\n\n\u000f\n\n\u22a2\n\n\u000f\n\na\u22a5\n\nexch\nO\n\nid\n\nO( \u000f a),\nO(a\n), a\u22a5\n\n\u22a2\n\na\u22a5 , a\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a\u22a5 \u000f a\u22a5 , a\n\nexch\nid\n\u000f\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a,, a\u22a5 \u000f a\u22a5\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a O(a\nO( \u22a5 \u000f a\u22a5 )\n\nO\n\n\u22a2 a\u22a5 , a\nO\n\na\n\na\n\na\u22a5\n\n\u000f\nO\n\n\u22a2 a\u22a5 , a\u22a5 O(\nO(a \u000f a))\n\na\u22a5\n\n\u22a2\n\na,, a,, a\u22a5\n\n\u000f a\u22a5\n\n\u22a2 a,, a O(\nO(a\u22a5 \u000f a\u22a5 )\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\u22a5\n\na\n\n\u000f\nO\n\na\n\n\u000f\n\n\u22a2 a\u22a5 , a\n\nexch\nid\n\u000f\n\n\u22a2\nO\n\nexch\n\nO\n\na,, a\u22a5\n\n\u22a2\n\nid\n\n\u22a2 a,, a\u22a5\n\na\u22a5 , a \u000f a,, a\u22a5\n\n\u22a2 a\u22a5 , a\u22a5 , a \u000f a\n\n\u22a2 a\u22a5 , a\u22a5 O(a\nO( \u000f a))\n\n\u22a2 a,, a\u22a5 \u000f a\u22a5 , a\u22a5 O(a\nO( \u000f a))\n\u22a2 a O(\nO(a\u22a5 \u000f a\u22a5 ), a\u22a5 O(\nO(a \u000f a))\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a O(a\nO( \u22a5 \u000f a\u22a5 )\n\u2193\n\na\u22a5\n\na\n\n\u000f\nO\n\nO(a\nO( \u000f a))\n\n\u22a2 a\u22a5 O(\nO(a \u000f a),\n), a O(a\nO( \u22a5 \u000f a\u22a5 )\n\n\u2193\n\na\n\n\u22a2 a\u22a5 , a\u22a5 , a \u000f a\n\n\u22a2 a O(\nO(a\u22a5 \u000f a\u22a5 ), a\u22a5 O(\nO(a \u000f a))\n\na\u22a5 , a\n\n\u22a2 a\u22a5 , a \u000f a,, a O(\nO(a\u22a5 \u000f a\u22a5 )\n\n\u2193\n\na\u22a5\n\nid\n\n\u22a2 a,, a\u22a5 \u000f a\u22a5 , a\n\u22a2\n\n\u22a2 a,, a\u22a5\n\n\u2193\n\na,, a\u22a5\n\n\u22a2\n\n\u22a2\n\nid\n\na\u22a5 , a \u000f a,, a\u22a5\n\n\u000f a\u22a5 , a\u22a5\n\n\u2193\n\n\u22a2 a\u22a5 , a \u000f a,, a\u22a5\n\nO\n\n\u22a2 a\u22a5 , a\n\nexch\n\nid\nid\n\nO(a \u000f a)\n\n\u22a2 a O(a\u22a5 \u000f a\u22a5 ), a\u22a5 O(a \u000f a)\n\na\u22a5 , a\n\n\u22a2 a,, a\u22a5 \u000f a\u22a5 , a\n\nexch\n\n\u22a2 a\u22a5 , a\u22a5 , a \u000f a\n\n\u2193\n\na,, a\u22a5\n\n\u22a2\n\n\u22a2 a, a\u22a5\n\n\u22a2 a\u22a5 , a\u22a5 O(a \u000f a)\n\n\u2193\n\nid\n\nid\n\n\u22a2 a\u22a5 , a \u000f a, a\u22a5\n\n\u000f a\u22a5 , a\u22a5\n\nid\nid\n\n\u22a2 a\u22a5 , a\n\na\u22a5\n\na\u22a5\n\na\n\n\u000f\nO\n\na\n\na\u22a5\n\na\n\n\u000f\nO\n\na\u22a5\n\u000f\n\nO\n\nFigure 2: From sequent calculus to proof nets via coherence graphs\n\n2.3.4 Exercise Reduce in (6) the leftmost instance of id to atomic version. And draw the proof net according\nto the method in Figure 1. What does change compared to the net in (9)?\nFor dealing with cuts (without forgetting them!), we can prevent the flow-graph from flowing through the\ncut, i.e., by keeping the information that there is a cut. What is meant by this is shown in Figure 4.\n2.3.5\n\nExercise\n\nCompare the net obtained in Figure 4 with your result of Exercise 2.3.4.\n\nNow, we indeed get the same result with both methods, and it might seem foolish to emphasize the different\nnature of the two methods if they yield the same notion of proof net. The point to make here is that this is\nthe case only for MLL\u2212 , which is a very fortunate coincidence. For any other logic, which is more sophisticated,\nlike classical logic or larger fragments of linear logic, the two methods yield different notions of proof nets. We\nwill come back to this in later sections when we discuss these logics.\n\n2.4\n\nFrom deep inference to proof nets\n\nThe flow graph method has the advantage of being independent from the formalism that is used for describing\nthe deductive system for the logic. We will now repeat exactly the same exercise we did for the sequent calculus\nRR n\u00b0 6013\n\n\f12\n\nLutz Strassburger\n\nid\n\u000f\nid\nid\ncut\nid\n\u000f\n\n\u22a2\n\nexch\ncut\n\na\u22a5\n\nO(a \u000f a), (a\u22a5\n\n\u22a2\n\na\u22a5\n\nO(a \u000f a), ((a\u22a5\n\n\u22a2\n\na\u22a5\n\nO(a \u000f a), a, ((a\u22a5\nO\n\n\u22a2\n\nid\n\nO a\u22a5 ) \u000f a\n\na\u22a5\n\n\u22a2\n\n\u22a2 a\u22a5 , a\nO\n\na\u22a5 , a\n\nO\n\nO a\u22a5 ) \u000f a) \u000f a\u22a5\n\nO(a \u000f a), a\n\u22a2\n\n\u22a2\n\n\u22a2 a, a, a\u22a5 \u000f a\u22a5\n\n\u22a2 a, a\u22a5 O(a \u000f a), a\u22a5 \u000f a\u22a5\n\n\u22a2 a O(a\u22a5 O(a \u000f a)), a\u22a5 \u000f a\u22a5\na\u22a5 \u000f a\u22a5\n\nO(a \u000f a), a O(a\u22a5\n\n\u000f a\u22a5 )\n\n\u2193\n\nid\n\u000f\nid\nid\ncut\n\nid\n\u000f\n\n\u22a2\n\nexch\ncut\n\na\u22a5\n\nO( \u000f a),\nO(a\n), (a\n( \u22a5\n\nO a\u22a5 ) \u000f a\n\n\u22a2\n\na\u22a5\n\nO(\nO(a \u000f a),\n), ((a\n(( \u22a5\n\n\u22a2\n\na\u22a5\n\nO(\nO(a \u000f a),\n), a,, ((a\n(( \u22a5\nO\n\n\u22a2\n\nid\n\na\u22a5\n\n\u22a2\n\nO\n\na\u22a5 , a\n\n\u22a2 a\u22a5\n\nexch\n\nO a\u22a5 ) \u000f a)) \u000f a\u22a5 , a\n\nO\n\nO a\u22a5 ) \u000f a)) \u000f a\u22a5\n\nO( \u000f a),\nO(a\n), a\n\n\u000f\n\n\u22a2 a\u22a5 , a\n\u22a2\n\n\u22a2 a\u22a5 , a\n,\n\na\u22a5\n\nexch\n\nO( \u000f a),\nO(a\n), a,, a\u22a5 \u000f a\u22a5\n\na\u22a5 \u000f a\u22a5\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a O(a\nO( \u22a5 \u000f a\u22a5 )\nid\n\ncut\nid\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), (a\n( \u22a5 O a\u22a5 ) \u000f a\n\ncut\n\n\u22a2\n\nO( \u000f a),\nO(a\n), a,, ((a\n(( \u22a5\nO\n\n\u22a2\n\na\u22a5\n\nO\n\nO a\u22a5 ) \u000f a)) \u000f a\u22a5\n\u22a2\n\n\u22a2 a\u22a5\n\nexch\n\nO( \u000f a),\nO(a\n), a\n\n\u000f\n\na\u22a5 , a\nO\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), ((a\n(( \u22a5 O a\u22a5 ) \u000f a)) \u000f a\u22a5 , a\n\u22a2\n\n\u22a2 a,, a,, a\u22a5 \u000f a\u22a5\n\n\u22a2 a O(\nO(a\u22a5 O(\nO(a \u000f a)),\n)), a\u22a5 \u000f a\u22a5\n\n,\n\nid\n\na\u22a5\n\n\u22a2 a,, a\u22a5 \u000f a\u22a5 , a\n\n\u22a2 a,, a\u22a5 O(a\nO( \u000f a),\n), a\u22a5 \u000f a\u22a5\n\nid\n\n\u000f\n\n\u22a2 a\u22a5 , a\n\na \u000f a,, a,, a\u22a5 \u000f a\u22a5\n\n\u000f\n\nexch\n\nid\n\n\u22a2 a,, a\u22a5\n\n\u22a2 a\u22a5 , a \u000f a,, a,, a\u22a5 \u000f a\u22a5\n\n\u2193\n\nid\n\n\u000f a\u22a5 , a\n\nO(a \u000f a), a, a\u22a5 \u000f a\u22a5\n\n,\na\u22a5\n\n\u22a2 a\u22a5 , a\n\na \u000f a, a, a\u22a5 \u000f a\u22a5\n\n,\n\na\u22a5\n\na, a\u22a5\n\n\u22a2 a\u22a5 , a \u000f a, a, a\u22a5 \u000f a\u22a5\n\n\u22a2 a\u22a5\n\nexch\n\nO a\u22a5 ) \u000f a) \u000f a\u22a5 , a\n\n\u22a2\n\n\u000f\n\n\u22a2\n\nexch\n\na\u22a5 , a\n\nid\n\n\u22a2 a, a\u22a5\n\n\u22a2\n,\n\nexch\n\n\u22a2\n\na,, a\u22a5\n\n\u22a2 a\u22a5 , a\n\n\u000f a\u22a5 , a\n\n\u22a2 a,, a,, a\u22a5 \u000f a\u22a5\n\na\u22a5 , a \u000f a,, a,, a\u22a5\n\n\u000f a\u22a5\n\na \u000f a,, a,, a\u22a5 \u000f a\u22a5\n\n\u22a2 a\u22a5 O(\nO(a \u000f a),\n), a,, a\u22a5 \u000f a\u22a5\n\u22a2 a,, a\u22a5 O(a\nO( \u000f a),\n), a\u22a5 \u000f a\u22a5\n\n\u22a2 a O(\nO(a\u22a5 O(\nO(a \u000f a)),\n)), a\u22a5 \u000f a\u22a5\na\u22a5 \u000f a\u22a5\n\n,\na\u22a5\n\n\u22a2\n\na\u22a5 , a\n\nid\n\n\u22a2 a,, a\u22a5\n\nO(\nO(a \u000f a),\n), a O(a\nO( \u22a5\n\n\u000f a\u22a5 )\n\n\u2193\n\na\u22a5\n\na\n\na\n\na\u22a5\n\na\n\n\u000f\nO\n\na\u22a5\n\u000f\n\nO\n\nFigure 3: From sequent calculus to proof nets via coherence graphs\n\nsystem for MLL\u2212 in the previous section. But this time we start from a different deductive system for MLL\u2212 ,\nwhich is given in the formalism of calculus of structures. It is shown in Figure 5, where S{ } stands for an\narbitrary (positive) formula context. Because of the possibility of applying inference rules deep inside any\ncontext, the name \"deep inference\" is used.\nBecause of this possibility and because we do not have units in the system, we need two variants of the\ni\u2193-rule (doing the same job as the id-rule in the sequent calculus). Similarly, the cut, i.e., the rule i\u2191 comes\nin two versions. This also means, that in principle a derivation could have nothing as conclusion. Then we\ndo not have a proof, but a refutation. This leads to an important property of the system in Figure 5, namely\nits up-down symmetry. For every rule there is a dual co-rule, which is obtained by negating and exchanging\npremise and conclusion. This flipping around can then be done also for whole derivations. A derivation from A\nto B becomes a derivation from B \u22a5 to A\u22a5 , and a proof of a formula A becomes a refutation of A\u22a5 .\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n13\n\nid\n\u000f\nid\nid\ncut\nid\n\u000f\n\nid\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), (a\n( \u22a5 O a\u22a5 ) \u000f a\n\nexch\ncut\n\n\u22a2\n\n\u22a2\n\nO(\nO(a \u000f a),\n), a,, ((a\n(( \u22a5\n\nexch\nO\n\nO a\u22a5 ) \u000f a)) \u000f a\u22a5\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a\n\nO\n\n\u22a2\n\nO\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a\u22a5 O(\nO(a \u000f a),\n), ((a\n(( \u22a5 O a\u22a5 ) \u000f a)) \u000f a\u22a5 , a\na\u22a5\n\na\u22a5 , a\n\nexch\n\n\u22a2 a\u22a5 , a\n\n\u000f\n\n\u22a2\n\na\u22a5\n\na \u000f a,, a,, a\u22a5\n\n,\n\n\u22a2 a O(\nO(a\u22a5 O(\nO(a \u000f a)),\n)), a\u22a5 \u000f a\u22a5\na\u22a5 \u000f a\u22a5\n\n,\n\nid\n\ncut\nid\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), (a\n( \u22a5 O a\u22a5 ) \u000f a\n\ncut\n\n\u22a2\n\nO( \u000f a),\nO(a\n), a,, ((a\n(( \u22a5\n\u22a2\n\nO\n\na\u22a5\n\n\u22a2\n\nexch\nO\n\nO a\u22a5 ) \u000f a)) \u000f a\u22a5\n\nO( \u000f a),\nO(a\n), a\n\n\u22a2\n\na\u22a5\n\n\u22a2 a,, a\u22a5\n\nexch\n\n\u22a2 a\u22a5 , a\n\n\u000f\n\na\u22a5 , a\nO\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), ((a\n(( \u22a5 O a\u22a5 ) \u000f a)) \u000f a\u22a5 , a\n\u22a2\n\n\u000f a\u22a5\n\n\u000f a\u22a5\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a O(a\nO( \u22a5 \u000f a\u22a5 )\n\nid\n\na\u22a5\n\n\u22a2 a,, a,, a\u22a5 \u000f a\u22a5\n\n\u22a2 a,, a\u22a5 O(a\nO( \u000f a),\n), a\u22a5 \u000f a\u22a5\n\nid\n\n\u000f\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a\u22a5 O(a\nO( \u000f a),\n), a,, a\u22a5 \u000f a\u22a5\n\n\u000f\n\nexch\n\nid\n\n\u22a2 a,, a\u22a5 \u000f a\u22a5 , a\n\na\u22a5 , a \u000f a,, a,, a\u22a5\n\n\u2193\n\nid\n\n\u22a2 a,, a\u22a5\n\n,\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a,, a\u22a5 \u000f a\u22a5 , a\n\u22a2 a,, a,, a\u22a5 \u000f a\u22a5\n\na\u22a5 , a \u000f a,, a,, a\u22a5\n\na \u000f a,, a,, a\u22a5\n\nid\n\n\u000f a\u22a5\n\n\u000f a\u22a5\n\n\u22a2 a\u22a5 O(\nO(a \u000f a),\n), a,, a\u22a5 \u000f a\u22a5\n\u22a2 a,, a\u22a5 O(a\nO( \u000f a),\n), a\u22a5 \u000f a\u22a5\n\n\u22a2 a O(\nO(a\u22a5 O(a\nO( \u000f a)),\n)), a\u22a5 \u000f a\u22a5\na\u22a5 \u000f a\u22a5\n\n,\n\n\u22a2 a\u22a5 O(\nO(a \u000f a),\n), a O(a\nO( \u22a5 \u000f a\u22a5 )\n\u2193\n\na\u22a5\n\na\n\na\n\na\n\na\u22a5\n\n\u000f\n\na\u22a5\n\na a\u22a5 a a\u22a5 a\n\na\u22a5 a\n\nO\n\nO\n\na\u22a5\n\na\n\u000f\n\n\u000f\n\na\u22a5\n\u000f\n\nO\n\u000f\n\nO\n\nO\n\nFigure 4: From sequent calculus to proof nets with cuts via coherence graphs\n\nThe s-rule (called switch) is dual to itself. With the help of commutativity and associativity, i.e., the rule\n\u03c3\u2193, \u03c3\u2191, \u03b1\u2193, and \u03b1\u2191 we can obtain the following variants that we also call switch:\ns\n\nS{(A O B) \u000f C}\n\ns\n\nS{A O(B \u000f C)}\n\nS{B \u000f(A O C)}\n\ns\n\nS{A O(B \u000f C)}\n\nS{(A O C) \u000f B}\nS{(A \u000f B) O C}\n\n(12)\n\nSimilarly, with the help of \u03c3\u2193 and \u03c3\u2191, we can get two other versions if i\u2193 and i\u2191:\ni\u2193\n\nS{B}\n\nand\n\nS{B \u000f(A\u22a5 O A)}\n\ni\u2191\n\nS{(A \u000f A\u22a5 ) O B}\n\n(13)\n\nS{B}\n\nHere are three examples of derivations in the calculus of structures:\ns\ni\u2193\ni\u2193\n\nRR n\u00b0 6013\n\nbOb\n\u22a5\n\ni\u2191\n\n\u22a5\n\n((a O a ) \u000f b) O b\n\n\u22a5\n\ni\u2193\ns\n\n(b\u22a5 O c\u22a5 ) \u000f c\nb\u22a5 O(c\u22a5 \u000f c)\nb\n\n\u22a5\n\n\u22a5\n\ni\u2191\n\n\u22a5\n\ni\u2193\n\n\u22a5\n\ns\n\nb \u000f(a O a )\n\u22a5\n\ns\n\na O(b \u000f a )\n\n(a O b) \u000f a\u22a5\n(a \u000f a\u22a5 ) O b\nb\n\u22a5\n\n(c O c) \u000f b\nc\u22a5 O(c \u000f b)\n\n(14)\n\n\f14\n\nLutz Strassburger\n\ni\u2193\n\ni\u2193\n\ni\u2191\n\nA\u22a5 O A\nS{B}\n\ni\u2191\n\nS{(A\u22a5 O A) \u000f B}\n\u03c3\u2193\n\n\u03b1\u2193\n\nS{B O(A \u000f A\u22a5 )}\nS{B}\n\nS{A O B}\n\n\u03c3\u2191\n\nS{B O A}\n\nS{A O(B O C)}\n\ns\n\nS{A \u000f B}\nS{B \u000f A}\n\nS{A \u000f(B \u000f C)}\n\n\u03b1\u2191\n\nS{(A O B) O C}\n\nA \u000f A\u22a5\n\nS{(A \u000f B) \u000f C}\n\nS{A \u000f(B O C)}\nS{(A \u000f B) O C}\n\nFigure 5: A system for MLL\u2212 in the calculus of structures\n\nThe last two are dual to each other.\nIn order to go on, we have to make sure that the deductive system shown in Figure 5 speaks about the same\nlogic, as the one shown in (1). This does the following theorem:\n2.4.1\n\nTheorem\n\nLet A be an MLL\u2212 formula. There is a sequent calculus proof of A, denoted by\n??\n??\n\u007f\u007f\n?? \u03a0\n\u007f\u007f\n\u007f\n??\n\u007f\n?? \u007f\u007f\u007f\n?\u007f\u007f\n\u22a2A\n\nin the system shown in (1), if and only if there is a proof of A in the calculus of structures denoted by\n\u2212\nk \u03a0\u0303\nk\nA\nin the system shown in Figure 5.\nProof: For going from sequent calculus to calculus of structures, we show that every rule in (1) can be simulated\nby the rules in Figure 5. The only interesting cases are \u000f and cut, which are simulated as follows:\n\ns\ns\n\n(\u0393 O A) \u000f(B O \u2206)\n\u0393 O(A \u000f(B O \u2206))\n\u0393 O(A \u000f B) O \u2206\n\ns\nand\n\ns\n\n(\u0393 O A) \u000f(A\u22a5 O \u2206)\n\u0393 O(A \u000f(A\u22a5 O \u2206))\n\ni\u2191\n\n\u0393 O(A \u000f A\u22a5 ) O \u2206\n\u0393O\u2206\n\nFor the rules O and exch it is trivial. Now we can mimic the sequent calculus proof such that different branches\nin the proof tree, say\n\u22a2 \u03931\n\u22a2 \u03932\n...\n\u22a2 \u0393n\nare kept together in a single formula\n\u03931 \u000f \u03932 \u000f * * * \u000f \u0393n\nIn the end, we have for every instance of id in the sequent proof tree and instance of i\u2193 in the calculus of\nstructures proof.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n15\n\nFor the other direction, we first have to show for every rule\nr\n\nS{A}\nS{B}\n\nin Figure 5, the sequent \u22a2 A\u22a5 , B is provable with the rules in (1). Here we do it only for the switch rule:\nid\n\n\u22a2 A\u22a5 , A\n\n\u000f\n\n\u22a2 C, C \u22a5\n\n\u000f\n\nO\nexch\nexch\nO\n\n\u22a2 B, B \u22a5\n\n\u22a5\n\nexch\nid\n\nid\n\nexch\n\n\u22a2 A , A \u000f B, B \u22a5\n\u22a2 A\u22a5 , B \u22a5 , A \u000f B\n\u22a2 B \u22a5 , A\u22a5 , A \u000f B\n\n\u22a2 C, C \u22a5 \u000f B \u22a5 , A\u22a5 , A \u000f B\n\u22a2 C, (C \u22a5 \u000f B \u22a5 ) O A\u22a5 , A \u000f B\n\u22a2 (C \u22a5 \u000f B \u22a5 ) O A\u22a5 , C, A \u000f B\n\u22a2 (C \u22a5 \u000f B \u22a5 ) O A\u22a5 , A \u000f B, C\n\n\u22a2 (C \u22a5 \u000f B \u22a5 ) O A\u22a5 , (A \u000f B) O C\n\nfor the other rules it is similar. Now we show that in fact the sequent \u22a2 S{A}\u22a5 , S{B} (for every positive\ncontext S{ }) can be proved with the rules in (1). This is done by structural induction on S{ }. If S{ } = { },\nwe are done. If S{ } = C \u000f S \u2032 { } for some formula C and some (smaller) context S \u2032 { }, then we have\n\nid\n\u000f\n\n??\n??\u03a0\u2032 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u2032\n\u22a2 S {B}, S \u2032 {A}\u22a5\n\n\u22a2 C\u22a5, C\n\nexch\nexch\nO\n\n\u22a2 C \u22a5 , C \u000f S \u2032 {B}, S \u2032 {A}\u22a5\n\u22a2 C \u22a5 , S \u2032 {A}\u22a5 , C \u000f S \u2032 {B}\n\u22a2 S \u2032 {A}\u22a5 , C \u22a5 , C \u000f S \u2032 {B}\n\u22a2 S \u2032 {A}\u22a5 O C \u22a5 , C \u000f S \u2032 {B}\n\nwhere \u03a0\u2032 exists by induction hypothesis. The other cases, i.e., S{ } = C O S \u2032 { }, S{ } = S \u2032 { } \u000f C, and\nS{ } = S \u2032 { } O C, are similar. Now we are ready to simulate the whole derivation. We proceed by induction\nom the length of \u03a0\u0303 (i.e., the number of rule instances). If the length is 1, then it must be an instance of i\u2193, and\nwe get a sequent calculus proof with id. Now assume the length of \u03a0\u0303 is > 1, i.e., \u03a0\u0303 is of shape\n\nr\nThen we can build\n\ncut\n\n??\n??\u03a0\u2032 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 S{A}\n\n\u2212\nk \u03a0\u0303\u2032\nk\nS{A}\nS{B}\n??\n??\u03a0\u2032\u2032 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 S{A}\u22a5 , S{B}\n\u22a2 S{B}\n\nwhere \u03a0\u2032 exists by induction hypothesis and \u03a0\u2032\u2032 by what has been said above.\n2.4.2\n\nCorollary\n\nLet A1 , A2 , . . . , An be a list of MLL\u2212 formulas. There is a sequent calculus derivation\n??\n\u007f\n??\n\u007f\u007f\n?? \u03a0\n\u007f\n??\n\u007f\u007f\n?? \u007f\u007f\u007f\n?\u007f\u007f\n\u22a2 A1 , A2 , . . . , An\n\nRR n\u00b0 6013\n\n\u2293\n\u2294\n\n\f16\n\nLutz Strassburger\n\nid\nid\ns\nid\ns\n\n((a\u22a5\na\u22a5\n\nid\n\na O a\u22a5\n\nid\n\na O(a\u22a5 \u000f(a O a\u22a5 ))\n\ns\n\na O a O(a\u22a5 \u000f a\u22a5 )\nO a) \u000f a) O a O(a\u22a5\n\nO(a \u000f a) O a O(a\u22a5\n\nid\n\n\u000f a\u22a5 )\n\ns\n\n\u000f a\u22a5 )\n\na\u22a5\n\nid\ns\nid\ns\n\n(( \u22a5\n((a\na\u22a5\n\nid\ns\n\na O a O(a\nO( \u22a5 \u000f a\u22a5 )\n\nO(a\nO( \u000f a)) O a O(a\nO( \u22a5\n\ns\ns\n\n(( \u22a5\n((a\na\u22a5\n\nid\n\n\u000f a\u22a5 )\n\ns\n\n\u000f a\u22a5 )\n\na\u22a5\n\nid\nid\ns\n\na\u22a5 O(a\nO( \u000f a)) O a\u22a5\n\nid\n\nO a)) \u000f a)) O a O(a\nO( \u22a5\n\nO(a\nO( \u22a5\nO( \u000f a)) O a O(a\n\nid\n\n\u000f(a\n\u000f( O a\u22a5 ))\n\ns\n\n\u000f a\u22a5 )\n\na\u22a5\n\na\u22a5 O a\n\nO(( O a\u22a5 ) \u000f a))\na\u22a5 O((a\na\u22a5 O(\nO(a \u000f a)) O a\u22a5\n\nO(a\nO( \u000f a)) O((a\nO(( O a\u22a5 ) \u000f a\u22a5 )\n\na\u22a5\n\nO(a \u000f a)) O a O(a\nO(\nO( \u22a5 \u000f a\u22a5 )\n\ns\nid\n\n\u000f a\u22a5 )\n\ns\n\n\u000f a\u22a5 )\n\na\u22a5\n\nid\nid\n\na\u22a5 O(a\nO( \u000f(a\n\u000f( O a\u22a5 ))\n\ns\n\nO( \u000f a)) O a\u22a5\na\u22a5 O(a\n\nO( \u000f a)) O(a\nO( \u22a5\nO(a\n\na\u22a5\n\n\u2193\n\na\u22a5 O a\n\nid\n\n\u000f( O a\u22a5 ))\n\u000f(a\n\nO(a \u000f a)) O a O(a\nO( \u22a5\nO(\n\n\u2193\n\ns\n\n\u000f a\u22a5 )\n\na\u22a5\n\na\u22a5 O a\n\na\u22a5 O((a\nO(( O a\u22a5 ) \u000f a))\na\u22a5 O(\nO(a \u000f a)) O a\u22a5\n\nO( \u000f a)) O((a\nO(( O a\u22a5 ) \u000f a\u22a5 )\nO(a\n\na\u22a5\n\nO(a \u000f a)) O a O(a\nO( \u22a5 \u000f a\u22a5 )\nO(\n\n\u2193\n\na\u22a5\n\na\n\n\u000f\nO\n\n\u2193\n\nO(a \u000f a)) O a O(a\nO(\nO( \u22a5\n\nid\n\na O a O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\n\nO(a \u000f a) O a O(a\u22a5 \u000f a\u22a5 )\n\n\u2193\n\na O a\u22a5\n\na\n\na\u22a5 O(a \u000f a) O a\u22a5\n\nO(a \u000f a) O((a O a\u22a5 ) \u000f a\u22a5 )\n\na\u22a5\n\nO( \u000f(a\n\u000f( O a\u22a5 ))\na\u22a5 O(a\n\nO(a\nO( \u000f a)) O(a\nO( \u22a5\n\na\u22a5\n\na O(a\nO( \u22a5 \u000f(a\n\u000f( O a\u22a5 ))\n\na\u22a5\n\ns\n\n\u000f a\u22a5 )\n\na\u22a5\n\na\u22a5 O a\n\n\u2193\n\nid\n\n\u000f(a O a\u22a5 ))\n\nO(a \u000f a) O a O(a\u22a5\n\nid\n\na O a\u22a5\n\na O(\nO(a\u22a5 \u000f(\n\u000f(a O a\u22a5 ))\n\nid\n\nid\n\na\u22a5 O a\n\na\u22a5 O((a O a\u22a5 ) \u000f a)\n\n\u2193\n\nO a)) \u000f a)) O a O(a\nO( \u22a5\n\nid\n\ns\n\na\u22a5 O(a \u000f a) O a\u22a5\n\n\u2193\n\nid\n\nid\n\na\u22a5 O(a \u000f(a O a\u22a5 ))\n\nO(a \u000f a) O(a\u22a5\n\na\u22a5\n\nid\n\na\u22a5 O a\n\na\u22a5\n\na\u22a5\n\na\n\n\u000f\nO\n\na\n\n\u2193\n\na\u22a5\n\na\n\n\u000f\nO\n\na\u22a5\n\na\u22a5\n\na\n\n\u000f\nO\n\na\n\na\u22a5\n\na\n\n\u000f\nO\n\na\u22a5\n\u000f\n\nO\n\nFigure 6: From calculus of structures to proof nets\n\nif and only if there is a derivation\n\n\u2212\nk \u03a0\u0303\nk\nA1 O A2 O * * * O An\n\nin the calculus of structures.\nLet us now see how derivations in the calculus of structures are translated into proof nets. The method is\nexactly the same as in the previous section: We simply trace the atoms through the derivation. Figures 6\u20138\nshow the calculus of structures version of Figures 2\u20134.\n2.4.3\n\nTrivial Observation We get the same proof nets as before.\n\n2.4.4 Subtle Observation In Figures 6 and 8 the flow-graphs drawn inside the proofs have the same\ncrossings as the resulting proof nets, while in Figures 2 and 4, the flow-graphs drawn inside the proofs have\nmore (seemingly unnecessary) crossings.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n17\n\ni\u2193\ni\u2193\ns\ni\u2193\ns\ni\u2193\ns\n\na\u22a5\n\ni\u2193\ns\ni\u2191\n\na\u22a5\n\na\u22a5 O(a \u000f a) O((a\u22a5 O a\u22a5 ) \u000f a)\n\nO(a \u000f a) O(((a\u22a5 O a\u22a5 ) \u000f a) \u000f(a O a O(a\u22a5 \u000f a\u22a5 )))\n\nO(a \u000f a) O(((a\u22a5 O a\u22a5 ) \u000f a) \u000f(a O a)) O(a\u22a5 \u000f a\u22a5 )\n\na\u22a5 O(a \u000f a) O(((a\u22a5 O a\u22a5 ) \u000f a) \u000f(a O((a\u22a5 O a) \u000f a))) O(a\u22a5 \u000f a\u22a5 )\na\u22a5 O(a \u000f a) O(((a\u22a5 O a\u22a5 ) \u000f a) \u000f(a O a\u22a5 O(a \u000f a))) O(a\u22a5 \u000f a\u22a5 )\n\nO(a \u000f a) O(((a\u22a5 O a\u22a5 ) \u000f a) \u000f(a O((a\u22a5 O a) \u000f a\u22a5 ) O(a \u000f a))) O(a\u22a5 \u000f a\u22a5 )\n\na\u22a5\n\ni\u2191\n\na\u22a5\n\nO(a \u000f a) O(((a\u22a5 O a\u22a5 ) \u000f a) \u000f(a O a\u22a5 O(a \u000f a\u22a5 ) O(a \u000f a))) O(a\u22a5 \u000f a\u22a5 )\na\u22a5 O(a \u000f a) O(((a\u22a5 O a\u22a5 ) \u000f a) \u000f(a O a\u22a5 O (a \u000f a))) O(a\u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO(a \u000f a) O((((a \u22a5 O a\u22a5 ) \u000f a) \u000f(a O a\u22a5 )) \u000f(a O a\u22a5 O(a \u000f a))) O(a\u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO(a \u000f a) O a O((((a \u22a5 O a\u22a5 ) \u000f a) \u000f a\u22a5 ) \u000f (a O(a\u22a5 O(a \u000f a)))) O(a\u22a5 \u000f a\u22a5 )\na\u22a5 O(a \u000f a) O a\n\n(a\u22a5 \u000f a\u22a5 )\n\nO\n\u2193\n\ni\u2193\ni\u2193\ns\ni\u2193\ns\ni\u2193\ns\n\ns\ni\u2191\n\na\u22a5\n\na\u22a5 O(a\nO( \u000f a)) O((a\nO(( \u22a5 O a\u22a5 ) \u000f a))\n\nO(a\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a O(a\nO( \u22a5 \u000f a\u22a5 )))\n\nO(a\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a))\n)) O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO(\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(\nO(a \u000f a)) O(((a\n\u000f(a O((\nO((a\u22a5 O a)) \u000f a)))\nO(a\u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O(\nO(a \u000f a)))\nO(\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\u22a5 O(a\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O((a\nO(( \u22a5 O a)) \u000f a\u22a5 ) O(a\nO( \u000f a)))\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\n\ni\u2191\ni\u2193\n\na\u22a5\n\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O(\nO(a \u000f a\u22a5 ) O(\nO(a \u000f a)))\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O ((a \u000f a)))\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO( \u000f a)) O((((a\nO(((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a\u22a5 )) \u000f(a\n\u000f( O a\u22a5 O(a\nO( \u000f a)))\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\nO(a\n\na\u22a5\n\nO( \u000f a)) O a O((((a\nO(((( \u22a5 O a\u22a5 ) \u000f a)) \u000f a\u22a5 ) \u000f (a\n( O(a\nO( \u22a5 O(a\nO( \u000f a))))\n)))) O(a\nO( \u22a5 \u000f a\u22a5 )\nO(a\na\u22a5 O(a\nO( \u000f a)) O a\n\n(a\n( \u22a5 \u000f a\u22a5 )\n\nO\n\u2193\n\ni\u2193\ni\u2193\ns\ni\u2193\ns\ni\u2193\ns\n\na\u22a5\n\ni\u2191\ni\u2193\ns\ni\u2191\n\na\u22a5\n\na\u22a5\n\na\u22a5 O(a\nO( \u000f a)) O((a\nO(( \u22a5 O a\u22a5 ) \u000f a))\n\nO(a \u000f a)) O(((a\n\u000f(a O a O(\nO(a\u22a5 \u000f a\u22a5 )))\nO(\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n\nO(a \u000f a)) O(((a\nO(\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a))\n)) O(a\nO( \u22a5 \u000f a\u22a5 )\n\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O((a\nO(( \u22a5 O a)) \u000f a)))\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\na\u22a5 O(a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O(\nO(a \u000f a)))\n\nO(a \u000f a)) O(((a\nO(a \u000f a)))\nO(a\u22a5 \u000f a\u22a5 )\nO(\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O((a\nO(( \u22a5 O a)) \u000f a\u22a5 ) O(\n))) O(\n\na\u22a5\n\nO(a\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a\u22a5 O(a\nO( \u000f a\u22a5 ) O(a\nO( \u000f a)))\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O ((a \u000f a)))\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO(\nO(((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(\nO(a \u000f a)) O((((a\n\u000f(a O a\u22a5 )) \u000f(\n\u000f(a O a\u22a5 O(\nO(a \u000f a)))\nO(a\u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO(a\nO( \u000f a)) O a O((((a\nO(((( \u22a5 O a\u22a5 ) \u000f a)) \u000f a\u22a5 ) \u000f (a\n( O(a\nO( \u22a5 O(a\nO( \u000f a))))\n)))) O(a\nO( \u22a5 \u000f a\u22a5 )\na\u22a5 O(a\nO( \u000f a)) O a\n\n(a\n( \u22a5 \u000f a\u22a5 )\n\nO\n\u2193\n\na\u22a5\n\na\n\na\n\na\u22a5\n\na\n\n\u000f\nO\n\na\u22a5\n\u000f\n\nO\n\nFigure 7: From calculus of structures to proof nets\n\n2.5\n\nCorrectness criteria\n\nWe have seen how we can obtain a proof net out of a formal proof in some deductive system. But what about\nthe other way around? Suppose we have such a graph that looks like a proof net. Can we decide whether it\nreally comes from a proof, and if so, can we recover this proof? Of course the answer is trivially yes because the\ngraph is finite and we just need to check all proofs of that size. The interesting question is therefore, whether\nwe can do it efficiently.\n\nRR n\u00b0 6013\n\n\f18\n\nLutz Strassburger\n\ni\u2193\ni\u2193\ns\ni\u2193\n\ns\n\na\u22a5\n\ni\u2191\ni\u2193\ns\ni\u2191\n\na\u22a5\n\na\u22a5 O(a\nO( \u000f a)) O((a\nO(( \u22a5 O a\u22a5 ) \u000f a))\n\nO(a\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a O(a\nO( \u22a5 \u000f a\u22a5 )))\n\nO(a\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a))\n)) O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O((\nO((a\u22a5 O a)) \u000f a)))\nO(a\u22a5 \u000f a\u22a5 )\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(\n\ns\ni\u2193\n\na\u22a5\n\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O(\nO(a \u000f a)))\n\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O((a\nO(( \u22a5 O a)) \u000f a\u22a5 ) O(a\nO( \u000f a)))\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\nO(a\n\na\u22a5\n\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O(\nO(a \u000f a\u22a5 ) O(\nO(a \u000f a)))\nO(\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O ((a \u000f a)))\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO(a\nO( \u000f a)) O((((a\nO(((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a\u22a5 )) \u000f(a\n\u000f( O a\u22a5 O(a\nO( \u000f a)))\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO( \u000f a)) O a O((((a\nO(((( \u22a5 O a\u22a5 ) \u000f a)) \u000f a\u22a5 ) \u000f (a\n( O(a\nO( \u22a5 O(a\nO( \u000f a))))\n)))) O(a\nO( \u22a5 \u000f a\u22a5 )\nO(a\nO( \u000f a)) O a\na\u22a5 O(a\n\n( \u22a5 \u000f a\u22a5 )\n(a\n\nO\n\u2193\n\ni\u2193\ni\u2193\ns\ni\u2193\n\ns\n\na\u22a5\n\ni\u2191\ni\u2193\ns\ni\u2191\n\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O a O(\nO(a\u22a5 \u000f a\u22a5 )))\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n\na\u22a5 O(\nO(a \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a))\n)) O(a\nO( \u22a5 \u000f a\u22a5 )\n\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O((a\nO(( \u22a5 O a)) \u000f a)))\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\na\u22a5 O(a\n\ns\ni\u2193\n\na\u22a5 O(a\nO( \u000f a)) O((a\nO(( \u22a5 O a\u22a5 ) \u000f a))\n\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O(\nO(a \u000f a)))\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\n\nO(a \u000f a)) O(((a\nO(a \u000f a)))\nO(a\u22a5 \u000f a\u22a5 )\nO(\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O((a\nO(( \u22a5 O a)) \u000f a\u22a5 ) O(\n))) O(\n\na\u22a5\n\nO(a\nO( \u000f a)))\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\nO( \u000f a)) O(((a\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(a\n\u000f( O a\u22a5 O(a\nO( \u000f a\u22a5 ) O(a\na\u22a5 O(\nO(a \u000f a)) O(((a\n\u000f(a O a\u22a5 O ((a \u000f a)))\nO((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(a\nO( \u22a5 \u000f a\u22a5 )\n\na\u22a5\n\nO(\nO(((( \u22a5 O a\u22a5 ) \u000f a)) \u000f(\n))) O(\nO(a \u000f a)) O((((a\n\u000f(a O a\u22a5 )) \u000f(\n\u000f(a O a\u22a5 O(\nO(a \u000f a)))\nO(a\u22a5 \u000f a\u22a5 )\n\nO( \u000f a)) O a O((((a\nO(((( \u22a5 O a\u22a5 ) \u000f a)) \u000f a\u22a5 ) \u000f (a\na\u22a5 O(a\n( O(a\nO( \u22a5 O(a\nO( \u000f a))))\n)))) O(a\nO( \u22a5 \u000f a\u22a5 )\na\u22a5 O(a\nO( \u000f a)) O a\n\n(a\n( \u22a5 \u000f a\u22a5 )\n\nO\n\u2193\n\na\u22a5\n\na\n\na\n\na\u22a5\n\na\n\n\u000f\n\na\u22a5\n\na a\u22a5 a a\u22a5 a\n\na\u22a5 a\n\nO\n\nO\n\na\u22a5\n\na\n\u000f\n\n\u000f\n\na\u22a5\n\u000f\n\nO\n\u000f\n\nO\n\nO\n\nFigure 8: From calculus of structures to proof nets\n\nThe answer is still yes, and it is done via so-called correctness criteria. For introducing the idea, we take\nthe following graphs as running examples\n\na\u22a5\n\na\n\na\u22a5\n\na\n\nc\u22a5\n\nc\n\n(15)\nO\n\nO\n\u000f\n\nb\u22a5\n\na\nO\n\nb\n\nb\u22a5\n\na\u22a5\n\nb\nO\n\nb\u22a5\n\na\n\u000f\n\na\u22a5\n\nb\n\n(16)\n\n\u000f\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n19\n\nBy playing around, you will notice that it is quite easy to find a proof (in sequent calculus or calculus of\nstructures) that translates into the net in (15), but it seems impossible to find such proofs for the two examples\nin (16). We are now going to show that this is indeed impossible. For doing so, we need some formal definitions.\n2.5.1 Definition A pre-proof net is a sequent forest \u0393, possibly with cuts, together with a perfect matching\nof the set of leaves (i.e., the set of occurrences of propositional variables and their duals), such that only dual\npairs are matched.\nIn this context, a cut must be seen as a special kind of formula A \u0011 A\u22a5 , where \u0011 is a special connective\nwhich may occur only at the root of a formula tree in which the two direct subformulas are dual to each other.\nFor example, (15) should be read as\n\na\u22a5\n\na\n\na\u22a5\n\na\n\nc\u22a5\n\nc\n\n(15')\n\u0011\n\nO\n\nO\n\u000f\n\nClearly, the examples in (15) and (16) are all pre-proof nets. In the following, we will think of an inner node\n(i.e., a non-leaf node) of the sequent forest labeled not only by the connective but by the whole subformula\nrooted by that connective. Our favorite example (15) should then be read as\n\na\u22a5\n\na\n\na\n\na \u0011 a\u22a5\n\na\u22a5\n\nc\u22a5\n\nc\n\na O a\u22a5\n\n(15\")\n\nc O c\u22a5\n\n(a O a\u22a5 ) \u000f(c O c\u22a5 )\nAlthough sometimes we think of pre-proof nets to be written as in (15\"), we will keep writing them as in (15)\nfor better readability.\n2.5.2 Definition A pre-proof net \u03c0 is called sequentializable iff there is a proof in the sequent calculus or\nin the calculus of structures that translates into \u03c0.\nOriginally, the term \"sequentializable\" was motivated by the name \"sequent calculus\". But we use it here\nalso if the \"sequentialization\" is done in the calculus of structures.\n2.5.3 Definition Let \u03c0 be a pre-proof net. A switching for \u03c0 is a graph obtained from \u03c0 by removing for\nevery O-node one of the two edges connecting it to its children.\nClearly, if a pre-proof net contains n O-nodes, then there are 2n switchings. Here are all 4 switchings for\nthe example in (15):\n\na\n\na\u22a5\n\na\u22a5\n\na\n\nc\u22a5\n\nc\n\nO\n\na\n\na\u22a5\n\na\u22a5\n\na\nO\n\nO\n\nO\n\u000f\n\n\u000f\n\na\n\na\u22a5\n\na\u22a5\n\na\n\nO\n\u000f\n\nRR n\u00b0 6013\n\nc\u22a5\n\nc\n\nO\n\nc\u22a5\n\nc\n\na\n\na\u22a5\n\na\u22a5\n\na\n\n(17)\nc\u22a5\n\nc\n\nO\n\nO\n\u000f\n\n\f20\n\nLutz Strassburger\n\n2.5.4 Definition A pre-proof net obeys the switching criterion (or, shortly, is correct ) iff all its switchings\nare connected and acyclic.\nAs (17) shows, the pre-proof net in (15) is correct. The two pre-proof nets in (16) are not, as the following\nswitchings show:\nb\u22a5\n\na\n\nb\n\nb\u22a5\n\nb\n\na\u22a5\n\na\n\nb\u22a5\n\nb\n\na\u22a5\n\n(18)\n\nO\nO\n\u000f\n\u000f\nThe first is not connected, and the second is cyclic.\nIn the following, we use the term proof net for those pre-proof nets which are correct, i.e., obey the switching\ncriterion. The following theorem says that the proof nets are exactly those pre-proof nets that represent an\nactual proof.\n2.5.5\n\nTheorem\n\nA pre-proof net is correct if and only if it is sequentializable.\n\nWe will give two proofs of this theorem. The first uses the sequent calculus, and the second the calculus of\nstructures. For the first proof, we need the following lemma:\n2.5.6 Lemma Let \u03c0 be a proof net with conclusions A1 , . . . , An . If all Ai have a \u000f or a cut as root, then\none of them is splitting, i.e., by removing that \u000f (or \u0011), the net becomes disconnected.\nFor proving this lemma, we need some more concepts.\n2.5.7 Definition Let \u03c3 and \u03c0 be pre-proof nets. We say \u03c3 is a subprenet of \u03c0, written as \u03c3 \u2286 \u03c0 if all\nformulas/cuts appearing in \u03c3 are subformulas of the formulas/cuts appearing in \u03c0, and the linking of \u03c3 is the\nrestriction of the linking of \u03c0 to the formulas/cuts in \u03c3. We say \u03c3 is a subnet of \u03c0 if \u03c3 \u2286 \u03c0, and \u03c3 and \u03c0 are\nboth correct. A door of \u03c3 is any formula that appears as conclusion of \u03c3.\n2.5.8\n\nExample Consider the following three graphs:\n\na\n\na\u22a5\n\na\u22a5\n\na\nO\n\na\n\na\u22a5\n\na\u22a5\n\na\nO\n\na\n\na\u22a5\n\na\u22a5\n\na\nO\n\nThe first two are subprenets of (15), the third one is not (because a link is missing). The second one is in fact\na subnet of (15), but the first one is not (because it is not correct). The doors of the first example are a, a\u22a5 ,\nand a O a\u22a5 . The doors of the second example are a \u0011 a\u22a5 and a O a\u22a5 .\n2.5.9\n\nLemma\n\nLet \u03c3 and \u03c1 be subnets of some proof net \u03c0.\n\n(i) The subprenet \u03c3 \u222a \u03c1 is a subnet of \u03c0 if and only if \u03c3 \u2229 \u03c1 6= \u2205.\n(ii) If \u03c3 \u2229 \u03c1 6= \u2205 then \u03c3 \u2229 \u03c1 is a subnet of \u03c0.\nProof: Intersection and union in the statement of that lemma have to be understood in the canonical sense:\nAn edge/node/link appears in in \u03c3 \u2229 \u03c1 (resp. \u03c3 \u222a \u03c1) if it appears in both, \u03c3 and \u03c1 (resp. in at least one of \u03c3 or\n\u03c1). For giving the proof, let us first note that because in \u03c0 every switching is acyclic, also in every subprenet\nof \u03c0 every switching is acyclic, in particular also in \u03c3 \u222a \u03c1 and \u03c3 \u2229 \u03c1. Therefore, we need only to consider the\nconnectedness condition.\n(i) If \u03c3 \u2229 \u03c1 = \u2205 then every switching of \u03c3 \u222a \u03c1 must be disconnected. Conversely, if \u03c3 \u2229 \u03c1 6= \u2205, then every\nswitching of \u03c3 \u222a \u03c1 must be connected (in every switching of \u03c3 \u222a \u03c1 every node in \u03c3 \u2229 \u03c1 must be connected\nto every node in \u03c3 and to every node in \u03c1, because \u03c3 and \u03c1 are both correct).\n(ii) Let \u03c3 \u2229 \u03c1 6= \u2205 and let s be a switching for \u03c3 \u222a \u03c1. Then s is connected and acyclic by (i). Let s\u03c3 , s\u03c1 , and\ns\u03c3\u2229\u03c1 , be the restrictions of s to \u03c3, \u03c1, and \u03c3 \u2229 \u03c1, respectively. Now let A and B be two vertices in \u03c3 \u2229 \u03c1.\nThen A and B are connected by a path in s\u03c3 because \u03c3 is correct, and by a path in s\u03c1 because \u03c1 is correct.\nSince s is acyclic, the two paths must be the same and therefore be contained in s\u03c3\u2229\u03c1 .\n\u2293\n\u2294\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n21\n\n2.5.10 Lemma Let \u03c0 be a proof net, and let A be a subformula of some formula/cut appearing in \u03c0. Then\nthere is a subnet \u03c3 of \u03c0, that has A as a door.\nProof: For proving this lemma, we need the following notation. Let \u03c0 be a proof net, let A be some formula\noccurrence in \u03c0, and let s be a switching for \u03c0. Then we write s(\u03c0, A) for the graph obtained as follows:\n\u0088 If A is an immediate subformula of a formula occurrence B in \u03c0, and there is an edge from B to A in s,\nthen remove that edge and let s(\u03c0, A) be the connected component of (the remainder of) s that contains\nA.\n\u0088 Otherwise let s(\u03c0, A) be just s.\n\nNow let\n\u03c3=\n\n\\\n\ns(\u03c0, A)\n\ns\n\nwhere s ranges over all possible switchings of \u03c0. (Note that it could happen that formally \u03c3 is not a subprenet\nbecause some edges in the formula trees might be missing. We graciously add these missing edges to \u03c3 such\nthat it becomes a subprenet.) Clearly, A is in \u03c3. We are now going to show that A\nT is a door of \u03c3. By way\nof contradiction, assume it is not. This means there is ancestor B of A that is in s s(\u03c0, A). Now choose a\nswitching \u015d such that whenever there is a O node between A and B, i.e.,\nA\n\nA\nC1\n\nC2\n\nC2\n\nC1\n\nor\nC1 O C2\n\nC2 O C1\n\nB\n\nB\n\nthen \u015d chooses C1 (i.e., removes the edge between C2 and its parent). Then there must be a \u000f between A and\nB:\nA\nA\nD1\n\nD2\n\nD2\n\nD1\n\nor\nD1 \u000f D2\n\nD2 \u000f D1\n\nB\nB\nOtherwise B would not be in \u03c3. Now suppose we have chosen the uppermost such \u000f. Then the path connecting\nA and D1 in \u015d(\u03c0, A) cannot pass through D2 (by the definition of \u015d(\u03c0, A)). But this means that in \u015d there are\ntwo distinct paths connecting A and D1 , which contradicts the acyclicity of \u015d.\nNow we have to show that \u03c3 is a subnet. Let s be a switching for \u03c3. Since \u03c3 is a subprenet of \u03c0, we have\nthat s is acyclic. Now let s\u0303 be an extension of s to \u03c0. Then s is the restriction of s\u0303(\u03c0, A) to \u03c3, and hence\nconnected.\n\u2293\n\u2294\n2.5.11 Definition Let \u03c0 be a proof net, and let A be a subformula of some formula/cut appearing in \u03c0.\nThe kingdom of A in \u03c0, denoted by kA, is the smallest subnet of \u03c0, that has A as a door. Similarly, the empire\nof A in \u03c0, denoted by eA, is the largest subnet of \u03c0, that has A as a door. We define A \u226a B iff A \u2208 kB, where\nA and B can be any (sub)formula/cut occurrences in \u03c0.\nAn immediate consequence of Lemmas 2.5.9 and 2.5.10 is that kingdom and empire always exist.\n2.5.12\n\nExercise Why?\n\n2.5.13 Remark The subnet \u03c3 constructed in the proof of Lemma 2.5.10 is in fact the empire of A. But we\nwill not need this fact later and will not prove it here.\n\nRR n\u00b0 6013\n\n\f22\n\nLutz Strassburger\n\n2.5.14 Lemma Let \u03c0 be a proof net, and let A, A\u2032 , B, and B \u2032 be subformula occurrences appearing in \u03c0,\nsuch that A and B are distinct, A\u2032 is immediate subformula of A, and B \u2032 is immediate subformula of B. Now\nsuppose that B \u2032 \u2208 eA\u2032 . Then we have that B \u2208\n/ eA\u2032 if and only if A \u2208 kB.\nProof: We have B \u2032 \u2208 eA\u2032 \u2229 kB. Hence, \u03c3 = eA\u2032 \u2229 kB and \u03c1 = eA\u2032 \u222a kB are subnets of \u03c0. By way of\ncontradiction, let B \u2208\n/ eA\u2032 and A \u2208\n/ kB. Then \u03c1 has A\u2032 as door and is larger than eA\u2032 because it contains B.\nThis contradicts the definition of eA\u2032 . On the other hand, if B \u2208 eA\u2032 and A \u2208 kB then \u03c3 has B as door and is\nsmaller than kB because it does not contain A. This contradicts the definition of kB.\n\u2293\n\u2294\n2.5.15 Lemma Let \u03c0 be a proof net, and let A and B be subformulas appearing in \u03c0. If A \u226a B and B \u226a A,\nthen either A and B are the same occurrence or they are dual atoms connected via an identity link.\nProof: If a and a\u22a5 are two dual atom occurrences connected by a link, then clearly ka = ka\u22a5 . Now let A and\nB be two distinct non-atomic formula occurrences in \u03c0 with A \u2208 kB and B \u2208 kA. Then kA \u2229 kB is a subnet\nand hence kA = kA \u2229 kB = kB. We have two cases:\n\u0088 If A = A\u2032 O A\u2032\u2032 then the result of removing A from kB is still a subnet, contradicting the minimality of\nkB.\n\u0088 If A = A\u2032 \u000f A\u2032\u2032 then kA = kA\u2032 \u222a kA\u2032\u2032 \u222a {A\u2032 \u000f A\u2032\u2032 }. Hence B \u2208 kA\u2032 or B \u2208 kA\u2032\u2032 . This contradicts\nLemma 2.5.14, which says that B \u2208\n/ eA\u2032 and B \u2208\n/ eA\u2032\u2032 .\n\u2293\n\u2294\n\nFrom Lemma 2.5.15 it immediately follows that \u226a is a partial order on the non-atomic subformula occurrences in \u03c0. We make crucial use of this fact in the following:\nProof of Lemma 2.5.6: Choose among the conclusions A1 , . . . , An (including the cuts) of \u03c0 one which is\nmaximal w.r.t. \u226a. Without loss of generality, assume it is Ai = A\u2032i \u000f A\u2032\u2032i . We will now show that it is splitting,\ni.e., \u03c0 = {A\u2032i \u000f A\u2032\u2032i } \u222a eA\u2032i \u222a eA\u2032\u2032i . By way of contradiction, assume A\u2032i \u000f A\u2032\u2032i is not splitting. This means we have\nsomewhere in \u03c0 a formula occurrence B with immediate subformula B \u2032 such that (without loss of generality)\nB \u2032 \u2208 eA\u2032i and B \u2208\n/ eA\u2032i . We also know that B must occur at or above some other conclusion, say Aj = A\u2032j \u000f A\u2032\u2032j .\nHence B \u2208 kAj and therefore kB \u2286 kAj . But by Lemma 2.5.14 we have Ai \u2208 kB and therefore Ai \u2208 kAj ,\nwhich contradicts the maximality of Ai w.r.t. \u226a.\n\u2293\n\u2294\nFinally, we can prove Theorem 2.5.5.\nFirst Proof of Theorem 2.5.5: Let us first show that the (in the sequent calculus) sequentializable pre-proof\nnets are indeed correct. This is done by verifying that the id-rule yields correct nets (which is obvious) and that\nall other inference rules preserve correctness. For the exch-rule this is obvious. Let us now consider the \u000f-rule.\nBy way of contradiction, assume that\n\u03c01\n\n\u03c02\nand\n\n\u0393\n\nA\n\nB \u2206\n\nare correct, but\n\u03c01\n\n\u03c02\nA\n\nB\n\n\u000f\n\u0393\n\nA\u000fB\n\n\u2206\n\nis not correct. This means there is a switching that is either disconnected or contains a cycle. Since a \u000f-node\ndoes not affect switchings, we conclude that the property of being disconnected or cyclic must hold for the same\nswitching in one of \u03c01 or \u03c02 . But this is a contradiction to the correctness of \u03c01 and \u03c02 . For the the O-rule and\nthe cut-rule we proceed similarly.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n23\n\nConversely, let \u03c0 be a correct pre-proof net. We proceed by induction on the size of \u03c0, i.e., the number n\nof O-, \u000f-, and cut-nodes in \u03c0, to construct a sequent calculus proof \u03a0, that translates into \u03c0. If n is 0, then \u03c0\nmust be of the shape\nid\nA\u22a5\n\nA\n\nand we can apply the id-rule. Now let n > 0. If one of the conclusion formulas of \u03c0 has a O-root, we can\napply the O-rule and proceed by induction hypothesis. Now suppose all roots are \u000f or cuts. Then we apply\nLemma 2.5.6, which tells us, that there is one of them which splits the net. Assume, without loss of generality,\nthat it is a \u000f-root, say Ai = A\u2032i \u000f A\u2032\u2032i . This means, the net is of the shape\n\u03c01\n\n\u03c02\nA\u2032i\n\nA\u2032\u2032\ni\n\n\u000f\nA\u2032i \u000f A\u2032\u2032\ni\n\n\u0393\n\n\u2206\n\nand we can apply the \u000f-rule and proceed by induction hypothesis for \u03c01 and \u03c02 . If the splitting root is a cut,\nwe apply the cut-rule instead.\n\u2293\n\u2294\nLet us now see the second proof. For this, we need the following lemma:\n2.5.16\n\nLemma\n\nLet \u03c0 be a proof net with conclusion\nS{(A \u000f B{a}) O(C{a\u22a5 } \u000f D)} ,\n\nsuch that the a and the a\u22a5 are paired up in the linking. Let \u03c0 \u2032 and \u03c0 \u2032\u2032 be pre-proof nets with conclusions\nS{A \u000f(B{a} O(C{a\u22a5 } \u000f D))}\n\nS{((A \u000f B{a}) O C{a\u22a5 }) \u000f D}\n\nand\n\nrespectively, such that the linkings of \u03c0 \u2032 and \u03c0 \u2032\u2032 (i.e., the pairing of dual atoms) are the same as the linking of\n\u03c0. Then at least one of \u03c0 \u2032 and \u03c0 \u2032\u2032 is also correct.\nProof: Let us visualize the information we have about \u03c0, \u03c0 \u2032 , and \u03c0 \u2032\u2032 as follows:\n\u03c0\u2032 :\n\n\u03c0 \u2032\u2032 :\n\n\u03c0:\n\na\n\na\u22a5\n\u22a5\n\na\n\nC\n\nB\n\nD\n\u000f\n\n\u2190\n\nA\n\na\n\na\n\nB\n\nC\n\n\u000f\nA\n\n\u22a5\n\nA\nD\n\n\u2192\n\nB\n\na\u22a5\nC\n\n\u000f\n\n\u000f\nD\n\nO\n\nO\nO\n\u000f\n\n\u000f\n\nWe proceed by way of contradiction, and assume that \u03c0 is correct and that \u03c0 \u2032 and \u03c0 \u2032\u2032 are both incorrect. If\nthere is a switching s for \u03c0 \u2032 (or \u03c0 \u2032\u2032 ) that is disconnected, then the same switching is also disconnected in \u03c0.\nHence, we need to consider only the acyclicity condition. Suppose that there is a switching s\u2032 for \u03c0 \u2032 that is\ncyclic. Then, in s\u2032 the O below B must be switched to the right, and the cycle must pass through A, the root\n\nRR n\u00b0 6013\n\n\f24\n\nLutz Strassburger\n\n\u000f and the O as follows:\n\na\u22a5\na\n\nC\n\nD\n\nB\nA\n\n\u000f\nO\n\n\u000f\nOtherwise we could construct a switching with the same cycle in \u03c0. If our cycle continues through D, i.e.,\n\na\u22a5\na\n\nC\n\nD\n(19)\n\nB\nA\n\n\u000f\nO\n\n\u000f\nthen we can use the path from A to D (that does not go through B or C, see Exercise 2.5.17) to construct a\ncyclic switching s in \u03c0 as follows:\n\nA\n\na\n\na\u22a5\n\nB\n\nC\n\n\u000f\n\nD\n\u000f\n\nO\n\u2032\n\nHence, the cycle in s goes through C, giving us a path from A to C, not passing through B (see Exercise 2.5.17):\n\na\u22a5\na\n\nC\n\nD\n(20)\n\nB\nA\n\n\u000f\nO\n\n\u000f\nBy the same argumentation we get a switching s\u2032\u2032 in \u03c0 \u2032\u2032 with a path from B to D, not going through C. From\ns\u2032 and s\u2032\u2032 , we can now construct a switching s for \u03c0 with a cycle as follows:\n\nA\n\na\n\na\u22a5\n\nB\n\nC\n\n\u000f\n\nD\n\u000f\n\nO\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n25\n\n\u2293\n\u2294\n\nwhich contradicts the correctness of \u03c0.\n\n2.5.17 Exercise Explain why we can in (19) assume that the cycle does not go through B or C, and in (20)\nnot through B.\nIn our second proof of Theorem 2.5.5 we will also need the following concept:\n2.5.18 Definition Let A be a formula. The relation web of A is the complete graph, whose vertices are\nthe atom occurrences in A. An edge between two atom occurrences a and b is colored red, if the first common\nancestor of them in the formula tree is a \u000f, and green if it is a O.\n2.5.19\n\nExample Consider the formula (a\u22a5 O(a \u000f a)) O(a O(a\u22a5 \u000f a\u22a5 )). Its formula tree is the following:\na\u22a5\n\na\n\na\n\na\u22a5\n\na\n\n\u000f\n\na\u22a5\n\n\u000f\n\nO\n\nO\nO\n\nThe relation web is therefore\n\na\u22a5 a\na\u22a5\n\na\n\na\u22a5 a\nwhere we use regular edges for red and dotted edges for green.\n2.5.20\n\nDefinition The degree of freedom of a formula A, is the number of green edges in its relation web.\n\nSecond Proof of Theorem 2.5.5: Again, we start by showing that all rules preserve correctness. Here,\nthe only interesting case is the switch rule (all others being trivial), which does the following transformation\nsomewhere inside the net:\nO\n\n\u2192\n\n\u000f\n\n(21)\n\n\u000f\nO\nBy way of contradiction, assume the net on the left is correct, and the one on the right is not. First, suppose\nthere is a switching for the second net that is cyclic. If that cycle does not contain the \u000f-node shown on the\nright in (21), then this cycle is also present in the net on the left in (21). If our cycle contains the \u000f-node, then\nwe can make the same cycle be present in the net on the left by switching the O-node to the left (i.e., removing\nthe edge to the right). Now assume we have a disconnected switching for the net on the right. Then the same\nswitching also disconnects the net on the left. Contradiction.\nConversely, assume we have a correct net \u03c0 with conclusion F . For the time being, assume that \u03c0 is cut-free.\nWe proceed by induction on the degree of freedom of F . Pick inside F any pair of atoms that are linked together,\nsay a and a\u22a5 . Then F = S{S1 {a} O S2 {a\u22a5 }}. Without loss of generality, we can assume that S1 { } and S2 { }\nare not O-contexts. We have the following cases:\n\u0088 If S1 { } = S2 { } = { }, we can apply the rule i\u2193, and proceed by induction hypothesis.\n\u0088 If S1 { } 6= { } and S2 { } = { }, then F = S{(A \u000f B{a}) O a\u22a5 } for some A and B{ }. We can apply\nthe switch rule to get S{A \u000f(B{a} O a\u22a5 )}, which is still correct (with the same linking as for F ), but has\nsmaller degree of freedom than F . The case where S1 { } = { } and S2 { } 6= { } is similar.\n\u0088 If S1 { } 6= { } and S2 { } 6= { }, then, without loss of generality, F = S{(A \u000f B{a}) O(C{a\u22a5 } \u000f D)}, for\nsome A, B{ }, C{ }, D. By Lemma 2.5.16, we can apply the switch rule, since one of\n\nS{A \u000f(B{a} O(C{a\u22a5 } \u000f D))}\n\nand S{((A \u000f B{a}) O C{a\u22a5 }) \u000f D}\n\nis still correct. Since both of them have smaller degree of freedom than F , we can proceed by induction\nhypothesis.\nRR n\u00b0 6013\n\n\f26\n\nLutz Strassburger\n\nIf \u03c0 contains cuts, we can replace inside \u03c0 all cuts with \u000f, to get a formula F \u2032 such that there is a derivation\nF\u2032\ni\u2191 kk\nF\nThen \u03c0 becomes a cut-free net with conclusion F \u2032 , and we can proceed as above.\n\n\u2293\n\u2294\n\nNote that the two different proofs of Theorem 2.5.5 yield a stronger version of Theorem 2.4.1.\n2.5.21\n\nTheorem\n\nFor every sequent calculus proof\n??\n?? \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A1 , A2 , . . . , An\n\nthere is a proof in the calculus of structures\n\u2212\nk\nk\nA1 O A2 O . . . O An\nyielding the same proof net, and vice versa.\nA geometric or graph-theoretic criterion like the one in Definition 2.5.4 and Theorem 2.5.5 is called a\ncorrectness criterion. The desired properties are soundness and completeness, as stated in Theorem 2.5.5. For\nMLL\u2212 , the literature contains quite a lot of such criteria, and it would go far beyond the scope of this lecture\nnotes to attempt to give a complete survey. But nonetheless, we will show here two other correctness criteria.\nFor the next one, we write the pre-proof nets in a different way:\nid\na\n\na\u22a5\n\n\u2740\n\nB\n\nA\n\nO\n\n\u2740\n\nAOB\n\n(22)\nB\n\nA\n\n\u000f\n\n\u2740\n\nA\u000fB\n\nA\u22a5\n\nA\n\n\u2740\n\ncut\nWe call the resulting graphs RB-graphs. The R and B stand for Regular/Red and Bold/Blue. The main\nproperty of these graphs is that the blue/bold edges (in the following called B-edges) provide a bipartition of\nthe set of vertices, i.e., every vertex in the RB-graph is connected to exactly one other vertex via a B-edge. The\nred/regular edges are in the following called R-edges.\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n27\n\nHere are the examples from (15) and (16) written as RB-graphs:\n\n(23)\n\n(24)\n\n2.5.22 Definition Let G be an RB-graph. An AE-path in G is a path whose edges are alternating R- and\nB-edges, and that does not touch any vertex more than once. An AE-cycle in G is a AE-path from a vertex to\nitself, starting with a B-edge and ending with an R-edge.\nThe A and E stand for \"alternating\" and \"elementary\". The meaning of \"alternating\" should be clear, and\nthe meaning of \"elementary\" is that the path or cycle must not cross itself.\n2.5.23 Definition A pre-proof net \u03c0 obeys the RB-criterion (or shortly, is RB-correct ) iff its RB-graph G\u03c0\ncontains no AE-cycle and every pair of vertices in G\u03c0 is connected via an AE-path.\n2.5.24\n\nTheorem\n\nA pre-proof net is RB-correct if and only if it is a proof net.\n\nProof: We show that a pre-proof net is RB-correct iff it obeys the switching criterion, which is easy: If there\nare two vertices in the RB-graph not connected by an AE-path, then there is a switching yielding a disconnected\ngraph, and vice versa. Similarly, the RB-graph contains an AE-cycle if and only if we can provide a switching\nwith a cycle.\n\u2293\n\u2294\n2.5.25\n\nExercise Work out the details of the previous proof.\n\nRR n\u00b0 6013\n\n\f28\n\nLutz Strassburger\n\nFor the third correctness criterion, we write our nets in yet another way:\nid\na\n\na\u22a5\n\n\u2740\n\n\u2022\n\n\u2022\n\nB\n\nA\n\nO\n\na\n\u2022\n\n\u2740\n\nAOB\n\n(25)\nB\n\nA\n\n\u000f\n\n\u2022\n\n\u2740\n\nA\u000fB\n\nA\u22a5\n\nA\n\n\u2740\n\n\u2022\n\n\u2022\n\ncut\nNow consider the following two rewriting rules on these graphs:\n\u2022\n\n\u2022\n\u2192\n\na\n\u2022\n\n\u2022\n\u2192\n\nand\n\u2022\n\n\u2022\n\n(26)\n\n\u2022\n\nIt is important to note that in the first rule the two edges are between the same pair of vertices and are connected\nby an arc at exactly one of the two vertices. The second rule only applies if the two vertices on the lefthand\nside are distinct, and the edge is not connected to another edge by an arc.\n2.5.26\n\nTheorem\n\nThe reduction relation induced by the rules in (26) is terminating and confluent.\n\nProof: Termination is obvious because at each step the size of the graph is reduced. Hence, it suffices to show\nlocal confluence to get confluence. But this is easy since there are no (proper) critical pairs.\n\u2293\n\u2294\nThis means that for each pre-proof net we get a uniquely defined reduced graph, and the question is now\nhow this graph looks like.\n2.5.27\n\nExercise Apply the reduction relation defined in (26) to the nets in (15) and (16).\n\n2.5.28 Definition A pre-proof net obeys the contraction criterion if its normal form according to the reduction relation defined in (26) is\n\u2022\ni.e., a single vertex without edges.\nAt this point rather unsurprisingly, we get:\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n2.5.29\n\nTheorem\n\n29\n\nA pre-proof net obeys the contraction criterion if and only if it is a proof net.\n\nProof: As before, we show this by showing the equivalence of the switching criterion and the contraction\ncriterion. This is easy to see since both reductions in (26) preserve and reflect correctness according to the\nswitching criterion.\n\u2293\n\u2294\nBefore we leave the topic of correctness criteria, let us make some important observations on their complexity.\nThe naive implementation of checking the switching criterion needs exponential time: if there are n par-links\nin the net, then there are 2n switchings to check. However, checking the RB-criterion needs only quadratic\nruntime. To verify this is an easy graph-theoretic exercise. It is also easy to see that checking the contraction\ncriterion can be done in quadratic time. But it is rather surprising that it can be done in linear time in the size\nof the net.5 This means that (in the case of MLL\u2212 ) when we go from a formal proof in a deductive system like\nthe sequent calculus or the calculus of structures (whose correctness can trivially be checked in linear lime in\nthe size of the proof) to the proof net, we do not lose any information. The proof net contains the essence of\nthe proof, including the \"deductive information\". Unfortunately, MLL\u2212 is (so far) the only logic (except some\nvariants of it), for which this ideal of proof nets is reached. We come back to this in Sections 3 and 5.\n\n2.6\n\nTwo-sided proof nets\n\nThe proof nets we have seen are also called one-sided proof nets. This implies that there is another kind: the\nso called two-sided proof nets. Their existence is justified by the fact, that systems in the sequent calculus can\nalso come in a two-sided version. Here is a two-sided sequent calculus system for MLL\u2212 :\nid\n\nexchL\n\nOL\n\nA\u22a2A\n\n\u0393, B, A, \u0393\u2032 \u22a2 \u2206\n\u0393, A, B, \u0393\u2032 \u22a2 \u2206\n\n\u2032\n\n\u0393, \u0393 , A O B \u22a2 \u2206, \u2206\n\u0393, A, B \u22a2 \u2206\n\n\u000fR\n\n\u0393, A \u000f B \u22a2 \u2206\n\n\u0393 \u22a2 A, \u2206 \u0393\u2032 , B \u22a2 \u2206\u2032\n\u0393, \u0393 , A \u22b8 B \u22a2 \u2206, \u2206\n*\u22a5 L\n\n\u0393, \u0393 \u22a2 \u2206, \u2206\u2032\n\n\u0393 \u22a2 A, \u2206\n\n\u0393 \u22a2 \u2206, B, A, \u2206\u2032\n\u0393 \u22a2 \u2206, A, B, \u2206\u2032\n\u0393 \u22a2 A, B, \u2206\n\u0393 \u22a2 A O B, \u2206\n\n\u0393 \u22a2 A, \u2206 \u0393\u2032 \u22a2 B, \u2206\u2032\n\n\u0393, A \u22a2 B, \u2206\n\u0393 \u22a2 A \u22b8 B, \u2206\n\n*\u22a5 R\n\n\u22a5\n\n\u0393, A \u22a2 \u2206\n\n(27)\n\n\u0393, \u0393\u2032 \u22a2 A \u000f B, \u2206, \u2206\u2032\n\n\u22b8R\n\n\u2032\n\nA, \u0393\u2032 \u22a2 \u2206\u2032\n\n\u2032\n\nOR\n\n\u2032\n\n\u2032\n\n\u0393 \u22a2 \u2206, A\n\nexchR\n\n\u0393, A \u22a2 \u2206 \u0393\u2032 , B \u22a2 \u2206\u2032\n\n\u000fL\n\n\u22b8L\n\ncut\n\n\u0393, A \u22a2 \u2206\n\u0393 \u22a2 A\u22a5 , \u2206\n\nNow sequents are not just lists of formulas, but pairs of lists of formulas, and these pairs of lists are separated by\na \u22a2 . One reason for using two-sided sequent systems is that one can treat negation as a proper connective (i.e.,\nit is not pushed down to the atoms as in the one-sided version) and that one can have implication as primitive\n(i.e., there are rules for implication, instead of just defining A \u22b8 B = A\u22a5 O B). Of course, the disadvantage\nis that we heavily increase the number of rules. Here is an example of a two-sided derivation using the rules\nin (27):\nid\nid\n\u22b8L\n\na\u22a2a\n\nOL\n\u22a5\n\nOR\n5 For\n\nreferences, see Section 2.9.\n\nRR n\u00b0 6013\n\na\u22a2a\n\na\u22a5 , a \u22a2\n\na, a \u22b8 a\u22a5 , a \u22a2\n\nid\n\na\u22a2a\n\n\u22a5\n\n* R\n\u000fL\n\n*\u22a5 L\n\na, a \u22b8 a , a O a \u22a2 a\na, a \u22b8 a\u22a5 \u22a2 a, (a O a)\u22a5\n\na \u000f(a \u22b8 a\u22a5 ) \u22a2 a, (a O a)\u22a5\na \u000f(a \u22b8 a\u22a5 ) \u22a2 a O(a O a)\u22a5\n\n(28)\n\n\f30\n\nLutz Strassburger\n\nWe omitted the instances of the exchange rule in this example.\nWe can follow ideology 2.2.1 to translate two-sided sequent proofs into proof nets. But we have to assign to\neach rule and each formula appearing in the net a label which indicated whether the rule/formula comes from\nthe left-hand side or the right-hand side of the sequent. We use here the letters L and R. Figure 9 shows how\nthe sequent rules in (27) are translated into proof nets. We omitted the rules for exch (compare with Figure 1)\nand *\u22a5 . Here is the result of translating (28):\nid\n\nid\n\nid\n\na:R\na:L\n\na:L\n\na:R\n\n*\u22a5 L\na:L\n\nOL\na:R\n\na\u22a5 :L\n\na O a:L\n\n(29)\n\n*\u22a5 R\n\n\u22b8L\n\n(a O a)\u22a5 :R\n\na \u22b8 a\u22a5 :L\n\n\u000fL\n\nOR\n\na \u000f(a \u22b8 a\u22a5 ):L\n\na O(a O a)\u22a5 :R\n\nNote that the nets in (7) and (29) are almost identical from the graph-theoretical viewpoint. The only differences\nare that the labels are different and that there are additional *\u22a5 L and *\u22a5 R nodes in (29).\nOf course, we can also use the flow-graph method to obtain a proof net from (28):\nid\nid\n\u22b8L\n\n\u22a5\n\na\u22a2a\n\nOL\n\u22a5\n\nOR\n\nid\n\n\u22a5\n\na ,a \u22a2\n\na,, a \u22b8 a\u22a5 , a \u22a2\n\nid\n\na\u22a2a\n\n\u22a5\n\n* R\n\u000fL\n\n* L\n\nid\n\na\u22a2a\n\na,, a \u22b8 a , a O a \u22a2 a\n\n\u2192\n\na\u22a2a\n\nOL\n\u22a5\n\n\u22a5\n\na \u000f(a\n\u000f( \u22b8 a ) \u22a2 a,, (a\n( O a))\n\na \u000f(\n\u000f(a \u22b8 a\u22a5 ) \u22a2 a O(\nO(a O a))\u22a5\n\n\u000fL\nOR\n\n* L\n\na\u22a2a\n\na\u22a5 , a \u22a2\n\na,, a \u22b8 a\u22a5 , a \u22a2\n\nid\n\na\u22a2a\n\n\u22a5\n\n* R\n\na,, a \u22b8 a\u22a5 \u22a2 a,, ((a O a))\u22a5\n\u22a5\n\n\u22b8L\n\n\u22a5\n\na,, a \u22b8 a , a O a \u22a2 a\n\n(30)\n\na,, a \u22b8 a\u22a5 \u22a2 a,, ((a O a))\u22a5\n\na \u000f(\n\u000f(a \u22b8 a\u22a5 ) \u22a2 a,, ((a O a))\u22a5\na \u000f(\n\u000f(a \u22b8 a\u22a5 ) \u22a2 a O(a\nO( O a))\u22a5\n\nHowever, observe that from the flow-graph we do not get a priori the information what is left and what is right.\nThis means, for a proper definition of pre-proof net, we need to find another way to determine when we may allow\nan identity link between a pair of atoms. To do so, we use polarities: we assign to each subformula appearing\nin the sequent a unique polarity, that is, an element of the set {\u2022, \u25e6}, where \u2022 can be read as left/negative/up\nand \u25e6 as right/positive/down. Let \u0393 \u22a2 \u2206 be given. Then\n(i) all formulas in \u0393 get polarity \u2022, and all formulas in \u2206 get polarity \u25e6;\n(ii) whenever A \u000f B has polarity \u2022 (resp. \u25e6), then A and B also get polarity \u2022 (resp. \u25e6);\n(iii) whenever A O B has polarity \u2022 (resp. \u25e6), then A and B also get polarity \u2022 (resp. \u25e6);\n(iv) whenever A \u22b8 B has polarity \u2022 (resp. \u25e6), then A gets polarity \u25e6 (resp. \u2022) and B gets polarity \u2022 (resp. \u25e6);\n(v) whenever A\u22a5 has polarity \u2022 (resp. \u25e6), then A gets polarity \u25e6 (resp. \u2022).\nNote that only for negation and implication there is a change of polarity. We can now give the following\ndefinition:\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n31\n\n\u03c01\n\nid\nA:L\n\n\u03c02\nA:R\n\nA:R\n\nA:L\n\ncut\n\n\u0393:L, \u2206:R\n\n\u03c01\n\n\u03c02\nA:L\n\n\u03c0\nA:R B:R\n\nB:L\n\nOL\n\u0393:L, \u2206:R\n\nOR\n\u0393\u2032 :L, \u2206\u2032 :R\n\nA O B:L\n\n\u0393:L\n\n\u03c0\n\nA O B:R\n\n\u03c01\n\n\u000fR\n\u0393:L, \u2206:R\n\n\u2206:R\n\nA \u000f B:L\n\n\u03c01\n\nA \u000f B:R\n\n\u03c02\n\nA:L B:R\n\nB:L\n\nA \u22b8 B:L\n\n\u0393\u2032 :L, \u2206\u2032 :R\n\n\u03c0\n\n\u22b8L\n\u0393:L, \u2206:R\n\nB:R\n\nA:R\n\n\u000fL\n\nA:R\n\n\u2206:R\n\n\u03c02\n\nA:L B:L\n\n\u0393:L\n\n\u0393\u2032 :L, \u2206\u2032 :R\n\n\u22b8R\n\u0393\u2032 :L, \u2206\u2032 :R\n\n\u0393:L\n\nA \u22b8 B:R\n\n\u2206:R\n\nFigure 9: From two-sided sequent calculus to proof nets (sequent calculus rule driven)\n\n2.6.1 Definition A two-sided pre-proof net consists of a list of formula trees, which is correctly polarized\naccording to (ii)-(v) above, together with a perfect matching of the set of leaves, such that two leaves are\nmatched only if they are labeled by the same atom and have different polarity. If there are cuts in the net, then\nthe two cut formulas have to be identical and must have different polarity.\nAs an example we give here the net corresponding to (30):\n\na\u2022\n\na\u25e6\n\na\u25e6\n*\u22a5\n\na\u25e6\n\na\u2022\n\n\u2022\n\nO\u2022\n\n\u22b8\u2022\n\u000f\u2022\nRR n\u00b0 6013\n\na\u2022\n\n*\u22a5\nO\u25e6\n\n\u25e6\n\n(31)\n\n\f32\n\nLutz Strassburger\n\nwhere we put the polarity as superscript to nodes in the trees. It should not come at a surprise that we get\n(again, up to some trivial change in the notation) the same proof nets as with the first method.\nThe correctness criteria are exactly the same as we discussed them for one-sided proof nets in Section 2.5.\nThe only thing to note is that the \u000f\u2022 , O\u25e6 , and \u22b8\u25e6 behave as the O in Section 2.5, i.e., remove one edge to a\nchild to get a switching, and the \u000f\u25e6 , O\u2022 , and \u22b8\u2022 behave as the \u000f in Section 2.5. Clearly, the example in (31)\nis correct.\nLet us now for the time being forget the \u22b8 and *\u22a5 nodes that flip the polarity. Then we can draw the\ntwo-sided proof net in a two-sided way. Things with polarity \u2022 are drawn on the top and things with polarity\n\u25e6 are drawn at the bottom. In between we put the identity links. Since we now have again negated atoms, we\nhave to change the condition on the identity links: Two atoms occurrences may be linked, if they are the same\nand have different polarity, or if they are dual to each other and have the same polarity. Here are two examples:\n\u000f\u2022\n\n\u000f\u2022\nO\u2022\n\nO\u2022\nb\u22a5\u2022\n\nc\u22a5\u2022\n\nc\u2022\n\nb\u2022\n\na\u2022\n\na\u22a5\u2022\n(32)\n\nb\u22a5\u25e6\n\na\u25e6\n\na\u22a5\u25e6\n\nc\u22a5\u25e6\n\nb\u25e6\n\nc\u25e6\n\u000f\u25e6\n\n\u000f\u25e6\nO\u25e6\n\nO\u25e6\n\nNote that these are exactly the nets that are obtained via the flow-graph method from the calculus of structures\nderivations in (14):\n( \u22a5 O c\u22a5 ) \u000f c\n(b\n(a\n( O b)) \u000f a\u22a5\ns\ns \u22a5\nb O(c\n( \u000f a\u22a5 ) O b\n(a\nO( \u22a5 \u000f c))\ni\u2191\ni\u2191\nb\u22a5\nb\n(33)\ni\u2193 \u22a5\ni\u2193 \u22a5\n\u22a5\nb \u000f(a\n\u000f( O a )\n( O c)) \u000f b\n(c\ns\ns \u22a5\na O(\nO(b\u22a5 \u000f a\u22a5 )\nc O(c\nO( \u000f b))\nThis is the second justification for the existence of two-sided proof nets. They are directly obtained via flowgraphs from derivations in the calculus of structures. As before, the correctness criterion does not change.\nNote that from the graph-theoretical point of view, there is now not much difference between \u000f\u25e6 and O\u2022 ,\nbetween \u000f\u2022 and O\u25e6 , between a\u25e6 and a\u22a5\u2022 , and between a\u2022 and a\u22a5\u25e6 (at least for MLL\u2212 ). For this reason, the\nnets in (32) could also be written as\nO\n\nO\n\u000f\n\n\u000f\nb\n\nc\u22a5\n\nc\n\nb\u22a5\n\na\u22a5\n\na\n(34)\n\nb\u22a5\n\na\n\na\u22a5\n\nc\u22a5\n\nc\n\u000f\n\n\u000f\nO\n\nb\n\nO\n\nNow they are in fact the same net just turned upside down. This is no surprise since the two derivations in (33)\nare dual to each other.\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n33\n\nLet us emphasize that it does not matter in which way the graph is drawn on the paper. The net on the\nleft in (32,34) could also be drawn as\n\nc\u2022\n\nb\u22a5\u2022\n\nc\u22a5\u2022\n\nb\u22a5\u25e6\n\na\u25e6\n\nO\u2022\n\u000f\u2022\n\na\u22a5\u25e6\n\u000f\u25e6\n\nc\u22a5\n\nc\n\nb\n\nb\u22a5\n\na\n\na\u22a5\n\nor\n\n(35)\n\u000f\n\nO\u25e6\n\nO\n\n\u000f\nO\n\nIn the case of MLL\u2212 it makes no difference whether one prefers to put a proof net in a \"one-sided\" (35) or \"twosided\" (32,34) way on the paper, and whether one prefers to use the labels {\u2022, \u25e6} for left/right (or up/down) as\nin (32) or to live without them as in (34).\nThis rather trivial observation can be nailed down in the following theorem which strengthens Theorems\n2.4.1 and 2.5.21.\n2.6.2 Theorem\nequivalent:\n\nLet n, m \u2264 1 and A1 , . . . , An , B1 , . . . , Bm be any MLL\u2212 formulas. Then the following are\n\n(i) There is a sequent calculus proof\n\n??\n?? \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a5\n\u22a2 A1 , . . . , A\u22a5\nn , B1 , . . . , Bm\n\n(36)\n\n\u2212\nk\nk\n\u22a5\nA\u22a5\nO\n*\n*\n*\nO\nA\nO\nB1 O . . . O Bm\n1\nn\n\n(37)\n\n(ii) There is a calculus of structures proof\n\n(iii) There is a (two-sided) sequent calculus proof\n??\n?? \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\nA1 , . . . , An \u22a2 B1 , . . . , Bm\n\n(38)\n\nA1 \u000f * * * \u000f An\nk\nk\nB1 O . . . O Bm\n\n(39)\n\n(iv) There is a calculus of structures proof\n\nFurthermore all of (36)\u2013(39) can be constructed such that they all yield the same proof net.\nThis section can be summarized a follows: Two-sided proof nets are a special kind of one-sided proof nets,\nand one-sided proof nets are a special kind of two-sided proof nets. Whether one prefers the one-sided or the\ntwo-sided version is a matter of personal taste and also a matter of economics in notation.\nThis observation is not restricted to the special case of MLL\u2212 . Every theory of two-sided proof nets can\ntrivially transformed into a theory of one-sided proof nets, and vice versa. By using polarities as described\nabove, the one-sided version can usually be presented in a more compact way than the two-sided version. For\nthis reason, we will in the following stay in the one-sided world.\n\n2.7\n\nCut elimination\n\nLet us now briefly discuss an issue that usually excites proof theorists: In a well-designed deduction system,\nevery formula/sequent that is derivable, can also be derived without using the cut-rule. Proving this fact is\nusually a highly nontrivial task and involves (depending on the logic in question) very sophisticated proof theory.\nBut here we do not have time and space to go into the details of cut elimination and its important consequences. We discuss here only a very simple logic, namely MLL\u2212 , for which cut elimination is easy. For the\nsequent calculus it is stated as follows:\nRR n\u00b0 6013\n\n\f34\n\nLutz Strassburger\n\n2.7.1\n\nTheorem\n\nFor every proof\n\n??\n?? \u03a0 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2\u0393\n\nusing the rules in (1) there is a proof\n\n??\n??\u03a0\u2032 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2\u0393\n\nof the same conclusion, that does not use the cut-rule.\nProof (Sketch): We do only sketch the direct proof within the sequent calculus, because, even in the simple\ncase of MLL\u2212 , carrying out all the details is quite tiresome and boring. But the basic idea is simple: The cut\nrule is permuted up in the proof until it disappears. Most cases are trivial rule permutations similar to the one\nin (10). But there are two so called key cases which are not trivial. Here is the first one:\n\nO\ncut\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A, B, \u2206\n\u22a2 \u0393, A O B, \u2206\n\n\u000f\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393\u2032 , B \u22a5\n\n??\n??\u03a03 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A\u22a5 , \u2206\u2032\n\ncut\n\n\u22a2 \u0393\u2032 , B \u22a5 \u000f A\u22a5 , \u2206\u2032\n\u2032\n\n\u2032\n\n\u22a2 \u0393, \u2206, \u0393 , \u2206\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A, B, \u2206\ncut\n\n\u2740\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393\u2032 , B \u22a5\n\n\u22a2 \u0393, A, \u2206, \u0393\u2032\n\n??\n??\u03a03 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A\u22a5 , \u2206\u2032\n\n\u22a2 \u0393, \u2206, \u0393\u2032 , \u2206\u2032\n\nwhere some instances of the exch-rule have been omitted. The second key case lets the cut disappear when it\nmeets an identity rule at the top of the proof:\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n??\n\u007f\n??\u03a01 \u007f\u007f\u007f\nid\n\u22a5\n\u22a5\n?? \u007f\u007f\n\u22a2 A ,\u0393\n\u22a2 A ,A\n\u007f\ncut\n\u22a2 A\u22a5 , \u0393\n\u22a2 A\u22a5 , \u0393\n\u2740\nThe difficult part of a cut elimination proof is usually to show termination of this \"permuting the cut up\"\nbusiness, which is done by coming up with a clever induction measure. We leave that to the reader.\n\u2293\n\u2294\n2.7.2\n\nExercise\n\nComplete the proof of Theorem 2.7.1. The following things still have to be done:\n\n1. Find a correct way of dealing with the exch-rule. (Hint: Design a \"super-cut-rule\", that has exchange\nbuilt in.)\n2. Show the termination of the process of permuting up the cut, i.e., find the right induction measure.\n3. Show that after the termination, the resulting proof is indeed cut-free.\nIf you have seen a cut elimination argument before, then this exercise should not be too hard for you. If you\nhave never before seen some cut elimination, you will learn a lot about it by doing this exercise. In any case,\nthis (rather painful) exercise will help you to admire the beauty of proof nets.\nLet us now turn to cut elimination in the calculus of structures, where it means that not only the cut (i.e.,\nthe rule i\u2191), but the whole up-fragment (i.e., all rules with the \u2191 in the name) are not needed for provability.\n2.7.3\n\nTheorem\n\nIf there is a proof\n\u2212\n{i\u2193, i\u2191, \u03c3\u2193, \u03c3\u2191, \u03b1\u2193, \u03b1\u2191, s} kk \u03a0\nA\n\nusing all rules in Figure 5, then there is a proof\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a0\nA\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n35\n\nthat has the same conclusion A and that does not use any up-rule.\nProof (Sketch): The easy trick of permuting the cut up does not work in the presence of deep inference. For\nthis reason completely different techniques have to be used to eliminate the up-fragment. But as in the sequent\ncalculus, carrying out all the details is technical and boring. For this reason we will give here only a sketch.\nThe first observation to make is that every up-rule\nr\u2191\n\nS{B \u22a5 }\nS{A\u22a5 }\n\ncan be replaced by a derivation using only i\u2193, i\u2191, s, r\u2193:\ni\u2193\nr\u2193\ns\ni\u2191\n\nS{B \u22a5 }\nS{(A\u22a5 O A) \u000f B \u22a5 }\nS{(A\u22a5 O B) \u000f B \u22a5 }\n\u22a5\n\n(40)\n\n\u22a5\n\nS{A O(B \u000f B )}\nS{A\u22a5 }\n\nThis means that only the rule i\u2191 needs to be eliminated. The second observation is, that this rule can be reduced\nto its atomic version:\nA \u000f A\u22a5\na \u000f a\u22a5\n\u2740\ni\u2191\nai\u2191\n\ni\u2191\n\nS{B O(A \u000f A\u22a5 )}\n\nai\u2191\n\n\u2740\n\nS{B}\n\nS{B O(a \u000f a\u22a5 )}\nS{B}\n\nThis6 is done by systematically replacing\n\u03b1\u2191\ni\u2191\n\nS{B O((A O C) \u000f(C \u22a5 \u000f A\u22a5 ))}\nS{B}\n\nby\n\ns\ni\u2191\n\nS{B O((A O C) \u000f(C \u22a5 \u000f A\u22a5 ))}\nS{B O(((A O C) \u000f C \u22a5 ) \u000f A\u22a5 )}\nS{B O((A O(C \u000f C \u22a5 )) \u000f A\u22a5 )}\ni\u2191\n\n(41)\n\nS{B O(A \u000f A\u22a5 )}\nS{B}\n\nNow the rules to eliminate are ai\u2191, \u03b1\u2191, and \u03c3\u2191 (see Exercise 2.7.4).7 For this, we use Guglielmi's powerful\nsplitting lemma, which says that whenever there is a proof\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a0\n\n(42)\n\nS{C O(A \u000f B)}\nthen there are formulas KA and KB , such that for every formula C, we have derivations\nKA O KB\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} k\nk \u03a01\nS{C}\n\n,\n\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a02\nKA O A\n\n,\n\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a03\n\n(43)\n\nKB O B\n\nAdditionally, we get a derivation\nKA O KB O X\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a0\u03031\nS{C O X}\n6 By\n\n(44)\n\nduality, we can do the same trick to the rule i\u2193. Compare with what we did in (11) to the id-rule in the sequent calculus.\nmight seem silly to first explain that only the rule i\u2191 needs to be eliminated, and then say that also the other up-rules need\nto be taken care of. The reason is that with the trick in (40) all up-rules can be removed, but by reducing the rule i\u2191 to it atomic\nversion, only some of them are reintroduced. This is crucial for more sophisticated logics than MLL\u2212 .\n7 It\n\nRR n\u00b0 6013\n\n\f36\n\nLutz Strassburger\n\nfor every formula X. The crucial point of this lemma is that it speaks only about the down-fragment. Furthermore we need a variant of the splitting lemma, which says that whenever we have\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} k\nk\u03a0\n\n,\n\nthen we also have\n\nC Oa\n\na\u22a5\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a0\u2032\nC\n\n.\n\nNow we can remove the rule ai\u2191 starting with the topmost instance as follows. What we have is\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a0\nai\u2191\n\nS{B O(a \u000f a\u22a5 )}\nS{B}\n\nVia the splitting lemma, we can get\nK a O K a\u22a5\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} k\nk \u03a01\nS{B}\n\n,\n\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a02\nKa O a\n\n,\n\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a03\nK a\u22a5 O a \u22a5\n\nNow we can get from \u03a02 and \u03a03 the following:\na\u22a5\n\u2032\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} k\nk \u03a02\nKa\n\nand\n\na\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a0\u20323\nK a\u22a5\n\nnow we can build:\nai\u2193\n\na\u22a5 O a\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a0\u20322 O \u03a0\u20323\nK a O K a\u22a5\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a01\nS{B}\nwhich gives us a proof for S{B} that does not use any up-rules.\n\n\u2293\n\u2294\n\n2.7.4 Exercise\nafter doing (41).\n\nExplain, why not only the rules ai\u2191 and \u03b1\u2191, but also the rule \u03c3\u2191 needs to be eliminated\n\n2.7.5\n\nComplete the proof of Theorem 2.7.3. Things that remain to be done:\n\nExercise\n\n1. Show how the rules \u03b1\u2191 and \u03c3\u2191 can be eliminated in a similar way as ai\u2191. Hint: Use \u03a0\u03031 instead of \u03a01 . For\n\u03c3\u2191 plug in B \u000f A for X. For \u03b1\u2191, you need to apply splitting twice.\n2. Prove the splitting lemma. This is the really hard part. Hint: First show the lemma for S{ } = { }\n(shallow splitting). To do so, proceed by induction on the length of \u03a0 and the size of C O(A \u000f B). Then\nshow the lemma for arbitrary context S{ }. For this, proceed by induction on S{ }.\n3. Show that the rule\ni\u2191\n\nA \u000f A\u22a5\n\nis not needed for provability, i.e., it is impossible to prove \"nothing\". Hint: You need a variant of splitting,\nsaying, if there is a proof\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a0\nA\u000fB\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\nthen there are proofs\n\n37\n\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a02\n\n\u2212\n{i\u2193, \u03c3\u2193, \u03b1\u2193, s} kk \u03a03\n\nand\n\nB\n\nA\ni.e., S{ }, C, KA , and KB are all \"empty\".\n\nProving cut elimination via splitting in the calculus of structures is in the unit-free case a little more messy\nthan in the case with units because many cases need to be considered separately that could be treated together\nin the presence of units.\nLet us now see how proof nets deal with the problem of cut elimination. Of course, the main point to make\nhere is that cut elimination will become considerably simpler:\nConsider the following reduction rules on pre-proof nets with cuts:\nid\nA\u22a5\n\nA\n\n\u2740\n\nA\n\n(45)\n\nA\n\ncut\nand\nA\u22a5\n\nB\u22a5\n\nB\n\nA\n\nO\n\nB\u22a5\n\nB\n\n\u000f\n\n\u2740\n\ncut\n\nA\n\ncut\n\ncut\nTheorem\n\n(46)\n\nB \u22a5 \u000f A\u22a5\n\nAOB\n\n2.7.6\n\nA\u22a5\n\nThe cut reduction relation defined by (45) and (46) terminates and is confluent.\n\nProof: Showing termination is trivial because in every reduction step the size of the net decreases. For showing\nconfluence, note that the only possibility for making a critical pair is when two cuts want to reduce with the\nsame identity link. Then the situation must be of the shape:\nid\nA\n\nid\nA\u22a5\n\nid\nA\u22a5\n\nA\n\ncut\n\nA\n\nA\u22a5\n\ncut\n\nBut no matter in which order and with which identity we reduce the cuts, the final result will always be\nid\nA\u22a5\n\nA\n\n\u2293\n\u2294\n\nHence we also have confluence.\nHowever, it could happen, that we end up in a situation like\nid\nA\u22a5\n\nA\n\ncut\nwhere we cannot reduce any further. That something like this cannot happen if we start out with a correct net\nis ensured by the following theorem, which says that the cut reduction preserves correctness.\nRR n\u00b0 6013\n\n\f38\n\nLutz Strassburger\n\n2.7.7 Theorem Let \u03c0 and \u03c0 \u2032 be pre-proof nets such that \u03c0 reduces to \u03c0 \u2032 via the reductions (45) and (46).\nIf \u03c0 is correct, then so is \u03c0 \u2032 .\nProof: For proving this, let us use the RB-correctness criterion. Written in terms of RB-graphs, the two\nreduction rules look as follows:\n\u2740\n(47)\nand\n(48)\n\n\u2740\n\nThat the first rule preserves RB-correctness is obvious because it just shortens an existing path. For the second\nrule, we proceed by way of contradiction. First, assume that the graph on the right contains an AE-cycle, while\nthe one on the left does not. There are three possibilities:\n1. The AE-cycle does not contain one of the new B-R-B-paths. Then the same cycle is also present on the\nleft. Contradiction.\n2. The AE-cycle contains exactly one of the new B-R-B-paths. Then, as before, the same cycle is also present\non the left. Contradiction.\n3. The AE-cycle contains both of the new B-R-B-paths. Then we can construct an AE-cycle on the left that\ncomes in at the upper left corner, goes down through the \u000f-link, and goes out at the lower left corner.\nAgain, we get a contradiction.\n\u2293\n\u2294\n\nThat AE-path connectedness is preserved is shown in a similar way.\n\n2.7.8 Exercise Complete the proof of Theorem 2.7.7, i.e., show that if we apply (48) to an RB-correct net,\nthen in the result every pair of vertices is connected by an AE-path. Hint 1: Note that the two rightmost vertices\nin (48) must be connected by an AE-path that does not touch the new B-R-B-paths (why?). Hint 2: You will\nneed the fact that the first net is also AE-cycle free.\nThe important point of Theorem 2.7.7 is that it allows us to give short proofs of Theorems 2.7.1 and 2.7.3:\nLet \u03a0 be a proof with cuts in MLL\u2212 given in the sequent calculus or the calculus of structures. We can translate\n\u03a0 into a proof net \u03c0, as described in Sections 2.2\u20132.4 and remove the cuts from the proof net as described above.\nThis gives us a proof net \u03c0 \u2032 , which we can translate back to the sequent calculus or the calculus of structures.\nThis works because removing the cuts from the proof net preserves the property of being correct (i.e., being a\nproof net), and translating back does not introduce any new cuts.\nThis raises an important question: Suppose we start out with a proof \u03a0 with cuts in MLL\u2212 (given in sequent\ncalculus or the calculus of structures). Now we could first remove the cuts as sketched out in the proofs of\nTheorems 2.7.1 and 2.7.3, and then translate the resulting cut-free proof \u03a0\u2032 into a proof net \u03c01\u2032 . Alternatively,\nwe could first translate \u03a0 into a proof net \u03c0, and then remove the cuts from \u03c0, to obtain the cut-free proof net\n\u03c02\u2032 . Do we get the same result? Is \u03c01\u2032 = \u03c02\u2032 ?\nThe answer is of course yes. To see this, note that the cut reduction steps in the sequent calculus either\npreserve the proof net (if the cut is just permuted up via a trivial rule permutation) or do exactly the same as\nthe cut reduction steps for proof nets.\nThe same is true for the calculus of structures. The proof of the splitting lemma is designed such that it\npreserves the net. To make this formally precise would go beyond the scope of these lecture notes, but by\ncomparing Figures 7 and 8 the reader should get an idea.\nWe can summarize this by the following commuting diagram:\nproof with cuts\n(in SC or CoS)\ncut elimination\n(in SC or CoS)\ncut-free proof\n(in SC or CoS)\n\nproof net with cuts\n\ncut elimination\n(in proof nets)\n\ncut-free proof net\n\n(49)\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n39\n\nOur basic introduction into the theory of proof nets for MLL\u2212 is now finished. However, a very important\nand fundamental question has not yet been mentioned:\n2.7.9 Big Question Let \u03c0 and \u03c0 \u2032 be two proof nets such that \u03c0 \u2032 is obtained from \u03c0 by applying some cut\nreduction steps. Do \u03c0 and \u03c0 \u2032 represent the same proof?\nBy comparing (7) and (9), one might be tempted to say no. But by looking at Figures 3 and 7, one is\ntempted to say yes. Furthermore, from the viewpoint of proof nets it makes no difference, whether we eliminate\nthe cut from\n??\n??\n??\u03a01 \u007f\u007f\u007f\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n\u007f\n\u007f\n\u22a2 A\u22a5 , B\n\u22a2 B\u22a5, C\ncut\n\u22a2 A\u22a5 , C\nin the sequent calculus or whether we perform the the composition\nA\n\u03a01 kk\nB\n\u03a02 kk\nC\n\n\u2192\n\nA\nk\nk\nC\n\nin the calculus of structures (no matter whether we use one-sided or two-sided proof nets, cf. Section 2.6).\nIn the following section we are going to give another justification for the \"yes\", which is independent from\nproof nets, sequent calculus, calculus of structures, or any other way of presenting proofs.\n\n2.8\n\n*-Autonomous categories (without units)\n\nIn this section we will introduce the concept of *-autonomous categories. We do not presuppose any knowledge\nof category theory. We introduce what we need on the way along. It is not much anyway. The basic idea is to\ngive an abstract algebraic theory of proofs, which is based on the following postulates about proofs:\n(i) for every proof f of conclusion B from hypothesis A (denoted by f : A \u2192 B) and every proof g of conclusion\nC from hypothesis B (denoted by g : B \u2192 C) there is a uniquely defined composite proof g \u25e6f of conclusion\nC from hypothesis A (denoted by g \u25e6 f : A \u2192 C),\n(ii) this composition of proofs is associative,\n(iii) for each formula A there is an identity proof 1A : A \u2192 A such that for f : A \u2192 B we have f \u25e61A = f = 1B \u25e6f ,\ni.e, it behaves as identity w.r.t. composition.\nThese axioms say no more and no less than that the proofs are the arrows in a category whose objects are the\nformulas. Let us now add more axioms that are specific to logic and do not hold in general in categories:\n(iv) Whenever we have a formula A and formula B, then A \u000f B is another formula. For two proofs f : A \u2192 C\nand g : B \u2192 D we have a uniquely defined proof f \u000f g : A \u000f B \u2192 C \u000f D, such that for all h : C \u2192 E and\nk : D \u2192 F , we have\n(h \u000f k) \u25e6 (f \u000f g) = (h \u25e6 f ) \u000f(h \u25e6 g) : A \u000f B \u2192 E \u000f F .\n(50)\nUsing category theoretical language, Axiom (iv) just says that \u000f is a bifunctor. What does this mean? Consider\nthe following two derivations (using the notation from the calculus of structures):\nA\u000fB\nf \u000fB k\nk\nC \u000fB\nC \u000fg k\nk\nC \u000fD\n\nRR n\u00b0 6013\n\nand\n\nA\u000fB\nA \u000f g kk\nA\u000fD\nf \u000f D kk\nC \u000fD\n\n(51)\n\n\f40\n\nLutz Strassburger\n\nIn the left one we use first f to go from A to C, and do nothing to B,8 and then use g to go from B to D\n(and do nothing to C). In the right derivation, we first use g to go from B to D, and then f to go from A to\nC. Equation (50) says that the two derivations with premise A \u000f B and conclusion C \u000f D in (51) represent the\nsame proof, denoted by f \u000f g. Mathematicians came up with a very clever way of writing an equation between\nobjects as in (51), namely, via commuting diagrams. Instead of writing the two derivations in (51) and saying\nthey are equal, we write:\nA\u000fB\nThe diagram\n\nA\u000fg\n\n/ A\u000fD\n\n\u000f\nC \u000fB\n\ncommutes .\n\nf \u000fD\n\nf \u000fB\nC \u000fg\n\n\u000f\n/ C \u000fD\n\nFrom the proof theoretical viewpoint, this equation is indeed wanted. The difference between the two derivations\nin (51) is an artefact of syntactic bureaucracy. The kind of bureaucracy in exhibited in (51) is called bureaucracy\nof type A. This implies that there must also be a bureaucracy of type B. Consider the following two derivations:\nA \u000f(B O C)\nf \u000f(B O C) k\nk\nA\u2032 \u000f(B O C)\ns \u2032\n(A \u000f B) O C\n\ns\n\nA \u000f(B O C)\n\n(A \u000f B) O C\n(f \u000f B) O C kk\n(A\u2032 \u000f B) O C\n\nand\n\n(52)\n\nIn the left one we first use the proof f , taking us from A to A\u2032 (and doing nothing to B and C), and then we\napply the switch rule. In the derivation on the right we first apply the switch rule, and then do f . Clearly the\ntwo are essentially the same and should be identified eventually. Let us write this as commuting diagram:\nA \u000f(B O C)\n\nsA,B,C\n\n/ (A \u000f B) O C\n(f \u000f B) O C\n\nf \u000f(B O C)\n\n\u000f\nA \u000f(B O C)\n\u2032\n\n(53)\n\n\u000f\n/ (A \u000f B) O C\n\u2032\n\nsA\u2032 ,B,C\n\nUsing category theoretical language, equation (53) says precisely that the morphism sA,B,C : A \u000f(B O C) \u2192\n(A \u000f B) O C is natural in A. Of course, in the end, we should have that switch is natural in all three arguments.\nBefore we can continue with our list of axioms, we need another category theoretical concept. Suppose we\nhave two formulas A and B and proofs f : A \u2192 B and g : B \u2192 A. If we have for some reason that f \u25e6 g = 1B\nand g \u25e6 f = 1A , then we say that A and B are isomorphic. In this case f and g are isomorphisms. The following\naxiom shows two examples:\n(v) For all formulas A, B, and C, we postulate the existence of proofs\n\u03b1A,B,C : A \u000f(B \u000f C) \u2192 (A \u000f B) \u000f C\n\u03c3A,B : A \u000f B \u2192 B \u000f A\n8 More\n\n(54)\n\nprecisely, it is the identity 1B taking us from B to B.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n41\n\nwhich are isomorphisms, and which are natural in all arguments,9 and which obey the following equations:\nA \u000f(B \u000f(C \u000f D))\n\nA \u000f \u03b1B,C,D\n\n/ A \u000f((B \u000f C) \u000f D)\n\u03b1A,B \u000f C,D\n\n\u03b1A,B,C \u000f D\n\n\u000f\n\u000f\n(A \u000f B) \u000f(C \u000f D)\n(A \u000f(B \u000f C)) \u000f D\nPPP\nPPP\nnnn\nP\nnnn\nn\nn\n\u03b1A \u000f B,C,DPPPP\nn\nvnn \u03b1A,B,C \u000f D\n(\n((A \u000f B) \u000f C) \u000f D\nA \u000f(B \u000f C)\n\nA \u000f \u03c3B,C\n\n/ A \u000f(C \u000f B)\n\u03b1A,C,B\n\n\u03b1A,B,C\n\n\u000f\n(A \u000f C) \u000f B\n\n\u000f\n(A \u000f B) \u000f C\n\u03c3A \u000f B,C\n\n\u000f\nC \u000f(A \u000f B)\n\n(55)\n\n(56)\n\n\u03c3A,C \u000f B\n\u03b1C,A,B\n\n\u000f\n/ (C \u000f A) \u000f B\n\n\u03c3A,B\n/ B \u000fA\nA \u000f BJ\nJJ\ntt\nJJ\nt\nt\nJ\ntt\n1A \u000f B JJ$\nztt \u03c3B,A\nA\u000fB\n\n(57)\n\nWhat we have defined so far, could be called a symmetric monoidal category without unit. This terminology\nis not standard, because the notion has not much been used in mathematics. What is standard is the notion\nof monoidal category and symmetric monoidal category (the first one being without the \u03c3), which additionally\nhave a distinguished unit object 1 and natural isomorphisms \u03bbA : 1 \u000f A \u2192 A and \u033aA : A \u000f 1 \u2192 A obeying the\n\u03b1A,1,B\n\u03c31,A\nequations\n/ (A \u000f 1) \u000f B\n/ A\u000f1\nA \u000f(1 \u000f B)\n1 \u000f AD\nMMM\nq\nD\nq\nDD\nzz\nMMM\nand\n(58)\nDD\nzz\nqqq\nz\nM\nq\nD\nM\nq\nz\n\u033a\nA \u000f \u03bbB\n\u03bbA\nD\" |zz A\nM&\nxqq \u033aA \u000f B\nA\nA\u000fB\nAn important property of monoidal categories is MacLane's coherence theorem. Stated in terms of proofs,\nit says the following:\n2.8.1 Theorem Let n \u2265 1 and A1 , . . . , An be formulas. Now let B and C be formulas built from A1 , . . . , An\nby using \u000f such that every Ai appears exactly once in B and C. If Axioms (i)\u2013(v) hold, then all proofs from\nB to C formed with the available data are equal. This proof always exists, is an isomorphism, and is natural in\nall n arguments.\nWe will not give a proof here.\nFor being able to really speak about logic and proofs, we need negation, which is introduced by the following\naxioms:\n9 At this point you should start to see why it makes sense to use the category theoretical language. Without it, we would have,\nfor example, to postulate for all formulas A, B, and C another proof \u03b1\u22121\nA,B,C such that the two derivations\n\nA \u000f(B \u000f C)\n\u03b1A,B,C k\nk\n(A \u000f B) \u000f C\nk\n\u03b1\u22121\nA,B,C k\nA \u000f(B \u000f C)\n\n(A \u000f B) \u000f C\nk\nk\nA \u000f(B \u000f C)\n\u03b1A,B,C k\nk\n(A \u000f B) \u000f C\n\n\u03b1\u22121\nA,B,C\nand\n\nare both doing nothing (i.e., are equal to the identity proof). Furthermore, we would need a lot of equations in the form of (52),\nin order to express the naturality.\n\nRR n\u00b0 6013\n\n\f42\n\nLutz Strassburger\n\n(vi) For every formula A there is another formula A\u22a5 , and for every proof f : A \u2192 B, there is another proof\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\n\u22a5\nf \u22a5 : B \u22a5 \u2192 A\u22a5 such that 1\u22a5\n\u2192 A\u22a5 for every\nA = 1A\u22a5 : A \u2192 A and such that (g \u25e6 f ) = f \u25e6 g : C\nf : A \u2192 B and g : B \u2192 C.\n(vii) For every formula A and proof f : A \u2192 B we have that A\u22a5\u22a5 = A and f \u22a5\u22a5 = f . (More precisely, the\nmapping A\u22a5\u22a5 \u2192 A is the identity on A).\nSpoken in category theoretical terms, Axiom (vi) says that (\u2212)\u22a5 is a contravariant endofunctor. With this,\nwe can define the O via A O B = (A\u22a5 \u000f B \u22a5 )\u22a5 . Axiom (vii) says that if we flip around a derivation twice, we\nget back where we started from.10 It also allows us to conclude that the O that we just defined has the same\nproperties as postulated for the \u000f in (iv) and (v), i.e., it is a bifunctor and carries a monoidal structure (without\nunit).\n2.8.2 Exercise Formulate the statements of Axioms (iv) and (v) for the O defined via A O B = (A\u22a5 \u000f B \u22a5 )\u22a5 ,\nand show that they follow from (i)\u2013(vii).\nBefore stating our final postulates about proofs, let us introduce the following notation. For two formulas\nA and B, we write Hom(A, B) for the set of proofs from A to B, and we write h1 (B) for the set of proofs of B\nthat have no premise.11\n(viii) For all formulas A, B, and C, there is a bijection\n\u03c6 : Hom(A \u000f B, C) \u2192 Hom(A, B \u22a5 O C)\n\n(59)\n\nwhich is natural in all three arguments.\n(ix) For all formulas A and B, we have a bijection\n\u03c6 : h1 (A\u22a5 O B) \u2192 Hom(A, B)\n\n(60)\n\nwhich is natural in both arguments and respects the monoidal structure.\nIn the case with units, Axiom (viii) would complete the definition of a *-autonomous category. It essentially\nsays that we are allowed to do currying and uncurrying. To see this, note that linear logic knows the connective\n\u22b8, standing for linear implication, defined via A \u22b8 B = A\u22a5 O B.12 Equation (59) now says that we can jump\nfreely back and forth between proofs A \u000f B \u2192 C and A \u2192 B \u22b8 C.13\nSince we do not have units, we also need (ix), which says that the proofs of A \u22b8 B are the same as the\nproofs A \u2192 B. To be precise, we need to give additional equation saying that h1 is a functor, i.e., every proof\nf : A \u2192 B is mapped to a function h1 (f ) : h1 (A) \u2192 h1 (B) such that composition and identity are preserved.\nFurthermore, the h1 needs to go well along with the monoidal structure, to say what that means exactly would\ntake us too far astray. But to give you an idea of the problem, let us figure out how we could construct a proof\nB \u2192 (A O A\u22a5 ) \u000f B, corresponding to the rule i\u2193 in Figure 5, by using the axioms (i)\u2013(ix). If we had a unit 1\ntogether with the equations (58), then it would be easy: we could start out with \u03bbA : 1 \u000f A \u2192 A, apply (59) to\nget\n\u03bb\u0302A = \u03c6(\u03bbA ) : 1 \u2192 A O A\u22a5\nBy (iv), we can form a proof \u03bb\u0302A \u000f 1B : 1 \u000f B \u2192 (A O A\u22a5 ) \u000f B. We can precompose this with \u03bb\u22121\nB : B \u2192 1 \u000f B,\nto get\n\u22a5\n(\u03bb\u0302A \u000f 1B ) \u25e6 \u03bb\u22121\nB : B \u2192 (A O A ) \u000f B\nConstructing this map without using the unit requires heavy category theoretical machinery that we are not\ngoing to show here. See Section 2.9 for references.\n10 What we impose here is also called strictness, and does usually not hold. For example, the double dual of a vector space is\nusually not the space itself. Even in the finite dimensional case we only have a natural isomorphism between A and A\u22a5\u22a5 .\n11 The reason for this notation is the following: Hom(A, B) is in fact the value of the functor Hom(\u2212, \u2212) in two arguments. The\nfunctor Hom(A, \u2212) in one argument is also written as hA . If there is a proper unit 1 then the proofs of A are the elements of the\nset Hom(1, A), i.e., h1 is a functor mapping every formula to its set of proofs. In h1 , the unit is virtual.\n12 As in classical logic, \"A implies B\" is the same as \"not A or B\".\n13 If you have never seen currying, think of a function f in two arguments, denoted by f : A \u00d7 B \u2192 C. This is essentially the same\nas a function f \u2032 : A \u2192 B \u2192 C, taking and argument from the set A and returning a function B \u2192 C which asks for an element of\nB to finally return the result in C.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n43\n\n2.8.3 Exercise We mentioned switch in (52) and (53) but we did not postulate it in (i)\u2013(ix). In this exercise\nyou are asked to construct sA,B,C : A \u000f(B O C) \u2192 (A O B) \u000f C, corresponding to the switch rule in Figure 5,\nby using (i)\u2013(viii). Hint: Start with the identity B \u000f C \u2192 B \u000f C and apply (59). You will also need the\nassociativity of O that you have constructed in Exercise 2.8.2.\nThe wonderful point of Axioms (i)\u2013(ix) is that they precisely describe the mathematical structure spanned\nby cut-free proof nets for MLL\u2212 . This means two things:\nFirst, the proof nets for MLL\u2212 that we discussed in the previous sections form a category: The objects are\nthe formulas and the maps A \u2192 B are the cut-free proof nets with conclusion \u22a2 A\u22a5 , B ,14 and the composition\ng \u25e6 f of two maps f : A \u2192 B and g : B \u2192 C is defined by eliminating the cut from\n\ncut\n\n??\n?? f \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A\u22a5 , B\n\n??\n?? g \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 B\u22a5, C\n\n\u22a2 A\u22a5 , C\n\nIn the calculus of structures, this corresponds to performing the composition\nA\nk\nk\nB\nk\nk\nC\n\n\u2192\n\nA\nk\nk\nC\n\nIt is easy to verify that this category, denoted by PN, obeys (i)\u2013(ix) (where h1 (A) is just the set of cut-free\nproof nets with conclusion A).\nSecond, the the category PN is the free category with this property. This means that whenever there is a\ncategory C , obeying (i)\u2013(ix), then there is a uniquely defined functor (i.e., map that preserves all the structure\ndefined in (i)\u2013(ix)) from PN to C .\n2.8.4 Theorem The category of cut-free proof nets for MLL\u2212 , with arrow composition defined by cut elimination, forms the free *-autonomous category without units (generated from the set A of propositional variables).\nAnother way of seeing this is that we can trivially translate proofs in the sequent calculus or the calculus of\nstructures into the free *-autonomous category (without units), by simply following the syntax. Theorem 2.8.4\nsays, that if we do this to two proofs \u03a01 and \u03a02 , we get the same map in the category, if and only if \u03a01 and \u03a02\nyield the same proof net after cut elimination.\nIn other words, if you have no objections against any of the Axioms (i)\u2013(ix), you must answer the Big\nQuestion 2.7.9 with yes.\nBut there is also a but: Let us emphasize that this yes is valid only for MLL\u2212 . What we have said in this\nsection does not allow us to draw any conclusions about any other logic.\n\n2.9\n\nNotes\n\nAs already mentioned in the introduction, the terminology of \"proof nets\" and \"bureaucracy\" is due to Girard.\nHe introduced proof nets along with sequent calculus presentation for linear logic in [Gir87]. He essentially\nfollowed Ideology 2.2.1 for obtaining his proof nets. The terminology \"coherence\" is due to MacLane. In [Mac63]\nhe proves the \"coherence theorem\" for symmetric monoidal categories. See also [Mac71]. The concept of\ncoherence graph is based in the work of Eilenberg, Kelly, and MacLane [EK66, KM71], who also provided the\nacyclicity condition and observed that it is preserved by composition, i.e., cut elimination. The observation that\ncut elimination is composition in a category is due to Lambek [Lam68, Lam69]. The terminology \"flow-graph\"\nis due to Buss [Bus91].15\nThe calculus of structures has been discovered by Guglielmi [Gug02], who initiated the systematic proof\ntheoretic investigation of the concept of deep inference. For more details on this see [GS01, BT01, Str03a, Br\u00fc03].\n14 Or,\n\nequivalently, the two-sided proof nets where A has polarity \u2022 and B has polarity \u25e6.\nspeaking, coherence graphs and flow graphs are not the same thing. But in the simple case of MLL\u2212 , the two notions\ncoincide.\n15 Strictly\n\nRR n\u00b0 6013\n\n\f44\n\nLutz Strassburger\n\nThe notion of \"correctness criterion\" is also due to Girard. In [Gir87] he gave the \"long-trip-criterion\" that\nwe did not present here. The splitting tensor theorem (our Lemma 2.5.6) also first appeared in [Gir87]. The\nproof given in Section 2.5 follows the presentation of Bellin and van de Wiele in [BvdW95], who also give a\nproof of Theorem 2.2.3 and discuss in more detail the relation between proof nets and trivial rule permutations.\nAnother well-written short discussion on this issue can be found in [Laf95]. Our second proof of Theorem 2.5.5\n(i.e., the one using the calculus of structures) follows the presentation in [Str03a]. However, the result is already\nimplicit present in the work of [DHPP99] and [Ret97]. A different way of proving Theorem 2.5.5 via the calculus\nof structures is presented in [Joi06].\nThe switching criterion (Definition 2.5.4 and Theorem 2.5.5) is due to Danos and Regnier [DR89]. For this\nreason the switching criterion is in the literature also called Danos-Regnier-criterion or DR-criterion. However,\nthe contraction criterion is also due to Danos and Regnier16 and should therefore also be called DR-criterion. See\n[Moo02, Pui01] for a more recent investigation of the contraction criterion. That (a version of) the contraction\ncriterion can be checked in linear time in the size of the net has been discovered by Guerrini [Gue99]. The\nRB-correctness criterion has been found by Retor\u00e9 [Ret93, Ret99a, Ret03], who provided a detailed analysis of\nproof nets using RB-graphs in various forms.\nThe concept of two-sided proof nets must be considered as folklore. In several early papers on proof nets\nthe possibility of a two-sided version is mentioned, but the details are never carried out because the one-sided\nversion is more economic. In the literature, two-sided proof nets are used when for some reason the authors\nwant to avoid the use of negation (e.g., [BCST96, FP04]). The concept of polarities has to be attributed to\nLamarche (e.g., [Lam95]). In [Lam01] he develops the algebraic theory of polarities and structural contexts in\nfull detail.\nThe notion of cut elimination has been developed by Gentzen [Gen34, Gen35]. For a variant of linear logic\nit has first been proved by Lambek [Lam58]. For full linear logic (sequent calculus and proof nets) it has been\nproved by Girard [Gir87]. For linear logic presented in the calculus of structures, the first direct proof of cut\nelimination was also based on rule permutation (similar to the sequent calculus) [Str03a, Str03b]. The idea of\nusing splitting as sketched in the proof of Theorem 2.7.3 is due to Guglielmi [Gug02].\n*-Autonomous categories have been discovered by Barr [Bar79]. That there is a relation to linear logic was\ndiscovered immediately after the introduction of linear logic (see, e.g., [Laf88, See89]). Blute [Blu93] was the\nfirst to note that the category of proof nets is actually the free *-autonomous category without units. However,\nno complete proof was given; there was no proper definition of a *-autonomous category without units. That\nthere is in fact a non-trivial mathematical problem to give such a definition was observed only 12 years later,\nbut then by three research groups independently at the same time [LS05a, DP05, HHS05] (see also Sections 3.5\nand 5.1). The most in-depth treatment is [HHS05]. We used here the notation of [LS05a].\nThe terminology of \"Formalism A\" and \"Formalism B\" is due to Guglielmi [Gug04a, Gug04b]. See also\n[Hug04, McK05, Str05a, Str05b] for the relation between deep inference and category theory.\n\n3\n\nOther fragments of linear logic\n\nIn this section we will very briefly inspect how proof nets for larger fragments of linear logic look like. We will\nfirst look at the so-called exponentials (which are modalities) and the additives (which are a second pair of\nconjunction/disjunction). Then we will go back to the purely multiplicative fragment and play with variations\nof it.\n\n3.1\n\nMultiplicative exponential linear logic (without units)\n\nThe formulas of unit-free multiplicative exponential linear logic (MELL\u2212 ) are generated by the syntax\nF ::= A | A \u22a5 | F O F | F \u000f F | !F | ?F\nwhere everything is as in Section 2.1. The modalities are dual to each other:\n(!A)\u22a5 = ?A\u22a5\n\n(?A)\u22a5 = !A\u22a5\n\nThe inference rules in the sequent calculus are the same as in (1) plus the ones for the new modalities:\n?w\n16 It\n\n\u22a2\u0393\n\u22a2 ?A, \u0393\n\n?c\n\n\u22a2 ?A, ?A, \u0393\n\u22a2 ?A, \u0393\n\n?d\n\n\u22a2 A, \u0393\n\u22a2 ?A, \u0393\n\n!\n\n\u22a2 A, ?B1 , . . . , ?Bn\n\u22a2 !A, ?B1 , . . . , ?Bn\n\n(61)\n\nfirst appears in Danos' thesis [Dan90], but he insists that it is joint work with Regnier.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n?w\n\n??\n?? \u03a0 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2\u0393\n\n45\n\n?w\n\n\u03c0\n\n?A\n\n\u0393\n\n\u2740\n\n\u22a2 ?A, \u0393\n\u03c0\n\n?c\n\n??\n?? \u03a0 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 ?A, ?A, \u0393\n\n?A ?A\n\n\u2740\n\n?c\n\n\u22a2 ?A, \u0393\n\n\u0393\n\n?A\n\n\u03c0\n\n?d\n\n??\n?? \u03a0 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A, \u0393\n\nA\n\n\u2740\n\n?d\n\n\u22a2 ?A, \u0393\n\n\u0393\n\n?A\n\n\u03c0\n\n!\n\n??\n?? \u03a0 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A, ?B1 , . . . , ?Bn\n\u22a2 !A, ?B1 , . . . , ?Bn\n\n\u2740\n\nA\n\n?B1\n\n!A\n\n?B1\n\n...\n...\n\n?Bn\n?Bn\n\nFigure 10: From sequent calculus to proof nets: exponentials\n\nwhere in the !-rule n \u2265 0. In Figure 10 we show how these rules are translated into proof nets according to\nIdeology 2.2.1. This is exactly the way how Girard introduced them in [Gir87]. Note that for dealing with the\n!-modality, we do not exactly follow Ideology 2.2.1. Instead, the concept of box around a proof net is introduced.\nSuch a box always has a main door, the formula !A, and auxiliary doors, which are all occupied by ?-formulas.\nThe correctness of such a proof net with boxes is defined as in Section 2.5 (?c behaves as O) with the\ndifference, that each box has to be treated separately. However, the correctness criteria do only work if no\ninstance of ?w is present.17\nCut elimination is not as simple as for MLL\u2212 . There are now not only more reduction rules, we also have\nthe problem that showing termination is no longer trivial because the size of the net can increase during the\nreduction process. This is due to the presence of contraction. In the sequent calculus, the problematic case\n17 There is a general problem with multiplicative proof nets when some form of weakening is around. We come back to this in\nSections 3.5 and 5.1.\n\nRR n\u00b0 6013\n\n\f46\n\nLutz Strassburger\n\nappears when\n\n?c\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, ?A, ?A\n\ncut\n\n\u22a2 \u0393, ?A\n\ncut\n\ncut\n\n\u22a2 !A, ?B1 , . . . , ?Bn\n\n\u22a2 \u0393, ?B1 , . . . , ?Bn\n\nis reduced to\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, ?A, ?A\n\n!\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A, ?B1 , . . . , ?Bn\n\n!\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A, ?B1 , . . . , ?Bn\n\u22a2 !A, ?B1 , . . . , ?Bn\n\n!\n\n\u22a2 \u0393, ?A, ?B1 , . . . , ?Bn\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A, ?B1 , . . . , ?Bn\n\u22a2 !A, ?B1 , . . . , ?Bn\n\n\u22a2 \u0393, ?B1 , . . . , ?Bn , ?B1 , . . . , ?Bn\n..\n.\n?c\n\u22a2 \u0393, ?B1 , . . . , ?Bn\n\n?c\n\nwhere the proof \u03a02 has been duplicated. In terms of proof nets, this means that the whole box with \u03c02 inside\nis duplicated.\n3.1.1\n\nExercise\n\nVisualize this reduction in terms of proof nets by using the translation of Figure 10.\n\nIn spite of this nasty behavior, we have the following theorem, which we are not going to prove her. The\ninterested reader is referred to [Gir87, Dan90, Joi92].\n3.1.2\n\nTheorem\n\nCut elimination for MELL\u2212 proof nets is terminating, confluent, and preserves correctness.\n\nSo far, there are no proof nets for MELL\u2212 that follow Ideology 2.3.1. One of the reasons might be that the\nsequent calculus rules in (61) do not allow to properly trace the modalities in the derivation. However, in the\ncalculus of structures, this becomes very natural (see [Str03a, Str03b, GS02]).\n3.1.3 Open Research Problem Find for MELL\u2212 a notion of proof nets without boxes, that is based on\nIdeology 2.3.1.\n\n3.2\n\nMultiplicative additive linear logic (without units)\n\nLet us now turn to unit-free multiplicative additive linear logic (MALL\u2212 ). The formulas of MALL\u2212 are generated\nby the syntax\nF ::= A | A \u22a5 | F O F | F \u000f F | F \u0016 F | F N F\nwhere again everything is as in Section 2.1. The two new connectives are dual to each other:\n(A N B)\u22a5 = B \u22a5 \u0016 A\u22a5\n\n(A \u0016 B)\u22a5 = B \u22a5 N A\u22a5\n\nThe inference rules in the sequent calculus are the same as in (1) plus the ones for the new connectives:\nN\n\n\u22a2 A, \u0393\n\n\u22a2 B, \u0393\n\n\u00161\n\n\u22a2 A N B, \u0393\n\n\u22a2 A, \u0393\n\u22a2 A \u0016 B, \u0393\n\n\u00162\n\n\u22a2 B, \u0393\n\u22a2 A \u0016 B, \u0393\n\n(62)\n\nIn his first proposal for proof nets for MALL\u2212 , Girard [Gir87] used boxes (as for the exponentials). The problem\nwith this approach is that it distinguishes between the two proofs\n\nN\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A, C, \u0393\nN\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A, D, \u0393\n\n\u22a2 A, C N D, \u0393\n\nN\n\n??\n??\u03a03 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 B, C, \u0393\n\n??\n??\u03a04 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 B, D, \u0393\n\n(63)\n\n\u22a2 B, C N D, \u0393\n\n\u22a2 A N B, C N D, \u0393\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\nand\n\nN\n\n47\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A, C, \u0393\nN\n\n??\n??\u03a03 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 B, C, \u0393\n\n\u22a2 A N B, C, \u0393\n\nN\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 A, D, \u0393\n\n??\n??\u03a04 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 B, D, \u0393\n\n(64)\n\n\u22a2 A N B, D, \u0393\n\n\u22a2 A N B, C N D, \u0393\n\nIn his second proposal [Gir96], Girard proposed the notion of monomial proof nets (still following Ideology 2.2.1), where he introduces the notion of slice and attaches a monomial (boolean) weight to the identity\nlinks.\nHere we will sketch a very recent proposal by Hughes and van Glabbeek [HvG03], which follows Ideology 2.3.1.\nRemember that in Section 2.3, we observed that the additional graph structure that captures the essence of the\nproof for MLL\u2212 consist of a linking, which is just a pairing of dual atom occurrences.\nThe discovery of Hughes and van Glabbeek was that for MALL\u2212 , this additional graph structure is a set of\nlinkings, where a linking is again, simply a pairing of dual atom occurrences. But this time, a single linking\nneed not to be exhaustive (i.e., it does not necessarily pair up everyone).\nWe can extract the proof net from the sequent calculus proof in the same way as in Section 2.3. But when\nwe encounter a N-rule, we have to separate the two linkings of the two branches, and we have to keep track of\nwhich pairing belongs to which linking. Figure 11 shows an example (taken from [HvG03]) where we do this by\nchoosing different line style/colors.\nIn [HvG03], Hughes and van Glabbeek provide a correctness criterion and a cut elimination that preserves\nthe correctness. Part of the correctness criterion is that each linking itself has to be multiplicatively correct (in\nthe sense of Section 2.5). Unfortunately, we do here not have time and space to go into the details. However,\nfrom the viewpoint of the identity of proofs, there is an important observation to make about these proof nets:\nThe following two sequent proofs are mapped to the same proof net for all possible \u03a01 , \u03a02 , and \u03a03 :\n??\n??\n??\n??\n??\u03a01 \u007f\u007f\u007f\n??\u03a03 \u007f\u007f\u007f\n??\u03a02 \u007f\u007f\u007f\n??\u03a03 \u007f\u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n\u007f\n\u007f\n\u007f\n\u007f\n(65)\n\u22a2 \u0393, A, C\n\u22a2 D, \u2206\n\u22a2 \u0393, B, C\n\u22a2 D, \u2206\n\u000f\n\u000f\n\u22a2 \u0393, A, C \u000f D, \u2206\n\u22a2 \u0393, B, C \u000f D, \u2206\nN\n\u22a2 \u0393, A N B, C \u000f D, \u2206\n\nN\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A, C\n\u000f\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, B, C\n\n\u22a2 \u0393, A N B, C\n\n??\n??\u03a03 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 D, \u2206\n\n(66)\n\n\u22a2 \u0393, A N B, C \u000f D, \u2206\n\nIn other words, the proof nets identify the two sequent proofs (65) and (66). Is this wanted from the proof\ntheoretical perspective? At the current state of the art there is no definite answer.\nAn important point against the identification is that in (65) the subproof \u03a03 appears twice, while in (66) it\nappears only once, which means that with the identification of (65) and (66) it becomes difficult to speak about\nthe size of proofs.\nAn important point in favor of the identification comes from algebra, where adding the connectives N and\n\u0016 means adding cartesian products and coproducts to the axioms of *-autonomous categories. If we want that\nN behaves as cartesian product in our category of proofs, we have to identify (65) and (66).\nMaybe in the end both worlds have their right to exist. In any case, the observation above leads to the\nfollowing:\n3.2.1 Open Research Problem Find for MALL\u2212 a notion of proof nets that does not identify (65) and (66).\nA good starting point could be to consider flow-graphs in the calculus of structures for MALL (see [Str02, Str03a]).\nOf course, the problem is to find the right correctness criterion and the right notion of cut elimination.\n\nRR n\u00b0 6013\n\n\f48\n\nLutz Strassburger\n\nid\nid\n\u000f\n\n\u22a5\n\n\u22a2 a, a\n\nN\n\nid\n\n\u22a2 a, a\n\n\u00161\n\n\u22a5\n\nid\n\n\u22a2 a, a\u22a5 \u0016 b\n\n\u000f\n\n\u22a2 a \u000f a , a\u22a5 , a\u22a5\n\n\u22a2 a, a\u22a5\n\n\u22a2 a, a\u22a5\n\n\u22a2 a \u000f a , a\u22a5 , a\u22a5 \u0016 b\n\n\u22a2 a \u000f a , a\u22a5 , a\u22a5 N(a\u22a5 \u0016 b)\n\nO\n\n\u22a2 (a \u000f a) O a\u22a5 , a\u22a5 N(a\u22a5 \u0016 b)\n\u2193\nid\n\nid\n\u000f\nN\n\nid\n\n\u22a2 a,, a\u22a5\n\n\u22a2 a,, a\u22a5\n\u22a5\n\n\u22a2a \u000f a, a , a\nO\n\n\u22a5\n\n\u00161\n\u000f\n\n\u000f\nN\n\n\u22a2 a,, a\u22a5\n\n\u22a2 a,, a\u22a5\n\n\u22a5\n\n\u22a2 a \u000f a , a , a\u22a5 \u0016 b\n\n\u22a2 (a\n( \u000f a)) O a\u22a5 , a\u22a5 N(\nN(a\u22a5 \u0016 b))\n\nid\n\n\u00161\n\n\u22a2 a,, a\u22a5\n\n\u000f\n\n\u22a2 a \u000f a , a\u22a5 , a\u22a5\nO\n\nid\n\n\u22a2 a,, a\u22a5 \u0016 b\n\n\u22a2 a \u000f a , a\u22a5 , a\u22a5 N(a\nN( \u22a5 \u0016 b))\n\u2193\n\nid\n\n\u22a2 a,, a\u22a5\n\nid\n\n\u22a2 a,, a\u22a5\n\nid\n\n\u22a2 a,, a\u22a5 \u0016 b\n\n\u22a2 a,, a\u22a5\n\n\u22a2 a \u000f a , a\u22a5 , a\u22a5 \u0016 b\n\n\u22a2 a \u000f a , a\u22a5 , a\u22a5 N(a\nN( \u22a5 \u0016 b))\n\u22a2 (a\n( \u000f a)) O a\u22a5 , a\u22a5 N(\nN(a\u22a5 \u0016 b))\n\u2193\n\na\n\na\n\na\u22a5\n\na\u22a5\n\na\u22a5\n\n\u000f\n\nb\n\u0016\n\nO\n\nN\n\nFigure 11: From sequent calculus to MALL proof nets via coherence graphs\n\n3.3\n\nIntuitionistic multiplicative linear logic (without unit)\n\nFormulas of intuitionistic multiplicative linear logic18 without unit (IMLL\u2212 ) are generated by the syntax:\nF ::= A | F \u22b8 F | F \u000f F\n\n(67)\n\n18 This is the logic that Kelly and MacLane studied in their seminal paper [KM71]. Of course, they did not use that name. But\nthey did have the correctness criterion of proof nets, called coherence graphs. They only had the acyclicity condition and not the\nconnectedness condition because the unit was present. They proved their results via cut elimination (they used that terminology).\nThey even envisaged the notion of polarity.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n49\n\nNote that there is no O and no *\u22a5 . The sequent calculus for IMLL\u2212 is usually given in two-sided form:\nid\n\ncut\n\nA\u22a2A\nexchL\n\n\u000fL\n\n\u22b8L\n\n\u0393, \u0393\u2032 \u22a2 C\n\n\u0393, B, A, \u0393\u2032 \u22a2 C\n\u0393, A, B, \u0393\u2032 \u22a2 C\n\n\u0393, A, B \u22a2 C\n\n\u000fR\n\n\u0393, A \u000f B \u22a2 C\n\n\u0393\u22a2A\n\n\u0393 \u22a2 A A, \u0393\u2032 \u22a2 C\n\n\u0393\u2032 , B \u22a2 C\n\n\u0393 \u22a2 A \u0393\u2032 \u22a2 B\n\u0393, \u0393\u2032 \u22a2 A \u000f B\n\n\u22b8R\n\n\u2032\n\n\u0393, \u0393 , A \u22b8 B \u22a2 C\n\n(68)\n\n\u0393, A \u22a2 B\n\u0393\u22a2A\u22b8B\n\nNote that the right-hand side of each sequent contains at most one formula. Apart from that, the rules are\nexactly the same as in (27). We can therefore simply take our notion of two-sided proof nets from Section 2.6.\nThe correctness criterion remains unchanged. This can be used to prove that IMLL\u2212 is a conservative extension\nof MLL\u2212 , i.e., an IMLL\u2212 formula is provable in IMLL\u2212 if and only if it is provable in MLL\u2212 .19\nWe can use polarities to provide a one-sided version of proof nets for IMLL\u2212 . For this we define the set of\nnegative and positive formulas as follows:\nF \u2022 ::= A \u22a5 | F \u2022 O F \u2022 | F \u2022 \u000f F \u25e6 | F \u25e6 \u000f F \u2022\nF \u25e6 ::= A\n\n| F\u25e6 \u000fF\u25e6 | F\u25e6 OF\u2022 | F\u2022 OF\u25e6\n\n(69)\n\nWe can now define a proof net for IMLL\u2212 to be a proof net for MLL\u2212 in which at most one of the conclusions\nis in F \u25e6 and all other conclusions are in F \u2022 . See [LR96] or [Lam01] for further details.\n\n3.4\n\nCyclic linear logic (without units)\n\nIn Section 2.1 we defined sequents to be lists of formulas, but we also had the exchange rule which made the\norder of the formulas irrelevant for provability, and indeed, the two connectives O and \u000f were commutative.\nIn this section we discuss what happens if we drop the exchange rule. As expected, the two connectives O and\n\u000f will lose their property of being commutative, and we enter the realm of non-commutative logics. But not\neverything works as one might expect...\nRecall that in Observation 2.3.2 we noted that in the proof nets we always get a crossing of edges when we\napply the exchange rule. Let us hence change the correctness criterion. We keep everything as in Section 2.5, but\nwe add as condition that there must be no crossing of edges in the proof net (in graph theoretical terminology:\nthe graph has to be planar ). Hence, our running examples from Sections 2.2\u20132.4 are not correct in the sense of\nthis new criterion. And indeed, we used the exchange rule in all sequent proofs.\nLuckily, there is another proof net for our favorite sequent in which there are no crossings:\n\na\u22a5\n\na\n\na\n\na\u22a5\n\na\n\na\u22a5\n(70)\n\n\u000f\nO\n\n\u000f\nO\n\nIt clearly obeys the correctness criterion.\n3.4.1 Exercise Give a sequent calculus proof in the system in (1) that translates into the net (70). Then\ntry to find such a proof that does not use the exchange rule.\nHere we are in for a surprise. It is very easy to find a sequent calculus proof for (70), but it is impossible to\nfind one that does not use the exch-rule. What went wrong?\n19 This\n\nis not true for full intuitionistic linear logic with respect to linear logic. Also classical logic is certainly not a conservative\nextension of intuitionistic logic, since there are formulas, like Peirce's law ((A \u2192 B) \u2192 A) \u2192 A) that are provable in classical logic,\nbut not in intuitionistic logic.\n\nRR n\u00b0 6013\n\n\f50\n\nLutz Strassburger\n\nThere are two explanations. The first is based on the following observation. If we have a planar proof net,\ni.e., a list of formula trees together with a perfect matching of their atom occurrences such that there is no\ncrossing among the links that connect the atoms, then we can from that data not tell a priori which formula is\nthe first in the list. We have to think of the formulas to be grouped in a cycle around the graph with the axiom\nlinks. We now have to think of a proof net not as something like\n\u03c0\nA1\n\nA2\n\nA3\n\nA4\n\nA5\n\nA6\n\nbut as something like\nA311\n11\n\nA2\n\nw\npq\nv\u03c0u\nrt\ns\n\nA4\n\nA1\n\n11\n11\nA6\n\nA5\n\nTo go along with this behavior, we cannot just drop the exchange rule, but have replace it by the cyclic exchange\nrule:\n\u22a2 \u0393, A\ncycl\n\u22a2 A, \u0393\nwhere \u0393 is an arbitrary list of formulas. This is also the reason why the name cyclic linear logic has been chosen\nfor this logic. It has been investigated in detail by Yetter [Yet90].\nWe can now give a sequent proof that translates into (70):\nid\n\u000f\n\ncycl\nid\n\u000f\n\n\u22a2\nO\n\na\u22a5 , a\n\u22a2\n\u22a2\n\nO\n\n\u22a2\n\nid\n\n\u22a2 a\u22a5 , a\n\n\u000f\n\n\u22a2 a,, a\u22a5 \u000f a\u22a5 , a\n\u22a2 a,, a,, a\u22a5 \u000f a\u22a5\na,, a O(\nO(a\u22a5\n\na\u22a5 , a \u000f a,, a O(\nO(a\u22a5\n\na\u22a5\n\nid\n\n\u22a2 a,, a\u22a5\n\ncycl\n\n\u2192\n\nid\n\n\u000f a\u22a5 )\n\n\u000f\n\n\u000f a\u22a5 )\n\nO( \u000f a),\nO(a\n), a O(a\nO( \u22a5\n\n\u22a2\nO\n\n\u000f a\u22a5 )\n\nO\n\na\u22a5 , a\n\u22a2\n\u22a2\n\n\u22a2 a\u22a5 , a\n\n\u22a2 a,, a\u22a5 \u000f a\u22a5 , a\n\u22a2 a,, a,, a\u22a5 \u000f a\u22a5\n\n\u22a2 a,, a O(\nO(a\u22a5 \u000f a\u22a5 )\n\na\u22a5 , a \u000f a,, a O(a\nO( \u22a5\n\na\u22a5\n\nid\n\n\u22a2 a,, a\u22a5\n\n\u000f a\u22a5 )\n\nO( \u000f a),\nO(a\n), a O(a\nO( \u22a5\n\n\u000f a\u22a5 )\n\nBut there is still this disturbing fact that there are crossings in the flow-graph but no crossings in the net.\nThis leads us to our second explanation: The sequent calculus is simply too rigid to fully capture the\nphenomenon. Recall that in Observation 2.4.4 we noted that in the calculus of structures we can provide a\nderivation such that crossings appear in the flow-graph only if they also appear in the net. This means we\nshould now be able to come up with a derivation that has no crossings in the flow-graph, and hence does not\nneed the exchange rule nor a cyclic replacement. Of course, we need to adapt the system a little bit: we need\nanother version of i\u2193 and i\u2191, namely the one in (13) and we need two versions of switch. Note that since we\ndo not have \u03c3\u2193 nor \u03c3\u2191, we cannot generate the different four versions of switch as in (12). The new system is\nshown in Figure 12 (both versions of switch are self-dual).\nHere is now our favorite example without crossings:\nid\nid\ns\nid\ns\n\nid\n\na\u22a5 O a\n\na\u22a5 O(\nO(a \u000f(\n\u000f(a O a\u22a5 ))\na\u22a5 O(\nO(a \u000f a)) O a\u22a5\n\na\u22a5 O(\nO(a \u000f a)) O((\nO((a O a\u22a5 ) \u000f a\u22a5 )\na\u22a5 O(\nO(a \u000f a)) O a O(\nO(a\u22a5 \u000f a\u22a5 )\n\nid\n\u2192\n\ns\nid\ns\n\na\u22a5 O a\n\na\u22a5 O(\nO(a \u000f(\n\u000f(a O a\u22a5 ))\na\u22a5 O(\nO(a \u000f a)) O a\u22a5\n\nO( \u000f a)) O((a\nO(( O a\u22a5 ) \u000f a\u22a5 )\na\u22a5 O(a\na\u22a5 O(\nO(a \u000f a)) O a O(\nO(a\u22a5 \u000f a\u22a5 )\n\nThat deep inference is powerful enough to get rid of the cyclic exchange rule has first been observed by Di Gianantonio [DG04]. But he did not use proof nets to show this fact.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\ni\u2193\n\ni\u2193\n\n51\n\ni\u2191\n\nA\u22a5 O A\nS{B}\n\nS{(A\u22a5 O A) \u000f B}\n\ni\u2193\n\nS{B}\nS{B \u000f(A\u22a5 O A)}\n\n\u03b1\u2193\n\nS{A O(B O C)}\nS{(A O B) O C}\n\ni\u2191\n\ni\u2191\n\nA \u000f A\u22a5\n\nS{(A \u000f A\u22a5 ) O B}\nS{B}\nS{B O(A \u000f A\u22a5 )}\n\n\u03b1\u2191\n\nS{B}\nS{A \u000f(B \u000f C)}\nS{(A \u000f B) \u000f C}\n\nS{A \u000f(B O C)}\n\ns\n\nS{(A \u000f B) O C}\nS{(A O B) \u000f C}\n\ns\n\nS{A O(B \u000f C)}\n\nFigure 12: A system for cyclic MLL\u2212 in the calculus of structures\n\nBy combining the last two sections, i.e., proof nets for cyclic linear logic and intuitionistic linear logic, we\ncan obtain proof nets for the Lambek calculus [Lam58]. We leave the details as an exercise. The interested\nreader is referred to [LR96] or [Lam01], which contain a systematic treatment.\nIt is also possible to combine usual commutative MLL\u2212 and cyclic MLL\u2212 together in a single system. Then\nthere is a par/tensor pair which is commutative and one which is non-commutative. This is done in [AR00].\n\n3.5\n\nMultiplicative linear logic with units\n\nLet us now finally discuss the problem of the units. We stick to the multiplicative fragment of linear logic. The\nformulas of MLL are generated by\nF ::= A | A \u22a5 | F O F | F \u000f F | \u22a5 | 1\nwhere again everything is as in Section 2.1. The two units are dual to each other:\n\u22a5\u22a5 = 1\n\n1\u22a5 = \u22a5\n\nThe inference rules in the sequent calculus are the same as in (1) plus the ones for the units:\n\u22a5\n\n\u22a2 \u0393, \u2206\n\n1\n\n\u22a2 \u0393, \u22a5, \u2206\n\n(71)\n\n\u22a21\n\nIf we now follow the argumentation of avoiding trivial rule permutations as in (10), we have to identify the\nfollowing three derivations in the sequent calculus:\n\u22a5\n\u000f\n\n\u0393, A\n\u22a5, \u0393, A\n\nB, \u2206\n\n\u22a5, \u0393, A \u000f B, \u2206\n\n\u2190\u2192\n\n\u000f\n\n\u0393, A\n\n\u22a5\n\nB, \u2206\n\n\u0393, A \u000f B, \u2206\n\u22a5, \u0393, A \u000f B, \u2206\n\n\u2190\u2192\n\n\u000f\n\n\u0393, A\n\n\u22a5\n\nB, \u2206\n\u22a5, B, \u2206\n\n\u22a5, \u0393, A \u000f B, \u2206\n\nbecause they are obtained from each other by permuting the \u22a5-rule under and over the \u000f-rule. Furthermore,\nfollowing the equations that are imposed on proofs by the axioms of *-autonomous categories (with units) these\nthree proofs have to be identified.\nHowever, if we follow the idea of having a graph as proof net, we have to attach the \u22a5 somewhere. But there\nis no canonical place to do so. This is explained in further detail in [LS06]. That there is this problem with the\nRR n\u00b0 6013\n\n\f52\n\nLutz Strassburger\n\n\u22a5-rule, and in fact with every kind of weakening rule has already been observed in [Gir87, Laf95, Gir96] and\nothers.20\nThe solution to the problem is instead of considering graphs as proof nets, to consider equivalence classes of\nsuch graphs. There are now three different proposals in the literature to do so. In [BCST96] the authors use a\ntwo-sided version of proof nets and attach the \u22a5 to the edges in the graph (see also Section 5.1). We will show\nhere the approach taken by [SL04, LS06] which clearly follows Ideology 2.3.1. The additional graph structure\nattached to the sequent forest does no longer consist of only the identity links, but of another formula tree.\nThen the resulting graph behaves as ordinary unit-free proof net and obeys the usual correctness criteria. The\nbasic idea is the following. The ordinary proof net\na\u22a5\n\na\n\nb\u22a5\n\nb\n\n\u000f\n\nis now written as\n\nO\n\u000f\na\n\n\u000f\na\u22a5\n\nb\n\nb\u22a5\n\n\u000f\ni.e., the identity links are replaced by \u000f-nodes which are connected by a O.21 If we now have to attach a \u22a5, we\nattach it via a \u000f to the root of linking tree of the proof to which we apply the \u22a5-rule. Figure 13 shows three\nexamples. Since all three of them are the same proof according to what has been said above, we have to put\nthem in the same equivalence class. To achieve this, we consider linking trees equivalent modulo the following\nequation:\n\u000f\nO\n=\n\nO\n\u22a5\n\nP\n\n(72)\n\n\u000f\n\u22a5\n\nQ\n\nP\n\nQ\n\nprovided going from right to left in (72) does not destroy the correctness.22\nThe details of this kind of proof nets are carried out in [SL04, LS06], where it is also shown that they form\nthe free *-autonomous category (in the usual sense, with units).\nLet us note here only that the linking tree of an MLL proof net can be seen as the up-side in a two-sided\nunit-free proof net, as we discussed it in Section 2.6, provided we read the units \u22a5 and 1 as ordinary atoms.\nHere is an example:\nO\u2022\nO\n\u000f\u2022\n\u000f\n\u000f\u2022\n\u000f\n\u22a5\n\na\n\n\u000f\na\u22a5\n\nb\n\n\u000f\u2022\n\n\u2740\n\u22a5\u2022\n\na\u2022\n\na\u22a5\u2022\n\nb\u2022\n\nb\u22a5\u2022\n\n\u22a5\u25e6\n\na\u25e6\n\na\u22a5\u25e6\n\nb\u25e6\n\nb\u22a5\u25e6\n\n\u22a5\n\nb\n\n\u000f\n\u000f\u25e6\n20 To\n\nbe precise, one should note that the problem has already been noted in [KM71].\nthere are more than two axiom links we either use n-ary O or take the equivalence class modulo associativity and commutativity of O in the linking tree. This is not problematic since we have to take equivalence classes anyway.\n22 Observe that going to left to right cannot destroy correctness because this corresponds to an application of the switch rule in\nthe calculus of structures, which always preserves correctness (see second proof of Theorem 2.5.5).\n21 If\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n53\n\nO\nid\n\u22a5\n\u000f\n\n\u000f\n\u22a2 a, a\u22a5\n\nid\n\n\u22a2 \u22a5, a, a\u22a5\n\n\u22a2 b, b\u22a5\n\n\u000f\n\n\u2740\n\u22a5\n\n\u22a2 \u22a5, a, a\u22a5 \u000f b, b\u22a5\n\n\u000f\na\u22a5\n\na\n\nb\u22a5\n\nb\n\u000f\n\n\u000f\nid\n\u000f\n\n\u22a2 a, a\u22a5\n\n\u22a5\n\nid\n\nO\n\u22a2 b, b\u22a5\n\n\u22a2 a, a\u22a5 \u000f b, b\u22a5\n\n\u000f\n\n\u2740\n\u22a5\n\n\u22a2 \u22a5, a, a\u22a5 \u000f b, b\u22a5\n\n\u000f\na\u22a5\n\na\n\nb\n\nb\u22a5\n\n\u000f\nO\nid\nid\n\u000f\n\n\u22a2 a, a\u22a5\n\n\u22a5\n\n\u000f\n\u22a2 b, b\u22a5\n\n\u22a2 b, b\u22a5 , \u22a5\n\n\u000f\n\n\u2740\na\n\n\u22a2 a, a\u22a5 \u000f b, b\u22a5 , \u22a5\n\n\u000f\na\u22a5\n\nb\n\nb\u22a5\n\n\u22a5\n\n\u000f\nFigure 13: From sequent calculus to MLL proof nets with units\n\nAn alternative approach to the problem of the units has recently proposed by Hughes. In [Hug05b] he\ndefines a notion for proof nets for MLL (also following Ideology 2.3.1) where he attaches the \u22a5 to some atom\nin the proof. This has the advantage that there is no need to consider equivalence classes of proof nets for\ndefining cut elimination. However, for constructing the free *-autonomous category he also needs equivalence\nclasses [Hug05a].\n3.5.1 Open Research Problem Find for a notion of proof nets that is also able to accommodate the\nadditive units \u22a4 and 0 of linear logic.\n\n3.6\n\nMix\n\nIn order to avoid the problems with the units, one can simply ignore them, as we did in the whole first part of\nthese notes. An alternative is to add the rules\nmix\n\n\u22a2\u0393\n\n\u22a2\u2206\n\n\u22a2 \u0393, \u2206\n\nand\n\nmix0\n\n\u22a2\n\n(73)\n\ncalled mix and nullary mix. Adding these two rule to (1) or (1)+(71) is equivalent to saying that \u22a5 = 1. By\ndoing this, the correctness criteria shown in Section 2.5 change only slightly: The acyclicity condition remains,\nbut the connectedness condition has to be dropped. A detailed analysis for this can be found in [FR94].\n\n3.7\n\nPomset logic and BV\n\nBefore we leave the realm of linear logic, let us show another variation, which has a particularly nice theory\nof proof nets. It has been introduced by Retor\u00e9 [Ret97] under the name pomset logic. The set of formulas is\ngenerated via\nF ::= A | A \u22a5 | F O F | F \u000f F | F \u22b3 F\n\nRR n\u00b0 6013\n\n\f54\n\nLutz Strassburger\n\nNegation is defined as in Section 2.1. The new connective \u22b3 is non-commutative and self-dual, i.e.,\n(A \u22b3 B)\u22a5 = A\u22a5 \u22b3 B \u22a5\nWe will also allow to write A \u22b2 B for B \u22b3 A.\nFor defining proof nets we use Retor\u00e9's RB-graph presentation. The O, the \u000f, the cut and the identity are\ntranslated into RB-graphs as in Section 2.5. The new connective is translated as follows:\n\nB\n\nA\n\n\u22b3\n\n\u2740\n\nA \u22b3B\n\nThe correctness criterion hast to be changed such that in an AE-cycle we can walk through a red edge with an\narrow only in the direction of the arrow. Through undirected edges we can still walk either way. Furthermore,\nthe connectedness condition has to be dropped.23 Here are 4 examples:\n\n(74)\n\n(75)\n\nThe two examples in (74) fulfill the correctness criterion, while the two examples in (75) do not.\nNote that we can define cut elimination as before, but we have to make sure that the arrows go in the right\ndirection. Here is the new reduction rule that has to be added to the ones in (47) and (48):\n(76)\n\n\u2740\n\nWith the same methods as in Section 2.7, we can show the following theorem:\n3.7.1 Theorem\nrectness.\n\nCut elimination for pomset logic proof nets is terminating, confluent, and preserves cor-\n\nYou might already have wondered why for pomset logic we did not introduce the sequent calculus system\nbefore introducing the proof nets, as we did it with all other logics so far. The reason is simple. There is no\nsequent calculus system for pomset logic.\nThis of course questions the label \"logic\" for the object we have here, if there is not even an ordinary\ndeductive system for it. And what is the meaning of cut elimination in that respect?\nFortunately, there is deep inference and the calculus of structures. The system shown in Figure 14 has been\nintroduced by Guglielmi [Gug02] who called it SBV. For that system, we extend our language for formulas\nwith another generator, the unit \u25e6. Furthermore, we consider formulas to be equivalent modulo the smallest\ncongruence relation generated by the equations\nAO\u25e6 = A = \u25e6OA\n23 The\n\nA\u000f\u25e6 = A = \u25e6\u000fA\n\nA\u22b3\u25e6 = A = \u25e6\u22b3A\n\n(77)\n\nreason for this is that because of the self-duality of the new connective \u22b3 the two units \u22a5 and 1 are identified.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\ni\u2193\n\nS{\u25e6}\n\n\u03b1\u22b3 \u2193\n\ni\u2191\n\nS{A\u22a5 O A}\n\n\u03c3\u2193\n\n\u03b1\u2193\n\n55\n\nS{A O B}\n\n\u03c3\u2191\n\nS{B O A}\n\nS{A O(B O C)}\n\n\u03b1\u2191\n\nS{(A O B) O C}\nS{A \u22b3(B \u22b3 C)}\n\n\u03b1\u22b3 \u2191\n\nS{(A \u22b3 B) \u22b3 C}\ns\n\nq\u2193\n\nS{A \u000f A\u22a5 }\nS{\u25e6}\nS{A \u000f B}\nS{B \u000f A}\n\nS{A \u000f(B \u000f C)}\nS{(A \u000f B) \u000f C}\nS{(A \u22b3 B) \u22b3 C}\nS{A \u22b3(B \u22b3 C)}\n\nS{A \u000f(B O C)}\nS{(A \u000f B) O C}\n\nS{(A O C) \u22b3(B O D)}\n\nq\u2191\n\nS{(A \u22b3 B) O(C \u22b3 D)}\n\nS{(A \u000f C) \u22b3(B \u000f D)}\nS{(A \u22b3 B) \u000f(C \u22b3 D)}\n\nFigure 14: System SBV in the calculus of structures\n\nThe reason for this is to avoid to have five different versions of i\u2193 and i\u2191.24 Furthermore, we want the following\nderivation to be valid:\nA\u000fB\n=\n(A \u22b3 \u25e6) \u000f(\u25e6 \u22b3 B)\nq\u2191\nA\u000fB\n(A \u000f \u25e6) \u22b3(\u25e6 \u000f B)\nq\u2191\n=\nA\u22b3B\nA\u22b3B\n!\n(78)\n=\nq\u2193\n(A O \u25e6) \u22b3(\u25e6 O B)\nAOB\nq\u2193\n(A \u22b3 \u25e6) O(\u25e6 \u22b3 B)\n=\nAOB\nHere we implicitly use the \"fake inference rule\"\n=\n\nS{B}\nS{A}\n\nwhere A = B according to the equations in (77). Without it, we would need several more variants of q\u2193 and\nq\u2191, and the system would become rather big. The fragment of SBV without the up-rules (i.e., without the rules\nwith the \u2191 in the name) is called BV. As usual in the calculus of structures, the up-fragment corresponds to the\ncut, and we have for BV the cut elimination theorem (proved by Guglielmi [Gug02]):\n3.7.2\n\nTheorem\n\nLet A be any pomset formula. Then,\n\nfor every derivation\n\n\u25e6\nSBV kk\nA\n\nthere is a derivation\n\n\u25e6\nBV kk\nA\n\n.\n\nThe proof uses the technique of splitting and works essentially the same way as we have sketched it for\nTheorem 2.7.3. The logic that is defined by BV is the first logic that definitely needs deep inference. Alwen\nTiu [Tiu01, Tiu06] has shown that there cannot be a shallow inference system (in particular, no sequent calculus\nsystem) defining the logic of BV.\nWe can apply the flow-graph method (see Section 2.4 to obtain proof nets from proofs in BV. Or, if you\nprefer, you can obtain two-sided proof nets from derivations in SBV. Everything that has been said in Section 2.6\n24 Remember\n\nRR n\u00b0 6013\n\nthat for cyclic linear logic we had already three of them.\n\n\f56\n\nLutz Strassburger\n\ni\u2193\n=\ni\u2193\nq\u2193\n\n\u25e6\n\ni\u2193\n\nbOb\n\n=\n\nb O(\u25e6 \u22b3(\u25e6 O b\u22a5 ))\n\nb O((a O a\u22a5 ) \u22b3(\u25e6 O b\u22a5 ))\n\n=\n\nb O(a \u22b3 \u25e6) O(a\u22a5 \u22b3 b\u22a5 )\nb O a O(a\u22a5 \u22b3 b\u22a5 )\n\ni\u2193\nq\u2193\n=\n\n(b O b\u22a5 ) \u22b3 \u25e6\n\n(b O b\u22a5 ) \u22b3(a O a\u22a5 )\n(b \u22b3 a) O(b\u22a5 \u22b3 a\u22a5 )\n(b \u22b3 a) O(a\u22a5 \u22b2 b\u22a5 )\n\n\u2193\n\n=\ni\u2193\n\n=\n\n\u22a5\n\nb O(\u25e6 \u22b3(\u25e6 O b ))\n\u22a5\n\nb O(a\nO( \u22b3 \u25e6) O(a\nO( \u22b3 b )\nb O a O(\nO(a\u22a5 \u22b3 b\u22a5 )\n\ni\u2193\n=\nq\u2193\n\nbOb\n\n\u22a5\n\n=\n\ni\u2193\nq\u2193\n=\n\n( O b\u22a5 ) \u22b3(a\n(b\n\u22b3( O a\u22a5 )\n( \u22b3 a)) O(b\n(b\nO( \u22a5 \u22b3 a\u22a5 )\n( \u22b3 a)) O(a\n(b\nO( \u22a5 \u22b2 b\u22a5 )\n\ni\u2193\n\nbOb\n\n=\n\n\u22a5\n\nb O(\u25e6 \u22b3(\u25e6 O b ))\n\nb O(a\nO( \u22b3 \u25e6) O(a\nO( \u22a5 \u22b3 b\u22a5 )\nb O a O(\nO(a\u22a5 \u22b3 b\u22a5 )\n\ni\u2193\nq\u2193\n=\n\nbOb\n\n( O b\u22a5 ) \u22b3 \u25e6\n(b\n\n\u2193\n\u25e6\n\nb O((\nO((a O a\u22a5 ) \u22b3(\u25e6 O b\u22a5 ))\n\n=\n\n\u25e6\n\ni\u2193\n\nb O((\nO((a O a\u22a5 ) \u22b3(\u25e6 O b\u22a5 ))\n\nq\u2193\n\ni\u2193\n\n\u2193\n\n\u25e6\n\ni\u2193\n\n\u2193\n\u25e6\nbOb\n\n( O b\u22a5 ) \u22b3 \u25e6\n(b\n\n( O b\u22a5 ) \u22b3(a\n(b\n\u22b3( O a\u22a5 )\n( \u22b3 a)) O(b\n(b\nO( \u22a5 \u22b3 a\u22a5 )\n( \u22b3 a)) O(a\n(b\nO( \u22a5 \u22b2 b\u22a5 )\n\n\u2193\n\nb\n\n\u2193\n\na\u22a5\n\na\nO\n\n\u25e6\nbOb\n\nb\u22a5\n\u22b3\n\nb\n\na\n\na\u22a5\n\n\u22b3\n\nb\u22a5\n\u22b2\n\nFigure 15: From BV to proof nets\n\ndoes also apply here. Figure 15 shows two small examples of proof nets obtained from BV derivations. They,\nin fact, correspond to the two RB-graphs in (74).\nThe reason for mentioning all this is the following theorem:\n3.7.3\n\nTheorem\n\nLet A and B be any pomset logic formulas. Then\nA\nSBV k\nk\nB\n\nif and only if\n\n\u25e6\nBV kk\nA\u22a5 O B\n\n(79)\n\nand if these derivations exist, then they have the same proof net, and this proof net obeys the pomset logic\ncorrectness criterion, when written as RB-graph.\nProof (Sketch): Let us start with the first part of the theorem which is easy, provided we have cut elimination:\nFrom\nA\nSBV kk\nB\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n57\n\nwe can build\n\n\u25e6\n\ni\u2193\n\nA\u22a5 O A\nSBV kk\nA\u22a5 O B\n\nNow we apply Theorem 3.7.2 to get\n\u25e6\nBV kk\nA\u22a5 O B\n\n(80)\n\nThe other direction is even easier. From (80), we can directly build\nA\n\n=\n\ns\ni\u2191\n\nA\u000f\u25e6\nBV kk\nA \u000f(A\u22a5 O B)\n(A \u000f A\u22a5 ) O B\n=\n\n\u25e6OB\nB\n\nNote that this part of the proof did not use the fact that we are speaking about BV. It in fact holds for any\nlogical system in the calculus of structures, provided we have the switch rule and a cut elimination that preserves\nthe flow-graph.25\nLet us now come to the second more interesting and more difficult part or the theorem. There are two ways\nto show that every BV proof net obeys the pomset logic criterion. The first is to show that every rule in BV\npreserves the criterion (and that the unique net with \u25e6 as conclusion is correct). This has been done already by\nRetor\u00e9 [Ret99b]. The second way, which has been used in [Str03a, GS02] is based on the following claims:\nClaim 1: Let n \u2265 1 and atoms a1 , . . . , an and formulas A1 , . . . , An be given, such that for all i \u2208 {1, . . . , n},\n\u22a5\nwe have Ai = a\u22a5\ni \u000f ai+1 or Ai = ai \u22b3 ai+1 (where we count indices modulo n). Then there is no\nderivation\n\u25e6\nBV kk\n(81)\nA1 O * * * O An\nFor proving the claim we proceed by way of contradiction and by induction on n. We have to perform a\ncase analysis how the rules of BV could be applied inside A1 O * * * O An . We also need the concept of a quasisubformula. We say that A is a quasi-subformula of B, if A can be obtained from B by replacing some atom\noccurrences by \u25e6.26\nClaim 2: Let \u03c0 be a pomset logic pre-proof net with conclusion B, and let A be a quasi-subformula of B such\nthat whenever an atom occurrence is replaced by \u25e6, then also its mate (according to the linking in\n\u03c0) is replaced by \u25e6. Then we have the following:\nIf\n\n\u25e6\nBV kk\nB\n\nthen\n\n\u25e6\nBV kk\nA\n\n.\n\nThis is easy to see because the proof of B remains valid if we replace pairs of atoms by \u25e6.\nClaim 3: Let \u03c0 be a pomset logic pre-proof net with conclusion B. Then \u03c0 does not fulfill the pomset logic\ncorrectness criterion if and only if B has a quasi-subformula A1 O * * * O An , where all Ai are as in\nClaim 1, and all pairs ai , a\u22a5\ni are paired up in the linking of \u03c0.\nClaims 1\u20133 together imply the result.\n25 Roughly\n26 When\n\nspeaking, this is the same as saying that the proofs in the logic form some sort of *-autonomous category.\nA is a quasi-subformula of B, then the relation web (see Definition 2.5.18) of A is a subweb of the relation web of B.\n\nRR n\u00b0 6013\n\n\u2293\n\u2294\n\n\f58\n\nLutz Strassburger\n\n3.7.4 Remark The Claim 3 in the proof above states a second correctness criterion for BV/pomset logic,\nwhich does not need RB-graphs, and which first appears in [Str03a]. Claims 1 and 2 in the proof above show\nthat BV derivations obey this criterion. Proving Claim 3 then means showing that the two criteria are indeed\nequivalent.\n3.7.5 Exercise Complete the proof of the second part of Theorem (3.7.3), i.e., show that every proof net\ncoming from a BV derivation obeys the pomset logic correctness criterion.\n3.7.6 Open Research Problem Prove the converse. I.e., show that for every correct pomset logic proof\nnet there is a BV derivation having it as flow graph.\nSolving this problem would finally (because of Tiu's result [Tiu06]) show that it is indeed impossible to give\na sequent calculus system for pomset logic.\n\n4\n\nIntuitionistic logic\n\nWe will not speak about intuitionistic logic in this course. But I will mention here some important facts related\nto the title of the lecture notes, because these facts have had a strong impact on the development of proof nets\nfor classical logic that we will discuss in the next section.\nThe inference rules in natural deduction for implication in intuitionistic logic\n\u2192I\n\n\u0393, A \u22a2 B\n\u0393\u22a2A\u2192B\n\nand\n\n\u2192E\n\nand\n\napp\n\n\u0393\u22a2A\u2192B\n\n\u0393\u22a2A\n\n\u0393\u22a2B\n\nare the same as the typing rules\nabs\n\n\u0393, x : A \u22a2 u : B\n\u0393 \u22a2 \u03bbx.u : A \u2192 B\n\n\u0393 \u22a2 u: A \u2192 B\n\n\u0393 \u22a2 v: A\n\n\u0393 \u22a2 uv : B\n\nfor the simply typed \u03bb-calculus. This is the basis for the so-called Curry-Howard-correspondence (also known\nas formulas-as-types-correspondence and proofs-as-programs-correspondence). It is also called \"isomorphism\"\nbecause the normalization in natural deduction [Pra65] does the same as \u03b2-reduction in the \u03bb-calculus.27 If we\nadd conjunction to the logic (or equivalently product types to the \u03bb-calculus) we can use the proofs in natural\ndeduction (or equivalently \u03bb-terms) for specifying morphism in cartesian closed categories (short: CCCs). What\nmakes things interesting is the fact that the identity forced on proofs by the notion of normalization in natural\ndeduction (or equivalently the identity forced on \u03bb-terms by normalization28) is exactly the same as the identity\nof morphism that is determined by the axioms of CCCs. For further details on this see [LS86]. Of course, this\nsimple observation has been extended to more expressive logics and larger type systems (e.g., System F [Gir72],\ncalculus of constructions [CH88], . . . ).\nSince there is already a well-understood canonical and bureaucracy-free presentation of proofs in intuitionistic\nlogic, namely terms in the (simply) typed \u03bb-calculus, the concept of \"proof nets for intuitionistic logic\" is not well\ninvestigated. To my knowledge there are only two proposals in that direction. The first, by Lamarche [Lam94]\nuses the encoding of intuitionistic logic into (intuitionistic) linear logic (the multiplicative exponential fragment).\nThe second, by Horbach [Hor06], restricts a class of proof nets for classical logic (that we will discuss in the\nnext section) to intuitionistic logic. Of course, this cannot be as simple as for IMLL\u2212 (see Section 3.3) because\nclassical logic is not a conservative extension of intuitionistic logic.\n\n5\n\nClassical Logic\n\nIt is surely very tempting to extend the beautiful connection between deductive system, \u03bb-calculus, and category\ntheory from intuitionistic logic to classical logic.\nWe get from intuitionistic logic to classical logic by adding the law of excluded middle (i.e., A \u2228 \u0100), or\nequivalently, an involutive negation (i.e., \u0100 \u0304 = A). Adding this to a Cartesian closed category C , means adding\na contravariant functor (\u2212) : C \u2192 C such that \u0100 \u0304 \u223c\n= A and (A \u2227 B) \u223c\n= \u0100 \u2228 B\u0304 where A \u2228 B = \u0100 \u21d2 B. However, if\n27 One\n\ncould also argue that we have here just two different syntactic presentations of the same mathematical objects.\n\u03b7-expansion, and \u03b1-conversion\n\n28 \u03b2-reduction,\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n59\n\nwe do this we get a collapse: all proofs of the same formula are identified, which leads to a rather boring proof\ntheory. This observation is due to Andr\u00e9 Joyal, and a detailed proof and discussion can be found in [LS86] and\nin the appendix of [Gir91].\nWe will not show the category theoretic proof of the collapse. But we will explain the phenomenon in terms\nof the sequent calculus (the argumentation is due to Yves Lafont [GLT89, Appendix B]). Suppose we have two\nproofs of the formula B in some sequent calculus system:\n??\n??\n??\u03a01 \u007f\u007f\u007f\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n\u007f\n\u007f\n\u22a2B\nand\n\u22a2B\nThen we can with the help of the rules weakening, contraction, and cut\nweak\n\n\u22a2\u0393\n\u22a2 \u0393, A\n\nform the following proof of B\n\ncont\n\n\u22a2 \u0393, A, A\n\u22a2 \u0393, A\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2B\nweak\n\u22a2 B, A\ncut\ncont\n\nweak\n\ncut\n\n\u22a2 \u0393, A\n\n\u22a2 \u0100, \u2206\n\n\u22a2 \u0393, \u2206\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2B\n\u22a2 A\u22a5 , B\n\n(82)\n\n\u22a2 B, B\n\u22a2B\n\nIf we eliminate the cut from this proof, we get either\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\nor\n\u22a2B\nweak\n\u22a2 B, B\ncont\n\u22a2B\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2B\nweak\n\u22a2 B, B\ncont\n\u22a2B\n\n(83)\n\ndepending on a nondeterministic choice. Now note that one can hardly find a reason why for any proof \u03a0, the\ntwo proofs\n??\n?? \u03a0 \u007f\u007f\u007f\n?? \u007f\u007f\n??\n\u007f\n?? \u03a0 \u007f\u007f\u007f\n?? \u007f\u007f\nand\n(84)\n\u22a2B\n\u007f\nweak\n\u22a2 B, B\n\u22a2B\ncont\n\u22a2B\nshould be distinguished. After all, duplicating a formula and immediately afterwards deleting one copy is not\ndoing much. Also the laws of category theory tell us to identify the two.\nOn the other hand, if we want the nice relationship between deductive system and category theory, we need\na confluent cut elimination, which means we have to equate the two proofs in (83). Consequently, by (84), we\nhave to equate \u03a01 and \u03a02 . Since there was no initial condition on \u03a01 and \u03a02 , we conclude that any two proofs\nof B must be equal.\nBut the problem with weakening, which could in fact be solved by using mix (see Sections 3.6 and 5.2), is\nnot the only one. We run into similar problems with the contraction rule. If we try to eliminate the cut from\n??\n??\n??\u03a01 \u007f\u007f\u007f\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n\u007f\n\u007f\n(85)\n\u22a2 \u0393, A, A\n\u22a2 \u0100, \u0100, \u2206\ncont\ncont\n\u22a2 \u0393, A\n\u22a2 \u0100, \u2206\ncut\n.\n\u22a2 \u0393, \u2206\nwe again have to make a nondeterministic choice. In the sections below, we will see a concrete example for this.\nThere are several possibilities to cope with these problems. The easiest is to say that there cannot be any\ngood proof theory for classical logic, and stop thinking about the problem29 . A more serious and more difficult\n29 and\n\nmaking sure that also other people do not think about the problem...\n\nRR n\u00b0 6013\n\n\f60\n\nLutz Strassburger\n\napproach is of course to say that we have to drop some of the axioms, i.e., some of the equations that we would\nlike to hold between proofs in classical logic. But which ones should go?\nThere are now essentially two different approaches, and both have their advantages and disadvantages.\n1. The first says that the axioms of cartesian closed categories are essential and cannot be dispensed with.\nInstead, one sacrifices the duality between \u2227 and \u2228. The motivation for this approach is that a proof\nsystem for classical logic can now be seen as an extension of the \u03bb-calculus and the notion of normalization\ndoes not change. With this approach one has a term calculus for proofs, namely Parigot's \u03bb\u03bc-calculus\n[Par92] and a denotational semantics [Gir91]. An important aspect is the computational meaning in terms\nof continuations [Thi97, SR98]. There is a well explored category theoretical axiomatization [Sel01], and, of\ncourse, a theory of proof nets [Lau99, Lau03], which is based on the proof nets for MELL (see Section 3.1).\nAlthough these proof nets are very important from the \"normalization-as-computation\" point of view, we\nwill not discuss them here because at the current state of the art it is not clear how they can be used to\nidentify proofs in various deductive systems for classical logic (sequent calculus, resolution, tableaux, . . . ).\n2. The second approach considers the perfect symmetry between \u2227 and \u2228 to be an essential facet of Boolean\nlogic, that cannot be dispensed with. Consequently, the axioms of cartesian closed categories and the close\nrelation to the \u03bb-calculus have to be sacrificed. It is much less clear than in the first approach, what the\ncategory theoretical axiomatization [DP04, FP04, LS05a, McK05, Str05b, Lam06] should be, and how a\ntheory of proof nets should look like. There are now two different versions in the literature, one following\nIdeology 2.2.1 (Section 5.1), and the other following Ideology 2.3.1 (Sections 5.2 and 5.3).\n\n5.1\n\nSequent calculus rule based proof nets\n\nClassical logic can be obtained from multiplicative linear logic by adding the rules of contraction and weakening.\nBut for obvious reasons we will here change the notation and use the symbols \u2227 and \u2228 instead of \u000f and O.\nNegation will be denoted by  \u0304*, instead of *\u22a5 . In other words, our formulas are generated by the syntax\nF ::= A | A \u0304 | F \u2228 F | F \u2227 F\n(86)\nNote that as before, we ignore the units30 and push negation to the atoms. Here are the inference rules in the\nsequent calculus:\n\u22a2 \u0393, A\n\u22a2 \u0100, \u2206\ncut\nid\n\u22a2 \u0100, A\n\u22a2 \u0393, \u2206\nexch\n\n\u22a2 \u0393, A, B, \u2206\n\u22a2 \u0393, B, A, \u2206\n\u2228\n\n\u22a2 A, B, \u0393\n\nweak\n\n\u22a2\u0393\n\u22a2 A, \u0393\n\u2227\n\n\u22a2 \u0393, A\n\ncont\n\n\u22a2 A, A, \u0393\n\u22a2 A, \u0393\n\n(87)\n\n\u22a2 B, \u2206\n\n\u22a2 A \u2228 B, \u0393\n\u22a2 \u0393, A \u2227 B, \u2206\nNote that there are various different sequent calculus systems for classical propositional logic, starting with\nthe one by Gentzen [Gen34]. For a systematic treatment, the reader is referred to [TS00]. The motivation for\nchoosing the one in (87) is that it allows for the simplest notion for proof nets according to Ideology 2.2.1.\nWhen we look at Ideology 2.3.1 and the notion of flow-graphs in the next sections, it does not matter which\nsequent system is taken as starting point.\nThe rules in (87) are essentially the same as the ones in (1) plus the ones for contraction and weakening. In\norder to obtain proof nets according to Ideology 2.2.1, we can therefore proceed as shown in Figures 1 and 10.\n5.1.1\n\nExercise\n\nGive the translation of the rules in (87) into proof nets as it is done in Figures 1 and 10.\n\nHere is an example of a sequent calculus proof\nid\nid\nid\nid\n\u22a2 b\u0304, b\n\u22a2 a, \u0101\n\u22a2 a, \u0101\n\u22a2 b\u0304, b\nid\nid\n\u2227\n\u2227\n\u22a2 b\u0304 \u2227 a, \u0101, b\n\u22a2 b\u0304, b\n\u22a2 b\u0304, b\n\u22a2 b\u0304, a, \u0101 \u2227 b\n\u2227\n\u2227\n\u22a2 b\u0304 \u2227 a, \u0101 \u2227 b\u0304, b, b\n\u22a2 b\u0304, b\u0304, b\u0304 \u2227 a, \u0101 \u2227 b\u0304\ncont\ncont\n\u22a2 b\u0304 \u2227 a, \u0101 \u2227 b\u0304, b\n\u22a2 b\u0304, b \u2227 a, \u0101 \u2227 b\ncut\n\u22a2 b\u0304 \u2227 a, \u0101 \u2227 b\u0304, b \u2227 a, \u0101 \u2227 b\n\n(88)\n\n30 Note, that in classical logic, this does not change the logic because we can pick a distinguished atom, say p , which may not\n0\nappear in the formulas, and define t = p0 \u2228 p\u03040 and f = p0 \u2227 p\u03040 .\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n61\n\nand its translation into a proof net:\nid\n\nid\n\nid\n\nb\u0304\n\nid\n\nid\nb\n\na\n\n\u0101\n\nb\n\nb\u0304\n\nid\n\nb\n\nb\u0304\nb\u0304\n\na\n\nb\n\n(89)\n\n\u0101\n\n\u2227\n\n\u2227\n\ncont\n\ncont\n\n\u2227\n\n\u2227\n\nb\u0304 \u2227 a\n\n\u0101 \u2227 b\u0304\n\nb\n\nb\u0304\n\nb\u2227a\n\n\u0101 \u2227 b\n\ncut\nThat this can easily be done has already been noted by Girard in the appendix of [Gir91], where he also\nexplained the problems with this approach that we will discuss below. In [Rob03], Robinson carries out the\ndetails. He uses a two-sided version of the set of rules in (87), but with what we learned in Section 2.6, it is an\neasy exercise to translate back and forth between the one- and two-sided version.\nRobinson also proves the soundness and completeness of the switching correctness criterion (see Definition 2.5.4 and Theorem 2.5.5). For the acyclicity condition this is not surprising since the rules in (87) are\nthe same as in (1) (recall that contraction behaves as O). The connectedness condition is obtained simply by\nattaching a weakening somewhere, similarly as we did it with \u22a5 in Section 3.5. The price to pay is that now\ncertain proofs are distinguished that should be identified according the rule-permutability-argument. To see a\nvery simple example, consider the following three sequent calculus proofs (we systematically omit the exchange\nrule).\nid\nid\nid\nid\n\u22a2 \u0101, a\n\u22a2 \u0101, a\n\u22a2 b, b\u0304\n\u22a2 b, b\u0304\nweak\n\u2227\nweak\nid\nid\n(90)\n\u22a2 c, \u0101, a\n\u22a2 b, b\u0304\n\u22a2 \u0101, a \u2227 b, b\u0304\n\u22a2 \u0101, a\n\u22a2 c, b, b\u0304\n\u2227\nweak\n\u2227\n\u22a2 c, \u0101, a \u2227 b, b\u0304\n\u22a2 c, \u0101, a \u2227 b, b\u0304\n\u22a2 c, \u0101, a \u2227 b, b\u0304\nThey differ from each other only via some trivial rule permutation, and should therefore be identified. But\naccording to [Rob03] they can be translated into five different proof nets. Two of them are shown below:\nid\n\nid\n\n\u0101\n\na\n\nb\n\n(91)\n\n\u2227\n\nweak\n\nb\u0304\nc\n\n\u0101\n\na\u2227b\n\nand\nid\nb\n\nid\n\nweak\na\n\n\u2227\n\u0101\na\u2227b\n\nRR n\u00b0 6013\n\n(92)\n\nb\nc\n\nb\u0304\n\n\f62\n\n5.1.2 Exercise\nin Figure 13.\n\nLutz Strassburger\n\nWhat are the other three proof nets corresponding to (90)? Compare the nets with the ones\n\nLet us now come to cut elimination. We have already seen in the introductory part of Section 5, that there\nis a problem with weakening. The short discussion in Section 3.1 suggests that there might also be a problem\nwith contraction. Observe that in Section 3.1, the contraction rule could appear only on one side of the cut,\nnever at both sides at the same time (because only ?-formulas could be contracted, never !-formulas). This is\nthe reason why in the end we get confluence of cut elimination for MELL\u2212 proof nets. However, for classical\nlogic the situation is different. Contraction can appear on both sides of the cut, as it is shown in the example\nin (88) and (89). For typesetting reasons, let us use the more compact notation (as we also did in Section 2.5):\n\nb\u0304\n\na\n\n\u0101\n\nb\u0304\n\nb\n\nb\n\nb\u0304\n\nb\u0304\n\nb\n\na\n\n\u0101\n\nb\n(93)\n\n\u2227\n\n\u2227\n\ncont\n\n\u2227\n\ncont\n\n\u2227\n\nLet us stress that (89) and (93) are only different notations for the same proof net. Note that we have\nhere an example for the general case in (85). If we want to eliminate the cut from (93), we have to make a\nnondeterministic choice, which subproof we duplicate. As outcome we get either\n\nb\u0304\n\na\n\n\u0101\n\n\u2227\n\nb\u0304\n\nb\u0304\n\n\u2227\n\na\n\n\u0101\n\n\u2227\n\ncont\n\nb\u0304\n\u2227\n\nb\n\nb\n\na\n\n\u0101\n\nb\n\ncont\n\n(94)\n\nb\n\n(95)\n\ncont\n\u2227\n\ncont\n\nb\n\n\u2227\n\nor\n\nb\u0304\n\nb\u0304\n\na\n\n\u0101\n\nb\u0304\n\ncont\n\nb\u0304\ncont\n\nb\n\na\n\u2227\n\n\u0101\n\nb\n\u2227\n\nb\n\na\n\u2227\n\n\u0101\n\u2227\n\n\u2227\n\u2227\ncont\ncont\nIn the appendix of [Gir91], Girard argues that for this reason it is impossible to have a confluent notion\nof cut elimination for proof nets for classical logic. Of course, his argumentation is valid only for proof nets\nfollowing Ideology 2.2.1.\n5.1.3 Exercise Show that (94) and (95) obey the switching criterion, and give the sequent proofs corresponding to (94) and (95).\nAlthough there is no confluent cut elimination, F\u00fchrmann and Pym [FP04] managed to give a category\ntheoretical axiomatization for the proof identifications made by these proof nets. This could be done because\nthe authors dropped the \"equation\"\ncut elimination\n\n=\n\narrow composition in the category of proofs\n\nand added an order enrichment instead. They defined for two proofs f, g : A \u2192 B that f 4 g iff f reduces to g\nvia cut elimination. See [McK05] for relating this to the calculus of structures.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n63\n\nid\nid\nweak\n\nid\n\n\u22a2 \u0101, a\n\n\u2227\n\n\u22a2 \u0101, a, a\n\n\u2227\n\nexch5\ncont3\n\nweak\n\n\u22a2 \u0101, a\n\n\u22a2 \u0101, a\n\u22a2 \u0101, \u0101, a\n\n\u22a2 \u0101, a \u2227 \u0101, \u0101, a\n\n\u22a2 \u0101, a, a \u2227 \u0101, a \u2227 \u0101, \u0101, a\n\u22a2 \u0101, \u0101, a \u2227 \u0101, a \u2227 \u0101, a, a\n\u22a2 \u0101, a \u2227 \u0101, a\n\u2193\nid\n\nid\n\nid\n\n\u22a2 \u0101,\n \u0304, a\n\nweak\n\n\u2227\n\n\u22a2 \u0101,\n \u0304, a,, a\n\n\u2227\n\nexch5\ncont3\n\nweak\n\n\u22a2 \u0101,\n \u0304, a\n\nweak\n\u2227\n\n\u22a2 \u0101,\n \u0304, a,, a \u2227 \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, \u0101,\n \u0304, a\n\u22a2 \u0101,\n \u0304, \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, a,, a\n\u22a2 \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, a\n\nid\n\n\u22a2 \u0101,\n \u0304, a\n\n\u2227\n\n\u22a2 \u0101,\n \u0304, a,, a\n\nexch5\ncont3\n\n\u0101\n\na\n\n\u0101\n\u2227\n\nid\nweak\n\n\u22a2 \u0101,\n \u0304, a\n\n\u22a2 \u0101,\n \u0304, a\n\u22a2 \u0101,\n \u0304, \u0101,\n \u0304, a\n\n\u22a2 \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, \u0101,\n \u0304, a\n\n\u22a2 \u0101,\n \u0304, a,, a \u2227 \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, \u0101,\n \u0304, a\n\u22a2 \u0101,\n \u0304, \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, a,, a\n\u22a2 \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, a\n\u0582\n\n(simple)\n\n\u22a2 \u0101,\n \u0304, \u0101,\n \u0304, a\n\n\u22a2 \u0101,\n \u0304, a \u2227 \u0101,\n \u0304, \u0101,\n \u0304, a\n\n\u2193\nid\n\n\u22a2 \u0101,\n \u0304, a\n\na\n\n\u0581\n\n\u0101\n\na\n\n\u0101\n\na\n\n(extended)\n\n\u2227\n\nFigure 16: From sequent calculus to classical logic proof nets via flow graphs\n\n5.2\n\nFlow graph based proof nets (simple version)\n\nIn the previous section we have seen what happens if we naively carry the approach of Section 2.2 to classical\nlogic. Now we are going to see what happens if we naively carry the approach of Section 2.3 to classical logic.\nWe can define a pre-proof net as in Definition 2.5.1, but now the identity links do not provide a perfect matching\nfor the set of leaves of the sequent forest. It can happen that some atoms have no mate, i.e., live celibate, and\nthat some atoms have more than one mate, i.e., live polygamous. It could even happen that there are two or\nmore identity links between a pair of atoms, as the example (on the right) in Figure 16 shows. This example\nalso shows that we can now completely forget about the correctness criteria that we have seen in Section 2.5.\nBut most importantly, this example shows that for classical logic it makes a huge difference whether we follow\nIdeology 2.2.1 or Ideology 2.3.1 to obtain proof nets. This also means, that the term \"proof net\" should be used\nwith care, because it is not necessarily clear what a proof net for classical logic actually is.\nLet us, for the time being, restrict ourselves to those nets that have at most one identity link between any\npair of atoms, and call them simple prenets:\n5.2.1 Definition A simple prenet is a sequent forest \u0393, possibly with cuts, together with a symmetric,\nirreflexive binary relation P on its set of leaves, such that whenever two atom occurrences are related by P then\nthey must be dual to each other. We will use the notation P \u2704 \u0393.\n\nRR n\u00b0 6013\n\n\f64\n\nLutz Strassburger\n\nAs in Section 2.5, we have to treat cuts as special formulas (see page 19).\nIn the left of Figure 16 we have shown an example how to translate a sequent calculus proof into a simple\nprenet. We draw the flow-graph as we did in Section 2.3 and forget how often a pair of atoms is connected to\neach other. Here is an example of a simple prenet with cut. It is the one obtained from (88):\n\nb\u0304\n\na\n\n\u0101\n\n\u2227\n\nb\u0304\n\nb\n\nb\u0304\n\nb\n\n\u2227\n\na\n\n\u0101\n\n\u2227\n\nb\n\n(96)\n\n\u2227\n\nWe will call a simple prenet sequentializable if it can be obtained via the flow-graph method from the sequent\ncalculus system in (87) extended by the mix-rule\nmix\n\n\u22a2\u0393\n\n\u22a2\u2206\n\n\u22a2 \u0393, \u2206\n\n5.2.2 Exercise Draw the simple prenets that are obtained from the sequent calculus proofs corresponding\nto the proof nets in (94) and (95). Hint: You can do this exercise without doing Exercise 5.1.3.\nWe are now going to define a correctness criterion for simple prenets.\n5.2.3 Definition Let \u0393 be a sequent. A conjunctive pruning of \u0393 is the subforest obtained \u0393 by deleting\none of the two immediate subformulas for every \u2227 and for every cut. Let \u03c0 = P \u2704 \u0393 be a simple prenet. we call\nthe prenet \u03c0 \u2032 = P \u2032 \u2704 \u0393\u2032 a conjunctive pruning of \u03c0 if \u0393\u2032 is a conjunctive pruning of \u0393 and P \u2032 is the restriction\nof P to (the set of leaves of) \u0393\u2032 .31\nHere are two examples for conjunctive prunings of (96):\n\nb\u0304\n\na\n\nb\u0304\n\n\u0101\n\n\u2227\n\nb\n\nb\u0304\n\nb\n\n\u2227\n\na\n\n\u0101\n\n\u2227\n\nb\n\u2227\n\nand\nb\u0304\n\na\n\u2227\n\n5.2.4\n\nExercise\n\nb\u0304\n\n\u0101\n\nb\n\nb\u0304\n\nb\n\n\u2227\n\na\n\n\u0101\n\n\u2227\n\nb\n\u2227\n\nHow many others are there?\n\n5.2.5 Definition A simple prenet P \u2704\u0393 is called correct (or, obeys the pruning condition, if every conjunctive\npruning P \u2032 \u2704 \u0393\u2032 of \u03c0 contains at least one identity link, i.e., P \u2032 is not empty.\nClearly, the example in (96) is correct. Here is an example, which is not correct, because there is a pruning,\nin which all links disappear:\na\n\nb\n\nb\u0304\n\n\u0101\n\n\u2192\n\na\n\nb\n\nb\u0304\n\n\u0101\n\n\u2227\n\u2227\n\u2227\n\u2227\nInterestingly, also in the correctness criterion given by Hughes and van Glabbeek in [HvG03] for MALL\u2212\n(see Section 3.2) the pruning condition plays a role.\n31 Strictly speaking, \u03c0 \u2032 is not a simple prenet because \u0393\u2032 is not a sequent because every \u2227 in \u0393\u2032 is unary. For this reason \u03c0 \u2032 is\nnot a subprenet in the sense of Definition 2.5.7.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n5.2.6\n\nTheorem\n\n65\n\nA simple prenet \u03c0 is correct, if and only if it is sequentializable.\n\nProof: First, observe that the id-rule produces correct prenets and that all rules in (87), including mix, preserve\ncorrectness. For the rules \u2228, exch, weak, cont, and mix, this is obvious. Let us show it here for the \u2227-rule. Let\n\u03c01 and \u03c02 be the simple prenets obtained from\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A\n\nand\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 B, \u2206\n\nrespectively. Let us assume by induction hypothesis that they are correct, and let \u03c0 be the simple prenet\nobtained from\n??\n?\n??\u03a01 \u007f\u007f\u007f ???\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n\u007f\n\u007f\n\u22a2 \u0393, A\n\u22a2 B, \u2206\n\u2227\n\u22a2 \u0393, A \u2227 B, \u2206\nLet \u03c0 \u2032 be a conjunctive pruning of \u03c0. If it removes B from A \u2227 B, then \u03c0 \u2032 contains a link because \u03c01 is correct,\nand if \u03c0 \u2032 removes A, then it must contain a link because \u03c02 is correct. For the cut-rule it is similar.\nConversely, let \u03c0 = P \u2704 \u2206 be a correct prenet. we will proceed by induction on the size of \u2206 (that is, the\nnumber of \u2227, \u2228, atoms, and cuts appearing in it) to construct a a corresponding sequent proof using the rules\nin (87) plus mix.\n\u0088 If \u2206 contains a formula A \u2228 B, then we can apply the \u2228-rule and proceed by induction hypothesis.\n\u0088 If \u2206 contains a formula A \u2227 B, i.e., \u2206 = \u0393, A \u2227 B, then we can form three correct simple prenets\n\u03c01 = P \u2032 \u2704 \u0393, A, and \u03c02 = P \u2032\u2032 \u2704 \u0393, B, and \u03c03 = P \u2704 \u0393, A, B, where P \u2032 and P \u2032\u2032 are the restrictions of P to\n\u0393, A and \u0393, B, respectively. Since \u03c01 , and \u03c02 , and \u03c03 are all correct, we get three sequent calculus proofs\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, B\n\n??\n??\u03a03 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A, B\n\nfrom which we can form the following proof (we omit the instances of exch):\n\n\u2227\n\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A\n\u2227\n\n??\n??\u03a03 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, A, B\n\n\u22a2 \u0393, \u0393, A \u2227 B, A\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2 \u0393, B\n\n(97)\n\n\u22a2 \u0393, \u0393, \u0393, A \u2227 B, A \u2227 B\ncont\n..\n.\ncont\n\u22a2 \u0393, A \u2227 B\n\nwhich translates into \u03c0. Let us make three remarks about that case:\n\u2013 Note that we made crucial use of the fact that we forget how often an identity link is used inside the\nproof.\n\u2013 The proof \u03a03 is needed for keeping the links that cross A \u2227 B. If there is in \u03c0 no link between an\natom in A and an atom in B, then we do not need \u03a03 and could replace (97) by\n\n\u2227\n\n??\n?\n??\u03a01 \u007f\u007f\u007f ???\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n\u007f\n\u007f\n\u22a2 \u0393, A\n\u22a2 \u0393, B\n\ncont\ncont\n\nRR n\u00b0 6013\n\n\u22a2 \u0393, \u0393, A \u2227 B\n..\n.\n\u22a2 \u0393, A \u2227 B\n\n\f66\n\nLutz Strassburger\n\n\u2013 For dealing with cuts we proceed similarly. But to be formally precise, we need to allow to apply the\ncontraction rule not only to formulas in the sequent, but also to cuts.\n\u0088 If \u2206 = \u0393, A such that no link is coming out of A, then we apply the weakening rule and proceed by\ninduction hypothesis.\n\u0088 The only remaining case is where all formulas in \u2206 are atoms. Then our sequent calculus proof is obtained\nby a sufficient number of instances of id, cont, exch, and mix.\n\u2293\n\u2294\n\nWe will use the term simple proof net for the correct (i.e., sequentializable) simple prenets. They have\nbeen introduced in [LS05b]. However, the idea of looking at paired atom occurrences in classical logic is much\nolder. In [And76] Andrews applied the \"flow-graph\" method to resolution proofs and called the result matings.\nHe had, in fact, exactly the same correctness criterion as we have seen above. Independently, Bibel [Bib81]\ninvestigated the same objects and called them connection proofs. Also the term matrix proofs is used because\nformulas have been written in form of matrices.\nHowever, both authors, Andrews and Bibel, did not allow the linking of two atoms that are connected in the\ntree by a conjunction32 . From the viewpoint of provability/correctness, this perfectly makes sense. Note that\nsuch links (we have an example in Figure 16) disappear in every conjunctive pruning. So, why having them in\nthe first place?\nThe reason is cut elimination, i.e., the composition of proofs. We define it in the same way as for MLL\u2212 in\nSection 2.7. In the case of a cut on a compound formula, we do the obvious thing:\nA\n\nB\n\nB\u0304\n\n\u0100\nA\n\n\u2227\n\nB\n\nB\u0304\n\n\u0100\n\n\u2192\n\n\u2228\n\n(98)\n\nTo see that this preserves correctness, note that a conjunctive pruning of the cut on the left yields either A or\nB or B\u0304 \u2228 \u0100, and a conjunctive pruning of the cut on the right yields either A, B or A, B\u0304 or \u0100, B or \u0100, B\u0304. Hence,\nevery conjunctive pruning of the reduced simple prenet contains a conjunctive pruning of the non-reduced simple\nprenet. Therefore it most contain at least one link.\nFor the cut reduction on atomic cuts, we have to be careful, since the atoms can be connected to many other\natoms (or no other atoms). Instead of simply having:\n\u0101\n\na\n\n\u0101\n\na\n\n\u0101\n\n\u2192\n\na\n\nthe reduction looks as follows:\n\n\u0101\n\n\u0101\n\n***\n\n\u0101\n\na\n\n\u0101\n\n***\n\na\n\na\n\n\u2192\n\n\u0101\n\n\u0101\n\n***\n\n\u0101\n\n\u2192\n\n\u0101\n\n\u0101\n\n***\n\n\u0101\n\na\n\n***\n\na\n\nIf one of the two cut atoms is celibate, no link remains:\n\n\u0101\n\n\u0101\n\n***\n\n\u0101\n\na\n\n\u0101\n\nIf the two cut atoms are linked together, then this link is ignored in the reduction (and, of course, removed with\nthe cut):\n\u0101\n\n\u0101\n\n***\n\n\u0101\n\na\n\n\u0101\n\na\n\n***\n\na\n\n\u2192\n\n\u0101\n\n\u0101\n\n***\n\n\u0101\n\na\n\n***\n\na\n\nThe atomic cut reduction also preserves correctness. If we could in the reduced simple prenet construct a\nconjunctive pruning that does not contain an identity link, then the same pruning would not contain a link in\nthe non-reduced net, where one cut atom is always removed.\n32 That\n\nmeans they are connected by a red edge in the relation web, see Definition 2.5.18.\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n5.2.7\n\nTheorem\n\n67\n\nCut elimination for simple proof nets preserves correctness, is confluent, and terminating.\n\nProof: Preservation of correctness has already been shown above. Termination is obvious since each step\nreduces the size of the simple proof net. For confluence we only need to consider atomic cuts since the reduction\nof compound cuts does not create critical pairs. Let \u03c0 be a simple proof net with atomic cuts and let \u03c0 \u2032 be\nthe result of reducing these atomic cuts. Then there is a link between two dual atom occurrences a and \u0101 in\n\u03c0 \u2032 , if either that link is already present in \u03c0, or there is an alternating link-cut-link-cut-. . . -link path in \u03c0 that\nconnects a and \u0101. This is independent from the order in which the atomic cuts are reduces.\n\u2293\n\u2294\nThe natural question that arises now is: How does this confluent cut elimination relate to the non-confluent\ncut elimination in the sequent calculus?\nLet us look again at the two problematic cases (82) and (85). The problem with weakening (82) can easily\nbe solved by using the mix-rule:\n??\n??\u03a01 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2\u0393\nweak\n\u22a2 \u0393, A\ncut\n\n??\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n\u007f\n\u22a2\u2206\nweak\n\u22a2 \u0100, \u2206\n\n??\n??\n??\u03a01 \u007f\u007f\u007f\n??\u03a02 \u007f\u007f\u007f\n?? \u007f\u007f\n?? \u007f\u007f\n\u007f\n\u007f\n\u22a2\u0393\n\u22a2\u2206\nmix\n\u22a2 \u0393, \u2206\n\n\u2192\n\n\u22a2 \u0393, \u2206\n\nBoth subproofs \u03a01 and \u03a02 are kept in the reduced net. With the help of mix, this can also be done in the\nsequent calculus, and in simple proof nets it is done in the same way.\nFor the contraction case (85) the situation is less obvious. Consider again the simple proof net in (96), which\ncorresponds to the sequent calculus proof in (88). If we apply the cut elimination for simple proof nets, we\nobtain the following result:\n\nb\u0304\n\na\n\n\u0101\n\nb\u0304\n\nb\n\na\n\n\u0101\n\n(99)\n\nb\n\n\u2227\n\u2227\n\u2227\n\u2227\nIf you did Exercise 5.2.2, you will notice that this is exactly the simple proof net obtained from the sequent\nproofs corresponding to (94) and (95). However, let us emphasize that this correspondence also makes crucial\nuse of the fact that we deliberately forget how often an identity link is used in the proof. If we kept this\ninformation, the proofs in (94) and (95) would be represented by\n\nb\u0304\n\na\n\u2227\n\n\u0101\n\nb\u0304\n\u2227\n\nb\n\na\n\u2227\n\n\u0101\n\nb\n\u2227\n\nand\n\nb\u0304\n\na\n\u2227\n\n\u0101\n\nb\u0304\n\u2227\n\nb\n\na\n\u2227\n\n\u0101\n\nb\n\u2227\n\nrespectively. See [LS05b] for further details.\nIt should be clear that simple proof nets are not particularly connected to the sequent calculus. We can\nobtain them in the same way from proofs presented in the calculus of structures. Figure 17 shows a deductive\nsystem for classical logic in the calculus of structures. It is a (unit-free) variation of system SKS, presented\nin [BT01]. The rules are the same as the ones for MLL\u2212 in Figure 5. As in the sequent calculus, we add the rules\nfor contraction, weakening, and mix. We also add the m-rule, called medial. As it is the case with mix, it is is\nnot necessary from the viewpoint of provability, but its presence gives the system a much nicer proof-theoretic\nbehavior. See [BT01, Br\u00fc03, Str05b, Lam06] for further details.\nMost of the theory on the relation between proof nets, sequent calculus and calculus of structures, that has\nbeen developed in Section 2, can be ported easily to classical logic. In particular, we can obtain Theorem 2.6.2\nand the commutativity of (49), provided we restrict ourselves to simple proof nets.\n5.2.8 Open Research Problem Find a category theoretical axiomatization that generates the same identification for proofs as it is done by simple proof nets for classical logic. (This is meant in the same sense as\n\nRR n\u00b0 6013\n\n\f68\n\nLutz Strassburger\n\ni\u2193\n\ni\u2193\n\nS{B}\nS{(\u0100 \u2228 A) \u2227 B}\n\u03c3\u2193\n\n\u03b1\u2193\n\ni\u2191\n\n\u0100 \u2228 A\n\nS{A \u2228 B}\nS{B \u2228 A}\n\nS{(A \u2228 B) \u2228 C}\ns\n\nw\u2193\n\nS{B}\n\n\u03b1\u2191\n\nS{A \u2227 B}\nS{B \u2227 A}\n\nS{A \u2227 (B \u2227 C)}\nS{(A \u2227 B) \u2227 C}\n\nS{A \u2227 (B \u2228 C)}\nS{(A \u2227 B) \u2228 C}\nmix\n\nm\n\nS{B \u2228 (A \u2227 \u0100)}\n\n\u03c3\u2191\n\nS{A \u2228 (B \u2228 C)}\n\nc\u2193\n\ni\u2191\n\nA \u2227 \u0100\n\nS{A \u2227 B}\nS{A \u2228 B}\n\nS{(A \u2227 B) \u2228 (C \u2227 D)}\nS{(A \u2228 C) \u2227 (B \u2228 D)}\n\nS{A \u2228 A}\nS{A}\nS{B}\nS{B \u2228 A}\n\nc\u2191\n\nw\u2191\n\nS{A}\nS{A \u2227 A}\nS{A \u2227 B}\nS{B}\n\nFigure 17: A system for classical logic in the calculus of structures\n\n*-autonomous categories provide the axiomatization for proof nets for MLL, and cartesian closed categories for\ntyped \u03bb-terms.)\nThere is already preliminary research in this direction in [LS05b, LS05a, Str05a, Lam06, Str05b], but there\nis still no satisfactory solution.\n\n5.3\n\nFlow graph based proof nets (extended version)\n\nThe first problem with simple proof nets is that they are too simple. When speaking about the identity of\nproofs one should also take into account the size of proofs. But simple proof nets have a size at most quadratic\nin the size of the conclusion sequent. This means they are not able to observe any kind of complexity, not even\nthe exponential blow-up related to cut elimination.\nThe second problem with simple proof nets is that they are too simple. They omit too much important\ninformation about the proof. Checking their correctness takes exponential time, which is not faster than trying\nto prove the conclusion from scratch. But checking a proof should be a feasible task, taking only linear time in\nthe size of the proof.\nA naive solution could be to simply keep track of how often an identity link is used in the proof, i.e., allow\nmore than one link between a pair of dual atoms, as shown on the right in Figure 16. Let us call these new\nobjects extended prenets.\nThe first problem we encounter now is not only to define what correctness means, but also, what sequentializable means. To see the difficulty, consider again the simple proof net in (99). Now, all of the sudden, there is\nno sequent calculus proof that has it a flow-graph. However, we can find a proof in the calculus of structures,\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n69\n\nin the system shown in Figure 17:\ni\u2193\nm\nc\u21934\n\ni\u2193\n\n(b\u0304 \u2227 b\u0304)) \u2228 (b\u0304 \u2227 b\u0304)) \u2228 ((\n((b \u2228 b)) \u2227 ((b \u2228 b))\n))\n\nm\n\n((b\u0304 \u2228 b\u0304)) \u2227 (b\u0304 \u2228 b\u0304))\n)) \u2228 ((b\n(( \u2228 b)) \u2227 ((b \u2228 b))\n))\n\ni\u21932\ns4\n\nc\u21934\n\n(b\u0304 \u2227 b\u0304)) \u2228 ((b \u2227 b))\n\ni\u21932\n\n\u2192\n\n(b\u0304 \u2227 ((a \u2228 \u0101)) \u2227 b\u0304)) \u2228 (b\n( \u2227 (a\n( \u2228 \u0101)) \u2227 b))\n\n(b\u0304 \u2227 b\u0304)) \u2228 (b\u0304 \u2227 b\u0304)) \u2228 ((\n((b \u2228 b)) \u2227 ((b \u2228 b))\n))\n\n((b\u0304 \u2228 b\u0304)) \u2227 (b\u0304 \u2228 b\u0304))\n)) \u2228 ((b\n(( \u2228 b)) \u2227 ((b \u2228 b))\n))\n\ns4\n\n(b\u0304 \u2227 a)) \u2228 (\u0101\n( \u2227 b\u0304)) \u2228 (b\n( \u2227 a)) \u2228 (\u0101\n( \u2227 b))\n\n(b\u0304 \u2227 b\u0304)) \u2228 (b\n( \u2227 b))\n(b\u0304 \u2227 ((a \u2228 \u0101)) \u2227 b\u0304)) \u2228 ((b \u2227 (a\n( \u2228 \u0101)) \u2227 b))\n(b\u0304 \u2227 a)) \u2228 (\u0101\n( \u2227 b\u0304)) \u2228 (b\n( \u2227 a)) \u2228 ((\u0101 \u2227 b))\n\nThis means that for extended prenets, it depends on the chosen deductive system whether a given prenet is\nsequentializable or not.\n5.3.1 Open Research Problem Find a good notion of \"sequentializability\" and a corresponding correctness criterion for extended prenets.\nThe second, more serious problem comes with cut elimination. In [LS05b] it is explained, how cut elimination\nfor extended prenets has to look like. For a cut on compound formulas it is the same as for simple proof nets.\nBut for an atomic cut, we now have to multiply the number of edges. For example\n\n\u0101\n\na\n\n\u0101\n\na\n\n\u0101\n\nreduces to\n\na\n\nIf there are already some links between the remaining pair of atoms, then these links have to be added. For\nexample\n\u0101\n\na\n\n\u0101\n\na\n\n\u0101\n\nreduces to\n\na\n\nOf course, we cannot say whether this preserves correctness, since we do not know what correctness means. But\nthe good news is that cut reduction is still terminating, and that we can get an exponential blow-up in the size\nof the proof when doing cut elimination.\nThe bad news is that cut elimination is no longer confluent. This has already been observed in [LS05b]. The\nfollowing example is taken from [Hor06]. Depending on which cut in\n\u0101\n\na\n\n\u0101\n\na\n\n\u0101\n\na\n\nwe reduce first, we get either\n\u0101\n\na\n\n\u0101\n\na\n\n\u0101\n\na\n\nor\n\n\u0101\n\na\n\n\u0101\n\na\n\n\u0101\n\na\n\nIf we reduce the remaining cut, we get\nor\n\nrespectively. The basic reason of this non-confluence is that we do not have the acyclicity condition anymore,\nand it depends on the order of the cut reductions how often \"the flow-graph runs through a cycle\". In [Hor06],\nHorbach proposes a way of keeping track of the cycles in order to get confluence for cut elimination on extended\nprenets representing intuitionistic proofs.\n\nRR n\u00b0 6013\n\n\f70\n\nLutz Strassburger\n\nAn alternative possible solution could be to redefine cut elimination such that no longer all atomic cuts are\nreduced. In [Str05a, Str05b] it is shown how this can be done such that we get a confluent cut elimination which\ncorresponds to composition of derivations in the calculus of structures:\nA\nk\nk\nB\nk\nk\nC\n\n\u2192\n\nA\nk\nk\nC\n\nWhich still allows to keep the equation\ncut elimination\n\n=\n\narrow composition in the category of proofs\n\nBut then cut elimination for extended prenets does no longer correspond to cut elimination in the sequent\ncalculus. That it is indeed impossible to make the diagram (49) commute for the sequent calculus and extended\nprenets has already been shown with the example in (99) in the previous section. But it is not known whether\nwe can make it commute for the calculus of structures.\n5.3.2 Open Research Problem Find for the calculus of structures (possibly for the system in Figure 17)\na cut elimination procedure, possibly based on splitting (as done in the proof of Theorem 2.7.3) such that it\nbehaves in the same way as the cut elimination for extended prenets, i.e., such that diagram (49) commutes.\nIn any case, what has been said in this section shows that for classical logic the answer to the Big Question 2.7.9 on page 39 is no longer an obvious yes. In fact, the answer might be No!\n5.3.3\n\nOpen Research Problem Make a nice theory out of this mess.\n\nReferences\n[And76]\n\nPeter B. Andrews. Refutations by matings. IEEE Transactions on Computers, C-25:801\u2013807, 1976.\n\n[AR00]\n\nVito Michele Abrusci and Paul Ruet. Non-commutative logic I: The multiplicative fragment. Annals\nof Pure and Applied Logic, 101:29\u201364, 2000.\n\n[Bar79]\n\nMichael Barr. *-Autonomous Categories, volume 752 of Lecture Notes in Mathematics. SpringerVerlag, 1979.\n\n[BCST96] Richard Blute, Robin Cockett, Robert Seely, and Todd Trimble. Natural deduction and coherence\nfor weakly distributive categories. Journal of Pure and Applied Algebra, 113:229\u2013296, 1996.\n[Bib81]\n\nWolfgang Bibel. On matrices with connections. Journal of the ACM, 28:633\u2013645, 1981.\n\n[Blu93]\n\nRichard Blute. Linear logic, coherence and dinaturality. Theoretical Computer Science, 115:3\u201341,\n1993.\n\n[Boo84]\n\nGeorge Boolos. Don't eliminate cut. Journal of Philosophical Logic, 13:373\u2013378, 1984.\n\n[Br\u00fc03]\n\nKai Br\u00fcnnler. Deep Inference and Symmetry for Classical Proofs. PhD thesis, Technische Universit\u00e4t\nDresden, 2003.\n\n[BT01]\n\nKai Br\u00fcnnler and Alwen Fernanto Tiu. A local system for classical logic. In R. Nieuwenhuis and\nA. Voronkov, editors, LPAR 2001, volume 2250 of Lecture Notes in Artificial Intelligence, pages\n347\u2013361. Springer-Verlag, 2001.\n\n[Bus91]\n\nSamuel R. Buss. The undecidability of k-provability. Annals of Pure and Applied Logic, 53:72\u2013102,\n1991.\n\n[BvdW95] Gianluigi Bellin and Jacques van de Wiele. Subnets of proof-nets in MLL\u2212 . In J.-Y. Girard,\nY. Lafont, and L. Regnier, editors, Advances in Linear Logic, volume 222 of London Mathematical\nSociety Lecture Notes, pages 249\u2013270. Cambridge University Press, 1995.\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n71\n\n[CH88]\n\nThierry Coquand and G\u00e9rard P. Huet. The calculus of constructions. Information and Computation,\n76(2/3):95\u2013120, 1988.\n\n[Dan90]\n\nVincent Danos. La logique lin\u00e9aire appliqu\u00e9e \u00e0 l'\u00e9tude de divers processus de normalisation (principalement du \u03bb-calcul). Th\u00e8se de Doctorat, Universit\u00e9 Paris VII, 1990.\n\n[DG04]\n\nPietro Di Gianantonio. Structures for multiplicative cyclic linear logic: Deepness vs cyclicity. In\nJerzy Marcinkowski and Andrzej Tarlecki, editors, Computer Science Logic, CSL 2004, volume 3210\nof Lecture Notes in Computer Science, pages 130\u2013144. Springer-Verlag, 2004.\n\n[DHPP99] H. Devarajan, Dominic Hughes, Gordon Plotkin, and Vaughan R. Pratt. Full completeness of the\nmultiplicative linear logic of chu spaces. In 14th IEEE Symposium on Logic in Computer Science\n(LICS 1999), 1999.\n[Do\u016103]\n\nKosta Do\u0161en. Identity of proofs based on normalization and generality. The Bulletin of Symbolic\nLogic, 9:477\u2013503, 2003.\n\n[DP04]\n\nKosta Do\u0161en and Zoran Petri\u0107. Proof-Theoretical Coherence. KCL Publications, London, 2004.\n\n[DP05]\n\nKosta Do\u0161en and Zoran Petri\u0107. Proof-net categories. preprint, Mathematical Institute, Belgrade,\n2005.\n\n[DR89]\n\nVincent Danos and Laurent Regnier. The structure of multiplicatives. Annals of Mathematical Logic,\n28:181\u2013203, 1989.\n\n[EK66]\n\nSamuel Eilenberg and Gregory Maxwell Kelly. A generalization of the functorial calculus. Journal\nof Algebra, 3(3):366\u2013375, 1966.\n\n[FP04]\n\nCarsten F\u00fchrmann and David Pym. Order-enriched categorical models of the classical sequent\ncalculus. To appear in Journal of Pure and Applied Algebra, 2004.\n\n[FR94]\n\nArnaud Fleury and Christian Retor\u00e9. The mix rule. Mathematical Structures in Computer Science,\n4(2):273\u2013285, 1994.\n\n[Gen34]\n\nGerhard Gentzen. Untersuchungen \u00fcber das logische Schliessen. I. Mathematische Zeitschrift, 39:176\u2013\n210, 1934.\n\n[Gen35]\n\nGerhard Gentzen. Untersuchungen \u00fcber das logische Schliessen. II. Mathematische Zeitschrift,\n39:405\u2013431, 1935.\n\n[Gir72]\n\nJean-Yves Girard. Interpr\u00e9tation fonctionelle et \u00e9limination des coupures de l'arithm\u00e9tique d'ordre\nsup\u00e9rieur. PhD thesis, Universit\u00e9 Paris VII, 1972.\n\n[Gir87]\n\nJean-Yves Girard. Linear logic. Theoretical Computer Science, 50:1\u2013102, 1987.\n\n[Gir91]\n\nJean-Yves Girard. A new constructive logic: Classical logic. Mathematical Structures in Computer\nScience, 1:255\u2013296, 1991.\n\n[Gir96]\n\nJean-Yves Girard. Proof-nets : the parallel syntax for proof-theory. In Aldo Ursini and Paolo\nAgliano, editors, Logic and Algebra. Marcel Dekker, New York, 1996.\n\n[GLT89]\n\nJean-Yves Girard, Yves Lafont, and Paul Taylor. Proofs and Types. Cambridge Tracts in Theoretical\nComputer Science. Cambridge University Press, 1989.\n\n[G\u00f6d31]\n\nKurt G\u00f6del. \u00dcber formal unentscheidbare S\u00e4tze der Principia Mathematica und verwandter Systeme\nI. Monatshefte f\u00fcr Mathematik und Physik, 38:173\u2013198, 1931.\n\n[GS01]\n\nAlessio Guglielmi and Lutz Strassburger. Non-commutativity and MELL in the calculus of structures.\nIn Laurent Fribourg, editor, Computer Science Logic, CSL 2001, volume 2142 of LNCS, pages 54\u201368.\nSpringer-Verlag, 2001.\n\n[GS02]\n\nAlessio Guglielmi and Lutz Strassburger. A non-commutative extension of multiplicative exponential\nlinear logic. Technical Report WV-2002-03, Technische Universit\u00e4t Dresden, 2002. Submitted.\n\nRR n\u00b0 6013\n\n\f72\n\nLutz Strassburger\n\n[Gue99]\n\nStefano Guerrini. Correctness of multiplicative proof nets is linear. In LICS, pages 454\u2013463, 1999.\n\n[Gug02]\n\nAlessio Guglielmi. A system of interaction and structure. To appear in ACM Transactions on\nComputational Logic, 2002.\n\n[Gug04a]\n\nAlessio Guglielmi. Formalism A. note, April 2004.\n\n[Gug04b] Alessio Guglielmi. Formalism B. note, December 2004.\n[HHS05]\n\nRobin Houston, Dominic Hughes, and Andrea Schalk. Modelling linear logic without units (preliminary results). Preprint, available at http://arxiv.org/abs/math/0504037, 2005.\n\n[Hor06]\n\nMatthias Horbach. Proof nets for intuitionistic logic. Master's thesis, Universit\u00e4t des Saarlandes,\n2006.\n\n[Hug04]\n\nDominic Hughes. Deep inderence proof theory equals categorical proof theory minus coherence.\npreprint, 2004.\n\n[Hug05a]\n\nDominic Hughes. Simple free star-autonomous categories and full coherence. Preprint, available at\nhttp://arxiv.org/abs/math.CT/0506521, 2005.\n\n[Hug05b]\n\nDominic Hughes.\nSimple multiplicative proof nets with units.\nhttp://arxiv.org/abs/math.CT/0507003, 2005.\n\n[HvG03]\n\nDominic Hughes and Rob van Glabbeek. Proof nets for unit-free multiplicative-additive linear logic.\nIn 18th IEEE Symposium on Logic in Computer Science (LICS 2003), pages 1\u201310, 2003.\n\n[Joi92]\n\nJean-Baptiste Joinet. Une preuve combinatoire de forte normalisation (du fragment multiplicatif et\nexponentiel) des r\u00e9seaux de preuves pour la logique lin\u00e9aire (PN1). Technical Report 35, \u00c9quipe de\nLogique de Paris VII, 1992.\n\n[Joi06]\n\nJean-Baptiste Joinet. Completeness of mll proof nets w.r.t. weak distributivity, 2006. To appear in\nJournal of Symbolic Logic.\n\n[KM71]\n\nGregory Maxwell Kelly and Saunders Mac Lane. Coherence in closed categories. Journal of Pure\nand Applied Algebra, 1:97\u2013140, 1971.\n\n[Laf88]\n\nYves Lafont. The linear abstract machine. Theoretical Computer Science, 59(1\u20132):157\u2013180, 1988.\n\n[Laf95]\n\nYves Lafont. From proof nets to interaction nets. In J.-Y. Girard, Y. Lafont, and L. Regnier,\neditors, Advances in Linear Logic, volume 222 of London Mathematical Society Lecture Notes, pages\n225\u2013247. Cambridge University Press, 1995.\n\n[Lam58]\n\nJoachim Lambek. The mathematics of sentence structure. American Mathematical Monthly, 65:154\u2013\n169, 1958.\n\n[Lam68]\n\nJoachim Lambek. Deductive systems and categories. I: Syntactic calculus and residuated categories.\nMath. Systems Theory, 2:287\u2013318, 1968.\n\n[Lam69]\n\nJoachim Lambek. Deductive systems and categories. II. standard constructions and closed categories.\nIn P. Hilton, editor, Category Theory, Homology Theory and Applications, volume 86 of Lecture Notes\nin Mathematics, pages 76\u2013122. Springer, 1969.\n\n[Lam94]\n\nFran\u00e7ois Lamarche. Proof nets for intuitionistic linear logic I: Essential nets. Technical report,\nImperial College, London, 1994.\n\n[Lam95]\n\nFran\u00e7ois Lamarche. Games semantics for full propositional linear logic. In Proceedings of the 10th\nAnnual IEEE Symposium on Logic in Computer Science (LICS 95), pages 464\u2013473, 1995.\n\n[Lam01]\n\nFran\u00e7ois Lamarche. On the algebra of structural contexts. Accepted at Mathematical Structures in\nComputer Science, 2001.\n\n[Lam06]\n\nFran\u00e7ois Lamarche. Exploring the gap between linear and classical logic, 2006. Submitted.\n\nPreprint, available at\n\nINRIA\n\n\fProof Nets and the Identity of Proofs\n\n73\n\n[Lau99]\n\nOlivier Laurent. Polarized proof-nets: proof-nets for LC (extended abstract). In Jean-Yves Girard,\neditor, Typed Lambda Calculi and Applications (TLCA 1999), volume 1581 of Lecture Notes in\nComputer Science, pages 213\u2013227. Springer-Verlag, 1999.\n\n[Lau03]\n\nOlivier Laurent. Polarized proof-nets and \u03bb\u03bc-calculus. Theoretical Computer Science, 290(1):161\u2013\n188, 2003.\n\n[LR96]\n\nFran\u00e7ois Lamarche and Christian Retor\u00e9. Proof nets for the Lambek-calculus - an overview. In\nV. Michele Abrusci and Claudia Casadio, editors, Proceedings of the Third Roma Workshop \"Proofs\nand Linguistic Categories\", pages 241\u2013262. CLUEB, Bologna, 1996.\n\n[LS86]\n\nJoachim Lambek and Phil J. Scott. Introduction to higher order categorical logic, volume 7 of\nCambridge studies in advanced mathematics. Cambridge University Press, 1986.\n\n[LS05a]\n\nFran\u00e7ois Lamarche and Lutz Strassburger. Constructing free Boolean categories. In Proceedings of\nthe Twentieth Annual IEEE Symposium on Logic in Computer Science (LICS'05), pages 209\u2013218,\n2005.\n\n[LS05b]\n\nFran\u00e7ois Lamarche and Lutz Strassburger. Naming proofs in classical propositional logic. In Pawel\nUrzyczyn, editor, Typed Lambda Calculi and Applications, TLCA 2005, volume 3461 of Lecture Notes\nin Computer Science, pages 246\u2013261. Springer-Verlag, 2005.\n\n[LS06]\n\nFran\u00e7ois Lamarche and Lutz Strassburger. From proof nets to the free *-autonomous category. Logical\nMethods in Computer Science, 2(4:3):1\u201344, 2006.\n\n[Mac63]\n\nSaunders Mac Lane. Natural associativity and commutativity. Rice University Studies, 49:28\u201346,\n1963.\n\n[Mac71]\n\nSaunders Mac Lane. Categories for the Working Mathematician. Number 5 in Graduate Texts in\nMathematics. Springer-Verlag, 1971.\n\n[McK05]\n\nRichard McKinley. Classical categories and deep inference. In Structures and Deduction 2005\n(Satellite Workshop of ICALP'05), 2005.\n\n[Moo02]\n\nRichard Moot. Proof Nets for Linguistic Analysis. PhD thesis, Utrecht Institute of Linguistics OTS,\nUtrecht University, 2002.\n\n[Par92]\n\nMichel Parigot. \u03bb\u03bc-calculus: An algorithmic interpretation of classical natural deduction. In Logic\nProgramming and Automated Reasoning, LPAR 1992, volume 624 of LNAI, pages 190\u2013201. SpringerVerlag, 1992.\n\n[Pra65]\n\nDag Prawitz. Natural Deduction, A Proof-Theoretical Study. Almquist and Wiksell, 1965.\n\n[Pra71]\n\nDag Prawitz. Ideas and results in proof theory. In J. E. Fenstad, editor, Proceedings of the Second\nScandinavian Logic Symposium, pages 235\u2013307. North-Holland Publishing Co., 1971.\n\n[Pui01]\n\nQuintijn Puite. Sequents and Link Graphs. PhD thesis, University of Utrecht, 2001.\n\n[Ret93]\n\nChristian Retor\u00e9. R\u00e9seaux et S\u00e9quents Ordonn\u00e9s. Th\u00e8se de Doctorat, sp\u00e9cialit\u00e9 math\u00e9matiques,\nUniversit\u00e9 Paris VII, February 1993.\n\n[Ret97]\n\nChristian Retor\u00e9. Pomset logic: A non-commutative extension of classical linear logic. In Ph.\nde Groote and J. R. Hindley, editors, Typed Lambda Calculus and Applications, TLCA'97, volume\n1210 of Lecture Notes in Computer Science, pages 300\u2013318, 1997.\n\n[Ret99a]\n\nChristian Retor\u00e9. Handsome proof-nets: R&B-graphs, perfect matchings and series-parallel graphs.\nRapport de recherche 3652, INRIA, 1999. Appeared as [Ret03].\n\n[Ret99b]\n\nChristian Retor\u00e9. Pomset logic as a calculus of directed cographs. In V. M. Abrusci and C. Casadio,\neditors, Dynamic Perspectives in Logic and Linguistics, pages 221\u2013247. Bulzoni, Roma, 1999. Also\navailable as INRIA Rapport de Recherche RR-3714.\n\n[Ret03]\n\nChristian Retor\u00e9. Handsome proof-nets: perfect matchings and cographs. Theoretical Computer\nScience, 294(3):473\u2013488, 2003.\n\nRR n\u00b0 6013\n\n\f74\n\nLutz Strassburger\n\n[Rob03]\n\nEdmund P. Robinson. Proof nets for classical logic. Journal of Logic and Computation, 13:777\u2013797,\n2003.\n\n[See89]\n\nR.A.G. Seely. Linear logic, *-autonomous categories and cofree coalgebras. Contemporary Mathematics, 92, 1989.\n\n[Sel01]\n\nPeter Selinger. Control categories and duality: on the categorical semantics of the lambda-mu\ncalculus. Mathematical Structures in Computer Science, 11:207\u2013260, 2001.\n\n[SL04]\n\nLutz Strassburger and Fran\u00e7ois Lamarche. On proof nets for multiplicative linear logic with units.\nIn Jerzy Marcinkowski and Andrzej Tarlecki, editors, Computer Science Logic, CSL 2004, volume\n3210 of LNCS, pages 145\u2013159. Springer-Verlag, 2004.\n\n[SR98]\n\nThomas Streicher and Bernhard Reus. Classical logic, continuation semantics and abstract machines.\nJournal of Functional Programming, 8(6):543\u2013572, 1998.\n\n[Str02]\n\nLutz Strassburger. A local system for linear logic. In Matthias Baaz and Andrei Voronkov, editors,\nLogic for Programming, Artificial Intelligence, and Reasoning, LPAR 2002, volume 2514 of LNAI,\npages 388\u2013402. Springer-Verlag, 2002.\n\n[Str03a]\n\nLutz Strassburger. Linear Logic and Noncommutativity in the Calculus of Structures. PhD thesis,\nTechnische Universit\u00e4t Dresden, 2003.\n\n[Str03b]\n\nLutz Strassburger. MELL in the Calculus of Structures. Theoretical Computer Science, 309(1\u20133):213\u2013\n285, 2003.\n\n[Str05a]\n\nLutz Strassburger. From deep inference to proof nets. In Structures and Deduction - The Quest for\nthe Essence of Proofs (Satellite Workshop of ICALP 2005), 2005.\n\n[Str05b]\n\nLutz Strassburger. On the axiomatisation of Boolean categories with and without medial, 2005.\nPreprint, available at http://arxiv.org/abs/cs.LO/0512086.\n\n[Thi97]\n\nHayo Thielecke. Categorical Structure of Continuation Passing Style. PhD thesis, University of\nEdinburgh, 1997.\n\n[Thi03]\n\nR\u00fcdiger Thiele. Hilbert's twenty-fourth problem. American Mathematical Monthly, 110:1\u201324, 2003.\n\n[Tiu01]\n\nAlwen Fernanto Tiu. Properties of a Logical System in the Calculus of Structures. Master's thesis,\nTechnische Universit\u00e4t Dresden, 2001.\n\n[Tiu06]\n\nAlwen Fernanto Tiu. A system of interaction and structure II: The need for deep inference. Logical\nMethods in Computer Science, 2(2):1\u201324, 2006.\n\n[TS00]\n\nAnne Sjerp Troelstra and Helmut Schwichtenberg. Basic Proof Theory. Cambridge University Press,\nsecond edition, 2000.\n\n[Yet90]\n\nDavid N. Yetter. Quantales and (noncommutative) linear logic. Journal of Symbolic Logic, 55(1):41\u2013\n64, 1990.\n\nINRIA\n\n\fUnit\u00e9 de recherche INRIA Futurs\nParc Club Orsay Universit\u00e9 - ZAC des Vignes\n4, rue Jacques Monod - 91893 ORSAY Cedex (France)\nUnit\u00e9 de recherche INRIA Lorraine : LORIA, Technop\u00f4le de Nancy-Brabois - Campus scientifique\n615, rue du Jardin Botanique - BP 101 - 54602 Villers-l\u00e8s-Nancy Cedex (France)\nUnit\u00e9 de recherche INRIA Rennes : IRISA, Campus universitaire de Beaulieu - 35042 Rennes Cedex (France)\nUnit\u00e9 de recherche INRIA Rh\u00f4ne-Alpes : 655, avenue de l'Europe - 38334 Montbonnot Saint-Ismier (France)\nUnit\u00e9 de recherche INRIA Rocquencourt : Domaine de Voluceau - Rocquencourt - BP 105 - 78153 Le Chesnay Cedex (France)\nUnit\u00e9 de recherche INRIA Sophia Antipolis : 2004, route des Lucioles - BP 93 - 06902 Sophia Antipolis Cedex (France)\n\n\u00c9diteur\nINRIA - Domaine de Voluceau - Rocquencourt, BP 105 - 78153 Le Chesnay Cedex (France)\n\nhttp://www.inria.fr\nISSN 0249-6399\n\n\f"}