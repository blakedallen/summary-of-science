{"id": "http://arxiv.org/abs/0907.0877v3", "guidislink": true, "updated": "2010-02-08T14:49:21Z", "updated_parsed": [2010, 2, 8, 14, 49, 21, 0, 39, 0], "published": "2009-07-05T18:24:28Z", "published_parsed": [2009, 7, 5, 18, 24, 28, 6, 186, 0], "title": "Algebraic Ordinals", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0907.5173%2C0907.2928%2C0907.2598%2C0907.0190%2C0907.2978%2C0907.5258%2C0907.1995%2C0907.4151%2C0907.3246%2C0907.5254%2C0907.5101%2C0907.5165%2C0907.0600%2C0907.1846%2C0907.2040%2C0907.2655%2C0907.4916%2C0907.3902%2C0907.5603%2C0907.4935%2C0907.2574%2C0907.5038%2C0907.2018%2C0907.2249%2C0907.0475%2C0907.2605%2C0907.1618%2C0907.0644%2C0907.0632%2C0907.2515%2C0907.3532%2C0907.5497%2C0907.3893%2C0907.2350%2C0907.1514%2C0907.5545%2C0907.1664%2C0907.0877%2C0907.2568%2C0907.1133%2C0907.2004%2C0907.0534%2C0907.3640%2C0907.3261%2C0907.2490%2C0907.0655%2C0907.0460%2C0907.3594%2C0907.3180%2C0907.3797%2C0907.3407%2C0907.3590%2C0907.1912%2C0907.2815%2C0907.3366%2C0907.3463%2C0907.4138%2C0907.2877%2C0907.0033%2C0907.3793%2C0907.5294%2C0907.5481%2C0907.3076%2C0907.0329%2C0907.5247%2C0907.1792%2C0907.0479%2C0907.0268%2C0907.5273%2C0907.4781%2C0907.0380%2C0907.3114%2C0907.1032%2C0907.5073%2C0907.0263%2C0907.0529%2C0907.1583%2C0907.2948%2C0907.2701%2C0907.2924%2C0907.4652%2C0907.2846%2C0907.4555%2C0907.4022%2C0907.0379%2C0907.2447%2C0907.4613%2C0907.0505%2C0907.3253%2C0907.2725%2C0907.4495%2C0907.4464%2C0907.0324%2C0907.2331%2C0907.3878%2C0907.5077%2C0907.2654%2C0907.2806%2C0907.3703%2C0907.0188%2C0907.2987&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "Algebraic Ordinals"}, "summary": "An algebraic tree T is one determined by a finite system of fixed point\nequations. The frontier \\Fr(T) of an algebraic tree t is linearly ordered by\nthe lexicographic order \\lex. When (\\Fr(T),\\lex) is well-ordered, its order\ntype is an \\textbf{algebraic ordinal}. We prove that the algebraic ordinals are\nexactly the ordinals less than $\\omega^{\\omega^\\omega}$.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0907.5173%2C0907.2928%2C0907.2598%2C0907.0190%2C0907.2978%2C0907.5258%2C0907.1995%2C0907.4151%2C0907.3246%2C0907.5254%2C0907.5101%2C0907.5165%2C0907.0600%2C0907.1846%2C0907.2040%2C0907.2655%2C0907.4916%2C0907.3902%2C0907.5603%2C0907.4935%2C0907.2574%2C0907.5038%2C0907.2018%2C0907.2249%2C0907.0475%2C0907.2605%2C0907.1618%2C0907.0644%2C0907.0632%2C0907.2515%2C0907.3532%2C0907.5497%2C0907.3893%2C0907.2350%2C0907.1514%2C0907.5545%2C0907.1664%2C0907.0877%2C0907.2568%2C0907.1133%2C0907.2004%2C0907.0534%2C0907.3640%2C0907.3261%2C0907.2490%2C0907.0655%2C0907.0460%2C0907.3594%2C0907.3180%2C0907.3797%2C0907.3407%2C0907.3590%2C0907.1912%2C0907.2815%2C0907.3366%2C0907.3463%2C0907.4138%2C0907.2877%2C0907.0033%2C0907.3793%2C0907.5294%2C0907.5481%2C0907.3076%2C0907.0329%2C0907.5247%2C0907.1792%2C0907.0479%2C0907.0268%2C0907.5273%2C0907.4781%2C0907.0380%2C0907.3114%2C0907.1032%2C0907.5073%2C0907.0263%2C0907.0529%2C0907.1583%2C0907.2948%2C0907.2701%2C0907.2924%2C0907.4652%2C0907.2846%2C0907.4555%2C0907.4022%2C0907.0379%2C0907.2447%2C0907.4613%2C0907.0505%2C0907.3253%2C0907.2725%2C0907.4495%2C0907.4464%2C0907.0324%2C0907.2331%2C0907.3878%2C0907.5077%2C0907.2654%2C0907.2806%2C0907.3703%2C0907.0188%2C0907.2987&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "An algebraic tree T is one determined by a finite system of fixed point\nequations. The frontier \\Fr(T) of an algebraic tree t is linearly ordered by\nthe lexicographic order \\lex. When (\\Fr(T),\\lex) is well-ordered, its order\ntype is an \\textbf{algebraic ordinal}. We prove that the algebraic ordinals are\nexactly the ordinals less than $\\omega^{\\omega^\\omega}$."}, "authors": ["S. L. Bloom", "Z. Esik"], "author_detail": {"name": "Z. Esik"}, "author": "Z. Esik", "arxiv_comment": "30 pages", "links": [{"href": "http://arxiv.org/abs/0907.0877v3", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0907.0877v3", "rel": "related", "type": "application/pdf"}], "arxiv_primary_category": {"term": "cs.FL", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "cs.FL", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "cs.LO", "scheme": "http://arxiv.org/schemas/atom", "label": null}, {"term": "F.4.3", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0907.0877v3", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0907.0877v3", "journal_reference": null, "doi": null, "fulltext": "arXiv:0907.0877v3 [cs.FL] 8 Feb 2010\n\nAlgebraic Ordinals\u2217\nZ. \u00c9sik\u2021\nDepartment of Informatics\nUniversity of Szeged\nSzeged, Hungary\n\nS. L. Bloom\u2020\nDepartment of Computer Science\nStevens Institute of Technology\nHoboken, NJ, USA\n\nNovember 7, 2018\n\nAbstract\nAn algebraic tree T is one determined by a finite system of fixed\npoint equations. The frontier Fr(T ) of an algebraic tree T is linearly\nordered by the lexicographic order <l . If (Fr(T ) <l ) is well-ordered, its\norder type is an algebraic ordinal. We prove that the algebraic ordinals\n\u03c9\nare exactly the ordinals less than \u03c9 \u03c9 .\n\n1\n\nIntroduction\n\nFixed points and finite systems of fixed point equations occur in just about all\nareas of computer science. Regular and context-free languages, rational and\nalgebraic formal power series, finite state process behaviors can all be characterized as (components of) canonical solutions (e.g., unique, least or greatest,\nor initial solutions) of systems of fixed point equations.\nConsider the fixed point equation\nX\n\n=\n\n1+X\n\nover linear orders, where + denotes the sum operation (functor) on linear orders.\nAs explained in [BE10], its canonical (initial) solution is the ordinal \u03c9, or any\n\u2217 This\n\nis a revised version of the paper submitted July 5, 2009\nin part by the TAMOP-4.2.2/08/1/2008-0008 program of the Hungarian National Development Agency.\n\u2021 Supported in part by grant no. K 75249 from the National Foundation of Hungary\nfor Scientific Research and by the TAMOP-4.2.2/08/1/2008-0008 program of the Hungarian\nNational Development Agency.\n\u2020 Supported\n\n1\n\n\flinear order isomorphic to the ordering of the natural numbers. For another\nexample, consider the system of fixed point equations\nX\n\n= Y +X\n\nY\n\n= 1+Y\n\nThe first component of its canonical solution is \u03c9 2 , and the second component\nis \u03c9. Of course, there exist fixed point equations whose canonical solution is not\nwell-ordered, for example, the canonical solution of\n=\n\nX\n\nX +1\n\nis \u03c9 \u2217 , the reverse of \u03c9, and the canonical solution of\nX\n\n= X +1+X\n\nis the ordered set of the rationals.\nThe above equations are quite simple since they involve no parameters. The\nunknowns X, Y range over linear orders, or equivalently, constant functions (or\nrather, functors) defined on linear orders. By allowing unknowns ranging over\nfunctions (or functors) in several variables, we obtain the ordinal \u03c9 \u03c9 as the first\ncomponent of the canonical solution of\nF0\n\n=\n\nG(1)\n\nG(x)\nF (x)\n\n=\n=\n\nx + G(F (x))\nx + F (x)\n\nThe second and third components of the canonical solution are functors which\nmap a linear order x to x \u00d7 \u03c9 2 and x \u00d7 \u03c9, respectively.\nWe call a linear order algebraic if it is isomorphic to the first (or principal)\ncomponent of the canonical solution of a system of fixed point equations of the\nsort\nFi (x0 , . . . , xni \u22121 )\n\n= ti ,\n\ni = 1, . . . , n\n\n(1)\n\nwhere n1 = 0 and each ti is an expression composed of the function variables\nFj , j = 1, . . . , n, the individual variables x0 , . . . , xni \u22121 , the constant 1 and the\nsum operation +. Moreover, we call a linear order regular if it is isomorphic to\nthe first component of the canonical solution of a system (1) with ni = 0 for all\ni. Further, we call an ordinal algebraic or regular if it is an algebraic or regular\nlinear order.\nFrom the results in [Heil80], it follows easily that an ordinal is regular if and\nonly if it is less than \u03c9 \u03c9 (See also [BC01].) It was conjectured in [BE07] that\n\u03c9\nan ordinal is algebraic if and only if it is less than \u03c9 \u03c9 . Our aim in this paper\nis to confirm this conjecture.\n2\n\n\fInfinite structures may be described by finite presentations in several different\nways. One method, represented by automatic structures, consists in describing\na structure up to isomorphism by representing its elements as words or trees\nor some other combinatorial objects, and its relations by rewriting rules or\nautomata. Another, algebraic approach is describing an infinite structure as the\ncanonical solution of a system of fixed point equations over a suitably defined\nalgebra of structures. Our results show that these methods are equivalent, at\nleast for small ordinals.1\nAn automatic relational structure [Hod82, KN95] is a countable structure whose\ncarrier is given by a regular language and whose relations can be computed by\nsynchronous multi-tape automata. A tree automatic structure [DT90, Del04,\nCol04] is defined using tree automata, cf. [GS84]. It was proved in [Del04] that\nthe automatic ordinals are exactly the ordinals less than \u03c9 \u03c9 . See also [KRS03].\nIn [Del04], it is also shown that an ordinal is tree automatic if and only if it is\n\u03c9\nless than \u03c9 \u03c9 . Thus, an ordinal is automatic if and only if it is regular2 , and\nis tree automatic if and only if it is algebraic. Actually the claim that every\nregular ordinal is automatic is immediate. It would be interesting to derive a\ndirect proof of the fact that every algebraic ordinal is tree automatic, or the\nother way around.\nIn a traditional setting, one solves a system of fixed point equations in an algebra\nequipped with a suitable partial order; there is a least element, suprema of\n\u03c9-chains exist, the operations preserve the ordering and least upper bounds\nof \u03c9-chains. Such algebras are commonly called continuous algebras (or \u03c9continuous algebras), cf. [GTWW77, Gue81]. In this setting, one solution of\nthis kind of system is provided by least fixed points. The classical Mezei-Wright\ntheorem [MW67] asserts that such a solution is preserved by a continuous, order\npreserving algebra homomorphism.\nHowever, in several settings such as (countable) linear orders, there is no welldefined partial order but one can naturally introduce a category by considering\nmorphisms between linear orders. A generalization of the classical Mezei-Wright\ntheorem to the setting of \"continuous categorical algebras\" has been given in\n[BE10], where least elements are replaced by initial elements, and suprema of\n\u03c9-chains are replaced by colimits of \u03c9-diagrams. Since trees, equipped with\nthe usual partial order [GTWW77, Gue81, BE10] form an initial continuous\ncategorical algebra, it follows that instead of solving a system of fixed point\nequations directly over linear orders, we may first find its least solution over\ntrees, to obtain an algebraic or regular tree, and then take the image of this\ntree with respect to the unique morphism from trees to linear orders which\nassigns to a tree the linear order determined by the frontier of the tree. Thus,\nup to isomorphism, an algebraic (or regular) linear order is the frontier of an\nalgebraic (or regular) tree. In this way, we may represent algebraic and regular\nlinear orders and ordinals as frontiers of algebraic or regular trees, and this is\n1 For\n\nanother result in this direction, see [Col04].\nthis fact with Theorem 2 in [BKN08].\n\n2 Compare\n\n3\n\n\fthe approach we take here. This approach is not new. Courcelle was the first\nto use frontiers of trees to represent linear orders and words, i.e., labeled linear\norders. The origins of the notions of regular linear order and regular word go\nback to [Cour78a].\n\u03c9\n\nIn our argument showing that every algebraic ordinal is less than \u03c9 \u03c9 , we will\nmake use of certain context-free grammars generating prefix languages, called\n\"ordinal grammars\" which seem to have independent interest. Equipped with\nthe lexicographic order (see below), the language generated by an ordinal grammar is well-ordered. We show that an ordinal is the order type of a language\n\u03c9\ngenerated by an ordinal grammar if and only if it is less than \u03c9 \u03c9 . We then\nshow how to translate an algebraic tree given by a system of equations to an\nordinal grammar generating the frontier of the tree.\nThe paper is organized as follows. In Section 2, we define regular and algebraic\ntrees and linear orders, and regular and algebraic ordinals. Then, in Section 3,\nwe establish some closure properties of algebraic linear orders, including closure\nunder sum, multiplication, and \u03c9-power, and use these closure properties to\n\u03c9\nestablish that any ordinal less than \u03c9 \u03c9 is algebraic. Section 4 is devoted to\nordinal grammars and the proof of the result that an ordinal is the order type\nof the context-free language generated by an ordinal grammar, equipped with\n\u03c9\nthe lexicographic order, if and only if it is less than \u03c9 \u03c9 . Then, in Section 5\nwe show how to construct for an algebraic tree T (given by a system of fixed\npoint equations) an ordinal grammar G such that the order type of the language\ngenerated by G equals the order type of the frontier of T . (The proof of the\ncorrectness of the translations is moved to an appendix.) The paper ends with\nSection 6 containing some concluding remarks.\n\n2\n\n2.1\n\nLinear orders, words, prefix languages, and\ntrees\nLinear orders\n\nA linearly ordered set (A, <A ) consists of a set A equipped with a strict linear\norder, i.e., an irreflexive and transitive binary relation <A that satisfies exactly\none of the conditions\nx = y or x <A y or y <A x,\nfor all x, y \u2208 A. If (A, <A ) and (B, <B ) are linearly ordered sets, a morphism\nh : (A, <A ) \u2192 (B, <B ) is a function h : A \u2192 B such that for all x, y \u2208 A, if x <A\ny then h(x) <B h(y). The collection of all linearly ordered sets and morphisms\nforms a category LO. We say two linearly ordered sets are isomorphic if they are\nisomorphic in LO. The order type of a linear order is the isomorphism class\nof the linear order in LO. We write o(A, <A ) for the order type of (A, <A ).\n4\n\n\fA linearly ordered set (A, <A ) is well-ordered if every nonempty subset of A\nhas a least element. If \u03b1 is an ordinal, then \u03b1 is well-ordered by the membership\nrelation \u2208. When (A, <A ) is well-ordered, there is a unique ordinal \u03b1 such that\n(\u03b1, \u2208) is isomorphic to (A, <A ), and the order type of (A, <A ) is conveniently\nidentified with this ordinal.\nRemark. We remind the reader that if \u03b1 = o(A, <A ) and \u03b2 = o(B, <B ) are\nordinals, where A, B are disjoint sets, then \u03b1 + \u03b2 is the order type of A \u222a B,\nordered by putting every element of A before every element of B; otherwise,\nimposing the given ordering on elements inside A or B. Similarly, if \u03b1n =\no(An ,P\n<n ) is an ordinal for each n \u2265 0, where S\nthe sets An are pairwise disjoint,\n\u03b1\nis\nthe\norder\ntype\nof\nthe\nunion\nthen\nn\nn An ordered by making every\nn\nelement of An less than every element in Am , for n < m, and imposing the\ngiven order on An .\nThe ordinal \u03b1 \u00d7 \u03b2 is the order type of A \u00d7 B, ordered by \"last differences\", i.e.,\nwhere\n(a, b) < (a\u2032 , b\u2032 )\n\n\u21d0\u21d2\n\nb <B b\u2032 or (b = b\u2032 and a <A a\u2032 ).\nn\n\nz\n}|\n{\nLast, \u03b1 is the least upper bound of all ordinals \u03b1 = \u03b1 \u00d7 . . . \u00d7 \u03b1, for n < \u03c9.\n\u03c9\n\nn\n\nFor more definitions and facts on linear orders and ordinals we refer to [Roit90,\nRos82, Sier58]. For later use, we prove:\nLemma 2.1 Suppose that \u03b1 is an ordinal and \u03b2 is an infinite ordinal, so that\n1 + \u03b2 = \u03b2. If \u03b1 is a successor ordinal then\n(\u03b2 + 1) \u00d7 \u03b1 \u2264\n\n\u03b2 \u00d7 \u03b1 + 1.\n\nIf \u03b1 is 0 or a limit ordinal, then\n(\u03b2 + 1) \u00d7 \u03b1\n\n\u2264 \u03b2 \u00d7 \u03b1.\n\nProof. We prove both claims by transfinite induction on \u03b1. The case when\n\u03b1 = 0 is clear. Assume that \u03b1 is a successor ordinal. Then \u03b1 = \u03b3 + n for some\npositive integer n where \u03b3 is 0 or a limit ordinal. Then, using the induction\nhypothesis and the assumption 1 + \u03b2 = \u03b2,\n(\u03b2 + 1) \u00d7 \u03b1\n\n= (\u03b2 + 1) \u00d7 \u03b3 + (\u03b2 + 1) \u00d7 n\n\u2264 \u03b2\u00d7\u03b3+\u03b2\u00d7n+1\n= \u03b2 \u00d7 (\u03b3 + n) + 1\n= \u03b2 \u00d7 \u03b1 + 1.\n\n5\n\n\fSuppose now that \u03b1 is a limit ordinal. Then,\n(\u03b2 + 1) \u00d7 \u03b1 =\n\nsup ((\u03b2 + 1) \u00d7 \u03b3)\n\u03b3<\u03b1\n\n\u2264\n\nsup (\u03b2 \u00d7 \u03b3 + 1)\n\u03b3<\u03b1\n\n\u2264\n\n\u03b2 \u00d7 \u03b1,\n\nagain by the induction hypothesis.\n\n2.2\n\n\u2737\n\nWords\n\nWe use N for the set of nonnegative integers. If n \u2208 N, then\n[n] = {0, . . . , n \u2212 1},\nso that [0] = \u2205. The collection of all finite words on a set A is denoted A\u2217 . The\nempty word is denoted \u01eb. The set of nonempty words on A is A+ = A\u2217 \\{\u01eb}. We\ndenote the product (concatenation) of two words u, v \u2208 A\u2217 by uv. We identify\nan element a \u2208 A with the corresponding word of length one.\nWhen A is linearly ordered by <A , then A\u2217 is equipped with two partial orders.\nThe prefix order, written u <p v, is defined by:\nu <p v\n\n\u21d0\u21d2\n\nv = uw,\n\nw 6= \u01eb,\n\nfor some word w. The strict or branching order, written u <s v is defined\nby: u <s v if and only if for some words u1 , u2 , v2 , and a, b \u2208 A,\nu\nv\n\n=\n=\n\na\n\n<A\n\nu1 au2\nu1 bv2 ,\n\nand\n\nb.\n\nThe lexicographic order on A\u2217 is defined by:\nu <l v\n\n\u21d0\u21d2\n\nu <p v or u <s v.\n\nIt is clear that for any u, v \u2208 A\u2217 , exactly one of the following possibilities holds:\nu = v, u <p v, v <p u, u <s v, v <s u.\nThus, the lexicographic order is a linear order on A\u2217 .\n\n2.3\n\nPrefix languages\n\nA prefix language on a set A is a subset L of A\u2217 such that if u \u2208 L and uv \u2208 L\nthen v = \u01eb. For later use, we state the following facts about prefix languages.\n6\n\n\fLemma 2.2\n\u2022 If (P, <P ) is a countable linearly ordered set, there is a prefix\nlanguage L on [2] such that (P, <P ) and (L, <l ) are isomorphic.\n\u2022 If L is a prefix language, then, for u, v \u2208 L, u <l v \u21d0\u21d2 u <s v.\n\u2022 If K, L \u2286 A\u2217 are prefix languages, where A is linearly ordered, so is KL =\n{uv : u \u2208 K, v \u2208 L} and, when (K, <l ) and (L, <l ) are well-ordered,\no(KL, <l)\n\n= o(L, <l ) \u00d7 o(K, <l ).\n\n\u2022 Suppose that L \u2286 [2]\u2217 is a prefix language such that \u03b1 = o(L, <l ) is an\nordinal. Then\n[\n(\n1n 0Ln , <l )\nn\u22650\n\nis well-ordered and, if \u03b1 > 1,\n\u03b1\u03c9\n\n= o(\n\n[\n\n1n 0Ln , <l ).\n\n(2)\n\nn\u22650\n\nProof. For the first statement we refer to [Cour78a, BE04]. We prove only the\nstatement (2). The set, say L\u221e , of words on the right side of (2) is the set of\nall words of the form 1n 0u, for u \u2208 Ln . For any words u, v, if 1n 0u <p 1m 0v,\nthen\nand u <p v. Since L is a prefix language, so is Ln and, thus so\nS n n= m\nn\nis n 1 0L . Also, if n < m, 1n 0u <s 1m 0v, and 1n 0u <s 1n 0v if and only if\nu <s v. Thus, by definition,\nthe order type of the lexicographic order of the\nP\nprefix language L\u221e is n \u03b1n . It is now easy to see that this sum is \u03b1\u03c9 .\n\u2737\n\n2.4\n\nTrees\n\nSuppose that \u03a3 is a (finite) ranked alphabet, i.e., a nonempty finite set partitioned into subsets \u03a3k of \"k-ary operation symbols\", k \u2265 0. Moreover, suppose\nthat V = {x0 , x1 , . . .} is an ordered set of \"individual variables\". A \u03a3-tree T\nin the variables V , or a \"tree over \u03a3 in the individual variables V \", is a partial\nfunction [n]\u2217 \u2192 \u03a3 \u222a V satisfying the conditions listed below. Here, n is largest\nsuch that \u03a3n 6= \u2205. The conditions are:\n\u2022 The domain of T , dom(T ), is prefix closed: if T (uv) is defined, then so is\nT (u).\n\u2022 If T (u) \u2208 \u03a3k , k > 0, and T (ui) is defined, then i \u2208 [k].\n\u2022 If T (u) \u2208 \u03a30 \u222a V , then u is a leaf, and T (ui) is undefined, for all i.\n\n7\n\n\fA \u03a3-tree T is complete if whenever T (u) is defined in \u03a3n , for some u, then\nT (u0), . . . , T (u(n \u2212 1)) are all defined. Moreover, T is finite if its domain is\nfinite. Below we will usually denote finite trees by lower case letters. The size of\na finite tree t is the size of the set dom(t). The set of all \u03a3-trees in the variables\nV is denoted T\u03a3\u03c9 (V ). Moreover, for a subset Vn = {x0 , . . . , xn\u22121 } of V , we write\nT\u03a3\u03c9 (Vn ) for the collection of all trees all whose leaves are labeled in \u03a30 \u222a Vn .\nWhen n = 0, we write simply T\u03a3\u03c9 .\nTrees are equipped with the following partial order T \u2741 T \u2032 : Given T, T \u2032 \u2208\nT\u03a3\u03c9 (V ) such that T 6= T \u2032 , we define T \u2741 T \u2032 if and only if for all words u, if\nT (u) is defined, then T (u) = T \u2032 (u). It is well-known that the partially ordered\nset (T\u03a3\u03c9 (V ), \u2741) is \u03c9-complete, i.e., T\u03a3\u03c9 (V ) has as least element \u22a5, the totally\nundefined tree, and least upper bounds of all \u03c9-chains. Indeed, if T0 \u2741 T1 \u2741 . . .\nis an \u03c9-chain in T\u03a3\u03c9 (V ), the supremum is the tree T whose domain is the union\nof the domains of the trees Tn , and, if u is a word in this union, T (u) = \u03c3 \u2208 \u03a3\nif and only if Tn (u) = \u03c3, for some n. Similarly, T (u) = vi for some vi \u2208 V\nif and only if Tn (u) = vi for some n. Each symbol \u03c3 \u2208 \u03a3k induces a k-ary\noperation on T\u03a3\u03c9 (V ) in the usual way. It is well-known that these operations\nare \u03c9-continuous in all arguments and T\u03a3\u03c9 (V ) is an \u03c9-continuous algebra. In\nthe same way, for every n, T\u03a3\u03c9 (Vn ) is an \u03c9-continuous algebra (in fact, the free\n\u03c9-continuous \u03a3-algebra on Vn ). See [GTWW77, Gue81].\n\n2.5\n\nTree substitution\n\nIn this section we define a substitution operation on trees, sometimes called\nsecond-order substitution.\nSuppose that \u03a3 and \u2206 are ranked alphabets and for each \u03c3 \u2208 \u03a3n we are given a\n\u03c9\ntree R\u03c3 \u2208 T\u2206\n(Vn ). We define substitution in two steps, first for finite trees, and\nby continuity for infinite trees. For each finite tree t \u2208 T\u03a3 (V ) we define the tree\n\u03c9\nS = t[\u03c3 7\u2192 R\u03c3 ]\u03c3\u2208\u03a3 in T\u2206\n(V ), sometimes denoted just t[\u03c3 7\u2192 R\u03c3 ] by induction\non the size of t. When t is the empty tree \u22a5, so is S. When t is x, for some\nx \u2208 V , then S = x. Otherwise t is of the form \u03c3(t0 , . . . , tn\u22121 ), where \u03c3 \u2208 \u03a3n ,\nand we define\nS = R\u03c3 (t\u20321 , . . . , t\u2032n )\nwhere t\u2032i = ti [\u03c3 7\u2192 R\u03c3 ], for all i.\nSuppose now that T is an infinite tree in T\u03a3 (V ). Then there is an ascending\n\u03c9-chain (tn ) of finite trees such that T = supn tn . We define\nT [\u03c3 7\u2192 R\u03c3 ] = sup tn [\u03c3 7\u2192 R\u03c3 ].\nn\n\nIt is known, see [Cour83], that substitution is \u03c9-continuous.\n\n8\n\n\fProposition 2.3 Substitution is a continuous function\nY\n\u03c9\n\u03c9\nT\u03a3\u03c9 (V ) \u00d7\n(V ).\nT\u2206\n(Vn )\u03a3n \u2192 T\u2206\nn\n\nBelow when \u03a3 and \u2206 are not disjoint and R\u03c3 = \u03c3(x1 , . . . , xn ) for some \u03c3 \u2208 \u03a3n ,\nthen we often omit \u03c3 from the arguments of the substitution.\n\n2.6\n\nAlgebraic trees and ordinals\n\nNow consider a finite system E of equations of the form\nF1 (x0 , . . . , xn1 \u22121 )\nF2 (x0 , . . . , xn2 \u22121 )\n\nFm (x0 , . . . , xnm \u22121 )\n\n= t1 (x0 , . . . , xn1 \u22121 )\n= t2 (x0 , . . . , xn2 \u22121 )\n..\n.\n\n(3)\n\n= tm (x0 , . . . , xnm \u22121 ),\n\nwhere, for i = 1, . . . , m, ti is a term over the ranked alphabet \u03a3 \u222a F in the\nvariables {x0 , . . . , xni \u22121 } (i.e., finite complete tree in T\u03a3\u03c9 (Vni )), where F =\n{F1 , . . . , Fm } is the set of \"function variables\" and each Fi has rank ni . See the\nexample in (4) below. Each term ti induces a function\n\u03c9\n\u03c9\n\u03c9\ntE\ni : T\u03a3 (Vn1 ) \u00d7 . . . \u00d7 T\u03a3 (Vnm ) \u2192 T\u03a3 (Vni )\n\nby substitution:\n(R1 , . . . , Rm ) 7\u2192 ti [Fj 7\u2192 Rj ]1\u2264j\u2264m .3\nBy Proposition 2.3 this function is \u03c9-continuous. The target tupling\nE\nhtE\n1 , . . . , tm i\n\nmapping T\u03a3\u03c9 (Vn1 ) \u00d7 . . . \u00d7 T\u03a3\u03c9 (Vnm ) to itself is also \u03c9-continuous and has a least\nfixed point (T1 , . . . , Tm ). Thus, there is a least solution (T1 , . . . , Tm ) of any\nsuch system. One function variable Fi of rank 0 is selected as the principal\nvariable, and the corresponding tree Ti is the principal component of the\nleast solution. (Typically, we choose the first function variable as the principal\nvariable.) If every integer ni , i = 1, . . . , m, is zero, the system is said to be\nregular.\nDefinition 2.4 A tree T in T\u03a3\u03c9 (Vk ) is algebraic in T\u03a3\u03c9 (Vk ), (respectively, regular), if there is a finite system E, (respectively, regular system), of equations\nas above such that T is the principal component of the least solution of E in\nT\u03a3\u03c9 (Vk ).\n3 It is understood here that each \u03c3 \u2208 \u03a3 remains unchanged, i.e., gets substituted by\nk\n\u03c3(x0 , . . . , xk\u22121 ).\n\n9\n\n\fAn alternative definition is possible by interpreting finite systems of fixed point\nequations directly on the \"continuous categorical algebra\" of linear orders. See\n[BE10].\nWe will use the above definition mainly when k = 0. It is known that when\nT \u2208 T\u03a3\u03c9 (Vn ) and n < m, then T is algebraic in T\u03a3\u03c9 (Vn ) if and only if it is\nalgebraic in T\u03a3 (Vm ). Thus, we may simply call T just algebraic. Moreover, we\nsay that a tree T \u2208 T\u03a3\u03c9 (V ) is algebraic if it is algebraic in T\u03a3 (Vn ), for some\nn \u2265 0. It is also known that when \u03a3 \u2286 \u03a3\u2032 , then a tree T \u2208 T\u03a3\u03c9 (V ) is algebraic\nif and only if T is algebraic in T\u03a3\u03c9\u2032 (V ). Similar facts and conventions hold for\nregular trees. So below we can simply say that a tree is algebraic, or regular\nwithout specifying exactly the ranked alphabet.\nThe set of leaves of a tree T in T\u03a3\u03c9 (V ) is denoted\nFr(T ) =\n\n{u \u2208 [n]\u2217 : T (u) \u2208 \u03a30 \u222a V },\n\nand is called the frontier of T . Fr(T ) is a prefix language linearly ordered by\n<l . Here, n is the maximum of the ranks of the symbols in \u03a3.\nDefinition 2.5 A linear order is algebraic (respectively, regular) if it isomorphic to (Fr(T ), <l ) for some algebraic (respectively, regular) tree. An algebraic\nor regular ordinal is an ordinal which is an algebraic or regular linear order.\nHeilbrunner [Heil80] proved that the frontiers of regular trees are those obtainable from the empty and one point frontiers by the operations of \"concatenation,\nomega and omega-op powers\", and infinitely many \"shuffle\" operations. It is\nan easy corollary of this fact that the regular ordinals are those less than \u03c9 \u03c9 .\n(There is a somewhat longer argument based only on the facts in [BC01].) In\nthis paper we will prove that an ordinal is algebraic if and only if it is less than\n\u03c9\n\u03c9\u03c9 .\nThe following fact is known. See [Cour83].\nProposition 2.6 The classes of algebraic and regular trees are closed under\nfirst- and second-order substitution.\nIn the remaining part of this section we show that for algebraic and regular\nlinear orders one may restrict attention to those algebraic or regular \u03a3-trees for\nwhich \u03a3n = \u2205 unless n = 2 or n = 0.\nLet \u2206 be the ranked alphabet with one binary function symbol and one constant\nsymbol; otherwise, \u2206n = \u2205.\nProposition 2.7 For any ranked alphabet \u03a3 and any algebraic tree T \u2208 T\u03a3\u03c9 (V )\n\u03c9\nthere is an algebraic tree T \u2032 \u2208 T\u2206\nsuch that (Fr(T ), <l ) and (Fr(T \u2032 ), <l ) are\nisomorphic.\n\u2737\n10\n\n\fFor example, consider the system E of equations\nF0\nF1 (x)\n\n=\n=\n\n\u03c31 (a, b, F1 (a))\nF2 (x, x)\n\nF2 (x, y) =\n\n(4)\n\n\u03c31 (\u03c32 (a), F2 (x, F2 (x, y)), y)\n\nwhich uses a function symbol \u03c31 in \u03a33 . The least solution consists of three trees\n(T0 , T1 , T2 ) having vertices of out-degree 3. We replace the system E by the\nsystem\nF0\n\n=\n\nF1 (x) =\nF2 (x, y) =\n\ng(a, g(a, F1 (a)))\nF2 (x, x)\ng(a, g(F2 (x, F2 (x, y)), y))\n\nin which the right hand terms use only the function variables and the one binary\nfunction symbol g, and the one constant symbol a. If (T0\u2032 , T1\u2032 , T2\u2032 ) is the least\nsolution of this second system, (Fr(Ti ), <l ) is isomorphic to (Fr(Ti\u2032 ), <l ), for\ni = 1, 2, 3.\nThus, from now on, we will assume that if T is an algebraic tree, then Fr(T ) \u2286\n[2]\u2217 .\nExample 2.8 Let \u03a3 contain the binary symbol g, the unary symbol f and the\nconstant a. Consider the system\nF0\nF (x)\n\n= F (a)\n= g(x, F (f (x)))\n\nThen the first component of the least solution of this system is the tree\nT0 = g(a, g(f (a), g(f (f (a)), . . . , g(f n (a), . . .)))).\nThus, this tree is algebraic. See also [Cour78b, Cour83, Gue81].\n\n3\n\nClosure properties of algebraic ordinals\n\nIn this section we use certain closure properties of algebraic ordinals to prove\n\u03c9\nthat every ordinal less than \u03c9 \u03c9 is algebraic.\nProposition 3.1 Let C be any set of ordinals which contains 0,1, and is closed\nunder sum, product and \u03c9-power: i.e., if \u03b1, \u03b2 \u2208 C, then \u03b1 + \u03b2, \u03b1 \u00d7 \u03b2, \u03b1\u03c9 belong\n\u03c9\nto C. Then all ordinals less than \u03c9 \u03c9 belong to C.\n\n11\n\n\fProof. This follows from the assumptions and induction, making use of the\n\u03c9\nCantor Normal Form [Roit90, Ros82, Sier58] for ordinals less than \u03c9 \u03c9 . In fact,\n\u03c9\u03c9\nit is known that the set of ordinals less than \u03c9\nis the least set of ordinals\ncontaining 0, 1 which is closed under sum, product, and \u03c9-power.\n\u2737\n\u03c9\n\nWe use Proposition 3.1 to show all ordinals less than \u03c9 \u03c9 are algebraic. For this\nreason, we fix the ranked alphabet \u2206 containing only a binary symbol g and a\n\u03c9\nunary symbol a. We show that all ordinals less than \u03c9 \u03c9 arise as frontiers of\n\u03c9\nalgebraic trees in T\u2206\n.\nThe ordinal 0 is algebraic, since if T is the empty tree, then Fr(T ) is the empty\nlanguage, and the order type of the empty language is 0. The ordinal 1 is\nalgebraic since the one-point tree is algebraic.\nSuppose that \u03b1 = o(Fr(T ), <l ) and \u03b2 = o(Fr(S), <l ), where T and S are alge\u03c9\nbraic trees in T\u2206\n.\nProposition 3.2 If \u03b1 and \u03b2 are algebraic ordinals, so is \u03b1 + \u03b2.\nProof. Consider the algebraic tree g(T, S) = g(a, b)[a 7\u2192 T, b 7\u2192 S] whose root\nis labeled by the function symbol g and whose left subtree is T and whose right\nsubtree is S. Then the tree g(T, S) is algebraic, and its frontier has order type\n\u03b1 + \u03b2.\n\u2737\nSince 0 and 1 are algebraic, we have the easy corollary that every finite ordinal\nis algebraic.\nProposition 3.3 If \u03b1 and \u03b2 are algebraic ordinals, so is \u03b1 \u00d7 \u03b2.\nProof.\n\nThe tree S[a 7\u2192 T ] is algebraic, and its frontier has order type \u03b1 \u00d7 \u03b2.\n\u2737\n\nProposition 3.4 If \u03b1 is an algebraic ordinal, so is \u03b1\u03c9 .\n\u03c9\nProof. Suppose that \u03b1 = o(Fr(T ), <l ) for an algebraic tree T in T\u2206\n. Consider\n\u03c9\nthe tree T0 of Example 2.8 and let S be the algebraic tree in T\u2206 obtained by\nsubstituting the tree T for each vertex labeled f : S = T0 [f 7\u2192 T ]. Then S is\nalgebraic and its frontier is of order type \u03b1\u03c9 .\n\u2737\n\u03c9\n\nCorollary 3.5 Every ordinal less than \u03c9 \u03c9 is algebraic.\nProof. By Propositions 3.2, 3.3 and 3.4, together with Proposition 3.1.\n\n12\n\n\u2737\n\n\f4\n\nGrammars\n\u03c9\n\nIn our argument proving that all algebraic ordinals are less than \u03c9 \u03c9 we will\nuse certain context-free grammars, called ordinal grammars.\nThroughout this section, we assume that\nG = (N, T, S, P )\nis a context-free grammar, with nonterminals N , start symbol S \u2208 N , terminals\nT = {0, 1}, and productions P .\nWe will denote finite words on the alphabet {0, 1} by u, v, w, x, y, . . .; nonterminals will be written X, Y, Z, . . ., and we will denote by p, q, r, s . . . words on\nN \u222a T , possibly containing nonterminals.\nFurther, we assume that each context-free grammar has the following properties:\n\u2022 Either each nonterminal X \u2208 N is \"coaccessible\", i.e., L(X) is a nonempty\nsubset of {0, 1}\u2217, where L(X) is the collection of all words u \u2208 {0, 1}\u2217 such\nthat there is some derivation\n\u2217\n\n=\u21d2\n\nX\n\nu,\n\nor N = {S} and P is empty. We write L(G) for L(S).\n\u2022 Each nonterminal X is \"accessible\", i.e., there is some derivation\n\u2217\n\n=\u21d2\n\nS\n\nqXr\n\nwhere q, r \u2208 (N \u222a T )\u2217 .\nWe end this section with some classical definitions. Suppose X, Y are nonterminals. Write\nY\n\n\u0016\n\nX\n\n\u2217\n\nif there is some derivation X =\u21d2 pY q for some p and q. Define X \u2248 Y if both\nX \u0016 Y and Y \u0016 X hold. When Y \u0016 X but X \u2248 Y does not hold, we write\nY \u227a X.\nThe relation \u0016 is a preorder on the nonterminals, and induces a partial order\n\u2264 on the equivalence classes\n[X] :=\n\n{Y : X \u2248 Y },\n\nwhere [Y ] \u2264 [X] if Y \u0016 X.\nWe say X is a recursive nonterminal if there is some nontrivial derivation\nX\n\n\u2217\n\n=\u21d2\n13\n\npXq,\n\n(5)\n\n\ffor some words p, q \u2208 (N \u222a T )\u2217 . If not, X is a non-recursive nonterminal.\nWhen X is non-recursive, and X \u2192 p is a rule, Y \u227a X, for all nonterminals in\np.\nDefinition 4.1 The height of a nonterminal X is the number of equivalence\nclasses [Y ] strictly below [X]. If q is a finite word on N \u222a T , the height of q,\nht(q), is the maximum of the heights of the nonterminals occurring in q. If q\nhas no nonterminals, ht(q) = \u22121.\nIf there are k nonterminals, ht(X) < k, for all nonterminals X. If X has height\nzero, and Y \u0016 X, then Y \u2248 X.\nFor any word q in (N \u222a T )\u2217 , write L(q) for all words in {0, 1}\u2217 derivable in G\nfrom q.\n\n4.1\n\nPrefix and ordinal grammars\n\nOur definition of an ordinal grammar is motivated by Proposition 4.3 below.\nBut first we need the following fact:\nLemma 4.2 Suppose L \u2286 {0, 1}\u2217 is any language. If (L, <l ) is not wellordered, then there is a countable descending chain (un ), n = 0, 1, . . ., of words\nin L such that\nun+1\n\n<s\n\nun ,\n\nfor each n \u2265 0.\nProof. Suppose that (vn ) is a countable <l -descending chain of words in L.\nThen, for each n, either vn+1 <p vn or vn+1 <s vn . Now define u0 = v0 . Since\nv0 has only finitely many prefixes, there is a least k such that vk+1 <s vk <p\n. . . <p v0 . Then u1 = vk+1 <s u0 , since u <s v if u <s w and w <p v, for any\nwords u, v, w. Similarly, assuming that um has been defined as vm\u2032 , for some\nm\u2032 , we may define um+1 as the first vk such that k > m\u2032 and vk <s um .\n\u2737\nWe take note of the following inheritance property.\nProposition 4.3 If (L(G), <l ) is well-ordered, then, for any nonterminal X,\n(L(X), <l ) is also well-ordered.\nProof. If not, by Lemma 4.2, suppose that there is a countable chain\n. . . <s u1 <s u0 .\n\n14\n\n\fof words in L(X). Thus, for each n, un+1 = xn 0yn and un = xn 1zn , for some\nwords xn , yn , zn \u2208 {0, 1}\u2217. Since all nonterminals are accessible and coaccessible,\nthere are words v, w such that\n\u2208 L(G),\n\nvui w\nfor each i \u2265 0, and thus\nvun+1 w\n\n<s\n\nvun w,\n\nfor each n \u2265 0, showing (L(G), <l ) is not well-ordered, contradicting the hypothesis.\n\u2737\nDefinition 4.4 A grammar G is a prefix grammar if, for each nonterminal\nX, L(X) is a prefix language. An ordinal grammar is a prefix grammar such\nthat (L(G), <l ) is well-ordered.\nIf G = (N, T, P, S) is an ordinal grammar, then by Proposition 4.3, (L(X), <l\n) = (L(X), <s ) is well-ordered, for all X \u2208 N .\nThe following fact is immediate from Lemma 2.2 and the definitions.\nLemma 4.5 If G is a prefix grammar, then for any word q = v0 X1 v1 . . . vk\u22121 Xk vk \u2208\n(N \u222a T )\u2217 , L(q) is a prefix language with (L(q), <l ) = (L(q), <s ) and\no(L(q), <l ) = o(L(Xk ), <l ) \u00d7 . . . \u00d7 o(L(X1 ), <l ).\nMoreover, if G is an ordinal grammar, then for any word q \u2208 (N \u222aT )\u2217 , (L(q), <l\n) is well-ordered.\nWe write o(q) for the order type of (L(q), <l ). In particular, o(X) denotes the\norder type of the linear order (L(X), <l ) = (L(X), <s ).\nWe list some examples of ordinal grammars. Each grammar includes nonterminals from the set\n\u03a9\n{\u03a91 , \u03a92 , . . . , \u03a9\u03a9\n1 , \u03a92 , . . .}\nand productions of some of the previous ones.\n1. \u03c9\n\u2192 0 + 1\u03a91 .\n\n\u03a91\nL(\u03a91 ) = 1\u2217 0, so that o(\u03a91 ) = \u03c9.\n2. \u03c9 2\n\u03a92\nL(\u03a92 ) =\n\nS\n\nk,n\n\n\u2192 0\u03a91 + 1\u03a92 .\n\n1k 01n 0 = L(\u03a9)2 , so that o(\u03a92 ) = \u03c9 2 .\n15\n\n\f3. \u03c9 n+1\n\u2192 0\u03a9n + 1\u03a9n+1 .\n\n\u03a9n+1\no(\u03a9n+1 ) = o(\u03a91 )n+1 .\n4. \u03c9 \u03c9\n\n\u03a9\u03a9\n\u2192 0 + 1\u03a9\u03a9\n1\n1 \u03a91 .\nS\nS\nn\nn\nn\n\u2217 n\n\u03a9\n\u03c9\nL(\u03a9\u03a9\n1)=\nn 1 0L(\u03a91 ) =\nn 1 0(1 0) , so that o(\u03a91 ) = \u03c9 .\n5. \u03c9 \u03c9\n\nn+1\n\n\u03a9\u03a9\nn+1\n\n\u03a9\n\u2192 0 + 1\u03a9\u03a9\nn+1 \u03a9n\n\nNote that the first three are regular grammars, but the subsequent ones are\ncontext-free ordinal grammars.\nWe now establish some closure properties of the ordinals of ordinal grammars.\nProposition 4.6 The set of ordinals o(L(G)), for an ordinal grammar G, is\nclosed under sum, products and \u03c9-powers.\nProof. Suppose that Gi are ordinal grammars, for i = 1, 2. Then, the grammar\nwith a new start symbol S+ and productions\nS+\n\n\u2192 0S1 + 1S2\n\ntogether with the productions of G1 and G2 is a grammar satisfying\no(S+ )\n\n= o(L(G1 )) + o(L(G2 )).\n\nIf, instead, we add the new start S\u00d7 and the production\nS\u00d7\n\n\u2192 S2 S1\n\nto the productions of G1 and G2 , we obtain a grammar satisfying\no(S\u00d7 ) =\n\no(L(G1 )) \u00d7 o(L(G2 )).\n\nLast, if we add the new start symbol S\u03c9 and the productions\nS\u03c9\n\n\u2192 0 + 1S\u03c9 S1\n\nto the productions of G1 , we obtain a grammar satisfying\no(S\u03c9 )\n\n= o(L(G1 ))\u03c9 .\n\nIn each case, the constructed grammar is an ordinal grammar.\n16\n\n\u2737\n\n\f\u03c9\n\nProposition 4.7 Any ordinal less than \u03c9 \u03c9 is the ordinal o(L(G)), for some\nordinal grammar G.\nProof. From Proposition 4.6 and Proposition 3.1, using the fact that every\nfinite ordinal is the ordinal of an ordinal grammar.\n\u2737\nRemark 4.8 The above proposition also follows from the corresponding result\nfor algebraic ordinals and the facts in Section 5.\n\n4.2\n\nA bound on ordinals of ordinal grammars\n\nIn this section, we will show that for any ordinal grammar G, o(L(G)) is less\n\u03c9\nthan \u03c9 \u03c9 .\nThroughout this section, we assume that G is an ordinal grammar and L(G)\nis infinite. Moreover, we assume that L(X) contains at least two words, for\neach nonterminal X. Note that for each nonterminal X, since L(X) is a prefix\nlanguage, it does not contain the empty word.\n\u2217\n\nProposition 4.9 If X =\u21d2 q for some X \u2208 N and q = v0 X1 v1 . . . vk\u22121 Xk vk \u2208\n(N \u222a T )\u2217 then o(q) = o(Xk ) \u00d7 . . . \u00d7 o(X1 ) \u2264 o(X). In particular, o(Xi ) \u2264 o(X)\nfor all i.\nProof. Immediate from Lemma 4.5 and the fact that L(q) \u2286 L(X).\n\n\u2737\n\nThe relations \u0016 and \u2248 were defined at the beginning of Section 4.\nCorollary 4.10 If Y \u0016 X, then o(Y ) \u2264 o(X). If X \u2248 Y , o(X) = o(Y ).\nProof. Immediate, from Proposition 4.9.\n\n\u2737\n\nIt is not necessarily true that if o(X) = o(Y ) then X \u2248 Y . Consider the\nexample:\nX1\n\n\u2192 1X2\n\nX2\n\n\u2192 1X2 + 0.\n\nThen X2 \u227a X1 , and o(X1 ) = o(X2 ) = \u03c9, since\n[\nL(X2 ) =\n1n 0\nn\u22650\n\nL(X1 )\n\n=\n\n[\n\nn\u22651\n\n17\n\n1n 0.\n\n\f\u2217\n\nProposition 4.11 For any nonterminal X, there is no derivation X =\u21d2 Xp\nwith p 6= \u01eb.\n\u2217\n\nProof. Indeed, suppose that X =\u21d2 Xp. There are nonempty words u, v such\n\u2217\n\u2217\n\u2217\n\u2217\nthat p =\u21d2 v, and X =\u21d2 u. Thus, X =\u21d2 u and X =\u21d2 uv, so that L(X)\nis not a prefix language.\n\u2737\n\u2217\n\nProposition 4.12 For each derivation X =\u21d2 p, either Y \u227a X holds for all\nnonterminals Y in p, or there is exactly one nonterminal Y occurring in p with\nX \u2248 Y , and in this case, p = uY q, for some u \u2208 {0, 1}\u2217 and for some q with\nht(q) < ht(X).\n\u2217\n\nProof. Suppose that X =\u21d2 qY rZs is a derivation, where Y, Z \u2248 X. Let\n\u03b1 = o(X), \u03b2 = o(Y ), \u03b3 = o(Z). Then by Corollary 4.10, \u03b1 = \u03b2 = \u03b3, and thus\nby Proposition 4.9, \u03b1 \u00d7 \u03b1 \u2264 o(qY rZs) \u2264 \u03b1. This contradicts the assumption\nthat L(X) contains at least two words. Similarly, if there are nonterminals\n\u2217\nY, Z such that X =\u21d2 qY rZs with ht(Y ) < ht(X) = ht(Z), then o(X) \u2265\no(X) \u00d7 o(Z) \u2265 o(X) \u00d7 2, an impossibility, since o(X) \u2265 2.\n\u2737\nThe next fact is a basic result.\n\u2217\n\n\u2217\n\nLemma 4.13 Suppose X =\u21d2 uXp and X =\u21d2 vXq. If |u| \u2264 |v|, then\nu \u2264p v. In particular, if |u| = |v|, then u = v.\n\u2217\n\n\u2217\n\nProof. Assume u <s v, say. Suppose p =\u21d2 w and q =\u21d2 w\u2032 . Then, for each\n\u2217\n\u2217\nn, X =\u21d2 un X wn , so that X =\u21d2 un v z w\u2032 wn = yn , where z is any word in\n\u2217\n{0, 1}\u2217 with X =\u21d2 z. But, yn+1 <s yn , for each n, contradicting the fact that\n(L(X), <l ) is well-ordered.\n\u2737\n\u2217\n\nLemma 4.14 Suppose there is a derivation X =\u21d2 uXp. Suppose also that\n\u2217\nX =\u21d2 v. Then either v <s u or u <p v.\nProof. For any two words u, v there are four possibilities:\nu <s v, v \u2264p u, v <s u, u <p v.\nWe show that the first two possibilities are ruled out.\nIf u <s v, then, for any n \u2265 1, un+1 vwn+1 <s un vwn , where w is any terminal\n\u2217\nword with p =\u21d2 w, so that there is a descending chain in L(X).\nIf v \u2264p u, then since v 6= \u01eb, v <p uvw, for any word w, so that L(X) is not a\nprefix language.\n\u2737\nRecall that a primitive word is a nonempty word v which cannot be written\nas un , for any word u and integer n > 1. The primitive root [Lot97] of a\nnonempty word v is a primitive word u such that v = un , for some n \u2265 1.\n18\n\n\fProposition 4.15 Suppose that X is a recursive nonterminal. Then there is a\n\u2217\n+\nunique shortest word uX\n0 \u2208 {0, 1} such that whenever X =\u21d2 uXp for some\n+\n\u2217\nX\nu \u2208 {0, 1} and p \u2208 (N \u222a T ) , then u is a power of u0 .\n\u2217\n\nProof. Consider any derivation X =\u21d2 vXq with v \u2208 {0, 1}+ and q \u2208 (N \u222a T )\u2217 ,\nX\nlet uX\n0 denote the primitive root of v. Thus, u0 is the shortest word such that\n\u2217\nX\nv is a power of uX\n0 , and clearly, u0 is primitive. If X =\u21d2 uXp then there are\nsome m, n \u2265 1 such that |um | = |v n |. But then, by Lemma 4.13,\num\n\n=\n\nvn .\n\nIt then follows that u, v are powers of the same word (see [Lot97] for example),\nwhich implies that u also is a power of uX\n\u2737\n0 .\nBelow we will write u0 for uX\n0 whenever X is clear from the context.\nProposition 4.16 Suppose that X is recursive and v \u2208 L(X). Then, there is\nsome n \u2265 1 such that v <s un0 .\n\u2217\n\nProof. Indeed, there is a word u such that |v| < |u| and X =\u21d2 uXp, for\nsome p \u2208 (N \u222a T )\u2217 . Then, v <s u, by Lemma 4.14, and u = un0 , for some n, by\nProposition 4.15.\n\u2737\nThus, for v \u2208 L(X), if we choose n as the least integer such that v <s un0 ,\nwe may write v in a unique way as u0n\u22121 w where u0 is not a prefix of w and\nw <s u0 . Moreover, we can write w as x0y where x1 is a prefix of u0 .\nDefinition 4.17 Suppose that X is a recursive nonterminal, and the word x1\nis a prefix of u0 . For each n \u2265 0, define L(n, x, X) as Sthe set of all words of\nthe form un0 x0y in L(X). Moreover, define L(n, X) = x L(n, x, X), where x\nranges over all words such that x1 is a prefix of u0 .\nLemma 4.18 Suppose n < m. If v \u2208 L(n, X) and w \u2208 L(m, X), then v <s w.\n\u2032\n\u2032\n\u2032\nProof. Write v = un0 x0y and w = um\n0 x 0y , where x1 and x 1 are prefixes of\nu0 . If u0 = x1r, then\n\nv\n\n=\n<s\n=\n\nun0 x0y\nun0 (x1r)m\u2212n x\u2032 0y \u2032\n\u2032\n\u2032\num\n0 x 0y = w.\n\n\u2737\n\nThe following lemma gives an easy upper bound to the ordinal of a union.\n\n19\n\n\fLemma 4.19 Suppose that L1 , L2 are subsets of {0, 1}\u2217 such that for i = 1, 2,\n(Li , <l ) is well-ordered. Then (L1 \u222a L2 , <l ) is well-ordered. Let o(Li , <l ) \u2264 \u03b1i ,\nwhere \u03b1i is a (infinite) limit ordinal, so that 1 + \u03b1i = \u03b1i , i = 1, 2. Then\no(L1 \u222a L2 , <l ) \u2264\n\nmax{\u03b11 \u00d7 \u03b12 , \u03b12 \u00d7 \u03b11 }.\n\nProof.\nTo show L1 \u222a L2 is well-ordered, suppose that (vn ) is an infinite\ndescending chain in L1 \u222a L2 . Then, either there are infinitely many vn \u2208 L1 ,\nor infinitely many vn in L2 . Either possibility contradicts the assumption that\nboth L1 and L2 are well-ordered.\nWithout loss of generality we may assume that (L1 , <l ) is cofinal in (L1 \u222aL2 , <l ),\ni.e., for each y \u2208 L2 there is some x \u2208 L1 with y \u2264 x. For each y \u2208 L2 let f (y)\ndenote the least x \u2208 L1 with y \u2264 x. For each x \u2208 L1 , let \u03b2(x) denote the order\ntype of the set {y \u2208 L2 : f (y) = x}. Then, using Lemma 2.1 in the last line,\nX\no(L1 \u222a L2 ) \u2264\n(\u03b2(x) + 1)\nx\u2208L1\n\n\u2264\n\nX\n\n(\u03b12 + 1)\n\nx\u2208L1\n\n=\n\u2264\n\n(\u03b12 + 1) \u00d7 \u03b11\n\u03b12 \u00d7 \u03b11 .\n\nThus, in this case, o(L1 \u222a L2 ) \u2264 \u03b12 \u00d7 \u03b11 .\n\n\u2737\n\nBy induction, we have:\nCorollary 4.20 For any finite collection {Li : S\ni = 1, . . . , n} of subsets of {0, 1}\u2217\nsuch that for each i, (Li , <l ) is well-ordered, ( i Li , <l ) is well-ordered. Moreover,\nS if o(Li , <l ) \u2264 \u03b1i where \u03b1i is a limit ordinal for all 1 \u2264 i \u2264 n, it holds that\n( i Li , <l )\n[\no( Li , <l )\ni\n\n\u2264 max{\u03b1\u03c0(1) \u00d7 . . . \u00d7 \u03b1\u03c0(n) }\n\u03c0\n\nwhere \u03c0 ranges over all permutations of {1, . . . , n}.\n\n\u2737\n\nThe next theorem is one of our main results.\nTheorem 4.1 Suppose that X is a nonterminal of height h. Then\no(X) \u2264\n\nh\n\n\u03c9\u03c9 .\n\nProof.\nWe prove this claim by induction on the height of X. Let X be\na nonterminal of height h and suppose that we have proved the claim for all\n20\n\n\fnonterminals of height less than h. Below we will make use of the fact that the\nh\nset of ordinals less than \u03c9 \u03c9 is closed under sum and product. Moreover, when\nh\nh\nh > 0, then for every ordinal \u03b1 < \u03c9 \u03c9 there is a limit ordinal \u03b2 < \u03c9 \u03c9 with\n\u03b1 < \u03b2. Indeed, we can choose \u03b2 = \u03c9 h\u22121 \u00d7 n for some n.\nCase 1. X is not recursive. Then, by the induction hypothesis, we have o(Y ) <\nh\n\u03c9 \u03c9 whenever Y occurs on the right side of a production whose left side is X.\nh\nIt follows by Proposition 4.9 that o(p) < \u03c9 \u03c9 whenever X \u2192 p is a production.\nh\nSince L(X) is a finite union of the languages L(p), it follows that o(X) < \u03c9 \u03c9 ,\nby Corollary 4.20. (If h = 0, L(p) is a single word in {0, 1}\u2217. Moreover, o(X)\nis finite.)\nCase 2. X is recursive. Then for each n, x, L(n, x, X) is a finite union of\n\u2217\nlanguages of the form L(un0 x0p), where there is left derivation X =\u21d2 un0 x0p.\nIt is not possible that p contains a nonterminal Y with X \u2248 Y , since it that case\n\u2217\nwe would have a derivation X =\u21d2 un0 x0wXq for some terminal word w and\nsome q, contradicting Proposition 4.15. Thus, Y \u227a X holds for all nonterminals\nY occurring in p. It follows by the induction hypothesis that o(L(un0 x0p), <l\nh\nh\n) < \u03c9 \u03c9 . Thus, using Corollary 4.20, it follows that o(L(n, x, X), <l ) < \u03c9 \u03c9 .\nAgain, by Corollary 4.20,\n\u03b1n\n\n=\n\no(L(n, X), <l)\n\n<\n\n\u03c9\u03c9 .\n\nh\n\n(If h = 0, \u03b1n < \u03c9, for all n.) But, by Lemma 4.18,\no(X) = \u03b10 + \u03b11 + . . .\nX\n\u03b1i : n \u2265 0}.\n= sup{\ni\u2208[n]\n\nSince\n\nP\n\ni\u2208[n]\n\nh\n\nh\n\n\u03b1i < \u03c9 \u03c9 for all n, it follows that o(X) \u2264 \u03c9 \u03c9 .\n\n\u2737\n\nCorollary 4.21 If G is an ordinal grammar, there is an integer n such that\no(G) \u2264\n\nn\n\n\u03c9\u03c9 .\n\nProof. Let n be the height of the start symbol S. Then, by Theorem 4.1,\nn\no(S) \u2264 \u03c9 \u03c9 .\n\u2737\nWe have thus completed the proof of this characterization of the ordinals of\nordinal grammars:\n\u03c9\n\nTheorem 4.2 An ordinal \u03b1 is less than \u03c9 \u03c9 if and only if there is some ordinal\ngrammar G such that \u03b1 = o(L(G), <l ).\n\n21\n\n\f5\n\nFrom algebraic trees to prefix grammars\n\nIn this section we show that each system of equations defining an algebraic tree\ncan be transformed (in polynomial time) to a prefix grammar4 generating the\nfrontier of the tree. This result allows us to complete the proof of the fact that\n\u03c9\nevery algebraic ordinal is less than \u03c9 \u03c9 .\nConsider a system of equations\nFi (x0 , . . . , xni \u22121 )\n\n= ti (x0 , . . . , xni \u22121 ),\n\ni = 1, . . . , m,\n\n(6)\n\nwhere each ti is a term over the ranked alphabet \u03a3\u222aF in the variables x0 , . . . , xni \u22121 .\nWe assume that F1 is the principal function variable and that n1 = 0. Each\ncomponent of the least solution is an algebraic tree. Let (T1 , T2 , . . . , Tm ) denote\nthe least solution of the system (6).\nFor the ranked alphabet \u03a3 \u222a F , let \u2206 be the (unranked) alphabet whose letters\nare the letters (\u03c3, k), (Fi , j) where \u03c3 \u2208 \u03a3n , n > 0 and k \u2208 [n], j \u2208 [ni ] and\n\u03c9\n1 \u2264 i \u2264 m. Let T be a finite or infinite tree in T\u03a3\u222aF\n(V ).\nDefinition 5.1 For each vertex u \u2208 dom(T ) we define a word u\nb \u2208 \u2206\u2217 by induction. First, b\n\u01eb = \u01eb. When u = vi and T (v) = \u03b4, then \u03b4 \u2208 (\u03a3 \u222a F )k , for some\nk > 0, and we define u\nb = vb(\u03b4, i).\nWe define the \"labeled frontier language of T \u2208 T\u03a3\u03c9 \" as the set of words\nLfr(T ) = {b\nuT (u) : T (u) \u2208 \u03a30 }\nWe prove the following.\nTheorem 5.1 When T \u2208 T\u03a3\u03c9 is an algebraic tree, Lfr(T ) can be generated by a\nprefix grammar.5\nProof. Suppose that T is the principal component of the least solution of the\nsystem (6).\nWe will define a grammar whose nonterminals N consist of the letters Fi , together with all ordered pairs (Fi , j) where i = 1, . . . , m, j \u2208 [ni ].\nThe grammar will be designed to have the following properties.\n\u2217\n\nClaim: For any word u, Ti (u) = xj if and only if (Fi , j) =\u21d2 u\nb. And for any\n\u2217\nbTi (u). Moreover, any terminal word\nword u, Ti (u) \u2208 \u03a30 if and only if Fi =\u21d2 u\n4 Here, we allow grammars over an arbitrary (linearly ordered) terminal alphabet. The\nnotion of a prefix grammar can be adjusted appropriately.\n5 In [Cour83], Lfr(T ) is called the branch language of T . Courcelle showed that a \"locally\nfinite\" tree T is algebraic if and only if Lfr(T ) is a strict deterministic context-free language,\nsee [Cour78b, Cour83].\n\n22\n\n\fderivable from (Fi , j) is of the form u\nb, and any terminal word derivable from Fi\nis of the form u\nbTi (u) for some u \u2208 dom(Ti ).\n\nLet \u0393 = \u03a30 \u222a {(\u03c3, j) : \u03c3 \u2208 \u03a3k , j \u2208 [k]}. The grammar generating Lfr(T ) is:\nGL = (N, \u0393, P, F1 ), where N = F \u222a {(Fi , j) : 1 \u2264 i \u2264 m, j \u2208 [ni ]} and the set P\nof productions is defined below. If t1 , . . . , tm are the terms on the right side of\n(6) above, then the productions are:\n\u2022\n(Fi , j) \u2192 u\nb\n\nwhere u \u2208 dom(ti ) and ti (u) = xj ,\n\u2022\n\nFi \u2192 u\nbti (u)\n\nwhere u \u2208 dom(ti ) and ti (u) \u2208 \u03a30 \u222a F .\n\nThe proof of the fact that the above grammar is a prefix grammar generating the\nlanguage Lfr(T ) relies on the above claim, and may be found in the Appendix.\n\u2737\nExample. Suppose the system of equations is:\nF0\nF1 (x)\nF2 (x, y)\n\n= F1 (a)\n= F2 (a, x)\n= \u03c3(x, a, F2 (x, F2 (x, y)))\n\nwhere the individual variables x, y stand for x0 , x1 , respectively. Then the\nproductions in GL are:\nF0\nF1\n\n\u2192 F1 + (F1 , 0)a\n\u2192 F2 + (F2 , 0)a\n\n(F1 , 0) \u2192 (F2 , 1)\n(F2 , 0) \u2192 (\u03c3, 0) + (\u03c3, 2)(F2 , 0) + (\u03c3, 2)(F2 , 1)(F2 , 0)\n(F2 , 1) \u2192 (\u03c3, 2)(F2 , 1)(F2 , 1)\nF2\n\n\u2192 (\u03c3, 1)a + (\u03c3, 2)F2 + (\u03c3, 2)(F2 , 1)F2\n\nCorollary 5.2 For every system of equations defining an algebraic tree T \u2208 T\u03a3\u03c9\none can construct in polynomial time a prefix grammar generating the frontier\nof T .\nProof. To get from the prefix grammar GL which derives Lfr(T ) to a grammar G\u2032 which derives Fr(T ), replace each letter (\u03c3, j) by just j, and delete the\n23\n\n\fconstant symbols in \u03a30 . Thus, in the example above, the productions of G\u2032 are\nF0\n\n\u2192 F1 + (F1 , 0)\n\nF1 \u2192 F2 + (F2 , 0)\n(F1 , 0) \u2192 (F2 , 1)\n(F2 , 0) \u2192 0 + 2(F2 , 0) + 2(F2 , 1)(F2 , 0)\n(F2 , 1) \u2192 2(F2 , 1)(F2 , 1)\nF2\n\n\u2192 1 + 2F2 + 2(F2 , 1)F2 .\n\nIt follows that G\u2032 is a prefix grammar generating Fr(T ).\n\n\u2737\n\nCorollary 5.3 If \u03b1 is an algebraic ordinal, there is an ordinal grammar G\u2032 with\n\u03b1 = o(L(G\u2032 )).\nWe may now derive our main theorem.\n\u03c9\n\nTheorem 5.2 An ordinal is algebraic if and only if it is less than \u03c9 \u03c9 .\nWe needed only to prove the \"only if\" direction. But this follows immediately\nfrom Corollary 5.3 and Theorem 4.2.\n\u2737\n\n6\n\nConclusion\n\u03c9\n\nWe have proved that the algebraic ordinals are exactly those less than \u03c9 \u03c9 , or\nequivalently, the ordinals that can be constructed from 0 and 1 by the sum and\nproduct operations, and the operation \u03b1 7\u2192 \u03b1\u03c9 . It is known that the regular\nordinals are those less than \u03c9 \u03c9 , or equivalently, those that can be constructed\nfrom 0, 1 and \u03c9 by just sum and product; or the ordinals that can be constructed\nfrom 0 and 1 by sum, product, and the operation \u03b1 7\u2192 \u03b1 \u00d7 \u03c9.\nRecall (from [Ros82], for example) that the Hausdorff rank of a countable\nscattered linear ordering L is the least ordinal \u03b1 such that L \u2208 V\u03b1 , where\nV0\n\n:=\n\n{0, 1},\n\nand if \u03b1 > 0, the collection V\u03b1 is defined by:\nX\n[\nV\u03b1 = {\nLi : Li \u2208\nV\u03b2 },\ni\u2208I\n\n\u03b2<\u03b1\n\nwhere I is either \u03c9, or \u03c9 \u2217 , the reverse of \u03c9, or a finite ordinal n, or \u03c9 \u2217 + \u03c9.\nIn order to characterize the algebraic linear orders, the next step might be\nthe characterization of algebraic scattered linear orders. We conjecture that\n24\n\n\fany such linear order has Hausdorff rank less than \u03c9 \u03c9 . Moreover, one possible\nconjecture is that, up to isomorphism, these are the linear orders that can be\nconstructed from the empty linear order and a one point linear order by the\nsum and product operations, reversal, and the operation P 7\u2192 P \u03c9 , where\nX\nP\u03c9 =\nP n.\nn\u2208\u03c9\n\nThis conjecture is supported by the fact that the scattered regular linear orders\nare exactly those that can be constructed from 0, 1 and \u03c9 by the sum and\nproduct operations and reversal, cf. [Heil80]. Thus, the scattered regular linear\norders have finite Hausdorff rank, but the converse is false: the linear order\nZ+ 1 + Z + 2 + Z + ...+ Z + n+ Z + ...\nwhere Z denotes the linear order of the negative and positive integers is not\nregular, but has finite Hausdorff rank.\nAfter describing the scattered algebraic linear orders, the next task could be to\nobtain a characterization of all algebraic linear orders. We conjecture that these\nare exactly those linear orders that can be constructed from dense algebraic\nwords by substituting a scattered algebraic linear order for each letter. (See\nbelow for the definition of an algebraic word.) Thus, the task can be reduced\nto the characterization of the dense algebraic words.\nA hierarchy of recursion schemes was studied by [Damm77, Damm82, Gal84,\nOng07, HMOS07], and many others. The schemes considered in this paper are\non the first level of the hierarchy with regular schemes forming level 0. In the\nlight of the characterizations of the regular and algebraic ordinals, it is natural\nto conjecture that the ordinals definable on the nth level of the hierarchy are\nthose less than\n..\u03c9\n.\n\u21d1 (\u03c9, n + 2) = \u03c9 \u03c9\nwhere there are n + 2 \u03c9's altogether. In fact, every ordinal less than \u21d1 (\u03c9, n + 2)\nis shown to be definable on the nth level in [Braud].\nIn ordinal analysis of logical theories, the strength of a theory is measured by\nordinals. For example, the proof theoretic ordinal of Peano arithmetic is \u01eb0 . Here\nwe have a similar phenomenon: we measure the strength of recursive definitions\nby ordinals, and we conjecture that the definable ordinals are exactly those less\nthan \u01eb0 .\nA generalization of the notion of \"finite word\" is obtained by considering labeled\nlinear orders, where the labels are letters in some finite alphabet. Thus, a linear\norder may be identified with a word on a one letter alphabet. A countable\nword is word whose underlying linear order is countable. A morphism between\nwords is a morphism between their respective underlying linear orders that additionally preserves the labeling. Every countable word can be represented as\n25\n\n\fthe word determined by the frontier of a tree where each leaf retains it label,\ncf. [Cour78a]. Now an algebraic word (respectively regular word) is a word\nisomorphic to the frontier word of an algebraic (respectively, regular) tree. An\n\"operational\" characterization of the regular words was obtained in [Heil80],\nwhere it was shown that a nonempty word is regular if and only if it can be\nconstructed from single letter words by concatenation, \u03c9-power, the \"shuffle\noperations\" and reversal. (Note that concatenation corresponds to the sum operation on linear orders, and \u03c9-power to the operation P 7\u2192 P \u00d7 \u03c9.) Without\nthe shuffle operations, exactly the nonempty scattered regular words can be generated, and the well-ordered regular words can be generated by concatenation\nand \u03c9-power. It would be interesting to obtain operational characterizations of\nwell-ordered, scattered, and eventually, all algebraic words.\nFinally, we would like to mention an open problem. Suppose that a contextfree language L is well-ordered by the lexicographic order. Is the order type of\n\u03c9\n(L, <l ) less than \u03c9 \u03c9 ?\n\n7\n\nAcknowledgement\n\nThe authors would like to thank the three referees whose suggestions have resulted in an improved paper.\n\nReferences\n[BC01] S.L. Bloom and C. Choffrut. Long words: the theory of concatenation\nand \u03c9-power. Theoretical Computer Science, 259(2001), 533\u2013548.\n[BE04] S.L. Bloom and Z. \u00c9sik. Deciding whether the frontier of a regular tree\nis scattered. Fundamenta Informaticae, XI(2004) 1-22.\n[BE07] S.L. Bloom and Z. \u00c9sik. Regular and algebraic words and ordinals.\nCALCO 2007, Bergen, LNCS 4624, Springer, 2007, 1\u201315.\n[BE10] S. L. Bloom and Z. \u00c9sik. A Mezei-Wright theorem for categorical algebras. Theoretical Computer Science, 411(2010), 341\u2013359\n[Braud] L. Braud. Unpublished paper.\nRennes.\n\nENS-Lyon, MR2 Intern at Irisa,\n\n[BKN08] M. Brough, B. Khoussainov and P. Nelson. Sequential automatic\nalgebras. CiE 2008, LNCS 5028, Springer, 2008, 84\u201393.\n[Col04] Th. Colcombet. Equational presentations of tree automatic structures.\nWorkshop on Automata, Structures, and Logic, Auckland, 2004.\n\n26\n\n\f[Cour78a] B. Courcelle. Frontiers of infinite trees. Theoretical Informatics and\nApplications, 12(1978), 319\u2013337.\n[Cour78b] B. Courcelle. A representation of trees by languages, Theoretical\nComputer Science, 6(1978), 255\u2013279 and 7(1978), 25\u201355.\n[Cour83] B. Courcelle. Fundamental properties of infinite trees. Theoretical\nComputer Science, 25(1983), 95\u2013169.\n[Damm77] W. Damm. Higher type program schemes and their tree languages.\nTheoretical Computer Science (Third GI Conf., Darmstadt, 1977), LNCS\n48, Springer, 1977, 51\u201372.\n[Damm82] W. Damm. The IO and OI hierarchies. Theoretical Computer Science, 20(1982), 95\u2013206.\n[DT90] M. Dauchet and S. Tison. The theory of ground rewrite systems is\ndecidable. LICS 1990, IEEE, 1990, 242\u2013248\n[Del04] Ch. Delhomm\u00e9. Automaticity of ordinals and of homogeneous graphs.\nC. R. Math. Acad. Sci. Paris, 339(2004), 5\u201310 (in French).\n[Gal84] J. Gallier. n-rational algebras. I. Basic properties and free algebras.\nSIAM J. Comput., 13(1984), 750\u2013775.\n[GTWW77] J. A. Goguen, J. W. Thatcher, E. G. Wagner and J. B. Wright.\nInitial algebraic semantics and continuous algebras. J. ACM, 24(1977),\n68\u201395.\n[Gue81] I. Guessarian. Algebraic Semantics. LNCS, vol. 99, Springer\u2013Verlag,\n1981.\n[GS84] F. G\u00e9cseg and M. Steinby. Tree Automata. Akad\u00e9miai Kiad\u00f3, Budapest,\n1984.\n[Heil80] S. Heilbrunner. An algorithm for the solution of fixed-point equations\nfor infinite words. Theoretical Informatics and Applications, 14(1980),\n131\u2013141.\n[Hod82] B.R. Hodgson. On direct products of automaton decidable theories.\nTheoretical Computer Science, 19(1982), 331\u2013335.\n[HMOS07] M. Hague, A.S. Murawawski, C.-H Luke Ong, O. Serre. Collapsable\npushdown automata and recursion schemes. 23rd Annual IEEE Symposium on Logic in Computer Science, LICS, IEEE, 2008, 452\u2013461.\n[KN95] B. Khoussainov, A. Nerode. Automatic presentations of structures.\nLogic and Comput. Complex., LNCS 960, Springer, 1995, 367\u2013392.\n[KRS03] B. Khoussainov, S. Rubin and F. Stephan. On automatic partial orders. Eighteenth IEEE Symposium on Logic in Computer Science, LICS,\nIEEE 2003, 168\u2013177.\n27\n\n\f[Ong07] C.-H Luke Ong. Hierarchies of infinite structures generated by pushdown automata and recursion schemes. MFCS 2007, LNCS 4708, Springer,\n2007, 15\u201321.\n[Lot97] M. Lothaire. Combinatorics on Words. Cambridge Mathematical Library. Cambridge University Press, Cambridge, 1997.\n[MW67] J. Mezei and J. Wright. Algebraic automata and context-free sets.\nInformation and Control, 11(1967), 3\u201329.\n[Roit90] J. Roitman. Introduction to Modern Set Theory. Wiley, 1990.\n[Ros82] J.B. Rosenstein. Linear Orderings. Academic Press, New York, 1982.\n[Sier58] W. Sierpinski. Cardinal and Ordinal Numbers. Warsaw: PWN, 1958.\n[Thom86] W. Thomas. On frontiers of regular trees. Theoretical Informatics\nand Applications, vol. 20, 1986, 371\u2013381.\n\nAppendix\nThis appendix is devoted to a formal proof of the correctness of the translation\ngiven in Section 5.\nConsider the system (6) whose least solution in T\u03a3\u03c9 (V ) is (T1 , T2 , . . . , Tm ). To\nthis system, we can associate the tree grammar GT whose productions are\nFi (x0 , . . . , xni \u22121 ) \u2192 ti + \u22a5,\n\ni = 1, . . . , m,\n\nwhere \u22a5 denotes the empty tree. The start symbol is F1 . Let V denote the set\nof individual variables that occur in (6).\nBelow we will also assume a new individual variable z and write t = t\u2032 \u22c6 t\u2032\u2032 for a\ntree t over \u03a3 \u222a F possibly containing variables in V if t\u2032 is a tree with a single\nleaf labeled z and t is obtained from t\u2032 by replacing this leaf with a copy of t\u2032\u2032 .\nDefinition 7.1 Suppose that t, t\u2032 are finite trees in T\u03a3\u03c9 (V ). Then t =\u21d2 t\u2032 in\nGT if t can be written as s \u22c6 Fi (s0 , . . . , sni \u22121 ) for some trees s and s0 , . . . , sni \u22121\n\u2217\nsuch that t\u2032 = s\u22c6ti (s0 , . . . , sni \u22121 ) or t\u2032 = s\u22c6\u22a5. The relation =\u21d2 is the reflexive\ntransitive closure of =\u21d2 .\nIt is known, cf., [Cour83, Gue81], that for any i = 1, . . . , m and for any word\nu, Ti (u) is defined if and only if there is some finite tree t in T\u03a3\u03c9 (V ) with\n\u2217\nFi (x0 , . . . , xni \u22121 ) =\u21d2 t such that t(u) is defined, and in that case Ti (u) = t(u).\nThus, it suffices to prove that the grammar GL defined in Section 5 and the tree\ngrammar GT are related as follows:\n28\n\n\fLemma 7.2 Let i \u2208 {1, . . . , m} and let t be a finite tree T\u03a3\u03c9 (V ). Suppose that\n\u2217\nFi (x0 , . . . , xni \u22121 ) =\u21d2 t. Then for every u \u2208 dom(t) and j \u2208 [ni ], if t(u) = xj\n\u2217\n\u2217\nbt(u).\nthen (Fi , j) =\u21d2 u\nb, and if t(u) \u2208 \u03a30 \u222a F then Fi =\u21d2 u\nLemma 7.3 Let i \u2208 {1, . . . , m} and j \u2208 [ni ].\n\u2217\n\n1. Suppose that (Fi , j) =\u21d2 w. Then there exist a finite tree t in T\u03a3\u03c9 (V ) and a\n\u2217\nword u \u2208 dom(t) such that t(u) = xj , w = u\nb and Fi (x0 , . . . , xni \u22121 ) =\u21d2 t.\n\u2217\n\n2. Suppose that Fi =\u21d2 w. Then there exist t and u as above with t(u) \u2208\n\u2217\n\u03a30 \u222a F , w = u\nbt(u) and Fi (x0 , . . . , xni \u22121 ) =\u21d2 t.\n\nProof of Lemma 7.2. We argue by induction on the length of the derivation.\nWhen the length is 0, t = Fi (x0 , . . . , xni \u22121 ). If u = j, for some j \u2208 [ni ], then\n\u2217\nu\nb = (Fi , j) and we clearly have (Fi , j) =\u21d2 (Fi , j) = u\nb. If u = \u01eb then u\nb = \u01eb,\n\u2217\nbt(u).\nt(\u01eb) = Fi and we have Fi =\u21d2 Fi = u\nIn the induction step, assume that the length of the derivation is positive and\nthat our claim holds for all derivations of smaller length. Suppose that t(u) is\na variable xj or t(u) \u2208 \u03a30 \u222a F . Let us write the derivation as\n\u2217\n\nFi (x0 , . . . , xni \u22121 ) =\u21d2 t\u2032 =\u21d2 t\nwhere in the last step we have t\u2032 = s\u22c6Fk (s0 , . . . , snk \u22121 ) and t = s\u22c6tk (s0 , . . . , snk \u22121 )\nor t = s \u22c6 \u22a5. In the second case, u \u2208 dom(t\u2032 ), moreover u\nb in t\u2032 is the same as\n\u2032\nu\nb in t, or as u\nb in s. Moreover, t(u) = s(u) = t (u). Thus, using the induction\n\u2217\n\u2217\nbt\u2032 (u) = u\nbt(u) according to\nhypothesis, we obtain (Fi , j) =\u21d2 u\nb or Fi =\u21d2 u\nwhether t(u) = xj for some j \u2208 [ni ] or t(u) \u2208 \u03a30 \u222a F .\nAssume now that t\u2032 = s \u22c6 Fk (s0 , . . . , snk \u22121 ) and t = s \u22c6 tk (s0 , . . . , snk \u22121 ). Let\nv0 denote the unique word with s(v0 ) = z. There are two cases. If v0 is not a\nprefix of u, then we have that u \u2208 dom(t\u2032 ) \u2229 dom(s), u\nb in t is the same as u\nb in\nt\u2032 , and t(u) = s(u) = t\u2032 (u). The proof is completed as before. So let v0 be a\nprefix of u. If there is some w \u2208 dom(tk ) such that u = v0 w and tk (w) is not\nan individual variable, then u\nb in t is vb0 w,\nb where vb0 is computed in s and w\nb is\ncomputed in tk . Moreover, t(u) = tk (w) \u2208 \u03a30 \u222a F . By the induction hypothesis\n\u2217\nb k (w) is a production.\nwe have Fi =\u21d2 vb0 Fk , and by construction, Fk \u2192 wt\n\u2217\nb \u2032 (v0 w) = vb0 wt\nb k (w) = u\nbt(u).\nThus, Fi =\u21d2 vb0 wt\n\nSuppose last that u = v0 wv1 , where w \u2208 dom(tk ) with tk (w) = xh for some\nh \u2208 [nk ] and v1 \u2208 dom(sh ). In that case u\nb in t is vb0 wb\nbv1 , where vb0 and w\nb\nare as before, and b\nv1 is computed in sh . Moreover, t(u) = sh (v1 ) = t\u2032 (v0 hv1 ).\n\u2217\nAssume that t(u) is the individual variable xj . Then (Fi , j) =\u21d2 b\nv0 (Fk , h)b\nv1 by\nthe induction hypothesis, moreover, (Fk , h) \u2192 w\nb is a production. We conclude\n\u2217\n\u2217\nthat (Fi , j) =\u21d2 vb0 wb\nbv1 = u\nb. Suppose now that t(u) \u2208 \u03a30 \u222a F . Then Fi =\u21d2\nvb0 (Fk , h)b\nv1 t\u2032 (v0 hv1 ) = b\nv0 (Fk , h)b\nv1 sh (v1 ) =\u21d2 vb0 wb\nbv1 sh (v1 ) = u\nbt(u).\n\u2737\n29\n\n\f\u2217\n\nProof of Lemma 7.3. Suppose first that (Fi , j) =\u21d2 w. If the length of the\nderivation is 0, our claim is trivial: let t = Fi (x0 , . . . , xni \u22121 ), u = j. We\nproceed by induction. In the induction step, we can write the derivation as\n\u2217\n(Fi , j) =\u21d2 w0 (Fk , h)w1 =\u21d2 w0 qw1 = w, where, by the induction hypothesis,\nthere exist some t\u2032 and u0 , u1 with t\u2032 (u0 hu1 ) = xj , w0 (Fk , h)w1 = u\\\n0 hu1 in\n\u2217\nt\u2032 and Fi (x0 , . . . , xni \u22121 ) =\u21d2 t\u2032 . Since (Fk , h) \u2192 q is a production of GL ,\nthere is some p with tk (p) = xh and pb = q in tk . Clearly, we can write t\u2032\nas t\u2032 = s \u22c6 Fk (s0 , . . . , snk \u22121 ) where s(u0 ) = z, so that u1 \u2208 dom(sh ) with\nsh (u1 ) = xj . Now let t = s \u22c6 tk (s0 , . . . , snk \u22121 ) and consider the word u = u0 pu1 .\nWe have that t(u) = sh (u1 ) = t\u2032 (u0 hu1 ) = xj and u\nb=u\nb0 pbu\nb1 = w0 qw1 = w in\nt.\n\u2217\n\nSuppose next that Fi =\u21d2 w. If the length of the derivation is 0, then w = Fi\nand we take t = Fi (x0 , . . . , xni \u22121 ) and u = \u01eb. Assume now that the length of\nthe derivation is positive and that our claim holds for shorter derivations. We\ncan decompose the derivation either as\n\u2217\n\nFi =\u21d2 w0 (Fk , h)w1 =\u21d2 w0 qw1 = w\nor as\n\n\u2217\n\n\u2217\n\nFi =\u21d2 w0 Fk =\u21d2 w0 w1 = w.\nThe former case is similar to the previous one, so we only deal with the latter.\nIn this case, by the induction hypothesis, there is some tree t\u2032 and a word\n\u2217\nu0 \u2208 dom(t\u2032 ) with t\u2032 (u0 ) = Fk , w = u\nb0 t\u2032 (u0 ) and Fi (x0 , . . . , xni \u22121 ) =\u21d2 t\u2032 .\nMoreover, Fk \u2192 w1 is a production and thus w1 = u\nb1 tk (u1 ) in tk for some\nu1 with tk (u1 ) \u2208 \u03a30 \u222a F . Since t\u2032 (u0 ) = Fk , we can write t\u2032 as t\u2032 = s \u22c6\nFk (s0 , . . . , snk \u22121 ), where s(u0 ) = z. Now let t = s \u22c6 tk (s0 , . . . , snk \u22121 ) and let\n\u2217\nu = u0 u1 . We have that Fi (x0 , . . . , xni \u22121 ) =\u21d2 t and w = w0 w1 = u\nbt(u).\nMoreover, t(u) = tk (u1 ) \u2208 \u03a30 \u222a F .\n\u2737\nWe can now prove the claim formulated in the proof of Theorem 5.1. Suppose\n\u2217\nthat Ti (u) = xj for some i, 1 \u2264 i \u2264 m and j \u2208 [ni ]. Then (Fi , j) =\u21d2 u\nb\n\u2217\nby Lemma 7.2. And if Ti (u) \u2208 \u03a30 , then (Fi , j) =\u21d2 u\nbTi (u). Conversely, if\n\u2217\n(Fi , j) =\u21d2 w for some terminal word w, then by Lemma 7.3, either w = u\nb for\nsome u with Ti (u) = xj , or w = u\nbTi (u) for some u with Ti (u) \u2208 \u03a30 .\n\u2737\n\n30\n\n\f"}