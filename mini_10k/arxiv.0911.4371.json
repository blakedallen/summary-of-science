{"id": "http://arxiv.org/abs/0911.4371v2", "guidislink": true, "updated": "2010-09-03T13:46:42Z", "updated_parsed": [2010, 9, 3, 13, 46, 42, 4, 246, 0], "published": "2009-11-23T12:00:30Z", "published_parsed": [2009, 11, 23, 12, 0, 30, 0, 327, 0], "title": "AutoDipole - Automated generation of dipole subtraction terms -", "title_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0911.1691%2C0911.1081%2C0911.0774%2C0911.4462%2C0911.3201%2C0911.0656%2C0911.0067%2C0911.0624%2C0911.1687%2C0911.4605%2C0911.4243%2C0911.5203%2C0911.4986%2C0911.1939%2C0911.3348%2C0911.0868%2C0911.2065%2C0911.0631%2C0911.0294%2C0911.4726%2C0911.1548%2C0911.4922%2C0911.4034%2C0911.1186%2C0911.3459%2C0911.1516%2C0911.1071%2C0911.0265%2C0911.3197%2C0911.5424%2C0911.3159%2C0911.3842%2C0911.5716%2C0911.5685%2C0911.4033%2C0911.5070%2C0911.5063%2C0911.4707%2C0911.2802%2C0911.0947%2C0911.5054%2C0911.1159%2C0911.3093%2C0911.1248%2C0911.0307%2C0911.0137%2C0911.3676%2C0911.1936%2C0911.3677%2C0911.0667%2C0911.0734%2C0911.5522%2C0911.0215%2C0911.5033%2C0911.4351%2C0911.5381%2C0911.4463%2C0911.2893%2C0911.2026%2C0911.2211%2C0911.0316%2C0911.5045%2C0911.3663%2C0911.0704%2C0911.1103%2C0911.5529%2C0911.5263%2C0911.2025%2C0911.3215%2C0911.2050%2C0911.0576%2C0911.4364%2C0911.4371%2C0911.2874%2C0911.5227%2C0911.2937%2C0911.0978%2C0911.1968%2C0911.4794%2C0911.5637%2C0911.0586%2C0911.5621%2C0911.0414%2C0911.4680%2C0911.3539%2C0911.4185%2C0911.1954%2C0911.1725%2C0911.1924%2C0911.5660%2C0911.1778%2C0911.2189%2C0911.5487%2C0911.5232%2C0911.2163%2C0911.3427%2C0911.3823%2C0911.2239%2C0911.5590%2C0911.0488%2C0911.4554&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "AutoDipole - Automated generation of dipole subtraction terms -"}, "summary": "We present an automated generation of the subtraction terms for\nnext-to-leading order QCD calculations in the Catani-Seymour dipole formalism.\nFor a given scattering process with n external particles our Mathematica\npackage generates all dipole terms, allowing for both massless and massive\ndipoles. The numerical evaluation of the subtraction terms proceeds with\nMadGraph, which provides Fortran code for the necessary scattering amplitudes.\nChecks of the numerical stability are discussed.", "summary_detail": {"type": "text/plain", "language": null, "base": "http://export.arxiv.org/api/query?search_query=&id_list=0911.1691%2C0911.1081%2C0911.0774%2C0911.4462%2C0911.3201%2C0911.0656%2C0911.0067%2C0911.0624%2C0911.1687%2C0911.4605%2C0911.4243%2C0911.5203%2C0911.4986%2C0911.1939%2C0911.3348%2C0911.0868%2C0911.2065%2C0911.0631%2C0911.0294%2C0911.4726%2C0911.1548%2C0911.4922%2C0911.4034%2C0911.1186%2C0911.3459%2C0911.1516%2C0911.1071%2C0911.0265%2C0911.3197%2C0911.5424%2C0911.3159%2C0911.3842%2C0911.5716%2C0911.5685%2C0911.4033%2C0911.5070%2C0911.5063%2C0911.4707%2C0911.2802%2C0911.0947%2C0911.5054%2C0911.1159%2C0911.3093%2C0911.1248%2C0911.0307%2C0911.0137%2C0911.3676%2C0911.1936%2C0911.3677%2C0911.0667%2C0911.0734%2C0911.5522%2C0911.0215%2C0911.5033%2C0911.4351%2C0911.5381%2C0911.4463%2C0911.2893%2C0911.2026%2C0911.2211%2C0911.0316%2C0911.5045%2C0911.3663%2C0911.0704%2C0911.1103%2C0911.5529%2C0911.5263%2C0911.2025%2C0911.3215%2C0911.2050%2C0911.0576%2C0911.4364%2C0911.4371%2C0911.2874%2C0911.5227%2C0911.2937%2C0911.0978%2C0911.1968%2C0911.4794%2C0911.5637%2C0911.0586%2C0911.5621%2C0911.0414%2C0911.4680%2C0911.3539%2C0911.4185%2C0911.1954%2C0911.1725%2C0911.1924%2C0911.5660%2C0911.1778%2C0911.2189%2C0911.5487%2C0911.5232%2C0911.2163%2C0911.3427%2C0911.3823%2C0911.2239%2C0911.5590%2C0911.0488%2C0911.4554&start=0&max_results=1000&sortBy=relevance&sortOrder=descending", "value": "We present an automated generation of the subtraction terms for\nnext-to-leading order QCD calculations in the Catani-Seymour dipole formalism.\nFor a given scattering process with n external particles our Mathematica\npackage generates all dipole terms, allowing for both massless and massive\ndipoles. The numerical evaluation of the subtraction terms proceeds with\nMadGraph, which provides Fortran code for the necessary scattering amplitudes.\nChecks of the numerical stability are discussed."}, "authors": ["K. Hasegawa", "S. Moch", "P. Uwer"], "author_detail": {"name": "P. Uwer"}, "author": "P. Uwer", "links": [{"title": "doi", "href": "http://dx.doi.org/10.1016/j.cpc.2010.06.044", "rel": "related", "type": "text/html"}, {"href": "http://arxiv.org/abs/0911.4371v2", "rel": "alternate", "type": "text/html"}, {"title": "pdf", "href": "http://arxiv.org/pdf/0911.4371v2", "rel": "related", "type": "application/pdf"}], "arxiv_comment": "36 pages, 5 figures, Minor update to match published version in\n  Comput.Phys.Commun", "arxiv_primary_category": {"term": "hep-ph", "scheme": "http://arxiv.org/schemas/atom"}, "tags": [{"term": "hep-ph", "scheme": "http://arxiv.org/schemas/atom", "label": null}], "pdf_url": "http://arxiv.org/pdf/0911.4371v2", "affiliation": "None", "arxiv_url": "http://arxiv.org/abs/0911.4371v2", "journal_reference": "Comput.Phys.Commun.181:1802-1817,2010", "doi": "10.1016/j.cpc.2010.06.044", "fulltext": "DESY-09-194\nHU-EP-09/55\nSFB/CPP-09-107\n\narXiv:0911.4371v2 [hep-ph] 3 Sep 2010\n\nNovember 2009\n\nAutoDipole\n\u2013 Automated generation of dipole subtraction terms \u2013\n\nK. Hasegawa a , S. Moch b and P. Uwer a\na\n\nInstitut f\u00fcr Physik, Humboldt-Universit\u00e4t zu Berlin,\nD-10099 Berlin, Germany\nb Deutsches\n\nElektronensynchrotron DESY\nPlatanenallee 6, D-15738 Zeuthen, Germany\n\nAbstract\nWe present an automated generation of the subtraction terms for next-toleading order QCD calculations in the Catani-Seymour dipole formalism. For\na given scattering process with n external particles our Mathematica package\ngenerates all dipole terms, allowing for both massless and massive dipoles. The\nnumerical evaluation of the subtraction terms proceeds with MadGraph, which\nprovides Fortran code for the necessary scattering amplitudes. Checks of the\nnumerical stability are discussed.\n\n\fProgram summary\nTitle of program: AutoDipole\nVersion: 1.2.3\nCatalogue number:\nProgram summary URL: http://www-zeuthen.desy.de/ \u0303moch/autodipole/ or\nhttp://www.physik.hu-berlin.de/pep/tools/\nE-mail: kouhei.hasegawa@physik.hu-berlin.de,\nsven-olaf.moch@desy.de,\npeter.uwer@physik.hu-berlin.de\nLicense: -\nComputers: Computers running Mathematica (version 7.0).\nOperating system: The package should work on every Linux system supported by Mathematica.\nDetailed tests have been performed on Scientific Linux as supproted by DESY and CERN\nand on openSUSE and Debian.\nProgram language: Mathematica and Fortran.\nMemory required to execute: Depending on the complexity of the problem, recommended at least\n128 MB RAM.\nOther programs called: MadGraph (stand-alone version MG_ME_SA_V4.4.30) and HELAS\nExternal files needed: MadGraph (including HELAS library) available under\nhttp://madgraph.hep.uiuc.edu/ or\nhttp://madgraph.phys.ucl.ac.be/ or\nhttp://madgraph.roma2.infn.it/\nKeywords: QCD, NLO computations, dipole formalism, Catani-Seymour subtraction.\nNature of the physical problem: Computation of next-to-leading order QCD corrections to scattering cross sections, regularization of real emission contributions.\nMethod of solution: Catani-Seymour subtraction method for massless and massive partons [1, 2];\nNumerical evaluation of subtracted matrix elements interfaced to MadGraph [3\u20135] (stand-alone\nversion) using helicity amplitudes and the HELAS library [6, 7] (contained in MadGraph).\nRestrictions on complexity of the problem: Limitations of MadGraph are inherited.\nTypical running time: Dependent on the complexity of the problem with typical run times of the\norder of minutes.\n\n1\n\n\f1 Introduction\nThe Large Hadron Collider (LHC) allows us to explore an energy regime far beyond what has\nbeen accessible in direct measurements up to now. Operating at the TeV scale it will shed light\non the mechanism of electroweak symmetry breaking. The large center-of-mass energy allows the\nproduction of new heavy particles - if they exist. It is expected that the results obtained from the\nLHC will significantly influence our future understanding of nature. The high potential of the LHC\nin making an important step forward towards a deeper understanding of elementary particle physics\ncomes not for free. Experimentally as well theoretically the LHC is a very challenging experiment.\nThe large multiplicity in the individual event together with pile-up and the complications due to the\nunderlying event make the experimental analysis at the LHC highly non-trivial. The separation of\nknown Standard Model (SM) physics from new physics is very demanding, in particular since in\nmany cases the new physics signals are overwhelmed by the large SM backgrounds. Sophisticated\nmethods have been devised in the past to cope with this situation within the experiments with\nrespect to theoretical predictions.\nColliding protons at LHC interact primarily through strong interactions and Quantum Chromodynamics (QCD) plays an important role in this context. It is well known that perturbative QCD\npredictions are in general plagued by a large (residual) renormalization and factorization scale dependence. It is not rare that predictions for cross sections change by 100% when the scales are\nvaried in a reasonable range. To reduce the large scale uncertainty next-to-leading order (NLO)\ncalculations are required, which generally consist of two ingredients: one contribution from the\nvirtual corrections and a second contribution from real emission of one additional parton. With\nrespect to the virtual contributions much progress has been achieved recently, although the evaluation of one-loop amplitudes for \"large\" multiplicities (2 \u2192 3, 2 \u2192 4) is still a highly non-trivial\nenterprise. Fortunately, as far as the real corrections are concerned the situation is much better\nand efficient methods exist for the numerical evaluation of the required matrix elements. However,\nthe integral over the phase space leads to soft and collinear singularities, which we denote here\ngenerically as infrared (IR) divergencies. In combination with the virtual corrections, all IR cancel\nbetween the two contributions for the physical observables of interest [8\u201310].\nGeneral algorithms, typically classified either as slicing or subtraction methods, are available for\nthe extraction of soft and collinear singularities encountered in the real corrections. In both cases\none makes use of the universal behavior of QCD amplitudes for soft and collinear configurations.\nIR singularities are nowadays usually regulated within dimensional regularization, so the same\nregulator has to be applied to the real corrections in a way that numerical integration over the\nphase space in 4 dimensions is possible in the end.\nIn slicing methods the idea is to separate the phase space into resolved and unresolved contributions [11\u201314]. Unresolved regions at NLO are those where one parton becomes soft or two become\ncollinear. In these regions the matrix elements are approximated using the QCD factorization theorems. After this simplification the unresolved regions can be integrated analytically in d = 4 \u2212 2\u01eb\ndimensions and the emerging singularities cancel analytically against the corresponding ones in the\nvirtual corrections. Resolved regions on the other hand exclude all IR singularities by definition\nand can be integrated numerically in 4 dimensions. A one-dimensional illustration of the slicing\napproach is shown below,\nZ 1\nZ \u03b4\nZ 1\nf (x)\n1\nf (x)\ndx + O(\u01eb)\ndx \u2248 f (0)\ndx +\n1\u2212\u01eb\n1\u2212\u01eb\nx\n0 x\n0 x\n\u03b4\n2\n\n\f1\nf (0) + ln(\u03b4) f (0) +\n=\n\u01eb\n\nZ\n\n\u03b4\n\n1\n\nf (x)\ndx + O(\u01eb) ,\nx\n\n(1.1)\n\nwhere f (x) is an arbitrary function, which is regular at x = 0. It is a drawback of the slicing\nmethod that partial results exhibit a logarithmic dependence on the cut \u03b4 which separates resolved\nfrom unresolved configurations. This logarithm - which cancels when the two parts (resolved\nand unresolved) are combined - is manifest in the analytic integration of the unresolved terms.\nHowever, for the resolved terms the logarithmic dependence arises from the numerical phase space\nintegration. Since the matrix elements in the unresolved phase space regions are only approximate\none tends to make the respective region around singular configurations as small as possible. This\nprocedure, though, would result in large numerical cancellations and a loss of accuracy in the sum\nof the resolved and unresolved parts compared to the accuracy reached in the numerical integration.\nIn practice this requires a compromise between the quality of the approximation and the numerical\neffort to achieve a certain precision in the sum of both, resolved and unresolved contributions.\nSubtraction methods make use of our knowledge about QCD factorization in the soft and collinear\nlimits to construct suitable \"counter-terms\". These have to match pointwise all singularities in the\nreal-emission matrix elements and, at the same time, should be simple enough to be integrated\nanalytically in d = 4 \u2212 2\u01eb dimensions over the entire phase space [1, 2, 15]. A one-dimensional\nexample is shown in Eq. (1.2).\nZ 1\nZ 1\nZ 1\nf (x)\nf (x) \u2212 f (0)\n1\ndx =\ndx + O(\u01eb)\ndx + f (0)\n1\u2212\u01eb\n1\u2212\u01eb\nx\n0 x\n0\n0 x\nZ 1\n1\nf (x) \u2212 f (0)\ndx + f (0) + O(\u01eb) .\n(1.2)\n=\nx\n\u01eb\n0\nHere the cancellation of the singularity takes place at the integrand level - i.e. the divergencies\ncancel pointwise - and the integrals are easier to evaluate numerically. However, care must be\ntaken with respect to the numerical accuracy. Deep in the singular regions the individual contributions become arbitrary large and, due to limited numerical precision of floating point arithmetic, their cancellation might be incomplete leading to potentially wrong results. While our\none-dimensional example in Eq. (1.2) admits the construction of a suitable subtraction term in a\nstraightforward manner this no longer true when considering complicated scattering amplitudes.\nFortunately, this formidable problem has been solved with the Catani-Seymour dipole formalism [1, 2]. (Similar algorithms are presented in Refs. [15, 16].) Based on the factorization of soft\nand collinear singularities in an SU(N) gauge theory all subtraction terms are constructed from\nuniversal functions and process specific amplitudes. It turns out, though, that for complicated\nprocesses the complete subtraction term is a sum over many different contributions - tedious to\nderive by hand. On the other hand, the method is completely algorithmic, thus an automation is\nfeasible. This is a timely problem and its solution is the aim of the present work [17, 18]. We note\nthat it has recently also been addressed by other groups [19\u201322], see also [23].\nIn passing let us briefly mention that the attractive features of the subtraction approach (universality\nof counter-terms and numerical stability) have led to extensions of the formalism to next-to-nextto-leading order (NNLO), see e.g. [24\u201327]. Presently, the proposed schemes at NNLO apply to\nprocesses without colored partons in the initial state and an arbitrary number of massless particles (colored or colorless) in the final state. The necessary counter-terms are either derived from\nso-called antenna functions [28] or alternatively defined as universal counter-terms based on QCD\n3\n\n\ffactorization in the various soft and collinear limits of singly- and double-unresolved parton configurations [29\u201332]. Ongoing work at NNLO is concerned with extensions to colored partons in\nthe initial state as needed for the LHC.\nThe outline of the paper is as follows. In Section 2 we review the general features of the CataniSeymour algorithm [1, 2] and in Section 3 we describe the details of its implementation in the\nAutoDipole package. Particular emphasis is put on the details of the numerical evaluation of subtraction terms via an interface to MadGraph [3\u20135], which uses the HELAS library [6, 7] for the\ncomputation of helicity amplitudes. Section 4 illustrates with a few examples of how to use AutoDipole in practice. The examples serve also as a non-trivial cross check of the implementation\nwhen compared with existing results from the literature. Finally, we conclude in Section 5 and\nlist some technical details of the implementation and the comparison with the literature in Appendices A\u2013C.\n\n2 Review of the Catani-Seymour subtraction formalism\nWe consider a generic scattering process for the production of an n-parton final state. At NLO\naccuracy in QCD the corresponding cross section may be written as:\n\u03c3NLO = \u03c3LO + \u03b4\u03c3NLO ,\n\n(2.1)\n\nwhere \u03c3LO denotes the Born contribution at leading order (LO) and the genuine NLO correction\n\u03b4\u03c3NLO receives contributions from three different sources,\nZ\nZ\nZ\nZ\n\u03b4\u03c3NLO = d\u03c3virt +\nd\u03c3real + dx d\u03c3fact .\n(2.2)\nn\n\nn+1\n\nn\n\nBy d\u03c3virt we denote here the contributions from the virtual corrections and by d\u03c3real the ones from\nthe real emission of one additional parton. For hadrons in the initial state there is a third contribution d\u03c3fact due to the factorization of initial state singularities. The subscript on the integral signs\nin Eq. (2.2) indicates the dimensionality of the phase space: The virtual corrections are integrated\nover an n-parton phase space while the real emissions are integrated over an (n + 1)-parton phase\nspace. All three contributions are individually divergent and thus require regularization in intermediate steps until the divergencies are canceled. In the Catani-Seymour formalism the expression\nfor \u03b4\u03c3NLO in Eq. (2.2) is rewritten schematically:\nZ\nZ\nZ\nZ\nZ\n\u2032\n\u03b4\u03c3NLO =\n(d\u03c3real + dA) + (d\u03c3virt + dA ) + dx (d\u03c3fact + dA\u2032\u2032 ) ,\n(2.3)\nn+1\n\nn\n\nwith\n0=\n\nZ\n\nn+1\n\ndA +\n\n1\n\nZ Z\nn\n\n\u2032\n\ndA +\n1\n\nn\n\nZ\n\ndx\n\nZ\n\ndA\u2032\u2032 .\n\n(2.4)\n\nn\n\nThe expressions dA, dA\u2032 and dA\u2032\u2032 are defined such that they render the individual pieces in Eq. (2.3)\nfinite. In the Catani-Seymour\nformalism, they correspond to the sum of all dipoles (dA), the\nR\nintegrated dipoles ( 1 dA\u2032 ), I-term, and the terms arising from mass factorization (dA\u2032\u2032 ) including\nthe so-called P-, K- and H-terms.\nThe explicit form of dA is constructed from the knowledge about the soft and collinear factorization of QCD amplitudes, which exhibit a simple factorization for collinear configurations. The\n4\n\n\fexpression for dA in Eq. (2.3) is obtained as a sum over potentially collinear partons since the\nfactorization for soft configurations can be derived from the collinear behavior of the amplitudes.\nFor soft singularities however only color-ordered amplitudes exhibit a simple factorization, which\nimplies in general non-trivial color correlations at the level of the squared matrix elements. These\ncolor correlations are reflected by the reference to an additional (so-called) spectator parton. The\nsubtraction dA is thus written as a sum of individual dipoles in the following form:\nX\ndA =\nD(i, j; k) ,\n(2.5)\nwhere the sum runs over all colored partons in scattering process and the possible configurations\nfor {i, j; k} are determined from the real corrections for which the subtraction term is constructed.\nThe generic form of the dipoles is given by\nD(i, j; k) = di j \u00d7 h1, . . . iej, . . . , k\u0303, . . . , n|Vi j,k |1, . . . i \u0303j, . . . , k\u0303, . . . , ni .\n\n(2.6)\n\nThe singular behavior is contained in the pre-factor di j which is essentially the intermediate propagator before the splitting into i + j. The bra (h . . . |)and ket (| . . . i) notation for the amplitude is used\nsince it appears as a vector in color and spin space. Accordingly Vi j,k acts as an operator in color\nand spin space and introduces the non-trivial color and spin correlations mentioned above.\nAs a concrete example we display the expression for D(gi , g j , k) with all three partons in the final\nstate, i.e.\nD(gi , g j , k) = \u2212\n\nTk * Ti j\n1\nh1, . . . iej, . . . , k\u0303, . . . , n|\nVgi g j ,k |1, . . . i \u0303j, . . . , k\u0303, . . . , ni .\n2\n2pi * p j\nTi j\n\n(2.7)\n\nD(gi , g j , k) describes the situation of a collinear splitting of the gluons i and j (emitter pair) in the\npresence of a spectator parton k. Here, the Ti are the color charge operators depending on the\npartons being in the fundamental or adjoint representation of the color SU(3) (for details we refer\nto [1, 2]). The function Vgi g j ,k is given by\n\u03bc\u03bd\n\nVg g ,k = h\u03bc|Vgi g j ,k |\u03bdi\ni j\n\n\u0014\n\u0012\n= 16\u03c0\u03b1 s \u03bc C A \u2212g\u03bc\u03bd\n\n\u0013\n1\n1\n+\n\u22122\n1 \u2212 zi (1 \u2212 yi j,k ) 1 \u2212 z j (1 \u2212 yi j,k )\n\u0015\n1\n\u03bc\n\u03bc\n\u03bd\n\u03bd\n+(1 \u2212 \u01eb)\n(zi pi \u2212 z j p j )(zi pi \u2212 z j p j ) ,\npi * p j\n2\u01eb\n\n(2.8)\n\nwhere zi and yi j,k are some functions of the Lorentz scalars si j , sik , and s jk and \u03b1 s is the strong\ncoupling. The quantity,\nh1, . . . iej, . . . , k\u0303, . . . , n|Tk * Ti j |1, . . . i \u0303j, . . . , k\u0303, . . . , ni,\n\n(2.9)\n\nis called the color linked Born amplitude squared (CLBS). The amplitude (| . . .i) is deduced from\nthe real emission by the factorization of one splitting. The color factor is extended by two color\noperator insertion, Tk * Ti j . The CLBS has the reduced kinematics as input. In the example the\noriginal momenta (pi , p j , pk ) are reduced to ( p\u0303i j , p\u0303k ) where for example, the p\u0303i j is defined as\n\u03bc\n\n\u03bc\n\n\u03bc\n\np\u0303i j = pi + p j \u2212\n\nyi j,k \u03bc\np .\n1 \u2212 yi j,k k\n\n5\n\n(2.10)\n\n\fGenerally, (n + 3) original momenta are reduced to the (n + 2) momenta in each dipole term. One\ndistinguished feature of the dipole subtraction is that the reduced kinematics satisfy the on-shell\nconditions and momentum conservation, which makes it possible to evaluate the reduced Born\namplitude by existing codes for LO calculations. In the gluon emitter case like the example above,\nthe second term in the square bracket in Eq. (2.8) introduces spin correlations of the gluon. In that\ncase we need also to evaluate the CLBS where the helicity of the emitter gluon in the amplitude\nis different from the one in the conjugate. In the next section we explain how the three main\ningredients, the generation of the dipole terms, the CLBS, and the dipoles with a gluon emitter, are\nimplemented in our package.\nR\nR\nThe other two functions 1 dA\u2032 and dA\u2032\u2032 in Eq. (2.3) are easily explained. The first one ( 1 dA\u2032 )\ndenotes the integrated dipoles which cancel the corresponding IR divergencies in the virtual contributions at NLO. They can be constructed from universal insertion operators I, to be sandwiched\nbetween the bra (h . . . |)and ket (| . . . i) amplitudes of the corresponding Born process, i.e. in the\nreduced kinematics with (n + 2) momenta. The expressions for the I-terms depend on the parton\ntype, e.g. for massless partons we have\n!\u01eb\nX 1\nX\n\u03b1s\n1\n4\u03c0\u03bc2\nI({p}, \u01eb) = \u2212\n,\n(2.11)\nVi (\u01eb)\nTi * T j\n2\u03c0 \u0393(1 \u2212 \u01eb) i T2i j\n2p\n*\np\ni\nj\nj,i\nwhere the sum runs over all parton momenta {p} in the Born kinematics (corresponding also to the\nNLO virtual corrections). The poles in dimensional regularization are contained in the function Vi ,\nthat is Vi (\u01eb) \u223c 1/\u01eb 2 and \u223c 1/\u01eb for massless partons [1]. For massive partons [2], the corresponding\nfunction Vi (\u01eb, mi , m j ) contains single poles Vi (\u01eb, mi , m j ) \u223c 1/\u01eb from soft gluons and the Vi depend\nlogarithmically on the parton masses mi which screen the collinear singularity, see also [16, 33].\nThe formulation suggested in [2] (and used in AutoDipole) allows for a smooth interpolation in the\nlimit mi \u2192 0. The color operator insertions, Ti * T j , lead again to non-trivial color correlations and\nrequire the evaluation of the same CLBS in Eq. (2.9) with the phase space of n final state partons.\nThe last term in Eq. (2.3) (dA\u2032\u2032 ) abbreviates the so-called P-, K- and H-terms. They are needed for\nmass factorization of initial state singularities in hadron collisions to be absorbed in renormalized\nparton distributions and, likewise, also for the final-state singularities in processes with identified\nhadrons giving rise to scale dependence of the fragmentation functions. For instance in the case of\ninitial state divergencies the P-operator takes the following form\nPa,b ({p}, x, \u03bc2F ) =\n\n\u03bc2F\n\u03b1 s ab\n1 X\nTi * Tb ln\nP (x) 2\n,\n2\u03c0\n2xpa * pi\nTb i,b\n\n(2.12)\n\nwhere \u03bcF is the factorization scale and Pab are the standard (space-like) LO splitting functions\ncontaining the well-known '+'-distributions in their diagonal components. Like the I-operators\nin Eq. (2.11), the P-operators act on the amplitudes of the corresponding Born process, leading\nto color correlations and giving rise to the CLBS as in Eq. (2.9). Here the dependence of P in\nEq. (2.12) on the parton momentum fraction x leads to convolutions when integrated with the Born\nsquared matrix elements or CLBS, see Eq. (2.3), and the implementation needs a prescription for\n'+'-distributions (see e.g. Eq. (B.26) in [34]).\nSimilar definitions as in Eq. (2.12) hold for the K- and H-operators. They also contain distributions 1/(1 \u2212 x)+ that are singular in the collinear limit and parametrize the factorization scheme\n6\n\n\fFigure 1: The directory structure of the AutoDipole package.\n\ndependence, K for factorization in the initial state and H in the final state. These remarks conclude\nour brief review of the Catani-Seymour dipole formalism. For details the reader is referred to the\noriginal literature [1, 2].\n\n3 The AutoDipole package\nThe AutoDipole package constructs all necessary subtraction terms of the Catani-Seymour formalism [1, 2] for a given scattering process with n colored partons in a fully automatic manner. It\ncan handle both massless and massive partons and it also allows for additional (non-colored) SM\nparticles in the scattering process, e.g. couplings of quarks to \u03b3, Z-, W \u00b1 -bosons and so on.\nLet us briefly sketch the details of our implementation of the dipole subtraction formalism, because\nthere is a large freedom in the way how this can be performed. For instance, in Refs. [35, 36]\nthe implementation was realized in form of two independent C/C++ libraries providing all the\nnecessary functions to evaluate the dipole terms. As a slight disadvantage of this approach the\nproduced code is non-local and that there is some redundancy in the calculation. In the present\nwork we follow a different strategy. The main idea here is to have a code generator which will\nproduce an optimized flat code. To realize this we have constructed a Mathematica program which\nacts as such a generator and its output is interfaced with MadGraph [3\u20135]. To that end we found the\nstand-alone version of MadGraph suitable and for the numerical evaluation of all subtraction terms,\nwe use helicity amplitudes provided by MadGraph (which are based on the HELAS library [6, 7]).\n\n3.1 Structure of the code\nThe complete layout of the code of the AutoDipole package is displayed in Figure 1. The major\npart of the source code in the package (all contained in the directory lib) is written in Mathematica.\nThis includes all algorithms for the generation of the dipole terms as well as the evaluation of\nthe I-, P- and K-operator insertions sandwiched between the Born amplitudes in the appropriate\nkinematics. The use of a computer algebra program like Mathematica has the clear advantage\nhere that all terms are accessible to symbolic manipulation. This feature is very useful for general\nstudies of the IR behavior of scattering amplitudes.\n\n7\n\n\fFigure 2: The flowchart of the execution of AutoDipole.\n\nIn using AutoDipole we are primarily interested in the generation of Fortran code for all subtraction\nterms of Eq. (2.3). The essential parts of the flowchart are displayed in Figure 2. From a given input\nprocess, the Mathematica code generates all dipole terms. The important files here are dipole.f,\nreducedm.f, and the shell script for the interface with MadGraph, where dipole.f contains all\ndipole terms except for the reduced kinematics and the CLBS. The routine reducedm.f calculates the reduced kinematics of each dipole term as defined in Eq. (2.10). The subsequent run\nof a patched version of MadGraph (contained in the directory patch) via the interface produces\nthe files, cmatrix.f and allcolormat.inc. The routine cmatrix.f evaluates all CLBS as in\nEq. (2.9). It includes the file allcolormat.inc, which contains all extended color matrices by the\ntwo color operator insertions. We use the latest version of MadGraph (MG_ME_SA_V4.4.30). All\nthe process specific Fortran files mentioned above are stored in a new directory under process,\nsee Figure 1.\nIn short, the evaluation of the generated Fortran code for the dipole terms proceeds along the\nfollowing chain, see Figure 2. The routine reducedm.f receives a given phase space point as\ninput and calculates the reduced kinematics of each dipole term. Next, the routine cmatrix.f\n(with the reduced kinematics as input) computes the CLBS of each dipole term together with the\nextended color matrices in allcolormat.inc. Finally the routine dipole.f returns the values\nof all dipole terms having received the reduced kinematics and the CLBS as input. All this is done\nautomatically when the user executes the command ./runD (see Sections 4.2 and 4.3) to calculate\nthe subtraction term for a specific phase space point.\nThe algorithm of dipole term generation by the Mathematica code is shown in Section 3.2. A\ndetailed account of the calculation of the CLBS is given in Section 3.3 and some aspects of the\nspin correlations for the particular case of a gluon emitter are presented in Section 3.4. The check\nof IR safety is explained in Section 3.5. An explanation of how to run AutoDipole is deferred to\nSection 4.\n\n3.2 Algorithm of dipole generation\nLet us start with a short description of the Mathematica code generating all dipole terms. This\nprocedure makes use of the following three steps:\n\n8\n\n\fFigure 3: The four categories of dipoles (Dipole 1, ..., 4), the seven possible splittings and their order of\ncreation in AutoDipole, see Table 2 for details.\n\n1. Choose all possible emitter pairs from the external legs.\nFor a given real emission 2 \u2192 (n + 1)-particle scattering process we abbreviate the set of initial\n(final) state partons collectively as {initial} ({final}), i.e. the scattering reaction reads generically\n{initial} \u2192 {final} .\n\n(3.1)\n\nThen, the first step in the construction of the dipoles is the choice of the emitter pair, that is the\nroot of the splitting of the quarks and gluons. This also specifies the kind of splitting. At NLO\nin QCD, there exist seven possible splittings, which we group into four classes and we enumerate\nthese types of dipoles accordingly, Dipole 1, ..., and Dipole 4. The ordering is shown in Figure 3.\nDue to the factorization of the splitting each dipole is associated to a certain reduced Born process\nand the following equations show schematically the operations performed on the sets of partons in\nEq. (3.1) in order to construct the corresponding reduced Born process,\nDipole 1:\nDipole 2:\nDipole 3:\nDipole 4:\n\n{initial}\n{initial}\n{initial} \u2212 f + g\n{initial} \u2212 g + f \u0304\n\n\u2192\n\u2192\n\u2192\n\u2192\n\n{final} \u2212 g ,\n{final} \u2212 f f \u0304 + g ,\n{final} \u2212 f ,\n{final} \u2212 f ,\n\n(3.2)\n(3.3)\n(3.4)\n(3.5)\n\nwhere g is a gluon and f ( f \u0304) a quark (anti-quark). The notation in Eqs. (3.2)\u2013(3.5) indicates which\npartons are removed from or added to the respective sets {initial} and {final}. The cases Dipole 3\nand 4 can also occur with a reduced Born cross section where f and f \u0304 are exchanged. The groups\nDipole 2, 3 and 4 also need to account for the existence of various quark flavors, i.e. they exhibit\nmanifest flavor dependence, see Table 2 for details.\n2. Choose all possible spectators for each emitter pair.\nThe spectator is one external field which is different from both fields of the emitter pair and its\nchoice is a purely combinatorial procedure. We use indices, i, j, and k, for fields in a final state\n9\n\n\fand, respectively, indices, a and b, for an initial state field. For a spectator in the final (initial) state\ndenoted by k (b), this condition means k , i, j (b , a). It emerges from a special feature of the\nsubtraction formalism namely that the squared matrix elements with the Casimir operator, h T2i i,\nis expressed, due to color conservation, through CLBS h Ti * Tk i(i , k) which always includes one\ncolor dipole configuration in the part.\n3. Construct the dipole terms from the chosen combinations of emitter and spectator.\nThe previous steps provide all such combinations as pairings of the type (emitter, spectator)=\n(i j, k), (i j, b), (ai, k), and (ai, b). Each case corresponds to one dipole term, for which we use the\nai,b\n, respectively. Detailed information about all pairings of\nshort-hands Di j,k , Daij , Dai\nk , and D\nemitter and spectator as well as the potential presence of a mass parameter is given in Table 2\nin Appendix A. For explicit expressions we refer to [1, 2].\nHere it is worth to stress a few points. First of all, the chosen order for the generation has the\nadvantage of grouping together the reduced Born matrix elements. The CLBS in the same category\nexhibit the same Lorentz structure, only the extended color matrix is different. This ordering leads\nto a block-diagonal structure in the evaluation of the color correlations. It leads to flat Fortran code\nincluding higher readability. Additionally, for the category Dipole 1 the Casimir operator T2i j in the\ndenominator always cancels against the same one in the dipole splitting function. This cancellation\nleads to manifest simplifications. Finally, in our set-up we have access to the symbolic expression\nand can easily identify or extract partial subsets of dipole terms, if needed. For example we may\nwant to discard the t \u2212 t \u0304 (heavy-quark) splitting in the category Dipole 2, because this splitting does\nnot give rise to poles in \u01eb. Our way of generating the dipoles in the package easily allows this\nselection. The user can discard dipoles of a specific category in the input file parameter.m (see\nSection 4).\nAt this stage it remains to discuss the generation of all terms involving the I-, P- and K-operators.\nThis is sketched in Figure 4. Given, that these operators originate from the phase space integral\nover unresolved parton of the dipole terms, it is clear that we only need a subset of all previously\ngenerated terms. From all reduced Born amplitudes generated for the regularization of the real\nemission contributions (i.e. Figure 3) we need only the CLBS in the category Dipole 1 for all\nI-, P-, and K-operator insertions. Hence, no new information is required and the Mathematica\npackage assembles the respective expressions (along with the color correlations, see Section 3.3)\nin the Fortran files Iterm.f and PKterm.f.\n\n3.3 The color linked Born amplitude squared\nThe numerical evaluation of Born amplitudes (or their squares) is a routine task for many publicly\navailable packages designed for automated LO calculations. As announced above, we choose\nthe stand-alone version of MadGraph [3\u20135] for this purpose and the added feature needed is the\nevaluation of the color link operators, see e.g. Eq. (2.7). This can be done by a patch and allows\nus to obtain all CLBS in an automatic way, see Figure 2.\nThe generation of the amplitudes in MadGraph proceeds via Feynman diagrams and the color\nfactors are separated from each diagram. During the evaluation everything is expressed in terms\nof generators of the fundamental representation of the color SU(3). A typical example is that the\nfactor f abc of the gluon three-point vertex is rewritten in terms of the fundamental generator tiaj\n\n10\n\n\fFigure 4: The order of creation of the integrated dipoles in AutoDipole with insertion of the I-operator\n(left) and of the P- and K-operators (right), see Tables 3 and 4 for details.\n\nwith the help of the identity,\nf abc = \u22122i( Tr[ta tb tc] \u2212 Tr[tc tb ta ] ) .\n\n(3.6)\n\nThe color factors of each diagram are sorted in a unique order and they are expressed in a sum.\nWhen a specific term of a diagram is identical to one of the other diagrams, both are combined as\nX\nM=\nCa Ja ,\n(3.7)\na\n\nwhere Ca denotes the independent color factors. Each Ca has fundamental and adjoint color indices\ncorresponding to the external quarks and the gluons, respectively. Ja is the joint amplitude, e.g.\nJ1 = +A1 \u2212 A3 + * * * where Ai is the partial amplitude of i-th diagram (with the color factor stripped\noff). The invariant matrix element squared is finally expressed in the form,\n|M|2 = (~J)\u2020 CF ~J ,\n\n(3.8)\n\nwhere the color matrix CF is defined as\n(CF)ab =\n\nX\n\nCa\u2217Cb .\n\n(3.9)\n\ncolor\n\nFor the CLBS we need to evaluate Eq. (3.8) with an insertion of two additional color operators to\nthe emitter and spectator legs. This is precisely what our patch of MadGraph does (see Figure 1\nand the directory lib/patch). The subroutines of MadGraph for the color factor calculations are\nwell structured and the original routines to add the color factors tiaj and f abc can be applied to the\nadditional color insertions for the CLBS. The color algebra of the SU(3) is performed numerically\nand the resulting extended color matrix CF is written to the file allcolormat.inc, see Figure 2.\nWe have realized the two color operator insertions for all CLBS in an automatic way and we have\nalso checked that MadGraph with our interface works for a set of rather involved processes. As a\nsimple example let us discuss the color insertions required for the process g(a)g(b) \u2192 u(1)\u016b(2)g(3).\n11\n\n\fThe reduced Born process g(a)g(b) \u2192 u(1)\u016b(2) has three diagrams and the color factors are combined into two independent ones, (C1 ,C2 ) = ((ta tb )12 , (tb ta )12 ). The components of the color matrix\nare given by the traces, (CF)11 = (CF)22 = Tr[tb ta ta tb ] and (CF)12 = (CF)21 = Tr[tb ta tb ta ]. Then the\ncolor matrix is calculated as\n!\n16/3 \u22122/3\n.\n(3.10)\nCF =\n\u22122/3 16/3\nIn the CLBS we need for instance the fundamental operator insertions into the legs 1 and 2.\nThe components of the color matrix CF are modified to (CF\u2032 )11 = Tr[tb ta tc ta tb tc ] and (CF\u2032 )12 =\nTr[tb ta tc tb ta tc ]. Then the modified color matrix is obtained as\n!\n1/9 10/9\n\u2032\n.\n(3.11)\nCF =\n10/9 1/9\nOne of the more complicated examples consists of the two color operator insertions into the process\ng(a)g(b) \u2192 t(1)t \u0304(2)g(3)g(4). In MadGraph the normal SU(3) color matrix for the process is a\n24 \u00d7 24 matrix. The first 15 components in the first row read (we refrain from spelling out the rest),\nCF =\n\n1\n(512, 8, \u221264, 80, 8, \u221210, \u22121, \u221264, \u221264, 8, \u22121, \u221210, \u22121, 62, \u221210, * * *).\n54\n\n(3.12)\n\nUpon insertions of two adjoint color operators for a gluon into the legs 3 and 4 the extended\nroutines calculate the modified color matrix as\nCF\u2032 =\n\n1\n(8, 0, 8, 16, 0, \u22122, 0, 8, \u22121, \u22121, 1, 2, \u22128, \u22127, 1, * * *) ,\n4\n\n(3.13)\n\nand, of course, the result in Eq. (3.13) agrees with independent checks.\n\n3.4 Spin correlations for gluon emitters\nAs we have seen above the dipoles for the splittings g \u2192 gg and g \u2192 qq\u0304 (which involve a gluon\nemitter) introduce spin correlations (see e.g. Eq. (2.7)). Since our numerical evaluation of the\nreduced Born amplitudes uses helicity amplitudes, we have to derive the components of the tensor\nfor the spin correlations in the helicity formalism as well. To that end, we choose the definitions\nin [37] which we here call the XZC gluon polarization vector.\nLet us illustrate the necessary steps (formulated in [38]) with the case of the massless dipole term\nD(gi , g j , k) in Eq. (2.7),\nD(gi , g j , k) = \u2212\n\n\u0011\n1\n1 \u0010 \u2217\n\u03bc\u03bd\nVgi g j ,k\nA\u03bc Tk * Ti j A\u03bd ,\n2pi * p j\nCA\n\n(3.14)\n\n\u03bc\u03bd\n\nwhere Vg g ,k is written schematically as\ni j\n\n\u0001\n\u03bc\u03bd\nVg g ,k = 16\u03c0\u03b1 s \u03bc2\u01eb C A \u2212C1 g\u03bc\u03bd + C2 L\u03bc L\u03bd ,\ni j\n\n\u03bc\n\n\u03bc\n\n(3.15)\n\nwith L\u03bc = zi pi \u2212 z j p j and some Lorentz scalars C1,2 (e.g. given in Eq. (2.8)). Moreover, in\nEq. (3.14) we have expressed the CLBS in Eq. (2.9) through amplitudes A\u03bc and A\u03bd , where the\n12\n\n\fpolarization vector \u01eb\u03bc\u03bb ( p\u0303i j ) of the emitter gluon with momentum p\u0303i j has been amputated. Then we\ncan transform both the dipole splitting function V \u03bc\u03bd and the amplitude A\u03bc to a helicity basis by\nP\ninserting the polarization sum \u03bb \u01eb\u03bc\u03bb\u2217 \u01eb\u03bd\u03bb as\nX\n\u2032\nA\u2217\u03bc V \u03bc\u03bd A\u03bd =\nA\u2217\u03bb\u2032 V \u03bb \u03bb A\u03bb ,\n(3.16)\nV\n\n\u03bb\u2032 \u03bb\n\n=\n\n\u03bb\u2032 ,\u03bb\n\u2032\n\u01eb\u03bc\u03bb \u2217\n\nV \u03bc\u03bd \u01eb\u03bd\u03bb ,\n\n(3.17)\n\nand we obtain the dipole D(gi , g j , k) in a \u00b1-helicity basis as\n1\n16\u03c0\u03b1 s \u03bc2\u01eb\n(3.18)\n2pi * p j\nh\n\u0010\n\u0011\n\u0010\n\u0011i\n\u00d7 (C1 + C2 |E+ |2 ) A\u2217+ Tk * Ti j A+ + A\u2217\u2212 Tk * Ti j A\u2212 + 2 C2 Re E\u2217+ E\u2212 A\u2217+ Tk * Ti j A\u2212 .\n\nD(gi , g j , k) = \u2212\n\nHere we have used gauge invariance, the on-shell condition for the gluon and orthogonality of\nthe polarization vectors, which gives rise to the relations \u01eb \u03bb\u2217 * p\u0303i j = A * p\u0303i j = L * p\u0303i j = p\u03032i j = 0. The\nquantity E\u00b1 needed to express the dipoles in a helicity basis is defined as (see e.g. [38])\nE\u00b1 = \u01eb\u00b1 * L .\n\n(3.19)\n\nAs a subtlety, we would like to point out the following. In the HELAS library [6, 7] the gluon\npolarization vector is calculated by the subroutine VXXXXX and taken to be in a helicity basis but\nthe phase conventions are different from the ones in [37]. Thus we have to relate these conventions\nto our choice [37]. Although it may be natural to use the same definition for the gluon polariza\u03bc\u03bd\ntion vectors as in HELAS for the dipole splitting functions (e.g. Vgi g j ,k in Eq. (3.15)) we have\nthe freedom not to do so because of gauge invariance and the on-shell condition. In our implementation we have chosen the latter option with the advantage that the calculation of the dipole\nsplitting functions can be completely separated from the part for evaluation of the CLBS. With the\nXZC definitions E\u00b1 in Eq. (3.19) is expressible in terms of spinor products which can be easily\nimplemented in Fortran code.\nThe polarization vectors of HELAS [6, 7] are written in a helicity basis as\n\u00b1\n\u01eb\u03bc[\n(k, q) =\nHELAS]\n\n1\n\u221a (\u2213\u01eb\u03bc(1) \u2212 i\u01eb\u03bc(2) ) ,\n2\n\n(3.20)\n\nwith the explicit expression for the vectors in a linear basis, \u01eb\u03bc(1,2) given in [6, 7]. Likewise, for\nXZC [37] we have\n+\n\u01eb\u03bc[\n(k, q) =\nXZC]\n\nhq \u2212 |\u03b3\u03bc |k \u2212 i\n,\n\u221a\n2hqki\u2217\n\n(3.21)\n\n+\u2217\n\u2212\nwhere the relation \u01eb\u03bc[\n= \u01eb\u03bc[\nholds and q is an arbitrary reference momentum. The difference\nXZC]\nXZC]\nbetween the conventions Eq. (3.20) and Eq. (3.21) amounts to a complex phase,\n\n\u01eb[\u00b1\u2217\n(k, q) * \u01eb[\u2213HELAS] (k, q\u2032 ) = \u2213e\u00b1i\u03c6(k) .\nXZC]\n\n(3.22)\n\nThe phase difference contributes to only the second term in the square bracket in Eq. (3.18) and it\nis then rewritten as\n\u0012\u0010\n\u0013\n\u0010\n\u0011\n\u00112 \u0010\n\u0011\n\u2217\n\u2217\n+i\u03c6(k)\n\u2217\n+ 2 C2 Re E+ E\u2212 A+ Tk * Ti j A\u2212\n= \u22122 C2 Re e\nE+ A+ T k * T i j A\u2212\n, (3.23)\n[XZC]\n\n[HELAS]\n\n13\n\n\fwhere the CLBS is also taken in the helicity basis for the gluon emitter as in HELAS. The quantity\nE+ = \u01eb[+XZC] * L in Eq. (3.23) can be computed according to Eq. (3.19) in the conventions of [37] in\nterms of spinor products as (see e.g. [38])\n+i\u03c6(k)\n\ne\n\n+i\u03c6( p\u0303i j )\n\nE+ = e\n\nzi hp j pi i h p\u0303i j pi i\u2217\n,\n\u221a\n2hp j p\u0303i j i\n\n(3.24)\n\nwhere we have set k = p\u0303i j and chosen q = p j for the reference momentum in Eq. (3.21). Explicit\nexpressions for the vector E+ in Eq. (3.19) for all required momentum configurations (massless\nand massive) are given in Appendix B. For the dipole terms including the massive partons, the\nresult for E+ in Eq. (3.19) contains terms like hpi \u2212 |pk | p\u0303ai \u2212 i with on-shell momenta p2k = m2k . In\norder to express these terms through spinor products we have used flat momenta,\np\u266dk\n\n= pk \u2212\n\nm2k\n2pk * p\u0303ai1\n\np\u0303ai ,\n\n(3.25)\n\nwhich are massless because (p\u266dk )2 = 0. Due to the equations of motion /\u0303pai | p\u0303ai \u2212 i = 0, we can\nrewrite the quantities under consideration, e.g.\nhpi \u2212 | /pk | p\u0303ai \u2212 i = hpi \u2212 | /p\u266dk | p\u0303ai \u2212 i ,\n\n(3.26)\n\nso that they are accessible to standard spinor calculus, see also [39] for the spinor helicity formalism including massive fermions. Our treatment of the spin correlations is contained in the\nMathematica sources where the expressions for E+ (as given in Appendix B) are implemented.\nDuring the automated generation of all subtraction terms for numerical evaluation the results are\nwritten to the output in the Fortran file, dipole.f, see Fig. 2.\n\n3.5 Checking the soft and collinear limits\nLet us discuss the checks for the AutoDipole package. First, there is the standard quality check\non the automatic generation of the dipole terms because the result according to Eq. (2.3) has to be\nfinite when approaching the singular regions. Second, since the Catani-Seymour formalism is well\nestablished, we can compare the output of AutoDipole with results of independent implementations\nin the literature.\nThe AutoDipole package performs automatically for all generated subtraction terms a numerical\ncheck of all IR limits. For that purpose the subtracted squared matrix element for the process\nunder consideration are constructed and sampled over all limits to test the cancellation of the IR\nsingularity. For a given soft/collinear limit Li , we pick up the set S(i) of the corresponding dipoles\nto test whether the quantity\n\u0014\n\u0015\nX\nlim |M|2 \u2212\nD( j) ,\n(3.27)\nLi\n\nj\u2282S(i)\n\nis soft/collinear safe. The code lists all limits Li , and the corresponding sets S(i). A concrete\nexample will be presented in Subsection 4.2. The leading soft/collinear singularity of the squared\nmatrix element |M|2 behaves in the soft limit as 1/k2 for a gluon of momentum k and in the collinear\n14\n\n\fone as 1/(2pi * p j ) = 1/si j for two collinear momenta pi and p j . The set of the corresponding dipoles\ncancels this leading singularity pointwise as\n|M|2 \u2212\n\nX\n\nj\u2282S(i)\n\nD( j) =\n\n1\n1\n(a0 + a1 x + a2 x2 + * * *) \u2212 2 a0 ,\n2\nx\nx\n\n(3.28)\n\n\u221a\nwhere x = k( si j ) is the respective Lorentz scalar depending on the momenta in the soft (collinear)\nlimit. The difference in Eq. (3.28) is integrable over the real emission phase space. The numerical accuracy, however, has to be controlled, because deep in the singular regions the individual\ncontributions in Eq. (3.28) become very large and with the limited numerical precision of floating\npoint arithmetic the cancellation might be imperfect. Fortunately, the stability of the numerical\ncancellation can be tested automatically. Normalizing Eq. (3.28) one can check the slope of the\nquantity,\nP\n|M|2 \u2212 D 1\n(3.29)\n= (a1 x + a2 x2 + * * *) .\n2\na0\n|M|\nBased on Eq. (3.29) AutoDipole tests the cancellation and returns values for the fiducial regions\nfor the Lorentz invariants si j .\nWe have extensively tested the soft and collinear finiteness of the generated subtraction terms for\nnumerous scattering processes in e+ e\u2212 , ep and pp-collisions including massive quarks and weak\ngauge bosons. Among those are a large class of 2 \u2192 4 scattering processes as needed in the NLO\nQCD correction to 2 \u2192 3 reactions. We have also tested scattering processes with 2 \u2192 5 and 2 \u2192 6\npartons, like e.g.\nu\u016b \u2192 d d\u0304ggg\ngg \u2192 W + \u016bdgg\ngg \u2192 tt \u0304ggg\ngg \u2192 tt \u0304bb\u0304g\ngg \u2192 tt \u0304bb\u0304gg\nwhich are currently under investigation in view of phenomenological applications for the LHC.\nIn addition, we have been able to obtain also perfect agreement with published results [36,40]. For\nthe NLO QCD corrections to pp \u2192 tt \u0304 + 1jet production results for the real emission contributions\nhave been presented at individual phase space points in [36]. We agree at least to 14 digits for the\nmatrix elements squared and at least to 12 digits for the sum of the subtraction terms. All details\nof our comparison are shown in Table 5 in Appendix C. We have also checked against the results\nfor the NLO QCD corrections to pp \u2192 W + W \u2212 + 1jet [40], in particular the real emissions in the\nchannel u\u016b \u2192 W + W \u2212 gg. Also here we have obtained very good agreement as documented in the\nlast entry of Table 5. The AutoDipole package provides a shell script to reproduce some of the\nnumbers in that Table 5 (see Section 4.4).\nLet us briefly comment on the integrated dipoles in Eq. (2.3) originating from the I-operators.\nHere, a complete check is more involved because for a given process scheme dependence enters,\ni.e. whether the singularities of the NLO virtual contributions are factorized with respect to the\nd-dimensional or 4-dimensional Born amplitude.\n\n15\n\n\fNevertheless, partial checks of the singularity structure are straightforward. The matrix element\nsquared with the sum of all I-insertions is written schematically as\nh1, . . . , n| I |1, . . . , ni = C\u22122\n\n1\n1\n+ C\u22121 + C0 ,\n2\n\u01eb\n\u01eb\n\n(3.30)\n\nwhere C\u22121 and C\u22122 are process (and kinematics) dependent coefficients. For the leading pole\n\u223c 1/\u01eb 2 , the coefficient C\u22122 obeys the following simple relation\n\u0010\n\u0011\n\u03b1s\nC\u22122 =\n|MBorn |2 (nq + nq\u0304 )C F + ngC A ,\n(3.31)\n2\u03c0\nwhere MBorn is the corresponding Born amplitude. The number of external massless (anti-)quarks\nis nq (nq\u0304 ) and ng the number of external gluons. In QCD the standard SU(N) color factors take the\nnumerical values C F = 4/3 and C A = 3.\nApart from simple relations like Eq. (3.31) the coefficients for color and spin averaged results for\nthe I-operator could again be compared with the published literature for pp \u2192 tt \u0304+ 1jet production\nat NLO in QCD [36]. We have obtained agreement to at least 14 digits as shown in Table 6. The\nnumbers in Table 6 can again be reproduced with a simple command explained in Section 4.4.\n\n4 Running AutoDipole\nThis Section is meant to be a short manual to the AutoDipole package. We explain the installation\nprocedure, the use and discuss a few processes as examples.\n\n4.1 Install\nThe package, AutoDipole_V1.2.3.tar, is available for download from [41] (or else from the\nauthors upon the request). In addition, one must also obtain the stand-alone version of MadGraph\n(MG_ME_SA_V4.4.30) e.g. by download from [42] and put it (in the form of .tar.gz or .tar)\nin the AutoDipole package directory. Then execute the installation procedure by1\n./install.sh\nand the directory structure as displayed in Figure 1 emerges. Repetition of this command always\nallows the user to recover the initial settings described in this Section.\n\n4.2 A short example\nLet us next illustrate the use of AutoDipole. First of all, one has to specify all partonic real emission\nprocesses which appear at NLO in the observable under consideration. To that end, as a concrete\nexample let us choose a simple process, u\u016b \u2192 d d\u0304g which contributes to hadronic di-jet production,\n1\n\nThe AutoDipole package (version 1.2.3 and earlier) is assumed to be used with MadGraph (stand-alone version\nMG_ME_SA_V4.4.30). Upgrades to newer versions of MadGraph require the user to set the MadGraph version in the\nfirst line of install.sh by hand before installation. We have tested that AutoDipole version 1.2.3 also works with\nthe MadGraph stand-alone version MG_ME_SA_V4.4.39. An automated test of the installation can be executed with\nthe command check.sh as detailed in Section 4.4.\n\n16\n\n\fpp \u2192 2 jets at NLO. This example exhibits all features of the Catani-Seymour formalism, i.e. it\nneeds dipoles and I-operators as well as the P- and K-terms. We start with the Mathematica part\nof AutoDipole. The package can simply be included through the driver file as\n<<driver_user.m\nNext, we can run the package for the process u\u016b \u2192 d d\u0304g with the command\nGenerateAll[{u,ubar},{d,dbar,g}]\nUpon running the AutoDipole package successfully, all generated Fortran files are stored in a\n(newly created) directory under process, for the example at hand ./process/Proc_uux_ddxg.\nAutoDipole returns the message:\n******************************************************'\nRun has been succeeded.\nIn order to run the generated code, please enter\nin the newly created directory under ./process\nmake\n./runD\n******************************************************'\nP\nThe real matrix element squared |M|2 and the sum of all dipole terms i D(i) are evaluated at 10\nphase space points with this command. Also the check of cancellations in all infrared limits for\nthe subtracted matrix element can performed. The respective command is:\nmake checkIR\n./checkIR\nLikewise, the integrated dipoles (I-operators) as well as the contribution of the P- and K-terms\nat 10 points in phase space can be evaluated in the subdirectories Proc_uux_ddxg/Virtual and\nProc_uux_ddxg/PK with the commands:\nmake runI\n./runI\nmake runPK\n./runPK.\nThe present example u\u016b \u2192 d d\u0304g runs with the default settings of AutoDipole. For further illustration\nthe package also comes along with a prepared list of examples so that explicit numbers can be\nobtained by executing the shell scripts explained in the next subsection.\nIf the user wants to include the generated Fortran code with the subtraction terms into his/her own\nproject for further numerical evaluations, he/she needs (i.e. has to copy) a number of files for that\npurpose. The complete list of generated files is given in Table 1. Note that most of the functions\nare only needed internally and are not meant to be called by the user directly. We assume here that\nall input momenta {pi } are generated from phase space routines supplied by the user and that the\nHELAS library libdhelas3.a is linked.\nDipole terms : directory process/Proc_uux_ddxg\nFrom the file check.f the call of the relevant subroutines for the evaluation of the dipole terms is\nobvious. The user needs to copy the following files:\n17\n\n\ffile (subroutine)\n[Dipole terms]\nmatrix.f (smatrix)\ndipole.f (dipole)\nreducedm.f (reducedm)\ncmatrix.f (cmatrix#)\ncmatrix.f (cmatrix#dh)\ncheck.f (program checkdipole)\n[I-terms]\nmatrixLO1.f (smatrix)\nIterm.f (Iterm)\ncmatrix.f (cmatrix#)\ncheckVirt.f (program checkVirt)\n[P- and K-terms]\nmatrixLO1.f (smatrix)\nPKterm.f (PKterm)\ncmatrix.f (cmatrix#)\ncheckPK.f (program checkPK)\n[Check of soft/collinear limits]\ncollinear.f\ncheckIR.f (program checkIR)\n\ninput\n\noutput\n\n{pi }\n{pi }\n{pi }\nreduced { p\u0303i }\nreduced { p\u0303i }\n{pi } in inputm.h\n\n|M|2 for real emission\nD(i)\nreduced { p\u0303i }\nCLBS (like helicity)\nCLBS (unlike helicity)\ncheck of D(i), |M|2\n\n{pi }\n{pi }\n{pi }\n{pi } in inputmLO.h\n\n|MBorn |2\nCi of I-terms\nCLBS\ncheck of Ci of I-terms\n\n{pi }\n{pi }\n{pi }\n{pi } in inputmLO.h\n\n|MBorn |2\nPt(i), K(i) (P- and K-terms)\nCLBS\ncheck of Pt(i) and K(i)\n\n{pi }\ncollinear limits of {pi }\nP\ncollinear limit of {pi } (|M|2 \u2212 D)/|M|2\n\ncommon input files\n[Process dependent]\nallcolormat#.inc\nemitspecinfo.inc\nparam_card.dat\nnexternal.inc\nnexternal2.inc\ninputm.h\ninputmLO.h\n[Process independent]\ncoupl.inc\ncouplings.f\n\nextended color matrices (used in cmatrix#)\ninformation of emitter for dipoles (used in cmatrix#)\nparameters for CLBS\nfield numbers of real emission process for dipoles and\nof Born process for I-, P- and K-terms\nfield number of reduced Born process\nphase space points for dipole checks\nphase space points for I-, P-, and K-term checks\n\ncommon block of parameters\nreads parameters in param_card.dat and assigns\nthem in coupl.inc\n\nTable 1: The file content of the AutoDipole package. In names of subroutine and files (e.g. cmatrix#) the\nsymbol # denotes an integer number, typically #=1.\n18\n\n\fmatrix.f\ndipole.f\nreducedm.f\ncmatrix.f\nallcolormat\\#.inc\nemitspecinfo.inc\nnexternal.inc\nnexternal2.inc\n\n(generated by AutoDipole)\n|\n|\n|\n|\n|\n|\n(generated by AutoDipole)\n\ncoupl.inc\ncouplings.f\n\n(process independent file)\n(process independent file)\n\nparam_card.dat\n\n(parameter input file)\n\nTo use the generated code, one first has to initialize MadGraph. The parameters are determined in\nparam_card.dat and are assigned to the definitions in coupl.inc with the help of the subroutine\nsetpara in couplings.f as\ninclude 'coupl.inc'\ncall setpara('param_card.dat',.true.)\nto be used subsequently in the subroutines cmatrix#, cmatrix#dh, and smatrix through the\ncommon blocks. The symbol # here and above denotes an integer number (e.g. #=1). For the\ndipoles only the strong coupling constant \u03b1 s as well as the top and bottom masses are needed in\nthe evaluation. These three parameters appear as\nAL=g**2*(4.d0*pi)**(-1)\nmt=tmass\nmb=bmass\nand are passed to the subroutine dipole through the common blocks,\ncommon /usedalpha/ AL\ncommon /MASS/ mt,mb\nNext, the evaluation of the squared matrix element for the real emission process |M|2 proceeds in\nexactly the same way as in MadGraph with the call\ncall smatrix(p,msq)\nFinally, the dipole terms are evaluated by calling the subroutine\ncall dipole(p,dip,SumD)\nwhich returns an array with the values for each dipole term (dip) and the sum of the all dipoles\n(SumD) as output. For our example process u\u016b \u2192 d d\u0304g we have 15 individual dipoles. The reduced\nkinematics of each dipole (as determined by the subroutine reducedm) can be accessed by the\ncommon block\n19\n\n\fdouble precision ptil(0:3,1:n1,n2)\ncommon /OUTPUTM/ ptil\nwhere n1=4 and n2=15 in the definition of the momenta for the example at hand.\nI-terms : directory process/Proc_uux_ddxg/Virtual\nOur program checkVirt.f for checks of the I-terms again provides an example for the use\nof the subroutines to evaluate the I-terms. In addition to the eight files from cmatrix.f to\nparam_card.dat listed above for the evaluation of the dipoles, the user has to copy one file:\nIterm.f\nThen, the initialization phase is exactly the same as before and for the evaluation of the I-terms,\none has to call the subroutine\ncall Iterm(p,coef,SumI)\nwhich provides the value of the coefficients (i.e. the array coef) as well as the sum (SumI) of all\nI-terms as output. If the user also wants to compute the LO matrix element |MBorn |2 he needs the\nfile matrixLO1.f. The execution of the subroutine with the command\ncall smatrix(p,msqLO)\nis performed again exactly as in MadGraph.\nP- and K-terms : directory process/Proc_uux_ddxg/PK\nThe user needs the following file to evaluate the P- and K-terms:\nPKterm.f\nmatrixLO1.f\nas well as the eight files from cmatrix.f to param_card.dat already discussed for the dipoles.\nThe initialization phase is unchanged but the user has to provide the parton momentum fraction x\nfrom the mass factorization as additional input. The P- and K-terms for the first leg are computed\nby the call\ncall PKterm1(p,x,SumP,SumK)\nwhich returns separately the sum of all P- and K-terms (SumP and SumK). For the second parton\nin initial state (as in hadron-hadron collisions) the corresponding P- and K-terms are evaluated by\ncalling PKterm2.\n\n4.3 General usage\nFor a specific application of AutoDipole, the user needs to perform the following three steps:\n1. Setup of parameters : parameter.m\n2. Run of package\n: GenerateAll[{initial},{final}]\n3. Run and checks of the generated code at : /process/Proc_xx_xx/ .\n20\n\n\fLet us explain each of these steps in more detail.\n1. Setup of parameters\nGenerally, the user has to supply all process parameters needed for the dipole subtraction procedure\nby editing the file,\nparameter.m\nwhere (following the MadGraph conventions) all values with the dimension of a mass are in units\nof [GeV]. Let us explain all variables in the file together with the chosen default values.\nParameters for dipole terms\nep=0 :\nThe parameter of dimensional regularization of space-time, D = 4 \u2212 2\u01eb. The default choice\neliminates higher orders (positive powers) of \u01eb in the dipole terms.\nkap=2/3 :\n\u03ba is free parameter in some expressions for massive dipoles [2]. The value \u03ba = 0 leads to the\nsimplest results for the dipole terms, while \u03ba = 2/3 produces the simplest expressions of the\nI-terms.\nskipdipole={ } :\nThis set specifies the kind of dipoles to be skipped during the creation. For example, the set\nskipdipole={2t} omits the creation of the Dipole 2-(5) with the t \u2212 t \u0304 splitting (see Table 2\nin Appendix A).\nmur=174.30 :\nThe value of the renormalization scale. The default value is the same as the default value of\nthe top-quark mass in MadGraph.\nacccut=10\u2227 (-3) :\nThis value is used for the checking the quality of the infrared cancellations in the generated\ncode upon scanning over all possible collinear configurations.\nParameters for I-terms\nmFlist={ } :\nThis set lists all heavy quarks which possibly contribute to the I-terms with a gluon emitter\nin final state, e.g. as mFlist={t,b}.\nlightflavors=1 :\nThis is the number of the light flavors which contributes to the I-terms with a gluon emitter\nin initial and final states.\nreplistVirtual={ } :\nThis set enables user defined symbolic replacements to simplify the virtual contribution, e.g.\nof the type, replistVirtual={Gamma[1-eps]-> (4*Pi)\u2227 (eps)*somesymbol\u2227(-1)} which\n(4\u03c0)\u01eb\nresults in the replacement, \u0393(1\u2212\u01eb)\n=somesymbol.\n21\n\n\fsijexpansion=0 :\ndetermines whether the typical factors of dimensional regularization like\n\u0012This parameter\n\u0013\n4\u03c0\u03bc2\n2pi *p j\n\n\u01eb\n\nin the I-terms are expanded (0) or not (1).\n\nParameters for P- and K-terms\nKFSff=0, KFSgg=0, KFSfg=0, and KFSgf=0 :\nTheses parameters specify the factorization scheme. In the MS scheme (default choice) they\nare all vanishing.\nlightquarksPK3={u} :\nThis set specifies all light flavors to be added to the initial gluon of the reduced Born process\nin the P- and K-terms (see group (6) in Table 4 in Appendix A).\nmuFfort=174.30 :\nThis is the value of the factorization scale \u03bcF , which has the same default value as the\nrenormalization scale \u03bcR .\nThe other parameters which are used by MadGraph are determined in the file\npatch/Models/sm/param_card.dat.\nThe default values for the most important ones are the following (in units of [GeV] for masses),\n\u03b1 s =0.1180\n\u03b1em =0.007547169811320755\nTop mass=174.3\nBottom mass=4.7\nW mass=80.419\nZ mass=91.188\nHiggs mass=120.0\nThese parameters are used consistently throughout the run of the package. Any other changes of\nSM parameters like e.g. G F , the CKM-parameters, the decay widths of heavy fields, and so on, are\ndone in the same MadGraph file, param_card.dat. Similarly, also control over all interactions in\nthe SM proceeds entirely through MadGraph, i.e. through the file,\npatch/Models/sm/interactions.dat\nin the exactly same way as in the normal use of MadGraph. All MadGraph parameters are explained in [42].\n2. Run of package\nFor general QCD processes (including leptons and SM bosons) we run AutoDipole by executing\nthe Mathematica command:\nGenerateAll[{initial},{final}]\nwhere the sets labeled initial and final contain all external particles of the respective scattering\nprocess. The following fields are available in the present version of the package:\n\n22\n\n\fFermions:\n(u, d, b, t, e\u2212 , \u03bc\u2212 , \u016b, d\u0304, b\u0304, t \u0304, e+ , \u03bc+ ) =\n(u, d, b, t, e, muon, ubar, dbar, bbar, tbar, ebar, muonbar) ,\nBosons:\n(gluon, photon, W +, W \u2212 , Z, Higgs) = (g, gamma, Wp, Wm, Z, h) ,\nwhere the right hand side denotes the input format of AutoDipole. The available quark fields\ninclude the first family (u and d-quarks) which serves as a template for light quarks and, respectively, the third family (b and t-quarks) as one for heavy quarks. In practice this suffices as far as\nthe subtraction formalism is concerned, because generally QCD scattering processes at NLO will\nbe insensitive to the individual flavor of the quarks, and the sum over all light quark flavors can be\ntrivially taken afterwards. If one intends to study particular channels, e.g. in W \u00b1 production, flavor\nseparation is required, though.\nAs a result of the run, AutoDipole produces the following information about the created dipoles\nand the I-, P- and K-terms:\n\u2013 All analytical expressions for the dipole terms are written in the order given in Table 2 along\nwith the reduced Born process (emitter,spectator) and the reduced kinematics for each dipole\nterm. Also, the number of created dipole terms is shown group by group, namely Dipole 1,\n2, 3, and 4 and their subgroups (see Figure 3). The number of massive dipole terms is given\nseparately.\n\u2013 All soft and collinear limits together with the corresponding dipole terms are returned.\nFor example, for the process g(1)g(2) \u2192 t(3)t \u0304(4)g(5)g(6) (see next Subsection) the fifth\ncollinear limit is denoted Lc(5) = (5, 6) : Sc(5) = {17, 18, 19, 20}. This means that the collinear\ndivergence of the pair (5(g),6(g)) is canceled by the set of the dipoles, Sc(5) and the set\nconsists of the dipoles number 17,18,19, and 20. In the same way, the soft limit and the corresponding dipoles are displayed. E.g. for the soft limit of gluon 5(g), Ls(1) = (5) : Ss(1) =\n{Sc(1), Sc(2), Sc(5), Sc(6), Sc(7)}, which means that the soft divergence of 5(g) is canceled\nby the set of the dipoles, Ss(1). This set in turn consists of the sets of collinear limits Sc(1),\nSc(2), and so on.\n\u2013 The analytical expressions of all I-terms are shown in the order as given in Table 3 prior to\nthe expansion in \u01eb as well as the individual coefficients of the poles C\u22122 , C\u22121 , and C0 (see\nEq. (3.30)) after the \u01eb expansion. Also the total number of all created I-terms is displayed\nby group by group (see Table 3).\n\u2013 The analytical expressions of all created P- and K-terms are shown in the order given in\nTable 4 together with the total number of P- and K-terms.\n\u2013 Finally, AutoDipole outputs a summary with the numbers of all created dipoles, I-, P- and\nK-terms and the reduced Born processes.\nThis information, being rather detailed, helps with the identification of individual terms according\nto the order of creation. The Mathematica part of AutoDipole provides analytical and symbolic\nexpressions, which are easily accessible, if needed. These features are primarily for an experienced\nuser.\n23\n\n\fUpon running the AutoDipole package it occurs (on purely algorithmic grounds) in some cases\nthough, that a particular reduced Born cross section does not exist. For example, the process\ne\u2212 e+ \u2192 u\u016bg does give rise through the dipole 2-(5)-(u, \u016b) to the Born process e\u2212 e+ \u2192 gg, which\ndoes not exist at tree level. In such cases, an error message is displayed:\nReduced Born amplitude B2u does not exist.\nDipole 2u must be switched off.\nPlease set in the file ./parameter.m\nskipdipole={ 2u }\nFollowing the message the user has to modify the command skipdipole and repeat the Mathematica run. In this way only the relevant partial subsets of dipole terms is extracted and the\noffending Born processes are skipped (thanks to skipdipole) before calling the MadGraph part.\n3. Run and checks of the generated code\nFinally, as briefly explained above, the user can run the generated Fortran code for the regularized\nreal emission process as well as the I-, P- and K-terms. The checks proceed as follows:\nDipole terms\nAs mentioned above, the evaluation of the real matrix element squared |M|2 and the sum\nP\nof all dipole terms i D(i) at 10 randomly chosen phase space points as well as the check\nof cancellations in all infrared limits for the subtracted matrix element are automatically\nexecuted:\nmake\n./runD\nmake checkIR\n./checkIR\nThe latter command performs a scan over all possible collinear configurations. For the expression\nP\n|M|2 \u2212 D\n,\n(4.1)\n|M|2\ncf. Eq. (3.29), it is checked whether the cancellation works at least to the accuracy defined\nby the value of the parameter acccut in the file parameter.m. If the absolute value of\nthe normalized subtracted squared matrix element in Eq. (3.29) drops below the pre-defined\nvalue of acccut sufficiently deep in the collinear limit, the message,\nInfrared safety of all collinear limits is confirmed for S_ij/S > ...\nis printed.\nI-terms\nThe Fortran code to evaluate all I-terms is collected in the subdirectory ./Virtual. There,\nthe coefficients of the double and single poles in the \u01eb expansion C\u22122 , C\u22121 , C0 in Eq. (3.30)\ncan be evaluated at 10 randomly chosen phase space points by:\n24\n\n\fmake runI\n./runI\nThis includes in particular the calculation of the double poles according to\nC\u22122\n,\n(\u03b1 s /2\u03c0)|MBorn |2\n\n(4.2)\n\nand the user can easily confirm that Eq. (3.31) holds.\nP- and K-terms\nLikewise, the mass factorization terms originating from the P and K-terms is stored in ./PK\nand also evaluated at 10 randomly chosen phase space points by the command:\nmake runPK\n./runPK\nThis concludes our brief description of the user specific features of the AutoDipole package.\n\n4.4 Examples\nThe package includes a command to demonstrate the run for several example processes. This helps\nto explain the package and at the same time confirms that the installation was done successfully\nand that the package works properly. These examples include the computation of some of the\nnumbers given in Tables 5 and 6 in Appendix C. The command\n./lib/sh/check.sh\ngenerates five processes in different kinematics,\n1.\n2.\n3.\n4.\n5.\n\ne\u2212 e+ \u2192 u\u016bg\ne\u2212 u \u2192 e\u2212 ug\ngg \u2192 tt \u0304gg\nug \u2192 tt \u0304ug\nu\u016b \u2192 W + W \u2212 gg\n\nprovides suitable settings for the parameters of each process and runs the package. For illustration,\nwe only explain in the following those settings which are changed with respect to the default ones.\nThe processes from 1 to 4 use a value of \u03b1 s =0.1075205492734706 from [36] for the strong coupling constant. For the processes 1 and 2 the contribution of the Z-boson exchange is switched off\nin the file interactions.dat for simplicity. Moreover, in parameter.m the splitting 2u in process 1 (and 3u in 2) is skipped by the command skipdipole = {2u} (and skipdipole ={3u}\nin 2, respectively) to exclude an inexistent reduced Born process.\nFor the processes 3 and 4 the QED interaction is switched off in the file interactions.dat\nin order to focus on the QCD corrections only. Furthermore, a value of 174 [GeV] for the top\nmass is used following [36] and the decay width of the top-quark must be switched off in the file\nparam_card.dat. For the comparison with [36] the t \u2212 t \u0304 splitting is skipped in parameter.m,\n25\n\n\fi.e. skipdipole ={2t}, and the renormalization and factorization scales are set equal to the top\nmass value. For the I-terms five light flavors are taken into account, lightflavors = 5.\nFinally, process 5 uses the following settings [40] in the file param_card.dat: W-mass=80.425,\n\u03b1 s = 0.1202629003906369, \u03b1em =0.007543595708669335 and Fermi's constant G F = 1.16637 \u00d7\n10\u22125 , and the decay width of W-boson is switched off. The results of processes 3, 4, and 5 should\nreproduce the corresponding numbers in Tables 5 and 6.\nThe test run of all examples is finally checked by comparing all computed values of the dipoles,\nI-terms, and the averaged matrix element squared |M|2 for the processes 1 to 5 the with ones in\nthe data files in ./lib/check/. At the end of the run, e.g. for example 3, the following message\nappears:\n3.gg_ttxgg\n|M|^2(Real)\nDipole\n|M|^2(LO)\nI-term\n\n:Confirmed\n:Confirmed\n:Confirmed\n:Confirmed\n\nThis confirms the successful installation and proper functioning of the package. The generated\ncode for all examples is stored in the directory ./process as in a usual run and the directory of\neach process includes in the file res_std the result of the comparison with the data files from\n./lib/check/. All parameters used for each process are accessible in param_card.dat, so the\nuser can also run the respective files individually with usual commands of the previous subsection.\n\n5 Conclusion\nWe have presented the package AutoDipole which provides an implementation of the CataniSeymour dipole formalism [1, 2] to compute subtracted matrix elements squared in an automatic\nway. The package (partial aspects of which have been discussed before [17, 18]) consists of essentially three ingredients: the automatic generation of all dipole terms via Mathematica routines\nas well as the calculation of the color-correlated matrix elements and the evaluation of different\nhelicity amplitudes with the help of MadGraph [3\u20135] (i.e. a patched stand-alone version).\nWe have presented a complete discussion of the set-up of the program and the details of our implementation as well as the numerical evaluation of the squared matrix elements. Particular emphasis\nhas been put on explaining the use of AutoDipole which has been illustrated with sufficiently nontrivial examples. The finiteness in the soft and collinear limits has been demonstrated for a large\nnumber of processes in e+ e\u2212 , ep and pp-scattering. Also, checks for the complete set of dipoles\nhave been performed by comparing to various processes in the recent literature.\nIn comparison with other available software to generate subtraction terms for the real emission\ncontributions AutoDipole has a number of advantages. First of all, the algorithm is implemented\nin a way so that analytic expressions are generated which are accessible to symbolic manipulation.\nThen, the chosen order for the dipole generation produces flat Fortran code and allows to handle\nscattering processes with 2 \u2192 5 and 2 \u2192 6 partons of relevance for LHC phenomenology including\nthe computation of the CLBS. Finally, the structure of the package is highly modular and flexible\nfor further extensions.\n\n26\n\n\fFuture improvements of the AutoDipole package will address restricting the dipoles to small regions of phase space, as realized e.g. through \u03b1-parameters [43]. This is advantageous when\nperforming the Monte Carlo integration over the phase space of the real emission process. The\nimplementation of such cuts affects also the integrated dipoles and the case of massless partons\nis available in the literature whereas for the case of massive partons most cases can be found\nin [44, 45]. The remaining integrals for exhaustive coverage can be done e.g. with the methods\nof [32]. Next, the current version of AutoDipole does not cover processes with identified hadrons\nin the final state where one needs fragmentation. Here, the so-called H-terms have to be taken into\naccount, which will be implemented in a later version of AutoDipole. Finally, the structure of our\ncode is particularly suited for extensions to physics beyond the Standard Model (BSM). The main\nmodification needed is the so-called model file of MadGraph, which is currently already available\nfor a large class of BSM scenarios including e.g. the minimal supersymmetric extension of Standard Model for which the necessary modifications of the dipole formalism are known [2]. All the\nextensions mentioned above can be easily realized within the existing structure of our code.\nThe AutoDipole package is available for download from [41] or from the authors upon request.\nThe MadGraph package (stand-alone version) which includes the HELAS library may be obtained\nfrom [42].\n\nAcknowledgments\nWe acknowledge useful discussions with S. Badger, T. Diakonidis, R. Frederix, F. Maltoni, T. Riemann, and B. Tausk. This work is supported in part by the Deutsche Forschungsgemeinschaft in\nSonderforschungsbereich/Transregio 9, the European Community in Marie-Curie Research Training Network MRTN-CT-2006-035505 \"HEPTOOLS\", and the Helmholtz Gemeinschaft under\ncontract VH-NG-105 and contract VH-HA-101 (Alliance \"Physics at the Terascale\").\n\nReferences\n[1] S. Catani and M.H. Seymour, Nucl. Phys. B485 (1997) 291, hep-ph/9605323.\n[2] S. Catani et al., Nucl. Phys. B627 (2002) 189, hep-ph/0201036.\n[3] T. Stelzer and W.F. Long, Comput. Phys. Commun. 81 (1994) 357, hep-ph/9401258.\n[4] F. Maltoni and T. Stelzer, JHEP 02 (2003) 027, hep-ph/0208156.\n[5] J. Alwall et al., JHEP 09 (2007) 028, arXiv:0706.2334 [hep-ph].\n[6] K. Hagiwara, H. Murayama and I. Watanabe, Nucl. Phys. B367 (1991) 257.\n[7] H. Murayama, I. Watanabe and K. Hagiwara, KEK-91-11.\n[8] F. Bloch and A. Nordsieck, Phys. Rev. 52 (1937) 54.\n[9] T. Kinoshita, J. Math. Phys. 3 (1962) 650.\n[10] T.D. Lee and M. Nauenberg, Phys. Rev. 133 (1964) B1549.\n[11] W.T. Giele and E.W.N. Glover, Phys. Rev. D46 (1992) 1980.\n[12] W.T. Giele, E.W.N. Glover and D.A. Kosower, Nucl. Phys. B403 (1993) 633, hep-ph/9302225.\n[13] S. Keller and E. Laenen, Phys. Rev. D59 (1999) 114004, hep-ph/9812415.\n[14] B.W. Harris and J.F. Owens, Phys. Rev. D65 (2002) 094032, hep-ph/0102128.\n\n27\n\n\f[15] S. Frixione, Z. Kunszt and A. Signer, Nucl. Phys. B467 (1996) 399, hep-ph/9512328.\n[16] L. Phaf and S. Weinzierl, JHEP 04 (2001) 006, hep-ph/0102207.\n[17] K. Hasegawa, S. Moch and P. Uwer, Nucl. Phys. Proc. Suppl. 183 (2008) 268, arXiv:0807.3701 [hep-ph].\n[18] K. Hasegawa, S. Moch and P. Uwer, Nucl. Phys. Proc. Suppl. 186 (2009) 86.\n[19] T. Gleisberg and F. Krauss, Eur. Phys. J. C53 (2008) 501, arXiv:0709.2881 [hep-ph].\n[20] M.H. Seymour and C. Tevlin, (2008), arXiv:0803.2231 [hep-ph].\n[21] R. Frederix, T. Gehrmann and N. Greiner, JHEP 09 (2008) 122, arXiv:0808.2128 [hep-ph].\n[22] M. Czakon, C.G. Papadopoulos and M. Worek, (2009), arXiv:0905.0883 [hep-ph].\n[23] R. Frederix et al., (2009), arXiv:0908.4272 [hep-ph].\n[24] A. Gehrmann-De Ridder, T. Gehrmann and E.W.N. Glover, Nucl. Phys. B691 (2004) 195, hep-ph/0403057.\n[25] S. Weinzierl, JHEP 03 (2003) 062, hep-ph/0302180.\n[26] S. Frixione and M. Grazzini, JHEP 06 (2005) 010, hep-ph/0411399.\n[27] G. Somogyi, Z. Trocsanyi and V. Del Duca, JHEP 06 (2005) 024, hep-ph/0502226.\n[28] A. Gehrmann-De Ridder, T. Gehrmann and E.W.N. Glover, JHEP 09 (2005) 056, hep-ph/0505111.\n[29] G. Somogyi and Z. Trocsanyi, JHEP 01 (2007) 052, hep-ph/0609043.\n[30] G. Somogyi, Z. Trocsanyi and V. Del Duca, JHEP 01 (2007) 070, hep-ph/0609042.\n[31] U. Aglietti et al., JHEP 09 (2008) 107, arXiv:0807.0514 [hep-ph].\n[32] P. Bolzoni et al., JHEP 08 (2009) 079, arXiv:0905.4390 [hep-ph].\n[33] A. Mitov and S. Moch, JHEP 05 (2007) 001, hep-ph/0612149.\n[34] E.G. Floratos, C. Kounnas and R. Lacaze, Nucl. Phys. B192 (1981) 417.\n[35] S. Dittmaier, P. Uwer and S. Weinzierl, Phys. Rev. Lett. 98 (2007) 262002, hep-ph/0703120.\n[36] S. Dittmaier, P. Uwer and S. Weinzierl, Eur. Phys. J. C59 (2009) 625, arXiv:0810.0452 [hep-ph].\n[37] Z. Xu, D.H. Zhang and L. Chang, Nucl. Phys. B291 (1987) 392.\n[38] S. Weinzierl, SACLAY-SPH-T-98-083.\n[39] C. Schwinn and S. Weinzierl, JHEP 05 (2005) 006, hep-th/0503015.\n[40] S. Dittmaier, S. Kallweit and P. Uwer, Phys. Rev. Lett. 100 (2008) 062003, arXiv:0710.1577 [hep-ph].\n[41] AutoDipole http://www-zeuthen.desy.de/ \u0303moch/autodipole or\nhttp://www.physik.hu-berlin.de/pep/tools/.\n[42] MadGraph http://madgraph.hep.uiuc.edu/ or http://madgraph.phys.ucl.ac.be/ or\nhttp://madgraph.roma2.infn.it/.\n[43] Z. Nagy and Z. Trocsanyi, Phys. Rev. D59 (1999) 014020, hep-ph/9806317.\n[44] J.M. Campbell, R.K. Ellis and F. Tramontano, Phys. Rev. D70 (2004) 094012, hep-ph/0408158.\n[45] J.M. Campbell and F. Tramontano, Nucl. Phys. B726 (2005) 109, hep-ph/0506289.\n\n28\n\n\fAppendix\nA Creation order of subtraction terms\nEmitter\nSpectator Dipole\nDipole 1\n(1) (i, j) = ( f, g) 1. k\nDi j,k\nDMi j,k\n2. b\nDi jb\nDMi jb\n(2) (i, j) = (g, g) 3. k\nDi j,k\nDMi j,k\n4. b\nDi jb\n(3) (a, i) = ( f, g) 5. k\nDaik\nDMaik\n6. b\nDai,b\n(4) (a, i) = (g, g) 7. k\nDaik\nDMaik\n8. b\nDai,b\nDipole 2\n(5) (i, j) = ( f, f \u0304)\n(i, j) = (u, \u016b) 9u. k\nDi j,k\nDMi j,k\n10u. b\nDi jb\n(i, j) = (t, t \u0304) 9t. k\nDMi j,k\n10t. b\nDMi jb\nDipole 3\n(6) (a, i) = ( f, f )\n(a, i) = (u, u) 11u. k\nDaik\nDMaik\n12u. b\nDai,b\nDipole 4\n(7) (a, i) = (g, f )\n(a, i) = (g, u) 13u. k\nDaik\nDMaik\n14u. b\nDai,b\n\nCondition\n\nEq.\n\nmi = mk = 0\nmi , 0 or mk , 0\nmi = 0\nmi , 0\nmk = 0\nmk , 0\n\u2212\u2212\u2212\nmk = 0\nmk , 0\n\u2212\u2212\u2212\nmk = 0\nmk , 0\n\u2212\u2212\u2212\n\n(5.7) in [1]\n(5.16) in [2]\n(5.39) in [1]\n(5.50) in [2]\n(5.9) in [1]\n(5.19) in [2]\n(5.40) in [1]\n(5.65) in [1]\n(5.81) in [2]\n(5.145) in [1]\n(5.68) in [1]\n(5.85) in [2]\n(5.148) in [1]\n\nmk = 0\nmk , 0\n\u2212\u2212\u2212\n\u2212\u2212\u2212\n\u2212\u2212\u2212\n\n(5.8) in [1]\n(5.17) in [2]\n(5.41) in [1]\n(5.17) in [2]\n(5.51) in [2]\n\nmk = 0\nmk , 0\n\u2212\u2212\u2212\n\n(5.67) in [1]\n(5.83) in [2]\n(5.147) in [1]\n\nmk = 0\nmk , 0\n\u2212\u2212\u2212\n\n(5.66) in [1]\n(5.82) in [2]\n(5.146) in [1]\n\nTable 2: The emitter pair is denoted (i, j) or (a, i) and, respectively, the spectator k(, i, j) or b(, a). D is a\nmassless dipole and DM is a massive dipole. The equation numbers refer to [1] for massless dipoles (D) and\nto [2] for massive ones (DM). Dipole 2 has the other flavors, massless down and massive bottom quarks.\nDipole 3 and 4 have also the other light flavors, f = \u016b, d, d\u0304.\n29\n\n\fEmitter Spectator I-terms\n(1) i = f\n1. k\nI f (i, k)\nIM1(i, k)\n2. b\nI f (i, b)\nIM2(i, b)\n(2) i = g\n3. k\nIg (i, k)\nIM3(i, k)\n4. b\nIg (i, b)\nIM4(i, b)\n(3) a = f 5. k\nI f (a, k)\nIM5(a, k)\n6. b\nI f (a, b)\n(4) a = g 7. k\nIg (a, k)\nIM7(a, k)\n8. b\nIg (a, b)\n\nCondition\nmi = mk = 0\nmi , 0 or mk , 0\nmi = 0\nmi , 0\nmk = {mF } = 0\nmk , 0 or {mF } , 0\n{mF } = 0\n{mF } , 0\nmk = 0\nmk , 0\n\u2212\u2212\u2212\nmk = 0\nmk , 0\n\u2212\u2212\u2212\n\nEq.\n(C.27) in\n(6.16) in\n(C.27) in\n(6.52) in\n(C.27) in\n(6.16) in\n(C.27) in\n(6.52) in\n(C.27) in\n(6.52) in\n(C.27) in\n(C.27) in\n(6.52) in\n(C.27) in\n\n[1]\n[2]\n[1]\n[2]\n[1]\n[2]\n[1]\n[2]\n[1]\n[2]\n[1]\n[1]\n[2]\n[1]\n\nTable 3: The emitter is denoted i or a and, respectively, the spectator k(, i) or b(, a). I is the massless\ninsertion operator and IM is a massive one. The equation numbers refer to [1] for massless insertions (I)\nand to [2] for massive ones (IM). The set of the heavy-quark masses the running in the quark loop are\nabbreviated {mF }.\n\n30\n\n\fEmitter pair\nSpectator P and K\nDipole 1\n\u2032\n(3) (a, a\u2032 , i) = ( f, f, g)\nKaa\n0\u2032\n5. k\nPaak\n\u2032\nKaak\n\u2032\nKMaak\n\u2032\n6. b\nPaa ,b\n\u2032\nKaa ,b\n\u2032\n(4) (a, a\u2032 , i) = (g, g, g)\nKaa\n0\u2032\n7. k\nPaak\n\u2032\nKaak\n\u2032\nKMaak\n\u2032\n8. b\nPaa ,b\n\u2032\nKaa ,b\nDipole 3\n(6) (a, a\u2032 , i) = ( f, g, f )\n\u2032\n(a, a\u2032 , i) = (u, g, u)\nKaa\n0\u2032\n11u. k\nPaak\n\u2032\nKMaak\n\u2032\n12u. b\nPaa ,b\n\u2032\nKaa ,b\nDipole 4\n(7) (a, a\u2032 , i) = (g, f, f \u0304)\n\u2032\n(a, a\u2032 , i) = (g, u, \u016b)\nKaa\n0\u2032\n13u. k\nPaak\n\u2032\nKMaak\n\u2032\n14u. b\nPaa ,b\n\u2032\nKaa ,b\n\nCondition\n\nEq.\n\n\u2212\u2212\u2212\n\u2212\u2212\u2212\nmk = 0\nmk , 0 or {mF } , 0\n\u2212\u2212\u2212\n\u2212\u2212\u2212\n\u2212\u2212\u2212\n\u2212\u2212\u2212\nmk = 0\nmk , 0 or {mF } , 0\n\u2212\u2212\u2212\n\u2212\u2212\u2212\n\n(C.17) in\n(C.29) in\n(C.31) in\n(6.55) in\n(C.29) in\n(C.33) in\n(C.18) in\n(C.29) in\n(C.31) in\n(6.55) in\n(C.29) in\n(C.33) in\n\n[1]\n[1]\n[1]\n[2]\n[1]\n[1]\n[1]\n[1]\n[1]\n[2]\n[1]\n[1]\n\n\u2212\u2212\u2212\n\u2212\u2212\u2212\nmk , 0\n\u2212\u2212\u2212\n\u2212\u2212\u2212\n\n(C.15) in\n(C.29) in\n(6.55) in\n(C.29) in\n(C.33) in\n\n[1]\n[1]\n[2]\n[1]\n[1]\n\n\u2212\u2212\u2212\n\u2212\u2212\u2212\nmk , 0\n\u2212\u2212\u2212\n\u2212\u2212\u2212\n\n(C.16) in\n(C.29) in\n(6.55) in\n(C.29) in\n(C.33) in\n\n[1]\n[1]\n[2]\n[1]\n[1]\n\nTable 4: The emitter is denoted a\u2032 and different from spectator b(, a\u2032 ). The massless case is abbreviated K\nand massive one KM. The equation numbers refer to [1] for massless insertions (K) and to [2] for massive\nones (KM). For the cases Dipole 3 and 4, f can take the light flavors f = u, \u016b, d, d\u0304 and so on.\n\n31\n\n\fB Correlation functions of gluon emitter\nWe use the following definitions of spinor products [37]:\nq\nq\nhk1 k2 i =\nk1\u2212 k2+ e+i\u03c6(k1 ) \u2212 k1+ k2\u2212 e+i\u03c6(k2 )\nk\u00b1 = |~k| \u00b1 kz\nk\u22a5\ne+i\u03c6(k) =\n|k\u22a5 |\nk\u22a5 = k x + iky\n\n(B.1)\n(B.2)\n(B.3)\n(B.4)\n\nIf the reduced momentum of the initial gluon emitter lies in z-axis with l = E l (1, 0, 0, \u00b11) the spinor\nproduct are defined as hpi p\u0303ai iz to avoid an ambiguity in the intermediate steps of the calculation,\n( \u221a\n2E\u221al k\u2212 e+i\u03c6(k) (E l = lz )\nhkliz =\n(B.5)\n(E l = \u2212lz )\n\u2212 2E l k+\n(\n\u221a\n\u22122\u221a E 1 E 2 (E 1 = l1z and E 2 = \u2212l2z )\n(B.6)\nzhl1 l2 iz =\n2 E 1 E 2 (E 1 = \u2212l1z and E 2 = l2z )\nThe explicit forms of e+i\u03c6(k) E+ in Eq. (3.23) are shown for all massless and massive dipoles with\na gluon emitter. Here we write the quantity including the phase difference as E\u2032+ = e+i\u03c6(k) E+ .\nThe reduced momenta are ones used in the corresponding equations in [1, 2], which are shown in\n \u0303 i j are massive ones.\nTable 2. The p\u0303i j1 and p\u0303ai are massless and the pM\n\nMassless momenta\n[Dipole 1-(2)-3(mk = 0) and Dipole 2-(5)-9u(mk = 0)]\nE1\u2032+\n\n+i\u03c6( p\u0303i j ) zi hp j pi ih p\u0303i j pi i\n\n=e\n\n\u22c6\n\n(B.7)\n\n\u221a\n2hp j p\u0303i j i\n\n[Dipole 1-(2)-4 and Dipole 2-(5)-10u(mk = 0)]\nE2\u2032+\n\n+i\u03c6( p\u0303i j ) zi hp j pi ih p\u0303i j pi i\n\n=e\n\n\u221a\n2hp j p\u0303i j i\n\n\u22c6\n\n(B.8)\n\n[Dipole 1-(4)-7(mk = 0) and Dipole 3-(6)-11u(mk = 0)]\nE3\u2032+\n\nhpi pk ihpk p\u0303ai i\u22c6\nz\n= \u221a\n2(1 \u2212 ui )hpi p\u0303ai iz\n\n(B.9)\n\n[Dipole 1-(4)-8 and Dipole 3-(6)-12u]\nE4\u2032+ =\n\n\u2212sai hpi pb iz zh p\u0303ai pb iz\n\u221a\n2sab hpi p\u0303ai iz\n32\n\n(B.10)\n\n\fMassive momenta\n[Dipole 1-(2)-3((mk , 0)) and Dipole 2-(5)-9u((mk , 0))]\nE M1\u2032+\n\n(m)\n\u22c6\n \u0303\n \u0303 i j ) zi hp j pi ih pM i j pi i\n+i\u03c6( pM\n\n=e\n\n\u221a\n \u0303 i ji\n2hp j pM\n\n(B.11)\n\n[Dipole 2-(5)-9t]\nE M1\u20329t+\n\n \u0303 i j p\u266d i \u22c6\nz(m) hp\u266dj p\u266di ih pM\ni\n \u0303 i j) i\n+i\u03c6( pM\n=e\n\u221a \u266d\n \u0303 i ji\n2hp j pM\n\n(B.12)\n\nwith flat momentum\np\u266di( j)\n\n= pi( j) \u2212\n\nm2i( j)\n \u0303 ij\n2pi( j) * pM\n\n \u0303 ij\npM\n\n(B.13)\n\n[Dipole 2-(5)-10t]\nE M2\u2032+\n\n \u0303 i j)\n+i\u03c6( pM\n\n=e\n\n \u0303 i j p\u266d i\u22c6\nzi hp\u266dj p\u266di ih pM\ni\n\u221a \u266d\n \u0303 i ji\n2hp j pM\n\n(B.14)\n\nwith\np\u266di( j)\n\n= pi( j) \u2212\n\nm2i( j)\n \u0303 ij\n2pi( j) * pM\n\n \u0303 ij\npM\n\n(B.15)\n\n[Dipole 1-(4)-7((mk , 0)) and Dipole 3-(6)-11u((mk , 0))]\nE M3\u2032+\n\nhpi p\u266dk ihp\u266dk p\u0303ai i\u22c6\nz\n= \u221a\n2(1 \u2212 ui )hpi p\u0303ai iz\n\n(B.16)\n\nwith\np\u266dk\n\n= pk \u2212\n\nm2k\n2pk * p\u0303ai\n\n33\n\np\u0303ai\n\n(B.17)\n\n\fC Comparison with the tt \u0304 + 1jet\n\nAutoDipole\nRef. [36]\nAutoDipole\nRef. [36]\nAutoDipole\nRef. [36]\nAutoDipole\nRef. [36]\nAutoDipole\nRef. [36]\nAutoDipole\nRef. [36]\nAutoDipole\nRef. [40]\n\nb0 [ GeV\u22124 ]\nd0 [ GeV\u22124 ]\ng(pa )g(pb ) \u2192 t(pt )t \u0304(pt \u0304)g(pc )g(pd )\n7.82039670869613 * 10\u221210\n1.02594003852407 * 10\u22129\n7.82039670869604(1) * 10\u221210 1.02594003852396(2) * 10\u22129\nq(pa )q\u0304(pb ) \u2192 t(pt )t \u0304(pt \u0304)g(pc )g(pd )\n1.12077211361620 * 10\u221210\n1.22619016939900 * 10\u221210\n1.12077211361619(0) * 10\u221210 1.22619016939909(1) * 10\u221210\nq(pa )g(pb ) \u2192 t(pt )t \u0304(pt \u0304)g(pc )q(pd )\n2.75641273146785 * 10\u221211\n4.79768338384667 * 10\u221211\n2.75641273146783(0) * 10\u221211 4.79768338384625(3) * 10\u221211\nq\u0304(pa )g(pb ) \u2192 t(pt )t \u0304(pt \u0304)q\u0304(pc )g(pd )\n3.46150168295956 * 10\u221211\n8.34555795894942 * 10\u221211\n3.46150168295954(1) * 10\u221211 8.34555795894963(2) * 10\u221211\ng(pa )g(pb ) \u2192 t(pt )t \u0304(pt \u0304)q\u0304(pc )q(pd )\n1.21420520114780 * 10\u221211\n2.13553289076589 * 10\u221211\n1.21420520114779(0) * 10\u221211 2.13553289076550(3) * 10\u221211\nq(pa )q\u0304(pb ) \u2192 t(pt )t \u0304(pt \u0304)q\u0304(pc )q(pd )\n5.13710959990068 * 10\u221212\n9.06330902408356 * 10\u221212\n\u221212\n5.13710959990064(1) * 10\n9.06330902408275(3) * 10\u221212\nu(pa )\u016b(pb ) \u2192 W + (pw+ )W \u2212 (pw\u2212 )g(pc )g(pd )\n0.627402537098012 * 10\u22129\n0.114149934878320 * 10\u22128\n\u22129\n0.627402537098007 * 10\n0.114149934878319 * 10\u22128\n\nTable 5: The results of the |M|2 and the sum of all dipole terms are shown. The two implementations agree at least to 14 digits for the matrix elements squared and at least to 12 digits for the sum\nof the subtraction terms. The phase space point used in the last entry corresponds to the first one\nin ./lib/check/check5_uux_w+w-gg/inputm_uux_w+w-gg.h.\n\n34\n\n\fc\u22122\nAutoDipole 2.49467966948003 * 10\u22124\nRef. [36]\n2.49467966948004(1) * 10\u22124\n\n35\n\nAutoDipole 1.38499897972387 * 10\u22125\nRef. [36]\n1.38499897972387(0) * 10\u22125\nAutoDipole 3.84580760674706 * 10\u22126\nRef. [36]\n3.84580760674706(0) * 10\u22126\nAutoDipole 6.22738241305372 * 10\u22125\nRef. [36]\n6.22738241305372(0) * 10\u22125\n\nc\u22121\ngg \u2192 tt \u0304g\n3.68989776683705 * 10\u22124\n3.68989776683706(1) * 10\u22124\nu\u016b \u2192 tt \u0304g\n2.88738914389178 * 10\u22125\n2.88738914389179(1) * 10\u22125\nug \u2192 tt \u0304u\n7.73777480040817 * 10\u22126\n7.73777480040817(1) * 10\u22126\ng\u016b \u2192 tt \u0304\u016b\n6.81530745255038 * 10\u22125\n6.81530745255037(1) * 10\u22125\n\nc0\n\u22124.05387364353899 * 10\u22124\n\u22124.05387364353900(1) * 10\u22124\n\u22121.56576469322102 * 10\u22125\n\u22121.56576469322102(0) * 10\u22125\n\u22125.19929995897616 * 10\u22126\n\u22125.19929995897616(1) * 10\u22126\n\u22121.52377227863896 * 10\u22124\n\u22121.52377227863896(0) * 10\u22124\n\nTable 6: The coefficients for the color and spin averaged results for the I-operator. At least 14 digits agreements are obtained.\n\n\f"}